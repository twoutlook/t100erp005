<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="adbt450" std_prog="adbt450" erpver="1.0" module="ADB" ver="1" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.adbt450_dbdasite_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt450_dbdasite_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_dbda_m.dbdasite
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_dbda_m.dbdasite_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_dbda_m.dbdasite_desc
END FUNCTION]]>
  </point>
  <point name="function.adbt450_dbda001_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt450_dbda001_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_dbda_m.dbda001
      CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_dbda_m.dbda001_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_dbda_m.dbda001_desc
END FUNCTION]]>
  </point>
  <point name="function.adbt450_dbda002_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt450_dbda002_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_dbda_m.dbda002
      CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_dbda_m.dbda002_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_dbda_m.dbda002_desc
END FUNCTION]]>
  </point>
  <point name="function.adbt450_dbda004_ref" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt450_dbda004_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_dbda_m.dbda004
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_dbda_m.dbda004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_dbda_m.dbda004_desc
END FUNCTION]]>
  </point>
  <point name="function.adbt450_dbda005_ref" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt450_dbda005_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_dbda_m.dbda005
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_dbda_m.dbda005_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_dbda_m.dbda005_desc
END FUNCTION]]>
  </point>
  <point name="function.adbt450_dbdb005_ref" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt450_dbdb005_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_dbdb_d[l_ac].dbdb005
      CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_dbdb_d[l_ac].dbdb005_desc = '', g_rtn_fields[1] , ''
      LET g_dbdb_d[l_ac].dbdb005_desc_desc = '', g_rtn_fields[2] , ''
      DISPLAY BY NAME g_dbdb_d[l_ac].dbdb005_desc
      DISPLAY BY NAME g_dbdb_d[l_ac].dbdb005_desc_desc
END FUNCTION]]>
  </point>
  <point name="function.adbt450_dbdb009_ref" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt450_dbdb009_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_dbdb_d[l_ac].dbdb009
      CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_dbdb_d[l_ac].dbdb009_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_dbdb_d[l_ac].dbdb009_desc
END FUNCTION]]>
  </point>
  <point name="function.adbt450_get_dbdb010" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt450_get_dbdb010()
   DEFINE l_rate      LIKE dbdb_t.dbdb011
   DEFINE l_success   LIKE type_t.num5
   
   LET l_success = TRUE
   LET g_dbdb_d[l_ac].dbdb010 = ""
   SELECT imaf053
     INTO g_dbdb_d[l_ac].dbdb010
     FROM imaf_t
    WHERE imafent = g_enterprise
      AND imafsite = g_dbda_m.dbdasite
      AND imaf001 = g_dbdb_d[l_ac].dbdb005
   IF cl_null(g_dbdb_d[l_ac].dbdb010) THEN
      CALL cl_err("",'sub-00476',1)
      LET l_success = FALSE
      RETURN l_success
   END IF
   IF NOT cl_null(g_dbdb_d[l_ac].dbdb009) AND NOT cl_null(g_dbdb_d[l_ac].dbdb010) THEN
      CALL s_aimi190_get_convert(g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb009,g_dbdb_d[l_ac].dbdb010) RETURNING l_success,l_rate
      IF l_success THEN
         LET g_dbdb_d[l_ac].dbdb011 = l_rate
      END IF
   END IF
   RETURN l_success
END FUNCTION]]>
  </point>
  <point name="function.adbt450_get_dbdb009" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt450_get_dbdb009()
   DEFINE l_rate      LIKE dbdb_t.dbdb011
   DEFINE l_success   LIKE type_t.num5

   LET l_success = TRUE
   IF cl_null(g_dbdb_d[l_ac].dbdb009) THEN
      SELECT imaf112
        INTO g_dbdb_d[l_ac].dbdb009
        FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite = g_dbda_m.dbdasite
         AND imaf001 = g_dbdb_d[l_ac].dbdb005
         
      CALL adbt450_dbdb009_ref()
   END IF
      
   IF NOT cl_null(g_dbdb_d[l_ac].dbdb009) AND NOT cl_null(g_dbdb_d[l_ac].dbdb010) THEN
      CALL s_aimi190_get_convert(g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb009,g_dbdb_d[l_ac].dbdb010) RETURNING l_success,l_rate
      IF l_success THEN
         LET g_dbdb_d[l_ac].dbdb011 = l_rate
      END IF
   END IF
   RETURN l_success
END FUNCTION]]>
  </point>
  <point name="function.adbt450_set_required_b" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt450_set_required_b()
   DEFINE l_imaf055  LIKE imaf_t.imaf055
   DEFINE l_imaf056  LIKE imaf_t.imaf056
   
   SELECT imaf055,imaf056 INTO l_imaf055,l_imaf056 FROM imaf_t WHERE imafent = g_enterprise AND imafsite = g_dbda_m.dbdasite AND imaf001 = g_dbdb_d[l_ac].dbdb005
   IF l_imaf055 != '0' AND l_imaf056 = 'N' THEN
      CALL cl_set_comp_required("dbdb006",TRUE)
   END IF
END FUNCTION]]>
  </point>
  <point name="function.adbt450_get_imaa005" order="11" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt450_get_imaa005(p_imaa001)
   DEFINE p_imaa001      LIKE imaa_t.imaa001
   DEFINE r_imaa005      LIKE imaa_t.imaa005

   LET r_imaa005 = ''
   SELECT imaa005 INTO r_imaa005 
     FROM imaa_t 
    WHERE imaaent = g_enterprise 
      AND imaa001 = p_imaa001
      
   RETURN r_imaa005  
END FUNCTION]]>
  </point>
  <point name="function.adbt450_set_no_required_b" order="12" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION adbt450_set_no_required_b()
   CALL cl_set_comp_required("dbdb006",FALSE)
END FUNCTION]]>
  </point>
  <point name="construct.c.dbda001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_17()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbda001  #顯示到畫面上
            NEXT FIELD dbda001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dbda002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmac002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbda002  #顯示到畫面上
            NEXT FIELD dbda002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dbda004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbda004  #顯示到畫面上
            NEXT FIELD dbda004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dbda005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "H"
            CALL q_ooef001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbda005  #顯示到畫面上
            NEXT FIELD dbda005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dbdacnfid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdacnfid  #顯示到畫面上
            NEXT FIELD dbdacnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dbdacrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdacrtdp  #顯示到畫面上
            NEXT FIELD dbdacrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dbdacrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdacrtid  #顯示到畫面上
            NEXT FIELD dbdacrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dbdadocno" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbdadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdadocno  #顯示到畫面上
            NEXT FIELD dbdadocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dbdamodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdamodid  #顯示到畫面上
            NEXT FIELD dbdamodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dbdaowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdaowndp  #顯示到畫面上
            NEXT FIELD dbdaowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dbdaownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdaownid  #顯示到畫面上
            NEXT FIELD dbdaownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dbdapstid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdapstid  #顯示到畫面上
            NEXT FIELD dbdapstid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.dbdasite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = '2'
            CALL q_ooed004_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdasite  #顯示到畫面上
            NEXT FIELD dbdasite                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.dbdb004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdb004  #顯示到畫面上
            NEXT FIELD dbdb004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.dbdb005" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdb005  #顯示到畫面上
            NEXT FIELD dbdb005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.dbdb007" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbdb007()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdb007  #顯示到畫面上
            NEXT FIELD dbdb007                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.dbdb009" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdb009  #顯示到畫面上
            NEXT FIELD dbdb009                     #返回原欄位
    

]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF cl_null(g_wc) THEN
      LET g_wc = " dbda000 = '", g_argv[1] ,"'"
   ELSE
      LET g_wc = g_wc CLIPPED, " AND dbda000 = '", g_argv[1] ,"'"
   END IF]]>
  </point>
  <point name="default_search.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = " dbda000 = '", g_argv[1], "' AND "
      LET g_wc = " dbda000 = '", g_argv[1], "'"
   END IF]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   #IF g_dbda_m.dbdastus = 'N' THEN
   IF g_dbda_m.dbdastus MATCHES "[NDR]" THEN
      CALL cl_set_act_visible("modify,delete,modify_detail",TRUE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
   END IF 
]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('dbda000','6054') 
   CALL cl_set_combo_scc('dbdb001','6053')
   LET g_errshow = '1'  
   IF g_argv[1] <> '1' THEN
      CALL cl_set_comp_visible('dbda006',FALSE)  
   END IF      ]]>
  </point>
  <point name="input.a.dbda001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_dbda_m.dbda001) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_dbda_m.dbda001
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pmaa001_13") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_dbda_m.dbda001 = g_dbda_m_t.dbda001
                  CALL adbt450_dbda001_ref()
                  NEXT FIELD CURRENT
               END IF
               
               SELECT COUNT(*)
                 INTO l_cnt
                 FROM pmac_t
                WHERE pmacent = g_enterprise
                  AND pmac001 = g_dbda_m.dbda001
                  AND pmac003 = '1'
                  AND pmacstus = "Y"
                  AND pmac002 = g_dbda_m.dbda002
               IF l_cnt = 0 THEN
                  LET g_dbda_m.dbda002 = NULL
                  SELECT pmac002
                    INTO g_dbda_m.dbda002
                    FROM pmac_t
                   WHERE pmacent = g_enterprise
                     AND pmac001 = g_dbda_m.dbda001
                     AND pmac003 = '1'
                     AND pmac004 = "Y"
                     AND pmacstus = "Y"
                  
                  CALL adbt450_dbda002_ref()
               END IF
            END IF 
            CALL adbt450_dbda001_ref()
]]>
  </point>
  <point name="input.a.dbda002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_dbda_m.dbda002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_dbda_m.dbda001
               LET g_chkparam.arg2 = g_dbda_m.dbda002
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pmac002_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_dbda_m.dbda002 = g_dbda_m_t.dbda002
                  CALL adbt450_dbda002_ref()
                  NEXT FIELD CURRENT
               END IF
            ELSE   
               
            END IF 
            CALL adbt450_dbda002_ref()
]]>
  </point>
  <point name="input.a.dbda004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_dbda_m.dbda004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_dbda_m.dbda004
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_dbda_m.dbda004 = g_dbda_m_t.dbda004
                  CALL adbt450_dbda004_ref()
                  NEXT FIELD CURRENT
               END IF
               
               SELECT ooag003
                 INTO g_dbda_m.dbda005
                 FROM ooag_t
                WHERE ooagent = g_enterprise
                  AND ooag001 = g_dbda_m.dbda004
                  AND ooagstus = "Y"
               CALL adbt450_dbda005_ref()
            END IF 
            CALL adbt450_dbda004_ref()
]]>
  </point>
  <point name="input.a.dbda005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_dbda_m.dbda005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_dbda_m.dbda005
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001_14") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_dbda_m.dbda005 = g_dbda_m_t.dbda005
                  CALL adbt450_dbda005_ref()
                  NEXT FIELD CURRENT
               END IF

            END IF 
            CALL adbt450_dbda005_ref()
]]>
  </point>
  <point name="input.a.dbdadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF p_cmd = 'a' THEN
               LET g_dbda_m.dbda003 = g_dbda_m.dbdadocdt
            END IF]]>
  </point>
  <point name="input.a.dbdadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT s_aooi200_chk_slip(g_dbda_m.dbdasite,'',g_dbda_m.dbdadocno,g_prog) THEN
               LET g_dbda_m.dbdadocno = ''
               NEXT FIELD CURRENT 
            END IF
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_dbda_m.dbdadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_dbda_m.dbdadocno != g_dbdadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM dbda_t WHERE "||"dbdaent = '" ||g_enterprise|| "' AND "||"dbdadocno = '"||g_dbda_m.dbdadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
]]>
  </point>
  <point name="input.a.dbdasite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_dbda_m.dbdasite) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_dbda_m.dbdasite
               LET g_chkparam.arg2 = '2'
               LET g_chkparam.arg3 = g_site
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooed004") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_dbda_m.dbdasite = g_dbda_m_t.dbdasite
                  CALL adbt450_dbdasite_ref()
                  NEXT FIELD CURRENT
               END IF
            
            
            END IF 
            CALL adbt450_dbdasite_ref()
]]>
  </point>
  <point name="input.a.page1.dbdb001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page1.dbdb004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_dbdb_d[l_ac].dbdb004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_dbdb_d[l_ac].dbdb004
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imay003_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_dbdb_d[l_ac].dbdb004 = g_dbdb_d_t.dbdb004
                  NEXT FIELD CURRENT
               END IF
               LET g_dbdb_d[l_ac].dbdb005 = ""
               LET g_dbdb_d[l_ac].dbdb009 = ""
               SELECT imay001,imay004
                 INTO g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb009
                 FROM imay_t
                WHERE imayent = g_enterprise
                  AND imay003 = g_dbdb_d[l_ac].dbdb004
               CALL adbt450_get_dbdb010() RETURNING l_success
               IF NOT l_success OR cl_null(g_dbdb_d[l_ac].dbdb010) THEN
                  LET g_dbdb_d[l_ac].dbdb004 = g_dbdb_d_t.dbdb004
                  LET g_dbdb_d[l_ac].dbdb005 = g_dbdb_d_t.dbdb005
                  LET g_dbdb_d[l_ac].dbdb009 = g_dbdb_d_t.dbdb009
                  LET g_dbdb_d[l_ac].dbdb010 = g_dbdb_d_t.dbdb010
                  CALL adbt450_dbdb005_ref()
                  CALL adbt450_dbdb009_ref()
                  NEXT FIELD dbdb004
               END IF
               CALL adbt450_dbdb005_ref()
               CALL adbt450_dbdb009_ref()
            ELSE
               CALL adbt450_get_dbdb009() RETURNING l_success
               IF NOT l_success THEN
                  LET g_dbdb_d[l_ac].dbdb004 = g_dbdb_d_t.dbdb004
                  LET g_dbdb_d[l_ac].dbdb005 = g_dbdb_d_t.dbdb005
                  LET g_dbdb_d[l_ac].dbdb009 = g_dbdb_d_t.dbdb009
                  LET g_dbdb_d[l_ac].dbdb010 = g_dbdb_d_t.dbdb010
                  CALL adbt450_dbdb005_ref()
                  CALL adbt450_dbdb009_ref()
                  NEXT FIELD dbdb004
               END IF
            END IF 

            CALL adbt450_set_entry_b(p_cmd)
            CALL adbt450_set_no_required_b()
            CALL adbt450_set_required_b()
            CALL adbt450_set_no_entry_b(p_cmd)
            ]]>
  </point>
  <point name="input.a.page1.dbdb005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_dbdb_d[l_ac].dbdb005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_dbdb_d[l_ac].dbdb005
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imaa001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_dbdb_d[l_ac].dbdb005 = g_dbdb_d_t.dbdb005
                  CALL adbt450_dbdb005_ref()
                  NEXT FIELD CURRENT
               END IF
                
               LET g_dbdb_d[l_ac].dbdb004 = ""
               SELECT imaa014
                 INTO g_dbdb_d[l_ac].dbdb004
                 FROM imaa_t
                WHERE imaaent = g_enterprise
                  AND imaa001 = g_dbdb_d[l_ac].dbdb005
                  
               IF NOT cl_null(g_dbdb_d[l_ac].dbdb004) THEN 
                  LET g_dbdb_d[l_ac].dbdb009 = ""
                  SELECT imay004
                    INTO g_dbdb_d[l_ac].dbdb009
                    FROM imay_t
                   WHERE imayent = g_enterprise
                     AND imay003 = g_dbdb_d[l_ac].dbdb004
                  CALL adbt450_dbdb009_ref()
               END IF

               IF cl_null(g_dbdb_d[l_ac].dbdb004) THEN
                  CALL adbt450_get_dbdb009() RETURNING l_success
                  IF NOT l_success THEN
                     LET g_dbdb_d[l_ac].dbdb004 = g_dbdb_d_t.dbdb004
                     LET g_dbdb_d[l_ac].dbdb005 = g_dbdb_d_t.dbdb005
                     LET g_dbdb_d[l_ac].dbdb009 = g_dbdb_d_t.dbdb009
                     CALL adbt450_dbdb005_ref()
                     CALL adbt450_dbdb009_ref()
                     NEXT FIELD dbdb005
                  END IF
               END IF
               CALL adbt450_get_dbdb010() RETURNING l_success
               IF NOT l_success OR cl_null(g_dbdb_d[l_ac].dbdb010) THEN
                  LET g_dbdb_d[l_ac].dbdb005 = g_dbdb_d_t.dbdb005
                  CALL adbt450_dbdb005_ref()
                  NEXT FIELD dbdb005
               END IF 
            ELSE
               LET g_dbdb_d[l_ac].dbdb006 = ""
               LET g_dbdb_d[l_ac].dbdb007 = ""
            END IF 
            CALL adbt450_dbdb005_ref()
            CALL adbt450_set_entry_b(p_cmd)
            CALL adbt450_set_no_required_b()
            CALL adbt450_set_required_b()
            CALL adbt450_set_no_entry_b(p_cmd)
]]>
  </point>
  <point name="input.a.page1.dbdb006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF cl_null(g_dbdb_d[l_ac].dbdb006) THEN
               LET g_dbdb_d[l_ac].dbdb006 = " "
            END IF]]>
  </point>
  <point name="input.a.page1.dbdb007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF cl_null(g_dbdb_d[l_ac].dbdb007) THEN
               LET g_dbdb_d[l_ac].dbdb007 = " "
            END IF]]>
  </point>
  <point name="input.a.page1.dbdb008" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_dbdb_d[l_ac].dbdb008) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.dbdb009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_dbdb_d[l_ac].dbdb009) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_dbdb_d[l_ac].dbdb005
               LET g_chkparam.arg2 = g_dbdb_d[l_ac].dbdb009
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imao002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_dbdb_d[l_ac].dbdb009 = g_dbdb_d_t.dbdb009
                  CALL adbt450_dbdb009_ref()
                  NEXT FIELD CURRENT
               END IF
               
               CALL adbt450_get_dbdb010() RETURNING l_success
               IF NOT l_success THEN
                  LET g_dbdb_d[l_ac].dbdb009 = g_dbdb_d_t.dbdb009
                  CALL adbt450_dbdb009_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF 
            CALL adbt450_dbdb009_ref()
]]>
  </point>
  <point name="input.a.page1.dbdbseq" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_dbda_m.dbdadocno IS NOT NULL AND g_dbdb_d[g_detail_idx].dbdbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_dbda_m.dbdadocno != g_dbdadocno_t OR g_dbdb_d[g_detail_idx].dbdbseq != g_dbdb_d_t.dbdbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM dbdb_t WHERE "||"dbdbent = '" ||g_enterprise|| "' AND "||"dbdbdocno = '"||g_dbda_m.dbdadocno ||"' AND "|| "dbdbseq = '"||g_dbdb_d[g_detail_idx].dbdbseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.b.page1.dbdb001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.b.page1.dbdb006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.b.page1.dbdb009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         IF p_cmd = 'a' THEN
            NEXT FIELD dbdasite
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD dbdbseq
 
            END CASE
         END IF]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL cl_set_combo_scc('dbdb001','6053') ]]>
  </point>
  <point name="input.body.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF cl_null(g_dbdb_d[l_ac].dbdb010) THEN
                  LET g_dbdb_d[l_ac].dbdb010 = " "
               END IF]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            SELECT MAX(dbdbseq)+1 INTO g_dbdb_d[l_ac].dbdbseq FROM dbdb_t 
             WHERE dbdbent = g_enterprise AND dbdbdocno = g_dbda_m.dbdadocno
            IF cl_null(g_dbdb_d[l_ac].dbdbseq) THEN
               LET g_dbdb_d[l_ac].dbdbseq = 1
            END IF
            LET g_dbdb_d[l_ac].dbdb006 = " "
            LET g_dbdb_d[l_ac].dbdb007 = " "
            LET g_dbdb_d[l_ac].dbdbsite = g_dbda_m.dbdasite
            LET g_dbdb_d[l_ac].dbdbunit = g_dbda_m.dbdasite]]>
  </point>
  <point name="input.c.dbda001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbda_m.dbda001             #給予default值

            #給予arg

            
            CALL q_pmaa001_17()                                #呼叫開窗

            LET g_dbda_m.dbda001 = g_qryparam.return1              

            DISPLAY g_dbda_m.dbda001 TO dbda001              #
            CALL adbt450_dbda001_ref()
            NEXT FIELD dbda001                          #返回原欄位

]]>
  </point>
  <point name="input.c.dbda002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbda_m.dbda002             #給予default值
            LET g_qryparam.default2 = "" #g_dbda_m.pmaal004 #交易對象簡稱
            #給予arg
            LET g_qryparam.arg1 = g_dbda_m.dbda001
            LET g_qryparam.arg2 = "1" 
            
            CALL q_pmac002_1()                                #呼叫開窗

            LET g_dbda_m.dbda002 = g_qryparam.return1              
            #LET g_dbda_m.pmaal004 = g_qryparam.return2 
            DISPLAY g_dbda_m.dbda002 TO dbda002              #
            #DISPLAY g_dbda_m.pmaal004 TO pmaal004 #交易對象簡稱
            CALL adbt450_dbda002_ref()
            NEXT FIELD dbda002                          #返回原欄位

]]>
  </point>
  <point name="input.c.dbda004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbda_m.dbda004             #給予default值

            #給予arg

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_dbda_m.dbda004 = g_qryparam.return1              

            DISPLAY g_dbda_m.dbda004 TO dbda004              #
            CALL adbt450_dbda004_ref()
            NEXT FIELD dbda004                          #返回原欄位

]]>
  </point>
  <point name="input.c.dbda005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbda_m.dbda005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "H" 

            
            CALL q_ooef001_3()                                #呼叫開窗

            LET g_dbda_m.dbda005 = g_qryparam.return1              

            DISPLAY g_dbda_m.dbda005 TO dbda005              #
            CALL adbt450_dbda005_ref()
            NEXT FIELD dbda005                          #返回原欄位

]]>
  </point>
  <point name="input.c.dbdadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbda_m.dbdadocno             #給予default值

            #給予arg
            CALL s_aooi100_sel_ooef004(g_dbda_m.dbdasite)
                 RETURNING l_success,l_ooef004
            LET g_qryparam.arg1 = l_ooef004
            LET g_qryparam.arg2 = g_prog
            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_dbda_m.dbdadocno = g_qryparam.return1              

            DISPLAY g_dbda_m.dbdadocno TO dbdadocno              #

            NEXT FIELD dbdadocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.dbdasite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbda_m.dbdasite             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = "2" 
            
            CALL q_ooed004_3()                                #呼叫開窗

            LET g_dbda_m.dbdasite = g_qryparam.return1              

            DISPLAY g_dbda_m.dbdasite TO dbdasite              #
            CALL adbt450_dbdasite_ref()
            NEXT FIELD dbdasite                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.dbdb004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbdb_d[l_ac].dbdb004             #給予default值

            #給予arg

            
            CALL q_imay003_6()                                #呼叫開窗

            LET g_dbdb_d[l_ac].dbdb004 = g_qryparam.return1              

            DISPLAY g_dbdb_d[l_ac].dbdb004 TO dbdb004              #

            NEXT FIELD dbdb004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.dbdb005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbdb_d[l_ac].dbdb005             #給予default值
            LET g_qryparam.default2 = "" #g_dbdb_d[l_ac].imaal003 #品名
            LET g_qryparam.default3 = "" #g_dbdb_d[l_ac].imaal004 #規格
            #給予arg

            
            CALL q_imaa001()                                #呼叫開窗

            LET g_dbdb_d[l_ac].dbdb005 = g_qryparam.return1              
            #LET g_dbdb_d[l_ac].imaal003 = g_qryparam.return2 
            #LET g_dbdb_d[l_ac].imaal004 = g_qryparam.return3 
            DISPLAY g_dbdb_d[l_ac].dbdb005 TO dbdb005              #
            #DISPLAY g_dbdb_d[l_ac].imaal003 TO imaal003 #品名
            #DISPLAY g_dbdb_d[l_ac].imaal004 TO imaal004 #規格
            CALL adbt450_dbdb005_ref()
            NEXT FIELD dbdb005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.dbdb006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #取得料件產品特徵
            LET l_imaa005 = ''
            CALL adbt450_get_imaa005(g_dbdb_d[l_ac].dbdb005) RETURNING l_imaa005
               
            IF NOT cl_null(l_imaa005) THEN
               #IF l_cmd = 'a' THEN            
               #   CALL l_inam.clear()            
               #   CALL s_feature(l_cmd,g_inbb_d[l_ac].inbb001,'','',g_site,g_inba_m.inbadocno) RETURNING l_success,l_inam
               #   LET g_inbb_d[l_ac].inbb002 = l_inam[1].inam002
               #   LET g_inbb_d[l_ac].inbb011 = l_inam[1].inam004
               #   DISPLAY BY NAME g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb011 
               #END IF
               #IF l_cmd = 'u' THEN
                  CALL s_feature_single(g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb006,g_dbda_m.dbdasite,g_dbda_m.dbdadocno)
                     RETURNING l_success,g_dbdb_d[l_ac].dbdb006
                  DISPLAY BY NAME g_dbdb_d[l_ac].dbdb006
               #END IF
            END IF    ]]>
  </point>
  <point name="input.c.page1.dbdb009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbdb_d[l_ac].dbdb009             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_dbdb_d[l_ac].dbdb005
            
            CALL q_imao002()                                #呼叫開窗

            LET g_dbdb_d[l_ac].dbdb009 = g_qryparam.return1              

            DISPLAY g_dbdb_d[l_ac].dbdb009 TO dbdb009              #
            CALL adbt450_dbdb009_ref()
            NEXT FIELD dbdb009                          #返回原欄位

]]>
  </point>
  <point name="input.d.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL cl_set_combo_scc_part('dbdb001','6053','2,3,4,5')]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_flag                LIKE type_t.num5
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_imaa005       LIKE imaa_t.imaa005       #特徵類別
   DEFINE  l_inam          DYNAMIC ARRAY OF RECORD   #記錄產品特徵
              inam001      LIKE inam_t.inam001,
              inam002      LIKE inam_t.inam002,
              inam004      LIKE inam_t.inam004
                        END RECORD]]>
  </point>
  <point name="input.g.dbda001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.g.dbda004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.g.page1.dbdb001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT s_aooi200_chk_slip(g_dbda_m.dbdasite,'',g_dbda_m.dbdadocno,g_prog) THEN
                  LET g_dbda_m.dbdadocno = ''
                  NEXT FIELD dbdadocno 
               END IF
               
               CALL s_aooi200_gen_docno(g_dbda_m.dbdasite,g_dbda_m.dbdadocno,g_dbda_m.dbdadocdt,g_prog) RETURNING l_flag,g_dbda_m.dbdadocno
               IF NOT l_flag THEN
                  NEXT FIELD dbdadocno
               END IF  ]]>
  </point>
  <point name="input.more_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_dbda_m.dbdasite = g_site
      CALL adbt450_dbdasite_ref()
      LET g_dbda_m.dbdaunit = g_site
      LET g_dbda_m.dbdastus = "N"
      LET g_dbda_m.dbdadocdt = g_today
      LET g_dbda_m.dbda003 = g_today
      LET g_dbda_m.dbda004 = g_user
      CALL adbt450_dbda004_ref()
      LET g_dbda_m.dbda005 = g_dept
      CALL adbt450_dbda005_ref()
      IF g_argv[1] = "1" THEN
         LET g_dbda_m.dbda000 = '1'
      ELSE
         LET g_dbda_m.dbda000 = '2'
      END IF
      #預設單據的單別 
      LET r_success = ''
      LET r_doctype = ''
      CALL s_arti200_get_def_doc_type(g_dbda_m.dbdasite,g_prog,'1')
           RETURNING r_success, r_doctype
      LET g_dbda_m.dbdadocno = r_doctype

      LET g_dbda_m_t.* = g_dbda_m.* ]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE r_success     LIKE type_t.num5
   DEFINE r_doctype     LIKE rtai_t.rtai004 ]]>
  </point>
  <point name="insert_b.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_argv[1] = cl_replace_str(g_argv[1], '\"', '')
   IF cl_null(g_argv[1]) THEN
      LET g_argv[1] = '1'
   END IF]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_dbda_m.dbdastus MATCHES "[DR]" THEN 
         LET g_dbda_m.dbdastus = "N"
      END IF]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_dbda_m.dbdacnfid = ""
   LET g_dbda_m.dbdacnfdt = ""
   LET g_dbda_m.dbdapstid = ""
   LET g_dbda_m.dbdapstdt = ""
   LET g_dbda_m.dbdastus = "N"]]>
  </point>
  <point name="send.before_send" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_success = TRUE
   #確認前檢核段
   CALL cl_showmsg_init() 
   CALL s_adbt450_conf_chk(g_dbda_m.dbdadocno,g_dbda_m.dbdastus) RETURNING l_success
   IF NOT l_success THEN
      CLOSE adbt450_cl
      CALL cl_showmsg()
      CALL s_transaction_end('N','0')
      RETURN
   END IF]]>
  </point>
  <point name="send.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5 ]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("dbdb009",TRUE)]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF l_ac > 0 THEN
      IF NOT cl_null(g_dbdb_d[l_ac].dbdb004) THEN
         CALL cl_set_comp_entry("dbdb009",FALSE)
      END IF
   END IF]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL adbt450_dbdb005_ref()
      CALL adbt450_dbdb009_ref()]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbda_m.dbdaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_dbda_m.dbdaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbda_m.dbdaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbda_m.dbdaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_dbda_m.dbdaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbda_m.dbdaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbda_m.dbdacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_dbda_m.dbdacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbda_m.dbdacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbda_m.dbdacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_dbda_m.dbdacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbda_m.dbdacrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbda_m.dbdamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_dbda_m.dbdamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbda_m.dbdamodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbda_m.dbdacnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_dbda_m.dbdacnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbda_m.dbdacnfid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbda_m.dbdapstid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_dbda_m.dbdapstid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbda_m.dbdapstid_desc
            
   CALL adbt450_dbdasite_ref()
   CALL adbt450_dbda001_ref()
   CALL adbt450_dbda002_ref()
   CALL adbt450_dbda004_ref()
   CALL adbt450_dbda005_ref()]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_success = TRUE          
   CASE 
      WHEN lc_state = 'Y' AND g_dbda_m.dbdastus = 'N'  
         CALL cl_showmsg_init()
         CALL s_adbt450_conf_chk(g_dbda_m.dbdadocno,g_dbda_m.dbdastus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('aim-00108') THEN
               CALL s_transaction_begin()
               CALL s_adbt450_conf_upd(g_dbda_m.dbdadocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL cl_showmsg()                 
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN            
            END IF
         ELSE
            CALL cl_showmsg() 
            RETURN            
         END IF        
      WHEN lc_state = 'X' AND g_dbda_m.dbdastus = 'N'  
         CALL cl_showmsg_init()
         CALL s_adbt450_void_chk(g_dbda_m.dbdadocno,g_dbda_m.dbdastus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('aim-00109') THEN
               CALL s_transaction_begin()
               CALL s_adbt450_void_upd(g_dbda_m.dbdadocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL cl_showmsg() 
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_showmsg() 
            RETURN    
         END IF
      WHEN lc_state = 'N' AND g_dbda_m.dbdastus = 'Y' 
         CALL cl_showmsg_init()      
         CALL s_adbt450_unconf_chk(g_dbda_m.dbdadocno,g_dbda_m.dbdastus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('aim-00110') THEN
               CALL s_transaction_begin()
               CALL s_adbt450_unconf_upd(g_dbda_m.dbdadocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL cl_showmsg() 
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_showmsg() 
            RETURN    
         END IF
      WHEN lc_state = 'S' AND g_dbda_m.dbdastus = 'Y'  
         INPUT BY NAME g_dbda_m.dbda003 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            AFTER FIELD dbda003
               IF cl_null(g_dbda_m.dbda003) THEN
                  LET g_dbda_m.dbda003 = g_dbda_m_t.dbda003
                  NEXT FIELD dbda003
               END IF
            
            ON ACTION accept    
               ACCEPT INPUT
              
            ON ACTION cancel      #在dialog button (放棄)
               RETURN
            
            ON ACTION close       #在dialog 右上角 (X) 
               RETURN
            
            ON ACTION exit        #toolbar 離開
               RETURN
         END INPUT
         CALL s_transaction_begin()
         UPDATE dbda_t
            SET dbda003 = g_dbda_m.dbda003
          WHERE dbdaent = g_enterprise 
            AND dbdadocno = g_dbda_m.dbdadocno
         
         IF SQLCA.sqlcode THEN
            CALL cl_err("dbda_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
            RETURN
         END IF
         CALL cl_showmsg_init()
         CALL s_adbt450_post_chk(g_dbda_m.dbdadocno,g_dbda_m.dbdastus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('sub-00360') THEN
               CALL s_transaction_begin()
               CALL s_adbt450_post_upd(g_dbda_m.dbdadocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL cl_showmsg() 
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_showmsg() 
            RETURN    
         END IF
      WHEN lc_state = 'Y' AND g_dbda_m.dbdastus = 'S'
         CALL cl_showmsg_init()      
         CALL s_adbt450_unpost_chk(g_dbda_m.dbdadocno,g_dbda_m.dbdastus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('sub-00361') THEN
               CALL s_transaction_begin()
               CALL s_adbt450_unpost_upd(g_dbda_m.dbdadocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL cl_showmsg() 
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_showmsg() 
            RETURN    
         END IF
      OTHERWISE
         RETURN
   END CASE   ]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_dbda_m.dbdastus = "X" THEN
      RETURN
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         #提交和抽單一開始先無條件關
         CALL cl_set_act_visible("signing,withdraw",FALSE)
         
         CASE g_dbda_m.dbdastus
            WHEN "Y"
               HIDE OPTION "void"
               HIDE OPTION "invalid"
               HIDE OPTION "unposted"
            WHEN "S"
               HIDE OPTION "invalid"
               HIDE OPTION "unconfirmed"
               HIDE OPTION "confirmed"
            WHEN "N"
               HIDE OPTION "unposted"
               HIDE OPTION "unconfirmed"
               HIDE OPTION "posted"
               #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
               IF cl_bpm_chk() THEN
                  CALL cl_set_act_visible("signing",TRUE)
                  CALL cl_set_act_visible("confirmed",FALSE)
               END IF
            #已核准只能顯示確認;其餘應用功能皆隱藏
            WHEN "A"     
               CALL cl_set_act_visible("confirmed ",TRUE)  
               CALL cl_set_act_visible("unconfirmed,invalid,posted,unposted",FALSE)
            #保留修改的功能(如作廢)，隱藏其他應用功能
            WHEN "R"   
               CALL cl_set_act_visible("confirmed,unconfirmed,posted,unposted",FALSE)
            WHEN "D"  
               CALL cl_set_act_visible("confirmed,unconfirmed,posted,unposted",FALSE)
            #送簽中只能顯示抽單;其餘應用功能皆隱藏
            WHEN "W"   
               CALL cl_set_act_visible("withdraw",TRUE)  
               CALL cl_set_act_visible("unconfirmed,invalid,confirmed,posted,unposted",FALSE)

         END CASE ]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5  ]]>
  </point>
  <point name="statechange.more_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="statechange.unposted" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         LET lc_state = "Y"]]>
  </point>
  <point name="update_b.before_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <section id="adbt450.b_fill" ver="5" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION adbt450_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_dbdb_d.clear()    #g_dbdb_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF adbt450_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE dbdbsite,dbdbunit,dbdbseq,dbdb001,dbdb002,dbdb003,dbdb004,dbdb005, 
          dbdb006,dbdb007,dbdb008,dbdb009,dbdb010,dbdb011,dbdb012,dbdb013 ,t1.imaal003 ,t3.oocal003 FROM dbdb_t", 
             
                  " INNER JOIN dbda_t ON dbdadocno = dbdbdocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=dbdb005 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent='"||g_enterprise||"' AND t3.oocal001=dbdb009 AND t3.oocal002='"||g_dlang||"' ",
 
                  " WHERE dbdbent=? AND dbdbdocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY dbdb_t.dbdbseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE adbt450_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR adbt450_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_dbda_m.dbdadocno
                                               
      FOREACH b_fill_cs INTO g_dbdb_d[l_ac].dbdbsite,g_dbdb_d[l_ac].dbdbunit,g_dbdb_d[l_ac].dbdbseq, 
          g_dbdb_d[l_ac].dbdb001,g_dbdb_d[l_ac].dbdb002,g_dbdb_d[l_ac].dbdb003,g_dbdb_d[l_ac].dbdb004, 
          g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb006,g_dbdb_d[l_ac].dbdb007,g_dbdb_d[l_ac].dbdb008, 
          g_dbdb_d[l_ac].dbdb009,g_dbdb_d[l_ac].dbdb010,g_dbdb_d[l_ac].dbdb011,g_dbdb_d[l_ac].dbdb012, 
          g_dbdb_d[l_ac].dbdb013,g_dbdb_d[l_ac].dbdb005_desc,g_dbdb_d[l_ac].dbdb009_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_dbdb_d.deleteElement(g_dbdb_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE adbt450_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="adbt450.b_fill2" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION adbt450_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL adbt450_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="adbt450.browser_fill" ver="7" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION adbt450_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_dbda_m.* TO NULL
   CALL g_dbdb_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "dbdadocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE dbdadocno ",
                      " FROM dbda_t ",
                      " ",
                      " LEFT JOIN dbdb_t ON dbdbent = dbdaent AND dbdadocno = dbdbdocno ",
 
 
                      " ", 
                      " ", 
                      " WHERE dbdaent = '" ||g_enterprise|| "' AND dbdbent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("dbda_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE dbdadocno ",
                      " FROM dbda_t ", 
                      "  ",
                      "  ",
                      " WHERE dbdaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("dbda_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照dbdasite,'',dbdadocno,dbdadocdt,dbda003,dbda001,'',dbda002,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT dbdastus,dbdasite,'',dbdadocno,dbdadocdt,dbda003,dbda001,'',dbda002, 
       '',t1.ooefl003 ,t2.pmaal004 ,t3.pmaal004 ",
               " FROM dbda_t ",
               "  ",
               "  LEFT JOIN dbdb_t ON dbdbent = dbdaent AND dbdadocno = dbdbdocno ",
 
 
               "  ",
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=dbdasite AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent='"||g_enterprise||"' AND t2.pmaal001=dbda001 AND t2.pmaal002='"||g_lang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent='"||g_enterprise||"' AND t3.pmaal001=dbda002 AND t3.pmaal002='"||g_lang||"' ",
 
               " WHERE dbdaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("dbda_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_dbdasite,g_browser[g_cnt].b_dbdasite_desc, 
       g_browser[g_cnt].b_dbdadocno,g_browser[g_cnt].b_dbdadocdt,g_browser[g_cnt].b_dbda003,g_browser[g_cnt].b_dbda001, 
       g_browser[g_cnt].b_dbda001_desc,g_browser[g_cnt].b_dbda002,g_browser[g_cnt].b_dbda002_desc,g_browser[g_cnt].b_dbdasite_desc, 
       g_browser[g_cnt].b_dbda001_desc,g_browser[g_cnt].b_dbda002_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "S"
            LET g_browser[g_cnt].b_statepic = "stus/16/posted.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Z"
            LET g_browser[g_cnt].b_statepic = "stus/16/unposted.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "J"
            LET g_browser[g_cnt].b_statepic = "stus/16/reconciliate.png"
         WHEN "K"
            LET g_browser[g_cnt].b_statepic = "stus/16/unreconciliate.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="adbt450.browser_search" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION adbt450_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY dbdadocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL adbt450_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="adbt450.construct" ver="9" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION adbt450_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_dbda_m.* TO NULL
   CALL g_dbdb_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON dbdasite,dbdadocdt,dbda003,dbdadocno,dbda001,dbda002,dbda004,dbda005, 
          dbda006,dbdaunit,dbdastus,dbdaownid,dbdaowndp,dbdacrtid,dbdacrtdp,dbdacrtdt,dbdamodid,dbdamoddt, 
          dbdacnfid,dbdacnfdt,dbdapstid,dbdapstdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<dbdacrtdt>>----
         AFTER FIELD dbdacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dbdamoddt>>----
         AFTER FIELD dbdamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dbdacnfdt>>----
         AFTER FIELD dbdacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dbdapstdt>>----
         AFTER FIELD dbdapstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.dbdasite
         ON ACTION controlp INFIELD dbdasite
            #add-point:ON ACTION controlp INFIELD dbdasite
            {<point name="construct.c.dbdasite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdasite
            #add-point:BEFORE FIELD dbdasite
            {<point name="construct.b.dbdasite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdasite
            
            #add-point:AFTER FIELD dbdasite
            {<point name="construct.a.dbdasite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdadocdt
            #add-point:BEFORE FIELD dbdadocdt
            {<point name="construct.b.dbdadocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdadocdt
            
            #add-point:AFTER FIELD dbdadocdt
            {<point name="construct.a.dbdadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dbdadocdt
         ON ACTION controlp INFIELD dbdadocdt
            #add-point:ON ACTION controlp INFIELD dbdadocdt
            {<point name="construct.c.dbdadocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbda003
            #add-point:BEFORE FIELD dbda003
            {<point name="construct.b.dbda003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbda003
            
            #add-point:AFTER FIELD dbda003
            {<point name="construct.a.dbda003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dbda003
         ON ACTION controlp INFIELD dbda003
            #add-point:ON ACTION controlp INFIELD dbda003
            {<point name="construct.c.dbda003" />}
            #END add-point
 
         #Ctrlp:construct.c.dbdadocno
         ON ACTION controlp INFIELD dbdadocno
            #add-point:ON ACTION controlp INFIELD dbdadocno
            {<point name="construct.c.dbdadocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdadocno
            #add-point:BEFORE FIELD dbdadocno
            {<point name="construct.b.dbdadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdadocno
            
            #add-point:AFTER FIELD dbdadocno
            {<point name="construct.a.dbdadocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dbda001
         ON ACTION controlp INFIELD dbda001
            #add-point:ON ACTION controlp INFIELD dbda001
            {<point name="construct.c.dbda001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbda001
            #add-point:BEFORE FIELD dbda001
            {<point name="construct.b.dbda001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbda001
            
            #add-point:AFTER FIELD dbda001
            {<point name="construct.a.dbda001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dbda002
         ON ACTION controlp INFIELD dbda002
            #add-point:ON ACTION controlp INFIELD dbda002
            {<point name="construct.c.dbda002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbda002
            #add-point:BEFORE FIELD dbda002
            {<point name="construct.b.dbda002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbda002
            
            #add-point:AFTER FIELD dbda002
            {<point name="construct.a.dbda002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dbda004
         ON ACTION controlp INFIELD dbda004
            #add-point:ON ACTION controlp INFIELD dbda004
            {<point name="construct.c.dbda004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbda004
            #add-point:BEFORE FIELD dbda004
            {<point name="construct.b.dbda004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbda004
            
            #add-point:AFTER FIELD dbda004
            {<point name="construct.a.dbda004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dbda005
         ON ACTION controlp INFIELD dbda005
            #add-point:ON ACTION controlp INFIELD dbda005
            {<point name="construct.c.dbda005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbda005
            #add-point:BEFORE FIELD dbda005
            {<point name="construct.b.dbda005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbda005
            
            #add-point:AFTER FIELD dbda005
            {<point name="construct.a.dbda005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbda006
            #add-point:BEFORE FIELD dbda006
            {<point name="construct.b.dbda006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbda006
            
            #add-point:AFTER FIELD dbda006
            {<point name="construct.a.dbda006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dbda006
         ON ACTION controlp INFIELD dbda006
            #add-point:ON ACTION controlp INFIELD dbda006
            {<point name="construct.c.dbda006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdaunit
            #add-point:BEFORE FIELD dbdaunit
            {<point name="construct.b.dbdaunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdaunit
            
            #add-point:AFTER FIELD dbdaunit
            {<point name="construct.a.dbdaunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dbdaunit
         ON ACTION controlp INFIELD dbdaunit
            #add-point:ON ACTION controlp INFIELD dbdaunit
            {<point name="construct.c.dbdaunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdastus
            #add-point:BEFORE FIELD dbdastus
            {<point name="construct.b.dbdastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdastus
            
            #add-point:AFTER FIELD dbdastus
            {<point name="construct.a.dbdastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dbdastus
         ON ACTION controlp INFIELD dbdastus
            #add-point:ON ACTION controlp INFIELD dbdastus
            {<point name="construct.c.dbdastus" />}
            #END add-point
 
         #Ctrlp:construct.c.dbdaownid
         ON ACTION controlp INFIELD dbdaownid
            #add-point:ON ACTION controlp INFIELD dbdaownid
            {<point name="construct.c.dbdaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdaownid
            #add-point:BEFORE FIELD dbdaownid
            {<point name="construct.b.dbdaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdaownid
            
            #add-point:AFTER FIELD dbdaownid
            {<point name="construct.a.dbdaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dbdaowndp
         ON ACTION controlp INFIELD dbdaowndp
            #add-point:ON ACTION controlp INFIELD dbdaowndp
            {<point name="construct.c.dbdaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdaowndp
            #add-point:BEFORE FIELD dbdaowndp
            {<point name="construct.b.dbdaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdaowndp
            
            #add-point:AFTER FIELD dbdaowndp
            {<point name="construct.a.dbdaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dbdacrtid
         ON ACTION controlp INFIELD dbdacrtid
            #add-point:ON ACTION controlp INFIELD dbdacrtid
            {<point name="construct.c.dbdacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdacrtid
            #add-point:BEFORE FIELD dbdacrtid
            {<point name="construct.b.dbdacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdacrtid
            
            #add-point:AFTER FIELD dbdacrtid
            {<point name="construct.a.dbdacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dbdacrtdp
         ON ACTION controlp INFIELD dbdacrtdp
            #add-point:ON ACTION controlp INFIELD dbdacrtdp
            {<point name="construct.c.dbdacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdacrtdp
            #add-point:BEFORE FIELD dbdacrtdp
            {<point name="construct.b.dbdacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdacrtdp
            
            #add-point:AFTER FIELD dbdacrtdp
            {<point name="construct.a.dbdacrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdacrtdt
            #add-point:BEFORE FIELD dbdacrtdt
            {<point name="construct.b.dbdacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.dbdamodid
         ON ACTION controlp INFIELD dbdamodid
            #add-point:ON ACTION controlp INFIELD dbdamodid
            {<point name="construct.c.dbdamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdamodid
            #add-point:BEFORE FIELD dbdamodid
            {<point name="construct.b.dbdamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdamodid
            
            #add-point:AFTER FIELD dbdamodid
            {<point name="construct.a.dbdamodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdamoddt
            #add-point:BEFORE FIELD dbdamoddt
            {<point name="construct.b.dbdamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.dbdacnfid
         ON ACTION controlp INFIELD dbdacnfid
            #add-point:ON ACTION controlp INFIELD dbdacnfid
            {<point name="construct.c.dbdacnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdacnfid
            #add-point:BEFORE FIELD dbdacnfid
            {<point name="construct.b.dbdacnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdacnfid
            
            #add-point:AFTER FIELD dbdacnfid
            {<point name="construct.a.dbdacnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdacnfdt
            #add-point:BEFORE FIELD dbdacnfdt
            {<point name="construct.b.dbdacnfdt" />}
            #END add-point
 
         #Ctrlp:construct.c.dbdapstid
         ON ACTION controlp INFIELD dbdapstid
            #add-point:ON ACTION controlp INFIELD dbdapstid
            {<point name="construct.c.dbdapstid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdapstid
            #add-point:BEFORE FIELD dbdapstid
            {<point name="construct.b.dbdapstid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdapstid
            
            #add-point:AFTER FIELD dbdapstid
            {<point name="construct.a.dbdapstid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdapstdt
            #add-point:BEFORE FIELD dbdapstdt
            {<point name="construct.b.dbdapstdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON dbdbsite,dbdbunit,dbdbseq,dbdb001,dbdb002,dbdb003,dbdb004,dbdb005,dbdb006, 
          dbdb007,dbdb008,dbdb009,dbdb010,dbdb011,dbdb012,dbdb013
           FROM s_detail1[1].dbdbsite,s_detail1[1].dbdbunit,s_detail1[1].dbdbseq,s_detail1[1].dbdb001, 
               s_detail1[1].dbdb002,s_detail1[1].dbdb003,s_detail1[1].dbdb004,s_detail1[1].dbdb005,s_detail1[1].dbdb006, 
               s_detail1[1].dbdb007,s_detail1[1].dbdb008,s_detail1[1].dbdb009,s_detail1[1].dbdb010,s_detail1[1].dbdb011, 
               s_detail1[1].dbdb012,s_detail1[1].dbdb013
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="adbt450.default_search" ver="2" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION adbt450_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " dbdadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="adbt450.delete" ver="7" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION adbt450_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_dbda_m.dbdadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE adbt450_master_referesh USING g_dbda_m.dbdadocno INTO g_dbda_m.dbdasite,g_dbda_m.dbdadocdt, 
       g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004, 
       g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt, 
       g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt,g_dbda_m.dbdasite_desc, 
       g_dbda_m.dbda001_desc,g_dbda_m.dbda002_desc,g_dbda_m.dbda004_desc,g_dbda_m.dbda005_desc,g_dbda_m.dbdaownid_desc, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp_desc,g_dbda_m.dbdamodid_desc, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdapstid_desc
   
   
 
   CALL adbt450_show()
   
   CALL s_transaction_begin()
 
   OPEN adbt450_cl USING g_enterprise,g_dbda_m.dbdadocno
   IF STATUS THEN
      CALL cl_err("OPEN adbt450_cl:", STATUS, 1)
      CLOSE adbt450_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE adbt450_master_referesh USING g_dbda_m.dbdadocno INTO g_dbda_m.dbdasite,g_dbda_m.dbdadocdt, 
       g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004, 
       g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt, 
       g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt,g_dbda_m.dbdasite_desc, 
       g_dbda_m.dbda001_desc,g_dbda_m.dbda002_desc,g_dbda_m.dbda004_desc,g_dbda_m.dbda005_desc,g_dbda_m.dbdaownid_desc, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp_desc,g_dbda_m.dbdamodid_desc, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdapstid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_dbda_m.dbdadocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL adbt450_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_dbdadocno_t = g_dbda_m.dbdadocno
 
 
      DELETE FROM dbda_t
       WHERE dbdaent = g_enterprise AND dbdadocno = g_dbda_m.dbdadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_dbda_m.dbdadocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM dbdb_t
       WHERE dbdbent = g_enterprise AND dbdbdocno = g_dbda_m.dbdadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("dbdb_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_dbdb_d.clear() 
 
     
      #CALL adbt450_ui_browser_refresh()  
      CALL adbt450_ui_headershow()  
      CALL adbt450_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL adbt450_browser_fill("")
         CALL adbt450_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL adbt450_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE adbt450_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_dbda_m.dbdadocno,'D')
    
END FUNCTION
]]>
  </section>
  <section id="adbt450.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION adbt450_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM dbdb_t
       WHERE dbdbent = g_enterprise AND
         dbdbdocno = ps_keys_bak[1] AND dbdbseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="adbt450.description" ver="154" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000169
#+ 
#+ Filename...: adbt450
#+ Description: 寄銷客戶庫存異動維護作業
#+ Creator....: 02748(2014/04/21)
#+ Modifier...: 02748(2014/04/25)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="adbt450.detail_reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION adbt450_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE dbdb_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE adbt450_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE adbt450_detail AS ",
                "SELECT * FROM dbdb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO adbt450_detail SELECT * FROM dbdb_t 
                                         WHERE dbdbent = g_enterprise AND dbdbdocno = g_dbdadocno_t
 
   
   #將key修正為調整後   
   UPDATE adbt450_detail 
      #更新key欄位
      SET dbdbdocno = g_dbda_m.dbdadocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO dbdb_t SELECT * FROM adbt450_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adbt450_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_dbdadocno_t = g_dbda_m.dbdadocno
 
   
   DROP TABLE adbt450_detail
   
END FUNCTION
]]>
  </section>
  <section id="adbt450.detail_show" ver="2" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION adbt450_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="adbt450.fetch" ver="4" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION adbt450_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_dbda_m.dbdadocno = g_browser[g_current_idx].b_dbdadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE adbt450_master_referesh USING g_dbda_m.dbdadocno INTO g_dbda_m.dbdasite,g_dbda_m.dbdadocdt, 
       g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004, 
       g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt, 
       g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt,g_dbda_m.dbdasite_desc, 
       g_dbda_m.dbda001_desc,g_dbda_m.dbda002_desc,g_dbda_m.dbda004_desc,g_dbda_m.dbda005_desc,g_dbda_m.dbdaownid_desc, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp_desc,g_dbda_m.dbdamodid_desc, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdapstid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("dbda_t",SQLCA.sqlcode,1)
      INITIALIZE g_dbda_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL adbt450_show()
 
   #+ 此段落由子樣板a56產生
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
END FUNCTION
]]>
  </section>
  <section id="adbt450.fill_chk" ver="3" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION adbt450_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="adbt450.filter" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION adbt450_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON dbdasite,dbdadocno,dbdadocdt,dbda003,dbda001,dbda002
                          FROM s_browse[1].b_dbdasite,s_browse[1].b_dbdadocno,s_browse[1].b_dbdadocdt, 
                              s_browse[1].b_dbda003,s_browse[1].b_dbda001,s_browse[1].b_dbda002
 
         BEFORE CONSTRUCT
               DISPLAY adbt450_filter_parser('dbdasite') TO s_browse[1].b_dbdasite
            DISPLAY adbt450_filter_parser('dbdadocno') TO s_browse[1].b_dbdadocno
            DISPLAY adbt450_filter_parser('dbdadocdt') TO s_browse[1].b_dbdadocdt
            DISPLAY adbt450_filter_parser('dbda003') TO s_browse[1].b_dbda003
            DISPLAY adbt450_filter_parser('dbda001') TO s_browse[1].b_dbda001
            DISPLAY adbt450_filter_parser('dbda002') TO s_browse[1].b_dbda002
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL adbt450_filter_show('dbdasite')
   CALL adbt450_filter_show('dbdadocno')
   CALL adbt450_filter_show('dbdadocdt')
   CALL adbt450_filter_show('dbda003')
   CALL adbt450_filter_show('dbda001')
   CALL adbt450_filter_show('dbda002')
 
END FUNCTION
]]>
  </section>
  <section id="adbt450.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION adbt450_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="adbt450.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION adbt450_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = adbt450_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="adbt450.global" ver="7" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_dbda_m        RECORD
       dbdasite LIKE dbda_t.dbdasite, 
   dbdasite_desc LIKE type_t.chr80, 
   dbdadocdt LIKE dbda_t.dbdadocdt, 
   dbda003 LIKE dbda_t.dbda003, 
   dbdadocno LIKE dbda_t.dbdadocno, 
   dbda000 LIKE dbda_t.dbda000, 
   dbda001 LIKE dbda_t.dbda001, 
   dbda001_desc LIKE type_t.chr80, 
   dbda002 LIKE dbda_t.dbda002, 
   dbda002_desc LIKE type_t.chr80, 
   dbda004 LIKE dbda_t.dbda004, 
   dbda004_desc LIKE type_t.chr80, 
   dbda005 LIKE dbda_t.dbda005, 
   dbda005_desc LIKE type_t.chr80, 
   dbda006 LIKE dbda_t.dbda006, 
   dbdaunit LIKE dbda_t.dbdaunit, 
   dbdastus LIKE dbda_t.dbdastus, 
   dbdaownid LIKE dbda_t.dbdaownid, 
   dbdaownid_desc LIKE type_t.chr80, 
   dbdaowndp LIKE dbda_t.dbdaowndp, 
   dbdaowndp_desc LIKE type_t.chr80, 
   dbdacrtid LIKE dbda_t.dbdacrtid, 
   dbdacrtid_desc LIKE type_t.chr80, 
   dbdacrtdp LIKE dbda_t.dbdacrtdp, 
   dbdacrtdp_desc LIKE type_t.chr80, 
   dbdacrtdt DATETIME YEAR TO SECOND, 
   dbdamodid LIKE dbda_t.dbdamodid, 
   dbdamodid_desc LIKE type_t.chr80, 
   dbdamoddt DATETIME YEAR TO SECOND, 
   dbdacnfid LIKE dbda_t.dbdacnfid, 
   dbdacnfid_desc LIKE type_t.chr80, 
   dbdacnfdt DATETIME YEAR TO SECOND, 
   dbdapstid LIKE dbda_t.dbdapstid, 
   dbdapstid_desc LIKE type_t.chr80, 
   dbdapstdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_dbdb_d        RECORD
       dbdbsite LIKE dbdb_t.dbdbsite, 
   dbdbunit LIKE dbdb_t.dbdbunit, 
   dbdbseq LIKE dbdb_t.dbdbseq, 
   dbdb001 LIKE dbdb_t.dbdb001, 
   dbdb002 LIKE dbdb_t.dbdb002, 
   dbdb003 LIKE dbdb_t.dbdb003, 
   dbdb004 LIKE dbdb_t.dbdb004, 
   dbdb005 LIKE dbdb_t.dbdb005, 
   dbdb005_desc LIKE type_t.chr500, 
   dbdb005_desc_desc LIKE type_t.chr500, 
   dbdb006 LIKE dbdb_t.dbdb006, 
   dbdb007 LIKE dbdb_t.dbdb007, 
   dbdb008 LIKE dbdb_t.dbdb008, 
   dbdb009 LIKE dbdb_t.dbdb009, 
   dbdb009_desc LIKE type_t.chr500, 
   dbdb010 LIKE dbdb_t.dbdb010, 
   dbdb011 LIKE dbdb_t.dbdb011, 
   dbdb012 LIKE dbdb_t.dbdb012, 
   dbdb013 LIKE dbdb_t.dbdb013
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_dbda_m          type_g_dbda_m
DEFINE g_dbda_m_t        type_g_dbda_m
 
   DEFINE g_dbdadocno_t LIKE dbda_t.dbdadocno
 
 
DEFINE g_dbdb_d          DYNAMIC ARRAY OF type_g_dbdb_d
DEFINE g_dbdb_d_t        type_g_dbdb_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_dbdasite LIKE dbda_t.dbdasite,
   b_dbdasite_desc LIKE type_t.chr80,
      b_dbdadocno LIKE dbda_t.dbdadocno,
      b_dbdadocdt LIKE dbda_t.dbdadocdt,
      b_dbda003 LIKE dbda_t.dbda003,
      b_dbda001 LIKE dbda_t.dbda001,
   b_dbda001_desc LIKE type_t.chr80,
      b_dbda002 LIKE dbda_t.dbda002,
   b_dbda002_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_dbdasite LIKE dbda_t.dbdasite,
   b_dbdasite_desc LIKE type_t.chr80,
      b_dbdadocno LIKE dbda_t.dbdadocno,
      b_dbdadocdt LIKE dbda_t.dbdadocdt,
      b_dbda003 LIKE dbda_t.dbda003,
      b_dbda001 LIKE dbda_t.dbda001,
   b_dbda001_desc LIKE type_t.chr80,
      b_dbda002 LIKE dbda_t.dbda002,
   b_dbda002_desc LIKE type_t.chr80
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="adbt450.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION adbt450_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_dbdb_d.getLength() THEN
         LET g_detail_idx = g_dbdb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_dbdb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_dbdb_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="adbt450.init" ver="5" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION adbt450_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('dbdastus','13','N,Y,S,X,Z,A,D,R,W,J,K')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL adbt450_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="adbt450.input" ver="9" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION adbt450_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT dbdbsite,dbdbunit,dbdbseq,dbdb001,dbdb002,dbdb003,dbdb004,dbdb005,dbdb006, 
       dbdb007,dbdb008,dbdb009,dbdb010,dbdb011,dbdb012,dbdb013 FROM dbdb_t WHERE dbdbent=? AND dbdbdocno=?  
       AND dbdbseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt450_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL adbt450_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL adbt450_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_dbda_m.dbdasite,g_dbda_m.dbdadocdt,g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000, 
       g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004,g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit, 
       g_dbda_m.dbdastus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="adbt450.input.body" ver="7" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_dbdb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_dbdb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adbt450_b_fill()
            LET g_rec_b = g_dbdb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adbt450_cl USING g_enterprise,g_dbda_m.dbdadocno
            IF STATUS THEN
               CALL cl_err("OPEN adbt450_cl:", STATUS, 1)
               CLOSE adbt450_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_dbdb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_dbdb_d[l_ac].dbdbseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_dbdb_d_t.* = g_dbdb_d[l_ac].*  #BACKUP
               CALL adbt450_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL adbt450_set_no_entry_b(l_cmd)
               IF NOT adbt450_lock_b("dbdb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adbt450_bcl INTO g_dbdb_d[l_ac].dbdbsite,g_dbdb_d[l_ac].dbdbunit,g_dbdb_d[l_ac].dbdbseq, 
                      g_dbdb_d[l_ac].dbdb001,g_dbdb_d[l_ac].dbdb002,g_dbdb_d[l_ac].dbdb003,g_dbdb_d[l_ac].dbdb004, 
                      g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb006,g_dbdb_d[l_ac].dbdb007,g_dbdb_d[l_ac].dbdb008, 
                      g_dbdb_d[l_ac].dbdb009,g_dbdb_d[l_ac].dbdb010,g_dbdb_d[l_ac].dbdb011,g_dbdb_d[l_ac].dbdb012, 
                      g_dbdb_d[l_ac].dbdb013
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_dbdb_d_t.dbdbseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL adbt450_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_dbdb_d[l_ac].* TO NULL 
            
            LET g_dbdb_d_t.* = g_dbdb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adbt450_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL adbt450_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_dbdb_d[li_reproduce_target].* = g_dbdb_d[li_reproduce].*
 
               LET g_dbdb_d[li_reproduce_target].dbdbseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM dbdb_t 
             WHERE dbdbent = g_enterprise AND dbdbdocno = g_dbda_m.dbdadocno
 
               AND dbdbseq = g_dbdb_d[l_ac].dbdbseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dbda_m.dbdadocno
               LET gs_keys[2] = g_dbdb_d[g_detail_idx].dbdbseq
               CALL adbt450_insert_b('dbdb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_dbdb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("dbdb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adbt450_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_dbdb_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_dbdb_d.deleteElement(l_ac)
               NEXT FIELD dbdbseq
            END IF
         
            IF g_dbdb_d[l_ac].dbdbseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM dbdb_t
                WHERE dbdbent = g_enterprise AND dbdbdocno = g_dbda_m.dbdadocno AND
 
                      dbdbseq = g_dbdb_d_t.dbdbseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("dbdb_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE adbt450_bcl
               LET l_count = g_dbdb_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dbda_m.dbdadocno
               LET gs_keys[2] = g_dbdb_d[g_detail_idx].dbdbseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL adbt450_delete_b('dbdb_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD dbdbsite
            #add-point:BEFORE FIELD dbdbsite
            {<point name="input.b.page1.dbdbsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdbsite
            
            #add-point:AFTER FIELD dbdbsite
            {<point name="input.a.page1.dbdbsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbdbsite
            #add-point:ON CHANGE dbdbsite
            {<point name="input.g.page1.dbdbsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdbunit
            #add-point:BEFORE FIELD dbdbunit
            {<point name="input.b.page1.dbdbunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdbunit
            
            #add-point:AFTER FIELD dbdbunit
            {<point name="input.a.page1.dbdbunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbdbunit
            #add-point:ON CHANGE dbdbunit
            {<point name="input.g.page1.dbdbunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdbseq
            #add-point:BEFORE FIELD dbdbseq
            {<point name="input.b.page1.dbdbseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdbseq
            
            #add-point:AFTER FIELD dbdbseq
            {<point name="input.a.page1.dbdbseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbdbseq
            #add-point:ON CHANGE dbdbseq
            {<point name="input.g.page1.dbdbseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdb001
            #add-point:BEFORE FIELD dbdb001
            {<point name="input.b.page1.dbdb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdb001
            
            #add-point:AFTER FIELD dbdb001
            {<point name="input.a.page1.dbdb001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbdb001
            #add-point:ON CHANGE dbdb001
            {<point name="input.g.page1.dbdb001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdb002
            #add-point:BEFORE FIELD dbdb002
            {<point name="input.b.page1.dbdb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdb002
            
            #add-point:AFTER FIELD dbdb002
            {<point name="input.a.page1.dbdb002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbdb002
            #add-point:ON CHANGE dbdb002
            {<point name="input.g.page1.dbdb002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdb003
            #add-point:BEFORE FIELD dbdb003
            {<point name="input.b.page1.dbdb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdb003
            
            #add-point:AFTER FIELD dbdb003
            {<point name="input.a.page1.dbdb003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbdb003
            #add-point:ON CHANGE dbdb003
            {<point name="input.g.page1.dbdb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdb004
            
            #add-point:AFTER FIELD dbdb004
            {<point name="input.a.page1.dbdb004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdb004
            #add-point:BEFORE FIELD dbdb004
            {<point name="input.b.page1.dbdb004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dbdb004
            #add-point:ON CHANGE dbdb004
            {<point name="input.g.page1.dbdb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdb005
            
            #add-point:AFTER FIELD dbdb005
            {<point name="input.a.page1.dbdb005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdb005
            #add-point:BEFORE FIELD dbdb005
            {<point name="input.b.page1.dbdb005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dbdb005
            #add-point:ON CHANGE dbdb005
            {<point name="input.g.page1.dbdb005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdb006
            #add-point:BEFORE FIELD dbdb006
            {<point name="input.b.page1.dbdb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdb006
            
            #add-point:AFTER FIELD dbdb006
            {<point name="input.a.page1.dbdb006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbdb006
            #add-point:ON CHANGE dbdb006
            {<point name="input.g.page1.dbdb006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdb007
            #add-point:BEFORE FIELD dbdb007
            {<point name="input.b.page1.dbdb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdb007
            
            #add-point:AFTER FIELD dbdb007
            {<point name="input.a.page1.dbdb007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbdb007
            #add-point:ON CHANGE dbdb007
            {<point name="input.g.page1.dbdb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdb008
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_dbdb_d[l_ac].dbdb008,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD dbdb008
            END IF
 
 
            #add-point:AFTER FIELD dbdb008
            {<point name="input.a.page1.dbdb008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdb008
            #add-point:BEFORE FIELD dbdb008
            {<point name="input.b.page1.dbdb008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dbdb008
            #add-point:ON CHANGE dbdb008
            {<point name="input.g.page1.dbdb008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdb009
            
            #add-point:AFTER FIELD dbdb009
            {<point name="input.a.page1.dbdb009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdb009
            #add-point:BEFORE FIELD dbdb009
            {<point name="input.b.page1.dbdb009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dbdb009
            #add-point:ON CHANGE dbdb009
            {<point name="input.g.page1.dbdb009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdb010
            #add-point:BEFORE FIELD dbdb010
            {<point name="input.b.page1.dbdb010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdb010
            
            #add-point:AFTER FIELD dbdb010
            {<point name="input.a.page1.dbdb010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbdb010
            #add-point:ON CHANGE dbdb010
            {<point name="input.g.page1.dbdb010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdb011
            #add-point:BEFORE FIELD dbdb011
            {<point name="input.b.page1.dbdb011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdb011
            
            #add-point:AFTER FIELD dbdb011
            {<point name="input.a.page1.dbdb011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbdb011
            #add-point:ON CHANGE dbdb011
            {<point name="input.g.page1.dbdb011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdb012
            #add-point:BEFORE FIELD dbdb012
            {<point name="input.b.page1.dbdb012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdb012
            
            #add-point:AFTER FIELD dbdb012
            {<point name="input.a.page1.dbdb012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbdb012
            #add-point:ON CHANGE dbdb012
            {<point name="input.g.page1.dbdb012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdb013
            #add-point:BEFORE FIELD dbdb013
            {<point name="input.b.page1.dbdb013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdb013
            
            #add-point:AFTER FIELD dbdb013
            {<point name="input.a.page1.dbdb013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbdb013
            #add-point:ON CHANGE dbdb013
            {<point name="input.g.page1.dbdb013" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.dbdbsite
         ON ACTION controlp INFIELD dbdbsite
            #add-point:ON ACTION controlp INFIELD dbdbsite
            {<point name="input.c.page1.dbdbsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dbdbunit
         ON ACTION controlp INFIELD dbdbunit
            #add-point:ON ACTION controlp INFIELD dbdbunit
            {<point name="input.c.page1.dbdbunit" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dbdbseq
         ON ACTION controlp INFIELD dbdbseq
            #add-point:ON ACTION controlp INFIELD dbdbseq
            {<point name="input.c.page1.dbdbseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dbdb001
         ON ACTION controlp INFIELD dbdb001
            #add-point:ON ACTION controlp INFIELD dbdb001
            {<point name="input.c.page1.dbdb001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dbdb002
         ON ACTION controlp INFIELD dbdb002
            #add-point:ON ACTION controlp INFIELD dbdb002
            {<point name="input.c.page1.dbdb002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dbdb003
         ON ACTION controlp INFIELD dbdb003
            #add-point:ON ACTION controlp INFIELD dbdb003
            {<point name="input.c.page1.dbdb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dbdb004
         ON ACTION controlp INFIELD dbdb004
            #add-point:ON ACTION controlp INFIELD dbdb004
            {<point name="input.c.page1.dbdb004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dbdb005
         ON ACTION controlp INFIELD dbdb005
            #add-point:ON ACTION controlp INFIELD dbdb005
            {<point name="input.c.page1.dbdb005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dbdb006
         ON ACTION controlp INFIELD dbdb006
            #add-point:ON ACTION controlp INFIELD dbdb006
            {<point name="input.c.page1.dbdb006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dbdb007
         ON ACTION controlp INFIELD dbdb007
            #add-point:ON ACTION controlp INFIELD dbdb007
            {<point name="input.c.page1.dbdb007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dbdb008
         ON ACTION controlp INFIELD dbdb008
            #add-point:ON ACTION controlp INFIELD dbdb008
            {<point name="input.c.page1.dbdb008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dbdb009
         ON ACTION controlp INFIELD dbdb009
            #add-point:ON ACTION controlp INFIELD dbdb009
            {<point name="input.c.page1.dbdb009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dbdb010
         ON ACTION controlp INFIELD dbdb010
            #add-point:ON ACTION controlp INFIELD dbdb010
            {<point name="input.c.page1.dbdb010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dbdb011
         ON ACTION controlp INFIELD dbdb011
            #add-point:ON ACTION controlp INFIELD dbdb011
            {<point name="input.c.page1.dbdb011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dbdb012
         ON ACTION controlp INFIELD dbdb012
            #add-point:ON ACTION controlp INFIELD dbdb012
            {<point name="input.c.page1.dbdb012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dbdb013
         ON ACTION controlp INFIELD dbdb013
            #add-point:ON ACTION controlp INFIELD dbdb013
            {<point name="input.c.page1.dbdb013" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_dbdb_d[l_ac].* = g_dbdb_d_t.*
               CLOSE adbt450_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_dbdb_d[l_ac].dbdbseq,-263,1)
               LET g_dbdb_d[l_ac].* = g_dbdb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE dbdb_t SET (dbdbdocno,dbdbsite,dbdbunit,dbdbseq,dbdb001,dbdb002,dbdb003,dbdb004, 
                   dbdb005,dbdb006,dbdb007,dbdb008,dbdb009,dbdb010,dbdb011,dbdb012,dbdb013) = (g_dbda_m.dbdadocno, 
                   g_dbdb_d[l_ac].dbdbsite,g_dbdb_d[l_ac].dbdbunit,g_dbdb_d[l_ac].dbdbseq,g_dbdb_d[l_ac].dbdb001, 
                   g_dbdb_d[l_ac].dbdb002,g_dbdb_d[l_ac].dbdb003,g_dbdb_d[l_ac].dbdb004,g_dbdb_d[l_ac].dbdb005, 
                   g_dbdb_d[l_ac].dbdb006,g_dbdb_d[l_ac].dbdb007,g_dbdb_d[l_ac].dbdb008,g_dbdb_d[l_ac].dbdb009, 
                   g_dbdb_d[l_ac].dbdb010,g_dbdb_d[l_ac].dbdb011,g_dbdb_d[l_ac].dbdb012,g_dbdb_d[l_ac].dbdb013) 

                WHERE dbdbent = g_enterprise AND dbdbdocno = g_dbda_m.dbdadocno 
 
                  AND dbdbseq = g_dbdb_d_t.dbdbseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("dbdb_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_dbdb_d[l_ac].* = g_dbdb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("dbdb_t",SQLCA.sqlcode,1)
                     LET g_dbdb_d[l_ac].* = g_dbdb_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dbda_m.dbdadocno
               LET gs_keys_bak[1] = g_dbdadocno_t
               LET gs_keys[2] = g_dbdb_d[g_detail_idx].dbdbseq
               LET gs_keys_bak[2] = g_dbdb_d_t.dbdbseq
               CALL adbt450_update_b('dbdb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_dbda_m),util.JSON.stringify(g_dbdb_d_t)
               LET g_log2 = util.JSON.stringify(g_dbda_m),util.JSON.stringify(g_dbdb_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL adbt450_unlock_b("dbdb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_dbdb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_dbdb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="adbt450.input.head" ver="10" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_dbda_m.dbdasite,g_dbda_m.dbdadocdt,g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000, 
          g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004,g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit, 
          g_dbda_m.dbdastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD dbdasite
            
            #add-point:AFTER FIELD dbdasite
            {<point name="input.a.dbdasite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdasite
            #add-point:BEFORE FIELD dbdasite
            {<point name="input.b.dbdasite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dbdasite
            #add-point:ON CHANGE dbdasite
            {<point name="input.g.dbdasite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdadocdt
            #add-point:BEFORE FIELD dbdadocdt
            {<point name="input.b.dbdadocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdadocdt
            
            #add-point:AFTER FIELD dbdadocdt
            {<point name="input.a.dbdadocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbdadocdt
            #add-point:ON CHANGE dbdadocdt
            {<point name="input.g.dbdadocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbda003
            #add-point:BEFORE FIELD dbda003
            {<point name="input.b.dbda003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbda003
            
            #add-point:AFTER FIELD dbda003
            {<point name="input.a.dbda003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbda003
            #add-point:ON CHANGE dbda003
            {<point name="input.g.dbda003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdadocno
            #add-point:BEFORE FIELD dbdadocno
            {<point name="input.b.dbdadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdadocno
            
            #add-point:AFTER FIELD dbdadocno
            {<point name="input.a.dbdadocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbdadocno
            #add-point:ON CHANGE dbdadocno
            {<point name="input.g.dbdadocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbda000
            #add-point:BEFORE FIELD dbda000
            {<point name="input.b.dbda000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbda000
            
            #add-point:AFTER FIELD dbda000
            {<point name="input.a.dbda000" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbda000
            #add-point:ON CHANGE dbda000
            {<point name="input.g.dbda000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbda001
            
            #add-point:AFTER FIELD dbda001
            {<point name="input.a.dbda001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbda001
            #add-point:BEFORE FIELD dbda001
            {<point name="input.b.dbda001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dbda001
            #add-point:ON CHANGE dbda001
            {<point name="input.g.dbda001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbda002
            
            #add-point:AFTER FIELD dbda002
            {<point name="input.a.dbda002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbda002
            #add-point:BEFORE FIELD dbda002
            {<point name="input.b.dbda002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dbda002
            #add-point:ON CHANGE dbda002
            {<point name="input.g.dbda002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbda004
            
            #add-point:AFTER FIELD dbda004
            {<point name="input.a.dbda004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbda004
            #add-point:BEFORE FIELD dbda004
            {<point name="input.b.dbda004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dbda004
            #add-point:ON CHANGE dbda004
            {<point name="input.g.dbda004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbda005
            
            #add-point:AFTER FIELD dbda005
            {<point name="input.a.dbda005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbda005
            #add-point:BEFORE FIELD dbda005
            {<point name="input.b.dbda005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE dbda005
            #add-point:ON CHANGE dbda005
            {<point name="input.g.dbda005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbda006
            #add-point:BEFORE FIELD dbda006
            {<point name="input.b.dbda006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbda006
            
            #add-point:AFTER FIELD dbda006
            {<point name="input.a.dbda006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbda006
            #add-point:ON CHANGE dbda006
            {<point name="input.g.dbda006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdaunit
            #add-point:BEFORE FIELD dbdaunit
            {<point name="input.b.dbdaunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdaunit
            
            #add-point:AFTER FIELD dbdaunit
            {<point name="input.a.dbdaunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbdaunit
            #add-point:ON CHANGE dbdaunit
            {<point name="input.g.dbdaunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD dbdastus
            #add-point:BEFORE FIELD dbdastus
            {<point name="input.b.dbdastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dbdastus
            
            #add-point:AFTER FIELD dbdastus
            {<point name="input.a.dbdastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dbdastus
            #add-point:ON CHANGE dbdastus
            {<point name="input.g.dbdastus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.dbdasite
         ON ACTION controlp INFIELD dbdasite
            #add-point:ON ACTION controlp INFIELD dbdasite
            {<point name="input.c.dbdasite" />}
            #END add-point
 
         #Ctrlp:input.c.dbdadocdt
         ON ACTION controlp INFIELD dbdadocdt
            #add-point:ON ACTION controlp INFIELD dbdadocdt
            {<point name="input.c.dbdadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.dbda003
         ON ACTION controlp INFIELD dbda003
            #add-point:ON ACTION controlp INFIELD dbda003
            {<point name="input.c.dbda003" />}
            #END add-point
 
         #Ctrlp:input.c.dbdadocno
         ON ACTION controlp INFIELD dbdadocno
            #add-point:ON ACTION controlp INFIELD dbdadocno
            {<point name="input.c.dbdadocno" />}
            #END add-point
 
         #Ctrlp:input.c.dbda000
         ON ACTION controlp INFIELD dbda000
            #add-point:ON ACTION controlp INFIELD dbda000
            {<point name="input.c.dbda000" />}
            #END add-point
 
         #Ctrlp:input.c.dbda001
         ON ACTION controlp INFIELD dbda001
            #add-point:ON ACTION controlp INFIELD dbda001
            {<point name="input.c.dbda001" />}
            #END add-point
 
         #Ctrlp:input.c.dbda002
         ON ACTION controlp INFIELD dbda002
            #add-point:ON ACTION controlp INFIELD dbda002
            {<point name="input.c.dbda002" />}
            #END add-point
 
         #Ctrlp:input.c.dbda004
         ON ACTION controlp INFIELD dbda004
            #add-point:ON ACTION controlp INFIELD dbda004
            {<point name="input.c.dbda004" />}
            #END add-point
 
         #Ctrlp:input.c.dbda005
         ON ACTION controlp INFIELD dbda005
            #add-point:ON ACTION controlp INFIELD dbda005
            {<point name="input.c.dbda005" />}
            #END add-point
 
         #Ctrlp:input.c.dbda006
         ON ACTION controlp INFIELD dbda006
            #add-point:ON ACTION controlp INFIELD dbda006
            {<point name="input.c.dbda006" />}
            #END add-point
 
         #Ctrlp:input.c.dbdaunit
         ON ACTION controlp INFIELD dbdaunit
            #add-point:ON ACTION controlp INFIELD dbdaunit
            {<point name="input.c.dbdaunit" />}
            #END add-point
 
         #Ctrlp:input.c.dbdastus
         ON ACTION controlp INFIELD dbdastus
            #add-point:ON ACTION controlp INFIELD dbdastus
            {<point name="input.c.dbdastus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_dbda_m.dbdadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO dbda_t (dbdaent,dbdasite,dbdadocdt,dbda003,dbdadocno,dbda000,dbda001,dbda002, 
                   dbda004,dbda005,dbda006,dbdaunit,dbdastus,dbdaownid,dbdaowndp,dbdacrtid,dbdacrtdp, 
                   dbdacrtdt,dbdacnfid,dbdacnfdt,dbdapstid,dbdapstdt)
               VALUES (g_enterprise,g_dbda_m.dbdasite,g_dbda_m.dbdadocdt,g_dbda_m.dbda003,g_dbda_m.dbdadocno, 
                   g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004,g_dbda_m.dbda005, 
                   g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp, 
                   g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt,g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt, 
                   g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_dbda_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL adbt450_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE dbda_t SET (dbdasite,dbdadocdt,dbda003,dbdadocno,dbda000,dbda001,dbda002,dbda004, 
                   dbda005,dbda006,dbdaunit,dbdastus,dbdaownid,dbdaowndp,dbdacrtid,dbdacrtdp,dbdacrtdt, 
                   dbdacnfid,dbdacnfdt,dbdapstid,dbdapstdt) = (g_dbda_m.dbdasite,g_dbda_m.dbdadocdt, 
                   g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002, 
                   g_dbda_m.dbda004,g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus, 
                   g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp,g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt, 
                   g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt)
                WHERE dbdaent = g_enterprise AND dbdadocno = g_dbdadocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("dbda_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_dbda_m_t)
               LET g_log2 = util.JSON.stringify(g_dbda_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_dbdadocno_t = g_dbda_m.dbdadocno
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="adbt450.input.other" ver="2" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD dbdadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD dbdbsite
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="adbt450.insert" ver="4" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION adbt450_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_dbdb_d.clear()   
 
 
   INITIALIZE g_dbda_m.* LIKE dbda_t.*             #DEFAULT 設定
   
   LET g_dbdadocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_dbda_m.dbdaownid = g_user
      LET g_dbda_m.dbdaowndp = g_dept
      LET g_dbda_m.dbdacrtid = g_user
      LET g_dbda_m.dbdacrtdp = g_dept 
      LET g_dbda_m.dbdacrtdt = cl_get_current()
      LET g_dbda_m.dbdamodid = ""
      LET g_dbda_m.dbdamoddt = ""
      LET g_dbda_m.dbdastus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_dbda_m.dbda006 = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL adbt450_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_dbda_m.* = g_dbda_m_t.*
         CALL adbt450_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_dbdb_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_dbdadocno_t = g_dbda_m.dbdadocno
 
   
   LET g_wc = g_wc,  
              " OR ( dbdaent = '" ||g_enterprise|| "' AND",
              " dbdadocno = '", g_dbda_m.dbdadocno CLIPPED, "' "
 
              , ") "
   
   CLOSE adbt450_cl
   
END FUNCTION
]]>
  </section>
  <section id="adbt450.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION adbt450_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO dbdb_t
                  (dbdbent,
                   dbdbdocno,
                   dbdbseq
                   ,dbdbsite,dbdbunit,dbdb001,dbdb002,dbdb003,dbdb004,dbdb005,dbdb006,dbdb007,dbdb008,dbdb009,dbdb010,dbdb011,dbdb012,dbdb013) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_dbdb_d[g_detail_idx].dbdbsite,g_dbdb_d[g_detail_idx].dbdbunit,g_dbdb_d[g_detail_idx].dbdb001, 
                       g_dbdb_d[g_detail_idx].dbdb002,g_dbdb_d[g_detail_idx].dbdb003,g_dbdb_d[g_detail_idx].dbdb004, 
                       g_dbdb_d[g_detail_idx].dbdb005,g_dbdb_d[g_detail_idx].dbdb006,g_dbdb_d[g_detail_idx].dbdb007, 
                       g_dbdb_d[g_detail_idx].dbdb008,g_dbdb_d[g_detail_idx].dbdb009,g_dbdb_d[g_detail_idx].dbdb010, 
                       g_dbdb_d[g_detail_idx].dbdb011,g_dbdb_d[g_detail_idx].dbdb012,g_dbdb_d[g_detail_idx].dbdb013) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("dbdb_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="adbt450.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION adbt450_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL adbt450_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "dbdb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN adbt450_bcl USING g_enterprise,
                                       g_dbda_m.dbdadocno,g_dbdb_d[g_detail_idx].dbdbseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("adbt450_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="adbt450.main" ver="7" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("adb","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT dbdasite,'',dbdadocdt,dbda003,dbdadocno,dbda000,dbda001,'',dbda002,'', 
       dbda004,'',dbda005,'',dbda006,dbdaunit,dbdastus,dbdaownid,'',dbdaowndp,'',dbdacrtid,'',dbdacrtdp, 
       '',dbdacrtdt,dbdamodid,'',dbdamoddt,dbdacnfid,'',dbdacnfdt,dbdapstid,'',dbdapstdt", 
                      " FROM dbda_t",
                      " WHERE dbdaent= ? AND dbdadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt450_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE dbdasite,dbdadocdt,dbda003,dbdadocno,dbda000,dbda001,dbda002,dbda004, 
       dbda005,dbda006,dbdaunit,dbdastus,dbdaownid,dbdaowndp,dbdacrtid,dbdacrtdp,dbdacrtdt,dbdamodid, 
       dbdamoddt,dbdacnfid,dbdacnfdt,dbdapstid,dbdapstdt,t1.ooefl003 ,t2.pmaal004 ,t3.pmaal004 ,t4.oofa011 , 
       t5.ooefl003 ,t6.oofa011 ,t7.ooefl003 ,t8.oofa011 ,t9.ooefl003 ,t10.oofa011 ,t11.oofa011 ,t12.oofa011", 

               " FROM dbda_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=dbdasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent='"||g_enterprise||"' AND t2.pmaal001=dbda001 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent='"||g_enterprise||"' AND t3.pmaal001=dbda002 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=dbda004  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=dbda005 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=dbdaownid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=dbdaowndp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=dbdacrtid  ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent='"||g_enterprise||"' AND t9.ooefl001=dbdacrtdp AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t10 ON t10.oofaent='"||g_enterprise||"' AND t10.oofa002='2' AND t10.oofa003=dbdamodid  ",
               " LEFT JOIN oofa_t t11 ON t11.oofaent='"||g_enterprise||"' AND t11.oofa002='2' AND t11.oofa003=dbdacnfid  ",
               " LEFT JOIN oofa_t t12 ON t12.oofaent='"||g_enterprise||"' AND t12.oofa002='2' AND t12.oofa003=dbdapstid  ",
 
               " WHERE dbdaent = '" ||g_enterprise|| "' AND dbdadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE adbt450_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_adbt450 WITH FORM cl_ap_formpath("adb",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL adbt450_init()   
 
      #進入選單 Menu (="N")
      CALL adbt450_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_adbt450
      
   END IF 
   
   CLOSE adbt450_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="adbt450.modify" ver="6" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION adbt450_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_dbda_m.dbdadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE adbt450_master_referesh USING g_dbda_m.dbdadocno INTO g_dbda_m.dbdasite,g_dbda_m.dbdadocdt, 
       g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004, 
       g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt, 
       g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt,g_dbda_m.dbdasite_desc, 
       g_dbda_m.dbda001_desc,g_dbda_m.dbda002_desc,g_dbda_m.dbda004_desc,g_dbda_m.dbda005_desc,g_dbda_m.dbdaownid_desc, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp_desc,g_dbda_m.dbdamodid_desc, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdapstid_desc
 
   ERROR ""
  
   LET g_dbdadocno_t = g_dbda_m.dbdadocno
 
   CALL s_transaction_begin()
   
   OPEN adbt450_cl USING g_enterprise,g_dbda_m.dbdadocno
   IF STATUS THEN
      CALL cl_err("OPEN adbt450_cl:", STATUS, 1)
      CLOSE adbt450_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE adbt450_master_referesh USING g_dbda_m.dbdadocno INTO g_dbda_m.dbdasite,g_dbda_m.dbdadocdt, 
       g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004, 
       g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt, 
       g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt,g_dbda_m.dbdasite_desc, 
       g_dbda_m.dbda001_desc,g_dbda_m.dbda002_desc,g_dbda_m.dbda004_desc,g_dbda_m.dbda005_desc,g_dbda_m.dbdaownid_desc, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp_desc,g_dbda_m.dbdamodid_desc, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdapstid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_dbda_m.dbdadocno,SQLCA.sqlcode,0)
      CLOSE adbt450_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL adbt450_show()
   WHILE TRUE
      LET g_dbdadocno_t = g_dbda_m.dbdadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_dbda_m.dbdamodid = g_user 
LET g_dbda_m.dbdamoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL adbt450_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_dbda_m.* = g_dbda_m_t.*
         CALL adbt450_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE dbda_t SET (dbdamodid,dbdamoddt) = (g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt)
       WHERE dbdaent = g_enterprise AND dbdadocno = g_dbdadocno_t
 
                  
      #若單頭key欄位有變更
      IF g_dbda_m.dbdadocno != g_dbdadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE dbdb_t SET dbdbdocno = g_dbda_m.dbdadocno
 
          WHERE dbdbent = g_enterprise AND dbdbdocno = g_dbdadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("dbdb_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("dbdb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_dbda_m.dbdadocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE adbt450_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_dbda_m.dbdadocno,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="adbt450.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="adbt450.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="adbt450.query" ver="2" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION adbt450_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_dbdb_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL adbt450_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL adbt450_browser_fill("")
      CALL adbt450_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL adbt450_filter_show('dbdasite')
   CALL adbt450_filter_show('dbdadocno')
   CALL adbt450_filter_show('dbdadocdt')
   CALL adbt450_filter_show('dbda003')
   CALL adbt450_filter_show('dbda001')
   CALL adbt450_filter_show('dbda002')
   CALL adbt450_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL adbt450_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="adbt450.reproduce" ver="4" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION adbt450_reproduce()
   DEFINE l_newno     LIKE dbda_t.dbdadocno 
   DEFINE l_oldno     LIKE dbda_t.dbdadocno 
 
   DEFINE l_master    RECORD LIKE dbda_t.*
   DEFINE l_detail    RECORD LIKE dbdb_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_dbda_m.dbdadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_dbdadocno_t = g_dbda_m.dbdadocno
 
    
   LET g_dbda_m.dbdadocno = ""
 
    
   CALL adbt450_set_entry('a')
   CALL adbt450_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_dbda_m.dbdaownid = g_user
      LET g_dbda_m.dbdaowndp = g_dept
      LET g_dbda_m.dbdacrtid = g_user
      LET g_dbda_m.dbdacrtdp = g_dept 
      LET g_dbda_m.dbdacrtdt = cl_get_current()
      LET g_dbda_m.dbdamodid = ""
      LET g_dbda_m.dbdamoddt = ""
      LET g_dbda_m.dbdastus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL adbt450_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " dbdadocno = '", g_dbda_m.dbdadocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="adbt450.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION adbt450_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("dbdadocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="adbt450.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION adbt450_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="adbt450.set_no_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION adbt450_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("dbdadocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="adbt450.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION adbt450_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="adbt450.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION adbt450_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_dbda_m.dbdadocno
   LET g_pk_array[1].column = 'dbdadocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="adbt450.show" ver="8" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION adbt450_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_dbda_m_t.* = g_dbda_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL adbt450_b_fill() #單身填充
      CALL adbt450_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_dbda_m.dbdaownid_desc = cl_get_username(g_dbda_m.dbdaownid)
      #LET g_dbda_m.dbdaowndp_desc = cl_get_deptname(g_dbda_m.dbdaowndp)
      #LET g_dbda_m.dbdacrtid_desc = cl_get_username(g_dbda_m.dbdacrtid)
      #LET g_dbda_m.dbdacrtdp_desc = cl_get_deptname(g_dbda_m.dbdacrtdp)
      #LET g_dbda_m.dbdamodid_desc = cl_get_username(g_dbda_m.dbdamodid)
      #LET g_dbda_m.dbdacnfid_desc = cl_get_deptname(g_dbda_m.dbdacnfid)
      #LET g_dbda_m.dbdapstid_desc = cl_get_deptname(g_dbda_m.dbdapstid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL adbt450_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_dbda_m.dbdasite,g_dbda_m.dbdasite_desc,g_dbda_m.dbdadocdt,g_dbda_m.dbda003,g_dbda_m.dbdadocno, 
       g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda001_desc,g_dbda_m.dbda002,g_dbda_m.dbda002_desc, 
       g_dbda_m.dbda004,g_dbda_m.dbda004_desc,g_dbda_m.dbda005,g_dbda_m.dbda005_desc,g_dbda_m.dbda006, 
       g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaownid_desc,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdp_desc, 
       g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamodid_desc,g_dbda_m.dbdamoddt,g_dbda_m.dbdacnfid, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstid_desc,g_dbda_m.dbdapstdt 

   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_dbda_m.dbdastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "J"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/reconciliate.png")
         WHEN "K"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unreconciliate.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_dbdb_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL adbt450_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="adbt450.signature" ver="4" status="" src="s">
    <![CDATA[   #此段落由子樣板a39產生
#+ BPM提交
PRIVATE FUNCTION adbt450_send()
 
   #add-point:send段define
   {<point name="send.define"/>}
   #end add-point 
 
   IF g_dbda_m.dbdadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #重新取得與顯示完整單據資料(最新單據資料)
   EXECUTE adbt450_master_referesh USING g_dbda_m.dbdadocno INTO g_dbda_m.dbdasite,g_dbda_m.dbdadocdt, 
       g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004, 
       g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt, 
       g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt,g_dbda_m.dbdasite_desc, 
       g_dbda_m.dbda001_desc,g_dbda_m.dbda002_desc,g_dbda_m.dbda004_desc,g_dbda_m.dbda005_desc,g_dbda_m.dbdaownid_desc, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp_desc,g_dbda_m.dbdamodid_desc, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdapstid_desc
 
   ERROR ""
   
   CALL s_transaction_begin()
 
   OPEN adbt450_cl USING g_enterprise,g_dbda_m.dbdadocno
   IF STATUS THEN
      CALL cl_err("OPEN adbt450_cl:", STATUS, 1)
      CLOSE adbt450_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH adbt450_cl INTO g_dbda_m.dbdasite,g_dbda_m.dbdasite_desc,g_dbda_m.dbdadocdt,g_dbda_m.dbda003, 
       g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda001_desc,g_dbda_m.dbda002,g_dbda_m.dbda002_desc, 
       g_dbda_m.dbda004,g_dbda_m.dbda004_desc,g_dbda_m.dbda005,g_dbda_m.dbda005_desc,g_dbda_m.dbda006, 
       g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaownid_desc,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdp_desc, 
       g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamodid_desc,g_dbda_m.dbdamoddt,g_dbda_m.dbdacnfid, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstid_desc,g_dbda_m.dbdapstdt 

   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_dbda_m.dbdadocno,SQLCA.sqlcode,0)
      CLOSE adbt450_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL adbt450_show()
   CALL adbt450_set_pk_array()
   
   #add-point: 提交前的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_dbda_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_dbdb_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      CLOSE adbt450_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
   
   #完成狀態更新
   CLOSE adbt450_cl
   CALL s_transaction_end('Y','0')
             
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL adbt450_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_row].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL adbt450_ui_headershow()
   CALL adbt450_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#此段落由子樣板a40產生
#+ BPM抽單
PRIVATE FUNCTION adbt450_draw_out()
 
   #add-point:draw段define
   {<point name="draw.define"/>}
   #end add-point
 
   #檢查資料是否存在
   IF g_dbda_m.dbdadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #LOCK主檔資料
   CALL s_transaction_begin()
 
   #進行BPM抽單功能
   OPEN adbt450_cl USING g_enterprise,g_dbda_m.dbdadocno
   IF STATUS THEN
      CALL cl_err("OPEN adbt450_cl:", STATUS, 1)
      CLOSE adbt450_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH adbt450_cl INTO g_dbda_m.dbdasite,g_dbda_m.dbdasite_desc,g_dbda_m.dbdadocdt,g_dbda_m.dbda003, 
       g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda001_desc,g_dbda_m.dbda002,g_dbda_m.dbda002_desc, 
       g_dbda_m.dbda004,g_dbda_m.dbda004_desc,g_dbda_m.dbda005,g_dbda_m.dbda005_desc,g_dbda_m.dbda006, 
       g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaownid_desc,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdp_desc, 
       g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamodid_desc,g_dbda_m.dbdamoddt,g_dbda_m.dbdacnfid, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstid_desc,g_dbda_m.dbdapstdt 

   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_dbda_m.dbdadocno,SQLCA.sqlcode,0)
      CLOSE adbt450_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      CLOSE adbt450_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF    
 
   #完成狀態更新
   CLOSE adbt450_cl
   CALL s_transaction_end('Y','0')
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL adbt450_ui_headershow()  
   CALL adbt450_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="adbt450.state_change" ver="8" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION adbt450_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_dbda_m.dbdadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_dbda_m.dbdastus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "S"
               HIDE OPTION "posted"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Z"
               HIDE OPTION "unposted"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "J"
               HIDE OPTION "reconciliate"
            WHEN "K"
               HIDE OPTION "unreconciliate"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION posted
         LET lc_state = "S"
         #add-point:action控制
         {<point name="statechange.posted"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION unposted
         LET lc_state = "Z"
         #add-point:action控制
         {<point name="statechange.unposted"/>}
         #end add-point
         EXIT MENU
      ON ACTION approved
         LET lc_state = "A"
         #add-point:action控制
         {<point name="statechange.approved"/>}
         #end add-point
         EXIT MENU
      #ON ACTION withdraw
      #   LET lc_state = "D"
      #   #add-point:action控制
      #   {<point name="statechange.withdraw"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION rejection
         LET lc_state = "R"
         #add-point:action控制
         {<point name="statechange.rejection"/>}
         #end add-point
         EXIT MENU
      #ON ACTION signing
      #   LET lc_state = "W"
      #   #add-point:action控制
      #   {<point name="statechange.signing"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION reconciliate
         LET lc_state = "J"
         #add-point:action控制
         {<point name="statechange.reconciliate"/>}
         #end add-point
         EXIT MENU
      ON ACTION unreconciliate
         LET lc_state = "K"
         #add-point:action控制
         {<point name="statechange.unreconciliate"/>}
         #end add-point
         EXIT MENU
      
      #此段落由子樣板a36產生
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT adbt450_send() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_send()已有執行update動作
 
         EXIT MENU
 
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT adbt450_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_draw_out()已有執行update動作
         EXIT MENU
 
 
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "S"
      AND lc_state <> "X"
      AND lc_state <> "Z"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "J"
      AND lc_state <> "K"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE dbda_t SET dbdastus = lc_state 
    WHERE dbdaent = g_enterprise AND dbdadocno = g_dbda_m.dbdadocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "J"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/reconciliate.png")
         WHEN "K"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unreconciliate.png")
         
      END CASE
      LET g_dbda_m.dbdastus = lc_state
      DISPLAY BY NAME g_dbda_m.dbdastus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="adbt450.ui_browser_refresh" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION adbt450_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_dbdadocno = g_dbda_m.dbdadocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="adbt450.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION adbt450_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="adbt450.ui_dialog" ver="25" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION adbt450_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL adbt450_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL adbt450_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_dbdadocno = g_dbdadocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL adbt450_fetch('') # reload data
               LET l_ac = 1
               CALL adbt450_ui_detailshow() #Setting the current row 
      
               CALL adbt450_idx_chk()
               #NEXT FIELD dbdbseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_dbdb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL adbt450_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL adbt450_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL adbt450_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL adbt450_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL adbt450_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL adbt450_statechange()
            EXIT DIALOG
      
         #此段落由子樣板a32產生
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
 
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL adbt450_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL adbt450_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL adbt450_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL adbt450_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL adbt450_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt450_idx_chk()
            
         ON ACTION previous
            CALL adbt450_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt450_idx_chk()
            
         ON ACTION jump
            CALL adbt450_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt450_idx_chk()
            
         ON ACTION next
            CALL adbt450_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt450_idx_chk()
            
         ON ACTION last
            CALL adbt450_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt450_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD dbdbseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL adbt450_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL adbt450_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL adbt450_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL adbt450_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL adbt450_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL adbt450_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL adbt450_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL adbt450_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL adbt450_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_dbda_m.dbdadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="adbt450.ui_headershow" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION adbt450_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_dbda_m.dbdadocno = g_browser[g_current_idx].b_dbdadocno   
 
   EXECUTE adbt450_master_referesh USING g_dbda_m.dbdadocno INTO g_dbda_m.dbdasite,g_dbda_m.dbdadocdt, 
       g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004, 
       g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt, 
       g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt,g_dbda_m.dbdasite_desc, 
       g_dbda_m.dbda001_desc,g_dbda_m.dbda002_desc,g_dbda_m.dbda004_desc,g_dbda_m.dbda005_desc,g_dbda_m.dbdaownid_desc, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp_desc,g_dbda_m.dbdamodid_desc, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdapstid_desc
   CALL adbt450_show()
   
END FUNCTION
]]>
  </section>
  <section id="adbt450.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION adbt450_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adbt450_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="adbt450.update_b" ver="2" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION adbt450_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "dbdb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE dbdb_t 
         SET (dbdbdocno,
              dbdbseq
              ,dbdbsite,dbdbunit,dbdb001,dbdb002,dbdb003,dbdb004,dbdb005,dbdb006,dbdb007,dbdb008,dbdb009,dbdb010,dbdb011,dbdb012,dbdb013) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_dbdb_d[g_detail_idx].dbdbsite,g_dbdb_d[g_detail_idx].dbdbunit,g_dbdb_d[g_detail_idx].dbdb001, 
                  g_dbdb_d[g_detail_idx].dbdb002,g_dbdb_d[g_detail_idx].dbdb003,g_dbdb_d[g_detail_idx].dbdb004, 
                  g_dbdb_d[g_detail_idx].dbdb005,g_dbdb_d[g_detail_idx].dbdb006,g_dbdb_d[g_detail_idx].dbdb007, 
                  g_dbdb_d[g_detail_idx].dbdb008,g_dbdb_d[g_detail_idx].dbdb009,g_dbdb_d[g_detail_idx].dbdb010, 
                  g_dbdb_d[g_detail_idx].dbdb011,g_dbdb_d[g_detail_idx].dbdb012,g_dbdb_d[g_detail_idx].dbdb013)  

         WHERE dbdbent = g_enterprise AND dbdbdocno = ps_keys_bak[1] AND dbdbseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("dbdb_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("dbdb_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
