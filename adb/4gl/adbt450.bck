#該程式未解開Section, 採用最新樣板產出!
{<section id="adbt450.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0014(2016-08-30 19:31:14), PR版次:0014(2016-08-30 17:02:58)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000291
#+ Filename...: adbt450
#+ Description: 寄銷客戶庫存異動維護作業
#+ Creator....: 02748(2014-04-21 14:20:31)
#+ Modifier...: 05599 -SD/PR- 05599
 
{</section>}
 
{<section id="adbt450.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
#151224-00025#1  15/12/28 By tsungyung 手動輸入特徵碼沒有同步新增inam_t[料件產品特徵明細檔](整批修改)
#160314-00009#2  16/03/16 By zhujing   各程式增加产品特征是否需要自动开窗的程式段处理
#160318-00025#27 16/04/29 BY 07900     校验代码重复错误讯息的修改
#160719-00015#1  16/07/19 by sakura    無設定查詢方案,應查無資料
#160818-00017#6  2016/08/23 by 08172  修改删除时重新检查状态
#160826-00032#1  16/08/30 By Charles4m 批號沒有開窗功能
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_dbda_m        RECORD
       dbdasite LIKE dbda_t.dbdasite, 
   dbdasite_desc LIKE type_t.chr80, 
   dbdadocdt LIKE dbda_t.dbdadocdt, 
   dbda003 LIKE dbda_t.dbda003, 
   dbdadocno LIKE dbda_t.dbdadocno, 
   dbda000 LIKE dbda_t.dbda000, 
   dbda001 LIKE dbda_t.dbda001, 
   dbda001_desc LIKE type_t.chr80, 
   dbda002 LIKE dbda_t.dbda002, 
   dbda002_desc LIKE type_t.chr80, 
   dbda004 LIKE dbda_t.dbda004, 
   dbda004_desc LIKE type_t.chr80, 
   dbda005 LIKE dbda_t.dbda005, 
   dbda005_desc LIKE type_t.chr80, 
   dbda006 LIKE dbda_t.dbda006, 
   dbdaunit LIKE dbda_t.dbdaunit, 
   dbdastus LIKE dbda_t.dbdastus, 
   dbdaownid LIKE dbda_t.dbdaownid, 
   dbdaownid_desc LIKE type_t.chr80, 
   dbdaowndp LIKE dbda_t.dbdaowndp, 
   dbdaowndp_desc LIKE type_t.chr80, 
   dbdacrtid LIKE dbda_t.dbdacrtid, 
   dbdacrtid_desc LIKE type_t.chr80, 
   dbdacrtdp LIKE dbda_t.dbdacrtdp, 
   dbdacrtdp_desc LIKE type_t.chr80, 
   dbdacrtdt LIKE dbda_t.dbdacrtdt, 
   dbdamodid LIKE dbda_t.dbdamodid, 
   dbdamodid_desc LIKE type_t.chr80, 
   dbdamoddt LIKE dbda_t.dbdamoddt, 
   dbdacnfid LIKE dbda_t.dbdacnfid, 
   dbdacnfid_desc LIKE type_t.chr80, 
   dbdacnfdt LIKE dbda_t.dbdacnfdt, 
   dbdapstid LIKE dbda_t.dbdapstid, 
   dbdapstid_desc LIKE type_t.chr80, 
   dbdapstdt LIKE dbda_t.dbdapstdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_dbdb_d        RECORD
       dbdbsite LIKE dbdb_t.dbdbsite, 
   dbdbunit LIKE dbdb_t.dbdbunit, 
   dbdbseq LIKE dbdb_t.dbdbseq, 
   dbdb001 LIKE dbdb_t.dbdb001, 
   dbdb002 LIKE dbdb_t.dbdb002, 
   dbdb003 LIKE dbdb_t.dbdb003, 
   dbdb004 LIKE dbdb_t.dbdb004, 
   dbdb005 LIKE dbdb_t.dbdb005, 
   dbdb005_desc LIKE type_t.chr500, 
   dbdb005_desc_desc LIKE type_t.chr500, 
   dbdb006 LIKE dbdb_t.dbdb006, 
   dbdb007 LIKE dbdb_t.dbdb007, 
   dbdb015 LIKE dbdb_t.dbdb015, 
   dbdb014 LIKE dbdb_t.dbdb014, 
   dbdb014_desc LIKE type_t.chr500, 
   dbdb008 LIKE dbdb_t.dbdb008, 
   dbdb009 LIKE dbdb_t.dbdb009, 
   dbdb009_desc LIKE type_t.chr500, 
   dbdb010 LIKE dbdb_t.dbdb010, 
   dbdb011 LIKE dbdb_t.dbdb011, 
   dbdb012 LIKE dbdb_t.dbdb012, 
   dbdb013 LIKE dbdb_t.dbdb013
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_dbdasite LIKE dbda_t.dbdasite,
   b_dbdasite_desc LIKE type_t.chr80,
      b_dbdadocno LIKE dbda_t.dbdadocno,
      b_dbdadocdt LIKE dbda_t.dbdadocdt,
      b_dbda003 LIKE dbda_t.dbda003,
      b_dbda001 LIKE dbda_t.dbda001,
   b_dbda001_desc LIKE type_t.chr80,
      b_dbda002 LIKE dbda_t.dbda002,
   b_dbda002_desc LIKE type_t.chr80
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_flag        LIKE type_t.num5
#end add-point
       
#模組變數(Module Variables)
DEFINE g_dbda_m          type_g_dbda_m
DEFINE g_dbda_m_t        type_g_dbda_m
DEFINE g_dbda_m_o        type_g_dbda_m
DEFINE g_dbda_m_mask_o   type_g_dbda_m #轉換遮罩前資料
DEFINE g_dbda_m_mask_n   type_g_dbda_m #轉換遮罩後資料
 
   DEFINE g_dbdadocno_t LIKE dbda_t.dbdadocno
 
 
DEFINE g_dbdb_d          DYNAMIC ARRAY OF type_g_dbdb_d
DEFINE g_dbdb_d_t        type_g_dbdb_d
DEFINE g_dbdb_d_o        type_g_dbdb_d
DEFINE g_dbdb_d_mask_o   DYNAMIC ARRAY OF type_g_dbdb_d #轉換遮罩前資料
DEFINE g_dbdb_d_mask_n   DYNAMIC ARRAY OF type_g_dbdb_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="adbt450.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   DEFINE l_success LIKE type_t.num5 #150308-00001#1  By Ken 150309
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("adb","")
 
   #add-point:作業初始化 name="main.init"
   LET g_argv[1] = cl_replace_str(g_argv[1], '\"', '')
   IF cl_null(g_argv[1]) THEN
      LET g_argv[1] = '1'
   END IF
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT dbdasite,'',dbdadocdt,dbda003,dbdadocno,dbda000,dbda001,'',dbda002,'', 
       dbda004,'',dbda005,'',dbda006,dbdaunit,dbdastus,dbdaownid,'',dbdaowndp,'',dbdacrtid,'',dbdacrtdp, 
       '',dbdacrtdt,dbdamodid,'',dbdamoddt,dbdacnfid,'',dbdacnfdt,dbdapstid,'',dbdapstdt", 
                      " FROM dbda_t",
                      " WHERE dbdaent= ? AND dbdadocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt450_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.dbdasite,t0.dbdadocdt,t0.dbda003,t0.dbdadocno,t0.dbda000,t0.dbda001, 
       t0.dbda002,t0.dbda004,t0.dbda005,t0.dbda006,t0.dbdaunit,t0.dbdastus,t0.dbdaownid,t0.dbdaowndp, 
       t0.dbdacrtid,t0.dbdacrtdp,t0.dbdacrtdt,t0.dbdamodid,t0.dbdamoddt,t0.dbdacnfid,t0.dbdacnfdt,t0.dbdapstid, 
       t0.dbdapstdt,t1.ooefl003 ,t2.pmaal004 ,t3.pmaal004 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011 ,t7.ooefl003 , 
       t8.ooag011 ,t9.ooefl003 ,t10.ooag011 ,t11.ooag011 ,t12.ooag011",
               " FROM dbda_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.dbdasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent="||g_enterprise||" AND t2.pmaal001=t0.dbda001 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.dbda002 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=t0.dbda004  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=t0.dbda005 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=t0.dbdaownid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent="||g_enterprise||" AND t7.ooefl001=t0.dbdaowndp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent="||g_enterprise||" AND t8.ooag001=t0.dbdacrtid  ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent="||g_enterprise||" AND t9.ooefl001=t0.dbdacrtdp AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent="||g_enterprise||" AND t10.ooag001=t0.dbdamodid  ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent="||g_enterprise||" AND t11.ooag001=t0.dbdacnfid  ",
               " LEFT JOIN ooag_t t12 ON t12.ooagent="||g_enterprise||" AND t12.ooag001=t0.dbdapstid  ",
 
               " WHERE t0.dbdaent = " ||g_enterprise|| " AND t0.dbdadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE adbt450_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_adbt450 WITH FORM cl_ap_formpath("adb",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL adbt450_init()   
 
      #進入選單 Menu (="N")
      CALL adbt450_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_adbt450
      
   END IF 
   
   CLOSE adbt450_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   CALL s_aooi500_drop_temp() RETURNING l_success #150308-00001#1  By Ken 150309
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="adbt450.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION adbt450_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success LIKE type_t.num5 #150308-00001#1  By Ken 150309
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('dbdastus','13','N,Y,S,Z,A,D,R,W,X')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL s_aooi500_create_temp() RETURNING l_success #150308-00001#1  By Ken 150309   
   CALL cl_set_combo_scc('dbda000','6054') 
   CALL cl_set_combo_scc('dbdb001','6053')
   LET g_errshow = '1'  
   IF g_argv[1] <> '1' THEN
      CALL cl_set_comp_visible('dbda006',FALSE)  
   END IF      
   #160314-00009#2 zhujing add 2016-3-16---(S)
   #判斷據點參數若不使用產品特徵時，則產品特徵需隱藏不可以維護(據點參數:S-BAS-0036)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN
      CALL cl_set_comp_visible("dbdb006",FALSE)
   END IF
   #160314-00009#2 zhujing add 2016-3-16---(E)
   #end add-point
   
   #初始化搜尋條件
   CALL adbt450_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="adbt450.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION adbt450_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL adbt450_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_dbda_m.* TO NULL
         CALL g_dbdb_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL adbt450_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL adbt450_fetch('') # reload data
               LET l_ac = 1
               CALL adbt450_ui_detailshow() #Setting the current row 
         
               CALL adbt450_idx_chk()
               #NEXT FIELD dbdbseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_dbdb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adbt450_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL adbt450_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION detail_qrystr
               MENU "" ATTRIBUTE(STYLE="popup")
                  #add-point:ON ACTION detail_qrystr相關動作 name="menu.detail_show.page1_sub.detail_qrystr"
                  
                  #END add-point
                                 #應用 a43 樣板自動產生(Version:4)
               ON ACTION prog_adbt540
                  LET g_action_choice="prog_adbt540"
                  IF cl_auth_chk_act("prog_adbt540") THEN
                     
                     #add-point:ON ACTION prog_adbt540 name="menu.detail_show.page1_sub.prog_adbt540"
               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               #150409-00006#1 Add By Ken 150416
               CASE g_dbdb_d[g_detail_idx].dbdb001
                  WHEN "1"  
                     INITIALIZE la_param.* TO NULL
                     LET la_param.prog     = 'adbt540'
                     #LET la_param.param[1] = "1"
                     LET la_param.param[1] = "1 = 1"
                     LET la_param.param[2] = g_dbdb_d[l_ac].dbdb002
               END CASE
               
               

               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)
 


                     #END add-point
                     
                  END IF
 
 
 
 
               END MENU
 
 
 
               #add-point:ON ACTION detail_qrystr name="menu.detail_show.page1.detail_qrystr"
               
               #END add-point
 
 
 
 
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL adbt450_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL adbt450_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL adbt450_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL adbt450_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL adbt450_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL adbt450_set_act_visible()   
            CALL adbt450_set_act_no_visible()
            IF NOT (g_dbda_m.dbdadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " dbdaent = " ||g_enterprise|| " AND",
                                  " dbdadocno = '", g_dbda_m.dbdadocno, "' "
 
               #填到對應位置
               CALL adbt450_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "dbda_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "dbdb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL adbt450_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "dbda_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "dbdb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL adbt450_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL adbt450_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL adbt450_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL adbt450_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt450_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL adbt450_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt450_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL adbt450_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt450_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL adbt450_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt450_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL adbt450_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt450_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_dbdb_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD dbdbseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL adbt450_modify()
               #add-point:ON ACTION modify name="menu.modify"
               #160818-00017#6 -s by 08172
               CALL adbt450_set_act_visible()
               CALL adbt450_set_act_no_visible()
               #160818-00017#6 -e by 08172
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL adbt450_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               #160818-00017#6 -s by 08172
               CALL adbt450_set_act_visible()
               CALL adbt450_set_act_no_visible()
               #160818-00017#6 -e by 08172
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL adbt450_delete()
               #add-point:ON ACTION delete name="menu.delete"
               #160818-00017#6 -s by 08172
               CALL adbt450_set_act_visible()
               CALL adbt450_set_act_no_visible()
               #160818-00017#6 -e by 08172
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL adbt450_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               &include "erp/adb/adbt450_rep.4gl"
               #add-point:ON ACTION output.after
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL adbt450_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL adbt450_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_aooi130
            LET g_action_choice="prog_aooi130"
            IF cl_auth_chk_act("prog_aooi130") THEN
               
               #add-point:ON ACTION prog_aooi130 name="menu.prog_aooi130"
               #應用 a45 樣板自動產生(Version:2)
               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",g_dbda_m.dbda004)
 


               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL adbt450_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL adbt450_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL adbt450_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_dbda_m.dbdadocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="adbt450.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION adbt450_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_where           STRING
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   LET l_where = s_aooi500_sql_where(g_prog,'dbdasite')
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT dbdadocno ",
                      " FROM dbda_t ",
                      " ",
                      " LEFT JOIN dbdb_t ON dbdbent = dbdaent AND dbdadocno = dbdbdocno ", "  ",
                      #add-point:browser_fill段sql(dbdb_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " ", 
                      " ", 
 
 
                      " WHERE dbdaent = " ||g_enterprise|| " AND dbdbent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("dbda_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT dbdadocno ",
                      " FROM dbda_t ", 
                      "  ",
                      "  ",
                      " WHERE dbdaent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("dbda_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   LET l_sub_sql = l_sub_sql CLIPPED," AND ",l_where
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_dbda_m.* TO NULL
      CALL g_dbdb_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.dbdasite,t0.dbdadocno,t0.dbdadocdt,t0.dbda003,t0.dbda001,t0.dbda002 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.dbdastus,t0.dbdasite,t0.dbdadocno,t0.dbdadocdt,t0.dbda003,t0.dbda001, 
          t0.dbda002,t1.ooefl003 ,t2.pmaal004 ,t3.pmaal004 ",
                  " FROM dbda_t t0",
                  "  ",
                  "  LEFT JOIN dbdb_t ON dbdbent = dbdaent AND dbdadocno = dbdbdocno ", "  ", 
                  #add-point:browser_fill段sql(dbdb_t1) name="browser_fill.join.dbdb_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.dbdasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent="||g_enterprise||" AND t2.pmaal001=t0.dbda001 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.dbda002 AND t3.pmaal002='"||g_dlang||"' ",
 
                  " WHERE t0.dbdaent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("dbda_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.dbdastus,t0.dbdasite,t0.dbdadocno,t0.dbdadocdt,t0.dbda003,t0.dbda001, 
          t0.dbda002,t1.ooefl003 ,t2.pmaal004 ,t3.pmaal004 ",
                  " FROM dbda_t t0",
                  "  ",
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.dbdasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent="||g_enterprise||" AND t2.pmaal001=t0.dbda001 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.dbda002 AND t3.pmaal002='"||g_dlang||"' ",
 
                  " WHERE t0.dbdaent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("dbda_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   LET g_sql = g_sql CLIPPED," AND ",l_where
   #end add-point
   LET g_sql = g_sql, " ORDER BY dbdadocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"dbda_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_dbdasite,g_browser[g_cnt].b_dbdadocno, 
          g_browser[g_cnt].b_dbdadocdt,g_browser[g_cnt].b_dbda003,g_browser[g_cnt].b_dbda001,g_browser[g_cnt].b_dbda002, 
          g_browser[g_cnt].b_dbdasite_desc,g_browser[g_cnt].b_dbda001_desc,g_browser[g_cnt].b_dbda002_desc 
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL adbt450_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "S"
            LET g_browser[g_cnt].b_statepic = "stus/16/posted.png"
         WHEN "Z"
            LET g_browser[g_cnt].b_statepic = "stus/16/unposted.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_dbdadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="adbt450.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION adbt450_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_dbda_m.dbdadocno = g_browser[g_current_idx].b_dbdadocno   
 
   EXECUTE adbt450_master_referesh USING g_dbda_m.dbdadocno INTO g_dbda_m.dbdasite,g_dbda_m.dbdadocdt, 
       g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004, 
       g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt, 
       g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt,g_dbda_m.dbdasite_desc, 
       g_dbda_m.dbda001_desc,g_dbda_m.dbda002_desc,g_dbda_m.dbda004_desc,g_dbda_m.dbda005_desc,g_dbda_m.dbdaownid_desc, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp_desc,g_dbda_m.dbdamodid_desc, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdapstid_desc
   
   CALL adbt450_dbda_t_mask()
   CALL adbt450_show()
      
END FUNCTION
 
{</section>}
 
{<section id="adbt450.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION adbt450_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION adbt450_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_dbdadocno = g_dbda_m.dbdadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION adbt450_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_dbda_m.* TO NULL
   CALL g_dbdb_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON dbdasite,dbdadocdt,dbda003,dbdadocno,dbda001,dbda002,dbda004,dbda005, 
          dbda006,dbdaunit,dbdastus,dbdaownid,dbdaowndp,dbdacrtid,dbdacrtdp,dbdacrtdt,dbdamodid,dbdamoddt, 
          dbdacnfid,dbdacnfdt,dbdapstid,dbdapstdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<dbdacrtdt>>----
         AFTER FIELD dbdacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<dbdamoddt>>----
         AFTER FIELD dbdamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dbdacnfdt>>----
         AFTER FIELD dbdacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dbdapstdt>>----
         AFTER FIELD dbdapstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
 
            
         #一般欄位開窗相關處理    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdasite
            #add-point:BEFORE FIELD dbdasite name="construct.b.dbdasite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdasite
            
            #add-point:AFTER FIELD dbdasite name="construct.a.dbdasite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.dbdasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdasite
            #add-point:ON ACTION controlp INFIELD dbdasite name="construct.c.dbdasite"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'dbdasite',g_site,'c') #150308-00001#1  By Ken add 'c' 150309
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO dbdasite  #顯示到畫面上
            NEXT FIELD dbdasite                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdadocdt
            #add-point:BEFORE FIELD dbdadocdt name="construct.b.dbdadocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdadocdt
            
            #add-point:AFTER FIELD dbdadocdt name="construct.a.dbdadocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.dbdadocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdadocdt
            #add-point:ON ACTION controlp INFIELD dbdadocdt name="construct.c.dbdadocdt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbda003
            #add-point:BEFORE FIELD dbda003 name="construct.b.dbda003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbda003
            
            #add-point:AFTER FIELD dbda003 name="construct.a.dbda003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.dbda003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbda003
            #add-point:ON ACTION controlp INFIELD dbda003 name="construct.c.dbda003"
            
            #END add-point
 
 
         #Ctrlp:construct.c.dbdadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdadocno
            #add-point:ON ACTION controlp INFIELD dbdadocno name="construct.c.dbdadocno"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbdadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdadocno  #顯示到畫面上
            NEXT FIELD dbdadocno                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdadocno
            #add-point:BEFORE FIELD dbdadocno name="construct.b.dbdadocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdadocno
            
            #add-point:AFTER FIELD dbdadocno name="construct.a.dbdadocno"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.dbda001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbda001
            #add-point:ON ACTION controlp INFIELD dbda001 name="construct.c.dbda001"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_17()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbda001  #顯示到畫面上
            NEXT FIELD dbda001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbda001
            #add-point:BEFORE FIELD dbda001 name="construct.b.dbda001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbda001
            
            #add-point:AFTER FIELD dbda001 name="construct.a.dbda001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.dbda002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbda002
            #add-point:ON ACTION controlp INFIELD dbda002 name="construct.c.dbda002"
            #此段落由子樣板a08產生
            #開窗c段            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #lori522612  150121  add ----------------------(S)
            #CALL q_pmac002_1()                           #呼叫開窗
            LET g_qryparam.arg2 = 'ALL'
            CALL q_pmac002_6()
            #lori522612  150121  add ----------------------(E)
            DISPLAY g_qryparam.return1 TO dbda002  #顯示到畫面上
            NEXT FIELD dbda002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbda002
            #add-point:BEFORE FIELD dbda002 name="construct.b.dbda002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbda002
            
            #add-point:AFTER FIELD dbda002 name="construct.a.dbda002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.dbda004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbda004
            #add-point:ON ACTION controlp INFIELD dbda004 name="construct.c.dbda004"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbda004  #顯示到畫面上
            NEXT FIELD dbda004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbda004
            #add-point:BEFORE FIELD dbda004 name="construct.b.dbda004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbda004
            
            #add-point:AFTER FIELD dbda004 name="construct.a.dbda004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.dbda005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbda005
            #add-point:ON ACTION controlp INFIELD dbda005 name="construct.c.dbda005"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbda005  #顯示到畫面上
            NEXT FIELD dbda005                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbda005
            #add-point:BEFORE FIELD dbda005 name="construct.b.dbda005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbda005
            
            #add-point:AFTER FIELD dbda005 name="construct.a.dbda005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbda006
            #add-point:BEFORE FIELD dbda006 name="construct.b.dbda006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbda006
            
            #add-point:AFTER FIELD dbda006 name="construct.a.dbda006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.dbda006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbda006
            #add-point:ON ACTION controlp INFIELD dbda006 name="construct.c.dbda006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdaunit
            #add-point:BEFORE FIELD dbdaunit name="construct.b.dbdaunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdaunit
            
            #add-point:AFTER FIELD dbdaunit name="construct.a.dbdaunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.dbdaunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdaunit
            #add-point:ON ACTION controlp INFIELD dbdaunit name="construct.c.dbdaunit"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdastus
            #add-point:BEFORE FIELD dbdastus name="construct.b.dbdastus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdastus
            
            #add-point:AFTER FIELD dbdastus name="construct.a.dbdastus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.dbdastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdastus
            #add-point:ON ACTION controlp INFIELD dbdastus name="construct.c.dbdastus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.dbdaownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdaownid
            #add-point:ON ACTION controlp INFIELD dbdaownid name="construct.c.dbdaownid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdaownid  #顯示到畫面上
            NEXT FIELD dbdaownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdaownid
            #add-point:BEFORE FIELD dbdaownid name="construct.b.dbdaownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdaownid
            
            #add-point:AFTER FIELD dbdaownid name="construct.a.dbdaownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.dbdaowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdaowndp
            #add-point:ON ACTION controlp INFIELD dbdaowndp name="construct.c.dbdaowndp"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdaowndp  #顯示到畫面上
            NEXT FIELD dbdaowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdaowndp
            #add-point:BEFORE FIELD dbdaowndp name="construct.b.dbdaowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdaowndp
            
            #add-point:AFTER FIELD dbdaowndp name="construct.a.dbdaowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.dbdacrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdacrtid
            #add-point:ON ACTION controlp INFIELD dbdacrtid name="construct.c.dbdacrtid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdacrtid  #顯示到畫面上
            NEXT FIELD dbdacrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdacrtid
            #add-point:BEFORE FIELD dbdacrtid name="construct.b.dbdacrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdacrtid
            
            #add-point:AFTER FIELD dbdacrtid name="construct.a.dbdacrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.dbdacrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdacrtdp
            #add-point:ON ACTION controlp INFIELD dbdacrtdp name="construct.c.dbdacrtdp"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdacrtdp  #顯示到畫面上
            NEXT FIELD dbdacrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdacrtdp
            #add-point:BEFORE FIELD dbdacrtdp name="construct.b.dbdacrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdacrtdp
            
            #add-point:AFTER FIELD dbdacrtdp name="construct.a.dbdacrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdacrtdt
            #add-point:BEFORE FIELD dbdacrtdt name="construct.b.dbdacrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.dbdamodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdamodid
            #add-point:ON ACTION controlp INFIELD dbdamodid name="construct.c.dbdamodid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdamodid  #顯示到畫面上
            NEXT FIELD dbdamodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdamodid
            #add-point:BEFORE FIELD dbdamodid name="construct.b.dbdamodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdamodid
            
            #add-point:AFTER FIELD dbdamodid name="construct.a.dbdamodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdamoddt
            #add-point:BEFORE FIELD dbdamoddt name="construct.b.dbdamoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.dbdacnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdacnfid
            #add-point:ON ACTION controlp INFIELD dbdacnfid name="construct.c.dbdacnfid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdacnfid  #顯示到畫面上
            NEXT FIELD dbdacnfid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdacnfid
            #add-point:BEFORE FIELD dbdacnfid name="construct.b.dbdacnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdacnfid
            
            #add-point:AFTER FIELD dbdacnfid name="construct.a.dbdacnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdacnfdt
            #add-point:BEFORE FIELD dbdacnfdt name="construct.b.dbdacnfdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.dbdapstid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdapstid
            #add-point:ON ACTION controlp INFIELD dbdapstid name="construct.c.dbdapstid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdapstid  #顯示到畫面上
            NEXT FIELD dbdapstid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdapstid
            #add-point:BEFORE FIELD dbdapstid name="construct.b.dbdapstid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdapstid
            
            #add-point:AFTER FIELD dbdapstid name="construct.a.dbdapstid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdapstdt
            #add-point:BEFORE FIELD dbdapstdt name="construct.b.dbdapstdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON dbdbsite,dbdbunit,dbdbseq,dbdb001,dbdb002,dbdb003,dbdb004,dbdb005,dbdb006, 
          dbdb007,dbdb015,dbdb014,dbdb008,dbdb009,dbdb010,dbdb011,dbdb012,dbdb013
           FROM s_detail1[1].dbdbsite,s_detail1[1].dbdbunit,s_detail1[1].dbdbseq,s_detail1[1].dbdb001, 
               s_detail1[1].dbdb002,s_detail1[1].dbdb003,s_detail1[1].dbdb004,s_detail1[1].dbdb005,s_detail1[1].dbdb006, 
               s_detail1[1].dbdb007,s_detail1[1].dbdb015,s_detail1[1].dbdb014,s_detail1[1].dbdb008,s_detail1[1].dbdb009, 
               s_detail1[1].dbdb010,s_detail1[1].dbdb011,s_detail1[1].dbdb012,s_detail1[1].dbdb013
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdbsite
            #add-point:BEFORE FIELD dbdbsite name="construct.b.page1.dbdbsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdbsite
            
            #add-point:AFTER FIELD dbdbsite name="construct.a.page1.dbdbsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.dbdbsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdbsite
            #add-point:ON ACTION controlp INFIELD dbdbsite name="construct.c.page1.dbdbsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdbunit
            #add-point:BEFORE FIELD dbdbunit name="construct.b.page1.dbdbunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdbunit
            
            #add-point:AFTER FIELD dbdbunit name="construct.a.page1.dbdbunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.dbdbunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdbunit
            #add-point:ON ACTION controlp INFIELD dbdbunit name="construct.c.page1.dbdbunit"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdbseq
            #add-point:BEFORE FIELD dbdbseq name="construct.b.page1.dbdbseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdbseq
            
            #add-point:AFTER FIELD dbdbseq name="construct.a.page1.dbdbseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.dbdbseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdbseq
            #add-point:ON ACTION controlp INFIELD dbdbseq name="construct.c.page1.dbdbseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb001
            #add-point:BEFORE FIELD dbdb001 name="construct.b.page1.dbdb001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb001
            
            #add-point:AFTER FIELD dbdb001 name="construct.a.page1.dbdb001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.dbdb001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb001
            #add-point:ON ACTION controlp INFIELD dbdb001 name="construct.c.page1.dbdb001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb002
            #add-point:BEFORE FIELD dbdb002 name="construct.b.page1.dbdb002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb002
            
            #add-point:AFTER FIELD dbdb002 name="construct.a.page1.dbdb002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.dbdb002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb002
            #add-point:ON ACTION controlp INFIELD dbdb002 name="construct.c.page1.dbdb002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb003
            #add-point:BEFORE FIELD dbdb003 name="construct.b.page1.dbdb003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb003
            
            #add-point:AFTER FIELD dbdb003 name="construct.a.page1.dbdb003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.dbdb003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb003
            #add-point:ON ACTION controlp INFIELD dbdb003 name="construct.c.page1.dbdb003"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.dbdb004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb004
            #add-point:ON ACTION controlp INFIELD dbdb004 name="construct.c.page1.dbdb004"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdb004  #顯示到畫面上
            NEXT FIELD dbdb004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb004
            #add-point:BEFORE FIELD dbdb004 name="construct.b.page1.dbdb004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb004
            
            #add-point:AFTER FIELD dbdb004 name="construct.a.page1.dbdb004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.dbdb005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb005
            #add-point:ON ACTION controlp INFIELD dbdb005 name="construct.c.page1.dbdb005"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdb005  #顯示到畫面上
            NEXT FIELD dbdb005                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb005
            #add-point:BEFORE FIELD dbdb005 name="construct.b.page1.dbdb005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb005
            
            #add-point:AFTER FIELD dbdb005 name="construct.a.page1.dbdb005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb006
            #add-point:BEFORE FIELD dbdb006 name="construct.b.page1.dbdb006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb006
            
            #add-point:AFTER FIELD dbdb006 name="construct.a.page1.dbdb006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.dbdb006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb006
            #add-point:ON ACTION controlp INFIELD dbdb006 name="construct.c.page1.dbdb006"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.dbdb007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb007
            #add-point:ON ACTION controlp INFIELD dbdb007 name="construct.c.page1.dbdb007"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbdb007()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdb007  #顯示到畫面上
            NEXT FIELD dbdb007                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb007
            #add-point:BEFORE FIELD dbdb007 name="construct.b.page1.dbdb007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb007
            
            #add-point:AFTER FIELD dbdb007 name="construct.a.page1.dbdb007"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb015
            #add-point:BEFORE FIELD dbdb015 name="construct.b.page1.dbdb015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb015
            
            #add-point:AFTER FIELD dbdb015 name="construct.a.page1.dbdb015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.dbdb015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb015
            #add-point:ON ACTION controlp INFIELD dbdb015 name="construct.c.page1.dbdb015"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.dbdb014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb014
            #add-point:ON ACTION controlp INFIELD dbdb014 name="construct.c.page1.dbdb014"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdb014  #顯示到畫面上
            NEXT FIELD dbdb014                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb014
            #add-point:BEFORE FIELD dbdb014 name="construct.b.page1.dbdb014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb014
            
            #add-point:AFTER FIELD dbdb014 name="construct.a.page1.dbdb014"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb008
            #add-point:BEFORE FIELD dbdb008 name="construct.b.page1.dbdb008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb008
            
            #add-point:AFTER FIELD dbdb008 name="construct.a.page1.dbdb008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.dbdb008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb008
            #add-point:ON ACTION controlp INFIELD dbdb008 name="construct.c.page1.dbdb008"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.dbdb009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb009
            #add-point:ON ACTION controlp INFIELD dbdb009 name="construct.c.page1.dbdb009"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO dbdb009  #顯示到畫面上
            NEXT FIELD dbdb009                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb009
            #add-point:BEFORE FIELD dbdb009 name="construct.b.page1.dbdb009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb009
            
            #add-point:AFTER FIELD dbdb009 name="construct.a.page1.dbdb009"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb010
            #add-point:BEFORE FIELD dbdb010 name="construct.b.page1.dbdb010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb010
            
            #add-point:AFTER FIELD dbdb010 name="construct.a.page1.dbdb010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.dbdb010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb010
            #add-point:ON ACTION controlp INFIELD dbdb010 name="construct.c.page1.dbdb010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb011
            #add-point:BEFORE FIELD dbdb011 name="construct.b.page1.dbdb011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb011
            
            #add-point:AFTER FIELD dbdb011 name="construct.a.page1.dbdb011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.dbdb011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb011
            #add-point:ON ACTION controlp INFIELD dbdb011 name="construct.c.page1.dbdb011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb012
            #add-point:BEFORE FIELD dbdb012 name="construct.b.page1.dbdb012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb012
            
            #add-point:AFTER FIELD dbdb012 name="construct.a.page1.dbdb012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.dbdb012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb012
            #add-point:ON ACTION controlp INFIELD dbdb012 name="construct.c.page1.dbdb012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb013
            #add-point:BEFORE FIELD dbdb013 name="construct.b.page1.dbdb013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb013
            
            #add-point:AFTER FIELD dbdb013 name="construct.a.page1.dbdb013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.dbdb013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb013
            #add-point:ON ACTION controlp INFIELD dbdb013 name="construct.c.page1.dbdb013"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "dbda_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "dbdb_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   IF cl_null(g_wc) THEN
      LET g_wc = " dbda000 = '", g_argv[1] ,"'"
   ELSE
      LET g_wc = g_wc CLIPPED, " AND dbda000 = '", g_argv[1] ,"'"
   END IF
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="adbt450.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION adbt450_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON dbdasite,dbdadocno,dbdadocdt,dbda003,dbda001,dbda002
                          FROM s_browse[1].b_dbdasite,s_browse[1].b_dbdadocno,s_browse[1].b_dbdadocdt, 
                              s_browse[1].b_dbda003,s_browse[1].b_dbda001,s_browse[1].b_dbda002
 
         BEFORE CONSTRUCT
               DISPLAY adbt450_filter_parser('dbdasite') TO s_browse[1].b_dbdasite
            DISPLAY adbt450_filter_parser('dbdadocno') TO s_browse[1].b_dbdadocno
            DISPLAY adbt450_filter_parser('dbdadocdt') TO s_browse[1].b_dbdadocdt
            DISPLAY adbt450_filter_parser('dbda003') TO s_browse[1].b_dbda003
            DISPLAY adbt450_filter_parser('dbda001') TO s_browse[1].b_dbda001
            DISPLAY adbt450_filter_parser('dbda002') TO s_browse[1].b_dbda002
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL adbt450_filter_show('dbdasite')
   CALL adbt450_filter_show('dbdadocno')
   CALL adbt450_filter_show('dbdadocdt')
   CALL adbt450_filter_show('dbda003')
   CALL adbt450_filter_show('dbda001')
   CALL adbt450_filter_show('dbda002')
 
END FUNCTION
 
{</section>}
 
{<section id="adbt450.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION adbt450_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="adbt450.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION adbt450_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = adbt450_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="adbt450.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION adbt450_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_dbdb_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL adbt450_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL adbt450_browser_fill("")
      CALL adbt450_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL adbt450_filter_show('dbdasite')
   CALL adbt450_filter_show('dbdadocno')
   CALL adbt450_filter_show('dbdadocdt')
   CALL adbt450_filter_show('dbda003')
   CALL adbt450_filter_show('dbda001')
   CALL adbt450_filter_show('dbda002')
   CALL adbt450_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL adbt450_fetch("F") 
      #顯示單身筆數
      CALL adbt450_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="adbt450.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION adbt450_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_dbda_m.dbdadocno = g_browser[g_current_idx].b_dbdadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE adbt450_master_referesh USING g_dbda_m.dbdadocno INTO g_dbda_m.dbdasite,g_dbda_m.dbdadocdt, 
       g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004, 
       g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt, 
       g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt,g_dbda_m.dbdasite_desc, 
       g_dbda_m.dbda001_desc,g_dbda_m.dbda002_desc,g_dbda_m.dbda004_desc,g_dbda_m.dbda005_desc,g_dbda_m.dbdaownid_desc, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp_desc,g_dbda_m.dbdamodid_desc, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdapstid_desc
   
   #遮罩相關處理
   LET g_dbda_m_mask_o.* =  g_dbda_m.*
   CALL adbt450_dbda_t_mask()
   LET g_dbda_m_mask_n.* =  g_dbda_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adbt450_set_act_visible()   
   CALL adbt450_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"


   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_dbda_m_t.* = g_dbda_m.*
   LET g_dbda_m_o.* = g_dbda_m.*
   
   LET g_data_owner = g_dbda_m.dbdaownid      
   LET g_data_dept  = g_dbda_m.dbdaowndp
   
   #重新顯示   
   CALL adbt450_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="adbt450.insert" >}
#+ 資料新增
PRIVATE FUNCTION adbt450_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_doctype     LIKE rtai_t.rtai004 
   DEFINE l_insert      LIKE type_t.num5
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_dbdb_d.clear()   
 
 
   INITIALIZE g_dbda_m.* TO NULL             #DEFAULT 設定
   
   LET g_dbdadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_dbda_m.dbdaownid = g_user
      LET g_dbda_m.dbdaowndp = g_dept
      LET g_dbda_m.dbdacrtid = g_user
      LET g_dbda_m.dbdacrtdp = g_dept 
      LET g_dbda_m.dbdacrtdt = cl_get_current()
      LET g_dbda_m.dbdamodid = g_user
      LET g_dbda_m.dbdamoddt = cl_get_current()
      LET g_dbda_m.dbdastus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_dbda_m.dbda006 = "N"
 
  
      #add-point:單頭預設值 name="insert.default"
      CALL s_aooi500_default(g_prog,'dbdasite',g_site)
       RETURNING l_insert,g_dbda_m.dbdasite
      IF NOT l_insert THEN
        RETURN
      END IF
      CALL adbt450_dbdasite_ref()
      LET g_dbda_m.dbdaunit = g_dbda_m.dbdasite
      LET g_dbda_m.dbdastus = "N"
      LET g_dbda_m.dbdadocdt = g_today
      LET g_dbda_m.dbda003 = g_today
      LET g_dbda_m.dbda004 = g_user
      CALL adbt450_dbda004_ref()
      LET g_dbda_m.dbda005 = g_dept
      CALL adbt450_dbda005_ref()
      IF g_argv[1] = "1" THEN
         LET g_dbda_m.dbda000 = '1'
      ELSE
         LET g_dbda_m.dbda000 = '2'
      END IF
      #預設單據的單別 
      LET l_success = ''
      LET l_doctype = ''
      CALL s_arti200_get_def_doc_type(g_dbda_m.dbdasite,g_prog,'1')
           RETURNING l_success, l_doctype
      LET g_dbda_m.dbdadocno = l_doctype

      LET g_dbda_m_t.* = g_dbda_m.* 
      LET g_dbda_m_o.* = g_dbda_m.*
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_dbda_m_t.* = g_dbda_m.*
      LET g_dbda_m_o.* = g_dbda_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_dbda_m.dbdastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL adbt450_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_dbda_m.* TO NULL
         INITIALIZE g_dbdb_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL adbt450_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_dbdb_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adbt450_set_act_visible()   
   CALL adbt450_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_dbdadocno_t = g_dbda_m.dbdadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " dbdaent = " ||g_enterprise|| " AND",
                      " dbdadocno = '", g_dbda_m.dbdadocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL adbt450_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE adbt450_cl
   
   CALL adbt450_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE adbt450_master_referesh USING g_dbda_m.dbdadocno INTO g_dbda_m.dbdasite,g_dbda_m.dbdadocdt, 
       g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004, 
       g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt, 
       g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt,g_dbda_m.dbdasite_desc, 
       g_dbda_m.dbda001_desc,g_dbda_m.dbda002_desc,g_dbda_m.dbda004_desc,g_dbda_m.dbda005_desc,g_dbda_m.dbdaownid_desc, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp_desc,g_dbda_m.dbdamodid_desc, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdapstid_desc
   
   
   #遮罩相關處理
   LET g_dbda_m_mask_o.* =  g_dbda_m.*
   CALL adbt450_dbda_t_mask()
   LET g_dbda_m_mask_n.* =  g_dbda_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_dbda_m.dbdasite,g_dbda_m.dbdasite_desc,g_dbda_m.dbdadocdt,g_dbda_m.dbda003,g_dbda_m.dbdadocno, 
       g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda001_desc,g_dbda_m.dbda002,g_dbda_m.dbda002_desc, 
       g_dbda_m.dbda004,g_dbda_m.dbda004_desc,g_dbda_m.dbda005,g_dbda_m.dbda005_desc,g_dbda_m.dbda006, 
       g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaownid_desc,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdp_desc, 
       g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamodid_desc,g_dbda_m.dbdamoddt,g_dbda_m.dbdacnfid, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstid_desc,g_dbda_m.dbdapstdt 
 
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_dbda_m.dbdaownid      
   LET g_data_dept  = g_dbda_m.dbdaowndp
   
   #功能已完成,通報訊息中心
   CALL adbt450_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.modify" >}
#+ 資料修改
PRIVATE FUNCTION adbt450_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_dbda_m_t.* = g_dbda_m.*
   LET g_dbda_m_o.* = g_dbda_m.*
   
   IF g_dbda_m.dbdadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_dbdadocno_t = g_dbda_m.dbdadocno
 
   CALL s_transaction_begin()
   
   OPEN adbt450_cl USING g_enterprise,g_dbda_m.dbdadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN adbt450_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE adbt450_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE adbt450_master_referesh USING g_dbda_m.dbdadocno INTO g_dbda_m.dbdasite,g_dbda_m.dbdadocdt, 
       g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004, 
       g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt, 
       g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt,g_dbda_m.dbdasite_desc, 
       g_dbda_m.dbda001_desc,g_dbda_m.dbda002_desc,g_dbda_m.dbda004_desc,g_dbda_m.dbda005_desc,g_dbda_m.dbdaownid_desc, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp_desc,g_dbda_m.dbdamodid_desc, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdapstid_desc
   
   #檢查是否允許此動作
   IF NOT adbt450_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_dbda_m_mask_o.* =  g_dbda_m.*
   CALL adbt450_dbda_t_mask()
   LET g_dbda_m_mask_n.* =  g_dbda_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL adbt450_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_dbdadocno_t = g_dbda_m.dbdadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_dbda_m.dbdamodid = g_user 
LET g_dbda_m.dbdamoddt = cl_get_current()
LET g_dbda_m.dbdamodid_desc = cl_get_username(g_dbda_m.dbdamodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_dbda_m.dbdastus MATCHES "[DR]" THEN 
         LET g_dbda_m.dbdastus = "N"
      END IF
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL adbt450_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE dbda_t SET (dbdamodid,dbdamoddt) = (g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt)
          WHERE dbdaent = g_enterprise AND dbdadocno = g_dbdadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_dbda_m.* = g_dbda_m_t.*
            CALL adbt450_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_dbda_m.dbdadocno != g_dbda_m_t.dbdadocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE dbdb_t SET dbdbdocno = g_dbda_m.dbdadocno
 
          WHERE dbdbent = g_enterprise AND dbdbdocno = g_dbda_m_t.dbdadocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "dbdb_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "dbdb_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adbt450_set_act_visible()   
   CALL adbt450_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " dbdaent = " ||g_enterprise|| " AND",
                      " dbdadocno = '", g_dbda_m.dbdadocno, "' "
 
   #填到對應位置
   CALL adbt450_browser_fill("")
 
   CLOSE adbt450_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL adbt450_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="adbt450.input" >}
#+ 資料輸入
PRIVATE FUNCTION adbt450_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_flag                LIKE type_t.num5
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_imaa005       LIKE imaa_t.imaa005       #特徵類別
   DEFINE  l_inam          DYNAMIC ARRAY OF RECORD   #記錄產品特徵
              inam001      LIKE inam_t.inam001,
              inam002      LIKE inam_t.inam002,
              inam004      LIKE inam_t.inam004
                        END RECORD
   DEFINE l_rate                 LIKE dbdb_t.dbdb011
   DEFINE  l_errno      LIKE type_t.chr10
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_dbda_m.dbdasite,g_dbda_m.dbdasite_desc,g_dbda_m.dbdadocdt,g_dbda_m.dbda003,g_dbda_m.dbdadocno, 
       g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda001_desc,g_dbda_m.dbda002,g_dbda_m.dbda002_desc, 
       g_dbda_m.dbda004,g_dbda_m.dbda004_desc,g_dbda_m.dbda005,g_dbda_m.dbda005_desc,g_dbda_m.dbda006, 
       g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaownid_desc,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdp_desc, 
       g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamodid_desc,g_dbda_m.dbdamoddt,g_dbda_m.dbdacnfid, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstid_desc,g_dbda_m.dbdapstdt 
 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT dbdbsite,dbdbunit,dbdbseq,dbdb001,dbdb002,dbdb003,dbdb004,dbdb005,dbdb006, 
       dbdb007,dbdb015,dbdb014,dbdb008,dbdb009,dbdb010,dbdb011,dbdb012,dbdb013 FROM dbdb_t WHERE dbdbent=?  
       AND dbdbdocno=? AND dbdbseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt450_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   LET g_flag = FALSE
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL adbt450_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL adbt450_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_dbda_m.dbdasite,g_dbda_m.dbdadocdt,g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000, 
       g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004,g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit, 
       g_dbda_m.dbdastus
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="adbt450.input.head" >}
      #單頭段
      INPUT BY NAME g_dbda_m.dbdasite,g_dbda_m.dbdadocdt,g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000, 
          g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004,g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit, 
          g_dbda_m.dbdastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN adbt450_cl USING g_enterprise,g_dbda_m.dbdadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adbt450_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE adbt450_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL adbt450_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            CALL adbt450_set_entry(p_cmd)
            CALL adbt450_set_no_entry(p_cmd)
            #end add-point
            CALL adbt450_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdasite
            
            #add-point:AFTER FIELD dbdasite name="input.a.dbdasite"
            IF NOT cl_null(g_dbda_m.dbdasite) THEN 
               CALL s_aooi500_chk(g_prog,'dbdasite',g_dbda_m.dbdasite,g_dbda_m.dbdasite) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = '' 
                  LET g_errparam.code   = l_errno 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  
                  LET g_dbda_m.dbdasite = g_dbda_m_t.dbdasite
                  CALL adbt450_dbdasite_ref()
                  NEXT FIELD CURRENT
               END IF
            ELSE
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 'axc-00120' 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()               
               LET g_dbda_m.dbdasite = g_dbda_m_t.dbdasite
               CALL adbt450_dbdasite_ref()
               NEXT FIELD CURRENT            
            END IF 
            CALL adbt450_dbdasite_ref()
            LET g_flag = TRUE
            CALL adbt450_set_entry(p_cmd)
            CALL adbt450_set_no_entry(p_cmd)     
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdasite
            #add-point:BEFORE FIELD dbdasite name="input.b.dbdasite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdasite
            #add-point:ON CHANGE dbdasite name="input.g.dbdasite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdadocdt
            #add-point:BEFORE FIELD dbdadocdt name="input.b.dbdadocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdadocdt
            
            #add-point:AFTER FIELD dbdadocdt name="input.a.dbdadocdt"
            IF p_cmd = 'a' THEN
               LET g_dbda_m.dbda003 = g_dbda_m.dbdadocdt
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdadocdt
            #add-point:ON CHANGE dbdadocdt name="input.g.dbdadocdt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbda003
            #add-point:BEFORE FIELD dbda003 name="input.b.dbda003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbda003
            
            #add-point:AFTER FIELD dbda003 name="input.a.dbda003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbda003
            #add-point:ON CHANGE dbda003 name="input.g.dbda003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdadocno
            #add-point:BEFORE FIELD dbdadocno name="input.b.dbdadocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdadocno
            
            #add-point:AFTER FIELD dbdadocno name="input.a.dbdadocno"
            IF NOT s_aooi200_chk_slip(g_dbda_m.dbdasite,'',g_dbda_m.dbdadocno,g_prog) THEN
               LET g_dbda_m.dbdadocno = ''
               NEXT FIELD CURRENT 
            END IF
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_dbda_m.dbdadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_dbda_m.dbdadocno != g_dbdadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM dbda_t WHERE "||"dbdaent = '" ||g_enterprise|| "' AND "||"dbdadocno = '"||g_dbda_m.dbdadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdadocno
            #add-point:ON CHANGE dbdadocno name="input.g.dbdadocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbda000
            #add-point:BEFORE FIELD dbda000 name="input.b.dbda000"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbda000
            
            #add-point:AFTER FIELD dbda000 name="input.a.dbda000"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbda000
            #add-point:ON CHANGE dbda000 name="input.g.dbda000"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbda001
            
            #add-point:AFTER FIELD dbda001 name="input.a.dbda001"
            IF NOT cl_null(g_dbda_m.dbda001) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_dbda_m.dbda001
               #160318-00025#27  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="apm-00201:sub-01302|axmm200|",cl_get_progname("axmm200",g_lang,"2"),"|:EXEPROGaxmm200"
               #160318-00025#27  by 07900 --add-end   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pmaa001_13") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_dbda_m.dbda001 = g_dbda_m_t.dbda001
                  CALL adbt450_dbda001_ref()
                  NEXT FIELD CURRENT
               END IF
               
               SELECT COUNT(*)
                 INTO l_cnt
                 FROM pmac_t
                WHERE pmacent = g_enterprise
                  AND pmac001 = g_dbda_m.dbda001
                  AND pmac003 = '2'
                  AND pmacstus = "Y"
                  AND pmac002 = g_dbda_m.dbda002
               IF l_cnt = 0 THEN
                  LET g_dbda_m.dbda002 = NULL
                  SELECT pmac002
                    INTO g_dbda_m.dbda002
                    FROM pmac_t
                   WHERE pmacent = g_enterprise
                     AND pmac001 = g_dbda_m.dbda001
                     AND pmac003 = '2'
                     AND pmac004 = "Y"
                     AND pmacstus = "Y"
                  
                  CALL adbt450_dbda002_ref()
               END IF
            END IF 
            CALL adbt450_dbda001_ref()

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbda001
            #add-point:BEFORE FIELD dbda001 name="input.b.dbda001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbda001
            #add-point:ON CHANGE dbda001 name="input.g.dbda001"
 
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbda002
            
            #add-point:AFTER FIELD dbda002 name="input.a.dbda002"
            IF NOT cl_null(g_dbda_m.dbda002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               #lori522612  150121  add ----------------------(S)
               #INITIALIZE g_chkparam.* TO NULL
               #LET g_chkparam.arg1 = g_dbda_m.dbda001
               #LET g_chkparam.arg2 = g_dbda_m.dbda002
               #LET g_chkparam.arg3 = '2'
               #LET g_chkparam.arg4 = 'ALL'
               #IF cl_chk_exist("v_pmac002_3") THEN
               IF s_adb_chk_pmac002(1,g_dbda_m.dbda001,g_dbda_m.dbda002,'2') THEN
               #lori522612  150121  add ----------------------(E)
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_dbda_m.dbda002 = g_dbda_m_t.dbda002
                  CALL adbt450_dbda002_ref()
                  NEXT FIELD CURRENT
               END IF
            ELSE   
               
            END IF 
            CALL adbt450_dbda002_ref()

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbda002
            #add-point:BEFORE FIELD dbda002 name="input.b.dbda002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbda002
            #add-point:ON CHANGE dbda002 name="input.g.dbda002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbda004
            
            #add-point:AFTER FIELD dbda004 name="input.a.dbda004"
            IF NOT cl_null(g_dbda_m.dbda004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_dbda_m.dbda004
               #160318-00025#27  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="aim-00070:sub-01302|aooi130|",cl_get_progname("aooi130",g_lang,"2"),"|:EXEPROGaooi130"
               #160318-00025#27  by 07900 --add-end   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_dbda_m.dbda004 = g_dbda_m_t.dbda004
                  CALL adbt450_dbda004_ref()
                  NEXT FIELD CURRENT
               END IF
               
               SELECT ooag003
                 INTO g_dbda_m.dbda005
                 FROM ooag_t
                WHERE ooagent = g_enterprise
                  AND ooag001 = g_dbda_m.dbda004
                  AND ooagstus = "Y"
               CALL adbt450_dbda005_ref()
            END IF 
            CALL adbt450_dbda004_ref()

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbda004
            #add-point:BEFORE FIELD dbda004 name="input.b.dbda004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbda004
            #add-point:ON CHANGE dbda004 name="input.g.dbda004"
 
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbda005
            
            #add-point:AFTER FIELD dbda005 name="input.a.dbda005"
            IF NOT cl_null(g_dbda_m.dbda005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_dbda_m.dbda005
               IF NOT cl_null(g_dbda_m.dbdadocdt) THEN
                  LET g_chkparam.arg2 = g_dbda_m.dbdadocdt
               ELSE
                  LET g_chkparam.arg2 = g_today
               END IF
               #160318-00025#27  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="aoo-00029:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"
               #160318-00025#27  by 07900 --add-end   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_dbda_m.dbda005 = g_dbda_m_t.dbda005
                  CALL adbt450_dbda005_ref()
                  NEXT FIELD CURRENT
               END IF

            END IF 
            CALL adbt450_dbda005_ref()

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbda005
            #add-point:BEFORE FIELD dbda005 name="input.b.dbda005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbda005
            #add-point:ON CHANGE dbda005 name="input.g.dbda005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbda006
            #add-point:BEFORE FIELD dbda006 name="input.b.dbda006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbda006
            
            #add-point:AFTER FIELD dbda006 name="input.a.dbda006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbda006
            #add-point:ON CHANGE dbda006 name="input.g.dbda006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdaunit
            #add-point:BEFORE FIELD dbdaunit name="input.b.dbdaunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdaunit
            
            #add-point:AFTER FIELD dbdaunit name="input.a.dbdaunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdaunit
            #add-point:ON CHANGE dbdaunit name="input.g.dbdaunit"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdastus
            #add-point:BEFORE FIELD dbdastus name="input.b.dbdastus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdastus
            
            #add-point:AFTER FIELD dbdastus name="input.a.dbdastus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdastus
            #add-point:ON CHANGE dbdastus name="input.g.dbdastus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.dbdasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdasite
            #add-point:ON ACTION controlp INFIELD dbdasite name="input.c.dbdasite"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_dbda_m.dbdasite        #給予default值
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'dbdasite',g_site,'i') #150308-00001#1  By Ken add 'i' 150309
            CALL q_ooef001_24()
            LET g_dbda_m.dbdasite = g_qryparam.return1     
            DISPLAY g_dbda_m.dbdasite TO dbdasite              #
            CALL adbt450_dbdasite_ref()
            NEXT FIELD dbdasite                                #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.dbdadocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdadocdt
            #add-point:ON ACTION controlp INFIELD dbdadocdt name="input.c.dbdadocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.dbda003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbda003
            #add-point:ON ACTION controlp INFIELD dbda003 name="input.c.dbda003"
            
            #END add-point
 
 
         #Ctrlp:input.c.dbdadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdadocno
            #add-point:ON ACTION controlp INFIELD dbdadocno name="input.c.dbdadocno"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbda_m.dbdadocno             #給予default值

            #給予arg
            CALL s_aooi100_sel_ooef004(g_dbda_m.dbdasite)
                 RETURNING l_success,l_ooef004
            LET g_qryparam.arg1 = l_ooef004
            LET g_qryparam.arg2 = g_prog
            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_dbda_m.dbdadocno = g_qryparam.return1              

            DISPLAY g_dbda_m.dbdadocno TO dbdadocno              #

            NEXT FIELD dbdadocno                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.dbda000
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbda000
            #add-point:ON ACTION controlp INFIELD dbda000 name="input.c.dbda000"
            
            #END add-point
 
 
         #Ctrlp:input.c.dbda001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbda001
            #add-point:ON ACTION controlp INFIELD dbda001 name="input.c.dbda001"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbda_m.dbda001             #給予default值

            #給予arg

            
            CALL q_pmaa001_17()                                #呼叫開窗

            LET g_dbda_m.dbda001 = g_qryparam.return1              

            DISPLAY g_dbda_m.dbda001 TO dbda001              #
            CALL adbt450_dbda001_ref()
            NEXT FIELD dbda001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.dbda002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbda002
            #add-point:ON ACTION controlp INFIELD dbda002 name="input.c.dbda002"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbda_m.dbda002             #給予default值
            LET g_qryparam.default2 = "" #g_dbda_m.pmaal004 #交易對象簡稱
            #給予arg
            #lori522612  150113  add ----------------------(S)
            #LET g_qryparam.arg1 = g_dbda_m.dbda001
            #LET g_qryparam.arg2 = "2" 
          #lori522612  150121  add ----------------------(S)  
          # LET g_chkparam.arg1 = g_dbda_m.dbda001
          # LET g_chkparam.arg2 = g_dbda_m.dbda002
          # LET g_chkparam.arg3 = '2'
          # LET g_chkparam.arg4 = 'ALL'
          # #lori522612  150113  add ----------------------(E)
          # 
          # CALL q_pmac002_1()                              
          LET g_chkparam.arg1 = g_dbda_m.dbda001
          LET g_chkparam.arg2 = 'ALL' 
          CALL q_pmac002_6()
          #lori522612  150121  add ----------------------(S)
            LET g_dbda_m.dbda002 = g_qryparam.return1              
            #LET g_dbda_m.pmaal004 = g_qryparam.return2 
            
            DISPLAY g_dbda_m.dbda002 TO dbda002              #
            #DISPLAY g_dbda_m.pmaal004 TO pmaal004 #交易對象簡稱
            CALL adbt450_dbda002_ref()
            NEXT FIELD dbda002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.dbda004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbda004
            #add-point:ON ACTION controlp INFIELD dbda004 name="input.c.dbda004"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbda_m.dbda004             #給予default值

            #給予arg

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_dbda_m.dbda004 = g_qryparam.return1              

            DISPLAY g_dbda_m.dbda004 TO dbda004              #
            CALL adbt450_dbda004_ref()
            NEXT FIELD dbda004                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.dbda005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbda005
            #add-point:ON ACTION controlp INFIELD dbda005 name="input.c.dbda005"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbda_m.dbda005             #給予default值

            #給予arg
            IF NOT cl_null(g_dbda_m.dbdadocdt) THEN
               LET g_qryparam.arg1 = g_dbda_m.dbdadocdt
            ELSE
               LET g_qryparam.arg1 = g_today
            END IF
            
            CALL q_ooeg001_4()                                #呼叫開窗

            LET g_dbda_m.dbda005 = g_qryparam.return1              

            DISPLAY g_dbda_m.dbda005 TO dbda005              #
            CALL adbt450_dbda005_ref()
            NEXT FIELD dbda005                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.dbda006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbda006
            #add-point:ON ACTION controlp INFIELD dbda006 name="input.c.dbda006"
            
            #END add-point
 
 
         #Ctrlp:input.c.dbdaunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdaunit
            #add-point:ON ACTION controlp INFIELD dbdaunit name="input.c.dbdaunit"
            
            #END add-point
 
 
         #Ctrlp:input.c.dbdastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdastus
            #add-point:ON ACTION controlp INFIELD dbdastus name="input.c.dbdastus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_dbda_m.dbdadocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            LET g_dbda_m.dbdaunit = g_dbda_m.dbdasite
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               IF NOT s_aooi200_chk_slip(g_dbda_m.dbdasite,'',g_dbda_m.dbdadocno,g_prog) THEN
                  LET g_dbda_m.dbdadocno = ''
                  NEXT FIELD dbdadocno 
               END IF
               
               CALL s_aooi200_gen_docno(g_dbda_m.dbdasite,g_dbda_m.dbdadocno,g_dbda_m.dbdadocdt,g_prog) RETURNING l_flag,g_dbda_m.dbdadocno
               IF NOT l_flag THEN
                  NEXT FIELD dbdadocno
               END IF  
               #end add-point
               
               INSERT INTO dbda_t (dbdaent,dbdasite,dbdadocdt,dbda003,dbdadocno,dbda000,dbda001,dbda002, 
                   dbda004,dbda005,dbda006,dbdaunit,dbdastus,dbdaownid,dbdaowndp,dbdacrtid,dbdacrtdp, 
                   dbdacrtdt,dbdamodid,dbdamoddt,dbdacnfid,dbdacnfdt,dbdapstid,dbdapstdt)
               VALUES (g_enterprise,g_dbda_m.dbdasite,g_dbda_m.dbdadocdt,g_dbda_m.dbda003,g_dbda_m.dbdadocno, 
                   g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004,g_dbda_m.dbda005, 
                   g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp, 
                   g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt, 
                   g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_dbda_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL adbt450_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL adbt450_b_fill()
                  CALL adbt450_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL adbt450_dbda_t_mask_restore('restore_mask_o')
               
               UPDATE dbda_t SET (dbdasite,dbdadocdt,dbda003,dbdadocno,dbda000,dbda001,dbda002,dbda004, 
                   dbda005,dbda006,dbdaunit,dbdastus,dbdaownid,dbdaowndp,dbdacrtid,dbdacrtdp,dbdacrtdt, 
                   dbdamodid,dbdamoddt,dbdacnfid,dbdacnfdt,dbdapstid,dbdapstdt) = (g_dbda_m.dbdasite, 
                   g_dbda_m.dbdadocdt,g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001, 
                   g_dbda_m.dbda002,g_dbda_m.dbda004,g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit, 
                   g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp,g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp, 
                   g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt,g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt, 
                   g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt)
                WHERE dbdaent = g_enterprise AND dbdadocno = g_dbdadocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "dbda_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL adbt450_dbda_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_dbda_m_t)
               LET g_log2 = util.JSON.stringify(g_dbda_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_dbdadocno_t = g_dbda_m.dbdadocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="adbt450.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_dbdb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_dbdb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adbt450_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_dbdb_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            CALL cl_set_combo_scc_part('dbdb001','6053','2,3,4,5')
            CALL adbt450_set_entry_b(l_cmd)
            CALL adbt450_set_no_entry_b(l_cmd)
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adbt450_cl USING g_enterprise,g_dbda_m.dbdadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adbt450_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE adbt450_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_dbdb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_dbdb_d[l_ac].dbdbseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_dbdb_d_t.* = g_dbdb_d[l_ac].*  #BACKUP
               LET g_dbdb_d_o.* = g_dbdb_d[l_ac].*  #BACKUP
               CALL adbt450_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               CALL adbt450_set_no_required_b()
               CALL adbt450_set_required_b()
               #end add-point  
               CALL adbt450_set_no_entry_b(l_cmd)
               IF NOT adbt450_lock_b("dbdb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adbt450_bcl INTO g_dbdb_d[l_ac].dbdbsite,g_dbdb_d[l_ac].dbdbunit,g_dbdb_d[l_ac].dbdbseq, 
                      g_dbdb_d[l_ac].dbdb001,g_dbdb_d[l_ac].dbdb002,g_dbdb_d[l_ac].dbdb003,g_dbdb_d[l_ac].dbdb004, 
                      g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb006,g_dbdb_d[l_ac].dbdb007,g_dbdb_d[l_ac].dbdb015, 
                      g_dbdb_d[l_ac].dbdb014,g_dbdb_d[l_ac].dbdb008,g_dbdb_d[l_ac].dbdb009,g_dbdb_d[l_ac].dbdb010, 
                      g_dbdb_d[l_ac].dbdb011,g_dbdb_d[l_ac].dbdb012,g_dbdb_d[l_ac].dbdb013
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_dbdb_d_t.dbdbseq,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_dbdb_d_mask_o[l_ac].* =  g_dbdb_d[l_ac].*
                  CALL adbt450_dbdb_t_mask()
                  LET g_dbdb_d_mask_n[l_ac].* =  g_dbdb_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL adbt450_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            IF g_dbdb_d[l_ac].dbdb006 = ' ' THEN
               LET g_dbdb_d[l_ac].dbdb006 = ''
            END IF
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_dbdb_d[l_ac].* TO NULL 
            INITIALIZE g_dbdb_d_t.* TO NULL 
            INITIALIZE g_dbdb_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_dbdb_d[l_ac].dbdb015 = "0"
      LET g_dbdb_d[l_ac].dbdb008 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_dbdb_d_t.* = g_dbdb_d[l_ac].*     #新輸入資料
            LET g_dbdb_d_o.* = g_dbdb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adbt450_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL adbt450_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_dbdb_d[li_reproduce_target].* = g_dbdb_d[li_reproduce].*
 
               LET g_dbdb_d[li_reproduce_target].dbdbseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            SELECT MAX(dbdbseq)+1 INTO g_dbdb_d[l_ac].dbdbseq FROM dbdb_t 
             WHERE dbdbent = g_enterprise AND dbdbdocno = g_dbda_m.dbdadocno
            IF cl_null(g_dbdb_d[l_ac].dbdbseq) THEN
               LET g_dbdb_d[l_ac].dbdbseq = 1
            END IF
            LET g_dbdb_d[l_ac].dbdb006 = ""
            LET g_dbdb_d[l_ac].dbdb007 = ""
            LET g_dbdb_d[l_ac].dbdbsite = g_dbda_m.dbdasite
            LET g_dbdb_d[l_ac].dbdbunit = g_dbda_m.dbdasite
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            IF cl_null(g_dbdb_d[l_ac].dbdb006) THEN
               LET g_dbdb_d[l_ac].dbdb006 = ' '
            END IF
            IF cl_null(g_dbdb_d[l_ac].dbdb007) THEN
               LET g_dbdb_d[l_ac].dbdb007 = ' '
            END IF
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM dbdb_t 
             WHERE dbdbent = g_enterprise AND dbdbdocno = g_dbda_m.dbdadocno
 
               AND dbdbseq = g_dbdb_d[l_ac].dbdbseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dbda_m.dbdadocno
               LET gs_keys[2] = g_dbdb_d[g_detail_idx].dbdbseq
               CALL adbt450_insert_b('dbdb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_dbdb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "dbdb_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adbt450_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_dbda_m.dbdadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_dbdb_d_t.dbdbseq
 
            
               #刪除同層單身
               IF NOT adbt450_delete_b('dbdb_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adbt450_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT adbt450_key_delete_b(gs_keys,'dbdb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adbt450_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE adbt450_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_dbdb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_dbdb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdbsite
            #add-point:BEFORE FIELD dbdbsite name="input.b.page1.dbdbsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdbsite
            
            #add-point:AFTER FIELD dbdbsite name="input.a.page1.dbdbsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdbsite
            #add-point:ON CHANGE dbdbsite name="input.g.page1.dbdbsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdbunit
            #add-point:BEFORE FIELD dbdbunit name="input.b.page1.dbdbunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdbunit
            
            #add-point:AFTER FIELD dbdbunit name="input.a.page1.dbdbunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdbunit
            #add-point:ON CHANGE dbdbunit name="input.g.page1.dbdbunit"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdbseq
            #add-point:BEFORE FIELD dbdbseq name="input.b.page1.dbdbseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdbseq
            
            #add-point:AFTER FIELD dbdbseq name="input.a.page1.dbdbseq"
            #此段落由子樣板a05產生
            IF  g_dbda_m.dbdadocno IS NOT NULL AND g_dbdb_d[g_detail_idx].dbdbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_dbda_m.dbdadocno != g_dbdadocno_t OR g_dbdb_d[g_detail_idx].dbdbseq != g_dbdb_d_t.dbdbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM dbdb_t WHERE "||"dbdbent = '" ||g_enterprise|| "' AND "||"dbdbdocno = '"||g_dbda_m.dbdadocno ||"' AND "|| "dbdbseq = '"||g_dbdb_d[g_detail_idx].dbdbseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdbseq
            #add-point:ON CHANGE dbdbseq name="input.g.page1.dbdbseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb001
            #add-point:BEFORE FIELD dbdb001 name="input.b.page1.dbdb001"
            CALL cl_set_combo_scc_part('dbdb001','6053','2,3,4,5')
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb001
            
            #add-point:AFTER FIELD dbdb001 name="input.a.page1.dbdb001"
            CALL cl_set_combo_scc('dbdb001','6053')
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdb001
            #add-point:ON CHANGE dbdb001 name="input.g.page1.dbdb001"
 
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb002
            #add-point:BEFORE FIELD dbdb002 name="input.b.page1.dbdb002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb002
            
            #add-point:AFTER FIELD dbdb002 name="input.a.page1.dbdb002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdb002
            #add-point:ON CHANGE dbdb002 name="input.g.page1.dbdb002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb003
            #add-point:BEFORE FIELD dbdb003 name="input.b.page1.dbdb003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb003
            
            #add-point:AFTER FIELD dbdb003 name="input.a.page1.dbdb003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdb003
            #add-point:ON CHANGE dbdb003 name="input.g.page1.dbdb003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb004
            
            #add-point:AFTER FIELD dbdb004 name="input.a.page1.dbdb004"
            IF NOT cl_null(g_dbdb_d[l_ac].dbdb004) THEN 
#               IF p_cmd = 'a' OR (p_cmd = 'u' AND ( g_dbdb_d[l_ac].dbdb004 <> g_dbdb_d_o.dbdb004 OR cl_null(g_dbdb_d_o.dbdb004))) THEN   #150427-00012#8 20150728 mark by beckxie
               IF g_dbdb_d[l_ac].dbdb004 <> g_dbdb_d_o.dbdb004 OR cl_null(g_dbdb_d_o.dbdb004) THEN   #150427-00012#8 20150728 add by beckxie
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_dbdb_d[l_ac].dbdb004
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_imay003_1") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_dbdb_d[l_ac].dbdb004 = g_dbdb_d_o.dbdb004
                     NEXT FIELD CURRENT
                  END IF
                  LET g_dbdb_d[l_ac].dbdb005 = ""
                  LET g_dbdb_d[l_ac].dbdb006 = ""
                  LET g_dbdb_d[l_ac].dbdb014 = ""
                  SELECT imay001,imay004
                    INTO g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb014
                    FROM imay_t
                   WHERE imayent = g_enterprise
                     AND imay003 = g_dbdb_d[l_ac].dbdb004
                  #CALL adbt450_dbdb014_default()
                  CALL adbt450_get_dbdb009() RETURNING l_success
                  IF NOT l_success THEN
                     LET g_dbdb_d[l_ac].dbdb004 = g_dbdb_d_o.dbdb004
                     LET g_dbdb_d[l_ac].dbdb005 = g_dbdb_d_o.dbdb005
                     LET g_dbdb_d[l_ac].dbdb006 = g_dbdb_d_o.dbdb006
                     LET g_dbdb_d[l_ac].dbdb009 = g_dbdb_d_o.dbdb009
                     LET g_dbdb_d[l_ac].dbdb010 = g_dbdb_d_o.dbdb010
                     LET g_dbdb_d[l_ac].dbdb014 = g_dbdb_d_o.dbdb014
                     CALL adbt450_dbdb005_ref()
                     CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb014) RETURNING g_dbdb_d[l_ac].dbdb014_desc
                     DISPLAY BY NAME g_dbdb_d[l_ac].dbdb014_desc
                     NEXT FIELD dbdb004
                  END IF
                  CALL adbt450_get_dbdb010() RETURNING l_success
                  IF NOT l_success THEN
                     LET g_dbdb_d[l_ac].dbdb004 = g_dbdb_d_o.dbdb004
                     LET g_dbdb_d[l_ac].dbdb005 = g_dbdb_d_o.dbdb005
                     LET g_dbdb_d[l_ac].dbdb006 = g_dbdb_d_o.dbdb006
                     LET g_dbdb_d[l_ac].dbdb009 = g_dbdb_d_o.dbdb009
                     LET g_dbdb_d[l_ac].dbdb010 = g_dbdb_d_o.dbdb010
                     LET g_dbdb_d[l_ac].dbdb014 = g_dbdb_d_o.dbdb014
                     CALL adbt450_dbdb005_ref()
                     CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb014) RETURNING g_dbdb_d[l_ac].dbdb014_desc
                     DISPLAY BY NAME g_dbdb_d[l_ac].dbdb014_desc
                     NEXT FIELD dbdb004
                  END IF
               END IF
            ELSE
               IF NOT cl_null(g_dbdb_d[l_ac].dbdb005) THEN 
                  CALL adbt450_get_dbdb009() RETURNING l_success
                  IF NOT l_success THEN
                     LET g_dbdb_d[l_ac].dbdb004 = g_dbdb_d_o.dbdb004
                     LET g_dbdb_d[l_ac].dbdb005 = g_dbdb_d_o.dbdb005
                     LET g_dbdb_d[l_ac].dbdb006 = g_dbdb_d_o.dbdb006
                     LET g_dbdb_d[l_ac].dbdb009 = g_dbdb_d_o.dbdb009
                     LET g_dbdb_d[l_ac].dbdb010 = g_dbdb_d_o.dbdb010
                     LET g_dbdb_d[l_ac].dbdb014 = g_dbdb_d_o.dbdb014
                     CALL adbt450_dbdb005_ref()
                     CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb014) RETURNING g_dbdb_d[l_ac].dbdb014_desc
                     DISPLAY BY NAME g_dbdb_d[l_ac].dbdb014_desc
                     NEXT FIELD dbdb004
                  END IF
                  CALL adbt450_get_dbdb010() RETURNING l_success
                  IF NOT l_success OR cl_null(g_dbdb_d[l_ac].dbdb010) THEN
                     LET g_dbdb_d[l_ac].dbdb004 = g_dbdb_d_o.dbdb004
                     LET g_dbdb_d[l_ac].dbdb005 = g_dbdb_d_o.dbdb005
                     LET g_dbdb_d[l_ac].dbdb006 = g_dbdb_d_o.dbdb006
                     LET g_dbdb_d[l_ac].dbdb009 = g_dbdb_d_o.dbdb009
                     LET g_dbdb_d[l_ac].dbdb010 = g_dbdb_d_o.dbdb010
                     LET g_dbdb_d[l_ac].dbdb014 = g_dbdb_d_o.dbdb014
                     CALL adbt450_dbdb005_ref()
                     CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb014) RETURNING g_dbdb_d[l_ac].dbdb014_desc
                     DISPLAY BY NAME g_dbdb_d[l_ac].dbdb014_desc
                     NEXT FIELD dbdb004
                  END IF
               ELSE
                  LET g_dbdb_d[l_ac].dbdb005 = ""
                  LET g_dbdb_d[l_ac].dbdb006 = ""
                  LET g_dbdb_d[l_ac].dbdb009 = ""                         
               END IF
            END IF 
            LET g_dbdb_d_o.dbdb004 = g_dbdb_d[l_ac].dbdb004
            LET g_dbdb_d_o.dbdb005 = g_dbdb_d[l_ac].dbdb005
            LET g_dbdb_d_o.dbdb006 = g_dbdb_d[l_ac].dbdb006
            LET g_dbdb_d_o.dbdb009 = g_dbdb_d[l_ac].dbdb009
            LET g_dbdb_d_o.dbdb010 = g_dbdb_d[l_ac].dbdb010
            LET g_dbdb_d_o.dbdb014 = g_dbdb_d[l_ac].dbdb014
            CALL adbt450_dbdb005_ref()
            CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb014) RETURNING g_dbdb_d[l_ac].dbdb014_desc
            DISPLAY BY NAME g_dbdb_d[l_ac].dbdb014_desc
            CALL adbt450_set_entry_b(p_cmd)
            CALL adbt450_set_no_required_b()
            CALL adbt450_set_required_b()
            CALL adbt450_set_no_entry_b(p_cmd)
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb004
            #add-point:BEFORE FIELD dbdb004 name="input.b.page1.dbdb004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdb004
            #add-point:ON CHANGE dbdb004 name="input.g.page1.dbdb004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb005
            
            #add-point:AFTER FIELD dbdb005 name="input.a.page1.dbdb005"
            IF NOT cl_null(g_dbdb_d[l_ac].dbdb005) THEN 
#               IF p_cmd = 'a' OR (p_cmd = 'u' AND ( g_dbdb_d[l_ac].dbdb005 <> g_dbdb_d_o.dbdb005 OR cl_null(g_dbdb_d_o.dbdb005))) THEN   #150427-00012#8 20150728 mark by beckxie
               IF g_dbdb_d[l_ac].dbdb005 <> g_dbdb_d_o.dbdb005 OR cl_null(g_dbdb_d_o.dbdb005) THEN   #150427-00012#8 20150728 add by beckxie
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_dbdb_d[l_ac].dbdb005
                  IF NOT cl_chk_exist("v_imaa001") THEN
                     LET g_dbdb_d[l_ac].dbdb005 = g_dbdb_d_o.dbdb005
                     CALL adbt450_dbdb005_ref()
                     NEXT FIELD CURRENT
                  END IF
                   
                  LET g_dbdb_d[l_ac].dbdb004 = ""
                  LET g_dbdb_d[l_ac].dbdb006 = ""
                  LET g_dbdb_d[l_ac].dbdb009 = ""
                  SELECT imaa014
                    INTO g_dbdb_d[l_ac].dbdb004
                    FROM imaa_t
                   WHERE imaaent = g_enterprise
                     AND imaa001 = g_dbdb_d[l_ac].dbdb005
                     
                  IF NOT cl_null(g_dbdb_d[l_ac].dbdb004) THEN 
                     LET g_dbdb_d[l_ac].dbdb009 = ""
                     SELECT imay004
                       INTO g_dbdb_d[l_ac].dbdb014
                       FROM imay_t
                      WHERE imayent = g_enterprise
                        AND imay003 = g_dbdb_d[l_ac].dbdb004
                     CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb014) RETURNING g_dbdb_d[l_ac].dbdb014_desc
                     DISPLAY BY NAME g_dbdb_d[l_ac].dbdb014_desc
                     
                     #CALL adbt450_dbdb014_default()
                  END IF
                  CALL adbt450_get_dbdb009() RETURNING l_success
                  IF NOT l_success THEN
                     LET g_dbdb_d[l_ac].dbdb004 = g_dbdb_d_o.dbdb004
                     LET g_dbdb_d[l_ac].dbdb005 = g_dbdb_d_o.dbdb005
                     LET g_dbdb_d[l_ac].dbdb006 = g_dbdb_d_o.dbdb006
                     LET g_dbdb_d[l_ac].dbdb009 = g_dbdb_d_o.dbdb009
                     LET g_dbdb_d[l_ac].dbdb014 = g_dbdb_d_o.dbdb014
                     CALL adbt450_dbdb005_ref()
                     CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb009) RETURNING g_dbdb_d[l_ac].dbdb009_desc
                     DISPLAY BY NAME g_dbdb_d[l_ac].dbdb009_desc
                     NEXT FIELD dbdb005
                  END IF
                  CALL adbt450_get_dbdb010() RETURNING l_success
                  IF NOT l_success OR cl_null(g_dbdb_d[l_ac].dbdb010) THEN
                     LET g_dbdb_d[l_ac].dbdb004 = g_dbdb_d_o.dbdb004
                     LET g_dbdb_d[l_ac].dbdb005 = g_dbdb_d_o.dbdb005
                     LET g_dbdb_d[l_ac].dbdb006 = g_dbdb_d_o.dbdb006
                     LET g_dbdb_d[l_ac].dbdb009 = g_dbdb_d_o.dbdb009
                     LET g_dbdb_d[l_ac].dbdb014 = g_dbdb_d_o.dbdb014
                     CALL adbt450_dbdb005_ref()
                     NEXT FIELD dbdb005
                  END IF 
               END IF
            ELSE
               LET g_dbdb_d[l_ac].dbdb006 = ""
            END IF 
            LET g_dbdb_d_o.dbdb004 = g_dbdb_d[l_ac].dbdb004
            LET g_dbdb_d_o.dbdb005 = g_dbdb_d[l_ac].dbdb005
            LET g_dbdb_d_o.dbdb006 = g_dbdb_d[l_ac].dbdb006
            LET g_dbdb_d_o.dbdb009 = g_dbdb_d[l_ac].dbdb009
            LET g_dbdb_d_o.dbdb010 = g_dbdb_d[l_ac].dbdb010
            LET g_dbdb_d_o.dbdb014 = g_dbdb_d[l_ac].dbdb014
            CALL adbt450_dbdb005_ref()
            CALL adbt450_set_entry_b(p_cmd)
            CALL adbt450_set_no_required_b()
            CALL adbt450_set_required_b()
            CALL adbt450_set_no_entry_b(p_cmd)

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb005
            #add-point:BEFORE FIELD dbdb005 name="input.b.page1.dbdb005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdb005
            #add-point:ON CHANGE dbdb005 name="input.g.page1.dbdb005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb006
            #add-point:BEFORE FIELD dbdb006 name="input.b.page1.dbdb006"
            #160314-00009#2   add by zhujing 2016-3-16-----(S)
            IF NOT cl_null(g_dbdb_d[l_ac].dbdb005) THEN
               IF s_feature_auto_chk(g_dbdb_d[l_ac].dbdb005) AND cl_null(g_dbdb_d[l_ac].dbdb006) THEN
                  CALL s_feature_single(g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb006,g_site,'') RETURNING l_success,g_dbdb_d[l_ac].dbdb006
                  DISPLAY BY NAME g_dbdb_d[l_ac].dbdb006
               END IF
            END IF
            #160314-00009#2   add by zhujing 2016-3-16-----(E)
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb006
            
            #add-point:AFTER FIELD dbdb006 name="input.a.page1.dbdb006"
            IF NOT cl_null(g_dbdb_d[l_ac].dbdb006) THEN
               #151224-00025#1 tsungyung --- add start ---
               IF NOT s_feature_direct_input(g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb006,g_dbdb_d_t.dbdb006,g_dbda_m.dbdadocno,g_dbda_m.dbdasite) THEN
                  NEXT FIELD CURRENT
               END IF       
               #151224-00025#1 tsungyung --- add end   ---   
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdb006
            #add-point:ON CHANGE dbdb006 name="input.g.page1.dbdb006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb007
            #add-point:BEFORE FIELD dbdb007 name="input.b.page1.dbdb007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb007
            
            #add-point:AFTER FIELD dbdb007 name="input.a.page1.dbdb007"
            #IF cl_null(g_dbdb_d[l_ac].dbdb007) THEN
            #   LET g_dbdb_d[l_ac].dbdb007 = " "
            #END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdb007
            #add-point:ON CHANGE dbdb007 name="input.g.page1.dbdb007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb015
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_dbdb_d[l_ac].dbdb015,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD dbdb015
            END IF 
 
 
 
            #add-point:AFTER FIELD dbdb015 name="input.a.page1.dbdb015"
            IF NOT cl_null(g_dbdb_d[l_ac].dbdb015) AND NOT cl_null(g_dbdb_d[l_ac].dbdb014) AND NOT cl_null(g_dbdb_d[l_ac].dbdb009) THEN  
               CALL s_aooi250_convert_qty(g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb014,g_dbdb_d[l_ac].dbdb009,g_dbdb_d[l_ac].dbdb015)
                  RETURNING l_success,g_dbdb_d[l_ac].dbdb008
            END IF            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb015
            #add-point:BEFORE FIELD dbdb015 name="input.b.page1.dbdb015"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdb015
            #add-point:ON CHANGE dbdb015 name="input.g.page1.dbdb015"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb014
            
            #add-point:AFTER FIELD dbdb014 name="input.a.page1.dbdb014"
            IF NOT cl_null(g_dbdb_d[l_ac].dbdb014) THEN 
#               IF p_cmd = 'a' OR (p_cmd = 'u' AND ( g_dbdb_d[l_ac].dbdb014 <> g_dbdb_d_o.dbdb014 OR cl_null(g_dbdb_d_o.dbdb014))) THEN   #150427-00012#8 20150728 mark by beckxie
               IF g_dbdb_d[l_ac].dbdb014 <> g_dbdb_d_o.dbdb014 OR cl_null(g_dbdb_d_o.dbdb014) THEN   #150427-00012#8 20150728 add by beckxie
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_dbdb_d[l_ac].dbdb005
                  LET g_chkparam.arg2 = g_dbdb_d[l_ac].dbdb014
                  IF NOT cl_chk_exist("v_imao002") THEN
                     LET g_dbdb_d[l_ac].dbdb014 = g_dbdb_d_o.dbdb014
                     CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb014) RETURNING g_dbdb_d[l_ac].dbdb014_desc
                     DISPLAY BY NAME g_dbdb_d[l_ac].dbdb014_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_dbdb_d[l_ac].dbdb015) AND NOT cl_null(g_dbdb_d[l_ac].dbdb014) AND NOT cl_null(g_dbdb_d[l_ac].dbdb009) THEN  
                     CALL s_aooi250_convert_qty(g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb014,g_dbdb_d[l_ac].dbdb009,g_dbdb_d[l_ac].dbdb015)
                        RETURNING l_success,g_dbdb_d[l_ac].dbdb008
                  END IF
               END IF
            END IF 
            LET g_dbdb_d_o.dbdb014 = g_dbdb_d[l_ac].dbdb014
            CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb014) RETURNING g_dbdb_d[l_ac].dbdb014_desc
            DISPLAY BY NAME g_dbdb_d[l_ac].dbdb014_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb014
            #add-point:BEFORE FIELD dbdb014 name="input.b.page1.dbdb014"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdb014
            #add-point:ON CHANGE dbdb014 name="input.g.page1.dbdb014"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb008
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_dbdb_d[l_ac].dbdb008,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD dbdb008
            END IF 
 
 
 
            #add-point:AFTER FIELD dbdb008 name="input.a.page1.dbdb008"
            IF NOT cl_null(g_dbdb_d[l_ac].dbdb008) THEN 
            END IF 
            
            #ken------------------------------------------------------------s
            IF NOT cl_null(g_dbdb_d[l_ac].dbdb008) THEN
               IF NOT cl_null(g_dbdb_d[l_ac].dbdb009) AND NOT cl_null(g_dbdb_d[l_ac].dbdb014) THEN  
                  CALL s_aooi250_convert_qty(g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb009,g_dbdb_d[l_ac].dbdb014,g_dbdb_d[l_ac].dbdb008)
                     RETURNING l_success,g_dbdb_d[l_ac].dbdb015
               END IF
            ELSE
               LET g_dbdb_d[l_ac].dbdb015 = null
            END IF            
            CALL adbt450_set_entry_b(p_cmd)
            CALL adbt450_set_no_entry_b(p_cmd) 
            #ken------------------------------------------------------------e

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb008
            #add-point:BEFORE FIELD dbdb008 name="input.b.page1.dbdb008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdb008
            #add-point:ON CHANGE dbdb008 name="input.g.page1.dbdb008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb009
            
            #add-point:AFTER FIELD dbdb009 name="input.a.page1.dbdb009"
            IF NOT cl_null(g_dbdb_d[l_ac].dbdb009) THEN 
#               IF p_cmd = 'a' OR (p_cmd = 'u' AND ( g_dbdb_d[l_ac].dbdb009 <> g_dbdb_d_o.dbdb009 OR cl_null(g_dbdb_d_o.dbdb009))) THEN   #150427-00012#8 20150728 mark by beckxie
               IF g_dbdb_d[l_ac].dbdb009 <> g_dbdb_d_o.dbdb009 OR cl_null(g_dbdb_d_o.dbdb009) THEN   #150427-00012#8 20150728 add by beckxie
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_dbdb_d[l_ac].dbdb005
                  LET g_chkparam.arg2 = g_dbdb_d[l_ac].dbdb009
                     
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_imao002") THEN
                     #檢查失敗時後續處理
                     LET g_dbdb_d[l_ac].dbdb009 = g_dbdb_d_o.dbdb009
                     CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb009) RETURNING g_dbdb_d[l_ac].dbdb009_desc
                     DISPLAY BY NAME g_dbdb_d[l_ac].dbdb009_desc
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF NOT cl_null(g_dbdb_d[l_ac].dbdb009) AND NOT cl_null(g_dbdb_d[l_ac].dbdb010) THEN
                     CALL s_aimi190_get_convert(g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb009,g_dbdb_d[l_ac].dbdb010) RETURNING l_success,l_rate
                     IF l_success THEN
                        LET g_dbdb_d[l_ac].dbdb011 = l_rate
                     ELSE
                        LET g_dbdb_d[l_ac].dbdb009 = g_dbdb_d_o.dbdb009
                        CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb009) RETURNING g_dbdb_d[l_ac].dbdb009_desc
                        DISPLAY BY NAME g_dbdb_d[l_ac].dbdb009_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  IF NOT cl_null(g_dbdb_d[l_ac].dbdb015) AND NOT cl_null(g_dbdb_d[l_ac].dbdb014) AND NOT cl_null(g_dbdb_d[l_ac].dbdb009) THEN  
                     CALL s_aooi250_convert_qty(g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb014,g_dbdb_d[l_ac].dbdb009,g_dbdb_d[l_ac].dbdb015)
                        RETURNING l_success,g_dbdb_d[l_ac].dbdb008
                  END IF  
               END IF
            END IF 
            LET g_dbdb_d_o.dbdb009 = g_dbdb_d[l_ac].dbdb009
            CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb009) RETURNING g_dbdb_d[l_ac].dbdb009_desc
            DISPLAY BY NAME g_dbdb_d[l_ac].dbdb009_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb009
            #add-point:BEFORE FIELD dbdb009 name="input.b.page1.dbdb009"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdb009
            #add-point:ON CHANGE dbdb009 name="input.g.page1.dbdb009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb010
            #add-point:BEFORE FIELD dbdb010 name="input.b.page1.dbdb010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb010
            
            #add-point:AFTER FIELD dbdb010 name="input.a.page1.dbdb010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdb010
            #add-point:ON CHANGE dbdb010 name="input.g.page1.dbdb010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb011
            #add-point:BEFORE FIELD dbdb011 name="input.b.page1.dbdb011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb011
            
            #add-point:AFTER FIELD dbdb011 name="input.a.page1.dbdb011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdb011
            #add-point:ON CHANGE dbdb011 name="input.g.page1.dbdb011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb012
            #add-point:BEFORE FIELD dbdb012 name="input.b.page1.dbdb012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb012
            
            #add-point:AFTER FIELD dbdb012 name="input.a.page1.dbdb012"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdb012
            #add-point:ON CHANGE dbdb012 name="input.g.page1.dbdb012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD dbdb013
            #add-point:BEFORE FIELD dbdb013 name="input.b.page1.dbdb013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD dbdb013
            
            #add-point:AFTER FIELD dbdb013 name="input.a.page1.dbdb013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE dbdb013
            #add-point:ON CHANGE dbdb013 name="input.g.page1.dbdb013"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.dbdbsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdbsite
            #add-point:ON ACTION controlp INFIELD dbdbsite name="input.c.page1.dbdbsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdbunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdbunit
            #add-point:ON ACTION controlp INFIELD dbdbunit name="input.c.page1.dbdbunit"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdbseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdbseq
            #add-point:ON ACTION controlp INFIELD dbdbseq name="input.c.page1.dbdbseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdb001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb001
            #add-point:ON ACTION controlp INFIELD dbdb001 name="input.c.page1.dbdb001"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdb002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb002
            #add-point:ON ACTION controlp INFIELD dbdb002 name="input.c.page1.dbdb002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdb003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb003
            #add-point:ON ACTION controlp INFIELD dbdb003 name="input.c.page1.dbdb003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdb004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb004
            #add-point:ON ACTION controlp INFIELD dbdb004 name="input.c.page1.dbdb004"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbdb_d[l_ac].dbdb004             #給予default值

            #給予arg

            
            CALL q_imay003_6()                                #呼叫開窗

            LET g_dbdb_d[l_ac].dbdb004 = g_qryparam.return1              

            DISPLAY g_dbdb_d[l_ac].dbdb004 TO dbdb004              #

            NEXT FIELD dbdb004                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdb005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb005
            #add-point:ON ACTION controlp INFIELD dbdb005 name="input.c.page1.dbdb005"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbdb_d[l_ac].dbdb005             #給予default值
            LET g_qryparam.default2 = "" #g_dbdb_d[l_ac].imaal003 #品名
            LET g_qryparam.default3 = "" #g_dbdb_d[l_ac].imaal004 #規格
            #給予arg

            
            CALL q_imaa001()                                #呼叫開窗

            LET g_dbdb_d[l_ac].dbdb005 = g_qryparam.return1              
            #LET g_dbdb_d[l_ac].imaal003 = g_qryparam.return2 
            #LET g_dbdb_d[l_ac].imaal004 = g_qryparam.return3 
            DISPLAY g_dbdb_d[l_ac].dbdb005 TO dbdb005              #
            #DISPLAY g_dbdb_d[l_ac].imaal003 TO imaal003 #品名
            #DISPLAY g_dbdb_d[l_ac].imaal004 TO imaal004 #規格
            CALL adbt450_dbdb005_ref()
            NEXT FIELD dbdb005                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdb006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb006
            #add-point:ON ACTION controlp INFIELD dbdb006 name="input.c.page1.dbdb006"
            #取得料件產品特徵
            LET l_imaa005 = ''
            CALL adbt450_get_imaa005(g_dbdb_d[l_ac].dbdb005) RETURNING l_imaa005
               
            IF NOT cl_null(l_imaa005) THEN
               #IF l_cmd = 'a' THEN            
               #   CALL l_inam.clear()            
               #   CALL s_feature(l_cmd,g_inbb_d[l_ac].inbb001,'','',g_site,g_inba_m.inbadocno) RETURNING l_success,l_inam
               #   LET g_inbb_d[l_ac].inbb002 = l_inam[1].inam002
               #   LET g_inbb_d[l_ac].inbb011 = l_inam[1].inam004
               #   DISPLAY BY NAME g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb011 
               #END IF
               #IF l_cmd = 'u' THEN
                  CALL s_feature_single(g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb006,g_dbda_m.dbdasite,g_dbda_m.dbdadocno)
                     RETURNING l_success,g_dbdb_d[l_ac].dbdb006
                  DISPLAY BY NAME g_dbdb_d[l_ac].dbdb006
               #END IF
            ELSE   #無使用產品特徵
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'ain-00121'
               LET g_errparam.extend = g_dbdb_d[l_ac].dbdb005
               LET g_errparam.popup = TRUE
               CALL cl_err()

            END IF    
            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdb007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb007
            #add-point:ON ACTION controlp INFIELD dbdb007 name="input.c.page1.dbdb007"
            #160826-00032#1 add start -----
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_dbdb_d[l_ac].dbdb007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s
            IF NOT cl_null(g_dbdb_d[l_ac].dbdb005) THEN
               LET g_qryparam.where =  " inaj005 = '",g_dbdb_d[l_ac].dbdb005,"'"
            END IF
            
            CALL q_inaj010()                                #呼叫開窗
 
            LET g_dbdb_d[l_ac].dbdb007 = g_qryparam.return1              

            DISPLAY g_dbdb_d[l_ac].dbdb007 TO dbdb007              #

            NEXT FIELD dbdb007                          #返回原欄位
            #160826-00032#1 add end -----
            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdb015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb015
            #add-point:ON ACTION controlp INFIELD dbdb015 name="input.c.page1.dbdb015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdb014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb014
            #add-point:ON ACTION controlp INFIELD dbdb014 name="input.c.page1.dbdb014"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbdb_d[l_ac].dbdb014             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_dbdb_d[l_ac].dbdb005

            
            CALL q_imao002()                                #呼叫開窗

            LET g_dbdb_d[l_ac].dbdb014 = g_qryparam.return1              

            DISPLAY g_dbdb_d[l_ac].dbdb014 TO dbdb014              #
            CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb014) RETURNING g_dbdb_d[l_ac].dbdb014_desc
            DISPLAY BY NAME g_dbdb_d[l_ac].dbdb014_desc
            NEXT FIELD dbdb014                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdb008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb008
            #add-point:ON ACTION controlp INFIELD dbdb008 name="input.c.page1.dbdb008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdb009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb009
            #add-point:ON ACTION controlp INFIELD dbdb009 name="input.c.page1.dbdb009"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_dbdb_d[l_ac].dbdb009             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_dbdb_d[l_ac].dbdb005
            
            CALL q_imao002()                                #呼叫開窗

            LET g_dbdb_d[l_ac].dbdb009 = g_qryparam.return1              

            DISPLAY g_dbdb_d[l_ac].dbdb009 TO dbdb009              #
            CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb009) RETURNING g_dbdb_d[l_ac].dbdb009_desc
            DISPLAY BY NAME g_dbdb_d[l_ac].dbdb009_desc
            NEXT FIELD dbdb009                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdb010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb010
            #add-point:ON ACTION controlp INFIELD dbdb010 name="input.c.page1.dbdb010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdb011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb011
            #add-point:ON ACTION controlp INFIELD dbdb011 name="input.c.page1.dbdb011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdb012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb012
            #add-point:ON ACTION controlp INFIELD dbdb012 name="input.c.page1.dbdb012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.dbdb013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD dbdb013
            #add-point:ON ACTION controlp INFIELD dbdb013 name="input.c.page1.dbdb013"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_dbdb_d[l_ac].* = g_dbdb_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE adbt450_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_dbdb_d[l_ac].dbdbseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_dbdb_d[l_ac].* = g_dbdb_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               IF cl_null(g_dbdb_d[l_ac].dbdb010) THEN
                  LET g_dbdb_d[l_ac].dbdb010 = " "
               END IF
               IF cl_null(g_dbdb_d[l_ac].dbdb006) THEN
                  LET g_dbdb_d[l_ac].dbdb006 = ' '
               END IF
               IF cl_null(g_dbdb_d[l_ac].dbdb007) THEN
                  LET g_dbdb_d[l_ac].dbdb007 = ' '
               END IF
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL adbt450_dbdb_t_mask_restore('restore_mask_o')
      
               UPDATE dbdb_t SET (dbdbdocno,dbdbsite,dbdbunit,dbdbseq,dbdb001,dbdb002,dbdb003,dbdb004, 
                   dbdb005,dbdb006,dbdb007,dbdb015,dbdb014,dbdb008,dbdb009,dbdb010,dbdb011,dbdb012,dbdb013) = (g_dbda_m.dbdadocno, 
                   g_dbdb_d[l_ac].dbdbsite,g_dbdb_d[l_ac].dbdbunit,g_dbdb_d[l_ac].dbdbseq,g_dbdb_d[l_ac].dbdb001, 
                   g_dbdb_d[l_ac].dbdb002,g_dbdb_d[l_ac].dbdb003,g_dbdb_d[l_ac].dbdb004,g_dbdb_d[l_ac].dbdb005, 
                   g_dbdb_d[l_ac].dbdb006,g_dbdb_d[l_ac].dbdb007,g_dbdb_d[l_ac].dbdb015,g_dbdb_d[l_ac].dbdb014, 
                   g_dbdb_d[l_ac].dbdb008,g_dbdb_d[l_ac].dbdb009,g_dbdb_d[l_ac].dbdb010,g_dbdb_d[l_ac].dbdb011, 
                   g_dbdb_d[l_ac].dbdb012,g_dbdb_d[l_ac].dbdb013)
                WHERE dbdbent = g_enterprise AND dbdbdocno = g_dbda_m.dbdadocno 
 
                  AND dbdbseq = g_dbdb_d_t.dbdbseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_dbdb_d[l_ac].* = g_dbdb_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "dbdb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_dbdb_d[l_ac].* = g_dbdb_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "dbdb_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dbda_m.dbdadocno
               LET gs_keys_bak[1] = g_dbdadocno_t
               LET gs_keys[2] = g_dbdb_d[g_detail_idx].dbdbseq
               LET gs_keys_bak[2] = g_dbdb_d_t.dbdbseq
               CALL adbt450_update_b('dbdb_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL adbt450_dbdb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_dbdb_d[g_detail_idx].dbdbseq = g_dbdb_d_t.dbdbseq 
 
                  ) THEN
                  LET gs_keys[01] = g_dbda_m.dbdadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_dbdb_d_t.dbdbseq
 
                  CALL adbt450_key_update_b(gs_keys,'dbdb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_dbda_m),util.JSON.stringify(g_dbdb_d_t)
               LET g_log2 = util.JSON.stringify(g_dbda_m),util.JSON.stringify(g_dbdb_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL adbt450_unlock_b("dbdb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            CALL cl_set_combo_scc('dbdb001','6053') 
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_dbdb_d[li_reproduce_target].* = g_dbdb_d[li_reproduce].*
 
               LET g_dbdb_d[li_reproduce_target].dbdbseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_dbdb_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_dbdb_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
 
{</section>}
 
{<section id="adbt450.input.other" >}
      
      #add-point:自定義input name="input.more_input"
 
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         IF p_cmd = 'a' THEN
            NEXT FIELD dbdasite
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD dbdbseq
 
            END CASE
         END IF
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD dbdadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD dbdbsite
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="adbt450.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION adbt450_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL adbt450_b_fill() #單身填充
      CALL adbt450_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL adbt450_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbda_m.dbdaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_dbda_m.dbdaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbda_m.dbdaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbda_m.dbdaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_dbda_m.dbdaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbda_m.dbdaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbda_m.dbdacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_dbda_m.dbdacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbda_m.dbdacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbda_m.dbdacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_dbda_m.dbdacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbda_m.dbdacrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbda_m.dbdamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_dbda_m.dbdamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbda_m.dbdamodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbda_m.dbdacnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_dbda_m.dbdacnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbda_m.dbdacnfid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_dbda_m.dbdapstid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_dbda_m.dbdapstid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_dbda_m.dbdapstid_desc
            
   CALL adbt450_dbdasite_ref()
   CALL adbt450_dbda001_ref()
   CALL adbt450_dbda002_ref()
   CALL adbt450_dbda004_ref()
   CALL adbt450_dbda005_ref()
   #end add-point
   
   #遮罩相關處理
   LET g_dbda_m_mask_o.* =  g_dbda_m.*
   CALL adbt450_dbda_t_mask()
   LET g_dbda_m_mask_n.* =  g_dbda_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_dbda_m.dbdasite,g_dbda_m.dbdasite_desc,g_dbda_m.dbdadocdt,g_dbda_m.dbda003,g_dbda_m.dbdadocno, 
       g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda001_desc,g_dbda_m.dbda002,g_dbda_m.dbda002_desc, 
       g_dbda_m.dbda004,g_dbda_m.dbda004_desc,g_dbda_m.dbda005,g_dbda_m.dbda005_desc,g_dbda_m.dbda006, 
       g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaownid_desc,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdp_desc, 
       g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamodid_desc,g_dbda_m.dbdamoddt,g_dbda_m.dbdacnfid, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstid_desc,g_dbda_m.dbdapstdt 
 
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_dbda_m.dbdastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_dbdb_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      CALL adbt450_dbdb005_ref()
      CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb009) RETURNING g_dbdb_d[l_ac].dbdb009_desc
      CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb014) RETURNING g_dbdb_d[l_ac].dbdb014_desc
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL adbt450_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION adbt450_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION adbt450_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE dbda_t.dbdadocno 
   DEFINE l_oldno     LIKE dbda_t.dbdadocno 
 
   DEFINE l_master    RECORD LIKE dbda_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE dbdb_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   DEFINE l_insert    LIKE type_t.num5
   #ken---add---s 需求單號：141125-00002 項次：4
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_doctype     LIKE rtai_t.rtai004 
   #ken---add---e
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_dbda_m.dbdadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_dbdadocno_t = g_dbda_m.dbdadocno
 
    
   LET g_dbda_m.dbdadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_dbda_m.dbdaownid = g_user
      LET g_dbda_m.dbdaowndp = g_dept
      LET g_dbda_m.dbdacrtid = g_user
      LET g_dbda_m.dbdacrtdp = g_dept 
      LET g_dbda_m.dbdacrtdt = cl_get_current()
      LET g_dbda_m.dbdamodid = g_user
      LET g_dbda_m.dbdamoddt = cl_get_current()
      LET g_dbda_m.dbdastus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   LET g_dbda_m.dbdacnfid = ""
   LET g_dbda_m.dbdacnfdt = ""
   LET g_dbda_m.dbdapstid = ""
   LET g_dbda_m.dbdapstdt = ""
   LET g_dbda_m.dbdastus = "N"
   LET g_dbda_m.dbda006 = "N"
   CALL s_aooi500_default(g_prog,'dbdasite',g_site)
    RETURNING l_insert,g_dbda_m.dbdasite
   IF NOT l_insert THEN
     RETURN
   END IF
   CALL adbt450_dbdasite_ref()
   #ken---add---s 需求單號：141125-00002 項次：4
   #預設單據的單別 
   LET l_success = ''
   LET l_doctype = ''
   CALL s_arti200_get_def_doc_type(g_dbda_m.dbdasite,g_prog,'1')
        RETURNING l_success, l_doctype
   LET g_dbda_m.dbdadocno = l_doctype
   #ken---add---e
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_dbda_m.dbdastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL adbt450_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_dbda_m.* TO NULL
      INITIALIZE g_dbdb_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL adbt450_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adbt450_set_act_visible()   
   CALL adbt450_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_dbdadocno_t = g_dbda_m.dbdadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " dbdaent = " ||g_enterprise|| " AND",
                      " dbdadocno = '", g_dbda_m.dbdadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL adbt450_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL adbt450_idx_chk()
   
   LET g_data_owner = g_dbda_m.dbdaownid      
   LET g_data_dept  = g_dbda_m.dbdaowndp
   
   #功能已完成,通報訊息中心
   CALL adbt450_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="adbt450.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION adbt450_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE dbdb_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE adbt450_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM dbdb_t
    WHERE dbdbent = g_enterprise AND dbdbdocno = g_dbdadocno_t
 
    INTO TEMP adbt450_detail
 
   #將key修正為調整後   
   UPDATE adbt450_detail 
      #更新key欄位
      SET dbdbdocno = g_dbda_m.dbdadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO dbdb_t SELECT * FROM adbt450_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adbt450_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_dbdadocno_t = g_dbda_m.dbdadocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.delete" >}
#+ 資料刪除
PRIVATE FUNCTION adbt450_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_dbda_m.dbdadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN adbt450_cl USING g_enterprise,g_dbda_m.dbdadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN adbt450_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE adbt450_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE adbt450_master_referesh USING g_dbda_m.dbdadocno INTO g_dbda_m.dbdasite,g_dbda_m.dbdadocdt, 
       g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004, 
       g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt, 
       g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt,g_dbda_m.dbdasite_desc, 
       g_dbda_m.dbda001_desc,g_dbda_m.dbda002_desc,g_dbda_m.dbda004_desc,g_dbda_m.dbda005_desc,g_dbda_m.dbdaownid_desc, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp_desc,g_dbda_m.dbdamodid_desc, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdapstid_desc
   
   
   #檢查是否允許此動作
   IF NOT adbt450_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_dbda_m_mask_o.* =  g_dbda_m.*
   CALL adbt450_dbda_t_mask()
   LET g_dbda_m_mask_n.* =  g_dbda_m.*
   
   CALL adbt450_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL adbt450_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_dbdadocno_t = g_dbda_m.dbdadocno
 
 
      DELETE FROM dbda_t
       WHERE dbdaent = g_enterprise AND dbdadocno = g_dbda_m.dbdadocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_dbda_m.dbdadocno,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM dbdb_t
       WHERE dbdbent = g_enterprise AND dbdbdocno = g_dbda_m.dbdadocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "dbdb_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE adbt450_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_dbdb_d.clear() 
 
     
      CALL adbt450_ui_browser_refresh()  
      #CALL adbt450_ui_headershow()  
      #CALL adbt450_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL adbt450_browser_fill("")
         CALL adbt450_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE adbt450_cl
 
   #功能已完成,通報訊息中心
   CALL adbt450_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="adbt450.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION adbt450_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_dbdb_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF adbt450_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT dbdbsite,dbdbunit,dbdbseq,dbdb001,dbdb002,dbdb003,dbdb004,dbdb005, 
             dbdb006,dbdb007,dbdb015,dbdb014,dbdb008,dbdb009,dbdb010,dbdb011,dbdb012,dbdb013 ,t1.imaal003 , 
             t3.oocal003 ,t4.oocal003 FROM dbdb_t",   
                     " INNER JOIN dbda_t ON dbdaent = " ||g_enterprise|| " AND dbdadocno = dbdbdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=dbdb005 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent="||g_enterprise||" AND t3.oocal001=dbdb014 AND t3.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent="||g_enterprise||" AND t4.oocal001=dbdb009 AND t4.oocal002='"||g_dlang||"' ",
 
                     " WHERE dbdbent=? AND dbdbdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY dbdb_t.dbdbseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adbt450_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR adbt450_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_dbda_m.dbdadocno
                                               
      FOREACH b_fill_cs INTO g_dbdb_d[l_ac].dbdbsite,g_dbdb_d[l_ac].dbdbunit,g_dbdb_d[l_ac].dbdbseq, 
          g_dbdb_d[l_ac].dbdb001,g_dbdb_d[l_ac].dbdb002,g_dbdb_d[l_ac].dbdb003,g_dbdb_d[l_ac].dbdb004, 
          g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb006,g_dbdb_d[l_ac].dbdb007,g_dbdb_d[l_ac].dbdb015, 
          g_dbdb_d[l_ac].dbdb014,g_dbdb_d[l_ac].dbdb008,g_dbdb_d[l_ac].dbdb009,g_dbdb_d[l_ac].dbdb010, 
          g_dbdb_d[l_ac].dbdb011,g_dbdb_d[l_ac].dbdb012,g_dbdb_d[l_ac].dbdb013,g_dbdb_d[l_ac].dbdb005_desc, 
          g_dbdb_d[l_ac].dbdb014_desc,g_dbdb_d[l_ac].dbdb009_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_dbdb_d.deleteElement(g_dbdb_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE adbt450_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_dbdb_d.getLength()
      LET g_dbdb_d_mask_o[l_ac].* =  g_dbdb_d[l_ac].*
      CALL adbt450_dbdb_t_mask()
      LET g_dbdb_d_mask_n[l_ac].* =  g_dbdb_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="adbt450.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION adbt450_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM dbdb_t
       WHERE dbdbent = g_enterprise AND
         dbdbdocno = ps_keys_bak[1] AND dbdbseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_dbdb_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION adbt450_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
 
      #end add-point 
      INSERT INTO dbdb_t
                  (dbdbent,
                   dbdbdocno,
                   dbdbseq
                   ,dbdbsite,dbdbunit,dbdb001,dbdb002,dbdb003,dbdb004,dbdb005,dbdb006,dbdb007,dbdb015,dbdb014,dbdb008,dbdb009,dbdb010,dbdb011,dbdb012,dbdb013) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_dbdb_d[g_detail_idx].dbdbsite,g_dbdb_d[g_detail_idx].dbdbunit,g_dbdb_d[g_detail_idx].dbdb001, 
                       g_dbdb_d[g_detail_idx].dbdb002,g_dbdb_d[g_detail_idx].dbdb003,g_dbdb_d[g_detail_idx].dbdb004, 
                       g_dbdb_d[g_detail_idx].dbdb005,g_dbdb_d[g_detail_idx].dbdb006,g_dbdb_d[g_detail_idx].dbdb007, 
                       g_dbdb_d[g_detail_idx].dbdb015,g_dbdb_d[g_detail_idx].dbdb014,g_dbdb_d[g_detail_idx].dbdb008, 
                       g_dbdb_d[g_detail_idx].dbdb009,g_dbdb_d[g_detail_idx].dbdb010,g_dbdb_d[g_detail_idx].dbdb011, 
                       g_dbdb_d[g_detail_idx].dbdb012,g_dbdb_d[g_detail_idx].dbdb013)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "dbdb_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_dbdb_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION adbt450_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "dbdb_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
 
      #end add-point 
      
      #將遮罩欄位還原
      CALL adbt450_dbdb_t_mask_restore('restore_mask_o')
               
      UPDATE dbdb_t 
         SET (dbdbdocno,
              dbdbseq
              ,dbdbsite,dbdbunit,dbdb001,dbdb002,dbdb003,dbdb004,dbdb005,dbdb006,dbdb007,dbdb015,dbdb014,dbdb008,dbdb009,dbdb010,dbdb011,dbdb012,dbdb013) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_dbdb_d[g_detail_idx].dbdbsite,g_dbdb_d[g_detail_idx].dbdbunit,g_dbdb_d[g_detail_idx].dbdb001, 
                  g_dbdb_d[g_detail_idx].dbdb002,g_dbdb_d[g_detail_idx].dbdb003,g_dbdb_d[g_detail_idx].dbdb004, 
                  g_dbdb_d[g_detail_idx].dbdb005,g_dbdb_d[g_detail_idx].dbdb006,g_dbdb_d[g_detail_idx].dbdb007, 
                  g_dbdb_d[g_detail_idx].dbdb015,g_dbdb_d[g_detail_idx].dbdb014,g_dbdb_d[g_detail_idx].dbdb008, 
                  g_dbdb_d[g_detail_idx].dbdb009,g_dbdb_d[g_detail_idx].dbdb010,g_dbdb_d[g_detail_idx].dbdb011, 
                  g_dbdb_d[g_detail_idx].dbdb012,g_dbdb_d[g_detail_idx].dbdb013) 
         WHERE dbdbent = g_enterprise AND dbdbdocno = ps_keys_bak[1] AND dbdbseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "dbdb_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "dbdb_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adbt450_dbdb_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION adbt450_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION adbt450_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION adbt450_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL adbt450_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "dbdb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN adbt450_bcl USING g_enterprise,
                                       g_dbda_m.dbdadocno,g_dbdb_d[g_detail_idx].dbdbseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adbt450_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="adbt450.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION adbt450_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adbt450_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="adbt450.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION adbt450_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("dbdadocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("dbdadocno",TRUE)
      CALL cl_set_comp_entry("dbdadocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("dbdasite",TRUE)
      CALL cl_set_comp_entry("dbdadocdt",TRUE)
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
 
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="adbt450.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION adbt450_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("dbdadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      CALL cl_set_comp_entry("dbdasite",FALSE)
      CALL cl_set_comp_entry("dbdadocdt",FALSE)
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("dbdadocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("dbdadocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF NOT s_aooi500_comp_entry(g_prog,'dbdasite') OR g_flag THEN
      CALL cl_set_comp_entry("dbdasite",FALSE)
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="adbt450.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION adbt450_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   CALL cl_set_comp_entry("dbdb009",TRUE)
   CALL cl_set_comp_entry("dbdb014",TRUE)
   CALL cl_set_comp_entry("dbdb015",TRUE)  #ken
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="adbt450.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION adbt450_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   IF l_ac > 0 AND g_dbdb_d.getLength() > 0 THEN
      IF NOT cl_null(g_dbdb_d[g_detail_idx].dbdb004) THEN
         CALL cl_set_comp_entry("dbdb009",FALSE)
         CALL cl_set_comp_entry("dbdb014",FALSE)
      END IF
   END IF
   #ken----------------------------s
   IF l_ac > 0 AND g_dbdb_d.getLength() > 0 THEN
      IF NOT cl_null(g_dbdb_d[g_detail_idx].dbdb008) THEN
         CALL cl_set_comp_entry("dbdb015",FALSE)
      END IF
   END IF
   #ken----------------------------e
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="adbt450.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION adbt450_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   CALL cl_set_act_visible("modify,delete,modify_detail",TRUE)
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION adbt450_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
  
   IF NOT g_dbda_m.dbdastus MATCHES "[NDR]" THEN
      CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
   END IF 
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION adbt450_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   #IF g_dbda_m.dbdastus = 'N' THEN

   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION adbt450_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION adbt450_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " dbdadocno = '", g_argv[02], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "dbda_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "dbdb_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   #160719-00015#1 160719 by sakura mark(S)
   #IF NOT cl_null(g_argv[1]) THEN
   #   LET ls_wc = " dbda000 = '", g_argv[1], "' AND "
   #   LET g_wc = " dbda000 = '", g_argv[1], "'"
   #END IF
   #160719-00015#1 160719 by sakura mark(E)
   
   #160719-00015#1 160719 by sakura add(S)
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc," dbda000 = '", g_argv[1], "' AND "
      LET g_wc = g_wc," dbda000 = '", g_argv[1], "'"
   END IF   
   #160719-00015#1 160719 by sakura add(E)   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="adbt450.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION adbt450_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success LIKE type_t.num5  
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   IF g_dbda_m.dbdastus = "X" THEN
      RETURN
   END IF
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_dbda_m.dbdadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN adbt450_cl USING g_enterprise,g_dbda_m.dbdadocno
   IF STATUS THEN
      CLOSE adbt450_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN adbt450_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE adbt450_master_referesh USING g_dbda_m.dbdadocno INTO g_dbda_m.dbdasite,g_dbda_m.dbdadocdt, 
       g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004, 
       g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt, 
       g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt,g_dbda_m.dbdasite_desc, 
       g_dbda_m.dbda001_desc,g_dbda_m.dbda002_desc,g_dbda_m.dbda004_desc,g_dbda_m.dbda005_desc,g_dbda_m.dbdaownid_desc, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp_desc,g_dbda_m.dbdamodid_desc, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdapstid_desc
   
 
   #檢查是否允許此動作
   IF NOT adbt450_action_chk() THEN
      CLOSE adbt450_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_dbda_m.dbdasite,g_dbda_m.dbdasite_desc,g_dbda_m.dbdadocdt,g_dbda_m.dbda003,g_dbda_m.dbdadocno, 
       g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda001_desc,g_dbda_m.dbda002,g_dbda_m.dbda002_desc, 
       g_dbda_m.dbda004,g_dbda_m.dbda004_desc,g_dbda_m.dbda005,g_dbda_m.dbda005_desc,g_dbda_m.dbda006, 
       g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaownid_desc,g_dbda_m.dbdaowndp, 
       g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdp_desc, 
       g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamodid_desc,g_dbda_m.dbdamoddt,g_dbda_m.dbdacnfid, 
       g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstid_desc,g_dbda_m.dbdapstdt 
 
 
   CASE g_dbda_m.dbdastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "S"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
      WHEN "Z"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_dbda_m.dbdastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "S"
               HIDE OPTION "posted"
            WHEN "Z"
               HIDE OPTION "unposted"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
         #提交和抽單一開始先無條件關
         CALL cl_set_act_visible("signing,withdraw",FALSE)
         
         CASE g_dbda_m.dbdastus
            WHEN "Y"
               HIDE OPTION "void"
               HIDE OPTION "invalid"
               HIDE OPTION "unposted"
            WHEN "S"
               HIDE OPTION "invalid"
               HIDE OPTION "unconfirmed"
               HIDE OPTION "confirmed"
            WHEN "N"
               HIDE OPTION "unposted"
               HIDE OPTION "unconfirmed"
               HIDE OPTION "posted"
               #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
               IF cl_bpm_chk() THEN
                  CALL cl_set_act_visible("signing",TRUE)
                  CALL cl_set_act_visible("confirmed",FALSE)
               END IF
            #已核准只能顯示確認;其餘應用功能皆隱藏
            WHEN "A"     
               CALL cl_set_act_visible("confirmed ",TRUE)  
               CALL cl_set_act_visible("unconfirmed,invalid,posted,unposted",FALSE)
            #保留修改的功能(如作廢)，隱藏其他應用功能
            WHEN "R"   
               CALL cl_set_act_visible("confirmed,unconfirmed,posted,unposted",FALSE)
            WHEN "D"  
               CALL cl_set_act_visible("confirmed,unconfirmed,posted,unposted",FALSE)
            #送簽中只能顯示抽單;其餘應用功能皆隱藏
            WHEN "W"   
               CALL cl_set_act_visible("withdraw",TRUE)  
               CALL cl_set_act_visible("unconfirmed,invalid,confirmed,posted,unposted",FALSE)

         END CASE 
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT adbt450_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE adbt450_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT adbt450_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE adbt450_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION posted
         IF cl_auth_chk_act("posted") THEN
            LET lc_state = "S"
            #add-point:action控制 name="statechange.posted"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION unposted
         IF cl_auth_chk_act("unposted") THEN
            LET lc_state = "Z"
            #add-point:action控制 name="statechange.unposted"
         LET lc_state = "Y"
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
 
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "S"
      AND lc_state <> "Z"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_dbda_m.dbdastus = lc_state OR cl_null(lc_state) THEN
      CLOSE adbt450_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   CALL cl_err_collect_init() #150523-00002#1 Add By Ken 150525
   LET l_success = TRUE          
   CASE 
      WHEN lc_state = 'Y' AND g_dbda_m.dbdastus = 'N'  
         #CALL cl_showmsg_init() #Mark By ken 150525
         CALL s_adbt450_conf_chk(g_dbda_m.dbdadocno,g_dbda_m.dbdastus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('aim-00108') THEN
               CALL s_transaction_begin()
               CALL s_adbt450_conf_upd(g_dbda_m.dbdadocno) RETURNING l_success
               IF NOT l_success THEN
                  #CALL cl_showmsg() #Mark By ken 150525
                  CALL cl_err_collect_show() #150523-00002#1 Add By Ken 150525
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL cl_err_collect_show()    #160818-00017#6 by 08172
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL cl_err_collect_show()    #160818-00017#6 by 08172
               RETURN            
            END IF
         ELSE
            #CALL cl_showmsg() #Mark By ken 150525
            CALL cl_err_collect_show() #150523-00002#1 Add By Ken 150525
            RETURN            
         END IF        
      WHEN lc_state = 'X' AND g_dbda_m.dbdastus = 'N'  
         #CALL cl_showmsg_init() #Mark By ken 150525
         CALL s_adbt450_void_chk(g_dbda_m.dbdadocno,g_dbda_m.dbdastus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('aim-00109') THEN
               CALL s_transaction_begin()
               CALL s_adbt450_void_upd(g_dbda_m.dbdadocno) RETURNING l_success
               IF NOT l_success THEN
                  #CALL cl_showmsg() #Mark By ken 150525
                  CALL cl_err_collect_show() #150523-00002#1 Add By Ken 150525
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL cl_err_collect_show()    #160818-00017#6 by 08172
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL cl_err_collect_show()    #160818-00017#6 by 08172
               RETURN
            END IF
         ELSE
            #CALL cl_showmsg() #Mark By ken 150525
            CALL cl_err_collect_show() #150523-00002#1 Add By Ken 150525
            RETURN    
         END IF
      WHEN lc_state = 'N' AND g_dbda_m.dbdastus = 'Y' 
         #CALL cl_showmsg_init() #Mark By ken 150525
         CALL s_adbt450_unconf_chk(g_dbda_m.dbdadocno,g_dbda_m.dbdastus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('aim-00110') THEN
               CALL s_transaction_begin()
               CALL s_adbt450_unconf_upd(g_dbda_m.dbdadocno) RETURNING l_success
               IF NOT l_success THEN
                  #CALL cl_showmsg() #Mark By ken 150525
                  CALL cl_err_collect_show() #150523-00002#1 Add By Ken 150525
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL cl_err_collect_show()    #160818-00017#6 by 08172
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL cl_err_collect_show()    #160818-00017#6 by 08172
               RETURN
            END IF
         ELSE
            #CALL cl_showmsg() #Mark By ken 150525
            CALL cl_err_collect_show() #150523-00002#1 Add By Ken 150525
            RETURN    
         END IF
      WHEN lc_state = 'S' AND g_dbda_m.dbdastus = 'Y'  
         INPUT BY NAME g_dbda_m.dbda003 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            AFTER FIELD dbda003
               IF cl_null(g_dbda_m.dbda003) THEN
                  LET g_dbda_m.dbda003 = g_dbda_m_t.dbda003
                  NEXT FIELD dbda003
               END IF
            
            ON ACTION accept    
               ACCEPT INPUT
              
            ON ACTION cancel      #在dialog button (放棄)
               RETURN
            
            ON ACTION close       #在dialog 右上角 (X) 
               RETURN
            
            ON ACTION exit        #toolbar 離開
               RETURN
         END INPUT
         CALL s_transaction_begin()
         UPDATE dbda_t
            SET dbda003 = g_dbda_m.dbda003
          WHERE dbdaent = g_enterprise 
            AND dbdadocno = g_dbda_m.dbdadocno
         
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "dbda_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()
  
            CALL s_transaction_end('N','0')
            RETURN
         END IF
         #CALL cl_showmsg_init() #Mark By ken 150525
         CALL s_adbt450_post_chk(g_dbda_m.dbdadocno,g_dbda_m.dbdastus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('sub-00360') THEN
               CALL s_transaction_begin()
               CALL s_adbt450_post_upd(g_dbda_m.dbdadocno) RETURNING l_success
               IF NOT l_success THEN
                  #CALL cl_showmsg() #Mark By ken 150525
                  CALL cl_err_collect_show() #150523-00002#1 Add By Ken 150525
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL cl_err_collect_show()    #160818-00017#6 by 08172
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL cl_err_collect_show()    #160818-00017#6 by 08172
               RETURN
            END IF
         ELSE
            #CALL cl_showmsg() #Mark By ken 150525
            CALL cl_err_collect_show() #150523-00002#1 Add By Ken 150525
            RETURN    
         END IF
      WHEN lc_state = 'Y' AND g_dbda_m.dbdastus = 'S'
         #CALL cl_showmsg_init() #Mark By ken 150525   
         CALL s_adbt450_unpost_chk(g_dbda_m.dbdadocno,g_dbda_m.dbdastus,g_prog) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('sub-00361') THEN
               CALL s_transaction_begin()
               CALL s_adbt450_unpost_upd(g_dbda_m.dbdadocno) RETURNING l_success
               IF NOT l_success THEN
                  #CALL cl_showmsg() #Mark By ken 150525
                  CALL cl_err_collect_show() #150523-00002#1 Add By Ken 150525
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL cl_err_collect_show()    #160818-00017#6 by 08172
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL cl_err_collect_show()    #160818-00017#6 by 08172
               RETURN
            END IF
         ELSE
            #CALL cl_showmsg() #Mark By ken 150525
            CALL cl_err_collect_show() #150523-00002#1 Add By Ken 150525
            RETURN    
         END IF
      OTHERWISE
         RETURN
   END CASE   
   #end add-point
   
   LET g_dbda_m.dbdamodid = g_user
   LET g_dbda_m.dbdamoddt = cl_get_current()
   LET g_dbda_m.dbdastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE dbda_t 
      SET (dbdastus,dbdamodid,dbdamoddt) 
        = (g_dbda_m.dbdastus,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt)     
    WHERE dbdaent = g_enterprise AND dbdadocno = g_dbda_m.dbdadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE adbt450_master_referesh USING g_dbda_m.dbdadocno INTO g_dbda_m.dbdasite,g_dbda_m.dbdadocdt, 
          g_dbda_m.dbda003,g_dbda_m.dbdadocno,g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda002,g_dbda_m.dbda004, 
          g_dbda_m.dbda005,g_dbda_m.dbda006,g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaowndp, 
          g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamoddt, 
          g_dbda_m.dbdacnfid,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstdt,g_dbda_m.dbdasite_desc, 
          g_dbda_m.dbda001_desc,g_dbda_m.dbda002_desc,g_dbda_m.dbda004_desc,g_dbda_m.dbda005_desc,g_dbda_m.dbdaownid_desc, 
          g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp_desc,g_dbda_m.dbdamodid_desc, 
          g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdapstid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_dbda_m.dbdasite,g_dbda_m.dbdasite_desc,g_dbda_m.dbdadocdt,g_dbda_m.dbda003,g_dbda_m.dbdadocno, 
          g_dbda_m.dbda000,g_dbda_m.dbda001,g_dbda_m.dbda001_desc,g_dbda_m.dbda002,g_dbda_m.dbda002_desc, 
          g_dbda_m.dbda004,g_dbda_m.dbda004_desc,g_dbda_m.dbda005,g_dbda_m.dbda005_desc,g_dbda_m.dbda006, 
          g_dbda_m.dbdaunit,g_dbda_m.dbdastus,g_dbda_m.dbdaownid,g_dbda_m.dbdaownid_desc,g_dbda_m.dbdaowndp, 
          g_dbda_m.dbdaowndp_desc,g_dbda_m.dbdacrtid,g_dbda_m.dbdacrtid_desc,g_dbda_m.dbdacrtdp,g_dbda_m.dbdacrtdp_desc, 
          g_dbda_m.dbdacrtdt,g_dbda_m.dbdamodid,g_dbda_m.dbdamodid_desc,g_dbda_m.dbdamoddt,g_dbda_m.dbdacnfid, 
          g_dbda_m.dbdacnfid_desc,g_dbda_m.dbdacnfdt,g_dbda_m.dbdapstid,g_dbda_m.dbdapstid_desc,g_dbda_m.dbdapstdt 
 
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE adbt450_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL adbt450_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="adbt450.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION adbt450_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_dbdb_d.getLength() THEN
         LET g_detail_idx = g_dbdb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_dbdb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_dbdb_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION adbt450_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL adbt450_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION adbt450_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="adbt450.status_show" >}
PRIVATE FUNCTION adbt450_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="adbt450.mask_functions" >}
&include "erp/adb/adbt450_mask.4gl"
 
{</section>}
 
{<section id="adbt450.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION adbt450_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   DEFINE l_success LIKE type_t.num5 
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL adbt450_show()
   CALL adbt450_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   LET l_success = TRUE
   #確認前檢核段
   #CALL cl_showmsg_init() #Mark By Ken 150525
   CALL cl_err_collect_init() #150523-00002#1 Add By Ken 150525
   CALL s_adbt450_conf_chk(g_dbda_m.dbdadocno,g_dbda_m.dbdastus) RETURNING l_success
   IF NOT l_success THEN
      CLOSE adbt450_cl
      #CALL cl_showmsg() #Mark By Ken 150525
      CALL cl_err_collect_show() #150523-00002#1 Add By Ken 150525
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_dbda_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_dbdb_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL adbt450_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL adbt450_ui_headershow()
   CALL adbt450_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION adbt450_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL adbt450_ui_headershow()  
   CALL adbt450_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="adbt450.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION adbt450_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_dbda_m.dbdadocno
   LET g_pk_array[1].column = 'dbdadocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="adbt450.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="adbt450.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION adbt450_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL adbt450_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_dbda_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="adbt450.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION adbt450_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#6 -s by 08172
   SELECT dbdastus  INTO g_dbda_m.dbdastus
     FROM dbda_t
    WHERE dbdaent = g_enterprise
      AND dbdadocno = g_dbda_m.dbdadocno
   LET g_errno = NULL
   IF (g_action_choice="modify" OR g_action_choice="modify_detail" OR g_action_choice="delete")  THEN
     CASE g_dbda_m.dbdastus
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
        WHEN 'Z'
           LET g_errno = 'sub-01351'
        
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_dbda_m.dbdadocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL adbt450_show()
        RETURN FALSE
     END IF
   END IF
   #160818-00017#6 -e by 08172
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="adbt450.other_function" readonly="Y" >}

PRIVATE FUNCTION adbt450_dbdasite_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_dbda_m.dbdasite
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_dbda_m.dbdasite_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_dbda_m.dbdasite_desc
END FUNCTION

PRIVATE FUNCTION adbt450_dbda001_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_dbda_m.dbda001
      CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_dbda_m.dbda001_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_dbda_m.dbda001_desc
END FUNCTION

PRIVATE FUNCTION adbt450_dbda002_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_dbda_m.dbda002
      CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_dbda_m.dbda002_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_dbda_m.dbda002_desc
END FUNCTION

PRIVATE FUNCTION adbt450_dbda004_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_dbda_m.dbda004
      CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
      LET g_dbda_m.dbda004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_dbda_m.dbda004_desc
END FUNCTION

PRIVATE FUNCTION adbt450_dbda005_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_dbda_m.dbda005
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_dbda_m.dbda005_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_dbda_m.dbda005_desc
END FUNCTION

PRIVATE FUNCTION adbt450_dbdb005_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_dbdb_d[l_ac].dbdb005
      CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_dbdb_d[l_ac].dbdb005_desc = '', g_rtn_fields[1] , ''
      LET g_dbdb_d[l_ac].dbdb005_desc_desc = '', g_rtn_fields[2] , ''
      DISPLAY BY NAME g_dbdb_d[l_ac].dbdb005_desc
      DISPLAY BY NAME g_dbdb_d[l_ac].dbdb005_desc_desc
END FUNCTION

PRIVATE FUNCTION adbt450_get_dbdb010()
   DEFINE l_rate      LIKE dbdb_t.dbdb011
   DEFINE l_success   LIKE type_t.num5
   
   LET l_success = TRUE
   LET g_dbdb_d[l_ac].dbdb010 = ""
   SELECT imaa104
     INTO g_dbdb_d[l_ac].dbdb010
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_dbdb_d[l_ac].dbdb005
   IF cl_null(g_dbdb_d[l_ac].dbdb010) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'adb-00267'
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET l_success = FALSE
      RETURN l_success
   END IF
   IF NOT cl_null(g_dbdb_d[l_ac].dbdb009) AND NOT cl_null(g_dbdb_d[l_ac].dbdb010) THEN
      CALL s_aimi190_get_convert(g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb009,g_dbdb_d[l_ac].dbdb010) RETURNING l_success,l_rate
      IF l_success THEN
         LET g_dbdb_d[l_ac].dbdb011 = l_rate
      END IF
   END IF
   RETURN l_success
END FUNCTION

PRIVATE FUNCTION adbt450_get_dbdb009()
   DEFINE l_rate      LIKE dbdb_t.dbdb011
   DEFINE l_success   LIKE type_t.num5

   LET l_success = TRUE
   #IF cl_null(g_dbdb_d[l_ac].dbdb009) THEN
      SELECT imaa105
        INTO g_dbdb_d[l_ac].dbdb009
        FROM imaa_t
       WHERE imaaent = g_enterprise
         AND imaa001 = g_dbdb_d[l_ac].dbdb005
         
      CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb009) RETURNING g_dbdb_d[l_ac].dbdb009_desc
      DISPLAY BY NAME g_dbdb_d[l_ac].dbdb009_desc
      
      CALL adbt450_dbdb014_default()
   #END IF
      
   IF NOT cl_null(g_dbdb_d[l_ac].dbdb009) AND NOT cl_null(g_dbdb_d[l_ac].dbdb010) THEN
      CALL s_aimi190_get_convert(g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb009,g_dbdb_d[l_ac].dbdb010) RETURNING l_success,l_rate
      IF l_success THEN
         LET g_dbdb_d[l_ac].dbdb011 = l_rate
      END IF
   END IF
   RETURN l_success
END FUNCTION

PRIVATE FUNCTION adbt450_get_imaa005(p_imaa001)
   DEFINE p_imaa001      LIKE imaa_t.imaa001
   DEFINE r_imaa005      LIKE imaa_t.imaa005

   LET r_imaa005 = ''
   SELECT imaa005 INTO r_imaa005 
     FROM imaa_t 
    WHERE imaaent = g_enterprise 
      AND imaa001 = p_imaa001
      
   RETURN r_imaa005  
END FUNCTION

PRIVATE FUNCTION adbt450_set_no_required_b()
   CALL cl_set_comp_required("dbdb006",FALSE)
END FUNCTION

PRIVATE FUNCTION adbt450_set_required_b()
   DEFINE l_imaf055  LIKE imaf_t.imaf055
   DEFINE l_imaf056  LIKE imaf_t.imaf056
   DEFINE l_imaa005  LIKE imaa_t.imaa005
   
   LET l_imaa005 = ''
   CALL adbt450_get_imaa005(g_dbdb_d[l_ac].dbdb005) RETURNING l_imaa005
      
   IF NOT cl_null(l_imaa005) THEN
      SELECT imaf055,imaf056 INTO l_imaf055,l_imaf056 FROM imaf_t WHERE imafent = g_enterprise AND imafsite = 'ALL' AND imaf001 = g_dbdb_d[l_ac].dbdb005
      IF l_imaf055 <> '0' AND l_imaf056 = 'N' THEN
         CALL cl_set_comp_required("dbdb006",TRUE)
      END IF
   END IF
END FUNCTION

PRIVATE FUNCTION adbt450_dbdb014_default()
   DEFINE l_success   LIKE type_t.num5
   
#   LET g_dbdb_d[l_ac].dbdb014 = g_dbdb_d[l_ac].dbdb009
#   CALL s_desc_get_unit_desc(g_dbdb_d[l_ac].dbdb014) RETURNING g_dbdb_d[l_ac].dbdb014_desc
#   DISPLAY BY NAME g_dbdb_d[l_ac].dbdb014_desc
      
   IF NOT cl_null(g_dbdb_d[l_ac].dbdb015) AND NOT cl_null(g_dbdb_d[l_ac].dbdb014) AND NOT cl_null(g_dbdb_d[l_ac].dbdb009) THEN  
      CALL s_aooi250_convert_qty(g_dbdb_d[l_ac].dbdb005,g_dbdb_d[l_ac].dbdb014,g_dbdb_d[l_ac].dbdb009,g_dbdb_d[l_ac].dbdb015)
         RETURNING l_success,g_dbdb_d[l_ac].dbdb008
   END IF
END FUNCTION

 
{</section>}
 
