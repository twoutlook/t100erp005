#該程式未解開Section, 採用最新樣板產出!
{<section id="adbp540.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0007(2017-01-17 18:18:04), PR版次:0007(2017-01-19 18:28:07)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000231
#+ Filename...: adbp540
#+ Description: 訂單轉出貨單批次處理作業
#+ Creator....: 02748(2014-05-28 09:03:58)
#+ Modifier...: 02749 -SD/PR- 02749
 
{</section>}
 
{<section id="adbp540.global" >}
#應用 p02 樣板自動產生(Version:22)
#add-point:填寫註解說明 name="global.memo"
#Memos
#160809-00015#1  2016/08/29 by lori     訂單單號開窗依aooi500過濾組織, r.q 移除 ooed_t 相關設定
#160908-00023#1  2016/09/10 By 06137    订单单号栏位开窗应过滤掉已结案的订单单号
#170109-00037#4  2017/01/17 by lori     1.勾選訂單時檢查是否有其他人正在使用並報錯，報錯統一使用彙總模式
#                                       2.指標或筆數統計變數型態調整為num10
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc" 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#模組變數(Module Variables)
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10              
DEFINE l_ac_d               LIKE type_t.num10             #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num10             #目前所在頁數
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num10
 
TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable) name="global.parameter"
   
   #end add-point
        wc               STRING
                     END RECORD
 
TYPE type_g_detail_d RECORD
#add-point:自定義模組變數(Module Variable)  #注意要在add-point內寫入END RECORD name="global.variable"
            sel               LIKE type_t.chr1,
            xmda202           LIKE xmda_t.xmda202,
            xmda202_desc      LIKE ooefl_t.ooefl003,
            xmdadocno         LIKE xmda_t.xmdadocno,
            xmda005           LIKE xmda_t.xmda005,
            xmda004           LIKE xmda_t.xmda004,
            xmda004_desc      LIKE pmaal_t.pmaal004,
            xmda021           LIKE xmda_t.xmda021,
            xmda021_desc      LIKE pmaal_t.pmaal004,
            xmdd211           LIKE xmdd_t.xmdd211,
            xmdd211_desc      LIKE pmaal_t.pmaal004,
            xmddunit          LIKE xmdd_t.xmddunit,
            xmddunit_desc     LIKE ooefl_t.ooefl003,
            xmdd229           LIKE xmdd_t.xmdd229,
            xmddseq           LIKE xmdd_t.xmddseq,
            xmddseq1          LIKE xmdd_t.xmddseq1,
            xmddseq2          LIKE xmdd_t.xmddseq2,
            xmja002           LIKE xmja_t.xmja002,
            xmdd001           LIKE xmdd_t.xmdd001,
            xmdd001_desc      LIKE imaal_t.imaal003,
            xmdd001_desc_desc LIKE imaal_t.imaal004,
            xmdd002           LIKE xmdd_t.xmdd002,
            xmdd201           LIKE xmdd_t.xmdd201,
            xmdd201_desc      LIKE oocal_t.oocal003,
            xmdd202           LIKE xmdd_t.xmdd202,
            xmdd004           LIKE xmdd_t.xmdd004,
            xmdd004_desc      LIKE oocal_t.oocal003,
            xmdd006           LIKE xmdd_t.xmdd006,
            xmdd024           LIKE xmdd_t.xmdd024,
            xmdd024_desc      LIKE oocal_t.oocal003,
            xmdd025           LIKE xmdd_t.xmdd025,
            xmdd011           LIKE xmdd_t.xmdd011,
            xmdd207           LIKE xmdd_t.xmdd207,
            xmdd207_desc      LIKE pmaal_t.pmaal004,
            xmdd208           LIKE xmdd_t.xmdd208,
            xmdd208_desc      LIKE oofb_t.oofb011,
            xmdd209           LIKE xmdd_t.xmdd209,
            xmdd209_desc      LIKE dbadl_t.dbadl003,
            xmdd031           LIKE xmdd_t.xmdd031,
            xmdd014           LIKE xmdd_t.xmdd014,
            xmdd015           LIKE xmdd_t.xmdd015,
            xmdd016           LIKE xmdd_t.xmdd016,
            xmdd017           LIKE xmdd_t.xmdd017,
            xmdd220           LIKE xmdd_t.xmdd220,
            xmdd220_desc      LIKE dbbcl_t.dbbcl003,
            xmdd221           LIKE xmdd_t.xmdd221,
            xmdasite          LIKE xmda_t.xmdasite
                     END RECORD
DEFINE g_xmda005            LIKE xmda_t.xmda005
DEFINE g_xmddunit           LIKE xmdd_t.xmddunit
DEFINE g_construct_display  RECORD 
            xmda004           LIKE xmda_t.xmda004,
            xmdd211           LIKE xmdd_t.xmdd211,
            xmda201           LIKE xmda_t.xmda201,
            xmda005           LIKE xmda_t.xmda005,
            xmdadocno         LIKE xmda_t.xmdadocno,
            xmddsite          LIKE xmdd_t.xmddsite,
            xmda023           LIKE xmda_t.xmda023,
            xmdd011           LIKE xmdd_t.xmdd011,
            xmdd208           LIKE xmdd_t.xmdd208,
            xmdd209           LIKE xmdd_t.xmdd209
                     END RECORD
DEFINE g_detail_d_t  type_g_detail_d
DEFINE g_detail_d_o  type_g_detail_d
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
DEFINE g_detail_cnt         LIKE type_t.num10              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
 
#add-point:傳入參數說明 name="global.argv"

#end add-point
 
{</section>}
 
{<section id="adbp540.main" >}
#+ 作業開始 
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   DEFINE ls_js  STRING
   #add-point:main段define name="main.define"
   DEFINE l_success    LIKE type_t.num5
   #end add-point   
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義 name="main.before_ap_init"
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("adb","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js name="main.background"
 
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_adbp540 WITH FORM cl_ap_formpath("adb",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL adbp540_init()   
 
      #進入選單 Menu (="N")
      CALL adbp540_ui_dialog() 
 
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_adbp540
   END IF 
   
   #add-point:作業離開前 name="main.exit"
   CALL s_aooi500_drop_temp() RETURNING l_success #150308-00001#1  By Ken 150309   
   CALL s_adbp540_drop_temp_table() RETURNING l_success
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="adbp540.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION adbp540_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point   
   #add-point:init段define name="init.define"
   DEFINE l_success     LIKE type_t.num5
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
 
   #add-point:畫面資料初始化 name="init.init"
   CALL s_aooi500_create_temp() RETURNING l_success #150308-00001#1  By Ken 150309   
   CALL cl_set_combo_scc_part('xmda005','2063','1,2,3,6')
   CALL cl_set_combo_scc_part('b_xmda005','2063','1,2,3,6')
   CALL cl_set_combo_scc('xmdd229','6064')
   CALL cl_set_combo_scc('b_xmdd017','2058')
   CALL s_adbp540_create_temp_table() RETURNING l_success
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="adbp540.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION adbp540_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point 
   DEFINE li_idx   LIKE type_t.num10
   #add-point:ui_dialog段define name="init.init"
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_xmdd025   LIKE xmdd_t.xmdd025
  #DEFINE l_cnt       LIKE type_t.num5      #170105-00015#4 170117 by lori mark
   DEFINE l_cnt       LIKE type_t.num10     #170105-00015#4 170117 by lori add
   DEFINE l_qty       LIKE xmdd_t.xmdd202   
   DEFINE l_str       STRING                
   DEFINE l_msg       STRING                #160225-00040#18 2016/04/13 s983961--add
   DEFINE l_where     STRING                #160809-00015#1 160829 by lori add
   #end add-point 
   
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   LET g_detail_cnt = g_detail_d.getLength()
   #add-point:ui_dialog段before dialog name="ui_dialog.before_dialog"
   INITIALIZE g_construct_display.* TO NULL
   LET g_construct_display.xmdd011 = ''
   LET g_construct_display.xmda005 = '1'
   
   #170109-00037#4 170117 by lori add---(S)
   LET g_sql = "SELECT xmdddocno,xmddseq,xmddseq1,xmddseq2 ",
               "  FROM xmdd_t ",
               " WHERE xmddent = ",g_enterprise,
               "   AND xmdddocno = ? AND xmddseq = ? AND xmddseq1 = ? AND xmddseq2 = ? ",
               "   FOR UPDATE SKIP LOCKED "
   PREPARE adbp540_chk_lock_xmdd FROM g_sql
   #170109-00037#4 170117 by lori add---(E)
   #end add-point
   
   WHILE TRUE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_detail_d.clear()
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL adbp540_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct name="ui_dialog.more_construct"
         CONSTRUCT BY NAME g_wc  ON xmda004,xmda201,xmdadocno,xmda023 
            BEFORE CONSTRUCT
               #CALL cl_set_act_visible("batch_execute", TRUE)
               #CALL cl_set_act_visible("sel,unsel,selall,selnone", FALSE)
               LET g_xmddunit = g_site
               DISPLAY g_xmddunit TO xmddunit
               
            AFTER CONSTRUCT
               LET g_construct_display.xmda004 = GET_FLDBUF(xmda004)
               LET g_construct_display.xmda201 = GET_FLDBUF(xmda201)
               LET g_construct_display.xmdadocno = GET_FLDBUF(xmdadocno)
               LET g_construct_display.xmda023 = GET_FLDBUF(xmda023)

                
            ON ACTION controlp INFIELD xmda004
               #開窗c段
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
			      LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = 'ALL'			      
               CALL q_pmaa001_6()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO xmda004        #顯示到畫面上
               NEXT FIELD xmda004                           #返回原欄位
            
            ON ACTION controlp INFIELD xmda201
               #開窗c段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_pmaa001_10()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO xmda201        #顯示到畫面上
               NEXT FIELD xmda201                           #返回原欄位
    
            ON ACTION controlp INFIELD xmdadocno
               #開窗c段
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
			      LET g_qryparam.reqry = FALSE
			     #LET g_qryparam.arg1 = g_site   #160809-00015#1 160829 by lori mark
			      #160809-00015#1 160829 by lori add---(S)
			      LET l_where = ""
               LET l_where = s_aooi500_q_where('adbt500','xmdaunit',g_site,'c')
               LET l_where = cl_str_replace(l_where,"ooef001","xmdaunit")
               #LET g_qryparam.where = l_where              #160908-00023#1 Mark BY ken 160910
               #160809-00015#1 160829 by lori add---(E)
               LET g_qryparam.where = l_where , " AND xmdastus !='C' "   #160908-00023#1 Add By Ken 160910      
               CALL q_xmdadocno_5()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO xmdadocno      #顯示到畫面上
               NEXT FIELD xmdadocno                         #返回原欄位

            ON ACTION controlp INFIELD xmda023
               #開窗c段
		         INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
		         LET g_qryparam.reqry = FALSE
		         LET g_qryparam.arg1 = "1"
               CALL q_oojd001_1()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO xmda023        #顯示到畫面上
               NEXT FIELD xmda023                           #返回原欄位

         END CONSTRUCT

         CONSTRUCT BY NAME g_wc2 ON xmdd211,xmddsite,xmdd011,xmdd208,xmdd209
             BEFORE CONSTRUCT
                #CALL cl_set_act_visible("batch_execute", TRUE)
                #CALL cl_set_act_visible("sel,unsel,selall,selnone", FALSE)
                LET g_xmddunit = g_site
                DISPLAY g_xmddunit TO xmddunit
                
            AFTER CONSTRUCT
               LET g_construct_display.xmdd211 = GET_FLDBUF(xmdd211)
               LET g_construct_display.xmddsite = GET_FLDBUF(xmddsite)
               LET g_construct_display.xmdd011 = GET_FLDBUF(xmdd011)
               LET g_construct_display.xmdd208 = GET_FLDBUF(xmdd208)
               LET g_construct_display.xmdd209 = GET_FLDBUF(xmdd209)
             
             ON ACTION controlp INFIELD xmdd211
                #開窗c段
			       INITIALIZE g_qryparam.* TO NULL
                LET g_qryparam.state = 'c'
			       LET g_qryparam.reqry = FALSE
                CALL q_pmac002_4()                       #呼叫開窗
                DISPLAY g_qryparam.return1 TO xmdd211    #顯示到畫面上
                NEXT FIELD xmdd211                       #返回原欄位
        
             ON ACTION controlp INFIELD xmddsite
                #開窗c段
                INITIALIZE g_qryparam.* TO NULL
                LET g_qryparam.state = 'c'
                LET g_qryparam.reqry = FALSE
                LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmddsite',g_site,'c') #150308-00001#1  By Ken add 'c' 150309
                CALL q_ooef001_24() 
                DISPLAY g_qryparam.return1 TO xmddsite       #顯示到畫面上
                NEXT FIELD xmddsite                          #返回原欄位
    
             ON ACTION controlp INFIELD xmdd208
                #開窗c段
			       INITIALIZE g_qryparam.* TO NULL
                LET g_qryparam.state = 'c'
			       LET g_qryparam.reqry = FALSE
                CALL q_oofb019_2()                           #呼叫開窗
                DISPLAY g_qryparam.return1 TO xmdd208        #顯示到畫面上
                NEXT FIELD xmdd208                           #返回原欄位

             ON ACTION controlp INFIELD xmdd209
                #開窗c段
                INITIALIZE g_qryparam.* TO NULL
                LET g_qryparam.state = 'c'
                LET g_qryparam.reqry = FALSE
                CALL q_dbad001()                           #呼叫開窗
                DISPLAY g_qryparam.return1 TO xmdd209      #顯示到畫面上
                NEXT FIELD xmdd209                         #返回原欄位
    

         END CONSTRUCT  
         #end add-point
         #add-point:ui_dialog段input name="ui_dialog.more_input"
         INPUT g_xmda005,g_xmddunit FROM xmda005,xmddunit
            BEFORE INPUT
               #CALL cl_set_act_visible("batch_execute", TRUE)
               #CALL cl_set_act_visible("sel,unsel,selall,selnone", FALSE)
               LET g_xmddunit = g_site
               DISPLAY g_xmddunit TO xmddunit
               
            AFTER INPUT 
               LET g_construct_display.xmda005 = GET_FLDBUF(xmda005)
               
         END INPUT
         
         INPUT ARRAY g_detail_d FROM s_detail1.*
             ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                     INSERT ROW = FALSE,DELETE ROW = FALSE, APPEND ROW = FALSE)
            BEFORE INPUT 
               #CALL cl_set_act_visible("batch_execute", FALSE)
               #CALL cl_set_act_visible("sel,unsel,selall,selnone", TRUE)
            
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
              
               LET g_detail_d_t.* = g_detail_d[l_ac].*
               LET g_detail_d_o.* = g_detail_d[l_ac].*
               
               DISPLAY l_ac TO FORMONLY.h_index
               CALL adbp540_set_entry_b()
               CALL adbp540_set_no_entry_b()
               
            AFTER FIELD b_xmdd202   
               IF NOT cl_null(g_detail_d[l_ac].xmdd202) THEN
                  CALL s_aooi250_take_decimals(g_detail_d[l_ac].xmdd201,g_detail_d[l_ac].xmdd202) RETURNING l_success,g_detail_d[l_ac].xmdd202
                  IF NOT cl_ap_chk_Range(g_detail_d[l_ac].xmdd202,"0.000","1","","","azz-00079",1) THEN
                     LET g_detail_d[l_ac].xmdd202 = g_detail_d_o.xmdd202
                     NEXT FIELD b_xmdd202
                  END IF
                  IF NOT adbp540_xmdd202_chk() THEN
                     LET g_detail_d[l_ac].xmdd202 = g_detail_d_o.xmdd202
                     NEXT FIELD b_xmdd202
                  END IF

                  IF NOT cl_null(g_detail_d[l_ac].xmdd004) THEN
                     CALL s_aooi250_convert_qty(g_detail_d[l_ac].xmdd001,g_detail_d[l_ac].xmdd201,g_detail_d[l_ac].xmdd004,g_detail_d[l_ac].xmdd202) RETURNING l_success,g_detail_d[l_ac].xmdd006
                  END IF
                  IF NOT cl_null(g_detail_d[l_ac].xmdd024) THEN
                     CALL s_aooi250_convert_qty(g_detail_d[l_ac].xmdd001,g_detail_d[l_ac].xmdd201,g_detail_d[l_ac].xmdd024,g_detail_d[l_ac].xmdd202) RETURNING l_success,g_detail_d[l_ac].xmdd025
                  END IF
               END IF
               LET g_detail_d_o.xmdd202 = g_detail_d[l_ac].xmdd202
               LET g_detail_d_o.xmdd006 = g_detail_d[l_ac].xmdd006
               LET g_detail_d_o.xmdd025 = g_detail_d[l_ac].xmdd025
               
            AFTER FIELD b_xmdd006
               IF NOT cl_null(g_detail_d[l_ac].xmdd006) THEN
                  IF g_detail_d[l_ac].xmdd006 <> g_detail_d_o.xmdd006 OR cl_null(g_detail_d_o.xmdd006) THEN
                     CALL s_aooi250_take_decimals(g_detail_d[l_ac].xmdd004,g_detail_d[l_ac].xmdd006) RETURNING l_success,g_detail_d[l_ac].xmdd006
                     IF NOT cl_ap_chk_Range(g_detail_d[l_ac].xmdd006,"0.000","0","","","azz-00079",1) THEN
                        LET g_detail_d[l_ac].xmdd006 = g_detail_d_o.xmdd006
                        NEXT FIELD b_xmdd006
                     END IF                     
                     IF NOT adbp540_xmdd006_chk(g_detail_d[l_ac].xmdd006) THEN
                        LET g_detail_d[l_ac].xmdd006 = g_detail_d_o.xmdd006
                        NEXT FIELD b_xmdd006
                     END IF
                     IF NOT cl_null(g_detail_d[l_ac].xmdd201) THEN
                        CALL s_aooi250_convert_qty(g_detail_d[l_ac].xmdd001,g_detail_d[l_ac].xmdd004,g_detail_d[l_ac].xmdd201,g_detail_d[l_ac].xmdd006) RETURNING l_success,g_detail_d[l_ac].xmdd202
                     END IF
                     IF NOT cl_null(g_detail_d[l_ac].xmdd024) THEN
                        CALL s_aooi250_convert_qty(g_detail_d[l_ac].xmdd001,g_detail_d[l_ac].xmdd004,g_detail_d[l_ac].xmdd024,g_detail_d[l_ac].xmdd006) RETURNING l_success,g_detail_d[l_ac].xmdd025
                     END IF
                  END IF
               ELSE
                  LET g_detail_d[l_ac].xmdd202 = ''
                  LET g_detail_d[l_ac].xmdd025 = ''
               END IF               
               LET g_detail_d_o.xmdd006 = g_detail_d[l_ac].xmdd006
               LET g_detail_d_o.xmdd202 = g_detail_d[l_ac].xmdd202
               LET g_detail_d_o.xmdd025 = g_detail_d[l_ac].xmdd025
               CALL adbp540_set_entry_b()    
               CALL adbp540_set_no_entry_b()   
            
            AFTER FIELD b_xmdd025 
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               IF NOT cl_null(g_detail_d[l_ac].xmdd025) THEN
                  IF NOT cl_null(g_detail_d[l_ac].xmdd024) THEN
                     CALL s_aooi250_take_decimals(g_detail_d[l_ac].xmdd024,g_detail_d[l_ac].xmdd025) RETURNING l_success,g_detail_d[l_ac].xmdd025
                     IF NOT cl_ap_chk_Range(g_detail_d[l_ac].xmdd025,"0.000","1","","","azz-00079",1) THEN
                        LET g_detail_d[l_ac].xmdd025 =  g_detail_d_o.xmdd025
                        NEXT FIELD b_xmdd025 
                     END IF
                  END IF
               END IF
            
            ON CHANGE sel
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               CALL cl_err_collect_init()   #170109-00037#4 170117 by lori add
               CALL adbp540_upd_temp1()
               CALL cl_err_collect_show()   #170109-00037#4 170117 by lori add
               CALL adbp540_set_entry_b()
               CALL adbp540_set_no_entry_b()
            
            
            ON ROW CHANGE
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               CALL cl_err_collect_init()   #170109-00037#4 170117 by lori add
               CALL adbp540_upd_temp1()
               CALL cl_err_collect_show()   #170109-00037#4 170117 by lori add
            
#            AFTER INPUT
#            
#            ON ACTION accept
#               ACCEPT DIALOG
            
         END INPUT 
         #end add-point
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
 
         BEFORE DIALOG
            IF g_detail_d.getLength() > 0 THEN
               CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
            ELSE
               CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            END IF
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
            CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            CALL cl_set_act_visible("filter", FALSE)
            
            DISPLAY g_construct_display.xmda004 TO xmda004
            DISPLAY g_construct_display.xmdd211 TO xmdd211
            DISPLAY g_construct_display.xmda201 TO xmda201
            DISPLAY g_construct_display.xmdadocno TO xmdadocno
            DISPLAY g_construct_display.xmda023 TO xmda023
            DISPLAY g_construct_display.xmdd011 TO xmdd011
            DISPLAY g_construct_display.xmdd208 TO xmdd208
            DISPLAY g_construct_display.xmdd209 TO xmdd209
            
            LET g_xmda005 = g_construct_display.xmda005
            IF cl_null(g_xmda005) THEN
               LET g_xmda005 = '1'
               #DISPLAY g_xmda005 TO xmda005
            END IF
            LET g_xmddunit = g_site
            #end add-point
 
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            #add-point:ui_dialog段on action selall name="ui_dialog.selall.befroe"
            CALL cl_err_collect_init()   #170109-00037#4 170117 by lori add
            #end add-point            
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "Y"
               #add-point:ui_dialog段on action selall name="ui_dialog.for.onaction_selall"
               LET l_ac = li_idx
               CALL adbp540_upd_temp1()
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selall name="ui_dialog.onaction_selall"
            CALL cl_err_collect_show()   #170109-00037#4 170117 by lori add
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "N"
               #add-point:ui_dialog段on action selnone name="ui_dialog.for.onaction_selnone"
               LET l_ac = li_idx
               CALL adbp540_upd_temp1()
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selnone name="ui_dialog.onaction_selnone"
 
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "Y"
               END IF
            END FOR
            #add-point:ui_dialog段on action sel name="ui_dialog.onaction_sel"
            CALL cl_err_collect_init()   #170109-00037#4 170117 by lori add
            LET l_ac = DIALOG.getCurrentRow("s_detail1")
            IF l_ac > 0 THEN
               CALL adbp540_upd_temp1()
            END IF
            #DISPLAY BY NAME g_detail_d[l_ac].sel
            CALL cl_err_collect_show()   #170109-00037#4 170117 by lori add
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR
            #add-point:ui_dialog段on action unsel name="ui_dialog.onaction_unsel"
            LET l_ac = DIALOG.getCurrentRow("s_detail1")
            IF l_ac > 0 THEN
               CALL adbp540_upd_temp1()
            END IF
            #DISPLAY BY NAME g_detail_d[l_ac].sel
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL adbp540_filter()
            #add-point:ON ACTION filter name="menu.filter"
            
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION accept
            #add-point:ui_dialog段accept之前 name="menu.filter"
            
            #end add-point
            CALL adbp540_query()
             
         # 條件清除
         ON ACTION qbeclear
            #add-point:ui_dialog段 name="ui_dialog.qbeclear"
            
            #end add-point
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            #add-point:ui_dialog段datarefresh name="ui_dialog.datarefresh"
            
            #end add-point
            CALL adbp540_b_fill()
 
         #add-point:ui_dialog段action name="ui_dialog.more_action"
         ON ACTION batch_execute
            #160225-00040#18 2016/04/13 s983961--add(s)
            IF g_bgjob <> "Y" THEN
               CALL cl_progress_bar_no_window(4)
            END IF   
            #160225-00040#18 2016/04/13 s983961--add(e)
            IF l_ac > 0 THEN
               #By benson ----S---- 
               #因為資料改成出貨數量xmdd006為主,如果不加這段會在某些操作情境下產生錯誤的資料
               IF NOT cl_null(g_detail_d[l_ac].xmdd006) THEN
                  IF g_detail_d[l_ac].xmdd006 <> g_detail_d_o.xmdd006 OR cl_null(g_detail_d_o.xmdd006) THEN
                     CALL s_aooi250_take_decimals(g_detail_d[l_ac].xmdd004,g_detail_d[l_ac].xmdd006) RETURNING l_success,g_detail_d[l_ac].xmdd006
                     IF NOT cl_ap_chk_Range(g_detail_d[l_ac].xmdd006,"0.000","0","","","azz-00079",1) THEN
                        LET g_detail_d[l_ac].xmdd006 = g_detail_d_o.xmdd006
                        CONTINUE DIALOG
                     END IF                     
                     IF NOT adbp540_xmdd006_chk(g_detail_d[l_ac].xmdd006) THEN
                        LET g_detail_d[l_ac].xmdd006 = g_detail_d_o.xmdd006
                        CONTINUE DIALOG
                     END IF
                     IF NOT cl_null(g_detail_d[l_ac].xmdd201) THEN
                        CALL s_aooi250_convert_qty(g_detail_d[l_ac].xmdd001,g_detail_d[l_ac].xmdd004,g_detail_d[l_ac].xmdd201,g_detail_d[l_ac].xmdd006) RETURNING l_success,g_detail_d[l_ac].xmdd202
                     END IF
                     IF NOT cl_null(g_detail_d[l_ac].xmdd024) THEN
                        CALL s_aooi250_convert_qty(g_detail_d[l_ac].xmdd001,g_detail_d[l_ac].xmdd004,g_detail_d[l_ac].xmdd024,g_detail_d[l_ac].xmdd006) RETURNING l_success,g_detail_d[l_ac].xmdd025
                     END IF
                  END IF
               ELSE
                  LET g_detail_d[l_ac].xmdd202 = ''
                  LET g_detail_d[l_ac].xmdd025 = ''
               END IF  
               #By benson ----E---- 
               
               CALL cl_err_collect_init()      #170105-00015#4 170117 by lori add
               CALL adbp540_upd_temp1()
               CALL cl_err_collect_show()      #170105-00015#4 170117 by lori add               
               IF NOT adbp540_chk_data() THEN
                  CONTINUE DIALOG
               END IF
            END IF
            
            SELECT COUNT(*)
              INTO l_cnt
              FROM s_adbp540_temp1
             WHERE sel = 'Y'
            IF l_cnt > 0 THEN 
               #160225-00040#18 2016/04/13 s983961--add(s)
               LET l_msg = cl_getmsg('ade-00114',g_lang)   
               CALL cl_progress_no_window_ing(l_msg)
               #160225-00040#18 2016/04/13 s983961--add(e)
               
               CALL s_transaction_begin()
               CALL s_adbp540('1','') RETURNING l_success,l_str
               IF l_success THEN
                  CALL s_transaction_end('Y','1')
                  CALL s_adbp540_open_adbt540(l_str)
               ELSE
                  CALL s_transaction_end('N','1')
               END IF 
               DELETE FROM s_adbp540_temp2
               CALL adbp540_b_fill()
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'adb-00078'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CONTINUE DIALOG
            END IF
            
            #160225-00040#18 2016/04/13 s983961--add(s)
            LET l_msg = cl_getmsg('std-00012',g_lang)
            CALL cl_progress_no_window_ing(l_msg)  
           #CALL cl_err_collect_show()      #170105-00015#4 170117 by lori mark:誤寫,多餘的處理
            #160225-00040#18 2016/04/13 s983961--add(e)       
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:22) ---start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:22) --- end ---
 
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #(ver:22) ---start---
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         #(ver:22) --- end ---
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
 
{</section>}
 
{<section id="adbp540.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION adbp540_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point 
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define name="query.define"
   
   #end add-point 
    
   #add-point:cs段after_construct name="query.after_construct"
   IF l_ac > 0 THEN
      CALL cl_err_collect_init()   #170109-00037#4 170117 by lori add
      CALL adbp540_upd_temp1()      
      CALL cl_err_collect_show()   #170109-00037#4 170117 by lori add
   END IF
   
   DELETE FROM s_adbp540_temp2
   INSERT INTO s_adbp540_temp2
        SELECT xmddent,xmdddocno,xmddseq,xmddseq1,xmddseq2,xmdd202,xmdd006,xmdd025
          FROM s_adbp540_temp1
         WHERE sel = 'Y'
   #end add-point
        
   LET g_error_show = 1
   CALL adbp540_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END IF
   
   #add-point:cs段after_query name="query.cs_after_query"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="adbp540.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION adbp540_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point
   DEFINE ls_wc           STRING
   #add-point:b_fill段define name="b_fill.define"
   DEFINE l_xmdd202       LIKE xmdd_t.xmdd202
   DEFINE l_xmdd006       LIKE xmdd_t.xmdd006
   DEFINE l_xmdd025       LIKE xmdd_t.xmdd025
   DEFINE l_success       LIKE type_t.num5      
   DEFINE l_slip          LIKE xmda_t.xmdadocno
   DEFINE l_ooac004       LIKE ooac_t.ooac004
   DEFINE l_qty           LIKE xmdd_t.xmdd202
   DEFINE l_where         STRING
   DEFINE l_xmdh016       LIKE xmdh_t.xmdh016
   #end add-point
 
   LET g_wc = g_wc, cl_sql_auth_filter()   #(ver:21) add cl_sql_auth_filter()
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   DELETE FROM s_adbp540_temp1
   LET l_where = s_aooi500_sql_where(g_prog,'xmdasite')
   LET g_sql = "SELECT      'N', xmda202,     '',xmdadocno, xmda005,",
               "        xmda004,      '',xmda021,       '', xmdd211,", 
               "             '',xmddunit,     '',  xmdd229, xmddseq,",
               "       xmddseq1,xmddseq2,xmja002,  xmdd001,      '',",
               "             '', xmdd002,xmdd201,       '', xmdd202,",
               "        xmdd004,      '',xmdd006,",
               "        xmdd024,      '',xmdd025,  xmdd011, xmdd207,",
               "             '', xmdd208,     '',  xmdd209,      '',",
               "        xmdd031, xmdd014,xmdd015,  xmdd016, xmdd017,",
               "        xmdd220,      '',xmdd221,  xmdasite ",
               "  FROM xmda_t,xmdd_t,xmja_t ",
               " WHERE xmdaent = xmddent AND xmdadocno = xmdddocno ",
               "   AND xmddent = xmjaent AND xmdddocno = xmjadocno AND xmddseq = xmjaseq ",
               "   AND xmddent = ? ",
               "   AND ",g_wc CLIPPED,
               "   AND ",g_wc2 CLIPPED ,
               "   AND xmda005 = '",g_xmda005,"'",
               "   AND xmddunit = '",g_xmddunit,"'",
               "   AND xmdastus = 'Y' ",
               "   AND xmdd004 IS NOT NULL",   #當出貨單位 或 包裝單位 其中一個為空值時,則不顯示於畫面上
               "   AND xmdd201 IS NOT NULL"
   
   LET g_sql = g_sql CLIPPED," AND ",l_where
   #end add-point
 
   PREPARE adbp540_sel FROM g_sql
   DECLARE b_fill_curs CURSOR FOR adbp540_sel
   
   CALL g_detail_d.clear()
   #add-point:b_fill段其他頁簽清空 name="b_fill.clear"
   
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs USING g_enterprise INTO 
   #add-point:b_fill段foreach_into name="b_fill.foreach_into"
   g_detail_d[l_ac].sel,          g_detail_d[l_ac].xmda202,      g_detail_d[l_ac].xmda202_desc, g_detail_d[l_ac].xmdadocno,
   g_detail_d[l_ac].xmda005,      g_detail_d[l_ac].xmda004,      g_detail_d[l_ac].xmda004_desc, g_detail_d[l_ac].xmda021,
   g_detail_d[l_ac].xmda021_desc, g_detail_d[l_ac].xmdd211,      g_detail_d[l_ac].xmdd211_desc, g_detail_d[l_ac].xmddunit,
   g_detail_d[l_ac].xmddunit_desc,
   g_detail_d[l_ac].xmdd229,      g_detail_d[l_ac].xmddseq,      g_detail_d[l_ac].xmddseq1,     g_detail_d[l_ac].xmddseq2,
   g_detail_d[l_ac].xmja002,      g_detail_d[l_ac].xmdd001,      g_detail_d[l_ac].xmdd001_desc, g_detail_d[l_ac].xmdd001_desc_desc, 
   g_detail_d[l_ac].xmdd002,      g_detail_d[l_ac].xmdd201,      g_detail_d[l_ac].xmdd201_desc, g_detail_d[l_ac].xmdd202, 
   g_detail_d[l_ac].xmdd004,      g_detail_d[l_ac].xmdd004_desc, g_detail_d[l_ac].xmdd006,
   g_detail_d[l_ac].xmdd024,      g_detail_d[l_ac].xmdd024_desc, g_detail_d[l_ac].xmdd025,      g_detail_d[l_ac].xmdd011,
   g_detail_d[l_ac].xmdd207,      g_detail_d[l_ac].xmdd207_desc, g_detail_d[l_ac].xmdd208,      g_detail_d[l_ac].xmdd208_desc,
   g_detail_d[l_ac].xmdd209,      g_detail_d[l_ac].xmdd209_desc, g_detail_d[l_ac].xmdd031,      g_detail_d[l_ac].xmdd014,
   g_detail_d[l_ac].xmdd015,      g_detail_d[l_ac].xmdd016,      g_detail_d[l_ac].xmdd017,      g_detail_d[l_ac].xmdd220, 
   g_detail_d[l_ac].xmdd220_desc, g_detail_d[l_ac].xmdd221,      
   g_detail_d[l_ac].xmdasite
   #end add-point
   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充 name="b_fill.foreach_iside"
      #需過濾訂單單別參數中，"訂單需走出通單"D-BAS-0077 為'N' 的訂單
      CALL s_aooi200_get_slip(g_detail_d[l_ac].xmdadocno) RETURNING l_success,l_slip
      IF l_success THEN
         CALL cl_get_doc_para(g_enterprise,g_detail_d[l_ac].xmdasite,l_slip,'D-BAS-0077') RETURNING l_ooac004
         
         IF l_ooac004 = 'Y' THEN
            CONTINUE FOREACH
         END IF
      ELSE
         CONTINUE FOREACH
      END IF
      
      #可出貨數
      CALL s_adbt540_get_max_ship_qty('2','',g_detail_d[l_ac].xmdadocno,g_detail_d[l_ac].xmddseq,g_detail_d[l_ac].xmddseq1,g_detail_d[l_ac].xmddseq2) RETURNING l_xmdh016   
      IF l_xmdh016 > 0 THEN
         LET g_detail_d[l_ac].xmdd006 = l_xmdh016
         CALL s_aooi250_convert_qty(g_detail_d[l_ac].xmdd001,g_detail_d[l_ac].xmdd004,g_detail_d[l_ac].xmdd201,l_xmdh016)
           RETURNING l_success,l_xmdh016
         IF l_success THEN
            LET g_detail_d[l_ac].xmdd202 = l_xmdh016
         END IF          
      ELSE
         CONTINUE FOREACH
      END IF
               
      IF NOT cl_null(g_detail_d[l_ac].xmdd024) THEN
         CALL s_aooi250_convert_qty(g_detail_d[l_ac].xmdd001,g_detail_d[l_ac].xmdd201,g_detail_d[l_ac].xmdd024,g_detail_d[l_ac].xmdd202)
             RETURNING l_success,l_xmdd025
         IF l_success THEN
            LET g_detail_d[l_ac].xmdd025 = l_xmdd025   #分批計價數量     
         END IF 
         IF NOT cl_null(g_detail_d[l_ac].xmdd025) THEN
            CALL s_aooi250_take_decimals(g_detail_d[l_ac].xmdd024,g_detail_d[l_ac].xmdd025) RETURNING l_success,g_detail_d[l_ac].xmdd025
         END IF
      END IF
      
      #此筆資料已勾選
      LET l_xmdd202 =''
      LET l_xmdd006 =''
      LET l_xmdd025 =''
      SELECT xmdd202,xmdd006,xmdd025
        INTO l_xmdd202,l_xmdd006,l_xmdd025
        FROM s_adbp540_temp2
       WHERE xmddent = g_enterprise
         AND xmdddocno = g_detail_d[l_ac].xmdadocno
         AND xmddseq = g_detail_d[l_ac].xmddseq
         AND xmddseq1 = g_detail_d[l_ac].xmddseq1
         AND xmddseq2 = g_detail_d[l_ac].xmddseq2
         
      IF NOT cl_null(l_xmdd202) THEN
         LET g_detail_d[l_ac].sel = 'Y'
         LET g_detail_d[l_ac].xmdd202 = l_xmdd202
         LET g_detail_d[l_ac].xmdd006 = l_xmdd006
         LET g_detail_d[l_ac].xmdd025 = l_xmdd025
      END IF
      INSERT INTO s_adbp540_temp1(sel,xmddent,xmdddocno,xmddseq,xmddseq1,xmddseq2,xmdd202,xmdd006,xmdd025)
      VALUES(g_detail_d[l_ac].sel,g_enterprise,g_detail_d[l_ac].xmdadocno,g_detail_d[l_ac].xmddseq,g_detail_d[l_ac].xmddseq1,
             g_detail_d[l_ac].xmddseq2,g_detail_d[l_ac].xmdd202,g_detail_d[l_ac].xmdd006,g_detail_d[l_ac].xmdd025)
      #end add-point
      
      CALL adbp540_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   #add-point:b_fill段資料填充(其他單身) name="b_fill.other_table"
   CALL g_detail_d.deleteElement(l_ac)
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE adbp540_sel
   
   LET l_ac = 1
   CALL adbp540_fetch()
   #add-point:b_fill段資料填充(其他單身) name="b_fill.after_b_fill"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="adbp540.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION adbp540_fetch()
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point
   DEFINE li_ac           LIKE type_t.num10
   #add-point:fetch段define name="fetch.define"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   #add-point:單身填充後 name="fetch.after_fill"
   
   #end add-point 
   
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="adbp540.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION adbp540_detail_show()
   #add-point:show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point
   #add-point:show段define name="detail_show.define"
   
   #end add-point
   
   #add-point:detail_show段 name="detail_show.detail_show"
   CALL adbp540_xmda202_ref()
   CALL adbp540_xmda004_ref()
   CALL adbp540_xmda021_ref()
   CALL adbp540_xmdd211_ref()
   CALL adbp540_xmddunit_ref()
   CALL adbp540_xmdd001_ref()
   CALL adbp540_xmdd201_ref()
   CALL adbp540_xmdd024_ref()
   CALL adbp540_xmdd207_ref()
   CALL adbp540_xmdd208_ref()
   CALL adbp540_xmdd209_ref()
   CALL adbp540_xmdd220_ref()
   CALL adbp540_xmdd004_ref()
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="adbp540.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION adbp540_filter()
   #add-point:filter段define(客製用) name="filter.define_customerization"
   
   #end add-point    
   #add-point:filter段define name="filter.define"
   
   #end add-point
   
   DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
      ON UPDATE
 
   END DISPLAY
 
   LET l_ac = 1
   LET g_detail_cnt = 1
   #add-point:filter段define name="filter.detail_cnt"
   
   #end add-point    
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
   
   CALL adbp540_b_fill()
   
END FUNCTION
 
{</section>}
 
{<section id="adbp540.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION adbp540_filter_parser(ps_field)
   #add-point:filter段define(客製用) name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="adbp540.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION adbp540_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = adbp540_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="adbp540.other_function" readonly="Y" >}
#add-point:自定義元件(Function) name="other.function"

PRIVATE FUNCTION adbp540_xmda202_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_detail_d[l_ac].xmda202
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_detail_d[l_ac].xmda202_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_detail_d[l_ac].xmda202_desc
END FUNCTION

PRIVATE FUNCTION adbp540_xmda004_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_detail_d[l_ac].xmda004
      CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_detail_d[l_ac].xmda004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_detail_d[l_ac].xmda004_desc
END FUNCTION

PRIVATE FUNCTION adbp540_xmda021_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_detail_d[l_ac].xmda021
      CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_detail_d[l_ac].xmda021_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_detail_d[l_ac].xmda021_desc
END FUNCTION

PRIVATE FUNCTION adbp540_xmdd211_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_detail_d[l_ac].xmdd211
      CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_detail_d[l_ac].xmdd211_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_detail_d[l_ac].xmdd211_desc
END FUNCTION

PRIVATE FUNCTION adbp540_xmddunit_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_detail_d[l_ac].xmddunit
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_detail_d[l_ac].xmddunit_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_detail_d[l_ac].xmddunit_desc
END FUNCTION

PRIVATE FUNCTION adbp540_xmdd001_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_detail_d[l_ac].xmdd001
      CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_detail_d[l_ac].xmdd001_desc = '', g_rtn_fields[1] , ''
      LET g_detail_d[l_ac].xmdd001_desc_desc = '', g_rtn_fields[2] , ''
      DISPLAY BY NAME g_detail_d[l_ac].xmdd001_desc
      DISPLAY BY NAME g_detail_d[l_ac].xmdd001_desc_desc
END FUNCTION

PRIVATE FUNCTION adbp540_xmdd201_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_detail_d[l_ac].xmdd201
      CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_detail_d[l_ac].xmdd201_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_detail_d[l_ac].xmdd201_desc
END FUNCTION

PRIVATE FUNCTION adbp540_xmdd024_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_detail_d[l_ac].xmdd024
      CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_detail_d[l_ac].xmdd024_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_detail_d[l_ac].xmdd024_desc
END FUNCTION

PRIVATE FUNCTION adbp540_xmdd207_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_detail_d[l_ac].xmdd207
      CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_detail_d[l_ac].xmdd207_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_detail_d[l_ac].xmdd207_desc
END FUNCTION

PRIVATE FUNCTION adbp540_xmdd208_ref()
   DEFINE l_pmaa027    LIKE pmaa_t.pmaa027

      SELECT pmaa027 INTO l_pmaa027
        FROM pmaa_t
       WHERE pmaaent = g_enterprise
         AND pmaa001 = g_detail_d[l_ac].xmdd211
         
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_detail_d[l_ac].xmdd208
      CALL ap_ref_array2(g_ref_fields,"SELECT oofb011 FROM oofb_t WHERE oofbent='"||g_enterprise||"' AND oofb019=? AND oofb008 = '3' AND oofb002='"||l_pmaa027||"'","") RETURNING g_rtn_fields
      LET g_detail_d[l_ac].xmdd208_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_detail_d[l_ac].xmdd208_desc
END FUNCTION

PRIVATE FUNCTION adbp540_xmdd209_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_detail_d[l_ac].xmdd209
      CALL ap_ref_array2(g_ref_fields,"SELECT dbadl003 FROM dbadl_t WHERE dbadlent='"||g_enterprise||"' AND dbadl001=? AND dbadl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_detail_d[l_ac].xmdd209_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_detail_d[l_ac].xmdd209_desc
END FUNCTION

PRIVATE FUNCTION adbp540_xmdd220_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] =  g_detail_d[l_ac].xmdd220
      CALL ap_ref_array2(g_ref_fields,"SELECT dbbcl003 FROM dbbcl_t WHERE dbbclent='"||g_enterprise||"' AND dbbcl001=? AND dbbcl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_detail_d[l_ac].xmdd220_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_detail_d[l_ac].xmdd220_desc
END FUNCTION

PRIVATE FUNCTION adbp540_upd_temp1()
   #170109-00037#4 170117 by lori add---(S)
   DEFINE l_xmdddocno    LIKE xmdd_t.xmdddocno
   DEFINE l_xmddseq      LIKE xmdd_t.xmddseq  
   DEFINE l_xmddseq1     LIKE xmdd_t.xmddseq1 
   DEFINE l_xmddseq2     LIKE xmdd_t.xmddseq2 
   #170109-00037#4 170117 by lori add---(E)
   
   #170109-00037#4 170117 by lori add---(S)
   #batch_execute時仍會檢查當前指標資料,因此不論檢查如何都應更新sel
   IF g_detail_d[l_ac].sel = 'Y' THEN
      CALL s_transaction_begin()
      
      LET l_xmdddocno = ''
      LET l_xmddseq   = ''
      LET l_xmddseq1  = ''
      LET l_xmddseq2  = ''
      
      EXECUTE adbp540_chk_lock_xmdd USING g_detail_d[l_ac].xmdadocno,g_detail_d[l_ac].xmddseq,g_detail_d[l_ac].xmddseq1,g_detail_d[l_ac].xmddseq2
                                     INTO l_xmdddocno,l_xmddseq,l_xmddseq1,l_xmddseq2
      IF cl_null(l_xmdddocno) OR cl_null(l_xmddseq) OR cl_null(l_xmddseq1) OR cl_null(l_xmddseq2) THEN
         LET g_detail_d[l_ac].sel = 'N'
         
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = 'adb-00452'
         LET g_errparam.replace[1] = g_detail_d[l_ac].xmdadocno
         LET g_errparam.replace[2] = g_detail_d[l_ac].xmddseq
         LET g_errparam.replace[3] = g_detail_d[l_ac].xmddseq1
         LET g_errparam.replace[4] = g_detail_d[l_ac].xmddseq2
         LET g_errparam.popup  = TRUE
         CALL cl_err() 
         
         CALL s_transaction_end('N',0)
      ELSE
         CALL s_transaction_end('Y',0)
      END IF
   END IF
   #170109-00037#4 170117 by lori add---(E)
   
   UPDATE s_adbp540_temp1
      SET sel = g_detail_d[l_ac].sel,
          xmdd202 = g_detail_d[l_ac].xmdd202,
          xmdd006 = g_detail_d[l_ac].xmdd006,
          xmdd025 = g_detail_d[l_ac].xmdd025
       WHERE xmddent = g_enterprise
         AND xmdddocno = g_detail_d[l_ac].xmdadocno
         AND xmddseq = g_detail_d[l_ac].xmddseq
         AND xmddseq1 = g_detail_d[l_ac].xmddseq1
         AND xmddseq2 = g_detail_d[l_ac].xmddseq2         
END FUNCTION

PRIVATE FUNCTION adbp540_set_entry_b()
   CALL cl_set_comp_entry("b_xmdd202,b_xmdd025,b_xmdd006",TRUE)
END FUNCTION

PRIVATE FUNCTION adbp540_set_no_entry_b()
   DEFINE l_xmdc022    LIKE xmdc_t.xmdc022
   
   IF l_ac > 0 THEN
      SELECT xmdc022 INTO l_xmdc022
        FROM xmdc_t
       WHERE xmdcent = g_enterprise
         AND xmdcdocno = g_detail_d[l_ac].xmdadocno
         AND xmdcseq = g_detail_d[l_ac].xmddseq
      IF l_xmdc022 = 'N' THEN
         CALL cl_set_comp_entry("b_xmdd202,b_xmdd025,b_xmdd006",FALSE)
      END IF
      
      IF g_detail_d[l_ac].sel = 'N' THEN
         CALL cl_set_comp_entry("b_xmdd202,b_xmdd025,b_xmdd006",FALSE)
      END IF
      
      IF NOT cl_null(g_detail_d[l_ac].xmdd006) THEN
         CALL cl_set_comp_entry("b_xmdd202",FALSE)
      END IF
      
      IF cl_null(g_detail_d[l_ac].xmdd024) THEN
         CALL cl_set_comp_entry("b_xmdd025",FALSE)
      END IF
   END IF
END FUNCTION

PRIVATE FUNCTION adbp540_xmdd202_qty()
   DEFINE l_xmdd006   LIKE xmdd_t.xmdd006
   DEFINE l_xmdl018   LIKE xmdl_t.xmdl018              
   DEFINE r_qty       LIKE xmdd_t.xmdd006
   DEFINE l_success   LIKE type_t.num5
   
   LET r_qty = 0
   
   CALL s_adbt540_get_max_ship_qty('2','',g_detail_d[l_ac].xmdadocno,g_detail_d[l_ac].xmddseq,g_detail_d[l_ac].xmddseq1,g_detail_d[l_ac].xmddseq2) RETURNING l_xmdd006
   #轉成出貨包裝單位
   IF NOT cl_null(g_detail_d[l_ac].xmdd004) THEN
      CALL s_aooi250_convert_qty(g_detail_d[l_ac].xmdd001,g_detail_d[l_ac].xmdd004,g_detail_d[l_ac].xmdd201,l_xmdd006)
        RETURNING l_success,r_qty
   END IF
   
   RETURN r_qty
END FUNCTION

PRIVATE FUNCTION adbp540_xmdd202_chk()
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_xmdh016   LIKE xmdh_t.xmdh016
      
   LET r_success = TRUE

   CALL s_aooi250_convert_qty(g_detail_d[l_ac].xmdd001,g_detail_d[l_ac].xmdd201,g_detail_d[l_ac].xmdd004,g_detail_d[l_ac].xmdd202) RETURNING l_success,l_xmdh016
   IF l_success THEN
      IF NOT adbp540_xmdd006_chk(l_xmdh016) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   ELSE
      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success
END FUNCTION

PRIVATE FUNCTION adbp540_chk_data()
   DEFINE r_success  LIKE type_t.chr1
   
   LET r_success = TRUE
   
   IF g_detail_d[l_ac].sel = 'Y' AND (cl_null(g_detail_d[l_ac].xmdd202) OR cl_null(g_detail_d[l_ac].xmdd006)) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = ''
      LET g_errparam.code   = 'adb-00092'
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   IF NOT cl_ap_chk_Range(g_detail_d[l_ac].xmdd202,"0.000","1","","","azz-00079",1) THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   IF NOT cl_ap_chk_Range(g_detail_d[l_ac].xmdd006,"0.000","0","","","azz-00079",1) THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   IF NOT adbp540_xmdd006_chk(g_detail_d[l_ac].xmdd006) THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   IF NOT cl_null(g_detail_d[l_ac].xmdd024) THEN
      IF NOT cl_ap_chk_Range(g_detail_d[l_ac].xmdd025,"0.000","1","","","azz-00079",1) THEN
         LET r_success = FALSE
         RETURN r_success 
      END IF
   END IF
   RETURN r_success 
END FUNCTION

PRIVATE FUNCTION adbp540_xmdd006_chk(p_xmdh016)
   DEFINE p_xmdh016   LIKE xmdh_t.xmdh016
   DEFINE l_xmdh016   LIKE xmdh_t.xmdh016
   DEFINE r_success   LIKE type_t.num5

   LET r_success = TRUE

   CALL s_adbt540_get_max_ship_qty('2','',g_detail_d[l_ac].xmdadocno,g_detail_d[l_ac].xmddseq,g_detail_d[l_ac].xmddseq1,g_detail_d[l_ac].xmddseq2) RETURNING l_xmdh016                             
   IF p_xmdh016 > l_xmdh016 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'adb-00121'
      LET g_errparam.extend = p_xmdh016
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success
END FUNCTION

PRIVATE FUNCTION adbp540_xmdd004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_detail_d[l_ac].xmdd004
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_detail_d[l_ac].xmdd004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_detail_d[l_ac].xmdd004_desc
END FUNCTION

#end add-point
 
{</section>}
 
