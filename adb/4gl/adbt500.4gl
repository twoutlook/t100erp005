#該程式未解開Section, 採用最新樣板產出!
{<section id="adbt500.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0040(2017-01-17 14:37:22), PR版次:0040(2017-02-02 15:47:09)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000795
#+ Filename...: adbt500
#+ Description: 分銷訂單維護作業
#+ Creator....: 02748(2014-05-02 00:00:00)
#+ Modifier...: 08172 -SD/PR- 06814
 
{</section>}
 
{<section id="adbt500.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#151224-00025#1   2015/12/25 By tsungyung  手動輸入特徵碼沒有同步新增inam_t[料件產品特徵明細檔](整批修改)
#160314-00009#2   2016/03/16 By zhujing    各程式增加产品特征是否需要自动开窗的程式段处理
#160318-00005#6   2016/03/21 By Jessy      修正azzi920重複定義之錯誤訊息
#160318-00025#28  2016/04/06 By pengxin    修正azzi920重複定義之錯誤訊息
#160513-00033#7   2016/05/24 By 02097      增加现金返利
#160719-00015#2   2016/07/19 by sakura     無設定查詢方案,應查無資料
#160510-00043#2   2016/07/25 By 02097      T類作業在browser_fill()組SQL前,呼叫s_aooi200_filter_slip將回傳條件組進去g_wc中
#160816-00068#2   2016/08/17 By earl       調整transaction
#160816-00001#7   2016/08/21 By 08742      抓取理由碼改CALL sub
#160818-00017#6   2016/08/24 by 08172      修改删除时重新检查状态
#160809-00015#1   2016/08/29 by lori       訂單單號開窗依aooi500過濾組織, r.q 移除 ooed_t 相關設定 
#160825-00030#1   2016/08/31 by lori       複製時,xmdc_t/xrcd_t應過濾來源單的現返資料
#160906-00007#1   2016/09/12 by sakura     選擇"3.簽收訂單",程式會閃退問題處理
#160907-00048#1   2016/09/13 by sakura     1.复制的时候，交易类型为2:赠品的订单明细、交易税明细、交期明细页签中没有删除相应的信息
#                                          2.修改单价按钮后，不会回写单头的金额xmda041,xmda042,xmda043
#160824-00007#48  2016/10/06 by 06137      修正舊值備份寫法
#160922-00032#6   2016/10/12 by 06137      分销订单里的来源增加显示10.订货会订单，只是查询时可以选择，手动新增时，不可用
#161017-00048#1   2016/10/18 By dongsz     产品特征二维开窗整批产生单身后，只有第一笔资料的xmdc028有值(BUG调整)
#161017-00029#3   2016/10/18 by 08742      1.录入条码或开窗选择条码后，需要根据条码带出产品特征imay019，
#                                          2.录入产品特征或开窗选择产品特征后，需要根据商品和产品特征带出条码imay003
#161006-00008#5   2016/10/20 by 08729      處理組織開窗
#161104-00002#1   2016/11/07 by lori       變數定義與INSERT調整不使用*
#161125-00003#1   2016/11/25 by 08172      商品明细中的折扣率=含税金额/标牌价金额*100
#161123-00042#1   2016/11/28 By 06137      161104-00002 星號寫法, 應補上自定義欄位
#161124-00039#1   2016/12/06 by geza       使用inax计算可用库存
#161219-00001#4   2016/12/19 by sunxh      调用s_feature_check(p_item,p_feature)对单身产品特征栏位进行检核
#161228-00033#1   2017/01/05 By 06137      後續T100 應會有不同的DB支持  ROWNUM只適用於ORACLE DB 予以改寫 應將rownum寫法移除，ORDER BY 後FETCH FIRST抓第一筆
#161221-00064#24  2017/01/10 By zhujing    增加pmao000(1-采购，2-销售),用于区分axmi120和apmi120数据显示
#170116-00018#3   2017/01/17 by 08172      发货仓预计可用量=库存量(发货组织+库位)-排队量(发货组织)
#170202-00026#1   2017/02/02 By 06814      修正WHERE 條件沒下ent
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xmda_m        RECORD
       xmdasite LIKE xmda_t.xmdasite, 
   xmdasite_desc LIKE type_t.chr80, 
   xmdadocdt LIKE xmda_t.xmdadocdt, 
   xmdadocno LIKE xmda_t.xmdadocno, 
   xmda001 LIKE xmda_t.xmda001, 
   xmdadocno_desc LIKE type_t.chr80, 
   xmda005 LIKE xmda_t.xmda005, 
   xmda202 LIKE xmda_t.xmda202, 
   xmda202_desc LIKE type_t.chr80, 
   xmda023 LIKE xmda_t.xmda023, 
   xmda023_desc LIKE type_t.chr80, 
   xmda004 LIKE xmda_t.xmda004, 
   xmda004_desc LIKE type_t.chr80, 
   xmda200 LIKE xmda_t.xmda200, 
   xmda200_desc LIKE type_t.chr80, 
   xmda201 LIKE xmda_t.xmda201, 
   xmda201_desc LIKE type_t.chr80, 
   xmdastus LIKE xmda_t.xmdastus, 
   xmda007 LIKE xmda_t.xmda007, 
   xmda008 LIKE xmda_t.xmda008, 
   xmda021 LIKE xmda_t.xmda021, 
   xmda021_desc LIKE type_t.chr80, 
   xmda022 LIKE xmda_t.xmda022, 
   xmda022_desc LIKE type_t.chr80, 
   xmda203 LIKE xmda_t.xmda203, 
   xmda203_desc LIKE type_t.chr80, 
   xmda027 LIKE xmda_t.xmda027, 
   xmda027_desc LIKE type_t.chr80, 
   xmda024 LIKE xmda_t.xmda024, 
   xmda024_desc LIKE type_t.chr80, 
   xmda002 LIKE xmda_t.xmda002, 
   xmda002_desc LIKE type_t.chr80, 
   xmda003 LIKE xmda_t.xmda003, 
   xmda003_desc LIKE type_t.chr80, 
   xmdaunit LIKE xmda_t.xmdaunit, 
   xmdaunit_desc LIKE type_t.chr80, 
   xmda211 LIKE xmda_t.xmda211, 
   xmda211_desc LIKE type_t.chr80, 
   xmda210 LIKE xmda_t.xmda210, 
   xmda210_desc LIKE type_t.chr80, 
   xmda209 LIKE xmda_t.xmda209, 
   xmda209_desc LIKE type_t.chr80, 
   xmda208 LIKE xmda_t.xmda208, 
   xmda208_desc LIKE type_t.chr80, 
   xmda204 LIKE xmda_t.xmda204, 
   xmda204_desc LIKE type_t.chr80, 
   xmda205 LIKE xmda_t.xmda205, 
   xmda032 LIKE xmda_t.xmda032, 
   xmda032_desc LIKE type_t.chr80, 
   xmda071 LIKE xmda_t.xmda071, 
   xmda025 LIKE xmda_t.xmda025, 
   xmda025_desc LIKE type_t.chr80, 
   oofb017 LIKE type_t.chr500, 
   xmda026 LIKE xmda_t.xmda026, 
   xmda026_desc LIKE type_t.chr80, 
   oofb017_1 LIKE type_t.chr500, 
   xmda206 LIKE xmda_t.xmda206, 
   xmda206_desc LIKE type_t.chr80, 
   xmda207 LIKE xmda_t.xmda207, 
   xmda207_desc LIKE type_t.chr80, 
   xmda020 LIKE xmda_t.xmda020, 
   xmda020_desc LIKE type_t.chr80, 
   xmda036 LIKE xmda_t.xmda036, 
   xmda036_desc LIKE type_t.chr80, 
   xmda048 LIKE xmda_t.xmda048, 
   xmda049 LIKE xmda_t.xmda049, 
   xmda009 LIKE xmda_t.xmda009, 
   xmda009_desc LIKE type_t.chr80, 
   xmda010 LIKE xmda_t.xmda010, 
   xmda010_desc LIKE type_t.chr80, 
   xmda015 LIKE xmda_t.xmda015, 
   xmda015_desc LIKE type_t.chr80, 
   xmda016 LIKE xmda_t.xmda016, 
   xmda011 LIKE xmda_t.xmda011, 
   xmda011_desc LIKE type_t.chr80, 
   xmda012 LIKE xmda_t.xmda012, 
   xmda013 LIKE xmda_t.xmda013, 
   xmda035 LIKE xmda_t.xmda035, 
   xmda035_desc LIKE type_t.chr80, 
   isaf011 LIKE type_t.chr500, 
   xmda213 LIKE xmda_t.xmda213, 
   xmda039 LIKE xmda_t.xmda039, 
   xmda041 LIKE xmda_t.xmda041, 
   xmda042 LIKE xmda_t.xmda042, 
   xmdaownid LIKE xmda_t.xmdaownid, 
   xmdaownid_desc LIKE type_t.chr80, 
   xmdaowndp LIKE xmda_t.xmdaowndp, 
   xmdaowndp_desc LIKE type_t.chr80, 
   xmdacrtid LIKE xmda_t.xmdacrtid, 
   xmdacrtid_desc LIKE type_t.chr80, 
   xmdacrtdp LIKE xmda_t.xmdacrtdp, 
   xmdacrtdp_desc LIKE type_t.chr80, 
   xmdacrtdt LIKE xmda_t.xmdacrtdt, 
   xmdamodid LIKE xmda_t.xmdamodid, 
   xmdamodid_desc LIKE type_t.chr80, 
   xmdamoddt LIKE xmda_t.xmdamoddt, 
   xmdacnfid LIKE xmda_t.xmdacnfid, 
   xmdacnfid_desc LIKE type_t.chr80, 
   xmdacnfdt LIKE xmda_t.xmdacnfdt, 
   xmda034 LIKE xmda_t.xmda034, 
   xmda034_desc LIKE type_t.chr80, 
   xmda006 LIKE xmda_t.xmda006, 
   xmda033 LIKE xmda_t.xmda033, 
   xmda017 LIKE xmda_t.xmda017, 
   xmda017_desc LIKE type_t.chr80, 
   xmda019 LIKE xmda_t.xmda019, 
   xmda018 LIKE xmda_t.xmda018, 
   xmda018_desc LIKE type_t.chr80, 
   xmda030 LIKE xmda_t.xmda030, 
   xmda031 LIKE xmda_t.xmda031, 
   xmda045 LIKE xmda_t.xmda045, 
   xmda046 LIKE xmda_t.xmda046, 
   xmda047 LIKE xmda_t.xmda047, 
   xmda028 LIKE xmda_t.xmda028, 
   xmda043 LIKE xmda_t.xmda043
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xmdc_d        RECORD
       xmdcsite LIKE xmdc_t.xmdcsite, 
   xmdcseq LIKE xmdc_t.xmdcseq, 
   xmdc027 LIKE xmdc_t.xmdc027, 
   xmdc001 LIKE xmdc_t.xmdc001, 
   xmdc001_desc LIKE type_t.chr500, 
   xmdc001_desc_desc LIKE type_t.chr500, 
   xmdc002 LIKE xmdc_t.xmdc002, 
   xmdc004 LIKE xmdc_t.xmdc004, 
   xmdc004_desc LIKE type_t.chr500, 
   xmdc005 LIKE xmdc_t.xmdc005, 
   xmdc006 LIKE xmdc_t.xmdc006, 
   xmdc006_desc LIKE type_t.chr500, 
   xmdc007 LIKE xmdc_t.xmdc007, 
   xmdc008 LIKE xmdc_t.xmdc008, 
   xmdc008_desc LIKE type_t.chr500, 
   xmdc009 LIKE xmdc_t.xmdc009, 
   xmdc024 LIKE xmdc_t.xmdc024, 
   xmdc012 LIKE xmdc_t.xmdc012, 
   xmdc013 LIKE xmdc_t.xmdc013, 
   xmdc045 LIKE xmdc_t.xmdc045, 
   xmdc010 LIKE xmdc_t.xmdc010, 
   xmdc010_desc LIKE type_t.chr500, 
   xmdc011 LIKE xmdc_t.xmdc011, 
   xmdc015 LIKE xmdc_t.xmdc015, 
   xmdc016 LIKE xmdc_t.xmdc016, 
   xmdc016_desc LIKE type_t.chr500, 
   xmdc017 LIKE xmdc_t.xmdc017, 
   xmdc046 LIKE xmdc_t.xmdc046, 
   xmdc047 LIKE xmdc_t.xmdc047, 
   xmdc048 LIKE xmdc_t.xmdc048, 
   xmdc023 LIKE xmdc_t.xmdc023, 
   xmdc019 LIKE xmdc_t.xmdc019, 
   xmdc020 LIKE xmdc_t.xmdc020, 
   xmdc021 LIKE xmdc_t.xmdc021, 
   xmdc022 LIKE xmdc_t.xmdc022, 
   xmdc051 LIKE xmdc_t.xmdc051, 
   xmdcunit LIKE xmdc_t.xmdcunit, 
   xmdcunit_desc LIKE type_t.chr500, 
   xmdcorga LIKE xmdc_t.xmdcorga, 
   xmdcorga_desc LIKE type_t.chr500, 
   xmdc052 LIKE xmdc_t.xmdc052, 
   xmdc049 LIKE xmdc_t.xmdc049, 
   xmdc049_desc LIKE type_t.chr500, 
   xmdc053 LIKE xmdc_t.xmdc053, 
   xmdc053_desc LIKE type_t.chr500, 
   xmdc050 LIKE xmdc_t.xmdc050
       END RECORD
PRIVATE TYPE type_g_xmdc2_d RECORD
       rticseq LIKE rtic_t.rticseq, 
   xmja0021 LIKE type_t.chr500, 
   xmja0031 LIKE type_t.chr500, 
   xmja0031_desc LIKE type_t.chr500, 
   xmja0031_desc_1 LIKE type_t.chr500, 
   xmja0171 LIKE type_t.chr10, 
   xmja0171_desc LIKE type_t.chr500, 
   xmja0181 LIKE type_t.num20_6, 
   xmja0081 LIKE type_t.num20_6, 
   xmja0091 LIKE type_t.num20_6, 
   xmja0101 LIKE type_t.num20_6, 
   xmja0211 LIKE type_t.num20_6, 
   rticseq1 LIKE rtic_t.rticseq1, 
   rtic001 LIKE rtic_t.rtic001, 
   rtic002 LIKE rtic_t.rtic002, 
   rtic003 LIKE rtic_t.rtic003, 
   rtic004 LIKE rtic_t.rtic004, 
   rtic005 LIKE rtic_t.rtic005, 
   rtic006 LIKE rtic_t.rtic006, 
   rtic007 LIKE rtic_t.rtic007, 
   rtic008 LIKE rtic_t.rtic008, 
   rtic009 LIKE rtic_t.rtic009, 
   rtic010 LIKE rtic_t.rtic010, 
   rtic011 LIKE rtic_t.rtic011, 
   rtic012 LIKE rtic_t.rtic012, 
   rtic013 LIKE rtic_t.rtic013, 
   rtic014 LIKE rtic_t.rtic014, 
   rtic015 LIKE rtic_t.rtic015, 
   rtic016 LIKE rtic_t.rtic016, 
   rtic017 LIKE rtic_t.rtic017, 
   rtic018 LIKE rtic_t.rtic018, 
   rtic019 LIKE rtic_t.rtic019, 
   rtic020 LIKE rtic_t.rtic020, 
   rtic021 LIKE rtic_t.rtic021, 
   rtic022 LIKE rtic_t.rtic022, 
   rtic023 LIKE rtic_t.rtic023, 
   rtic024 LIKE rtic_t.rtic024, 
   rtic025 LIKE rtic_t.rtic025, 
   rtic026 LIKE rtic_t.rtic026, 
   rtic027 LIKE rtic_t.rtic027, 
   rtic028 LIKE rtic_t.rtic028, 
   rtic029 LIKE rtic_t.rtic029
       END RECORD
PRIVATE TYPE type_g_xmdc3_d RECORD
       xmdddocno LIKE xmdd_t.xmdddocno, 
   xmddseq LIKE xmdd_t.xmddseq, 
   xmddseq1 LIKE xmdd_t.xmddseq1, 
   xmddseq2 LIKE xmdd_t.xmddseq2, 
   xmdd229 LIKE xmdd_t.xmdd229, 
   xmdd003 LIKE xmdd_t.xmdd003, 
   xmdd001 LIKE xmdd_t.xmdd001, 
   xmdd001_desc LIKE type_t.chr500, 
   xmdd001_desc_desc LIKE type_t.chr500, 
   xmdd002 LIKE xmdd_t.xmdd002, 
   xmdd200 LIKE xmdd_t.xmdd200, 
   xmdd200_desc LIKE type_t.chr500, 
   xmdd004 LIKE xmdd_t.xmdd004, 
   xmdd004_desc LIKE type_t.chr500, 
   xmdd005 LIKE xmdd_t.xmdd005, 
   xmdd011 LIKE xmdd_t.xmdd011, 
   xmdd012 LIKE xmdd_t.xmdd012, 
   xmdc012 LIKE xmdc_t.xmdc012, 
   xmdc013 LIKE xmdc_t.xmdc013, 
   xmdd006 LIKE xmdd_t.xmdd006, 
   xmdd201 LIKE xmdd_t.xmdd201, 
   xmdd201_desc LIKE type_t.chr500, 
   xmdd202 LIKE xmdd_t.xmdd202, 
   xmdd024 LIKE xmdd_t.xmdd024, 
   xmdd024_desc LIKE type_t.chr500, 
   xmdd025 LIKE xmdd_t.xmdd025, 
   xmdd026 LIKE xmdd_t.xmdd026, 
   xmdd026_desc LIKE type_t.chr500, 
   xmdd027 LIKE xmdd_t.xmdd027, 
   xmdd203 LIKE xmdd_t.xmdd203, 
   xmdd204 LIKE xmdd_t.xmdd204, 
   xmdd205 LIKE xmdd_t.xmdd205, 
   xmdd206 LIKE xmdd_t.xmdd206, 
   xmdd029 LIKE xmdd_t.xmdd029, 
   xmdd028 LIKE xmdd_t.xmdd028, 
   xmdd019 LIKE xmdd_t.xmdd019, 
   xmdd019_desc LIKE type_t.chr500, 
   xmdd030 LIKE xmdd_t.xmdd030, 
   xmdd207 LIKE xmdd_t.xmdd207, 
   xmdd207_desc LIKE type_t.chr500, 
   xmddunit LIKE xmdd_t.xmddunit, 
   xmddunit_desc LIKE type_t.chr500, 
   xmdd210 LIKE xmdd_t.xmdd210, 
   xmdd210_desc LIKE type_t.chr500, 
   xmdd212 LIKE xmdd_t.xmdd212, 
   xmdd213 LIKE xmdd_t.xmdd213, 
   xmdd213_desc LIKE type_t.chr500, 
   xmdd214 LIKE xmdd_t.xmdd214, 
   xmdd214_desc LIKE type_t.chr500, 
   xmdd215 LIKE xmdd_t.xmdd215, 
   xmdd231 LIKE type_t.chr30, 
   xmdd009 LIKE xmdd_t.xmdd009, 
   xmdd031 LIKE xmdd_t.xmdd031, 
   xmdd014 LIKE xmdd_t.xmdd014, 
   xmdd015 LIKE xmdd_t.xmdd015, 
   xmdd016 LIKE xmdd_t.xmdd016, 
   xmdd017 LIKE xmdd_t.xmdd017, 
   xmdd221 LIKE xmdd_t.xmdd221, 
   xmddsite LIKE xmdd_t.xmddsite, 
   xmddsite_desc LIKE type_t.chr500, 
   xmdd218 LIKE xmdd_t.xmdd218, 
   xmdd218_desc LIKE type_t.chr500, 
   xmdd219 LIKE xmdd_t.xmdd219, 
   xmdd219_desc LIKE type_t.chr500, 
   xmdd220 LIKE xmdd_t.xmdd220, 
   xmdd220_desc LIKE type_t.chr500, 
   xmdd222 LIKE xmdd_t.xmdd222, 
   xmdd222_desc LIKE type_t.chr500, 
   xmdd223 LIKE xmdd_t.xmdd223, 
   xmdd223_desc LIKE type_t.chr500, 
   xmdd224 LIKE xmdd_t.xmdd224, 
   xmdd224_desc LIKE type_t.chr500, 
   xmddorga LIKE xmdd_t.xmddorga, 
   xmddorga_desc LIKE type_t.chr500, 
   xmdd226 LIKE xmdd_t.xmdd226, 
   xmdd227 LIKE xmdd_t.xmdd227, 
   xmdd227_desc LIKE type_t.chr500, 
   xmdd228 LIKE xmdd_t.xmdd228, 
   xmdd228_desc LIKE type_t.chr500, 
   xmdd013 LIKE xmdd_t.xmdd013, 
   xmdd018 LIKE xmdd_t.xmdd018, 
   xmdd020 LIKE xmdd_t.xmdd020, 
   xmdd021 LIKE xmdd_t.xmdd021, 
   xmdd022 LIKE xmdd_t.xmdd022, 
   xmdd022_desc LIKE type_t.chr500, 
   xmdd023 LIKE xmdd_t.xmdd023
       END RECORD
PRIVATE TYPE type_g_xmdc4_d RECORD
       xmjaunit LIKE xmja_t.xmjaunit, 
   xmjaseq LIKE xmja_t.xmjaseq, 
   xmjasite LIKE xmja_t.xmjasite, 
   xmjasite_desc LIKE type_t.chr500, 
   xmja001 LIKE xmja_t.xmja001, 
   xmja002 LIKE xmja_t.xmja002, 
   xmja003 LIKE xmja_t.xmja003, 
   xmja003_desc LIKE type_t.chr500, 
   xmja003_desc_desc LIKE type_t.chr500, 
   xmja033 LIKE xmja_t.xmja033, 
   xmja004 LIKE xmja_t.xmja004, 
   xmja005 LIKE xmja_t.xmja005, 
   xmja005_desc LIKE type_t.chr500, 
   xmja006 LIKE xmja_t.xmja006, 
   xmja006_desc LIKE type_t.chr500, 
   xmja007 LIKE xmja_t.xmja007, 
   xmja011 LIKE xmja_t.xmja011, 
   xmja011_desc LIKE type_t.chr500, 
   xmja012 LIKE xmja_t.xmja012, 
   xmja013 LIKE xmja_t.xmja013, 
   xmja013_desc LIKE type_t.chr500, 
   xmja014 LIKE xmja_t.xmja014, 
   xmja015 LIKE xmja_t.xmja015, 
   xmja015_desc LIKE type_t.chr500, 
   xmja016 LIKE xmja_t.xmja016, 
   xmja017 LIKE xmja_t.xmja017, 
   xmja017_desc LIKE type_t.chr500, 
   inag009 LIKE type_t.num20_6, 
   xmja018 LIKE xmja_t.xmja018, 
   xmja008 LIKE xmja_t.xmja008, 
   xmja009 LIKE xmja_t.xmja009, 
   xmja010 LIKE xmja_t.xmja010, 
   xmja022 LIKE xmja_t.xmja022, 
   xmja019 LIKE xmja_t.xmja019, 
   xmja020 LIKE xmja_t.xmja020, 
   xmja021 LIKE xmja_t.xmja021, 
   l_imaa116 LIKE type_t.num20_6, 
   l_diaopai LIKE type_t.num20_6, 
   l_rate LIKE type_t.num15_3, 
   xmja024 LIKE xmja_t.xmja024, 
   xmja024_desc LIKE type_t.chr500, 
   xmja025 LIKE xmja_t.xmja025, 
   xmja025_desc LIKE type_t.chr500, 
   xmja026 LIKE xmja_t.xmja026, 
   xmja026_desc LIKE type_t.chr500, 
   xmja027 LIKE xmja_t.xmja027, 
   xmja027_desc LIKE type_t.chr500, 
   xmja028 LIKE xmja_t.xmja028, 
   xmja029 LIKE xmja_t.xmja029, 
   xmja030 LIKE xmja_t.xmja030, 
   xmja031 LIKE xmja_t.xmja031, 
   xmja032 LIKE xmja_t.xmja032, 
   xmja040 LIKE xmja_t.xmja040, 
   xmja040_desc LIKE type_t.chr500, 
   xmja039 LIKE xmja_t.xmja039, 
   xmja039_desc LIKE type_t.chr500, 
   xmja038 LIKE xmja_t.xmja038, 
   xmja038_desc LIKE type_t.chr500, 
   xmja037 LIKE xmja_t.xmja037, 
   xmja037_desc LIKE type_t.chr500, 
   xmja034 LIKE xmja_t.xmja034
       END RECORD
PRIVATE TYPE type_g_xmdc5_d RECORD
       xmdbsite LIKE xmdb_t.xmdbsite, 
   xmdb001 LIKE xmdb_t.xmdb001, 
   xmdb002 LIKE xmdb_t.xmdb002, 
   xmdb002_desc LIKE type_t.chr500, 
   xmdb003 LIKE xmdb_t.xmdb003, 
   xmdb004 LIKE xmdb_t.xmdb004, 
   xmdb005 LIKE xmdb_t.xmdb005, 
   xmdb006 LIKE xmdb_t.xmdb006, 
   xmdb016 LIKE xmdb_t.xmdb016, 
   xmdb017 LIKE xmdb_t.xmdb017, 
   xmdb007 LIKE xmdb_t.xmdb007, 
   xmdb008 LIKE xmdb_t.xmdb008, 
   xmdb009 LIKE xmdb_t.xmdb009, 
   xmdb200 LIKE xmdb_t.xmdb200
       END RECORD
PRIVATE TYPE type_g_xmdc6_d RECORD
       xrcdseq LIKE xrcd_t.xrcdseq, 
   xrcdld LIKE xrcd_t.xrcdld, 
   imay0031 LIKE type_t.chr500, 
   imaa0011 LIKE type_t.chr500, 
   imaa0011_desc LIKE type_t.chr500, 
   imaa0011_desc_desc LIKE type_t.chr500, 
   xrcd002 LIKE xrcd_t.xrcd002, 
   xrcd002_desc LIKE type_t.chr500, 
   xrcdseq2 LIKE xrcd_t.xrcdseq2, 
   xrcd007 LIKE xrcd_t.xrcd007, 
   xrcd003 LIKE xrcd_t.xrcd003, 
   xrcd006 LIKE xrcd_t.xrcd006, 
   xrcd004 LIKE xrcd_t.xrcd004, 
   xrcd104 LIKE xrcd_t.xrcd104
       END RECORD
PRIVATE TYPE type_g_xmdc7_d RECORD
       rtieseq LIKE rtie_t.rtieseq, 
   imay0032 LIKE type_t.chr500, 
   imaa0012 LIKE type_t.chr500, 
   imaa0012_desc LIKE type_t.chr500, 
   imaa0012_desc_desc LIKE type_t.chr500, 
   rtieseq1 LIKE rtie_t.rtieseq1, 
   rtie001 LIKE rtie_t.rtie001, 
   rtie002 LIKE rtie_t.rtie002, 
   rtie002_desc LIKE type_t.chr500, 
   rtie006 LIKE rtie_t.rtie006
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_xmdadocno LIKE xmda_t.xmdadocno,
      b_xmdadocdt LIKE xmda_t.xmdadocdt,
      b_xmda001 LIKE xmda_t.xmda001,
      b_xmda002 LIKE xmda_t.xmda002,
   b_xmda002_desc LIKE type_t.chr80,
      b_xmda003 LIKE xmda_t.xmda003,
   b_xmda003_desc LIKE type_t.chr80,
      b_xmda004 LIKE xmda_t.xmda004,
   b_xmda004_desc LIKE type_t.chr80
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_flag1        LIKE type_t.num5
DEFINE g_hold         LIKE type_t.num5
DEFINE g_flag2        LIKE type_t.num5
DEFINE g_flag3        LIKE type_t.num5
DEFINE g_oofa001      LIKE oofa_t.oofa001
DEFINE g_ooef019      LIKE ooef_t.ooef019
DEFINE g_acc          LIKE gzcb_t.gzcb007
DEFINE g_pmab089      LIKE pmab_t.pmab089
DEFINE g_inam       DYNAMIC ARRAY OF RECORD   #記錄產品特徵
         inam001      LIKE inam_t.inam001,
         inam002      LIKE inam_t.inam002,
         inam004      LIKE inam_t.inam004
                   END RECORD   
DEFINE g_tax_app      LIKE oodb_t.oodb011      #取得稅別類型1:正常稅率2:依料件設定

DEFINE g_xmah003      LIKE xmah_t.xmah003      #價格是否允許修改
DEFINE g_xmah006      LIKE xmah_t.xmah006      #允許單價為0
DEFINE g_imaa005      LIKE imaa_t.imaa005 
DEFINE g_touch        LIKE type_t.num5   #150915-00006#1 20150915 add by beckxie
#160513-00033#4-(S)
 TYPE type_g_xmdc8_d RECORD
       l_xmdcseq LIKE type_t.num10, 
   l_xmdc200 LIKE type_t.chr20, 
   l_xmdc201 LIKE type_t.num10, 
   l_stcj029 LIKE type_t.chr500, 
   l_xmdc001 LIKE type_t.chr500, 
   l_imaal003_desc LIKE type_t.chr500, 
   l_imaal004_desc LIKE type_t.chr500, 
   l_stcj013 LIKE type_t.chr500, 
   l_stcj032 LIKE type_t.chr500, 
   l_xmdc016 LIKE type_t.chr10, 
   l_xmdc017 LIKE type_t.num26_10, 
   l_oodb005 LIKE type_t.chr500, 
   l_xmdc049 LIKE type_t.chr10, 
   l_xmdc049_desc LIKE type_t.chr500, 
   l_xmdc046 LIKE type_t.num20_6, 
   l_xmdc047 LIKE type_t.num20_6
       END RECORD
DEFINE g_xmdc8_d          DYNAMIC ARRAY OF type_g_xmdc8_d
DEFINE g_xmdc8_d_t        type_g_xmdc8_d
DEFINE g_xmdc8_d_o        type_g_xmdc8_d
DEFINE g_xmdc8_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc8_d #轉換遮罩前資料
DEFINE g_xmdc8_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc8_d #轉換遮罩後資料
DEFINE g_wc2_table8       STRING
#160513-00033#4-(E)      
DEFINE g_slip_wc          STRING     #160510-00043#2
#end add-point
       
#模組變數(Module Variables)
DEFINE g_xmda_m          type_g_xmda_m
DEFINE g_xmda_m_t        type_g_xmda_m
DEFINE g_xmda_m_o        type_g_xmda_m
DEFINE g_xmda_m_mask_o   type_g_xmda_m #轉換遮罩前資料
DEFINE g_xmda_m_mask_n   type_g_xmda_m #轉換遮罩後資料
 
   DEFINE g_xmdadocno_t LIKE xmda_t.xmdadocno
 
 
DEFINE g_xmdc_d          DYNAMIC ARRAY OF type_g_xmdc_d
DEFINE g_xmdc_d_t        type_g_xmdc_d
DEFINE g_xmdc_d_o        type_g_xmdc_d
DEFINE g_xmdc_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc_d #轉換遮罩前資料
DEFINE g_xmdc_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc_d #轉換遮罩後資料
DEFINE g_xmdc2_d          DYNAMIC ARRAY OF type_g_xmdc2_d
DEFINE g_xmdc2_d_t        type_g_xmdc2_d
DEFINE g_xmdc2_d_o        type_g_xmdc2_d
DEFINE g_xmdc2_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc2_d #轉換遮罩前資料
DEFINE g_xmdc2_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc2_d #轉換遮罩後資料
DEFINE g_xmdc3_d          DYNAMIC ARRAY OF type_g_xmdc3_d
DEFINE g_xmdc3_d_t        type_g_xmdc3_d
DEFINE g_xmdc3_d_o        type_g_xmdc3_d
DEFINE g_xmdc3_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc3_d #轉換遮罩前資料
DEFINE g_xmdc3_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc3_d #轉換遮罩後資料
DEFINE g_xmdc4_d          DYNAMIC ARRAY OF type_g_xmdc4_d
DEFINE g_xmdc4_d_t        type_g_xmdc4_d
DEFINE g_xmdc4_d_o        type_g_xmdc4_d
DEFINE g_xmdc4_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc4_d #轉換遮罩前資料
DEFINE g_xmdc4_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc4_d #轉換遮罩後資料
DEFINE g_xmdc5_d          DYNAMIC ARRAY OF type_g_xmdc5_d
DEFINE g_xmdc5_d_t        type_g_xmdc5_d
DEFINE g_xmdc5_d_o        type_g_xmdc5_d
DEFINE g_xmdc5_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc5_d #轉換遮罩前資料
DEFINE g_xmdc5_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc5_d #轉換遮罩後資料
DEFINE g_xmdc6_d          DYNAMIC ARRAY OF type_g_xmdc6_d
DEFINE g_xmdc6_d_t        type_g_xmdc6_d
DEFINE g_xmdc6_d_o        type_g_xmdc6_d
DEFINE g_xmdc6_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc6_d #轉換遮罩前資料
DEFINE g_xmdc6_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc6_d #轉換遮罩後資料
DEFINE g_xmdc7_d          DYNAMIC ARRAY OF type_g_xmdc7_d
DEFINE g_xmdc7_d_t        type_g_xmdc7_d
DEFINE g_xmdc7_d_o        type_g_xmdc7_d
DEFINE g_xmdc7_d_mask_o   DYNAMIC ARRAY OF type_g_xmdc7_d #轉換遮罩前資料
DEFINE g_xmdc7_d_mask_n   DYNAMIC ARRAY OF type_g_xmdc7_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
DEFINE g_wc2_table5   STRING
 
DEFINE g_wc2_table6   STRING
 
DEFINE g_wc2_table7   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="adbt500.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   DEFINE l_success        LIKE type_t.num5   
   DEFINE  l_forupd_sql    STRING   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("adb","")
 
   #add-point:作業初始化 name="main.init"
   #獲取當前營運據點的聯絡對象識別碼
   LET g_oofa001 = ''
   SELECT oofa001 INTO g_oofa001 FROM oofa_t WHERE oofaent = g_enterprise AND oofa002 = '1' AND oofa003 = g_site
   
   #獲得當前營運據點的所屬稅區
   LET g_ooef019 = ''
   SELECT ooef019 INTO g_ooef019 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site

   LET g_acc = ''
   #抓取[T:系統分類值檔].[C:系統分類碼]=24且[T:系統分類值檔].[C:系統分類碼]=g_prog 的[T:系統分類值檔].[C:參考欄位>
   
   #SELECT gzcb004 INTO g_acc FROM gzcb_t WHERE gzcb001 = '24' AND gzcb002 = g_prog  #160816-00001#7 mark   
   LET g_acc = s_fin_get_scc_value('24',g_prog,'2')   #160816-00001#7  Add  
   
   LET g_flag1 = FALSE
   LET g_hold = FALSE
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   LET l_forupd_sql = "SELECT xmdasite,xmdadocno,xmda001,'',xmdadocdt,xmda004,'',xmda002,'',xmda003, 
       '',xmdastus,xmda005,xmda006,xmda007,xmda008,xmda033,xmda027,'',xmda009,'',xmda010,'',xmda011, 
       '',xmda012,xmda013,xmda035,'',xmda015,'',xmda016,xmda017,'',xmda018,'',xmda019,xmda023,'',xmda032, 
       '',xmda071,xmda021,'',xmda022,'',xmda034,'',xmda024,'',xmda030,xmda031,xmda045,xmda046, 
       xmda047,xmda028,xmda041,xmda042,xmda043,xmda025,'','',xmda026,'','',xmda020,'', 
       xmda036,'',xmda048,xmda049,xmdaownid,'',xmdaowndp,'',xmdacrtid,'',xmdacrtdp,'',xmdacrtdt,xmdamodid, 
       '',xmdamoddt,xmdacnfid,'',xmdacnfdt FROM xmda_t WHERE xmdaent= ? AND xmdadocno=? FOR UPDATE"

   LET l_forupd_sql = cl_sql_forupd(l_forupd_sql)                #轉換不同資料庫語法
   DECLARE adbt500_cl2 CURSOR FROM l_forupd_sql        
   #end add-point
   LET g_forupd_sql = " SELECT xmdasite,'',xmdadocdt,xmdadocno,xmda001,'',xmda005,xmda202,'',xmda023, 
       '',xmda004,'',xmda200,'',xmda201,'',xmdastus,xmda007,xmda008,xmda021,'',xmda022,'',xmda203,'', 
       xmda027,'',xmda024,'',xmda002,'',xmda003,'',xmdaunit,'',xmda211,'',xmda210,'',xmda209,'',xmda208, 
       '',xmda204,'',xmda205,xmda032,'',xmda071,xmda025,'','',xmda026,'','',xmda206,'',xmda207,'',xmda020, 
       '',xmda036,'',xmda048,xmda049,xmda009,'',xmda010,'',xmda015,'',xmda016,xmda011,'',xmda012,xmda013, 
       xmda035,'','',xmda213,xmda039,xmda041,xmda042,xmdaownid,'',xmdaowndp,'',xmdacrtid,'',xmdacrtdp, 
       '',xmdacrtdt,xmdamodid,'',xmdamoddt,xmdacnfid,'',xmdacnfdt,xmda034,'',xmda006,xmda033,xmda017, 
       '',xmda019,xmda018,'',xmda030,xmda031,xmda045,xmda046,xmda047,xmda028,xmda043", 
                      " FROM xmda_t",
                      " WHERE xmdaent= ? AND xmdadocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
                  
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt500_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xmdasite,t0.xmdadocdt,t0.xmdadocno,t0.xmda001,t0.xmda005,t0.xmda202, 
       t0.xmda023,t0.xmda004,t0.xmda200,t0.xmda201,t0.xmdastus,t0.xmda007,t0.xmda008,t0.xmda021,t0.xmda022, 
       t0.xmda203,t0.xmda027,t0.xmda024,t0.xmda002,t0.xmda003,t0.xmdaunit,t0.xmda211,t0.xmda210,t0.xmda209, 
       t0.xmda208,t0.xmda204,t0.xmda205,t0.xmda032,t0.xmda071,t0.xmda025,t0.xmda026,t0.xmda206,t0.xmda207, 
       t0.xmda020,t0.xmda036,t0.xmda048,t0.xmda049,t0.xmda009,t0.xmda010,t0.xmda015,t0.xmda016,t0.xmda011, 
       t0.xmda012,t0.xmda013,t0.xmda035,t0.xmda213,t0.xmda039,t0.xmda041,t0.xmda042,t0.xmdaownid,t0.xmdaowndp, 
       t0.xmdacrtid,t0.xmdacrtdp,t0.xmdacrtdt,t0.xmdamodid,t0.xmdamoddt,t0.xmdacnfid,t0.xmdacnfdt,t0.xmda034, 
       t0.xmda006,t0.xmda033,t0.xmda017,t0.xmda019,t0.xmda018,t0.xmda030,t0.xmda031,t0.xmda045,t0.xmda046, 
       t0.xmda047,t0.xmda028,t0.xmda043,t1.ooefl003 ,t2.ooefl003 ,t3.oojdl003 ,t4.pmaal004 ,t5.pmaal004 , 
       t6.pmaal004 ,t7.pmaal004 ,t8.pmaal004 ,t9.pmaal004 ,t10.oofa011 ,t11.oocql004 ,t12.ooag011 ,t13.ooefl003 , 
       t14.ooefl003 ,t15.dbaal003 ,t16.dbaal003 ,t17.dbaal003 ,t18.dbaal003 ,t19.prcfl003 ,t20.oocql004 , 
       t21.dbadl003 ,t22.dbabl003 ,t23.oocql004 ,t24.pmaal004 ,t25.ooibl004 ,t26.oocql004 ,t27.ooail003 , 
       t28.ooag011 ,t29.ooefl003 ,t30.ooag011 ,t31.ooefl003 ,t32.ooag011 ,t33.ooag011 ,t34.pmaal003 , 
       t35.pmaml003 ,t36.ooidl003",
               " FROM xmda_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.xmdasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmda202 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oojdl_t t3 ON t3.oojdlent="||g_enterprise||" AND t3.oojdl001=t0.xmda023 AND t3.oojdl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t4 ON t4.pmaalent="||g_enterprise||" AND t4.pmaal001=t0.xmda004 AND t4.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t5 ON t5.pmaalent="||g_enterprise||" AND t5.pmaal001=t0.xmda200 AND t5.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t6 ON t6.pmaalent="||g_enterprise||" AND t6.pmaal001=t0.xmda201 AND t6.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t7 ON t7.pmaalent="||g_enterprise||" AND t7.pmaal001=t0.xmda021 AND t7.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t8 ON t8.pmaalent="||g_enterprise||" AND t8.pmaal001=t0.xmda022 AND t8.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t9 ON t9.pmaalent="||g_enterprise||" AND t9.pmaal001=t0.xmda203 AND t9.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t10 ON t10.oofaent="||g_enterprise||" AND t10.oofa001=t0.xmda027  ",
               " LEFT JOIN oocql_t t11 ON t11.oocqlent="||g_enterprise||" AND t11.oocql001='295' AND t11.oocql002=t0.xmda024 AND t11.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t12 ON t12.ooagent="||g_enterprise||" AND t12.ooag001=t0.xmda002  ",
               " LEFT JOIN ooefl_t t13 ON t13.ooeflent="||g_enterprise||" AND t13.ooefl001=t0.xmda003 AND t13.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t14 ON t14.ooeflent="||g_enterprise||" AND t14.ooefl001=t0.xmdaunit AND t14.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN dbaal_t t15 ON t15.dbaalent="||g_enterprise||" AND t15.dbaal001=t0.xmda211 AND t15.dbaal002='"||g_dlang||"' ",
               " LEFT JOIN dbaal_t t16 ON t16.dbaalent="||g_enterprise||" AND t16.dbaal001=t0.xmda210 AND t16.dbaal002='"||g_dlang||"' ",
               " LEFT JOIN dbaal_t t17 ON t17.dbaalent="||g_enterprise||" AND t17.dbaal001=t0.xmda209 AND t17.dbaal002='"||g_dlang||"' ",
               " LEFT JOIN dbaal_t t18 ON t18.dbaalent="||g_enterprise||" AND t18.dbaal001=t0.xmda208 AND t18.dbaal002='"||g_dlang||"' ",
               " LEFT JOIN prcfl_t t19 ON t19.prcflent="||g_enterprise||" AND t19.prcfl001=t0.xmda204 AND t19.prcfl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t20 ON t20.oocqlent="||g_enterprise||" AND t20.oocql001='297' AND t20.oocql002=t0.xmda032 AND t20.oocql003='"||g_dlang||"' ",
               " LEFT JOIN dbadl_t t21 ON t21.dbadlent="||g_enterprise||" AND t21.dbadl001=t0.xmda206 AND t21.dbadl002='"||g_dlang||"' ",
               " LEFT JOIN dbabl_t t22 ON t22.dbablent="||g_enterprise||" AND t22.dbabl001=t0.xmda207 AND t22.dbabl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t23 ON t23.oocqlent="||g_enterprise||" AND t23.oocql001='263' AND t23.oocql002=t0.xmda020 AND t23.oocql003='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t24 ON t24.pmaalent="||g_enterprise||" AND t24.pmaal001=t0.xmda036 AND t24.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t25 ON t25.ooiblent="||g_enterprise||" AND t25.ooibl002=t0.xmda009 AND t25.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t26 ON t26.oocqlent="||g_enterprise||" AND t26.oocql001='238' AND t26.oocql002=t0.xmda010 AND t26.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t27 ON t27.ooailent="||g_enterprise||" AND t27.ooail001=t0.xmda015 AND t27.ooail002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t28 ON t28.ooagent="||g_enterprise||" AND t28.ooag001=t0.xmdaownid  ",
               " LEFT JOIN ooefl_t t29 ON t29.ooeflent="||g_enterprise||" AND t29.ooefl001=t0.xmdaowndp AND t29.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t30 ON t30.ooagent="||g_enterprise||" AND t30.ooag001=t0.xmdacrtid  ",
               " LEFT JOIN ooefl_t t31 ON t31.ooeflent="||g_enterprise||" AND t31.ooefl001=t0.xmdacrtdp AND t31.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t32 ON t32.ooagent="||g_enterprise||" AND t32.ooag001=t0.xmdamodid  ",
               " LEFT JOIN ooag_t t33 ON t33.ooagent="||g_enterprise||" AND t33.ooag001=t0.xmdacnfid  ",
               " LEFT JOIN pmaal_t t34 ON t34.pmaalent="||g_enterprise||" AND t34.pmaal001=t0.xmda034 AND t34.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaml_t t35 ON t35.pmamlent="||g_enterprise||" AND t35.pmaml001=t0.xmda017 AND t35.pmaml002='"||g_dlang||"' ",
               " LEFT JOIN ooidl_t t36 ON t36.ooidlent="||g_enterprise||" AND t36.ooidl001=t0.xmda018 AND t36.ooidl002='"||g_dlang||"' ",
 
               " WHERE t0.xmdaent = " ||g_enterprise|| " AND t0.xmdadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE adbt500_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
                                    
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_adbt500 WITH FORM cl_ap_formpath("adb",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL adbt500_init()   
 
      #進入選單 Menu (="N")
      CALL adbt500_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
           
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_adbt500
      
   END IF 
   
   CLOSE adbt500_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   CALL s_get_price_B_tmp('2') RETURNING l_success
   CALL s_aooi500_drop_temp() RETURNING l_success      #150308-00001#2  By sakura 150309   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="adbt500.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION adbt500_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success      LIKE type_t.num5   
   DEFINE l_ecir0064     LIKE type_t.chr1   #160513-00033#7
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
   LET g_detail_idx_list[7] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('xmdastus','13','N,Y,A,D,R,W,C,H,UH,X')
 
      CALL cl_set_combo_scc('xmda005','2063') 
   CALL cl_set_combo_scc('xmda007','2065') 
   CALL cl_set_combo_scc('xmda048','2085') 
   CALL cl_set_combo_scc('xmda049','2084') 
   CALL cl_set_combo_scc('xmda039','8321') 
   CALL cl_set_combo_scc('xmda006','2064') 
   CALL cl_set_combo_scc('xmdc045','2035') 
   CALL cl_set_combo_scc('xmdc019','2055') 
   CALL cl_set_combo_scc('xmdc020','2036') 
   CALL cl_set_combo_scc('rtic001','6707') 
   CALL cl_set_combo_scc('rtic002','6708') 
   CALL cl_set_combo_scc('rtic006','6564') 
   CALL cl_set_combo_scc('rtic007','6565') 
   CALL cl_set_combo_scc('xmdd003','2055') 
   CALL cl_set_combo_scc('xmdd009','2057') 
   CALL cl_set_combo_scc('xmdd017','2058') 
   CALL cl_set_combo_scc('xmdb016','3015') 
   CALL cl_set_combo_scc('xmdb017','3016') 
   CALL cl_set_combo_scc('rtie001','8310') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
   CALL g_idx_group.addAttribute("'4',","1")
   CALL g_idx_group.addAttribute("'5',","1")
   CALL g_idx_group.addAttribute("'6',","1")
   CALL g_idx_group.addAttribute("'7',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL s_adbt500_cash_back_cre_tmp()
   LET g_detail_idx_list[8] = 1     #160513-00033#4
   CALL g_idx_group.addAttribute("'8',","1")    #160513-00033#4   
   CALL cl_set_combo_scc_part('xmdd009','2057','1,2')
   CALL cl_set_combo_scc('xmdc035','2039') 
   CALL cl_set_combo_scc('xmdc040','2067') 
   CALL cl_set_combo_scc_part('xmdc019','2055','1,2,3,9')
   CALL cl_set_combo_scc('xmdd003','2055')  
   CALL cl_set_combo_scc('xmdd017','2058')
   CALL cl_set_combo_scc_part('xmda005','2063','1,2,3,6')  
   #CALL cl_set_combo_scc_part('xmda007','2065','1,5,8')    #160922-00032#6 Mark By Ken 161012
   CALL cl_set_combo_scc_part('xmda007','2065','1,5,8,10')  #160922-00032#6 Add By Ken 161012   
   CALL cl_set_combo_scc('xmja001','6064')   
   CALL cl_set_combo_scc('xmdd226','6013') 
   CALL cl_set_combo_scc('xmdd229','6064')
   CALL cl_set_combo_scc_part('xmdb016','3015','2')
   LET g_errshow = '1'
   
   #計算金額建立tmptable
   CALL s_tax_recount_tmp()
   CALL s_get_price_B_tmp('1') RETURNING l_success
   
   CALL cl_set_toolbaritem_visible("adbt500_04",FALSE)
   
#   #判斷據點參數若不使用參考單位時，則參考單位、數量需隱藏不可以維護(據點參數:S-BAS-0028)
#   IF cl_get_para(g_enterprise,g_site,'S-BAS-0028') = 'N' THEN
#      CALL cl_set_comp_visible("xmja015,xmja015_desc,xmja016,xmdc008,xmdc008_desc,xmdc009,xmdd024,xmdd024_desc,xmdd025",FALSE)
#   END IF
#   #160314-00009#2 zhujing unmark 2016-3-16---(E)
#   #判斷據點參數若不使用產品特徵時，則產品特徵需隱藏不可以維護(據點參數:S-BAS-0036)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN
      CALL cl_set_comp_visible("xmja004,xmdc002,xmdd002",FALSE)
   END IF
#   #160314-00009#2 zhujing unmark 2016-3-16---(E)
#   #整體參數未使用採購計價單位，則計價單單位、數量需隱藏不可以維護(據點參數:S-BAS-0007)
#   IF cl_get_para(g_enterprise,g_site,'S-BAS-0007') = "N" THEN
#      CALL cl_set_comp_visible("xmja017,xmja017_desc,xmja018,xmdc010,xmdc010_desc,xmdc011,xmdd026,xmdd026_desc,xmdd027",FALSE)
#   END IF
   CALL s_aooi500_create_temp() RETURNING l_success    #150308-00001#2  By sakura 150309
   #160513-00033#8--(S)
   CALL cl_get_para(g_enterprise,'','E-CIR-0064') RETURNING l_ecir0064 
   IF l_ecir0064 = '1' THEN      
      CALL cl_set_comp_visible('l_xmdc001,l_imaal003_desc,l_imaal004_desc',FALSE)    #依单据隐藏商品
   ELSE
      CALL cl_set_comp_visible('l_stcj029',FALSE)         #依商品隐藏摘要
   END IF
   #160513-00033#8--(E)
   CALL s_aooi200_filter_slip('xmdadocno') RETURNING g_slip_wc    #160510-00043#2
   #end add-point
   
   #初始化搜尋條件
   CALL adbt500_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="adbt500.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION adbt500_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   DEFINE l_pmaa004    LIKE pmaa_t.pmaa004      #法人類型
   DEFINE l_rtiadocno  LIKE rtia_t.rtiadocno
   DEFINE l_success    LIKE type_t.num5
   DEFINE l_xmja014    LIKE xmja_t.xmja014
   DEFINE l_xmja031    LIKE xmja_t.xmja031
   DEFINE l_xmja032    LIKE xmja_t.xmja032
   DEFINE l_cn         LIKE type_t.num5      #150409-00006#3 20150828 s983961 add
   DEFINE l_gen_xmdc   LIKE type_t.num5      #160513-00033#4
   DEFINE l_gen_stci   LIKE type_t.num5      #160513-00033#4
   DEFINE l_no_use     LIKE type_t.num5      #160513-00033#4
   DEFINE l_cnt        LIKE type_t.num5      #160513-00033#4
   DEFINE l_i          LIKE type_t.num5      #160630-00010#1 20160630 add by beckxie
   DEFINE l_xrcd103    LIKE xrcd_t.xrcd103   #160513-00033#4
   DEFINE l_xrcd104    LIKE xrcd_t.xrcd103   #160513-00033#4
   DEFINE l_xrcd105    LIKE xrcd_t.xrcd103   #160513-00033#4
   DEFINE l_xrcdseq    LIKE xrcd_t.xrcdseq   #160513-00033#4
   DEFINE r_success    LIKE type_t.num5      #160513-00033#4
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL adbt500_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
                                                                        
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
                                    
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   LET g_touch = 1   #150915-00006#1 20150915 add by beckxie
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xmda_m.* TO NULL
         CALL g_xmdc_d.clear()
         CALL g_xmdc2_d.clear()
         CALL g_xmdc3_d.clear()
         CALL g_xmdc4_d.clear()
         CALL g_xmdc5_d.clear()
         CALL g_xmdc6_d.clear()
         CALL g_xmdc7_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL adbt500_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL adbt500_fetch('') # reload data
               LET l_ac = 1
               CALL adbt500_ui_detailshow() #Setting the current row 
         
               CALL adbt500_idx_chk()
               #NEXT FIELD xmdcseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_xmdc_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adbt500_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
                                                                     
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL adbt500_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               CALL adbt500_b_fill()
               CALL adbt500_show()
               CALL cl_set_act_visible("open_adbt500_03", TRUE)
               IF g_xmda_m.xmdastus NOT MATCHES "[NDR]" THEN  
                  CALL cl_set_act_visible("open_adbt500_03", FALSE)
               END IF               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_adbt500_03
            LET g_action_choice="open_adbt500_03"
            IF cl_auth_chk_act("open_adbt500_03") THEN
               
               #add-point:ON ACTION open_adbt500_03 name="menu.detail_show.page1.open_adbt500_03"
               IF l_ac > 0 THEN
                  IF NOT cl_null(g_xmdc_d[l_ac].xmdcseq) THEN
                     CALL s_transaction_begin()
                     CALL adbt500_03(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq,'','','','','','')
                        RETURNING l_xmja031,l_xmja032,l_xmja014

                     IF NOT cl_null(l_xmja031) AND NOT cl_null(l_xmja032) AND NOT cl_null(l_xmja014) THEN
                        CALL adbt500_update_xmja014(l_xmja014)
                        UPDATE xmja_t
                           SET xmja031 = l_xmja031,
                               xmja032 = l_xmja032
                         WHERE xmjaent = g_enterprise
                           AND xmjadocno = g_xmda_m.xmdadocno
                           AND xmjaseq = g_xmdc_d[l_ac].xmdcseq
                        IF NOT s_adbt500_gen_xmdc(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                           CALL s_transaction_end('N','0')
                        END IF
                        IF NOT s_adbt500_gen_xmdd(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                           CALL s_transaction_end('N','0')
                        END IF
                        CALL s_transaction_end('Y','0')
                     ELSE
                        CALL s_transaction_end('N','0')
                     END IF
                     CALL adbt500_b_fill()
                     #CALL adbt500_show()
                  END IF
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION adbt500_04
            LET g_action_choice="adbt500_04"
            IF cl_auth_chk_act("adbt500_04") THEN
               
               #add-point:ON ACTION adbt500_04 name="menu.detail_show.page1.adbt500_04"
               IF l_ac > 0 THEN
                  IF NOT cl_null(g_xmdc_d[l_ac].xmdcseq) THEN
                     CALL adbt500_04(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq)
                  END IF
               END IF
               #END add-point
               
            END IF
 
 
 
 
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
                                                                        
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_xmdc2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adbt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
                                                                                          
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL adbt500_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
                                                                                          
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
                                                                        
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdc3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adbt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body3.before_row"
                                                                                         
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL adbt500_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body3.before_display"
               CALL adbt500_b_fill()  
               CALL adbt500_show() 
               CALL cl_set_act_visible("open_adbt500_03", TRUE)
               IF g_xmda_m.xmdastus NOT MATCHES "[NDR]" THEN  
                  CALL cl_set_act_visible("open_adbt500_03", FALSE)
               END IF               
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION action_6
            LET g_action_choice="action_6"
            IF cl_auth_chk_act("action_6") THEN
               
               #add-point:ON ACTION action_6 name="menu.detail_show.page3.action_6"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_adbt500_03
            LET g_action_choice="open_adbt500_03"
            IF cl_auth_chk_act("open_adbt500_03") THEN
               
               #add-point:ON ACTION open_adbt500_03 name="menu.detail_show.page3.open_adbt500_03"
               IF l_ac > 0 THEN
                  IF NOT cl_null(g_xmdc4_d[l_ac].xmjaseq) THEN
                     CALL s_transaction_begin()
                     CALL adbt500_03(g_xmda_m.xmdadocno,g_xmdc4_d[l_ac].xmjaseq,g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja004,
                                     g_xmdc4_d[l_ac].xmja014,g_xmdc4_d[l_ac].xmja030,g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja025)
                        RETURNING g_xmdc4_d[l_ac].xmja031,g_xmdc4_d[l_ac].xmja032,g_xmdc4_d[l_ac].xmja014
                     #DISPLAY BY NAME g_xmdc4_d[l_ac].xmja031,g_xmdc4_d[l_ac].xmja032,g_xmdc4_d[l_ac].xmja014
                     IF NOT cl_null(g_xmdc4_d[l_ac].xmja031) AND NOT cl_null(g_xmdc4_d[l_ac].xmja032) AND 
                        NOT cl_null(g_xmdc4_d[l_ac].xmja014) THEN
                        CALL adbt500_update_xmja014(g_xmdc4_d[l_ac].xmja014)
                        UPDATE xmja_t
                           SET xmja031 = g_xmdc4_d[l_ac].xmja031,
                               xmja032 = g_xmdc4_d[l_ac].xmja032
                         WHERE xmjaent = g_enterprise
                           AND xmjadocno = g_xmda_m.xmdadocno
                           AND xmjaseq = g_xmdc4_d[l_ac].xmjaseq
                        IF NOT s_adbt500_gen_xmdc(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                           CALL s_transaction_end('N','0')
                        END IF
                        IF NOT s_adbt500_gen_xmdd(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                           CALL s_transaction_end('N','0')
                        END IF
                        CALL s_transaction_end('Y','0')
                     ELSE
                        CALL s_transaction_end('N','0')
                     END IF
                     CALL adbt500_b_fill()
                     #CALL adbt500_show()
                  END IF
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION adbt500_04
            LET g_action_choice="adbt500_04"
            IF cl_auth_chk_act("adbt500_04") THEN
               
               #add-point:ON ACTION adbt500_04 name="menu.detail_show.page3.adbt500_04"
               IF l_ac > 0 THEN
                  IF NOT cl_null(g_xmdc4_d[l_ac].xmjaseq) THEN
                     CALL adbt500_04(g_xmda_m.xmdadocno,g_xmdc4_d[l_ac].xmjaseq)
                  END IF
               END IF
               #END add-point
               
            END IF
 
 
 
 
         
            #add-point:page3自定義行為 name="ui_dialog.body3.action"
                                                
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdc4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adbt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[4] = l_ac
               CALL g_idx_group.addAttribute("'4',",l_ac)
               
               #add-point:page4, before row動作 name="ui_dialog.body4.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               #顯示單身筆數
               CALL adbt500_idx_chk()
               #add-point:page4自定義行為 name="ui_dialog.body4.before_display"
               CALL cl_set_act_visible("open_adbt500_03", TRUE)
               IF g_xmda_m.xmdastus NOT MATCHES "[NDR]" THEN  
                  CALL cl_set_act_visible("open_adbt500_03", FALSE)
               END IF
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_adbt500_03
            LET g_action_choice="open_adbt500_03"
            IF cl_auth_chk_act("open_adbt500_03") THEN
               
               #add-point:ON ACTION open_adbt500_03 name="menu.detail_show.page4.open_adbt500_03"
               IF l_ac > 0 THEN
                  IF NOT cl_null(g_xmdc_d[l_ac].xmdcseq) THEN
                     CALL s_transaction_begin()
                     CALL adbt500_03(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq,'','','','','','')
                        RETURNING l_xmja031,l_xmja032,l_xmja014

                     IF NOT cl_null(l_xmja031) AND NOT cl_null(l_xmja032) AND NOT cl_null(l_xmja014) THEN
                        CALL adbt500_update_xmja014(l_xmja014)
                        UPDATE xmja_t
                           SET xmja031 = l_xmja031,
                               xmja032 = l_xmja032
                         WHERE xmjaent = g_enterprise
                           AND xmjadocno = g_xmda_m.xmdadocno
                           AND xmjaseq = g_xmdc_d[l_ac].xmdcseq
                        IF NOT s_adbt500_gen_xmdc(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                           CALL s_transaction_end('N','0')
                        END IF
                        IF NOT s_adbt500_gen_xmdd(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                           CALL s_transaction_end('N','0')
                        END IF
                        CALL s_transaction_end('Y','0')
                     ELSE
                        CALL s_transaction_end('N','0')
                     END IF
                     CALL adbt500_b_fill()
                     #CALL adbt500_show()
                  END IF
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION adbt500_04
            LET g_action_choice="adbt500_04"
            IF cl_auth_chk_act("adbt500_04") THEN
               
               #add-point:ON ACTION adbt500_04 name="menu.detail_show.page4.adbt500_04"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION detail_qrystr
               MENU "" ATTRIBUTE(STYLE="popup")
                  #add-point:ON ACTION detail_qrystr相關動作 name="menu.detail_show.page4_sub.detail_qrystr"
                  #150409-00006#3 2015/10/22 s983961 add(s)
                  BEFORE MENU 
                  IF g_detail_idx=0 THEN
                    HIDE OPTION "prog_astm601"
                    HIDE OPTION "prog_astm311"
                    EXIT MENU
                  ELSE 
                    IF cl_null(g_xmdc4_d[l_ac].xmja028) THEN 
                      HIDE OPTION "prog_astm601"                     
                    END IF
                    
                    IF cl_null(g_xmdc4_d[l_ac].xmja029) THEN 
                      HIDE OPTION "prog_astm311"
                    END IF
                    
                    IF cl_null(g_xmdc4_d[l_ac].xmja028) and cl_null(g_xmdc4_d[l_ac].xmja029) THEN 
                      EXIT MENU
                    END IF
                  END IF
                  #150409-00006#3 2015/10/22 s983961 add(e)           
                  #END add-point
                                 #應用 a43 樣板自動產生(Version:4)
               ON ACTION prog_astm601
                  LET g_action_choice="prog_astm601"
                  IF cl_auth_chk_act("prog_astm601") THEN
                     
                     #add-point:ON ACTION prog_astm601 name="menu.detail_show.page4_sub.prog_astm601"
               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               INITIALIZE la_param.* TO NULL
               LET la_param.prog     = 'astm601'
               LET la_param.param[1] = g_xmdc4_d[l_ac].xmja028

               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)
 


                     #END add-point
                     
                  END IF
 
 
 
               #應用 a43 樣板自動產生(Version:4)
               ON ACTION prog_astm311
                  LET g_action_choice="prog_astm311"
                  IF cl_auth_chk_act("prog_astm311") THEN
                     
                     #add-point:ON ACTION prog_astm311 name="menu.detail_show.page4_sub.prog_astm311"
               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               INITIALIZE la_param.* TO NULL
               LET la_param.prog     = 'astm311'
               LET la_param.param[1] = g_xmdc4_d[l_ac].xmja029

               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)
 


                     #END add-point
                     
                  END IF
 
 
 
 
               END MENU
 
 
 
               #add-point:ON ACTION detail_qrystr name="menu.detail_show.page4.detail_qrystr"
               
               #END add-point
 
 
 
 
         
            #add-point:page4自定義行為 name="ui_dialog.body4.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdc5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adbt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[5] = l_ac
               CALL g_idx_group.addAttribute("'5',",l_ac)
               
               #add-point:page5, before row動作 name="ui_dialog.body5.before_row"
                                                                                          
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_current_page = 5
               #顯示單身筆數
               CALL adbt500_idx_chk()
               #add-point:page5自定義行為 name="ui_dialog.body5.before_display"
                                                                          
               #end add-point
      
            #自訂ACTION(detail_show,page_5)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_adbt500_03
            LET g_action_choice="open_adbt500_03"
            IF cl_auth_chk_act("open_adbt500_03") THEN
               
               #add-point:ON ACTION open_adbt500_03 name="menu.detail_show.page5.open_adbt500_03"
               IF l_ac > 0 THEN
                  IF NOT cl_null(g_xmdc6_d[l_ac].xrcdseq) THEN
                     CALL s_transaction_begin()
                     CALL adbt500_03(g_xmda_m.xmdadocno,g_xmdc6_d[l_ac].xrcdseq,'','','','','','')
                     RETURNING l_xmja031,l_xmja032,l_xmja014

                     IF NOT cl_null(l_xmja031) AND NOT cl_null(l_xmja032) AND NOT cl_null(l_xmja014) THEN
                        CALL adbt500_update_xmja014(l_xmja014)
                        UPDATE xmja_t
                           SET xmja031 = l_xmja031,
                               xmja032 = l_xmja032
                         WHERE xmjaent = g_enterprise
                           AND xmjadocno = g_xmda_m.xmdadocno
                           AND xmjaseq = g_xmdc6_d[l_ac].xrcdseq
                        IF NOT s_adbt500_gen_xmdc(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                           CALL s_transaction_end('N','0')
                        END IF
                        IF NOT s_adbt500_gen_xmdd(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                           CALL s_transaction_end('N','0')
                        END IF
                        CALL s_transaction_end('Y','0')
                     ELSE
                        CALL s_transaction_end('N','0')
                     END IF
                     CALL adbt500_b_fill()
                     #CALL adbt500_show()
                  END IF
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION adbt500_04
            LET g_action_choice="adbt500_04"
            IF cl_auth_chk_act("adbt500_04") THEN
               
               #add-point:ON ACTION adbt500_04 name="menu.detail_show.page5.adbt500_04"
               IF l_ac > 0 THEN
                  IF NOT cl_null(g_xmdc6_d[l_ac].xrcdseq) THEN
                     CALL adbt500_04(g_xmda_m.xmdadocno,g_xmdc6_d[l_ac].xrcdseq)
                  END IF
               END IF
               #END add-point
               
            END IF
 
 
 
 
         
            #add-point:page5自定義行為 name="ui_dialog.body5.action"
                                                                        
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdc6_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adbt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[6] = l_ac
               CALL g_idx_group.addAttribute("'6',",l_ac)
               
               #add-point:page6, before row動作 name="ui_dialog.body6.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_current_page = 6
               #顯示單身筆數
               CALL adbt500_idx_chk()
               #add-point:page6自定義行為 name="ui_dialog.body6.before_display"
               CALL adbt500_b_fill()
               CALL adbt500_show()
               CALL cl_set_act_visible("open_adbt500_03", TRUE)
               IF g_xmda_m.xmdastus NOT MATCHES "[NDR]" THEN  
                  CALL cl_set_act_visible("open_adbt500_03", FALSE)
               END IF
               #end add-point
      
            #自訂ACTION(detail_show,page_6)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_adbt500_03
            LET g_action_choice="open_adbt500_03"
            IF cl_auth_chk_act("open_adbt500_03") THEN
               
               #add-point:ON ACTION open_adbt500_03 name="menu.detail_show.page6.open_adbt500_03"
               IF l_ac > 0 THEN
                  IF NOT cl_null(g_xmdc_d[l_ac].xmdcseq) THEN
                     CALL s_transaction_begin()
                     CALL adbt500_03(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq,'','','','','','')
                     RETURNING l_xmja031,l_xmja032,l_xmja014

                     IF NOT cl_null(l_xmja031) AND NOT cl_null(l_xmja032) AND NOT cl_null(l_xmja014) THEN
                        CALL adbt500_update_xmja014(l_xmja014)
                        UPDATE xmja_t
                           SET xmja031 = l_xmja031,
                               xmja032 = l_xmja032
                         WHERE xmjaent = g_enterprise
                           AND xmjadocno = g_xmda_m.xmdadocno
                           AND xmjaseq = g_xmdc_d[l_ac].xmdcseq
                        IF NOT s_adbt500_gen_xmdc(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                           CALL s_transaction_end('N','0')
                        END IF
                        IF NOT s_adbt500_gen_xmdd(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                           CALL s_transaction_end('N','0')
                        END IF
                        CALL s_transaction_end('Y','0')
                     ELSE
                        CALL s_transaction_end('N','0')
                     END IF
                     CALL adbt500_b_fill()
                     #CALL adbt500_show()
                  END IF
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION adbt500_04
            LET g_action_choice="adbt500_04"
            IF cl_auth_chk_act("adbt500_04") THEN
               
               #add-point:ON ACTION adbt500_04 name="menu.detail_show.page6.adbt500_04"
               
               #END add-point
               
            END IF
 
 
 
 
         
            #add-point:page6自定義行為 name="ui_dialog.body6.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_xmdc7_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adbt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[7] = l_ac
               CALL g_idx_group.addAttribute("'7',",l_ac)
               
               #add-point:page7, before row動作 name="ui_dialog.body7.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'7',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_current_page = 7
               #顯示單身筆數
               CALL adbt500_idx_chk()
               #add-point:page7自定義行為 name="ui_dialog.body7.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_7)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_adbt500_03
            LET g_action_choice="open_adbt500_03"
            IF cl_auth_chk_act("open_adbt500_03") THEN
               
               #add-point:ON ACTION open_adbt500_03 name="menu.detail_show.page7.open_adbt500_03"
               IF l_ac > 0 THEN
                  IF NOT cl_null(g_xmdc_d[l_ac].xmdcseq) THEN
                     CALL s_transaction_begin()
                     CALL adbt500_03(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq,'','','','','','')
                     RETURNING l_xmja031,l_xmja032,l_xmja014

                     IF NOT cl_null(l_xmja031) AND NOT cl_null(l_xmja032) AND NOT cl_null(l_xmja014) THEN
                        CALL adbt500_update_xmja014(l_xmja014)
                        UPDATE xmja_t
                           SET xmja031 = l_xmja031,
                               xmja032 = l_xmja032
                         WHERE xmjaent = g_enterprise
                           AND xmjadocno = g_xmda_m.xmdadocno
                           AND xmjaseq = g_xmdc_d[l_ac].xmdcseq
                        IF NOT s_adbt500_gen_xmdc(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                           CALL s_transaction_end('N','0')
                        END IF
                        IF NOT s_adbt500_gen_xmdd(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                           CALL s_transaction_end('N','0')
                        END IF
                        CALL s_transaction_end('Y','0')
                     ELSE
                        CALL s_transaction_end('N','0')
                     END IF
                     CALL adbt500_b_fill()
                     #CALL adbt500_show()
                  END IF
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION adbt500_04
            LET g_action_choice="adbt500_04"
            IF cl_auth_chk_act("adbt500_04") THEN
               
               #add-point:ON ACTION adbt500_04 name="menu.detail_show.page7.adbt500_04"
               
               #END add-point
               
            END IF
 
 
 
 
         
            #add-point:page7自定義行為 name="ui_dialog.body7.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         #160513-00033#4--(S)
         DISPLAY ARRAY g_xmdc8_d TO s_detail8.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adbt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail8")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[8] = l_ac
               CALL g_idx_group.addAttribute("",l_ac)
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail8")
               LET g_current_page = 8
               CALL adbt500_idx_chk()
         
            #add-point:page8自定義行為 name="ui_dialog.body8.action"
            
            #end add-point
         
         END DISPLAY
         #160513-00033#4--(E)
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL adbt500_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL adbt500_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL adbt500_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL adbt500_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            IF lb_first THEN
               LET lb_first = FALSE   
            END IF
            NEXT FIELD xmjaseq
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL adbt500_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL adbt500_set_act_visible()   
            CALL adbt500_set_act_no_visible()
            IF NOT (g_xmda_m.xmdadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " xmdaent = " ||g_enterprise|| " AND",
                                  " xmdadocno = '", g_xmda_m.xmdadocno, "' "
 
               #填到對應位置
               CALL adbt500_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
               INITIALIZE g_wc2_table6 TO NULL
 
               INITIALIZE g_wc2_table7 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmda_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdc_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtic_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmdd_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmja_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmdb_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xrcd_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtie_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
                  OR NOT cl_null(g_wc2_table6)
 
                  OR NOT cl_null(g_wc2_table7)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF
 
                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL adbt500_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
               INITIALIZE g_wc2_table6 TO NULL
 
               INITIALIZE g_wc2_table7 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xmda_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xmdc_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtic_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmdd_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmja_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xmdb_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xrcd_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtie_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
                  OR NOT cl_null(g_wc2_table6)
 
                  OR NOT cl_null(g_wc2_table7)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF
 
                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL adbt500_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL adbt500_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL adbt500_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL adbt500_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt500_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL adbt500_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt500_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL adbt500_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt500_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL adbt500_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt500_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL adbt500_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adbt500_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_xmdc_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_xmdc2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_xmdc3_d)
                  LET g_export_id[3]   = "s_detail3"
                  LET g_export_node[4] = base.typeInfo.create(g_xmdc4_d)
                  LET g_export_id[4]   = "s_detail4"
                  LET g_export_node[5] = base.typeInfo.create(g_xmdc5_d)
                  LET g_export_id[5]   = "s_detail5"
                  LET g_export_node[6] = base.typeInfo.create(g_xmdc6_d)
                  LET g_export_id[6]   = "s_detail6"
                  LET g_export_node[7] = base.typeInfo.create(g_xmdc7_d)
                  LET g_export_id[7]   = "s_detail7"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  LET g_export_node[8] = base.typeInfo.create(g_xmdc8_d)      #160513-00033#4
                  LET g_export_id[8]   = "s_detail8"                          #160513-00033#4
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xmdcseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL adbt500_modify()
               #add-point:ON ACTION modify name="menu.modify"
               #160818-00017#6 -s by 08172
               CALL adbt500_set_act_visible()
               CALL adbt500_set_act_no_visible()
               #160818-00017#6 -e by 08172                                                                          
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL adbt500_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               #160818-00017#6 -s by 08172
               CALL adbt500_set_act_visible()
               CALL adbt500_set_act_no_visible()
               #160818-00017#6 -e by 08172                                                                                  
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_apmi004_01
            LET g_action_choice="open_apmi004_01"
            IF cl_auth_chk_act("open_apmi004_01") THEN
               
               #add-point:ON ACTION open_apmi004_01 name="menu.open_apmi004_01"
               #若輸入供應商的法人類型為'2:一次性交易'或是'4:內部員工'時，則自動串apmi004_01
               #維護一次性交易對項基本資料，維護完基本資料後會回傳一個一次性交易對象識別碼，
               #將識別碼值預設給xmda028欄位
               IF NOT cl_null(g_xmda_m.xmda004) THEN
                  LET l_pmaa004 = ''
                  SELECT pmaa004 INTO l_pmaa004 FROM pmaa_t WHERE pmaaent = g_enterprise AND pmaa001 = g_xmda_m.xmda004
                  IF l_pmaa004 = '2' THEN   #一次性交易對象
                     CALL apmi004_01('1',g_xmda_m.xmda028,g_xmda_m.xmda004,g_xmda_m.xmdadocno) RETURNING g_xmda_m.xmda028
                  END IF
                  IF l_pmaa004 = '4' THEN   #內部員工
                     CALL apmi004_01('2',g_xmda_m.xmda028,g_xmda_m.xmda004,g_xmda_m.xmdadocno) RETURNING g_xmda_m.xmda028
                  END IF                      
               END IF   
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_s_pay
            LET g_action_choice="open_s_pay"
            IF cl_auth_chk_act("open_s_pay") THEN
               
               #add-point:ON ACTION open_s_pay name="menu.open_s_pay"
#               DECLARE adbt500_pay_cl1 CURSOR FOR
#               SELECT rtiadocno 
#                 FROM rtia_t
#                WHERE rtiaent = g_enterprise
#                  AND rtia007 = g_xmda_m.xmdadocno
#                  AND rtiastus <> 'X'
#               OPEN adbt500_pay_cl1
#               FETCH adbt500_pay_cl1 INTO l_rtiadocno
#               CLOSE adbt500_pay_cl1
               IF NOT cl_null(g_xmda_m.xmdadocno) THEN
                  CALL s_pay('xmda_t',1,g_xmda_m.xmdadocno)
                  CALL adbt500_display_xmda213()
                  CALL adbt500_b_fill()
                  LET g_action_choice= ""
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION touch_page5
            LET g_action_choice="touch_page5"
            IF cl_auth_chk_act("touch_page5") THEN
               
               #add-point:ON ACTION touch_page5 name="menu.touch_page5"
               LET g_touch = 5   #150915-00006#1 20150915 add by beckxie
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL adbt500_delete()
               #add-point:ON ACTION delete name="menu.delete"
               #160818-00017#6 -s by 08172
               CALL adbt500_set_act_visible()
               CALL adbt500_set_act_no_visible()
               #160818-00017#6 -e by 08172                                                                                 
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL adbt500_insert()
               #add-point:ON ACTION insert name="menu.insert"
                                                                                          
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_s_pay09
            LET g_action_choice="open_s_pay09"
            IF cl_auth_chk_act("open_s_pay09") THEN
               
               #add-point:ON ACTION open_s_pay09 name="menu.open_s_pay09"
#               DECLARE adbt500_pay_cl2 CURSOR FOR
#               SELECT rtiadocno 
#                 FROM rtia_t
#                WHERE rtiaent = g_enterprise
#                  AND rtia007 = g_xmda_m.xmdadocno
#                  AND rtiastus <> 'X'
#               OPEN adbt500_pay_cl2
#               FETCH adbt500_pay_cl2 INTO l_rtiadocno
#               CLOSE adbt500_pay_cl2
               IF NOT cl_null(g_xmda_m.xmdadocno) THEN
                  CALL s_pay_09(g_xmda_m.xmdadocno)
                  LET g_action_choice= ""
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               LET g_rep_wc = " xmdaent = '",g_enterprise,"' AND xmdadocno = '",g_xmda_m.xmdadocno,"' "
               #END add-point
               &include "erp/adb/adbt500_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               LET g_rep_wc = " xmdaent = '",g_enterprise,"' AND xmdadocno = '",g_xmda_m.xmdadocno,"' "
               #END add-point
               &include "erp/adb/adbt500_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL adbt500_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
                                                                                          
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION gift_adb
            LET g_action_choice="gift_adb"
            IF cl_auth_chk_act("gift_adb") THEN
               
               #add-point:ON ACTION gift_adb name="menu.gift_adb"
               #LET l_cnt = 0
               #LET l_cnt = g_xmdc4_d.getLength()   #160630-00010#1 20160630 add by beckxie
               CALL s_gift_adb('1',g_xmda_m.xmdadocno,g_xmda_m.xmdasite) #1.订单 2.出货单
               #160630-00010#1 20160630 add by beckxie---S
               CALL adbt500_b_fill()
               ##若返物有增加資料至xmja_t的話，也需產生xmdc_t,xmdd_t
               #IF ( g_xmdc4_d.getLength() - l_cnt ) > 0 THEN
               #   FOR l_i = (l_cnt+1) TO g_xmdc4_d.getLength()
               #      CALL s_transaction_begin()
               #      IF NOT s_adbt500_gen_xmdc(g_xmda_m.xmdadocno,g_xmdc4_d[l_i].xmjaseq)  THEN
               #         CALL s_transaction_end('N','0')
               #      END IF
               #      IF NOT s_adbt500_gen_xmdd(g_xmda_m.xmdadocno,g_xmdc4_d[l_i].xmjaseq) THEN
               #         CALL s_transaction_end('N','0')
               #      END IF 
               #      CALL s_transaction_end('Y','0')
               #   END FOR
               #END IF
               #CALL adbt500_b_fill()
               #160630-00010#1 20160630 add by beckxie---E
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_adbt500_02
            LET g_action_choice="open_adbt500_02"
            IF cl_auth_chk_act("open_adbt500_02") THEN
               
               #add-point:ON ACTION open_adbt500_02 name="menu.open_adbt500_02"
               CALL adbt500_02(g_xmda_m.xmdadocno)
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL adbt500_query()
               #add-point:ON ACTION query name="menu.query"
               CALL g_curr_diag.setCurrentRow("s_detail8",1)   #160513-00033#4                                                                           
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
               CALL g_curr_diag.setCurrentRow("s_detail5",1)
               CALL g_curr_diag.setCurrentRow("s_detail6",1)
               CALL g_curr_diag.setCurrentRow("s_detail7",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION touch_page2
            LET g_action_choice="touch_page2"
            IF cl_auth_chk_act("touch_page2") THEN
               
               #add-point:ON ACTION touch_page2 name="menu.touch_page2"
               LET g_touch = 2   #150915-00006#1 20150915 add by beckxie
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_price
            LET g_action_choice="modify_price"
            IF cl_auth_chk_act("modify_price") THEN
               
               #add-point:ON ACTION modify_price name="menu.modify_price"
               CALL adbt500_modify_price()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_xmdb
            LET g_action_choice="open_xmdb"
            IF cl_auth_chk_act("open_xmdb") THEN
               
               #add-point:ON ACTION open_xmdb name="menu.open_xmdb"
               CALL adbt500_open_xmdb()
               LET INT_FLAG = FALSE
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION touch_page1
            LET g_action_choice="touch_page1"
            IF cl_auth_chk_act("touch_page1") THEN
               
               #add-point:ON ACTION touch_page1 name="menu.touch_page1"
               LET g_touch = 1   #150915-00006#1 20150915 add by beckxie
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION touch_page4
            LET g_action_choice="touch_page4"
            IF cl_auth_chk_act("touch_page4") THEN
               
               #add-point:ON ACTION touch_page4 name="menu.touch_page4"
               LET g_touch = 4   #150915-00006#1 20150915 add by beckxie
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION gen_astt620
            LET g_action_choice="gen_astt620"
            IF cl_auth_chk_act("gen_astt620") THEN
               
               #add-point:ON ACTION gen_astt620 name="menu.gen_astt620"
               #160513-00033#4--(S)
               IF g_xmda_m.xmdastus = 'N' AND NOT cl_null(g_xmda_m.xmdadocno) THEN
                  LET l_success = TRUE
                  CALL s_transaction_begin()
                  CALL s_tax_recount(g_xmda_m.xmdadocno)　RETURNING g_xmda_m.xmda041,g_xmda_m.xmda043,g_xmda_m.xmda042,l_no_use,l_no_use,l_no_use
                  IF cl_null(g_xmda_m.xmda041) THEN LET g_xmda_m.xmda041 = 0 END IF
                  IF cl_null(g_xmda_m.xmda042) THEN LET g_xmda_m.xmda042 = 0 END IF
                  IF cl_null(g_xmda_m.xmda043) THEN LET g_xmda_m.xmda043 = 0 END IF
                  UPDATE xmda_t SET xmda041 = g_xmda_m.xmda041,xmda042 = g_xmda_m.xmda042,xmda043 = g_xmda_m.xmda043
                   WHERE xmdaent = g_enterprise AND xmdadocno = g_xmda_m.xmdadocno 
                  #1.产生现返资料,删除现返也在元件处理,检查是否有自动输入的资料有的话汇入
                  CALL s_adbt500_cash_back_gen('1',g_xmda_m.xmdadocno) RETURNING g_sub_success
                  #2.重计单头金额
                  CALL s_tax_recount(g_xmda_m.xmdadocno)　RETURNING g_xmda_m.xmda041,g_xmda_m.xmda043,g_xmda_m.xmda042,l_no_use,l_no_use,l_no_use
                  IF cl_null(g_xmda_m.xmda041) THEN LET g_xmda_m.xmda041 = 0 END IF
                  IF cl_null(g_xmda_m.xmda042) THEN LET g_xmda_m.xmda042 = 0 END IF
                  IF cl_null(g_xmda_m.xmda043) THEN LET g_xmda_m.xmda043 = 0 END IF
                  UPDATE xmda_t SET xmda041 = g_xmda_m.xmda041,xmda042 = g_xmda_m.xmda042,xmda043 = g_xmda_m.xmda043
                   WHERE xmdaent = g_enterprise AND xmdadocno = g_xmda_m.xmdadocno 
                  IF SQLCA.sqlcode THEN
                     LET l_success = FALSE
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "xmda_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()                     
                  END IF
                  
                  DECLARE s_adbt540_xrcd_cs CURSOR FOR
                   SELECT xrcdseq,xrcd103,xrcd104,xrcd105
                     FROM xrcd_t
                    WHERE xrcdent = g_enterprise
                      AND xrcddocno =  g_xmda_m.xmdadocno
               
                  FOREACH s_adbt540_xrcd_cs INTO l_xrcdseq,l_xrcd103,l_xrcd104,l_xrcd105
                     UPDATE xmdc_t SET xmdc046 = l_xrcd103,xmdc048 = l_xrcd104,xmdc047 = l_xrcd105
                      WHERE xmdcent = g_enterprise
                        AND xmdcdocno = g_xmda_m.xmdadocno AND xmdcseq = l_xrcdseq
                     IF SQLCA.sqlcode THEN
                        LET l_success = FALSE
                        CALL s_transaction_end('N','0')
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.extend = 'update xmdl_t'
                        LET g_errparam.code   = SQLCA.sqlcode
                        LET g_errparam.popup  = TRUE
                        CALL cl_err()
                     END IF
                  END FOREACH
                  
                  IF l_success THEN
                     CALL s_transaction_end('Y','0')
                  ELSE
                     CALL s_transaction_end('N','0')
                  END IF
                  SELECT count(*) INTO l_cnt
                    FROM xmdc_t
                   WHERE xmdcent = g_enterprise
                     AND xmdcdocno = g_xmda_m.xmdadocno
                     AND xmdcseq > 9000
                  IF l_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'adb-00438'
                  ELSE
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'adb-00437'
                  END IF
                  CALL cl_ask_pressanykey(g_errparam.code)
               END IF
               CALL adbt500_b_fill()
               #160513-00033#4--(E)
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION touch_page3
            LET g_action_choice="touch_page3"
            IF cl_auth_chk_act("touch_page3") THEN
               
               #add-point:ON ACTION touch_page3 name="menu.touch_page3"
               LET g_touch = 3   #150915-00006#1 20150915 add by beckxie
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_aprt565_adbt600
            LET g_action_choice="prog_aprt565_adbt600"
            IF cl_auth_chk_act("prog_aprt565_adbt600") THEN
               
               #add-point:ON ACTION prog_aprt565_adbt600 name="menu.prog_aprt565_adbt600"
               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               #150409-00006#3 20150828 s983961 add(s)
               IF NOT cl_null(g_xmda_m.xmda008) THEN
                 INITIALIZE la_param.* TO NULL
                 IF g_xmda_m.xmda007 = 8 THEN
                 LET la_param.prog     = 'aprt565'
                 LET la_param.param[1] = g_xmda_m.xmda008
                 LET ls_js = util.JSON.stringify(la_param)
                 CALL cl_cmdrun_wait(ls_js)
                 END IF
                 
                 IF g_xmda_m.xmda007 = 5 THEN
                 LET la_param.prog     = 'adbt600'
                 LET la_param.param[2] = g_xmda_m.xmda008
                 LET ls_js = util.JSON.stringify(la_param)
                 CALL cl_cmdrun_wait(ls_js)
                 END IF
                 
                 IF g_xmda_m.xmda007 = 1 THEN 
                   SELECT COUNT(*) INTO l_cn
                     FROM xmdk_t
                    WHERE xmdkdocno = g_xmda_m.xmda008
                      AND xmdk000= 6
                      AND xmdkent = g_enterprise
                      AND xmdksite = g_site
                   IF l_cn > 0 THEN 
                     LET la_param.prog     = 'adbt600'
                     LET la_param.param[2] = g_xmda_m.xmda008
                     LET ls_js = util.JSON.stringify(la_param)
                     CALL cl_cmdrun_wait(ls_js)
                   ELSE    
                     LET la_param.prog     = 'aprt565'
                     LET la_param.param[1] = g_xmda_m.xmda008
                     LET ls_js = util.JSON.stringify(la_param)
                     CALL cl_cmdrun_wait(ls_js)
                   END IF
                 END IF     
               END IF               
               #150409-00006#3 20150828 s983961 add(e)

               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_xmda002
            LET g_action_choice="prog_xmda002"
            IF cl_auth_chk_act("prog_xmda002") THEN
               
               #add-point:ON ACTION prog_xmda002 name="menu.prog_xmda002"
               #+ 此段落由子樣板a45產生
               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",g_xmda_m.xmda002)


               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL adbt500_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL adbt500_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL adbt500_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_xmda_m.xmdadocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="adbt500.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION adbt500_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_where           STRING    
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
     
   IF cl_null(g_wc) THEN
      #LET g_wc = " AND xmda005 IN ('1','2','3','6') AND xmda007 IN ('1','5','8') "     #160922-00032#6 Mark By Ken 161012
      LET g_wc = " AND xmda005 IN ('1','2','3','6') AND xmda007 IN ('1','5','8','10') " #160922-00032#6 Add By Ken 161012
   ELSE
      #LET g_wc = g_wc," AND xmda005 IN ('1','2','3','6') AND xmda007 IN ('1','5','8') "      #160922-00032#6 Mark By Ken 161012 
      LET g_wc = g_wc," AND xmda005 IN ('1','2','3','6') AND xmda007 IN ('1','5','8','10') "  #160922-00032#6 Add By Ken 161012
   END IF
   CALL s_aooi500_sql_where(g_prog,'xmdasite') RETURNING l_where
   LET g_wc = g_wc," AND ",l_where
   #160510-00043#2--(S)
   IF NOT cl_null(g_slip_wc) THEN
      LET g_wc = g_wc," AND ",g_slip_wc
      LET l_wc  = g_wc.trim()
   END IF   
   #160510-00043#2--(E)
   LET l_wc  = g_wc.trim()
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xmdadocno ",
                      " FROM xmda_t ",
                      " ",
                      " LEFT JOIN xmdc_t ON xmdcent = xmdaent AND xmdadocno = xmdcdocno ", "  ",
                      #add-point:browser_fill段sql(xmdc_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
                      " LEFT JOIN rtic_t ON rticent = xmdaent AND xmdadocno = rticdocno", "  ",
                      #add-point:browser_fill段sql(rtic_t1) name="browser_fill.cnt.join.rtic_t1"
                      "  AND rticseq = xmdcseq",
                      #end add-point
 
                      " LEFT JOIN xmdd_t ON xmddent = xmdaent AND xmdadocno = xmdddocno", "  ",
                      #add-point:browser_fill段sql(xmdd_t1) name="browser_fill.cnt.join.xmdd_t1"
                      "  AND xmddseq = xmdcseq",
                      #end add-point
 
                      " LEFT JOIN xmja_t ON xmjaent = xmdaent AND xmdadocno = xmjadocno", "  ",
                      #add-point:browser_fill段sql(xmja_t1) name="browser_fill.cnt.join.xmja_t1"
                      "  AND xmjaseq = xmdcseq",
                      #end add-point
 
                      " LEFT JOIN xmdb_t ON xmdbent = xmdaent AND xmdadocno = xmdbdocno", "  ",
                      #add-point:browser_fill段sql(xmdb_t1) name="browser_fill.cnt.join.xmdb_t1"
                      
                      #end add-point
 
                      " LEFT JOIN xrcd_t ON xrcdent = xmdaent AND xmdadocno = xrcddocno", "  ",
                      #add-point:browser_fill段sql(xrcd_t1) name="browser_fill.cnt.join.xrcd_t1"
                      "  AND xrcdseq = xmdcseq",
                      #end add-point
 
                      " LEFT JOIN rtie_t ON rtieent = xmdaent AND xmdadocno = rtiedocno", "  ",
                      #add-point:browser_fill段sql(rtie_t1) name="browser_fill.cnt.join.rtie_t1"
                      "  AND rtieseq = xmdcseq",
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
 
 
                      " WHERE xmdaent = " ||g_enterprise|| " AND xmdcent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xmda_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xmdadocno ",
                      " FROM xmda_t ", 
                      "  ",
                      "  ",
                      " WHERE xmdaent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("xmda_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
 
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
                  
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xmda_m.* TO NULL
      CALL g_xmdc_d.clear()        
      CALL g_xmdc2_d.clear() 
      CALL g_xmdc3_d.clear() 
      CALL g_xmdc4_d.clear() 
      CALL g_xmdc5_d.clear() 
      CALL g_xmdc6_d.clear() 
      CALL g_xmdc7_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      CALL g_xmdc8_d.clear()     #160513-00033#4
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xmdadocno,t0.xmdadocdt,t0.xmda001,t0.xmda002,t0.xmda003,t0.xmda004 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmdastus,t0.xmdadocno,t0.xmdadocdt,t0.xmda001,t0.xmda002,t0.xmda003, 
          t0.xmda004,t1.ooag011 ,t2.ooefl003 ,t3.pmaal004 ",
                  " FROM xmda_t t0",
                  "  ",
                  "  LEFT JOIN xmdc_t ON xmdcent = xmdaent AND xmdadocno = xmdcdocno ", "  ", 
                  #add-point:browser_fill段sql(xmdc_t1) name="browser_fill.join.xmdc_t1"
                  
                  #end add-point
                  "  LEFT JOIN rtic_t ON rticent = xmdaent AND xmdadocno = rticdocno", "  ", 
                  #add-point:browser_fill段sql(rtic_t1) name="browser_fill.join.rtic_t1"
               "  AND rticseq = xmdcseq",
                  #end add-point
 
                  "  LEFT JOIN xmdd_t ON xmddent = xmdaent AND xmdadocno = xmdddocno", "  ", 
                  #add-point:browser_fill段sql(xmdd_t1) name="browser_fill.join.xmdd_t1"
               "  AND xmddseq = xmdcseq",
                  #end add-point
 
                  "  LEFT JOIN xmja_t ON xmjaent = xmdaent AND xmdadocno = xmjadocno", "  ", 
                  #add-point:browser_fill段sql(xmja_t1) name="browser_fill.join.xmja_t1"
               "  AND xmjaseq = xmdcseq",
                  #end add-point
 
                  "  LEFT JOIN xmdb_t ON xmdbent = xmdaent AND xmdadocno = xmdbdocno", "  ", 
                  #add-point:browser_fill段sql(xmdb_t1) name="browser_fill.join.xmdb_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN xrcd_t ON xrcdent = xmdaent AND xmdadocno = xrcddocno", "  ", 
                  #add-point:browser_fill段sql(xrcd_t1) name="browser_fill.join.xrcd_t1"
               "  AND xrcdseq = xmdcseq",
                  #end add-point
 
                  "  LEFT JOIN rtie_t ON rtieent = xmdaent AND xmdadocno = rtiedocno", "  ", 
                  #add-point:browser_fill段sql(rtie_t1) name="browser_fill.join.rtie_t1"
               "  AND rtieseq = xmdcseq",
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
 
 
                                 " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmda002  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmda003 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.xmda004 AND t3.pmaal002='"||g_dlang||"' ",
 
                  " WHERE t0.xmdaent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xmda_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xmdastus,t0.xmdadocno,t0.xmdadocdt,t0.xmda001,t0.xmda002,t0.xmda003, 
          t0.xmda004,t1.ooag011 ,t2.ooefl003 ,t3.pmaal004 ",
                  " FROM xmda_t t0",
                  "  ",
                                 " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.xmda002  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.xmda003 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.xmda004 AND t3.pmaal002='"||g_dlang||"' ",
 
                  " WHERE t0.xmdaent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("xmda_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   #LET g_sql = g_sql," AND rtic001 = '1'"   --訂單
   #end add-point
   LET g_sql = g_sql, " ORDER BY xmdadocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
                  
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"xmda_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
                  
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xmdadocno,g_browser[g_cnt].b_xmdadocdt, 
          g_browser[g_cnt].b_xmda001,g_browser[g_cnt].b_xmda002,g_browser[g_cnt].b_xmda003,g_browser[g_cnt].b_xmda004, 
          g_browser[g_cnt].b_xmda002_desc,g_browser[g_cnt].b_xmda003_desc,g_browser[g_cnt].b_xmda004_desc 
 
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
                                    
         #end add-point
      
         #遮罩相關處理
         CALL adbt500_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "C"
            LET g_browser[g_cnt].b_statepic = "stus/16/closed.png"
         WHEN "H"
            LET g_browser[g_cnt].b_statepic = "stus/16/hold.png"
         WHEN "UH"
            LET g_browser[g_cnt].b_statepic = "stus/16/unhold.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xmdadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
                  
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="adbt500.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION adbt500_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
                  
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_xmda_m.xmdadocno = g_browser[g_current_idx].b_xmdadocno   
 
   EXECUTE adbt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdasite,g_xmda_m.xmdadocdt, 
       g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmda005,g_xmda_m.xmda202,g_xmda_m.xmda023,g_xmda_m.xmda004, 
       g_xmda_m.xmda200,g_xmda_m.xmda201,g_xmda_m.xmdastus,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda021, 
       g_xmda_m.xmda022,g_xmda_m.xmda203,g_xmda_m.xmda027,g_xmda_m.xmda024,g_xmda_m.xmda002,g_xmda_m.xmda003, 
       g_xmda_m.xmdaunit,g_xmda_m.xmda211,g_xmda_m.xmda210,g_xmda_m.xmda209,g_xmda_m.xmda208,g_xmda_m.xmda204, 
       g_xmda_m.xmda205,g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda206, 
       g_xmda_m.xmda207,g_xmda_m.xmda020,g_xmda_m.xmda036,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda009, 
       g_xmda_m.xmda010,g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013, 
       g_xmda_m.xmda035,g_xmda_m.xmda213,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid, 
       g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid, 
       g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt,g_xmda_m.xmda034,g_xmda_m.xmda006,g_xmda_m.xmda033, 
       g_xmda_m.xmda017,g_xmda_m.xmda019,g_xmda_m.xmda018,g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045, 
       g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043,g_xmda_m.xmdasite_desc,g_xmda_m.xmda202_desc, 
       g_xmda_m.xmda023_desc,g_xmda_m.xmda004_desc,g_xmda_m.xmda200_desc,g_xmda_m.xmda201_desc,g_xmda_m.xmda021_desc, 
       g_xmda_m.xmda022_desc,g_xmda_m.xmda203_desc,g_xmda_m.xmda027_desc,g_xmda_m.xmda024_desc,g_xmda_m.xmda002_desc, 
       g_xmda_m.xmda003_desc,g_xmda_m.xmdaunit_desc,g_xmda_m.xmda211_desc,g_xmda_m.xmda210_desc,g_xmda_m.xmda209_desc, 
       g_xmda_m.xmda208_desc,g_xmda_m.xmda204_desc,g_xmda_m.xmda032_desc,g_xmda_m.xmda206_desc,g_xmda_m.xmda207_desc, 
       g_xmda_m.xmda020_desc,g_xmda_m.xmda036_desc,g_xmda_m.xmda009_desc,g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc, 
       g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp_desc, 
       g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmda034_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc 
 
   
   CALL adbt500_xmda_t_mask()
   CALL adbt500_show()
      
END FUNCTION
 
{</section>}
 
{<section id="adbt500.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION adbt500_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
                  
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
                  
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail6",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail7",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   #160513-00033#4--(S)
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail8",g_detail_idx) 
   END IF        
   #160513-00033#4--(E)
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION adbt500_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
                  
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xmdadocno = g_xmda_m.xmdadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION adbt500_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   DEFINE l_sql       STRING
   DEFINE l_success   LIKE type_t.num5  
   DEFINE l_pmaa027   LIKE pmaa_t.pmaa027   
   DEFINE l_where     STRING   #160809-00015#1 160829 by lori add
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xmda_m.* TO NULL
   CALL g_xmdc_d.clear()        
   CALL g_xmdc2_d.clear() 
   CALL g_xmdc3_d.clear() 
   CALL g_xmdc4_d.clear() 
   CALL g_xmdc5_d.clear() 
   CALL g_xmdc6_d.clear() 
   CALL g_xmdc7_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
   INITIALIZE g_wc2_table5 TO NULL
 
   INITIALIZE g_wc2_table6 TO NULL
 
   INITIALIZE g_wc2_table7 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   CALL g_xmdc8_d.clear()              #160513-00033#4
   INITIALIZE g_wc2_table8 TO NULL     #160513-00033#4
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xmdasite,xmdadocdt,xmdadocno,xmda001,xmda005,xmda202,xmda023,xmda004, 
          xmda200,xmda201,xmdastus,xmda007,xmda008,xmda021,xmda022,xmda203,xmda027,xmda024,xmda002,xmda003, 
          xmdaunit,xmda211,xmda210,xmda209,xmda208,xmda204,xmda205,xmda032,xmda071,xmda025,xmda025_desc, 
          oofb017,xmda026,xmda026_desc,oofb017_1,xmda206,xmda207,xmda020,xmda036,xmda048,xmda049,xmda009, 
          xmda010,xmda015,xmda016,xmda011,xmda011_desc,xmda012,xmda013,xmda035,xmda035_desc,xmda213, 
          xmda039,xmda041,xmda042,xmdaownid,xmdaowndp,xmdacrtid,xmdacrtdp,xmdacrtdt,xmdamodid,xmdamoddt, 
          xmdacnfid,xmdacnfdt,xmda034,xmda006,xmda033,xmda017,xmda019,xmda018,xmda030,xmda031,xmda045, 
          xmda046,xmda047,xmda028
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            CALL cl_set_combo_scc_part('xmda005','2063','1,2,3,6')                                                              
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<xmdacrtdt>>----
         AFTER FIELD xmdacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xmdamoddt>>----
         AFTER FIELD xmdamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmdacnfdt>>----
         AFTER FIELD xmdacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xmdapstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.xmdasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdasite
            #add-point:ON ACTION controlp INFIELD xmdasite name="construct.c.xmdasite"
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   #LET g_qryparam.arg1 = g_site
			   #LET g_qryparam.arg2 = '8'
            #CALL q_ooed004_3()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmdasite',g_site,'c') #150308-00001#2  By sakura add 'c' 
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO xmdasite  #顯示到畫面上
            
            NEXT FIELD xmdasite                     #返回原欄位                                                     
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdasite
            #add-point:BEFORE FIELD xmdasite name="construct.b.xmdasite"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdasite
            
            #add-point:AFTER FIELD xmdasite name="construct.a.xmdasite"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdadocdt
            #add-point:BEFORE FIELD xmdadocdt name="construct.b.xmdadocdt"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdadocdt
            
            #add-point:AFTER FIELD xmdadocdt name="construct.a.xmdadocdt"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdadocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdadocdt
            #add-point:ON ACTION controlp INFIELD xmdadocdt name="construct.c.xmdadocdt"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.xmdadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdadocno
            #add-point:ON ACTION controlp INFIELD xmdadocno name="construct.c.xmdadocno"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #160809-00015#1 160829 by lori mark---(S)
            ##160510-00043#2--(S)
            #IF NOT cl_null(g_slip_wc) THEN
            #   LET g_qryparam.where = g_slip_wc
            #END IF   
            ##160510-00043#2--(E)
            #160809-00015#1 160829 by lori mark---(E)
            
            #160809-00015#1 160829 by lori add---(S)
            LET l_where = ""
            LET l_where = s_aooi500_sql_where(g_prog,'xmdasite')
            
            IF NOT cl_null(g_slip_wc) THEN
               LET l_where = l_where," AND ",g_slip_wc
            END IF
            LET g_qryparam.where = l_where
            #160809-00015#1 160829 by lori add---(E)
            
            CALL q_xmdadocno_5()                    
            DISPLAY g_qryparam.return1 TO xmdadocno 
                                                     
            NEXT FIELD xmdadocno 
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdadocno
            #add-point:BEFORE FIELD xmdadocno name="construct.b.xmdadocno"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdadocno
            
            #add-point:AFTER FIELD xmdadocno name="construct.a.xmdadocno"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda001
            #add-point:BEFORE FIELD xmda001 name="construct.b.xmda001"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda001
            
            #add-point:AFTER FIELD xmda001 name="construct.a.xmda001"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda001
            #add-point:ON ACTION controlp INFIELD xmda001 name="construct.c.xmda001"
                                                                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda005
            #add-point:BEFORE FIELD xmda005 name="construct.b.xmda005"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda005
            
            #add-point:AFTER FIELD xmda005 name="construct.a.xmda005"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda005
            #add-point:ON ACTION controlp INFIELD xmda005 name="construct.c.xmda005"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.xmda202
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda202
            #add-point:ON ACTION controlp INFIELD xmda202 name="construct.c.xmda202"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #161006-00008#5-add(s)
            IF s_aooi500_setpoint(g_prog,'xmda202') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmda202',g_site,'c')
               CALL q_ooef001_24()                   
            ELSE
            #161006-00008#5-add(e)
               LET g_qryparam.where = "ooef305 = 'Y'"
               CALL q_ooef001()                           #呼叫開窗
            END IF    #161006-00008#5-add
            DISPLAY g_qryparam.return1 TO xmda202  #顯示到畫面上
            NEXT FIELD xmda202                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda202
            #add-point:BEFORE FIELD xmda202 name="construct.b.xmda202"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda202
            
            #add-point:AFTER FIELD xmda202 name="construct.a.xmda202"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda023
            #add-point:ON ACTION controlp INFIELD xmda023 name="construct.c.xmda023"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
		      LET g_qryparam.arg1 = "1"
            CALL q_oojd001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda023  #顯示到畫面上

            NEXT FIELD xmda023                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda023
            #add-point:BEFORE FIELD xmda023 name="construct.b.xmda023"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda023
            
            #add-point:AFTER FIELD xmda023 name="construct.a.xmda023"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda004
            #add-point:ON ACTION controlp INFIELD xmda004 name="construct.c.xmda004"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE	
			   LET g_qryparam.where = "NOT (pmaa002 = '2' AND pmaa230 = '2')"
			   LET g_qryparam.arg1 = 'ALL'
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda004        #顯示到畫面上

            NEXT FIELD xmda004                           #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda004
            #add-point:BEFORE FIELD xmda004 name="construct.b.xmda004"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda004
            
            #add-point:AFTER FIELD xmda004 name="construct.a.xmda004"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda200
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda200
            #add-point:ON ACTION controlp INFIELD xmda200 name="construct.c.xmda200"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_20()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda200  #顯示到畫面上
            NEXT FIELD xmda200                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda200
            #add-point:BEFORE FIELD xmda200 name="construct.b.xmda200"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda200
            
            #add-point:AFTER FIELD xmda200 name="construct.a.xmda200"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda201
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda201
            #add-point:ON ACTION controlp INFIELD xmda201 name="construct.c.xmda201"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda201  #顯示到畫面上
            NEXT FIELD xmda201                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda201
            #add-point:BEFORE FIELD xmda201 name="construct.b.xmda201"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda201
            
            #add-point:AFTER FIELD xmda201 name="construct.a.xmda201"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdastus
            #add-point:BEFORE FIELD xmdastus name="construct.b.xmdastus"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdastus
            
            #add-point:AFTER FIELD xmdastus name="construct.a.xmdastus"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdastus
            #add-point:ON ACTION controlp INFIELD xmdastus name="construct.c.xmdastus"
                                                                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda007
            #add-point:BEFORE FIELD xmda007 name="construct.b.xmda007"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda007
            
            #add-point:AFTER FIELD xmda007 name="construct.a.xmda007"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda007
            #add-point:ON ACTION controlp INFIELD xmda007 name="construct.c.xmda007"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.xmda008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda008
            #add-point:ON ACTION controlp INFIELD xmda008 name="construct.c.xmda008"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_xmda008()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda008  #顯示到畫面上

            NEXT FIELD xmda008                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda008
            #add-point:BEFORE FIELD xmda008 name="construct.b.xmda008"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda008
            
            #add-point:AFTER FIELD xmda008 name="construct.a.xmda008"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda021
            #add-point:ON ACTION controlp INFIELD xmda021 name="construct.c.xmda021"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg2 = 'ALL'
            CALL q_pmac002_5()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda021    #顯示到畫面上
            

            NEXT FIELD xmda021                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda021
            #add-point:BEFORE FIELD xmda021 name="construct.b.xmda021"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda021
            
            #add-point:AFTER FIELD xmda021 name="construct.a.xmda021"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda022
            #add-point:ON ACTION controlp INFIELD xmda022 name="construct.c.xmda022"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg2 = 'ALL'
            CALL q_pmac002_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda022  #顯示到畫面上
               

            NEXT FIELD xmda022                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda022
            #add-point:BEFORE FIELD xmda022 name="construct.b.xmda022"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda022
            
            #add-point:AFTER FIELD xmda022 name="construct.a.xmda022"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda203
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda203
            #add-point:ON ACTION controlp INFIELD xmda203 name="construct.c.xmda203"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #lori522612  150121  add ----------------------(S)
            #LET g_qryparam.arg1 = g_xmda_m.xmda004
            #LET g_qryparam.arg2 = '3'
            #CALL q_pmac002_9()                    #呼叫開窗
            LET g_qryparam.arg2 = 'ALL'
            CALL q_pmac002_7()
            #lori522612  150121  add ----------------------(E)
            
            DISPLAY g_qryparam.return1 TO xmda203  #顯示到畫面上
            NEXT FIELD xmda203                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda203
            #add-point:BEFORE FIELD xmda203 name="construct.b.xmda203"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda203
            
            #add-point:AFTER FIELD xmda203 name="construct.a.xmda203"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda027
            #add-point:BEFORE FIELD xmda027 name="construct.b.xmda027"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda027
            
            #add-point:AFTER FIELD xmda027 name="construct.a.xmda027"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda027
            #add-point:ON ACTION controlp INFIELD xmda027 name="construct.c.xmda027"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			   #INITIALIZE g_qryparam.* TO NULL
            #LET g_qryparam.state = 'c'
			   #LET g_qryparam.reqry = FALSE
			   #LET g_qryparam.arg1 = g_xmda_m.xmda004
            #CALL q_pmaj002()                           #呼叫開窗
            #DISPLAY g_qryparam.return1 TO xmda027  #顯示到畫面上
            #CALL adbt500_xmda027_ref(g_xmda_m.xmda027) RETURNING g_xmda_m.xmda027_desc
            #DISPLAY BY NAME g_xmda_m.xmda027_desc
            #NEXT FIELD xmda027                     #返回原欄位


            #END add-point
 
 
         #Ctrlp:construct.c.xmda024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda024
            #add-point:ON ACTION controlp INFIELD xmda024 name="construct.c.xmda024"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "295"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda024  #顯示到畫面上

            NEXT FIELD xmda024                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda024
            #add-point:BEFORE FIELD xmda024 name="construct.b.xmda024"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda024
            
            #add-point:AFTER FIELD xmda024 name="construct.a.xmda024"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda002
            #add-point:ON ACTION controlp INFIELD xmda002 name="construct.c.xmda002"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda002  #顯示到畫面上

            NEXT FIELD xmda002                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda002
            #add-point:BEFORE FIELD xmda002 name="construct.b.xmda002"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda002
            
            #add-point:AFTER FIELD xmda002 name="construct.a.xmda002"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda003
            #add-point:ON ACTION controlp INFIELD xmda003 name="construct.c.xmda003"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_xmda_m.xmdadocdt
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda003  #顯示到畫面上

            NEXT FIELD xmda003                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda003
            #add-point:BEFORE FIELD xmda003 name="construct.b.xmda003"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda003
            
            #add-point:AFTER FIELD xmda003 name="construct.a.xmda003"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdaunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdaunit
            #add-point:ON ACTION controlp INFIELD xmdaunit name="construct.c.xmdaunit"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
#            LET g_qryparam.arg1 = '8'
#            CALL q_ooed004_2()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmdaunit',g_site,'c') #150308-00001#2  By sakura add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO xmdaunit  #顯示到畫面上
            NEXT FIELD xmdaunit                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdaunit
            #add-point:BEFORE FIELD xmdaunit name="construct.b.xmdaunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdaunit
            
            #add-point:AFTER FIELD xmdaunit name="construct.a.xmdaunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda211
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda211
            #add-point:ON ACTION controlp INFIELD xmda211 name="construct.c.xmda211"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "1"
            CALL q_dbaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda211  #顯示到畫面上
            NEXT FIELD xmda211                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda211
            #add-point:BEFORE FIELD xmda211 name="construct.b.xmda211"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda211
            
            #add-point:AFTER FIELD xmda211 name="construct.a.xmda211"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda210
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda210
            #add-point:ON ACTION controlp INFIELD xmda210 name="construct.c.xmda210"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "2"
            CALL q_dbaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda210  #顯示到畫面上
            NEXT FIELD xmda210                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda210
            #add-point:BEFORE FIELD xmda210 name="construct.b.xmda210"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda210
            
            #add-point:AFTER FIELD xmda210 name="construct.a.xmda210"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda209
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda209
            #add-point:ON ACTION controlp INFIELD xmda209 name="construct.c.xmda209"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "3"
            CALL q_dbaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda209  #顯示到畫面上
            NEXT FIELD xmda209                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda209
            #add-point:BEFORE FIELD xmda209 name="construct.b.xmda209"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda209
            
            #add-point:AFTER FIELD xmda209 name="construct.a.xmda209"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda208
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda208
            #add-point:ON ACTION controlp INFIELD xmda208 name="construct.c.xmda208"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "4"
            CALL q_dbaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda208  #顯示到畫面上
            NEXT FIELD xmda208                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda208
            #add-point:BEFORE FIELD xmda208 name="construct.b.xmda208"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda208
            
            #add-point:AFTER FIELD xmda208 name="construct.a.xmda208"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda204
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda204
            #add-point:ON ACTION controlp INFIELD xmda204 name="construct.c.xmda204"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_prcf001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda204  #顯示到畫面上
            NEXT FIELD xmda204                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda204
            #add-point:BEFORE FIELD xmda204 name="construct.b.xmda204"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda204
            
            #add-point:AFTER FIELD xmda204 name="construct.a.xmda204"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda205
            #add-point:BEFORE FIELD xmda205 name="construct.b.xmda205"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda205
            
            #add-point:AFTER FIELD xmda205 name="construct.a.xmda205"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda205
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda205
            #add-point:ON ACTION controlp INFIELD xmda205 name="construct.c.xmda205"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmda032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda032
            #add-point:ON ACTION controlp INFIELD xmda032 name="construct.c.xmda032"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
		    LET g_qryparam.arg1 = "297"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda032  #顯示到畫面上

            NEXT FIELD xmda032                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda032
            #add-point:BEFORE FIELD xmda032 name="construct.b.xmda032"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda032
            
            #add-point:AFTER FIELD xmda032 name="construct.a.xmda032"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda071
            #add-point:BEFORE FIELD xmda071 name="construct.b.xmda071"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda071
            
            #add-point:AFTER FIELD xmda071 name="construct.a.xmda071"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda071
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda071
            #add-point:ON ACTION controlp INFIELD xmda071 name="construct.c.xmda071"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmda025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda025
            #add-point:ON ACTION controlp INFIELD xmda025 name="construct.c.xmda025"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.where = " oofb008 = '3' " 
			   LET g_qryparam.arg1 = g_oofa001
            CALL q_oofb019_1()                           #呼叫開窗
            
            DISPLAY g_qryparam.return1 TO xmda025  #顯示到畫面上

            NEXT FIELD xmda025                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda025
            #add-point:BEFORE FIELD xmda025 name="construct.b.xmda025"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda025
            
            #add-point:AFTER FIELD xmda025 name="construct.a.xmda025"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda025_desc
            #add-point:BEFORE FIELD xmda025_desc name="construct.b.xmda025_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda025_desc
            
            #add-point:AFTER FIELD xmda025_desc name="construct.a.xmda025_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda025_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda025_desc
            #add-point:ON ACTION controlp INFIELD xmda025_desc name="construct.c.xmda025_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD oofb017
            #add-point:BEFORE FIELD oofb017 name="construct.b.oofb017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD oofb017
            
            #add-point:AFTER FIELD oofb017 name="construct.a.oofb017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.oofb017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD oofb017
            #add-point:ON ACTION controlp INFIELD oofb017 name="construct.c.oofb017"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmda026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda026
            #add-point:ON ACTION controlp INFIELD xmda026 name="construct.c.xmda026"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.where = " oofb008 = '5' "
			LET g_qryparam.arg1 = g_oofa001
            CALL q_oofb019_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda026  #顯示到畫面上

            NEXT FIELD xmda026                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda026
            #add-point:BEFORE FIELD xmda026 name="construct.b.xmda026"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda026
            
            #add-point:AFTER FIELD xmda026 name="construct.a.xmda026"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda026_desc
            #add-point:BEFORE FIELD xmda026_desc name="construct.b.xmda026_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda026_desc
            
            #add-point:AFTER FIELD xmda026_desc name="construct.a.xmda026_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda026_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda026_desc
            #add-point:ON ACTION controlp INFIELD xmda026_desc name="construct.c.xmda026_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD oofb017_1
            #add-point:BEFORE FIELD oofb017_1 name="construct.b.oofb017_1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD oofb017_1
            
            #add-point:AFTER FIELD oofb017_1 name="construct.a.oofb017_1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.oofb017_1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD oofb017_1
            #add-point:ON ACTION controlp INFIELD oofb017_1 name="construct.c.oofb017_1"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmda206
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda206
            #add-point:ON ACTION controlp INFIELD xmda206 name="construct.c.xmda206"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbad001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda206  #顯示到畫面上
            NEXT FIELD xmda206                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda206
            #add-point:BEFORE FIELD xmda206 name="construct.b.xmda206"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda206
            
            #add-point:AFTER FIELD xmda206 name="construct.a.xmda206"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda207
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda207
            #add-point:ON ACTION controlp INFIELD xmda207 name="construct.c.xmda207"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbab001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda207  #顯示到畫面上
            NEXT FIELD xmda207                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda207
            #add-point:BEFORE FIELD xmda207 name="construct.b.xmda207"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda207
            
            #add-point:AFTER FIELD xmda207 name="construct.a.xmda207"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda020
            #add-point:ON ACTION controlp INFIELD xmda020 name="construct.c.xmda020"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "263"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda020  #顯示到畫面上

            NEXT FIELD xmda020                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda020
            #add-point:BEFORE FIELD xmda020 name="construct.b.xmda020"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda020
            
            #add-point:AFTER FIELD xmda020 name="construct.a.xmda020"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda036
            #add-point:ON ACTION controlp INFIELD xmda036 name="construct.c.xmda036"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda036  #顯示到畫面上

            NEXT FIELD xmda036                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda036
            #add-point:BEFORE FIELD xmda036 name="construct.b.xmda036"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda036
            
            #add-point:AFTER FIELD xmda036 name="construct.a.xmda036"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda048
            #add-point:BEFORE FIELD xmda048 name="construct.b.xmda048"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda048
            
            #add-point:AFTER FIELD xmda048 name="construct.a.xmda048"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda048
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda048
            #add-point:ON ACTION controlp INFIELD xmda048 name="construct.c.xmda048"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda049
            #add-point:BEFORE FIELD xmda049 name="construct.b.xmda049"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda049
            
            #add-point:AFTER FIELD xmda049 name="construct.a.xmda049"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda049
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda049
            #add-point:ON ACTION controlp INFIELD xmda049 name="construct.c.xmda049"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmda009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda009
            #add-point:ON ACTION controlp INFIELD xmda009 name="construct.c.xmda009"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_xmda_m.xmda004
            CALL q_ooib002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda009        #顯示到畫面上
            
            CALL s_desc_get_ooib002_desc(g_xmda_m.xmda009) RETURNING g_xmda_m.xmda009_desc
            DISPLAY BY NAME g_xmda_m.xmda009_desc
            NEXT FIELD xmda009                            #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda009
            #add-point:BEFORE FIELD xmda009 name="construct.b.xmda009"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda009
            
            #add-point:AFTER FIELD xmda009 name="construct.a.xmda009"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda010
            #add-point:ON ACTION controlp INFIELD xmda010 name="construct.c.xmda010"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
		    LET g_qryparam.arg1 = '238'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda010  #顯示到畫面上

            NEXT FIELD xmda010                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda010
            #add-point:BEFORE FIELD xmda010 name="construct.b.xmda010"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda010
            
            #add-point:AFTER FIELD xmda010 name="construct.a.xmda010"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda015
            #add-point:ON ACTION controlp INFIELD xmda015 name="construct.c.xmda015"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda015  #顯示到畫面上

            NEXT FIELD xmda015                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda015
            #add-point:BEFORE FIELD xmda015 name="construct.b.xmda015"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda015
            
            #add-point:AFTER FIELD xmda015 name="construct.a.xmda015"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda016
            #add-point:BEFORE FIELD xmda016 name="construct.b.xmda016"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda016
            
            #add-point:AFTER FIELD xmda016 name="construct.a.xmda016"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda016
            #add-point:ON ACTION controlp INFIELD xmda016 name="construct.c.xmda016"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.xmda011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda011
            #add-point:ON ACTION controlp INFIELD xmda011 name="construct.c.xmda011"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda011  #顯示到畫面上

            NEXT FIELD xmda011                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda011
            #add-point:BEFORE FIELD xmda011 name="construct.b.xmda011"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda011
            
            #add-point:AFTER FIELD xmda011 name="construct.a.xmda011"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda011_desc
            #add-point:BEFORE FIELD xmda011_desc name="construct.b.xmda011_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda011_desc
            
            #add-point:AFTER FIELD xmda011_desc name="construct.a.xmda011_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda011_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda011_desc
            #add-point:ON ACTION controlp INFIELD xmda011_desc name="construct.c.xmda011_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda012
            #add-point:BEFORE FIELD xmda012 name="construct.b.xmda012"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda012
            
            #add-point:AFTER FIELD xmda012 name="construct.a.xmda012"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda012
            #add-point:ON ACTION controlp INFIELD xmda012 name="construct.c.xmda012"
                                                                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda013
            #add-point:BEFORE FIELD xmda013 name="construct.b.xmda013"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda013
            
            #add-point:AFTER FIELD xmda013 name="construct.a.xmda013"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda013
            #add-point:ON ACTION controlp INFIELD xmda013 name="construct.c.xmda013"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.xmda035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda035
            #add-point:ON ACTION controlp INFIELD xmda035 name="construct.c.xmda035"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
		      #LET g_qryparam.arg1 = g_ooef019 
            #LET g_qryparam.arg2 = "2"                
            CALL q_isac002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda035       #顯示到畫面上
            NEXT FIELD xmda035                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda035
            #add-point:BEFORE FIELD xmda035 name="construct.b.xmda035"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda035
            
            #add-point:AFTER FIELD xmda035 name="construct.a.xmda035"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda035_desc
            #add-point:BEFORE FIELD xmda035_desc name="construct.b.xmda035_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda035_desc
            
            #add-point:AFTER FIELD xmda035_desc name="construct.a.xmda035_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda035_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda035_desc
            #add-point:ON ACTION controlp INFIELD xmda035_desc name="construct.c.xmda035_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda213
            #add-point:BEFORE FIELD xmda213 name="construct.b.xmda213"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda213
            
            #add-point:AFTER FIELD xmda213 name="construct.a.xmda213"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda213
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda213
            #add-point:ON ACTION controlp INFIELD xmda213 name="construct.c.xmda213"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda039
            #add-point:BEFORE FIELD xmda039 name="construct.b.xmda039"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda039
            
            #add-point:AFTER FIELD xmda039 name="construct.a.xmda039"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda039
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda039
            #add-point:ON ACTION controlp INFIELD xmda039 name="construct.c.xmda039"
                                                                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda041
            #add-point:BEFORE FIELD xmda041 name="construct.b.xmda041"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda041
            
            #add-point:AFTER FIELD xmda041 name="construct.a.xmda041"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda041
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda041
            #add-point:ON ACTION controlp INFIELD xmda041 name="construct.c.xmda041"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda042
            #add-point:BEFORE FIELD xmda042 name="construct.b.xmda042"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda042
            
            #add-point:AFTER FIELD xmda042 name="construct.a.xmda042"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda042
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda042
            #add-point:ON ACTION controlp INFIELD xmda042 name="construct.c.xmda042"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xmdaownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdaownid
            #add-point:ON ACTION controlp INFIELD xmdaownid name="construct.c.xmdaownid"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdaownid  #顯示到畫面上

            NEXT FIELD xmdaownid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdaownid
            #add-point:BEFORE FIELD xmdaownid name="construct.b.xmdaownid"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdaownid
            
            #add-point:AFTER FIELD xmdaownid name="construct.a.xmdaownid"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdaowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdaowndp
            #add-point:ON ACTION controlp INFIELD xmdaowndp name="construct.c.xmdaowndp"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdaowndp  #顯示到畫面上

            NEXT FIELD xmdaowndp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdaowndp
            #add-point:BEFORE FIELD xmdaowndp name="construct.b.xmdaowndp"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdaowndp
            
            #add-point:AFTER FIELD xmdaowndp name="construct.a.xmdaowndp"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdacrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdacrtid
            #add-point:ON ACTION controlp INFIELD xmdacrtid name="construct.c.xmdacrtid"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdacrtid  #顯示到畫面上

            NEXT FIELD xmdacrtid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdacrtid
            #add-point:BEFORE FIELD xmdacrtid name="construct.b.xmdacrtid"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdacrtid
            
            #add-point:AFTER FIELD xmdacrtid name="construct.a.xmdacrtid"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmdacrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdacrtdp
            #add-point:ON ACTION controlp INFIELD xmdacrtdp name="construct.c.xmdacrtdp"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdacrtdp  #顯示到畫面上

            NEXT FIELD xmdacrtdp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdacrtdp
            #add-point:BEFORE FIELD xmdacrtdp name="construct.b.xmdacrtdp"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdacrtdp
            
            #add-point:AFTER FIELD xmdacrtdp name="construct.a.xmdacrtdp"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdacrtdt
            #add-point:BEFORE FIELD xmdacrtdt name="construct.b.xmdacrtdt"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.xmdamodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdamodid
            #add-point:ON ACTION controlp INFIELD xmdamodid name="construct.c.xmdamodid"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdamodid  #顯示到畫面上

            NEXT FIELD xmdamodid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdamodid
            #add-point:BEFORE FIELD xmdamodid name="construct.b.xmdamodid"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdamodid
            
            #add-point:AFTER FIELD xmdamodid name="construct.a.xmdamodid"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdamoddt
            #add-point:BEFORE FIELD xmdamoddt name="construct.b.xmdamoddt"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.xmdacnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdacnfid
            #add-point:ON ACTION controlp INFIELD xmdacnfid name="construct.c.xmdacnfid"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdacnfid  #顯示到畫面上

            NEXT FIELD xmdacnfid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdacnfid
            #add-point:BEFORE FIELD xmdacnfid name="construct.b.xmdacnfid"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdacnfid
            
            #add-point:AFTER FIELD xmdacnfid name="construct.a.xmdacnfid"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdacnfdt
            #add-point:BEFORE FIELD xmdacnfdt name="construct.b.xmdacnfdt"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.xmda034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda034
            #add-point:ON ACTION controlp INFIELD xmda034 name="construct.c.xmda034"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = 'ALL'
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda034  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO pmaal004 #交易對象簡稱 

            NEXT FIELD xmda034                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda034
            #add-point:BEFORE FIELD xmda034 name="construct.b.xmda034"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda034
            
            #add-point:AFTER FIELD xmda034 name="construct.a.xmda034"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda006
            #add-point:BEFORE FIELD xmda006 name="construct.b.xmda006"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda006
            
            #add-point:AFTER FIELD xmda006 name="construct.a.xmda006"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda006
            #add-point:ON ACTION controlp INFIELD xmda006 name="construct.c.xmda006"
                                                                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda033
            #add-point:BEFORE FIELD xmda033 name="construct.b.xmda033"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda033
            
            #add-point:AFTER FIELD xmda033 name="construct.a.xmda033"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda033
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda033
            #add-point:ON ACTION controlp INFIELD xmda033 name="construct.c.xmda033"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.xmda017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda017
            #add-point:ON ACTION controlp INFIELD xmda017 name="construct.c.xmda017"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_xmah001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda017  #顯示到畫面上

            NEXT FIELD xmda017                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda017
            #add-point:BEFORE FIELD xmda017 name="construct.b.xmda017"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda017
            
            #add-point:AFTER FIELD xmda017 name="construct.a.xmda017"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda019
            #add-point:BEFORE FIELD xmda019 name="construct.b.xmda019"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda019
            
            #add-point:AFTER FIELD xmda019 name="construct.a.xmda019"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda019
            #add-point:ON ACTION controlp INFIELD xmda019 name="construct.c.xmda019"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.xmda018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda018
            #add-point:ON ACTION controlp INFIELD xmda018 name="construct.c.xmda018"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooid001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda018  #顯示到畫面上

            NEXT FIELD xmda018                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda018
            #add-point:BEFORE FIELD xmda018 name="construct.b.xmda018"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda018
            
            #add-point:AFTER FIELD xmda018 name="construct.a.xmda018"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda030
            #add-point:BEFORE FIELD xmda030 name="construct.b.xmda030"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda030
            
            #add-point:AFTER FIELD xmda030 name="construct.a.xmda030"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda030
            #add-point:ON ACTION controlp INFIELD xmda030 name="construct.c.xmda030"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.xmda031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda031
            #add-point:ON ACTION controlp INFIELD xmda031 name="construct.c.xmda031"
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_xmda031()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmda031  #顯示到畫面上

            NEXT FIELD xmda031	                     #返回原欄位                                                                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda031
            #add-point:BEFORE FIELD xmda031 name="construct.b.xmda031"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda031
            
            #add-point:AFTER FIELD xmda031 name="construct.a.xmda031"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda045
            #add-point:BEFORE FIELD xmda045 name="construct.b.xmda045"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda045
            
            #add-point:AFTER FIELD xmda045 name="construct.a.xmda045"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda045
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda045
            #add-point:ON ACTION controlp INFIELD xmda045 name="construct.c.xmda045"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda046
            #add-point:BEFORE FIELD xmda046 name="construct.b.xmda046"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda046
            
            #add-point:AFTER FIELD xmda046 name="construct.a.xmda046"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda046
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda046
            #add-point:ON ACTION controlp INFIELD xmda046 name="construct.c.xmda046"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda047
            #add-point:BEFORE FIELD xmda047 name="construct.b.xmda047"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda047
            
            #add-point:AFTER FIELD xmda047 name="construct.a.xmda047"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda047
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda047
            #add-point:ON ACTION controlp INFIELD xmda047 name="construct.c.xmda047"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda028
            #add-point:BEFORE FIELD xmda028 name="construct.b.xmda028"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda028
            
            #add-point:AFTER FIELD xmda028 name="construct.a.xmda028"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.xmda028
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda028
            #add-point:ON ACTION controlp INFIELD xmda028 name="construct.c.xmda028"
                                                                        
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xmdcsite,xmdcseq,xmdc027,xmdc001,xmdc002,xmdc004,xmdc005,xmdc006,xmdc007, 
          xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc010,xmdc011,xmdc015,xmdc016,xmdc016_desc, 
          xmdc017,xmdc046,xmdc047,xmdc048,xmdc023,xmdc019,xmdc020,xmdc021,xmdc022,xmdc051,xmdcunit,xmdcorga, 
          xmdc052,xmdc049,xmdc053,xmdc050
           FROM s_detail1[1].xmdcsite,s_detail1[1].xmdcseq,s_detail1[1].xmdc027,s_detail1[1].xmdc001, 
               s_detail1[1].xmdc002,s_detail1[1].xmdc004,s_detail1[1].xmdc005,s_detail1[1].xmdc006,s_detail1[1].xmdc007, 
               s_detail1[1].xmdc008,s_detail1[1].xmdc009,s_detail1[1].xmdc024,s_detail1[1].xmdc012,s_detail1[1].xmdc013, 
               s_detail1[1].xmdc045,s_detail1[1].xmdc010,s_detail1[1].xmdc011,s_detail1[1].xmdc015,s_detail1[1].xmdc016, 
               s_detail1[1].xmdc016_desc,s_detail1[1].xmdc017,s_detail1[1].xmdc046,s_detail1[1].xmdc047, 
               s_detail1[1].xmdc048,s_detail1[1].xmdc023,s_detail1[1].xmdc019,s_detail1[1].xmdc020,s_detail1[1].xmdc021, 
               s_detail1[1].xmdc022,s_detail1[1].xmdc051,s_detail1[1].xmdcunit,s_detail1[1].xmdcorga, 
               s_detail1[1].xmdc052,s_detail1[1].xmdc049,s_detail1[1].xmdc053,s_detail1[1].xmdc050
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
                                                                        
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdcsite
            #add-point:BEFORE FIELD xmdcsite name="construct.b.page1.xmdcsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdcsite
            
            #add-point:AFTER FIELD xmdcsite name="construct.a.page1.xmdcsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdcsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdcsite
            #add-point:ON ACTION controlp INFIELD xmdcsite name="construct.c.page1.xmdcsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdcseq
            #add-point:BEFORE FIELD xmdcseq name="construct.b.page1.xmdcseq"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdcseq
            
            #add-point:AFTER FIELD xmdcseq name="construct.a.page1.xmdcseq"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdcseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdcseq
            #add-point:ON ACTION controlp INFIELD xmdcseq name="construct.c.page1.xmdcseq"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdc027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc027
            #add-point:ON ACTION controlp INFIELD xmdc027 name="construct.c.page1.xmdc027"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmao004_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc027  #顯示到畫面上

            NEXT FIELD xmdc027                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc027
            #add-point:BEFORE FIELD xmdc027 name="construct.b.page1.xmdc027"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc027
            
            #add-point:AFTER FIELD xmdc027 name="construct.a.page1.xmdc027"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc001
            #add-point:ON ACTION controlp INFIELD xmdc001 name="construct.c.page1.xmdc001"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc001  #顯示到畫面上

            NEXT FIELD xmdc001                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc001
            #add-point:BEFORE FIELD xmdc001 name="construct.b.page1.xmdc001"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc001
            
            #add-point:AFTER FIELD xmdc001 name="construct.a.page1.xmdc001"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc002
            #add-point:BEFORE FIELD xmdc002 name="construct.b.page1.xmdc002"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc002
            
            #add-point:AFTER FIELD xmdc002 name="construct.a.page1.xmdc002"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc002
            #add-point:ON ACTION controlp INFIELD xmdc002 name="construct.c.page1.xmdc002"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdc004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc004
            #add-point:ON ACTION controlp INFIELD xmdc004 name="construct.c.page1.xmdc004"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '221'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc004  #顯示到畫面上

            NEXT FIELD xmdc004                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc004
            #add-point:BEFORE FIELD xmdc004 name="construct.b.page1.xmdc004"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc004
            
            #add-point:AFTER FIELD xmdc004 name="construct.a.page1.xmdc004"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc005
            #add-point:BEFORE FIELD xmdc005 name="construct.b.page1.xmdc005"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc005
            
            #add-point:AFTER FIELD xmdc005 name="construct.a.page1.xmdc005"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc005
            #add-point:ON ACTION controlp INFIELD xmdc005 name="construct.c.page1.xmdc005"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdc006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc006
            #add-point:ON ACTION controlp INFIELD xmdc006 name="construct.c.page1.xmdc006"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc006  #顯示到畫面上

            NEXT FIELD xmdc006                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc006
            #add-point:BEFORE FIELD xmdc006 name="construct.b.page1.xmdc006"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc006
            
            #add-point:AFTER FIELD xmdc006 name="construct.a.page1.xmdc006"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc007
            #add-point:BEFORE FIELD xmdc007 name="construct.b.page1.xmdc007"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc007
            
            #add-point:AFTER FIELD xmdc007 name="construct.a.page1.xmdc007"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc007
            #add-point:ON ACTION controlp INFIELD xmdc007 name="construct.c.page1.xmdc007"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdc008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc008
            #add-point:ON ACTION controlp INFIELD xmdc008 name="construct.c.page1.xmdc008"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc008  #顯示到畫面上

            NEXT FIELD xmdc008                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc008
            #add-point:BEFORE FIELD xmdc008 name="construct.b.page1.xmdc008"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc008
            
            #add-point:AFTER FIELD xmdc008 name="construct.a.page1.xmdc008"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc009
            #add-point:BEFORE FIELD xmdc009 name="construct.b.page1.xmdc009"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc009
            
            #add-point:AFTER FIELD xmdc009 name="construct.a.page1.xmdc009"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc009
            #add-point:ON ACTION controlp INFIELD xmdc009 name="construct.c.page1.xmdc009"
                                                                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc024
            #add-point:BEFORE FIELD xmdc024 name="construct.b.page1.xmdc024"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc024
            
            #add-point:AFTER FIELD xmdc024 name="construct.a.page1.xmdc024"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc024
            #add-point:ON ACTION controlp INFIELD xmdc024 name="construct.c.page1.xmdc024"
                                                                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc012
            #add-point:BEFORE FIELD xmdc012 name="construct.b.page1.xmdc012"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc012
            
            #add-point:AFTER FIELD xmdc012 name="construct.a.page1.xmdc012"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc012
            #add-point:ON ACTION controlp INFIELD xmdc012 name="construct.c.page1.xmdc012"
                                                                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc013
            #add-point:BEFORE FIELD xmdc013 name="construct.b.page1.xmdc013"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc013
            
            #add-point:AFTER FIELD xmdc013 name="construct.a.page1.xmdc013"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc013
            #add-point:ON ACTION controlp INFIELD xmdc013 name="construct.c.page1.xmdc013"
                                                                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc045
            #add-point:BEFORE FIELD xmdc045 name="construct.b.page1.xmdc045"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc045
            
            #add-point:AFTER FIELD xmdc045 name="construct.a.page1.xmdc045"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc045
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc045
            #add-point:ON ACTION controlp INFIELD xmdc045 name="construct.c.page1.xmdc045"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdc010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc010
            #add-point:ON ACTION controlp INFIELD xmdc010 name="construct.c.page1.xmdc010"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc010  #顯示到畫面上

            NEXT FIELD xmdc010                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc010
            #add-point:BEFORE FIELD xmdc010 name="construct.b.page1.xmdc010"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc010
            
            #add-point:AFTER FIELD xmdc010 name="construct.a.page1.xmdc010"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc011
            #add-point:BEFORE FIELD xmdc011 name="construct.b.page1.xmdc011"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc011
            
            #add-point:AFTER FIELD xmdc011 name="construct.a.page1.xmdc011"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc011
            #add-point:ON ACTION controlp INFIELD xmdc011 name="construct.c.page1.xmdc011"
                                                                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc015
            #add-point:BEFORE FIELD xmdc015 name="construct.b.page1.xmdc015"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc015
            
            #add-point:AFTER FIELD xmdc015 name="construct.a.page1.xmdc015"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc015
            #add-point:ON ACTION controlp INFIELD xmdc015 name="construct.c.page1.xmdc015"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdc016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc016
            #add-point:ON ACTION controlp INFIELD xmdc016 name="construct.c.page1.xmdc016"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc016  #顯示到畫面上

            NEXT FIELD xmdc016                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc016
            #add-point:BEFORE FIELD xmdc016 name="construct.b.page1.xmdc016"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc016
            
            #add-point:AFTER FIELD xmdc016 name="construct.a.page1.xmdc016"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc016_desc
            #add-point:BEFORE FIELD xmdc016_desc name="construct.b.page1.xmdc016_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc016_desc
            
            #add-point:AFTER FIELD xmdc016_desc name="construct.a.page1.xmdc016_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc016_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc016_desc
            #add-point:ON ACTION controlp INFIELD xmdc016_desc name="construct.c.page1.xmdc016_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc017
            #add-point:BEFORE FIELD xmdc017 name="construct.b.page1.xmdc017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc017
            
            #add-point:AFTER FIELD xmdc017 name="construct.a.page1.xmdc017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc017
            #add-point:ON ACTION controlp INFIELD xmdc017 name="construct.c.page1.xmdc017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc046
            #add-point:BEFORE FIELD xmdc046 name="construct.b.page1.xmdc046"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc046
            
            #add-point:AFTER FIELD xmdc046 name="construct.a.page1.xmdc046"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc046
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc046
            #add-point:ON ACTION controlp INFIELD xmdc046 name="construct.c.page1.xmdc046"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc047
            #add-point:BEFORE FIELD xmdc047 name="construct.b.page1.xmdc047"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc047
            
            #add-point:AFTER FIELD xmdc047 name="construct.a.page1.xmdc047"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc047
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc047
            #add-point:ON ACTION controlp INFIELD xmdc047 name="construct.c.page1.xmdc047"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc048
            #add-point:BEFORE FIELD xmdc048 name="construct.b.page1.xmdc048"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc048
            
            #add-point:AFTER FIELD xmdc048 name="construct.a.page1.xmdc048"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc048
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc048
            #add-point:ON ACTION controlp INFIELD xmdc048 name="construct.c.page1.xmdc048"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdc023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc023
            #add-point:ON ACTION controlp INFIELD xmdc023 name="construct.c.page1.xmdc023"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg2 = 'ALL'
            CALL q_pmac002_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc023  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO pmaal004 #交易對象簡稱 

            NEXT FIELD xmdc023                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc023
            #add-point:BEFORE FIELD xmdc023 name="construct.b.page1.xmdc023"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc023
            
            #add-point:AFTER FIELD xmdc023 name="construct.a.page1.xmdc023"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc019
            #add-point:BEFORE FIELD xmdc019 name="construct.b.page1.xmdc019"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc019
            
            #add-point:AFTER FIELD xmdc019 name="construct.a.page1.xmdc019"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc019
            #add-point:ON ACTION controlp INFIELD xmdc019 name="construct.c.page1.xmdc019"
                                                                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc020
            #add-point:BEFORE FIELD xmdc020 name="construct.b.page1.xmdc020"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc020
            
            #add-point:AFTER FIELD xmdc020 name="construct.a.page1.xmdc020"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc020
            #add-point:ON ACTION controlp INFIELD xmdc020 name="construct.c.page1.xmdc020"
                                                                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc021
            #add-point:BEFORE FIELD xmdc021 name="construct.b.page1.xmdc021"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc021
            
            #add-point:AFTER FIELD xmdc021 name="construct.a.page1.xmdc021"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc021
            #add-point:ON ACTION controlp INFIELD xmdc021 name="construct.c.page1.xmdc021"
                                                                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc022
            #add-point:BEFORE FIELD xmdc022 name="construct.b.page1.xmdc022"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc022
            
            #add-point:AFTER FIELD xmdc022 name="construct.a.page1.xmdc022"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc022
            #add-point:ON ACTION controlp INFIELD xmdc022 name="construct.c.page1.xmdc022"
                                                                        
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc051
            #add-point:BEFORE FIELD xmdc051 name="construct.b.page1.xmdc051"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc051
            
            #add-point:AFTER FIELD xmdc051 name="construct.a.page1.xmdc051"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc051
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc051
            #add-point:ON ACTION controlp INFIELD xmdc051 name="construct.c.page1.xmdc051"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdcunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdcunit
            #add-point:ON ACTION controlp INFIELD xmdcunit name="construct.c.page1.xmdcunit"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
         #   CALL q_ooef001()                           #呼叫開窗 #161006-00008#5 mark
         #161006-00008#5-add(s)
			LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmdcunit',g_site,'c')
         CALL q_ooef001_24()
         #161006-00008#5-add(e)
            DISPLAY g_qryparam.return1 TO xmdcunit  #顯示到畫面上

            NEXT FIELD xmdcunit                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdcunit
            #add-point:BEFORE FIELD xmdcunit name="construct.b.page1.xmdcunit"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdcunit
            
            #add-point:AFTER FIELD xmdcunit name="construct.a.page1.xmdcunit"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdcorga
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdcorga
            #add-point:ON ACTION controlp INFIELD xmdcorga name="construct.c.page1.xmdcorga"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()          #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdcorga  #顯示到畫面上

            NEXT FIELD xmdcorga                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdcorga
            #add-point:BEFORE FIELD xmdcorga name="construct.b.page1.xmdcorga"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdcorga
            
            #add-point:AFTER FIELD xmdcorga name="construct.a.page1.xmdcorga"
                                                                        
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc052
            #add-point:BEFORE FIELD xmdc052 name="construct.b.page1.xmdc052"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc052
            
            #add-point:AFTER FIELD xmdc052 name="construct.a.page1.xmdc052"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc052
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc052
            #add-point:ON ACTION controlp INFIELD xmdc052 name="construct.c.page1.xmdc052"
                                                                        
            #END add-point
 
 
         #Ctrlp:construct.c.page1.xmdc049
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc049
            #add-point:ON ACTION controlp INFIELD xmdc049 name="construct.c.page1.xmdc049"
                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_acc
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc049  #顯示到畫面上

            NEXT FIELD xmdc049                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc049
            #add-point:BEFORE FIELD xmdc049 name="construct.b.page1.xmdc049"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc049
            
            #add-point:AFTER FIELD xmdc049 name="construct.a.page1.xmdc049"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc053
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc053
            #add-point:ON ACTION controlp INFIELD xmdc053 name="construct.c.page1.xmdc053"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_acc
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdc053  #顯示到畫面上

            NEXT FIELD xmdc053                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc053
            #add-point:BEFORE FIELD xmdc053 name="construct.b.page1.xmdc053"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc053
            
            #add-point:AFTER FIELD xmdc053 name="construct.a.page1.xmdc053"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdc050
            #add-point:BEFORE FIELD xmdc050 name="construct.b.page1.xmdc050"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdc050
            
            #add-point:AFTER FIELD xmdc050 name="construct.a.page1.xmdc050"
                                                                        
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.xmdc050
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdc050
            #add-point:ON ACTION controlp INFIELD xmdc050 name="construct.c.page1.xmdc050"
                                                                        
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON rticseq,rticseq1,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007, 
          rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic019, 
          rtic020,rtic021,rtic022,rtic023,rtic024,rtic025,rtic026,rtic027,rtic028,rtic029
           FROM s_detail2[1].rticseq,s_detail2[1].rticseq1,s_detail2[1].rtic001,s_detail2[1].rtic002, 
               s_detail2[1].rtic003,s_detail2[1].rtic004,s_detail2[1].rtic005,s_detail2[1].rtic006,s_detail2[1].rtic007, 
               s_detail2[1].rtic008,s_detail2[1].rtic009,s_detail2[1].rtic010,s_detail2[1].rtic011,s_detail2[1].rtic012, 
               s_detail2[1].rtic013,s_detail2[1].rtic014,s_detail2[1].rtic015,s_detail2[1].rtic016,s_detail2[1].rtic017, 
               s_detail2[1].rtic018,s_detail2[1].rtic019,s_detail2[1].rtic020,s_detail2[1].rtic021,s_detail2[1].rtic022, 
               s_detail2[1].rtic023,s_detail2[1].rtic024,s_detail2[1].rtic025,s_detail2[1].rtic026,s_detail2[1].rtic027, 
               s_detail2[1].rtic028,s_detail2[1].rtic029
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
                                                                        
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rticseq
            #add-point:BEFORE FIELD rticseq name="construct.b.page2.rticseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rticseq
            
            #add-point:AFTER FIELD rticseq name="construct.a.page2.rticseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rticseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rticseq
            #add-point:ON ACTION controlp INFIELD rticseq name="construct.c.page2.rticseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rticseq1
            #add-point:BEFORE FIELD rticseq1 name="construct.b.page2.rticseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rticseq1
            
            #add-point:AFTER FIELD rticseq1 name="construct.a.page2.rticseq1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rticseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rticseq1
            #add-point:ON ACTION controlp INFIELD rticseq1 name="construct.c.page2.rticseq1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic001
            #add-point:BEFORE FIELD rtic001 name="construct.b.page2.rtic001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic001
            
            #add-point:AFTER FIELD rtic001 name="construct.a.page2.rtic001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic001
            #add-point:ON ACTION controlp INFIELD rtic001 name="construct.c.page2.rtic001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic002
            #add-point:BEFORE FIELD rtic002 name="construct.b.page2.rtic002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic002
            
            #add-point:AFTER FIELD rtic002 name="construct.a.page2.rtic002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic002
            #add-point:ON ACTION controlp INFIELD rtic002 name="construct.c.page2.rtic002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic003
            #add-point:BEFORE FIELD rtic003 name="construct.b.page2.rtic003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic003
            
            #add-point:AFTER FIELD rtic003 name="construct.a.page2.rtic003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic003
            #add-point:ON ACTION controlp INFIELD rtic003 name="construct.c.page2.rtic003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic004
            #add-point:BEFORE FIELD rtic004 name="construct.b.page2.rtic004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic004
            
            #add-point:AFTER FIELD rtic004 name="construct.a.page2.rtic004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic004
            #add-point:ON ACTION controlp INFIELD rtic004 name="construct.c.page2.rtic004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic005
            #add-point:BEFORE FIELD rtic005 name="construct.b.page2.rtic005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic005
            
            #add-point:AFTER FIELD rtic005 name="construct.a.page2.rtic005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic005
            #add-point:ON ACTION controlp INFIELD rtic005 name="construct.c.page2.rtic005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic006
            #add-point:BEFORE FIELD rtic006 name="construct.b.page2.rtic006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic006
            
            #add-point:AFTER FIELD rtic006 name="construct.a.page2.rtic006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic006
            #add-point:ON ACTION controlp INFIELD rtic006 name="construct.c.page2.rtic006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic007
            #add-point:BEFORE FIELD rtic007 name="construct.b.page2.rtic007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic007
            
            #add-point:AFTER FIELD rtic007 name="construct.a.page2.rtic007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic007
            #add-point:ON ACTION controlp INFIELD rtic007 name="construct.c.page2.rtic007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic008
            #add-point:BEFORE FIELD rtic008 name="construct.b.page2.rtic008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic008
            
            #add-point:AFTER FIELD rtic008 name="construct.a.page2.rtic008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic008
            #add-point:ON ACTION controlp INFIELD rtic008 name="construct.c.page2.rtic008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic009
            #add-point:BEFORE FIELD rtic009 name="construct.b.page2.rtic009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic009
            
            #add-point:AFTER FIELD rtic009 name="construct.a.page2.rtic009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic009
            #add-point:ON ACTION controlp INFIELD rtic009 name="construct.c.page2.rtic009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic010
            #add-point:BEFORE FIELD rtic010 name="construct.b.page2.rtic010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic010
            
            #add-point:AFTER FIELD rtic010 name="construct.a.page2.rtic010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic010
            #add-point:ON ACTION controlp INFIELD rtic010 name="construct.c.page2.rtic010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic011
            #add-point:BEFORE FIELD rtic011 name="construct.b.page2.rtic011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic011
            
            #add-point:AFTER FIELD rtic011 name="construct.a.page2.rtic011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic011
            #add-point:ON ACTION controlp INFIELD rtic011 name="construct.c.page2.rtic011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic012
            #add-point:BEFORE FIELD rtic012 name="construct.b.page2.rtic012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic012
            
            #add-point:AFTER FIELD rtic012 name="construct.a.page2.rtic012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic012
            #add-point:ON ACTION controlp INFIELD rtic012 name="construct.c.page2.rtic012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic013
            #add-point:BEFORE FIELD rtic013 name="construct.b.page2.rtic013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic013
            
            #add-point:AFTER FIELD rtic013 name="construct.a.page2.rtic013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic013
            #add-point:ON ACTION controlp INFIELD rtic013 name="construct.c.page2.rtic013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic014
            #add-point:BEFORE FIELD rtic014 name="construct.b.page2.rtic014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic014
            
            #add-point:AFTER FIELD rtic014 name="construct.a.page2.rtic014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic014
            #add-point:ON ACTION controlp INFIELD rtic014 name="construct.c.page2.rtic014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic015
            #add-point:BEFORE FIELD rtic015 name="construct.b.page2.rtic015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic015
            
            #add-point:AFTER FIELD rtic015 name="construct.a.page2.rtic015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic015
            #add-point:ON ACTION controlp INFIELD rtic015 name="construct.c.page2.rtic015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic016
            #add-point:BEFORE FIELD rtic016 name="construct.b.page2.rtic016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic016
            
            #add-point:AFTER FIELD rtic016 name="construct.a.page2.rtic016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic016
            #add-point:ON ACTION controlp INFIELD rtic016 name="construct.c.page2.rtic016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic017
            #add-point:BEFORE FIELD rtic017 name="construct.b.page2.rtic017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic017
            
            #add-point:AFTER FIELD rtic017 name="construct.a.page2.rtic017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic017
            #add-point:ON ACTION controlp INFIELD rtic017 name="construct.c.page2.rtic017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic018
            #add-point:BEFORE FIELD rtic018 name="construct.b.page2.rtic018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic018
            
            #add-point:AFTER FIELD rtic018 name="construct.a.page2.rtic018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic018
            #add-point:ON ACTION controlp INFIELD rtic018 name="construct.c.page2.rtic018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic019
            #add-point:BEFORE FIELD rtic019 name="construct.b.page2.rtic019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic019
            
            #add-point:AFTER FIELD rtic019 name="construct.a.page2.rtic019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic019
            #add-point:ON ACTION controlp INFIELD rtic019 name="construct.c.page2.rtic019"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic020
            #add-point:BEFORE FIELD rtic020 name="construct.b.page2.rtic020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic020
            
            #add-point:AFTER FIELD rtic020 name="construct.a.page2.rtic020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic020
            #add-point:ON ACTION controlp INFIELD rtic020 name="construct.c.page2.rtic020"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic021
            #add-point:BEFORE FIELD rtic021 name="construct.b.page2.rtic021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic021
            
            #add-point:AFTER FIELD rtic021 name="construct.a.page2.rtic021"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic021
            #add-point:ON ACTION controlp INFIELD rtic021 name="construct.c.page2.rtic021"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic022
            #add-point:BEFORE FIELD rtic022 name="construct.b.page2.rtic022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic022
            
            #add-point:AFTER FIELD rtic022 name="construct.a.page2.rtic022"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic022
            #add-point:ON ACTION controlp INFIELD rtic022 name="construct.c.page2.rtic022"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic023
            #add-point:BEFORE FIELD rtic023 name="construct.b.page2.rtic023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic023
            
            #add-point:AFTER FIELD rtic023 name="construct.a.page2.rtic023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic023
            #add-point:ON ACTION controlp INFIELD rtic023 name="construct.c.page2.rtic023"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic024
            #add-point:BEFORE FIELD rtic024 name="construct.b.page2.rtic024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic024
            
            #add-point:AFTER FIELD rtic024 name="construct.a.page2.rtic024"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic024
            #add-point:ON ACTION controlp INFIELD rtic024 name="construct.c.page2.rtic024"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic025
            #add-point:BEFORE FIELD rtic025 name="construct.b.page2.rtic025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic025
            
            #add-point:AFTER FIELD rtic025 name="construct.a.page2.rtic025"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic025
            #add-point:ON ACTION controlp INFIELD rtic025 name="construct.c.page2.rtic025"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic026
            #add-point:BEFORE FIELD rtic026 name="construct.b.page2.rtic026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic026
            
            #add-point:AFTER FIELD rtic026 name="construct.a.page2.rtic026"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic026
            #add-point:ON ACTION controlp INFIELD rtic026 name="construct.c.page2.rtic026"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic027
            #add-point:BEFORE FIELD rtic027 name="construct.b.page2.rtic027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic027
            
            #add-point:AFTER FIELD rtic027 name="construct.a.page2.rtic027"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic027
            #add-point:ON ACTION controlp INFIELD rtic027 name="construct.c.page2.rtic027"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic028
            #add-point:BEFORE FIELD rtic028 name="construct.b.page2.rtic028"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic028
            
            #add-point:AFTER FIELD rtic028 name="construct.a.page2.rtic028"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic028
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic028
            #add-point:ON ACTION controlp INFIELD rtic028 name="construct.c.page2.rtic028"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic029
            #add-point:BEFORE FIELD rtic029 name="construct.b.page2.rtic029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic029
            
            #add-point:AFTER FIELD rtic029 name="construct.a.page2.rtic029"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic029
            #add-point:ON ACTION controlp INFIELD rtic029 name="construct.c.page2.rtic029"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON xmdddocno,xmddseq,xmddseq1,xmddseq2,xmdd229,xmdd003,xmdd001,xmdd002, 
          xmdd200,xmdd004,xmdd005,xmdd011,xmdd012,xmdd006,xmdd201,xmdd202,xmdd024,xmdd025,xmdd026,xmdd027, 
          xmdd203,xmdd204,xmdd205,xmdd206,xmdd029,xmdd028,xmdd019,xmdd019_desc,xmdd030,xmdd207,xmddunit, 
          xmdd210,xmdd212,xmdd213,xmdd214,xmdd215,xmdd231,xmdd009,xmdd031,xmdd014,xmdd015,xmdd016,xmdd017, 
          xmdd221,xmddsite,xmdd218,xmdd219,xmdd220,xmdd222,xmdd223,xmdd224,xmddorga,xmdd226,xmdd227, 
          xmdd228,xmdd013,xmdd018,xmdd020,xmdd021,xmdd022,xmdd023
           FROM s_detail3[1].xmdddocno,s_detail3[1].xmddseq,s_detail3[1].xmddseq1,s_detail3[1].xmddseq2, 
               s_detail3[1].xmdd229,s_detail3[1].xmdd003,s_detail3[1].xmdd001,s_detail3[1].xmdd002,s_detail3[1].xmdd200, 
               s_detail3[1].xmdd004,s_detail3[1].xmdd005,s_detail3[1].xmdd011,s_detail3[1].xmdd012,s_detail3[1].xmdd006, 
               s_detail3[1].xmdd201,s_detail3[1].xmdd202,s_detail3[1].xmdd024,s_detail3[1].xmdd025,s_detail3[1].xmdd026, 
               s_detail3[1].xmdd027,s_detail3[1].xmdd203,s_detail3[1].xmdd204,s_detail3[1].xmdd205,s_detail3[1].xmdd206, 
               s_detail3[1].xmdd029,s_detail3[1].xmdd028,s_detail3[1].xmdd019,s_detail3[1].xmdd019_desc, 
               s_detail3[1].xmdd030,s_detail3[1].xmdd207,s_detail3[1].xmddunit,s_detail3[1].xmdd210, 
               s_detail3[1].xmdd212,s_detail3[1].xmdd213,s_detail3[1].xmdd214,s_detail3[1].xmdd215,s_detail3[1].xmdd231, 
               s_detail3[1].xmdd009,s_detail3[1].xmdd031,s_detail3[1].xmdd014,s_detail3[1].xmdd015,s_detail3[1].xmdd016, 
               s_detail3[1].xmdd017,s_detail3[1].xmdd221,s_detail3[1].xmddsite,s_detail3[1].xmdd218, 
               s_detail3[1].xmdd219,s_detail3[1].xmdd220,s_detail3[1].xmdd222,s_detail3[1].xmdd223,s_detail3[1].xmdd224, 
               s_detail3[1].xmddorga,s_detail3[1].xmdd226,s_detail3[1].xmdd227,s_detail3[1].xmdd228, 
               s_detail3[1].xmdd013,s_detail3[1].xmdd018,s_detail3[1].xmdd020,s_detail3[1].xmdd021,s_detail3[1].xmdd022, 
               s_detail3[1].xmdd023
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body3.before_construct"
                                                                        
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdddocno
            #add-point:BEFORE FIELD xmdddocno name="construct.b.page3.xmdddocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdddocno
            
            #add-point:AFTER FIELD xmdddocno name="construct.a.page3.xmdddocno"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdddocno
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdddocno
            #add-point:ON ACTION controlp INFIELD xmdddocno name="construct.c.page3.xmdddocno"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmddseq
            #add-point:BEFORE FIELD xmddseq name="construct.b.page3.xmddseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmddseq
            
            #add-point:AFTER FIELD xmddseq name="construct.a.page3.xmddseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmddseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmddseq
            #add-point:ON ACTION controlp INFIELD xmddseq name="construct.c.page3.xmddseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmddseq1
            #add-point:BEFORE FIELD xmddseq1 name="construct.b.page3.xmddseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmddseq1
            
            #add-point:AFTER FIELD xmddseq1 name="construct.a.page3.xmddseq1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmddseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmddseq1
            #add-point:ON ACTION controlp INFIELD xmddseq1 name="construct.c.page3.xmddseq1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmddseq2
            #add-point:BEFORE FIELD xmddseq2 name="construct.b.page3.xmddseq2"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmddseq2
            
            #add-point:AFTER FIELD xmddseq2 name="construct.a.page3.xmddseq2"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmddseq2
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmddseq2
            #add-point:ON ACTION controlp INFIELD xmddseq2 name="construct.c.page3.xmddseq2"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd229
            #add-point:BEFORE FIELD xmdd229 name="construct.b.page3.xmdd229"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd229
            
            #add-point:AFTER FIELD xmdd229 name="construct.a.page3.xmdd229"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd229
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd229
            #add-point:ON ACTION controlp INFIELD xmdd229 name="construct.c.page3.xmdd229"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd003
            #add-point:BEFORE FIELD xmdd003 name="construct.b.page3.xmdd003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd003
            
            #add-point:AFTER FIELD xmdd003 name="construct.a.page3.xmdd003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd003
            #add-point:ON ACTION controlp INFIELD xmdd003 name="construct.c.page3.xmdd003"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd001
            #add-point:ON ACTION controlp INFIELD xmdd001 name="construct.c.page3.xmdd001"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd001  #顯示到畫面上

            NEXT FIELD xmdd001                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd001
            #add-point:BEFORE FIELD xmdd001 name="construct.b.page3.xmdd001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd001
            
            #add-point:AFTER FIELD xmdd001 name="construct.a.page3.xmdd001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd002
            #add-point:BEFORE FIELD xmdd002 name="construct.b.page3.xmdd002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd002
            
            #add-point:AFTER FIELD xmdd002 name="construct.a.page3.xmdd002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd002
            #add-point:ON ACTION controlp INFIELD xmdd002 name="construct.c.page3.xmdd002"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd200
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd200
            #add-point:ON ACTION controlp INFIELD xmdd200 name="construct.c.page3.xmdd200"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_prcf001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd200  #顯示到畫面上
            NEXT FIELD xmdd200                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd200
            #add-point:BEFORE FIELD xmdd200 name="construct.b.page3.xmdd200"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd200
            
            #add-point:AFTER FIELD xmdd200 name="construct.a.page3.xmdd200"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd004
            #add-point:ON ACTION controlp INFIELD xmdd004 name="construct.c.page3.xmdd004"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd004  #顯示到畫面上

            NEXT FIELD xmdd004                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd004
            #add-point:BEFORE FIELD xmdd004 name="construct.b.page3.xmdd004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd004
            
            #add-point:AFTER FIELD xmdd004 name="construct.a.page3.xmdd004"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd005
            #add-point:BEFORE FIELD xmdd005 name="construct.b.page3.xmdd005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd005
            
            #add-point:AFTER FIELD xmdd005 name="construct.a.page3.xmdd005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd005
            #add-point:ON ACTION controlp INFIELD xmdd005 name="construct.c.page3.xmdd005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd011
            #add-point:BEFORE FIELD xmdd011 name="construct.b.page3.xmdd011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd011
            
            #add-point:AFTER FIELD xmdd011 name="construct.a.page3.xmdd011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd011
            #add-point:ON ACTION controlp INFIELD xmdd011 name="construct.c.page3.xmdd011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd012
            #add-point:BEFORE FIELD xmdd012 name="construct.b.page3.xmdd012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd012
            
            #add-point:AFTER FIELD xmdd012 name="construct.a.page3.xmdd012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd012
            #add-point:ON ACTION controlp INFIELD xmdd012 name="construct.c.page3.xmdd012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd006
            #add-point:BEFORE FIELD xmdd006 name="construct.b.page3.xmdd006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd006
            
            #add-point:AFTER FIELD xmdd006 name="construct.a.page3.xmdd006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd006
            #add-point:ON ACTION controlp INFIELD xmdd006 name="construct.c.page3.xmdd006"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd201
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd201
            #add-point:ON ACTION controlp INFIELD xmdd201 name="construct.c.page3.xmdd201"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd201  #顯示到畫面上
            NEXT FIELD xmdd201                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd201
            #add-point:BEFORE FIELD xmdd201 name="construct.b.page3.xmdd201"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd201
            
            #add-point:AFTER FIELD xmdd201 name="construct.a.page3.xmdd201"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd202
            #add-point:BEFORE FIELD xmdd202 name="construct.b.page3.xmdd202"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd202
            
            #add-point:AFTER FIELD xmdd202 name="construct.a.page3.xmdd202"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd202
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd202
            #add-point:ON ACTION controlp INFIELD xmdd202 name="construct.c.page3.xmdd202"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd024
            #add-point:ON ACTION controlp INFIELD xmdd024 name="construct.c.page3.xmdd024"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd024  #顯示到畫面上

            NEXT FIELD xmdd024                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd024
            #add-point:BEFORE FIELD xmdd024 name="construct.b.page3.xmdd024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd024
            
            #add-point:AFTER FIELD xmdd024 name="construct.a.page3.xmdd024"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd025
            #add-point:BEFORE FIELD xmdd025 name="construct.b.page3.xmdd025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd025
            
            #add-point:AFTER FIELD xmdd025 name="construct.a.page3.xmdd025"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd025
            #add-point:ON ACTION controlp INFIELD xmdd025 name="construct.c.page3.xmdd025"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd026
            #add-point:ON ACTION controlp INFIELD xmdd026 name="construct.c.page3.xmdd026"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd026  #顯示到畫面上

            NEXT FIELD xmdd026                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd026
            #add-point:BEFORE FIELD xmdd026 name="construct.b.page3.xmdd026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd026
            
            #add-point:AFTER FIELD xmdd026 name="construct.a.page3.xmdd026"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd027
            #add-point:BEFORE FIELD xmdd027 name="construct.b.page3.xmdd027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd027
            
            #add-point:AFTER FIELD xmdd027 name="construct.a.page3.xmdd027"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd027
            #add-point:ON ACTION controlp INFIELD xmdd027 name="construct.c.page3.xmdd027"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd203
            #add-point:BEFORE FIELD xmdd203 name="construct.b.page3.xmdd203"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd203
            
            #add-point:AFTER FIELD xmdd203 name="construct.a.page3.xmdd203"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd203
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd203
            #add-point:ON ACTION controlp INFIELD xmdd203 name="construct.c.page3.xmdd203"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd204
            #add-point:BEFORE FIELD xmdd204 name="construct.b.page3.xmdd204"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd204
            
            #add-point:AFTER FIELD xmdd204 name="construct.a.page3.xmdd204"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd204
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd204
            #add-point:ON ACTION controlp INFIELD xmdd204 name="construct.c.page3.xmdd204"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd205
            #add-point:BEFORE FIELD xmdd205 name="construct.b.page3.xmdd205"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd205
            
            #add-point:AFTER FIELD xmdd205 name="construct.a.page3.xmdd205"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd205
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd205
            #add-point:ON ACTION controlp INFIELD xmdd205 name="construct.c.page3.xmdd205"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd206
            #add-point:BEFORE FIELD xmdd206 name="construct.b.page3.xmdd206"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd206
            
            #add-point:AFTER FIELD xmdd206 name="construct.a.page3.xmdd206"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd206
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd206
            #add-point:ON ACTION controlp INFIELD xmdd206 name="construct.c.page3.xmdd206"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd029
            #add-point:BEFORE FIELD xmdd029 name="construct.b.page3.xmdd029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd029
            
            #add-point:AFTER FIELD xmdd029 name="construct.a.page3.xmdd029"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd029
            #add-point:ON ACTION controlp INFIELD xmdd029 name="construct.c.page3.xmdd029"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd028
            #add-point:BEFORE FIELD xmdd028 name="construct.b.page3.xmdd028"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd028
            
            #add-point:AFTER FIELD xmdd028 name="construct.a.page3.xmdd028"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd028
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd028
            #add-point:ON ACTION controlp INFIELD xmdd028 name="construct.c.page3.xmdd028"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd019
            #add-point:ON ACTION controlp INFIELD xmdd019 name="construct.c.page3.xmdd019"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd019  #顯示到畫面上
            NEXT FIELD xmdd019                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd019
            #add-point:BEFORE FIELD xmdd019 name="construct.b.page3.xmdd019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd019
            
            #add-point:AFTER FIELD xmdd019 name="construct.a.page3.xmdd019"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd019_desc
            #add-point:BEFORE FIELD xmdd019_desc name="construct.b.page3.xmdd019_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd019_desc
            
            #add-point:AFTER FIELD xmdd019_desc name="construct.a.page3.xmdd019_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd019_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd019_desc
            #add-point:ON ACTION controlp INFIELD xmdd019_desc name="construct.c.page3.xmdd019_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd030
            #add-point:BEFORE FIELD xmdd030 name="construct.b.page3.xmdd030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd030
            
            #add-point:AFTER FIELD xmdd030 name="construct.a.page3.xmdd030"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd030
            #add-point:ON ACTION controlp INFIELD xmdd030 name="construct.c.page3.xmdd030"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd207
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd207
            #add-point:ON ACTION controlp INFIELD xmdd207 name="construct.c.page3.xmdd207"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_18()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd207  #顯示到畫面上
            NEXT FIELD xmdd207                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd207
            #add-point:BEFORE FIELD xmdd207 name="construct.b.page3.xmdd207"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd207
            
            #add-point:AFTER FIELD xmdd207 name="construct.a.page3.xmdd207"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmddunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmddunit
            #add-point:ON ACTION controlp INFIELD xmddunit name="construct.c.page3.xmddunit"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
#			   LET g_qryparam.arg1 = g_site
#			   LET g_qryparam.arg2 = '8'
#            CALL q_ooed004_3()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmddunit',g_site,'c') #150308-00001#2  By sakura add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO xmddunit  #顯示到畫面上
            NEXT FIELD xmddunit                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmddunit
            #add-point:BEFORE FIELD xmddunit name="construct.b.page3.xmddunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmddunit
            
            #add-point:AFTER FIELD xmddunit name="construct.a.page3.xmddunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd210
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd210
            #add-point:ON ACTION controlp INFIELD xmdd210 name="construct.c.page3.xmdd210"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "274"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd210  #顯示到畫面上
            NEXT FIELD xmdd210                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd210
            #add-point:BEFORE FIELD xmdd210 name="construct.b.page3.xmdd210"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd210
            
            #add-point:AFTER FIELD xmdd210 name="construct.a.page3.xmdd210"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd212
            #add-point:BEFORE FIELD xmdd212 name="construct.b.page3.xmdd212"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd212
            
            #add-point:AFTER FIELD xmdd212 name="construct.a.page3.xmdd212"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd212
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd212
            #add-point:ON ACTION controlp INFIELD xmdd212 name="construct.c.page3.xmdd212"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd213
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd213
            #add-point:ON ACTION controlp INFIELD xmdd213 name="construct.c.page3.xmdd213"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #lori522612  150122 add ----------------------(S)
            #LET g_qryparam.arg1 = g_site
            #CALL q_inaa001_4()                     #呼叫開窗
            #提供庫位基本資料開窗
            CALL q_inaa001_23()
            #lori522612  150122 add ----------------------(E)
            DISPLAY g_qryparam.return1 TO xmdd213  #顯示到畫面上
            NEXT FIELD xmdd213                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd213
            #add-point:BEFORE FIELD xmdd213 name="construct.b.page3.xmdd213"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd213
            
            #add-point:AFTER FIELD xmdd213 name="construct.a.page3.xmdd213"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd214
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd214
            #add-point:ON ACTION controlp INFIELD xmdd214 name="construct.c.page3.xmdd214"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #lori522612  150122 add ----------------------(S)
            #LET g_qryparam.arg1 = g_site
            #CALL q_inab002_8()                     #呼叫開窗
            #提供所有儲位資訊
            CALL q_inab002_11()
            #lori522612  150122 add ----------------------(E)
            DISPLAY g_qryparam.return1 TO xmdd214  #顯示到畫面上
            NEXT FIELD xmdd214                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd214
            #add-point:BEFORE FIELD xmdd214 name="construct.b.page3.xmdd214"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd214
            
            #add-point:AFTER FIELD xmdd214 name="construct.a.page3.xmdd214"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd215
            #add-point:BEFORE FIELD xmdd215 name="construct.b.page3.xmdd215"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd215
            
            #add-point:AFTER FIELD xmdd215 name="construct.a.page3.xmdd215"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd215
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd215
            #add-point:ON ACTION controlp INFIELD xmdd215 name="construct.c.page3.xmdd215"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd231
            #add-point:BEFORE FIELD xmdd231 name="construct.b.page3.xmdd231"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd231
            
            #add-point:AFTER FIELD xmdd231 name="construct.a.page3.xmdd231"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd231
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd231
            #add-point:ON ACTION controlp INFIELD xmdd231 name="construct.c.page3.xmdd231"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd009
            #add-point:BEFORE FIELD xmdd009 name="construct.b.page3.xmdd009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd009
            
            #add-point:AFTER FIELD xmdd009 name="construct.a.page3.xmdd009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd009
            #add-point:ON ACTION controlp INFIELD xmdd009 name="construct.c.page3.xmdd009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd031
            #add-point:BEFORE FIELD xmdd031 name="construct.b.page3.xmdd031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd031
            
            #add-point:AFTER FIELD xmdd031 name="construct.a.page3.xmdd031"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd031
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd031
            #add-point:ON ACTION controlp INFIELD xmdd031 name="construct.c.page3.xmdd031"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd014
            #add-point:BEFORE FIELD xmdd014 name="construct.b.page3.xmdd014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd014
            
            #add-point:AFTER FIELD xmdd014 name="construct.a.page3.xmdd014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd014
            #add-point:ON ACTION controlp INFIELD xmdd014 name="construct.c.page3.xmdd014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd015
            #add-point:BEFORE FIELD xmdd015 name="construct.b.page3.xmdd015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd015
            
            #add-point:AFTER FIELD xmdd015 name="construct.a.page3.xmdd015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd015
            #add-point:ON ACTION controlp INFIELD xmdd015 name="construct.c.page3.xmdd015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd016
            #add-point:BEFORE FIELD xmdd016 name="construct.b.page3.xmdd016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd016
            
            #add-point:AFTER FIELD xmdd016 name="construct.a.page3.xmdd016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd016
            #add-point:ON ACTION controlp INFIELD xmdd016 name="construct.c.page3.xmdd016"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd017
            #add-point:ON ACTION controlp INFIELD xmdd017 name="construct.c.page3.xmdd017"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd017  #顯示到畫面上

            NEXT FIELD xmdd017                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd017
            #add-point:BEFORE FIELD xmdd017 name="construct.b.page3.xmdd017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd017
            
            #add-point:AFTER FIELD xmdd017 name="construct.a.page3.xmdd017"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd221
            #add-point:BEFORE FIELD xmdd221 name="construct.b.page3.xmdd221"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd221
            
            #add-point:AFTER FIELD xmdd221 name="construct.a.page3.xmdd221"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd221
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd221
            #add-point:ON ACTION controlp INFIELD xmdd221 name="construct.c.page3.xmdd221"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmddsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmddsite
            #add-point:ON ACTION controlp INFIELD xmddsite name="construct.c.page3.xmddsite"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
#            LET g_qryparam.arg1 = g_site
#			   LET g_qryparam.arg2 = '8'
#            CALL q_ooed004_3()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmddsite',g_site,'c') #150308-00001#2  By sakura add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO xmddsite  #顯示到畫面上
            NEXT FIELD xmddsite                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmddsite
            #add-point:BEFORE FIELD xmddsite name="construct.b.page3.xmddsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmddsite
            
            #add-point:AFTER FIELD xmddsite name="construct.a.page3.xmddsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd218
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd218
            #add-point:ON ACTION controlp INFIELD xmdd218 name="construct.c.page3.xmdd218"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "1"
            CALL q_oojd001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd218  #顯示到畫面上
            NEXT FIELD xmdd218                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd218
            #add-point:BEFORE FIELD xmdd218 name="construct.b.page3.xmdd218"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd218
            
            #add-point:AFTER FIELD xmdd218 name="construct.a.page3.xmdd218"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd219
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd219
            #add-point:ON ACTION controlp INFIELD xmdd219 name="construct.c.page3.xmdd219"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbba001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd219  #顯示到畫面上
            NEXT FIELD xmdd219                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd219
            #add-point:BEFORE FIELD xmdd219 name="construct.b.page3.xmdd219"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd219
            
            #add-point:AFTER FIELD xmdd219 name="construct.a.page3.xmdd219"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd220
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd220
            #add-point:ON ACTION controlp INFIELD xmdd220 name="construct.c.page3.xmdd220"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbbc001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd220  #顯示到畫面上
            NEXT FIELD xmdd220                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd220
            #add-point:BEFORE FIELD xmdd220 name="construct.b.page3.xmdd220"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd220
            
            #add-point:AFTER FIELD xmdd220 name="construct.a.page3.xmdd220"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd222
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd222
            #add-point:ON ACTION controlp INFIELD xmdd222 name="construct.c.page3.xmdd222"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #161006-00008#5-add(s)
            IF s_aooi500_setpoint(g_prog,'xmdd222') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmdd222',g_site,'c')
               CALL q_ooef001_24()                   
            ELSE
            #161006-00008#5-add(e)
               LET g_qryparam.where = "ooef305 = 'Y'"
               CALL q_ooef001()                           #呼叫開窗
            END IF                                     #161006-00008#5-add
            DISPLAY g_qryparam.return1 TO xmdd222  #顯示到畫面上
            NEXT FIELD xmdd222                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd222
            #add-point:BEFORE FIELD xmdd222 name="construct.b.page3.xmdd222"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd222
            
            #add-point:AFTER FIELD xmdd222 name="construct.a.page3.xmdd222"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd223
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd223
            #add-point:ON ACTION controlp INFIELD xmdd223 name="construct.c.page3.xmdd223"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd223  #顯示到畫面上
            NEXT FIELD xmdd223                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd223
            #add-point:BEFORE FIELD xmdd223 name="construct.b.page3.xmdd223"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd223
            
            #add-point:AFTER FIELD xmdd223 name="construct.a.page3.xmdd223"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd224
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd224
            #add-point:ON ACTION controlp INFIELD xmdd224 name="construct.c.page3.xmdd224"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_xmda_m.xmdadocdt
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd224  #顯示到畫面上
            NEXT FIELD xmdd224                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd224
            #add-point:BEFORE FIELD xmdd224 name="construct.b.page3.xmdd224"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd224
            
            #add-point:AFTER FIELD xmdd224 name="construct.a.page3.xmdd224"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmddorga
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmddorga
            #add-point:ON ACTION controlp INFIELD xmddorga name="construct.c.page3.xmddorga"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "ooef201 = 'Y'"
            #CALL q_ooef001()                     #呼叫開窗 #161006-00008#5 mark
            CALL q_ooef001_24()                            #161006-00008#5-add
            DISPLAY g_qryparam.return1 TO xmddorga  #顯示到畫面上
            NEXT FIELD xmddorga                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmddorga
            #add-point:BEFORE FIELD xmddorga name="construct.b.page3.xmddorga"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmddorga
            
            #add-point:AFTER FIELD xmddorga name="construct.a.page3.xmddorga"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd226
            #add-point:BEFORE FIELD xmdd226 name="construct.b.page3.xmdd226"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd226
            
            #add-point:AFTER FIELD xmdd226 name="construct.a.page3.xmdd226"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd226
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd226
            #add-point:ON ACTION controlp INFIELD xmdd226 name="construct.c.page3.xmdd226"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd227
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd227
            #add-point:ON ACTION controlp INFIELD xmdd227 name="construct.c.page3.xmdd227"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "2060"
            CALL q_oocq002_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd227  #顯示到畫面上
            NEXT FIELD xmdd227                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd227
            #add-point:BEFORE FIELD xmdd227 name="construct.b.page3.xmdd227"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd227
            
            #add-point:AFTER FIELD xmdd227 name="construct.a.page3.xmdd227"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd228
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd228
            #add-point:ON ACTION controlp INFIELD xmdd228 name="construct.c.page3.xmdd228"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_staa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd228  #顯示到畫面上
            NEXT FIELD xmdd228                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd228
            #add-point:BEFORE FIELD xmdd228 name="construct.b.page3.xmdd228"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd228
            
            #add-point:AFTER FIELD xmdd228 name="construct.a.page3.xmdd228"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd013
            #add-point:BEFORE FIELD xmdd013 name="construct.b.page3.xmdd013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd013
            
            #add-point:AFTER FIELD xmdd013 name="construct.a.page3.xmdd013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd013
            #add-point:ON ACTION controlp INFIELD xmdd013 name="construct.c.page3.xmdd013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd018
            #add-point:BEFORE FIELD xmdd018 name="construct.b.page3.xmdd018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd018
            
            #add-point:AFTER FIELD xmdd018 name="construct.a.page3.xmdd018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd018
            #add-point:ON ACTION controlp INFIELD xmdd018 name="construct.c.page3.xmdd018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd020
            #add-point:BEFORE FIELD xmdd020 name="construct.b.page3.xmdd020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd020
            
            #add-point:AFTER FIELD xmdd020 name="construct.a.page3.xmdd020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd020
            #add-point:ON ACTION controlp INFIELD xmdd020 name="construct.c.page3.xmdd020"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd021
            #add-point:BEFORE FIELD xmdd021 name="construct.b.page3.xmdd021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd021
            
            #add-point:AFTER FIELD xmdd021 name="construct.a.page3.xmdd021"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd021
            #add-point:ON ACTION controlp INFIELD xmdd021 name="construct.c.page3.xmdd021"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.xmdd022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd022
            #add-point:ON ACTION controlp INFIELD xmdd022 name="construct.c.page3.xmdd022"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdd022  #顯示到畫面上

            NEXT FIELD xmdd022                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd022
            #add-point:BEFORE FIELD xmdd022 name="construct.b.page3.xmdd022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd022
            
            #add-point:AFTER FIELD xmdd022 name="construct.a.page3.xmdd022"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdd023
            #add-point:BEFORE FIELD xmdd023 name="construct.b.page3.xmdd023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdd023
            
            #add-point:AFTER FIELD xmdd023 name="construct.a.page3.xmdd023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xmdd023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdd023
            #add-point:ON ACTION controlp INFIELD xmdd023 name="construct.c.page3.xmdd023"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON xmjaseq,xmjasite,xmja001,xmja002,xmja003,xmja033,xmja004,xmja005,xmja006, 
          xmja007,xmja011,xmja012,xmja013,xmja014,xmja015,xmja016,xmja017,xmja018,xmja008,xmja009,xmja010, 
          xmja022,xmja019,xmja020,xmja021,l_imaa116,l_diaopai,l_rate,xmja024,xmja025,xmja026,xmja027, 
          xmja028,xmja029,xmja030,xmja031,xmja032,xmja040,xmja039,xmja038,xmja037,xmja034
           FROM s_detail4[1].xmjaseq,s_detail4[1].xmjasite,s_detail4[1].xmja001,s_detail4[1].xmja002, 
               s_detail4[1].xmja003,s_detail4[1].xmja033,s_detail4[1].xmja004,s_detail4[1].xmja005,s_detail4[1].xmja006, 
               s_detail4[1].xmja007,s_detail4[1].xmja011,s_detail4[1].xmja012,s_detail4[1].xmja013,s_detail4[1].xmja014, 
               s_detail4[1].xmja015,s_detail4[1].xmja016,s_detail4[1].xmja017,s_detail4[1].xmja018,s_detail4[1].xmja008, 
               s_detail4[1].xmja009,s_detail4[1].xmja010,s_detail4[1].xmja022,s_detail4[1].xmja019,s_detail4[1].xmja020, 
               s_detail4[1].xmja021,s_detail4[1].l_imaa116,s_detail4[1].l_diaopai,s_detail4[1].l_rate, 
               s_detail4[1].xmja024,s_detail4[1].xmja025,s_detail4[1].xmja026,s_detail4[1].xmja027,s_detail4[1].xmja028, 
               s_detail4[1].xmja029,s_detail4[1].xmja030,s_detail4[1].xmja031,s_detail4[1].xmja032,s_detail4[1].xmja040, 
               s_detail4[1].xmja039,s_detail4[1].xmja038,s_detail4[1].xmja037,s_detail4[1].xmja034
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body4.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmjaseq
            #add-point:BEFORE FIELD xmjaseq name="construct.b.page4.xmjaseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmjaseq
            
            #add-point:AFTER FIELD xmjaseq name="construct.a.page4.xmjaseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmjaseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmjaseq
            #add-point:ON ACTION controlp INFIELD xmjaseq name="construct.c.page4.xmjaseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page4.xmjasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmjasite
            #add-point:ON ACTION controlp INFIELD xmjasite name="construct.c.page4.xmjasite"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
#            LET g_qryparam.arg1 = g_site
#			   LET g_qryparam.arg2 = '8'
#            CALL q_ooed004_3()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmjasite',g_site,'c') #150308-00001#2  By sakura add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO xmjasite  #顯示到畫面上
            NEXT FIELD xmjasite                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmjasite
            #add-point:BEFORE FIELD xmjasite name="construct.b.page4.xmjasite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmjasite
            
            #add-point:AFTER FIELD xmjasite name="construct.a.page4.xmjasite"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja001
            #add-point:BEFORE FIELD xmja001 name="construct.b.page4.xmja001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja001
            
            #add-point:AFTER FIELD xmja001 name="construct.a.page4.xmja001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja001
            #add-point:ON ACTION controlp INFIELD xmja001 name="construct.c.page4.xmja001"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page4.xmja002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja002
            #add-point:ON ACTION controlp INFIELD xmja002 name="construct.c.page4.xmja002"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja002  #顯示到畫面上
            NEXT FIELD xmja002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja002
            #add-point:BEFORE FIELD xmja002 name="construct.b.page4.xmja002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja002
            
            #add-point:AFTER FIELD xmja002 name="construct.a.page4.xmja002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja003
            #add-point:ON ACTION controlp INFIELD xmja003 name="construct.c.page4.xmja003"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja003  #顯示到畫面上
            NEXT FIELD xmja003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja003
            #add-point:BEFORE FIELD xmja003 name="construct.b.page4.xmja003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja003
            
            #add-point:AFTER FIELD xmja003 name="construct.a.page4.xmja003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja033
            #add-point:ON ACTION controlp INFIELD xmja033 name="construct.c.page4.xmja033"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmao004_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja033  #顯示到畫面上
            NEXT FIELD xmja033                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja033
            #add-point:BEFORE FIELD xmja033 name="construct.b.page4.xmja033"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja033
            
            #add-point:AFTER FIELD xmja033 name="construct.a.page4.xmja033"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja004
            #add-point:ON ACTION controlp INFIELD xmja004 name="construct.c.page4.xmja004"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xmja004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja004  #顯示到畫面上
            NEXT FIELD xmja004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja004
            #add-point:BEFORE FIELD xmja004 name="construct.b.page4.xmja004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja004
            
            #add-point:AFTER FIELD xmja004 name="construct.a.page4.xmja004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja005
            #add-point:ON ACTION controlp INFIELD xmja005 name="construct.c.page4.xmja005"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_prcf001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja005  #顯示到畫面上
            NEXT FIELD xmja005                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja005
            #add-point:BEFORE FIELD xmja005 name="construct.b.page4.xmja005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja005
            
            #add-point:AFTER FIELD xmja005 name="construct.a.page4.xmja005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja006
            #add-point:ON ACTION controlp INFIELD xmja006 name="construct.c.page4.xmja006"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja006  #顯示到畫面上
            NEXT FIELD xmja006                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja006
            #add-point:BEFORE FIELD xmja006 name="construct.b.page4.xmja006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja006
            
            #add-point:AFTER FIELD xmja006 name="construct.a.page4.xmja006"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja007
            #add-point:BEFORE FIELD xmja007 name="construct.b.page4.xmja007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja007
            
            #add-point:AFTER FIELD xmja007 name="construct.a.page4.xmja007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja007
            #add-point:ON ACTION controlp INFIELD xmja007 name="construct.c.page4.xmja007"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page4.xmja011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja011
            #add-point:ON ACTION controlp INFIELD xmja011 name="construct.c.page4.xmja011"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja011  #顯示到畫面上
            NEXT FIELD xmja011                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja011
            #add-point:BEFORE FIELD xmja011 name="construct.b.page4.xmja011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja011
            
            #add-point:AFTER FIELD xmja011 name="construct.a.page4.xmja011"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja012
            #add-point:BEFORE FIELD xmja012 name="construct.b.page4.xmja012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja012
            
            #add-point:AFTER FIELD xmja012 name="construct.a.page4.xmja012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja012
            #add-point:ON ACTION controlp INFIELD xmja012 name="construct.c.page4.xmja012"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page4.xmja013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja013
            #add-point:ON ACTION controlp INFIELD xmja013 name="construct.c.page4.xmja013"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja013  #顯示到畫面上
            NEXT FIELD xmja013                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja013
            #add-point:BEFORE FIELD xmja013 name="construct.b.page4.xmja013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja013
            
            #add-point:AFTER FIELD xmja013 name="construct.a.page4.xmja013"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja014
            #add-point:BEFORE FIELD xmja014 name="construct.b.page4.xmja014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja014
            
            #add-point:AFTER FIELD xmja014 name="construct.a.page4.xmja014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja014
            #add-point:ON ACTION controlp INFIELD xmja014 name="construct.c.page4.xmja014"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page4.xmja015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja015
            #add-point:ON ACTION controlp INFIELD xmja015 name="construct.c.page4.xmja015"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja015  #顯示到畫面上
            NEXT FIELD xmja015                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja015
            #add-point:BEFORE FIELD xmja015 name="construct.b.page4.xmja015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja015
            
            #add-point:AFTER FIELD xmja015 name="construct.a.page4.xmja015"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja016
            #add-point:BEFORE FIELD xmja016 name="construct.b.page4.xmja016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja016
            
            #add-point:AFTER FIELD xmja016 name="construct.a.page4.xmja016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja016
            #add-point:ON ACTION controlp INFIELD xmja016 name="construct.c.page4.xmja016"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page4.xmja017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja017
            #add-point:ON ACTION controlp INFIELD xmja017 name="construct.c.page4.xmja017"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja017  #顯示到畫面上
            NEXT FIELD xmja017                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja017
            #add-point:BEFORE FIELD xmja017 name="construct.b.page4.xmja017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja017
            
            #add-point:AFTER FIELD xmja017 name="construct.a.page4.xmja017"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja018
            #add-point:BEFORE FIELD xmja018 name="construct.b.page4.xmja018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja018
            
            #add-point:AFTER FIELD xmja018 name="construct.a.page4.xmja018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja018
            #add-point:ON ACTION controlp INFIELD xmja018 name="construct.c.page4.xmja018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja008
            #add-point:BEFORE FIELD xmja008 name="construct.b.page4.xmja008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja008
            
            #add-point:AFTER FIELD xmja008 name="construct.a.page4.xmja008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja008
            #add-point:ON ACTION controlp INFIELD xmja008 name="construct.c.page4.xmja008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja009
            #add-point:BEFORE FIELD xmja009 name="construct.b.page4.xmja009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja009
            
            #add-point:AFTER FIELD xmja009 name="construct.a.page4.xmja009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja009
            #add-point:ON ACTION controlp INFIELD xmja009 name="construct.c.page4.xmja009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja010
            #add-point:BEFORE FIELD xmja010 name="construct.b.page4.xmja010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja010
            
            #add-point:AFTER FIELD xmja010 name="construct.a.page4.xmja010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja010
            #add-point:ON ACTION controlp INFIELD xmja010 name="construct.c.page4.xmja010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja022
            #add-point:BEFORE FIELD xmja022 name="construct.b.page4.xmja022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja022
            
            #add-point:AFTER FIELD xmja022 name="construct.a.page4.xmja022"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja022
            #add-point:ON ACTION controlp INFIELD xmja022 name="construct.c.page4.xmja022"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja019
            #add-point:BEFORE FIELD xmja019 name="construct.b.page4.xmja019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja019
            
            #add-point:AFTER FIELD xmja019 name="construct.a.page4.xmja019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja019
            #add-point:ON ACTION controlp INFIELD xmja019 name="construct.c.page4.xmja019"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja020
            #add-point:BEFORE FIELD xmja020 name="construct.b.page4.xmja020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja020
            
            #add-point:AFTER FIELD xmja020 name="construct.a.page4.xmja020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja020
            #add-point:ON ACTION controlp INFIELD xmja020 name="construct.c.page4.xmja020"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja021
            #add-point:BEFORE FIELD xmja021 name="construct.b.page4.xmja021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja021
            
            #add-point:AFTER FIELD xmja021 name="construct.a.page4.xmja021"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja021
            #add-point:ON ACTION controlp INFIELD xmja021 name="construct.c.page4.xmja021"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_imaa116
            #add-point:BEFORE FIELD l_imaa116 name="construct.b.page4.l_imaa116"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_imaa116
            
            #add-point:AFTER FIELD l_imaa116 name="construct.a.page4.l_imaa116"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.l_imaa116
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_imaa116
            #add-point:ON ACTION controlp INFIELD l_imaa116 name="construct.c.page4.l_imaa116"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_diaopai
            #add-point:BEFORE FIELD l_diaopai name="construct.b.page4.l_diaopai"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_diaopai
            
            #add-point:AFTER FIELD l_diaopai name="construct.a.page4.l_diaopai"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.l_diaopai
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_diaopai
            #add-point:ON ACTION controlp INFIELD l_diaopai name="construct.c.page4.l_diaopai"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_rate
            #add-point:BEFORE FIELD l_rate name="construct.b.page4.l_rate"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_rate
            
            #add-point:AFTER FIELD l_rate name="construct.a.page4.l_rate"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.l_rate
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_rate
            #add-point:ON ACTION controlp INFIELD l_rate name="construct.c.page4.l_rate"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page4.xmja024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja024
            #add-point:ON ACTION controlp INFIELD xmja024 name="construct.c.page4.xmja024"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_18()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja024  #顯示到畫面上
            NEXT FIELD xmja024                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja024
            #add-point:BEFORE FIELD xmja024 name="construct.b.page4.xmja024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja024
            
            #add-point:AFTER FIELD xmja024 name="construct.a.page4.xmja024"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja025
            #add-point:BEFORE FIELD xmja025 name="construct.b.page4.xmja025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja025
            
            #add-point:AFTER FIELD xmja025 name="construct.a.page4.xmja025"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja025
            #add-point:ON ACTION controlp INFIELD xmja025 name="construct.c.page4.xmja025"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page4.xmja026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja026
            #add-point:ON ACTION controlp INFIELD xmja026 name="construct.c.page4.xmja026"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oofb019()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja026  #顯示到畫面上
            NEXT FIELD xmja026                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja026
            #add-point:BEFORE FIELD xmja026 name="construct.b.page4.xmja026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja026
            
            #add-point:AFTER FIELD xmja026 name="construct.a.page4.xmja026"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja027
            #add-point:ON ACTION controlp INFIELD xmja027 name="construct.c.page4.xmja027"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbad001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja027  #顯示到畫面上
            NEXT FIELD xmja027                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja027
            #add-point:BEFORE FIELD xmja027 name="construct.b.page4.xmja027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja027
            
            #add-point:AFTER FIELD xmja027 name="construct.a.page4.xmja027"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja028
            #add-point:ON ACTION controlp INFIELD xmja028 name="construct.c.page4.xmja028"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_stce001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja028  #顯示到畫面上
            NEXT FIELD xmja028                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja028
            #add-point:BEFORE FIELD xmja028 name="construct.b.page4.xmja028"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja028
            
            #add-point:AFTER FIELD xmja028 name="construct.a.page4.xmja028"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja029
            #add-point:BEFORE FIELD xmja029 name="construct.b.page4.xmja029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja029
            
            #add-point:AFTER FIELD xmja029 name="construct.a.page4.xmja029"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja029
            #add-point:ON ACTION controlp INFIELD xmja029 name="construct.c.page4.xmja029"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja030
            #add-point:BEFORE FIELD xmja030 name="construct.b.page4.xmja030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja030
            
            #add-point:AFTER FIELD xmja030 name="construct.a.page4.xmja030"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja030
            #add-point:ON ACTION controlp INFIELD xmja030 name="construct.c.page4.xmja030"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja031
            #add-point:BEFORE FIELD xmja031 name="construct.b.page4.xmja031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja031
            
            #add-point:AFTER FIELD xmja031 name="construct.a.page4.xmja031"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja031
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja031
            #add-point:ON ACTION controlp INFIELD xmja031 name="construct.c.page4.xmja031"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja032
            #add-point:BEFORE FIELD xmja032 name="construct.b.page4.xmja032"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja032
            
            #add-point:AFTER FIELD xmja032 name="construct.a.page4.xmja032"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja032
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja032
            #add-point:ON ACTION controlp INFIELD xmja032 name="construct.c.page4.xmja032"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page4.xmja040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja040
            #add-point:ON ACTION controlp INFIELD xmja040 name="construct.c.page4.xmja040"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "1"
            CALL q_dbaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja040  #顯示到畫面上
            NEXT FIELD xmja040                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja040
            #add-point:BEFORE FIELD xmja040 name="construct.b.page4.xmja040"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja040
            
            #add-point:AFTER FIELD xmja040 name="construct.a.page4.xmja040"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja039
            #add-point:ON ACTION controlp INFIELD xmja039 name="construct.c.page4.xmja039"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "2"
            CALL q_dbaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja039  #顯示到畫面上
            NEXT FIELD xmja039                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja039
            #add-point:BEFORE FIELD xmja039 name="construct.b.page4.xmja039"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja039
            
            #add-point:AFTER FIELD xmja039 name="construct.a.page4.xmja039"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja038
            #add-point:ON ACTION controlp INFIELD xmja038 name="construct.c.page4.xmja038"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "3"
            CALL q_dbaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja038  #顯示到畫面上
            NEXT FIELD xmja038                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja038
            #add-point:BEFORE FIELD xmja038 name="construct.b.page4.xmja038"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja038
            
            #add-point:AFTER FIELD xmja038 name="construct.a.page4.xmja038"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja037
            #add-point:ON ACTION controlp INFIELD xmja037 name="construct.c.page4.xmja037"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "4"
            CALL q_dbaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmja037  #顯示到畫面上
            NEXT FIELD xmja037                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja037
            #add-point:BEFORE FIELD xmja037 name="construct.b.page4.xmja037"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja037
            
            #add-point:AFTER FIELD xmja037 name="construct.a.page4.xmja037"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja034
            #add-point:BEFORE FIELD xmja034 name="construct.b.page4.xmja034"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja034
            
            #add-point:AFTER FIELD xmja034 name="construct.a.page4.xmja034"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.xmja034
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja034
            #add-point:ON ACTION controlp INFIELD xmja034 name="construct.c.page4.xmja034"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table5 ON xmdbsite,xmdb001,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006,xmdb016,xmdb017, 
          xmdb007,xmdb008,xmdb009,xmdb200
           FROM s_detail5[1].xmdbsite,s_detail5[1].xmdb001,s_detail5[1].xmdb002,s_detail5[1].xmdb003, 
               s_detail5[1].xmdb004,s_detail5[1].xmdb005,s_detail5[1].xmdb006,s_detail5[1].xmdb016,s_detail5[1].xmdb017, 
               s_detail5[1].xmdb007,s_detail5[1].xmdb008,s_detail5[1].xmdb009,s_detail5[1].xmdb200
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body5.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 5)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdbsite
            #add-point:BEFORE FIELD xmdbsite name="construct.b.page5.xmdbsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdbsite
            
            #add-point:AFTER FIELD xmdbsite name="construct.a.page5.xmdbsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdbsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdbsite
            #add-point:ON ACTION controlp INFIELD xmdbsite name="construct.c.page5.xmdbsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb001
            #add-point:BEFORE FIELD xmdb001 name="construct.b.page5.xmdb001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb001
            
            #add-point:AFTER FIELD xmdb001 name="construct.a.page5.xmdb001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb001
            #add-point:ON ACTION controlp INFIELD xmdb001 name="construct.c.page5.xmdb001"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page5.xmdb002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb002
            #add-point:ON ACTION controlp INFIELD xmdb002 name="construct.c.page5.xmdb002"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooib002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xmdb002  #顯示到畫面上

            NEXT FIELD xmdb002                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb002
            #add-point:BEFORE FIELD xmdb002 name="construct.b.page5.xmdb002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb002
            
            #add-point:AFTER FIELD xmdb002 name="construct.a.page5.xmdb002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb003
            #add-point:BEFORE FIELD xmdb003 name="construct.b.page5.xmdb003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb003
            
            #add-point:AFTER FIELD xmdb003 name="construct.a.page5.xmdb003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb003
            #add-point:ON ACTION controlp INFIELD xmdb003 name="construct.c.page5.xmdb003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb004
            #add-point:BEFORE FIELD xmdb004 name="construct.b.page5.xmdb004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb004
            
            #add-point:AFTER FIELD xmdb004 name="construct.a.page5.xmdb004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb004
            #add-point:ON ACTION controlp INFIELD xmdb004 name="construct.c.page5.xmdb004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb005
            #add-point:BEFORE FIELD xmdb005 name="construct.b.page5.xmdb005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb005
            
            #add-point:AFTER FIELD xmdb005 name="construct.a.page5.xmdb005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb005
            #add-point:ON ACTION controlp INFIELD xmdb005 name="construct.c.page5.xmdb005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb006
            #add-point:BEFORE FIELD xmdb006 name="construct.b.page5.xmdb006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb006
            
            #add-point:AFTER FIELD xmdb006 name="construct.a.page5.xmdb006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb006
            #add-point:ON ACTION controlp INFIELD xmdb006 name="construct.c.page5.xmdb006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb016
            #add-point:BEFORE FIELD xmdb016 name="construct.b.page5.xmdb016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb016
            
            #add-point:AFTER FIELD xmdb016 name="construct.a.page5.xmdb016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb016
            #add-point:ON ACTION controlp INFIELD xmdb016 name="construct.c.page5.xmdb016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb017
            #add-point:BEFORE FIELD xmdb017 name="construct.b.page5.xmdb017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb017
            
            #add-point:AFTER FIELD xmdb017 name="construct.a.page5.xmdb017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb017
            #add-point:ON ACTION controlp INFIELD xmdb017 name="construct.c.page5.xmdb017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb007
            #add-point:BEFORE FIELD xmdb007 name="construct.b.page5.xmdb007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb007
            
            #add-point:AFTER FIELD xmdb007 name="construct.a.page5.xmdb007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb007
            #add-point:ON ACTION controlp INFIELD xmdb007 name="construct.c.page5.xmdb007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb008
            #add-point:BEFORE FIELD xmdb008 name="construct.b.page5.xmdb008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb008
            
            #add-point:AFTER FIELD xmdb008 name="construct.a.page5.xmdb008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb008
            #add-point:ON ACTION controlp INFIELD xmdb008 name="construct.c.page5.xmdb008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb009
            #add-point:BEFORE FIELD xmdb009 name="construct.b.page5.xmdb009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb009
            
            #add-point:AFTER FIELD xmdb009 name="construct.a.page5.xmdb009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb009
            #add-point:ON ACTION controlp INFIELD xmdb009 name="construct.c.page5.xmdb009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb200
            #add-point:BEFORE FIELD xmdb200 name="construct.b.page5.xmdb200"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb200
            
            #add-point:AFTER FIELD xmdb200 name="construct.a.page5.xmdb200"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.xmdb200
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb200
            #add-point:ON ACTION controlp INFIELD xmdb200 name="construct.c.page5.xmdb200"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table6 ON xrcdseq,xrcdld,imay0031,imaa0011,xrcd002,xrcdseq2,xrcd007,xrcd003,xrcd006, 
          xrcd004,xrcd104
           FROM s_detail6[1].xrcdseq,s_detail6[1].xrcdld,s_detail6[1].imay0031,s_detail6[1].imaa0011, 
               s_detail6[1].xrcd002,s_detail6[1].xrcdseq2,s_detail6[1].xrcd007,s_detail6[1].xrcd003, 
               s_detail6[1].xrcd006,s_detail6[1].xrcd004,s_detail6[1].xrcd104
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body6.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 6)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcdseq
            #add-point:BEFORE FIELD xrcdseq name="construct.b.page6.xrcdseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcdseq
            
            #add-point:AFTER FIELD xrcdseq name="construct.a.page6.xrcdseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.xrcdseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcdseq
            #add-point:ON ACTION controlp INFIELD xrcdseq name="construct.c.page6.xrcdseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcdld
            #add-point:BEFORE FIELD xrcdld name="construct.b.page6.xrcdld"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcdld
            
            #add-point:AFTER FIELD xrcdld name="construct.a.page6.xrcdld"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.xrcdld
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcdld
            #add-point:ON ACTION controlp INFIELD xrcdld name="construct.c.page6.xrcdld"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imay0031
            #add-point:BEFORE FIELD imay0031 name="construct.b.page6.imay0031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imay0031
            
            #add-point:AFTER FIELD imay0031 name="construct.a.page6.imay0031"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.imay0031
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imay0031
            #add-point:ON ACTION controlp INFIELD imay0031 name="construct.c.page6.imay0031"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa0011
            #add-point:BEFORE FIELD imaa0011 name="construct.b.page6.imaa0011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa0011
            
            #add-point:AFTER FIELD imaa0011 name="construct.a.page6.imaa0011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.imaa0011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa0011
            #add-point:ON ACTION controlp INFIELD imaa0011 name="construct.c.page6.imaa0011"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page6.xrcd002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd002
            #add-point:ON ACTION controlp INFIELD xrcd002 name="construct.c.page6.xrcd002"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrcd002  #顯示到畫面上
            NEXT FIELD xrcd002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd002
            #add-point:BEFORE FIELD xrcd002 name="construct.b.page6.xrcd002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd002
            
            #add-point:AFTER FIELD xrcd002 name="construct.a.page6.xrcd002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcdseq2
            #add-point:BEFORE FIELD xrcdseq2 name="construct.b.page6.xrcdseq2"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcdseq2
            
            #add-point:AFTER FIELD xrcdseq2 name="construct.a.page6.xrcdseq2"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.xrcdseq2
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcdseq2
            #add-point:ON ACTION controlp INFIELD xrcdseq2 name="construct.c.page6.xrcdseq2"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd007
            #add-point:BEFORE FIELD xrcd007 name="construct.b.page6.xrcd007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd007
            
            #add-point:AFTER FIELD xrcd007 name="construct.a.page6.xrcd007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.xrcd007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd007
            #add-point:ON ACTION controlp INFIELD xrcd007 name="construct.c.page6.xrcd007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd003
            #add-point:BEFORE FIELD xrcd003 name="construct.b.page6.xrcd003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd003
            
            #add-point:AFTER FIELD xrcd003 name="construct.a.page6.xrcd003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.xrcd003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd003
            #add-point:ON ACTION controlp INFIELD xrcd003 name="construct.c.page6.xrcd003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd006
            #add-point:BEFORE FIELD xrcd006 name="construct.b.page6.xrcd006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd006
            
            #add-point:AFTER FIELD xrcd006 name="construct.a.page6.xrcd006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.xrcd006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd006
            #add-point:ON ACTION controlp INFIELD xrcd006 name="construct.c.page6.xrcd006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd004
            #add-point:BEFORE FIELD xrcd004 name="construct.b.page6.xrcd004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd004
            
            #add-point:AFTER FIELD xrcd004 name="construct.a.page6.xrcd004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.xrcd004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd004
            #add-point:ON ACTION controlp INFIELD xrcd004 name="construct.c.page6.xrcd004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd104
            #add-point:BEFORE FIELD xrcd104 name="construct.b.page6.xrcd104"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd104
            
            #add-point:AFTER FIELD xrcd104 name="construct.a.page6.xrcd104"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.xrcd104
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd104
            #add-point:ON ACTION controlp INFIELD xrcd104 name="construct.c.page6.xrcd104"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table7 ON rtieseq,rtieseq1,rtie001,rtie002,rtie006
           FROM s_detail7[1].rtieseq,s_detail7[1].rtieseq1,s_detail7[1].rtie001,s_detail7[1].rtie002, 
               s_detail7[1].rtie006
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body7.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 7)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtieseq
            #add-point:BEFORE FIELD rtieseq name="construct.b.page7.rtieseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtieseq
            
            #add-point:AFTER FIELD rtieseq name="construct.a.page7.rtieseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtieseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtieseq
            #add-point:ON ACTION controlp INFIELD rtieseq name="construct.c.page7.rtieseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtieseq1
            #add-point:BEFORE FIELD rtieseq1 name="construct.b.page7.rtieseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtieseq1
            
            #add-point:AFTER FIELD rtieseq1 name="construct.a.page7.rtieseq1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtieseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtieseq1
            #add-point:ON ACTION controlp INFIELD rtieseq1 name="construct.c.page7.rtieseq1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtie001
            #add-point:BEFORE FIELD rtie001 name="construct.b.page7.rtie001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtie001
            
            #add-point:AFTER FIELD rtie001 name="construct.a.page7.rtie001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtie001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtie001
            #add-point:ON ACTION controlp INFIELD rtie001 name="construct.c.page7.rtie001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtie002
            #add-point:BEFORE FIELD rtie002 name="construct.b.page7.rtie002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtie002
            
            #add-point:AFTER FIELD rtie002 name="construct.a.page7.rtie002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtie002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtie002
            #add-point:ON ACTION controlp INFIELD rtie002 name="construct.c.page7.rtie002"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooia001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtie002  #顯示到畫面上
            NEXT FIELD rtie002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtie006
            #add-point:BEFORE FIELD rtie006 name="construct.b.page7.rtie006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtie006
            
            #add-point:AFTER FIELD rtie006 name="construct.a.page7.rtie006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.rtie006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtie006
            #add-point:ON ACTION controlp INFIELD rtie006 name="construct.c.page7.rtie006"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      #160513-00033#4--(S)
      CONSTRUCT g_wc2_table8 ON xmdcseq,xmdc200,xmdc201
           FROM s_detail8[1].l_xmdcseq, s_detail8[1].l_xmdc200,s_detail8[1].l_xmdc201
                      
         BEFORE CONSTRUCT
         
         ON ACTION controlp INFIELD l_xmdc200
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " stci004 = '11' AND stci010 = '22' AND stci026 ='2'"
            CALL q_stcidocno()
            DISPLAY g_qryparam.return1 TO l_xmdc200   
            NEXT FIELD l_xmdc200  
 
      END CONSTRUCT
      #160513-00033#4--(E)
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         LET g_xmdc_d[1].xmdcseq = ""
         DISPLAY ARRAY g_xmdc_d TO s_detail1.*
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY  
         LET g_xmdc3_d[1].xmddseq = ""
         DISPLAY ARRAY g_xmdc3_d TO s_detail3.*
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY  
         LET g_xmdc4_d[1].xmjaseq = ""
         DISPLAY ARRAY g_xmdc4_d TO s_detail4.*
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY          
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
            INITIALIZE g_wc2_table4 TO NULL
 
            INITIALIZE g_wc2_table5 TO NULL
 
            INITIALIZE g_wc2_table6 TO NULL
 
            INITIALIZE g_wc2_table7 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "xmda_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xmdc_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtic_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xmdd_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xmja_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xmdb_t" 
                     LET g_wc2_table5 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xrcd_t" 
                     LET g_wc2_table6 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "rtie_t" 
                     LET g_wc2_table7 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
   IF g_wc2_table5 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
   END IF
 
   IF g_wc2_table6 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
   END IF
 
   IF g_wc2_table7 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   LET g_detail_idx_list[8] = 1     #160513-00033#4
   #160513-00033#4-S
   IF g_wc2_table8 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
   END IF
   #160513-00033#4-E
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="adbt500.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION adbt500_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
                  
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xmdadocno,xmdadocdt,xmda001,xmda002,xmda003,xmda004
                          FROM s_browse[1].b_xmdadocno,s_browse[1].b_xmdadocdt,s_browse[1].b_xmda001, 
                              s_browse[1].b_xmda002,s_browse[1].b_xmda003,s_browse[1].b_xmda004
 
         BEFORE CONSTRUCT
               DISPLAY adbt500_filter_parser('xmdadocno') TO s_browse[1].b_xmdadocno
            DISPLAY adbt500_filter_parser('xmdadocdt') TO s_browse[1].b_xmdadocdt
            DISPLAY adbt500_filter_parser('xmda001') TO s_browse[1].b_xmda001
            DISPLAY adbt500_filter_parser('xmda002') TO s_browse[1].b_xmda002
            DISPLAY adbt500_filter_parser('xmda003') TO s_browse[1].b_xmda003
            DISPLAY adbt500_filter_parser('xmda004') TO s_browse[1].b_xmda004
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
                                    
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
                                                      
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL adbt500_filter_show('xmdadocno')
   CALL adbt500_filter_show('xmdadocdt')
   CALL adbt500_filter_show('xmda001')
   CALL adbt500_filter_show('xmda002')
   CALL adbt500_filter_show('xmda003')
   CALL adbt500_filter_show('xmda004')
 
END FUNCTION
 
{</section>}
 
{<section id="adbt500.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION adbt500_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
                  
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="adbt500.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION adbt500_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = adbt500_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="adbt500.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION adbt500_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
                  
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xmdc_d.clear()
   CALL g_xmdc2_d.clear()
   CALL g_xmdc3_d.clear()
   CALL g_xmdc4_d.clear()
   CALL g_xmdc5_d.clear()
   CALL g_xmdc6_d.clear()
   CALL g_xmdc7_d.clear()
 
   
   #add-point:query段other name="query.other"
   CALL g_xmdc8_d.clear()     #160513-00033#4
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL adbt500_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL adbt500_browser_fill("")
      CALL adbt500_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
   LET g_detail_idx_list[7] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL adbt500_filter_show('xmdadocno')
   CALL adbt500_filter_show('xmdadocdt')
   CALL adbt500_filter_show('xmda001')
   CALL adbt500_filter_show('xmda002')
   CALL adbt500_filter_show('xmda003')
   CALL adbt500_filter_show('xmda004')
   CALL adbt500_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL adbt500_fetch("F") 
      #顯示單身筆數
      CALL adbt500_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="adbt500.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION adbt500_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
 
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xmda_m.xmdadocno = g_browser[g_current_idx].b_xmdadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE adbt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdasite,g_xmda_m.xmdadocdt, 
       g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmda005,g_xmda_m.xmda202,g_xmda_m.xmda023,g_xmda_m.xmda004, 
       g_xmda_m.xmda200,g_xmda_m.xmda201,g_xmda_m.xmdastus,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda021, 
       g_xmda_m.xmda022,g_xmda_m.xmda203,g_xmda_m.xmda027,g_xmda_m.xmda024,g_xmda_m.xmda002,g_xmda_m.xmda003, 
       g_xmda_m.xmdaunit,g_xmda_m.xmda211,g_xmda_m.xmda210,g_xmda_m.xmda209,g_xmda_m.xmda208,g_xmda_m.xmda204, 
       g_xmda_m.xmda205,g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda206, 
       g_xmda_m.xmda207,g_xmda_m.xmda020,g_xmda_m.xmda036,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda009, 
       g_xmda_m.xmda010,g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013, 
       g_xmda_m.xmda035,g_xmda_m.xmda213,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid, 
       g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid, 
       g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt,g_xmda_m.xmda034,g_xmda_m.xmda006,g_xmda_m.xmda033, 
       g_xmda_m.xmda017,g_xmda_m.xmda019,g_xmda_m.xmda018,g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045, 
       g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043,g_xmda_m.xmdasite_desc,g_xmda_m.xmda202_desc, 
       g_xmda_m.xmda023_desc,g_xmda_m.xmda004_desc,g_xmda_m.xmda200_desc,g_xmda_m.xmda201_desc,g_xmda_m.xmda021_desc, 
       g_xmda_m.xmda022_desc,g_xmda_m.xmda203_desc,g_xmda_m.xmda027_desc,g_xmda_m.xmda024_desc,g_xmda_m.xmda002_desc, 
       g_xmda_m.xmda003_desc,g_xmda_m.xmdaunit_desc,g_xmda_m.xmda211_desc,g_xmda_m.xmda210_desc,g_xmda_m.xmda209_desc, 
       g_xmda_m.xmda208_desc,g_xmda_m.xmda204_desc,g_xmda_m.xmda032_desc,g_xmda_m.xmda206_desc,g_xmda_m.xmda207_desc, 
       g_xmda_m.xmda020_desc,g_xmda_m.xmda036_desc,g_xmda_m.xmda009_desc,g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc, 
       g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp_desc, 
       g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmda034_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc 
 
   
   #遮罩相關處理
   LET g_xmda_m_mask_o.* =  g_xmda_m.*
   CALL adbt500_xmda_t_mask()
   LET g_xmda_m_mask_n.* =  g_xmda_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adbt500_set_act_visible()   
   CALL adbt500_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_xmda_m_t.* = g_xmda_m.*
   LET g_xmda_m_o.* = g_xmda_m.*
   
   LET g_data_owner = g_xmda_m.xmdaownid      
   LET g_data_dept  = g_xmda_m.xmdaowndp
   
   #重新顯示   
   CALL adbt500_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="adbt500.insert" >}
#+ 資料新增
PRIVATE FUNCTION adbt500_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_doctype     LIKE rtai_t.rtai004  
   DEFINE l_insert      LIKE type_t.num5
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xmdc_d.clear()   
   CALL g_xmdc2_d.clear()  
   CALL g_xmdc3_d.clear()  
   CALL g_xmdc4_d.clear()  
   CALL g_xmdc5_d.clear()  
   CALL g_xmdc6_d.clear()  
   CALL g_xmdc7_d.clear()  
 
 
   INITIALIZE g_xmda_m.* TO NULL             #DEFAULT 設定
   
   LET g_xmdadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   CALL g_xmdc8_d.clear()  #160513-00033#4
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmda_m.xmdaownid = g_user
      LET g_xmda_m.xmdaowndp = g_dept
      LET g_xmda_m.xmdacrtid = g_user
      LET g_xmda_m.xmdacrtdp = g_dept 
      LET g_xmda_m.xmdacrtdt = cl_get_current()
      LET g_xmda_m.xmdamodid = g_user
      LET g_xmda_m.xmdamoddt = cl_get_current()
      LET g_xmda_m.xmdastus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xmda_m.xmda001 = "0"
      LET g_xmda_m.xmda005 = "1"
      LET g_xmda_m.xmdastus = "N"
      LET g_xmda_m.xmda007 = "1"
      LET g_xmda_m.xmda205 = "100"
      LET g_xmda_m.xmda048 = "1"
      LET g_xmda_m.xmda049 = "1"
      LET g_xmda_m.xmda013 = "N"
      LET g_xmda_m.xmda213 = "N"
      LET g_xmda_m.xmda039 = "1"
      LET g_xmda_m.xmda041 = "0"
      LET g_xmda_m.xmda042 = "0"
      LET g_xmda_m.xmda006 = "1"
      LET g_xmda_m.xmda019 = "Y"
      LET g_xmda_m.xmda030 = "N"
      LET g_xmda_m.xmda045 = "N"
      LET g_xmda_m.xmda046 = "N"
      LET g_xmda_m.xmda047 = "N"
      LET g_xmda_m.xmda043 = "0"
 
  
      #add-point:單頭預設值 name="insert.default"
      INITIALIZE g_xmda_m_t.* TO NULL
      LET g_xmda_m.xmdadocdt = g_today
      LET g_xmda_m.xmda002 = g_user
      #LET g_xmda_m.xmdasite = g_site
      CALL s_aooi500_default(g_prog,'xmdasite',g_xmda_m.xmdasite) RETURNING l_insert,g_xmda_m.xmdasite      
      IF NOT l_insert THEN
         RETURN
      END IF
      CALL s_desc_get_department_desc(g_xmda_m.xmdasite) RETURNING g_xmda_m.xmdasite_desc
      DISPLAY BY NAME g_xmda_m.xmdasite_desc
      CALL s_desc_get_person_desc(g_xmda_m.xmda002) RETURNING g_xmda_m.xmda002_desc
      DISPLAY BY NAME g_xmda_m.xmda002_desc     
      LET g_xmda_m.xmda003 = g_dept
      CALL s_desc_get_department_desc(g_xmda_m.xmda003) RETURNING g_xmda_m.xmda003_desc
      DISPLAY BY NAME g_xmda_m.xmda003_desc
      #預設單據的單別 
      LET l_success = ''
      LET l_doctype = ''
      CALL s_arti200_get_def_doc_type(g_xmda_m.xmdasite,g_prog,'1')
           RETURNING l_success, l_doctype
      LET g_xmda_m.xmdadocno = l_doctype
      LET g_xmda_m_t.* = g_xmda_m.*              #舊值備份 
      LET g_xmda_m_o.* = g_xmda_m.*
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_xmda_m_t.* = g_xmda_m.*
      LET g_xmda_m_o.* = g_xmda_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmda_m.xmdastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL adbt500_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
                                    
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xmda_m.* TO NULL
         INITIALIZE g_xmdc_d TO NULL
         INITIALIZE g_xmdc2_d TO NULL
         INITIALIZE g_xmdc3_d TO NULL
         INITIALIZE g_xmdc4_d TO NULL
         INITIALIZE g_xmdc5_d TO NULL
         INITIALIZE g_xmdc6_d TO NULL
         INITIALIZE g_xmdc7_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         INITIALIZE g_xmdc8_d TO NULL  #160513-00033#4
         #end add-point 
         CALL adbt500_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_xmdc_d.clear()
      #CALL g_xmdc2_d.clear()
      #CALL g_xmdc3_d.clear()
      #CALL g_xmdc4_d.clear()
      #CALL g_xmdc5_d.clear()
      #CALL g_xmdc6_d.clear()
      #CALL g_xmdc7_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adbt500_set_act_visible()   
   CALL adbt500_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmdaent = " ||g_enterprise|| " AND",
                      " xmdadocno = '", g_xmda_m.xmdadocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL adbt500_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE adbt500_cl
   
   CALL adbt500_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE adbt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdasite,g_xmda_m.xmdadocdt, 
       g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmda005,g_xmda_m.xmda202,g_xmda_m.xmda023,g_xmda_m.xmda004, 
       g_xmda_m.xmda200,g_xmda_m.xmda201,g_xmda_m.xmdastus,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda021, 
       g_xmda_m.xmda022,g_xmda_m.xmda203,g_xmda_m.xmda027,g_xmda_m.xmda024,g_xmda_m.xmda002,g_xmda_m.xmda003, 
       g_xmda_m.xmdaunit,g_xmda_m.xmda211,g_xmda_m.xmda210,g_xmda_m.xmda209,g_xmda_m.xmda208,g_xmda_m.xmda204, 
       g_xmda_m.xmda205,g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda206, 
       g_xmda_m.xmda207,g_xmda_m.xmda020,g_xmda_m.xmda036,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda009, 
       g_xmda_m.xmda010,g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013, 
       g_xmda_m.xmda035,g_xmda_m.xmda213,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid, 
       g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid, 
       g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt,g_xmda_m.xmda034,g_xmda_m.xmda006,g_xmda_m.xmda033, 
       g_xmda_m.xmda017,g_xmda_m.xmda019,g_xmda_m.xmda018,g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045, 
       g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043,g_xmda_m.xmdasite_desc,g_xmda_m.xmda202_desc, 
       g_xmda_m.xmda023_desc,g_xmda_m.xmda004_desc,g_xmda_m.xmda200_desc,g_xmda_m.xmda201_desc,g_xmda_m.xmda021_desc, 
       g_xmda_m.xmda022_desc,g_xmda_m.xmda203_desc,g_xmda_m.xmda027_desc,g_xmda_m.xmda024_desc,g_xmda_m.xmda002_desc, 
       g_xmda_m.xmda003_desc,g_xmda_m.xmdaunit_desc,g_xmda_m.xmda211_desc,g_xmda_m.xmda210_desc,g_xmda_m.xmda209_desc, 
       g_xmda_m.xmda208_desc,g_xmda_m.xmda204_desc,g_xmda_m.xmda032_desc,g_xmda_m.xmda206_desc,g_xmda_m.xmda207_desc, 
       g_xmda_m.xmda020_desc,g_xmda_m.xmda036_desc,g_xmda_m.xmda009_desc,g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc, 
       g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp_desc, 
       g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmda034_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc 
 
   
   
   #遮罩相關處理
   LET g_xmda_m_mask_o.* =  g_xmda_m.*
   CALL adbt500_xmda_t_mask()
   LET g_xmda_m_mask_n.* =  g_xmda_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmda_m.xmdasite,g_xmda_m.xmdasite_desc,g_xmda_m.xmdadocdt,g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
       g_xmda_m.xmdadocno_desc,g_xmda_m.xmda005,g_xmda_m.xmda202,g_xmda_m.xmda202_desc,g_xmda_m.xmda023, 
       g_xmda_m.xmda023_desc,g_xmda_m.xmda004,g_xmda_m.xmda004_desc,g_xmda_m.xmda200,g_xmda_m.xmda200_desc, 
       g_xmda_m.xmda201,g_xmda_m.xmda201_desc,g_xmda_m.xmdastus,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda021, 
       g_xmda_m.xmda021_desc,g_xmda_m.xmda022,g_xmda_m.xmda022_desc,g_xmda_m.xmda203,g_xmda_m.xmda203_desc, 
       g_xmda_m.xmda027,g_xmda_m.xmda027_desc,g_xmda_m.xmda024,g_xmda_m.xmda024_desc,g_xmda_m.xmda002, 
       g_xmda_m.xmda002_desc,g_xmda_m.xmda003,g_xmda_m.xmda003_desc,g_xmda_m.xmdaunit,g_xmda_m.xmdaunit_desc, 
       g_xmda_m.xmda211,g_xmda_m.xmda211_desc,g_xmda_m.xmda210,g_xmda_m.xmda210_desc,g_xmda_m.xmda209, 
       g_xmda_m.xmda209_desc,g_xmda_m.xmda208,g_xmda_m.xmda208_desc,g_xmda_m.xmda204,g_xmda_m.xmda204_desc, 
       g_xmda_m.xmda205,g_xmda_m.xmda032,g_xmda_m.xmda032_desc,g_xmda_m.xmda071,g_xmda_m.xmda025,g_xmda_m.xmda025_desc, 
       g_xmda_m.oofb017,g_xmda_m.xmda026,g_xmda_m.xmda026_desc,g_xmda_m.oofb017_1,g_xmda_m.xmda206,g_xmda_m.xmda206_desc, 
       g_xmda_m.xmda207,g_xmda_m.xmda207_desc,g_xmda_m.xmda020,g_xmda_m.xmda020_desc,g_xmda_m.xmda036, 
       g_xmda_m.xmda036_desc,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda009,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda015,g_xmda_m.xmda015_desc,g_xmda_m.xmda016, 
       g_xmda_m.xmda011,g_xmda_m.xmda011_desc,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc, 
       g_xmda_m.isaf011,g_xmda_m.xmda213,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid, 
       g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc, 
       g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc, 
       g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmdacnfdt,g_xmda_m.xmda034, 
       g_xmda_m.xmda034_desc,g_xmda_m.xmda006,g_xmda_m.xmda033,g_xmda_m.xmda017,g_xmda_m.xmda017_desc, 
       g_xmda_m.xmda019,g_xmda_m.xmda018,g_xmda_m.xmda018_desc,g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045, 
       g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_xmda_m.xmdaownid      
   LET g_data_dept  = g_xmda_m.xmdaowndp
   
   #功能已完成,通報訊息中心
   CALL adbt500_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.modify" >}
#+ 資料修改
PRIVATE FUNCTION adbt500_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
   DEFINE l_wc2_table5   STRING
 
   DEFINE l_wc2_table6   STRING
 
   DEFINE l_wc2_table7   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   DEFINE l_cnt      LIKE type_t.num5  
   DEFINE l_success  LIKE type_t.num5 
   DEFINE l_xmja008  LIKE xmja_t.xmja008
   DEFINE l_xmja009  LIKE xmja_t.xmja009
   DEFINE l_xmja010  LIKE xmja_t.xmja010
   DEFINE l_xmja022  LIKE xmja_t.xmja022
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   #151008-00010#4--(S)
   LET l_cnt = 0
   SELECT count(*) INTO l_cnt
     FROM xmdc_t     
    WHERE xmdcent = g_enterprise 
      AND xmdcdocno = g_xmda_m.xmdadocno AND xmdcseq > 9000
   IF l_cnt > 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.code   = 'adb-00434'
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   #151008-00010#4--(E)
   #end add-point
   
   #保存單頭舊值
   LET g_xmda_m_t.* = g_xmda_m.*
   LET g_xmda_m_o.* = g_xmda_m.*
   
   IF g_xmda_m.xmdadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
   CALL s_transaction_begin()
   
   OPEN adbt500_cl USING g_enterprise,g_xmda_m.xmdadocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN adbt500_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE adbt500_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE adbt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdasite,g_xmda_m.xmdadocdt, 
       g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmda005,g_xmda_m.xmda202,g_xmda_m.xmda023,g_xmda_m.xmda004, 
       g_xmda_m.xmda200,g_xmda_m.xmda201,g_xmda_m.xmdastus,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda021, 
       g_xmda_m.xmda022,g_xmda_m.xmda203,g_xmda_m.xmda027,g_xmda_m.xmda024,g_xmda_m.xmda002,g_xmda_m.xmda003, 
       g_xmda_m.xmdaunit,g_xmda_m.xmda211,g_xmda_m.xmda210,g_xmda_m.xmda209,g_xmda_m.xmda208,g_xmda_m.xmda204, 
       g_xmda_m.xmda205,g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda206, 
       g_xmda_m.xmda207,g_xmda_m.xmda020,g_xmda_m.xmda036,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda009, 
       g_xmda_m.xmda010,g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013, 
       g_xmda_m.xmda035,g_xmda_m.xmda213,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid, 
       g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid, 
       g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt,g_xmda_m.xmda034,g_xmda_m.xmda006,g_xmda_m.xmda033, 
       g_xmda_m.xmda017,g_xmda_m.xmda019,g_xmda_m.xmda018,g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045, 
       g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043,g_xmda_m.xmdasite_desc,g_xmda_m.xmda202_desc, 
       g_xmda_m.xmda023_desc,g_xmda_m.xmda004_desc,g_xmda_m.xmda200_desc,g_xmda_m.xmda201_desc,g_xmda_m.xmda021_desc, 
       g_xmda_m.xmda022_desc,g_xmda_m.xmda203_desc,g_xmda_m.xmda027_desc,g_xmda_m.xmda024_desc,g_xmda_m.xmda002_desc, 
       g_xmda_m.xmda003_desc,g_xmda_m.xmdaunit_desc,g_xmda_m.xmda211_desc,g_xmda_m.xmda210_desc,g_xmda_m.xmda209_desc, 
       g_xmda_m.xmda208_desc,g_xmda_m.xmda204_desc,g_xmda_m.xmda032_desc,g_xmda_m.xmda206_desc,g_xmda_m.xmda207_desc, 
       g_xmda_m.xmda020_desc,g_xmda_m.xmda036_desc,g_xmda_m.xmda009_desc,g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc, 
       g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp_desc, 
       g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmda034_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc 
 
   
   #檢查是否允許此動作
   IF NOT adbt500_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmda_m_mask_o.* =  g_xmda_m.*
   CALL adbt500_xmda_t_mask()
   LET g_xmda_m_mask_n.* =  g_xmda_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   #如果已經有收款就不可以修改單據
   LET l_success = ''
   CALL s_pay_chk(g_xmda_m.xmdadocno) RETURNING l_success
   IF NOT l_success THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM xmja_t
    WHERE xmjaent = g_enterprise
      AND xmjadocno = g_xmda_m.xmdadocno
      AND xmja001 = '2'
   IF l_cnt > 0 THEN
      IF g_action_choice = "modify" THEN
         IF NOT cl_ask_confirm('adb-00226') THEN #已存在返物信息,异动将删除对应资料,是否异动(Y/N)?
            CLOSE adbt500_cl
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            #返物资料初始化
            CALL s_gift_adb_initialize('1',g_xmda_m.xmdadocno,g_xmda_m.xmdasite) RETURNING l_success
            IF NOT l_success THEN
               CLOSE adbt500_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
         END IF
      END IF
   END IF
   
   #检查是否已手工改价
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM rtic_t
    WHERE rticent = g_enterprise AND rticdocno = g_xmda_m.xmdadocno AND rtic002 = '10'
   IF l_cnt > 0 THEN
      IF g_action_choice = "modify" THEN
         IF NOT cl_ask_confirm('adb-00419') THEN #已存在手工改价,异动将删除对应资料,是否异动(Y/N)?
            CLOSE adbt500_cl
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_get_price_adb('1',g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt,'',g_xmda_m.xmda004,'','','',g_xmda_m.xmda015,'','2')
               RETURNING l_success,l_xmja008,l_xmja009,l_xmja010,l_xmja022
         END IF
      END IF
   END IF
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
   #LET l_wc2_table5 = g_wc2_table5
   #LET l_wc2_table5 = " 1=1"
 
   #LET l_wc2_table6 = g_wc2_table6
   #LET l_wc2_table6 = " 1=1"
 
   #LET l_wc2_table7 = g_wc2_table7
   #LET l_wc2_table7 = " 1=1"
 
 
 
   
   CALL adbt500_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
   #LET  g_wc2_table5 = l_wc2_table5 
 
   #LET  g_wc2_table6 = l_wc2_table6 
 
   #LET  g_wc2_table7 = l_wc2_table7 
 
 
 
    
   WHILE TRUE
      LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xmda_m.xmdamodid = g_user 
LET g_xmda_m.xmdamoddt = cl_get_current()
LET g_xmda_m.xmdamodid_desc = cl_get_username(g_xmda_m.xmdamodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      LET g_xmda_m_o.* = g_xmda_m.*  #舊值備份
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_xmda_m.xmdastus MATCHES "[DR]" THEN 
         LET g_xmda_m.xmdastus = "N"
      END IF

      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL adbt500_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
                                    
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE xmda_t SET (xmdamodid,xmdamoddt) = (g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt)
          WHERE xmdaent = g_enterprise AND xmdadocno = g_xmdadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_xmda_m.* = g_xmda_m_t.*
            CALL adbt500_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_xmda_m.xmdadocno != g_xmda_m_t.xmdadocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
                                                      
         #end add-point
         
         #更新單身key值
         UPDATE xmdc_t SET xmdcdocno = g_xmda_m.xmdadocno
 
          WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m_t.xmdadocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
                                                      
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmdc_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdc_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
                                                      
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
                                                      
         #end add-point
         
         UPDATE rtic_t
            SET rticdocno = g_xmda_m.xmdadocno
 
          WHERE rticent = g_enterprise AND
                rticdocno = g_xmdadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
                                                      
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtic_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
                                                      
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update3"
                                                      
         #end add-point
         
         UPDATE xmdd_t
            SET xmdddocno = g_xmda_m.xmdadocno
 
          WHERE xmddent = g_enterprise AND
                xmdddocno = g_xmdadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update3"
                                                      
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmdd_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdd_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update3"
                                                      
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update4"
         
         #end add-point
         
         UPDATE xmja_t
            SET xmjadocno = g_xmda_m.xmdadocno
 
          WHERE xmjaent = g_enterprise AND
                xmjadocno = g_xmdadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update4"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmja_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmja_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update4"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update5"
         
         #end add-point
         
         UPDATE xmdb_t
            SET xmdbdocno = g_xmda_m.xmdadocno
 
          WHERE xmdbent = g_enterprise AND
                xmdbdocno = g_xmdadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update5"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xmdb_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdb_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update5"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update6"
         
         #end add-point
         
         UPDATE xrcd_t
            SET xrcddocno = g_xmda_m.xmdadocno
 
          WHERE xrcdent = g_enterprise AND
                xrcddocno = g_xmdadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update6"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xrcd_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update6"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update7"
         
         #end add-point
         
         UPDATE rtie_t
            SET rtiedocno = g_xmda_m.xmdadocno
 
          WHERE rtieent = g_enterprise AND
                rtiedocno = g_xmdadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update7"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtie_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update7"
         
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adbt500_set_act_visible()   
   CALL adbt500_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xmdaent = " ||g_enterprise|| " AND",
                      " xmdadocno = '", g_xmda_m.xmdadocno, "' "
 
   #填到對應位置
   CALL adbt500_browser_fill("")
 
   CLOSE adbt500_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL adbt500_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="adbt500.input" >}
#+ 資料輸入
PRIVATE FUNCTION adbt500_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_pmaa004    LIKE pmaa_t.pmaa004      #法人類型
   DEFINE  l_success    LIKE type_t.num5
   DEFINE  l_flag       LIKE type_t.num5
   DEFINE  l_rate       LIKE inaj_t.inaj014
   DEFINE  l_sql        STRING
   DEFINE  l_sql1       STRING
   DEFINE  l_sql2       STRING    
   DEFINE  l_where      STRING   
   DEFINE  l_ooef004    LIKE ooef_t.ooef004
   DEFINE  l_ooef016    LIKE ooef_t.ooef016
   DEFINE  l_pmaa027    LIKE pmaa_t.pmaa027 
   DEFINE  l_pmaa027_1  LIKE pmaa_t.pmaa027 
   DEFINE  l_pmaa002    LIKE pmaa_t.pmaa002
   DEFINE  l_oocq019    LIKE oocq_t.oocq019   
   DEFINE  l_xmah004    LIKE xmah_t.xmah004
   DEFINE  l_xmah005    LIKE xmah_t.xmah005
   DEFINE  l_xmah006    LIKE xmah_t.xmah006   
   DEFINE  l_pmao002    LIKE pmao_t.pmao002
   DEFINE  l_pmao003    LIKE pmao_t.pmao003 
   DEFINE  l_pmao004    LIKE pmao_t.pmao004 
   DEFINE  l_imaf062    LIKE imaf_t.imaf062 
   DEFINE  l_xrcd113    LIKE xrcd_t.xrcd113
   DEFINE  l_xrcd114    LIKE xrcd_t.xrcd114
   DEFINE  l_xrcd115    LIKE xrcd_t.xrcd115   
   DEFINE  r_success    LIKE type_t.num5 
   DEFINE  r_address    STRING 
   DEFINE  r_oofb011    LIKE oofb_t.oofb011
   DEFINE  l_oodbl004   LIKE oodbl_t.oodbl004  #稅別名稱
   DEFINE  l_oodb005    LIKE oodb_t.oodb005    #含稅否
   DEFINE  l_oodb006    LIKE oodb_t.oodb006    #稅率 
   DEFINE  l_oodb011    LIKE oodb_t.oodb011    #取得稅別類型1:正常稅率2:依料件設定   
   DEFINE  l_imaa143    LIKE imaa_t.imaa143
   DEFINE  l_ooef019    LIKE ooef_t.ooef019
   DEFINE  l_delete     LIKE type_t.num5
   DEFINE  l_slip       LIKE ooba_t.ooba001
   DEFINE  l_para_data  LIKE type_t.chr80
   DEFINE  l_xmja008    LIKE xmja_t.xmja008
   DEFINE  l_xmja009    LIKE xmja_t.xmja009
   DEFINE  l_xmja010    LIKE xmja_t.xmja010
   DEFINE  l_xmja022    LIKE xmja_t.xmja022
   DEFINE  l_xmja031    LIKE xmja_t.xmja031
   DEFINE  l_xmja032    LIKE xmja_t.xmja032
   DEFINE  l_xmja014    LIKE xmja_t.xmja014
   DEFINE  l_errno      LIKE type_t.chr10
   DEFINE  l_pmak002    LIKE pmak_t.pmak002
   DEFINE  l_rtdx029    LIKE rtdx_t.rtdx029     
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmda_m.xmdasite,g_xmda_m.xmdasite_desc,g_xmda_m.xmdadocdt,g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
       g_xmda_m.xmdadocno_desc,g_xmda_m.xmda005,g_xmda_m.xmda202,g_xmda_m.xmda202_desc,g_xmda_m.xmda023, 
       g_xmda_m.xmda023_desc,g_xmda_m.xmda004,g_xmda_m.xmda004_desc,g_xmda_m.xmda200,g_xmda_m.xmda200_desc, 
       g_xmda_m.xmda201,g_xmda_m.xmda201_desc,g_xmda_m.xmdastus,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda021, 
       g_xmda_m.xmda021_desc,g_xmda_m.xmda022,g_xmda_m.xmda022_desc,g_xmda_m.xmda203,g_xmda_m.xmda203_desc, 
       g_xmda_m.xmda027,g_xmda_m.xmda027_desc,g_xmda_m.xmda024,g_xmda_m.xmda024_desc,g_xmda_m.xmda002, 
       g_xmda_m.xmda002_desc,g_xmda_m.xmda003,g_xmda_m.xmda003_desc,g_xmda_m.xmdaunit,g_xmda_m.xmdaunit_desc, 
       g_xmda_m.xmda211,g_xmda_m.xmda211_desc,g_xmda_m.xmda210,g_xmda_m.xmda210_desc,g_xmda_m.xmda209, 
       g_xmda_m.xmda209_desc,g_xmda_m.xmda208,g_xmda_m.xmda208_desc,g_xmda_m.xmda204,g_xmda_m.xmda204_desc, 
       g_xmda_m.xmda205,g_xmda_m.xmda032,g_xmda_m.xmda032_desc,g_xmda_m.xmda071,g_xmda_m.xmda025,g_xmda_m.xmda025_desc, 
       g_xmda_m.oofb017,g_xmda_m.xmda026,g_xmda_m.xmda026_desc,g_xmda_m.oofb017_1,g_xmda_m.xmda206,g_xmda_m.xmda206_desc, 
       g_xmda_m.xmda207,g_xmda_m.xmda207_desc,g_xmda_m.xmda020,g_xmda_m.xmda020_desc,g_xmda_m.xmda036, 
       g_xmda_m.xmda036_desc,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda009,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda015,g_xmda_m.xmda015_desc,g_xmda_m.xmda016, 
       g_xmda_m.xmda011,g_xmda_m.xmda011_desc,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc, 
       g_xmda_m.isaf011,g_xmda_m.xmda213,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid, 
       g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc, 
       g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc, 
       g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmdacnfdt,g_xmda_m.xmda034, 
       g_xmda_m.xmda034_desc,g_xmda_m.xmda006,g_xmda_m.xmda033,g_xmda_m.xmda017,g_xmda_m.xmda017_desc, 
       g_xmda_m.xmda019,g_xmda_m.xmda018,g_xmda_m.xmda018_desc,g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045, 
       g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
                  
   #end add-point 
   LET g_forupd_sql = "SELECT xmdcsite,xmdcseq,xmdc027,xmdc001,xmdc002,xmdc004,xmdc005,xmdc006,xmdc007, 
       xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc010,xmdc011,xmdc015,xmdc016,xmdc017,xmdc046, 
       xmdc047,xmdc048,xmdc023,xmdc019,xmdc020,xmdc021,xmdc022,xmdc051,xmdcunit,xmdcorga,xmdc052,xmdc049, 
       xmdc053,xmdc050 FROM xmdc_t WHERE xmdcent=? AND xmdcdocno=? AND xmdcseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
                  
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt500_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
                  
   #end add-point    
   LET g_forupd_sql = "SELECT rticseq,rticseq1,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007, 
       rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic019, 
       rtic020,rtic021,rtic022,rtic023,rtic024,rtic025,rtic026,rtic027,rtic028,rtic029 FROM rtic_t WHERE  
       rticent=? AND rticdocno=? AND rticseq=? AND rticseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
                  
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt500_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql3"
                  
   #end add-point    
   LET g_forupd_sql = "SELECT xmdddocno,xmddseq,xmddseq1,xmddseq2,xmdd229,xmdd003,xmdd001,xmdd002,xmdd200, 
       xmdd004,xmdd005,xmdd011,xmdd012,xmdd006,xmdd201,xmdd202,xmdd024,xmdd025,xmdd026,xmdd027,xmdd203, 
       xmdd204,xmdd205,xmdd206,xmdd029,xmdd028,xmdd019,xmdd030,xmdd207,xmddunit,xmdd210,xmdd212,xmdd213, 
       xmdd214,xmdd215,xmdd231,xmdd009,xmdd031,xmdd014,xmdd015,xmdd016,xmdd017,xmdd221,xmddsite,xmdd218, 
       xmdd219,xmdd220,xmdd222,xmdd223,xmdd224,xmddorga,xmdd226,xmdd227,xmdd228,xmdd013,xmdd018,xmdd020, 
       xmdd021,xmdd022,xmdd023 FROM xmdd_t WHERE xmddent=? AND xmdddocno=? AND xmddseq=? AND xmddseq1=?  
       AND xmddseq2=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql3"
                  
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt500_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql4"
   
   #end add-point    
   LET g_forupd_sql = "SELECT xmjaunit,xmjaseq,xmjasite,xmja001,xmja002,xmja003,xmja033,xmja004,xmja005, 
       xmja006,xmja007,xmja011,xmja012,xmja013,xmja014,xmja015,xmja016,xmja017,xmja018,xmja008,xmja009, 
       xmja010,xmja022,xmja019,xmja020,xmja021,xmja024,xmja025,xmja026,xmja027,xmja028,xmja029,xmja030, 
       xmja031,xmja032,xmja040,xmja039,xmja038,xmja037,xmja034 FROM xmja_t WHERE xmjaent=? AND xmjadocno=?  
       AND xmjaseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql4"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt500_bcl4 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql5"
   
   #end add-point    
   LET g_forupd_sql = "SELECT xmdbsite,xmdb001,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006,xmdb016,xmdb017, 
       xmdb007,xmdb008,xmdb009,xmdb200 FROM xmdb_t WHERE xmdbent=? AND xmdbdocno=? AND xmdb001=? FOR  
       UPDATE"
   #add-point:input段define_sql name="input.after_define_sql5"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt500_bcl5 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql6"
   
   #end add-point    
   LET g_forupd_sql = "SELECT xrcdseq,xrcdld,xrcd002,xrcdseq2,xrcd007,xrcd003,xrcd006,xrcd004,xrcd104  
       FROM xrcd_t WHERE xrcdent=? AND xrcddocno=? AND xrcdld=? AND xrcdseq=? AND xrcdseq2=? AND xrcd007=?  
       FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql6"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt500_bcl6 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql7"
   
   #end add-point    
   LET g_forupd_sql = "SELECT rtieseq,rtieseq1,rtie001,rtie002,rtie006 FROM rtie_t WHERE rtieent=? AND  
       rtiedocno=? AND rtieseq=? AND rtieseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql7"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt500_bcl7 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   IF p_cmd = 'u' THEN   
      #取得銷售分類
      LET g_pmab089 = g_xmda_m.xmda024
      #取得稅別類型
      LET g_tax_app = ''
      CALL s_tax_chk(g_xmda_m.xmdasite,g_xmda_m.xmda011)
        RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011
      IF l_success THEN
         LET g_tax_app = l_oodb011
      END IF 
     
   END IF 
   LET g_flag2 = FALSE
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL adbt500_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
                  
   #end add-point
   CALL adbt500_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xmda_m.xmdasite,g_xmda_m.xmdadocdt,g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmda005, 
       g_xmda_m.xmda202,g_xmda_m.xmda023,g_xmda_m.xmda004,g_xmda_m.xmda200,g_xmda_m.xmda201,g_xmda_m.xmdastus, 
       g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda203,g_xmda_m.xmda027, 
       g_xmda_m.xmda024,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdaunit,g_xmda_m.xmda211,g_xmda_m.xmda210, 
       g_xmda_m.xmda209,g_xmda_m.xmda208,g_xmda_m.xmda204,g_xmda_m.xmda205,g_xmda_m.xmda071,g_xmda_m.xmda025, 
       g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda036,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda009, 
       g_xmda_m.xmda010,g_xmda_m.xmda015,g_xmda_m.xmda011,g_xmda_m.xmda035,g_xmda_m.xmda039,g_xmda_m.xmda041, 
       g_xmda_m.xmda042,g_xmda_m.xmda034,g_xmda_m.xmda006,g_xmda_m.xmda033,g_xmda_m.xmda017,g_xmda_m.xmda019, 
       g_xmda_m.xmda018,g_xmda_m.xmda028
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="adbt500.input.head" >}
      #單頭段
      INPUT BY NAME g_xmda_m.xmdasite,g_xmda_m.xmdadocdt,g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmda005, 
          g_xmda_m.xmda202,g_xmda_m.xmda023,g_xmda_m.xmda004,g_xmda_m.xmda200,g_xmda_m.xmda201,g_xmda_m.xmdastus, 
          g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda203,g_xmda_m.xmda027, 
          g_xmda_m.xmda024,g_xmda_m.xmda002,g_xmda_m.xmda003,g_xmda_m.xmdaunit,g_xmda_m.xmda211,g_xmda_m.xmda210, 
          g_xmda_m.xmda209,g_xmda_m.xmda208,g_xmda_m.xmda204,g_xmda_m.xmda205,g_xmda_m.xmda071,g_xmda_m.xmda025, 
          g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda036,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda009, 
          g_xmda_m.xmda010,g_xmda_m.xmda015,g_xmda_m.xmda011,g_xmda_m.xmda035,g_xmda_m.xmda039,g_xmda_m.xmda041, 
          g_xmda_m.xmda042,g_xmda_m.xmda034,g_xmda_m.xmda006,g_xmda_m.xmda033,g_xmda_m.xmda017,g_xmda_m.xmda019, 
          g_xmda_m.xmda018,g_xmda_m.xmda028 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN adbt500_cl USING g_enterprise,g_xmda_m.xmdadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adbt500_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE adbt500_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL adbt500_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            IF l_cmd_t = 'a' THEN
               CALL cl_set_combo_scc_part('xmda005','2063','1,3,6')
            END IF               
            #end add-point
            CALL adbt500_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdasite
            
            #add-point:AFTER FIELD xmdasite name="input.a.xmdasite"
            IF NOT cl_null(g_xmda_m.xmdasite) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#               
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = g_xmda_m.xmdasite
#               LET g_chkparam.arg2 = '8'
#               LET g_chkparam.arg3 = g_site
#                  
#               #呼叫檢查存在並帶值的library
#               IF NOT cl_chk_exist("v_ooed004") THEN
               CALL s_aooi500_chk(g_prog,'xmdasite',g_xmda_m.xmdasite,g_xmda_m.xmdasite) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = '' 
                  LET g_errparam.code   = l_errno 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  
                  #LET g_xmda_m.xmdasite = g_xmda_m_t.xmdasite   #161006-00008#5 mark
                  LET g_xmda_m.xmdasite = g_xmda_m_o.xmdasite    #161006-00008#5 add
                  CALL s_desc_get_department_desc(g_xmda_m.xmdasite) RETURNING g_xmda_m.xmdasite_desc
                  DISPLAY BY NAME g_xmda_m.xmdasite_desc
                  NEXT FIELD CURRENT
               END IF
            ELSE
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 'axc-00120' 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               
               LET g_xmda_m.xmdasite = g_xmda_m_t.xmdasite
               CALL s_desc_get_department_desc(g_xmda_m.xmdasite) RETURNING g_xmda_m.xmdasite_desc
               DISPLAY BY NAME g_xmda_m.xmdasite_desc
               NEXT FIELD CURRENT
            END IF  
            CALL s_desc_get_department_desc(g_xmda_m.xmdasite) RETURNING g_xmda_m.xmdasite_desc
            DISPLAY BY NAME g_xmda_m.xmdasite_desc
            LET g_flag2 = TRUE
            CALL adbt500_set_entry(p_cmd)
            CALL adbt500_set_no_entry(p_cmd)            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdasite
            #add-point:BEFORE FIELD xmdasite name="input.b.xmdasite"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdasite
            #add-point:ON CHANGE xmdasite name="input.g.xmdasite"
                                                                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdadocdt
            #add-point:BEFORE FIELD xmdadocdt name="input.b.xmdadocdt"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdadocdt
            
            #add-point:AFTER FIELD xmdadocdt name="input.a.xmdadocdt"
 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdadocdt
            #add-point:ON CHANGE xmdadocdt name="input.g.xmdadocdt"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdadocno
            
            #add-point:AFTER FIELD xmdadocno name="input.a.xmdadocno"
                                                                                    #此段落由子樣板a05產生       
            IF  NOT cl_null(g_xmda_m.xmdadocno) THEN 
                IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t )) THEN   
                   IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmda_t WHERE "||"xmdaent = '" ||g_enterprise|| "' AND "||"xmdadocno = '"||g_xmda_m.xmdadocno ||"'",'std-00004',0) THEN 
                      #LET g_xmda_m.xmdadocno = g_xmdadocno_t         #160824-00007#48 Mark By Ken 161007
                      LET g_xmda_m.xmdadocno = g_xmda_m_o.xmdadocno   #160824-00007#48 Add By Ken 161007
                      CALL s_aooi200_get_slip_desc(g_xmda_m.xmdadocno) RETURNING g_xmda_m.xmdadocno_desc 
                      DISPLAY BY NAME g_xmda_m.xmdadocno_desc
                      NEXT FIELD CURRENT
                   END IF
                   IF NOT s_aooi200_chk_slip(g_xmda_m.xmdasite,'',g_xmda_m.xmdadocno,g_prog) THEN
                      #LET g_xmda_m.xmdadocno = g_xmdadocno_t         #160824-00007#48 Mark By Ken 161007
                      LET g_xmda_m.xmdadocno = g_xmda_m_o.xmdadocno   #160824-00007#48 Add By Ken 161007
                      CALL s_aooi200_get_slip_desc(g_xmda_m.xmdadocno) RETURNING g_xmda_m.xmdadocno_desc 
                      DISPLAY BY NAME g_xmda_m.xmdadocno_desc
                      NEXT FIELD CURRENT   
                   END IF
                END IF   
                CALL adbt500_docno_xmda_default()   #取得欄位預設值                
                #NEXT FIELD xmdadocdt
            ELSE
               NEXT FIELD CURRENT                 
            END IF
            CALL s_aooi200_get_slip_desc(g_xmda_m.xmdadocno) RETURNING g_xmda_m.xmdadocno_desc  
            DISPLAY BY NAME g_xmda_m.xmdadocno_desc
            LET g_xmda_m_o.* = g_xmda_m.*   #160824-00007#48 Add By Ken 161006

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdadocno
            #add-point:BEFORE FIELD xmdadocno name="input.b.xmdadocno"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdadocno
            #add-point:ON CHANGE xmdadocno name="input.g.xmdadocno"
                                                                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda001
            #add-point:BEFORE FIELD xmda001 name="input.b.xmda001"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda001
            
            #add-point:AFTER FIELD xmda001 name="input.a.xmda001"
                                                                        
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda001
            #add-point:ON CHANGE xmda001 name="input.g.xmda001"
                                                                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda005
            #add-point:BEFORE FIELD xmda005 name="input.b.xmda005"
                                                            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda005
            
            #add-point:AFTER FIELD xmda005 name="input.a.xmda005"
            IF NOT cl_null(g_xmda_m.xmda005) THEN
               IF g_xmda_m.xmda005 != g_xmda_m_o.xmda005 OR g_xmda_m_o.xmda005 IS NULL THEN
                  IF NOT adbt500_stce005_chk() THEN
                     LET g_xmda_m.xmda005 = g_xmda_m_o.xmda005
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               #lori522612  150123 add ----------------------(S)
               IF NOT cl_null(g_xmda_m.xmda004) THEN
                  IF g_xmda_m.xmda005 = '3' AND s_adb_pmaa248(g_xmda_m.xmda004) = 'Y' THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'adb-00409'
                     LET g_errparam.extend = g_xmda_m.xmda004
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     
                     LET g_xmda_m.xmda005 = g_xmda_m_o.xmda005
                     NEXT FIELD CURRENT                  
                  END IF
               END IF
               #lori522612  150123 add ----------------------(E)
               
               LET g_xmda_m_o.xmda005 = g_xmda_m.xmda005
               IF g_xmda_m.xmda005 <> '6' THEN
                  LET g_xmda_m.xmda200 = NULL
                  CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda200) RETURNING g_xmda_m.xmda200_desc
                  DISPLAY BY NAME g_xmda_m.xmda200_desc 
               ELSE
                  LET g_xmda_m.xmda201 = NULL
                  CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda201) RETURNING g_xmda_m.xmda201_desc
                  DISPLAY BY NAME g_xmda_m.xmda201_desc 
               END IF
            END IF   
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda005
            #add-point:ON CHANGE xmda005 name="input.g.xmda005"
            CALL adbt500_set_entry(p_cmd)
            CALL adbt500_set_no_entry(p_cmd)          
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda202
            
            #add-point:AFTER FIELD xmda202 name="input.a.xmda202"
            IF NOT cl_null(g_xmda_m.xmda202) THEN 
               IF g_xmda_m.xmda202 != g_xmda_m_o.xmda202 OR g_xmda_m_o.xmda202 IS NULL THEN
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda202
                  #161006-00008#5-add(s)
                  IF s_aooi500_setpoint(g_prog,'xmda202') THEN   #檢查是否有設aooi500
                      CALL s_aooi500_chk(g_prog,'xmda202',g_xmda_m.xmda202 ,g_xmda_m.xmdasite) 
                      RETURNING l_success,l_errno
                      IF NOT l_success THEN
                         LET r_success = FALSE
                         INITIALIZE g_errparam TO NULL
                         LET g_errparam.extend = ""
                         LET g_errparam.code   = l_errno
                         LET g_errparam.popup  = TRUE
                         CALL cl_err()
                         LET g_xmda_m.xmda202 = g_xmda_m_o.xmda202
                         CALL s_desc_get_department_desc(g_xmda_m.xmda202) RETURNING g_xmda_m.xmda202_desc
                         DISPLAY BY NAME g_xmda_m.xmda202_desc
                         NEXT FIELD CURRENT
                      END IF
                  ELSE
                  #161006-00008#5-add(e)
                     #呼叫檢查存在並帶值的library
                     IF cl_chk_exist("v_ooef001_36") THEN
                        #檢查成功時後續處理
                        #LET  = g_chkparam.return1
                        #DISPLAY BY NAME 
                     ELSE
                        #檢查失敗時後續處理
                        LET g_xmda_m.xmda202 = g_xmda_m_o.xmda202
                        CALL s_desc_get_department_desc(g_xmda_m.xmda202) RETURNING g_xmda_m.xmda202_desc
                        DISPLAY BY NAME g_xmda_m.xmda202_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF #161006-00008#5-add
                  IF NOT adbt500_xmda202_chk() THEN
                     LET g_xmda_m.xmda202 = g_xmda_m_o.xmda202
                     CALL s_desc_get_department_desc(g_xmda_m.xmda202) RETURNING g_xmda_m.xmda202_desc
                     DISPLAY BY NAME g_xmda_m.xmda202_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            CALL s_desc_get_department_desc(g_xmda_m.xmda202) RETURNING g_xmda_m.xmda202_desc
            DISPLAY BY NAME g_xmda_m.xmda202_desc
            LET g_xmda_m_o.xmda202 = g_xmda_m.xmda202
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda202
            #add-point:BEFORE FIELD xmda202 name="input.b.xmda202"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda202
            #add-point:ON CHANGE xmda202 name="input.g.xmda202"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda023
            
            #add-point:AFTER FIELD xmda023 name="input.a.xmda023"
            IF NOT cl_null(g_xmda_m.xmda023) THEN 
               IF g_xmda_m.xmda023 != g_xmda_m_o.xmda023 OR g_xmda_m_o.xmda023 IS NULL THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda023
                  LET g_chkparam.arg2 = '1'
                     
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_oojd001") THEN
                     LET g_xmda_m.xmda023 = g_xmda_m_o.xmda023
                     CALL adbt500_xmda023_ref(g_xmda_m.xmda023) RETURNING g_xmda_m.xmda023_desc
                     DISPLAY BY NAME g_xmda_m.xmda023_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT adbt500_xmda202_chk() THEN
                     LET g_xmda_m.xmda023 = g_xmda_m_o.xmda023
                     CALL adbt500_xmda023_ref(g_xmda_m.xmda023) RETURNING g_xmda_m.xmda023_desc
                     DISPLAY BY NAME g_xmda_m.xmda023_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT cl_null(g_xmda_m.xmda004) THEN
                  IF NOT adbt500_stce005_chk() THEN
                     LET g_xmda_m.xmda023 = g_xmda_m_o.xmda023
                     CALL adbt500_xmda023_ref(g_xmda_m.xmda023) RETURNING g_xmda_m.xmda023_desc
                     DISPLAY BY NAME g_xmda_m.xmda023_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF   
            CALL adbt500_xmda023_ref(g_xmda_m.xmda023) RETURNING g_xmda_m.xmda023_desc
            DISPLAY BY NAME g_xmda_m.xmda023_desc
            LET g_xmda_m_o.xmda023 = g_xmda_m.xmda023
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda023
            #add-point:BEFORE FIELD xmda023 name="input.b.xmda023"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda023
            #add-point:ON CHANGE xmda023 name="input.g.xmda023"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda004
            
            #add-point:AFTER FIELD xmda004 name="input.a.xmda004"
            IF NOT cl_null(g_xmda_m.xmda004) THEN 
               IF g_xmda_m.xmda004 != g_xmda_m_o.xmda004 OR cl_null(g_xmda_m_o.xmda004) THEN 
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = TRUE #是否開窗 #160318-00025#28  add
                  LET g_chkparam.arg1 = g_xmda_m.xmda004
                  LET g_chkparam.arg2 = 'ALL'
                  LET g_chkparam.err_str[1] = "apm-00026:adb-00338"
#                  LET g_chkparam.err_str[2] = "apm-00201:adb-00339"  #160318-00025#28  mark
                  LET g_chkparam.err_str[2] = "apm-00201:sub-01302|adbm200|",cl_get_progname("adbm200",g_lang,"2"),"|:EXEPROGadbm200"#要執行的建議程式待補 #160318-00025#28  add
                  IF NOT cl_chk_exist("v_pmaa001_3") THEN
                     LET g_xmda_m.xmda004 = g_xmda_m_o.xmda004
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda004) RETURNING g_xmda_m.xmda004_desc
                     DISPLAY BY NAME g_xmda_m.xmda004,g_xmda_m.xmda004_desc 
                     NEXT FIELD CURRENT
                  END IF
                  
                  #lori522612  150123 add ----------------------(S)
                  IF g_xmda_m.xmda005 = '3' AND s_adb_pmaa248(g_xmda_m.xmda004) = 'Y' THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'adb-00409'
                     LET g_errparam.extend = g_xmda_m.xmda004
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     
                     LET g_xmda_m.xmda004 = g_xmda_m_o.xmda004
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda004) RETURNING g_xmda_m.xmda004_desc
                     DISPLAY BY NAME g_xmda_m.xmda004,g_xmda_m.xmda004_desc 
                     NEXT FIELD CURRENT                  
                  END IF
                  #lori522612  150123 add ----------------------(E)
                  
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM pmaa_t
                   WHERE pmaaent = g_enterprise
                     AND pmaa001 = g_xmda_m.xmda004
                     AND pmaa002 = '2'
                     AND pmaa230 = '2'
                  IF l_cnt > 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'adb-00320'
                     LET g_errparam.extend = g_xmda_m.xmda004
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     
                     LET g_xmda_m.xmda004 = g_xmda_m_o.xmda004
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda004) RETURNING g_xmda_m.xmda004_desc
                     DISPLAY BY NAME g_xmda_m.xmda004,g_xmda_m.xmda004_desc 
                     NEXT FIELD CURRENT 
                  END IF         
                  
                  #如果客戶有修改，根據客戶帶值
                  CALL adbt500_xmda004_desc()                  
                  #若輸入供應商的法人類型為'2:一次性交易'或是'4:內部員工'時，則自動串apmi004_01
                  #維護一次性交易對項基本資料，維護完基本資料後會回傳一個一次性交易對象識別碼，
                  #將識別碼值預設給xmda028欄位
                  LET l_pmaa004 = ''
                  SELECT pmaa004 INTO l_pmaa004 FROM pmaa_t WHERE pmaaent = g_enterprise AND pmaa001 = g_xmda_m.xmda004
                  IF l_pmaa004 = '2' THEN   #一次性交易對象
                     CALL apmi004_01('1','',g_xmda_m.xmda004,g_xmda_m.xmdadocno) RETURNING g_xmda_m.xmda028
                  END IF
                  IF l_pmaa004 = '4' THEN   #內部員工
                     CALL apmi004_01('2','',g_xmda_m.xmda004,g_xmda_m.xmdadocno) RETURNING g_xmda_m.xmda028
                  END IF                  
               END IF
               #新增時將訂單客戶值預設給最終客戶
               IF p_cmd = 'a' THEN
                  LET g_xmda_m.xmda034 = g_xmda_m.xmda004
                  DISPLAY BY NAME g_xmda_m.xmda034
                  CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda034) 
                    RETURNING g_xmda_m.xmda034_desc           
                  DISPLAY BY NAME g_xmda_m.xmda034_desc                  
               END IF                
               IF NOT cl_null(g_xmda_m.xmda023) THEN
                  IF NOT adbt500_stce005_chk() THEN
                     LET g_xmda_m.xmda004 = g_xmda_m_o.xmda004
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda004) RETURNING g_xmda_m.xmda004_desc
                     DISPLAY BY NAME g_xmda_m.xmda004,g_xmda_m.xmda004_desc                      
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda004) RETURNING g_xmda_m.xmda004_desc
            DISPLAY BY NAME g_xmda_m.xmda004_desc
            LET g_xmda_m_o.xmda004 = g_xmda_m.xmda004
            LET g_xmda_m_o.xmda021 = g_xmda_m.xmda021
            LET g_xmda_m_o.xmda022 = g_xmda_m.xmda022
            LET g_xmda_m_o.xmda203 = g_xmda_m.xmda203 
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda004
            #add-point:BEFORE FIELD xmda004 name="input.b.xmda004"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda004
            #add-point:ON CHANGE xmda004 name="input.g.xmda004"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda200
            
            #add-point:AFTER FIELD xmda200 name="input.a.xmda200"
            IF NOT cl_null(g_xmda_m.xmda200) THEN 
               IF g_xmda_m.xmda200 != g_xmda_m_o.xmda200 OR g_xmda_m_o.xmda200 IS NULL THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = TRUE #是否開窗 #160318-00025#28  add
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda200
                  LET g_chkparam.err_str[1] = "apm-00201:sub-01302|axmm200|",cl_get_progname("axmm200",g_lang,"2"),"|:EXEPROGaxmm200"#要執行的建議程式待補 #160318-00025#28  add
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_pmaa001_16") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda200 = g_xmda_m_o.xmda200
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda200) RETURNING g_xmda_m.xmda200_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda200) RETURNING g_xmda_m.xmda200_desc
            DISPLAY BY NAME g_xmda_m.xmda200_desc
            LET g_xmda_m_o.xmda200 = g_xmda_m.xmda200
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda200
            #add-point:BEFORE FIELD xmda200 name="input.b.xmda200"
            CALL adbt500_set_entry(p_cmd)
            CALL adbt500_set_no_entry(p_cmd)           
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda200
            #add-point:ON CHANGE xmda200 name="input.g.xmda200"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda201
            
            #add-point:AFTER FIELD xmda201 name="input.a.xmda201"
            IF NOT cl_null(g_xmda_m.xmda201) THEN 
               IF g_xmda_m.xmda201 != g_xmda_m_o.xmda201 OR g_xmda_m_o.xmda201 IS NULL THEN
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda201
                  LET g_chkparam.err_str[1] = "apm-00024:adb-00340"
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_pmaa001_1") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda201 = g_xmda_m_o.xmda201
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda201) RETURNING g_xmda_m.xmda201_desc
                     DISPLAY BY NAME g_xmda_m.xmda201_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda201) RETURNING g_xmda_m.xmda201_desc
            DISPLAY BY NAME g_xmda_m.xmda201_desc
            LET g_xmda_m_o.xmda201 = g_xmda_m.xmda201
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda201
            #add-point:BEFORE FIELD xmda201 name="input.b.xmda201"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda201
            #add-point:ON CHANGE xmda201 name="input.g.xmda201"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdastus
            #add-point:BEFORE FIELD xmdastus name="input.b.xmdastus"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdastus
            
            #add-point:AFTER FIELD xmdastus name="input.a.xmdastus"
                                                                        
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdastus
            #add-point:ON CHANGE xmdastus name="input.g.xmdastus"
                                                                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda007
            #add-point:BEFORE FIELD xmda007 name="input.b.xmda007"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda007
            
            #add-point:AFTER FIELD xmda007 name="input.a.xmda007"
                                                                        
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda007
            #add-point:ON CHANGE xmda007 name="input.g.xmda007"
                                                                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda008
            #add-point:BEFORE FIELD xmda008 name="input.b.xmda008"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda008
            
            #add-point:AFTER FIELD xmda008 name="input.a.xmda008"
            IF NOT cl_null(g_xmda_m.xmda008) THEN 
               IF NOT adbt500_xmda008_chk() THEN              
                  #LET g_xmda_m.xmda008 = g_xmda_m_t.xmda008  #160824-00007#48 Mark By Ken 161007
                  LET g_xmda_m.xmda008 = g_xmda_m_o.xmda008   #160824-00007#48 Add By Ken 161007
                  NEXT FIELD CURRENT
               ELSE
                  
                  #帶值:資料來源選擇是'5'時，需以輸入的來源單號抓取相關欄位預設在訂單單頭上，例如:客戶、幣別、稅別、收款條件、付款條件
                  CALL adbt500_xmda008_desc()
               END IF
            ELSE
               IF g_xmda_m.xmda007 = '5' THEN      #資料來源選擇是'5'時此欄位必須輸入不可空白
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  'aoo-00052'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  NEXT FIELD CURRENT
               END IF               
            END IF
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda008
            #add-point:ON CHANGE xmda008 name="input.g.xmda008"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda021
            
            #add-point:AFTER FIELD xmda021 name="input.a.xmda021"
            IF NOT cl_null(g_xmda_m.xmda021) THEN 
               IF g_xmda_m.xmda021 != g_xmda_m_o.xmda021 OR g_xmda_m_o.xmda021 IS NULL THEN
               #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  #lori522612  150121  add ----------------------(S)
                  #INITIALIZE g_chkparam.* TO NULL
                  #LET g_chkparam.arg1 = g_xmda_m.xmda004
                  #LET g_chkparam.arg2 = g_xmda_m.xmda021
                  #LET g_chkparam.arg3 = 'ALL'
                  #
                  #IF cl_chk_exist("v_pmac002") THEN
                  #調整校驗方式
                  IF s_adb_chk_pmac002(1,g_xmda_m.xmda004,g_xmda_m.xmda021,'1') THEN
                  #lori522612  150121  add ----------------------(E)
                     #檢查成功時後續處理
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda021 = g_xmda_m_o.xmda021
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda021) RETURNING g_xmda_m.xmda021_desc
                     DISPLAY BY NAME g_xmda_m.xmda021_desc                  
                     NEXT FIELD CURRENT
                  END IF   
               END IF                  
            END IF 
            CALL adbt500_xmda026_desc()
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda021) RETURNING g_xmda_m.xmda021_desc
            DISPLAY BY NAME g_xmda_m.xmda021_desc
            LET g_xmda_m_o.xmda021 = g_xmda_m.xmda021
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda021
            #add-point:BEFORE FIELD xmda021 name="input.b.xmda021"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda021
            #add-point:ON CHANGE xmda021 name="input.g.xmda021"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda022
            
            #add-point:AFTER FIELD xmda022 name="input.a.xmda022"
            IF NOT cl_null(g_xmda_m.xmda022) THEN 
               #IF (g_xmda_m.xmda022 != g_xmda_m_t.xmda022 OR cl_null(g_xmda_m_t.xmda022)) AND l_cmd_t = "r" THEN   #160824-00007#48 Mark By Ken 161007
               IF (g_xmda_m.xmda022 != g_xmda_m_o.xmda022 OR cl_null(g_xmda_m_o.xmda022)) AND l_cmd_t = "r" THEN    #160824-00007#48 Add By Ken 161007
                  #送貨客戶有修改，是否一併修改單身送貨客戶欄位?
                  IF NOT cl_ask_confirm('adb-00397') THEN
                     #LET g_xmda_m.xmda022 = g_xmda_m_t.xmda022  #160824-00007#48 Mark By Ken 161007             
                     LET g_xmda_m.xmda022 = g_xmda_m_o.xmda022   #160824-00007#48 Add By Ken 161007
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda022)
                        RETURNING g_xmda_m.xmda022_desc
                     DISPLAY BY NAME g_xmda_m.xmda022_desc                 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF g_xmda_m.xmda022 != g_xmda_m_o.xmda022 OR g_xmda_m_o.xmda022 IS NULL THEN
                  #lori522612  150121  add ----------------------(S)
                  #INITIALIZE g_chkparam.* TO NULL     
                  #LET g_chkparam.arg1 = g_xmda_m.xmda004
                  #LET g_chkparam.arg2 = '2'
                  #LET g_chkparam.arg3 = g_xmda_m.xmda022
                  #IF cl_chk_exist("v_pmac002_3") THEN
                  IF s_adb_chk_pmac002(1,g_xmda_m.xmda004,g_xmda_m.xmda022,'2') THEN
                  #lori522612  150121  add ----------------------(E)
                     #檢查成功時後續處理
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda022 = g_xmda_m_o.xmda022                  
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda022) RETURNING g_xmda_m.xmda022_desc
                     DISPLAY BY NAME g_xmda_m.xmda022_desc                 
                     NEXT FIELD CURRENT
                  END IF   
               END IF   
            END IF 
            CALL adbt500_xmda025_desc()
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda022) RETURNING g_xmda_m.xmda022_desc
            DISPLAY BY NAME g_xmda_m.xmda022_desc
            LET g_xmda_m_o.xmda022 = g_xmda_m.xmda022
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda022
            #add-point:BEFORE FIELD xmda022 name="input.b.xmda022"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda022
            #add-point:ON CHANGE xmda022 name="input.g.xmda022"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda203
            
            #add-point:AFTER FIELD xmda203 name="input.a.xmda203"
            IF NOT cl_null(g_xmda_m.xmda203) THEN 
               IF g_xmda_m.xmda203 != g_xmda_m_o.xmda203 OR g_xmda_m_o.xmda203 IS NULL THEN
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  #lori522612  150121  add ----------------------(S)
                  #INITIALIZE g_chkparam.* TO NULL
                  #LET g_chkparam.arg1 = g_xmda_m.xmda004
                  #LET g_chkparam.arg2 = g_xmda_m.xmda203
                  #
                  #IF cl_chk_exist("v_pmac002_5") THEN
                  IF s_adb_chk_pmac002(1,g_xmda_m.xmda004,g_xmda_m.xmda203,'3') THEN
                  #lori522612  150121  add ----------------------(E)
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda203 = g_xmda_m_o.xmda203
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda203) RETURNING g_xmda_m.xmda203_desc
                     DISPLAY BY NAME g_xmda_m.xmda203_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF      
            END IF 
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda203) RETURNING g_xmda_m.xmda203_desc
            DISPLAY BY NAME g_xmda_m.xmda203_desc
            LET g_xmda_m_o.xmda203 = g_xmda_m.xmda203
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda203
            #add-point:BEFORE FIELD xmda203 name="input.b.xmda203"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda203
            #add-point:ON CHANGE xmda203 name="input.g.xmda203"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda027
            
            #add-point:AFTER FIELD xmda027 name="input.a.xmda027"
            IF NOT cl_null(g_xmda_m.xmda027) THEN 
               IF g_xmda_m.xmda027 != g_xmda_m_o.xmda027 OR g_xmda_m_o.xmda027 IS NULL THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = TRUE #是否開窗 #160318-00025#28  add
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda004
                  LET g_chkparam.arg2 = g_xmda_m.xmda027
                  LET g_chkparam.err_str[1] = "apm-00257:sub-01302|apmi005|",cl_get_progname("apmi005",g_lang,"2"),"|:EXEPROGapmi005"#要執行的建議程式待補 #160318-00025#28  add
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_pmaj002") THEN
                     #檢查成功時後續處理
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda027 = g_xmda_m_o.xmda027
                     CALL adbt500_xmda027_ref(g_xmda_m.xmda027) RETURNING g_xmda_m.xmda027_desc
                     DISPLAY BY NAME g_xmda_m.xmda027_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            CALL adbt500_xmda027_ref(g_xmda_m.xmda027) RETURNING g_xmda_m.xmda027_desc
            DISPLAY BY NAME g_xmda_m.xmda027_desc
            LET g_xmda_m_o.xmda027 = g_xmda_m.xmda027
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda027
            #add-point:BEFORE FIELD xmda027 name="input.b.xmda027"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda027
            #add-point:ON CHANGE xmda027 name="input.g.xmda027"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda024
            
            #add-point:AFTER FIELD xmda024 name="input.a.xmda024"
            IF NOT cl_null(g_xmda_m.xmda024) THEN
               IF g_xmda_m.xmda024 != g_xmda_m_o.xmda024 OR g_xmda_m_o.xmda024 IS NULL THEN
                  IF NOT s_azzi650_chk_exist('295',g_xmda_m.xmda024) THEN
                     LET g_xmda_m.xmda024 = g_xmda_m_o.xmda024
                     CALL s_desc_get_acc_desc('295',g_xmda_m.xmda024) RETURNING g_xmda_m.xmda024_desc
                     DISPLAY BY NAME g_xmda_m.xmda024_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            CALL s_desc_get_acc_desc('295',g_xmda_m.xmda024) RETURNING g_xmda_m.xmda024_desc
            DISPLAY BY NAME g_xmda_m.xmda024_desc
            LET g_xmda_m_o.xmda024 = g_xmda_m.xmda024 
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda024
            #add-point:BEFORE FIELD xmda024 name="input.b.xmda024"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda024
            #add-point:ON CHANGE xmda024 name="input.g.xmda024"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda002
            
            #add-point:AFTER FIELD xmda002 name="input.a.xmda002"
            IF NOT cl_null(g_xmda_m.xmda002) THEN 
              #此段落由子樣板a19產生   
               IF g_xmda_m.xmda002 != g_xmda_m_o.xmda002 OR cl_null(g_xmda_m_o.xmda002) THEN
                 #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = TRUE #是否開窗 #160318-00025#28  add                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda002
                  LET g_chkparam.err_str[1] = "aim-00070:sub-01302|aooi130|",cl_get_progname("aooi130",g_lang,"2"),"|:EXEPROGaooi130"#要執行的建議程式待補 #160318-00025#28  add   
                 #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooag001") THEN
                     #檢查成功時後續處理
                      SELECT ooag003 INTO g_xmda_m.xmda003 FROM ooag_t WHERE ooagent = g_enterprise AND ooag001 = g_xmda_m.xmda002
                      CALL s_desc_get_department_desc(g_xmda_m.xmda003) RETURNING g_xmda_m.xmda003_desc
                      DISPLAY BY NAME g_xmda_m.xmda003_desc 
                  ELSE
                     #檢查失敗時後續處理
                      LET g_xmda_m.xmda002 = g_xmda_m_o.xmda002
                      CALL s_desc_get_person_desc(g_xmda_m.xmda002) RETURNING g_xmda_m.xmda002_desc
                      DISPLAY BY NAME g_xmda_m.xmda002_desc
                      NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            CALL s_desc_get_person_desc(g_xmda_m.xmda002) RETURNING g_xmda_m.xmda002_desc
            DISPLAY BY NAME g_xmda_m.xmda002_desc
            LET g_xmda_m_o.xmda002 = g_xmda_m.xmda002
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda002
            #add-point:BEFORE FIELD xmda002 name="input.b.xmda002"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda002
            #add-point:ON CHANGE xmda002 name="input.g.xmda002"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda003
            
            #add-point:AFTER FIELD xmda003 name="input.a.xmda003"
            IF NOT cl_null(g_xmda_m.xmda003) THEN 
               IF g_xmda_m.xmda003 != g_xmda_m_o.xmda003 OR g_xmda_m_o.xmda003 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = TRUE #是否開窗 #160318-00025#28  add
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda003
                  LET g_chkparam.arg2 = g_xmda_m.xmdadocdt
                  LET g_chkparam.err_str[1] = "aoo-00029:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"#要執行的建議程式待補 #160318-00025#28  add
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_ooeg001") THEN
                     LET g_xmda_m.xmda003 = g_xmda_m_o.xmda003
                     CALL s_desc_get_department_desc(g_xmda_m.xmda003) RETURNING g_xmda_m.xmda003_desc
                     DISPLAY BY NAME g_xmda_m.xmda003_desc 
                     NEXT FIELD CURRENT
                  END IF   
               END IF                
            END IF 
            CALL s_desc_get_department_desc(g_xmda_m.xmda003) RETURNING g_xmda_m.xmda003_desc
            DISPLAY BY NAME g_xmda_m.xmda003_desc 
            LET g_xmda_m_o.xmda003 = g_xmda_m.xmda003
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda003
            #add-point:BEFORE FIELD xmda003 name="input.b.xmda003"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda003
            #add-point:ON CHANGE xmda003 name="input.g.xmda003"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdaunit
            
            #add-point:AFTER FIELD xmdaunit name="input.a.xmdaunit"
            IF NOT cl_null(g_xmda_m.xmdaunit) THEN 
               IF g_xmda_m.xmdaunit != g_xmda_m_o.xmdaunit OR g_xmda_m_o.xmdaunit IS NULL THEN
                  #此段落由子樣板a19產生
#                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#                  INITIALIZE g_chkparam.* TO NULL
#                  
#                  #設定g_chkparam.*的參數
#                  LET g_chkparam.arg1 = g_xmda_m.xmdaunit
#                  LET g_chkparam.arg2 = '8'
#                     
#                  #呼叫檢查存在並帶值的library
#                  IF NOT cl_chk_exist("v_ooed004_1") THEN
                  CALL s_aooi500_chk(g_prog,'xmdaunit',g_xmda_m.xmdaunit,g_xmda_m.xmdasite) RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = l_errno 
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     
                     LET g_xmda_m.xmdaunit = g_xmda_m_o.xmdaunit
                     CALL s_desc_get_department_desc(g_xmda_m.xmdaunit) RETURNING g_xmda_m.xmdaunit_desc
                     DISPLAY BY NAME g_xmda_m.xmdaunit_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            CALL s_desc_get_department_desc(g_xmda_m.xmdaunit) RETURNING g_xmda_m.xmdaunit_desc
            DISPLAY BY NAME g_xmda_m.xmdaunit_desc
            LET g_xmda_m_o.xmdaunit = g_xmda_m.xmdaunit
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdaunit
            #add-point:BEFORE FIELD xmdaunit name="input.b.xmdaunit"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdaunit
            #add-point:ON CHANGE xmdaunit name="input.g.xmdaunit"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda211
            
            #add-point:AFTER FIELD xmda211 name="input.a.xmda211"
            IF NOT cl_null(g_xmda_m.xmda211) THEN 
               IF g_xmda_m.xmda211 != g_xmda_m_o.xmda211 OR g_xmda_m_o.xmda211 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda211
                  LET g_chkparam.arg2 = '1'
                  LET g_errparam.replace[1] = '1'
                  IF NOT cl_chk_exist("v_dbaa001_1") THEN
                     LET g_xmda_m.xmda211 = g_xmda_m_o.xmda211
                     CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda211) RETURNING g_xmda_m.xmda211_desc
                     DISPLAY BY NAME g_xmda_m.xmda211_desc
                     NEXT FIELD CURRENT
                  END IF 
                  LET g_xmda_m.xmda208 = ''
                  LET g_xmda_m.xmda209 = ''
                  LET g_xmda_m.xmda210 = ''
                  LET g_xmda_m.xmda208_desc = ''
                  LET g_xmda_m.xmda209_desc = ''
                  LET g_xmda_m.xmda210_desc = ''
                  DISPLAY BY NAME g_xmda_m.xmda208_desc
                  DISPLAY BY NAME g_xmda_m.xmda209_desc
                  DISPLAY BY NAME g_xmda_m.xmda210_desc
               END IF
            END IF 
            LET g_xmda_m_o.xmda208 = g_xmda_m.xmda208
            LET g_xmda_m_o.xmda209 = g_xmda_m.xmda209
            LET g_xmda_m_o.xmda210 = g_xmda_m.xmda210
            LET g_xmda_m_o.xmda211 = g_xmda_m.xmda211
            CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda211) RETURNING g_xmda_m.xmda211_desc
            DISPLAY BY NAME g_xmda_m.xmda211_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda211
            #add-point:BEFORE FIELD xmda211 name="input.b.xmda211"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda211
            #add-point:ON CHANGE xmda211 name="input.g.xmda211"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda210
            
            #add-point:AFTER FIELD xmda210 name="input.a.xmda210"
            IF NOT cl_null(g_xmda_m.xmda210) THEN 
               IF g_xmda_m.xmda210 != g_xmda_m_o.xmda210 OR g_xmda_m_o.xmda210 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda210
                  LET g_chkparam.arg2 = '2'
                  LET g_errparam.replace[1] = '2'
                  IF NOT cl_chk_exist("v_dbaa001_1") THEN
                     LET g_xmda_m.xmda210 = g_xmda_m_o.xmda210
                     CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda210) RETURNING g_xmda_m.xmda210_desc
                     DISPLAY BY NAME g_xmda_m.xmda210_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF cl_null(g_xmda_m.xmda211) THEN
                     CALL s_adb_get_dbaa003(g_xmda_m.xmda210,'2') RETURNING g_xmda_m.xmda211
                     CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda211) RETURNING g_xmda_m.xmda211_desc
                     DISPLAY BY NAME g_xmda_m.xmda211_desc
                  END IF  
                  LET g_xmda_m.xmda208 = ''
                  LET g_xmda_m.xmda209 = ''
                  LET g_xmda_m.xmda208_desc = ''
                  LET g_xmda_m.xmda209_desc = ''
                  DISPLAY BY NAME g_xmda_m.xmda208_desc
                  DISPLAY BY NAME g_xmda_m.xmda209_desc
               END IF
            END IF 
            LET g_xmda_m_o.xmda208 = g_xmda_m.xmda208
            LET g_xmda_m_o.xmda209 = g_xmda_m.xmda209
            LET g_xmda_m_o.xmda210 = g_xmda_m.xmda210
            LET g_xmda_m_o.xmda211 = g_xmda_m.xmda211
            CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda210) RETURNING g_xmda_m.xmda210_desc
            DISPLAY BY NAME g_xmda_m.xmda210_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda210
            #add-point:BEFORE FIELD xmda210 name="input.b.xmda210"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda210
            #add-point:ON CHANGE xmda210 name="input.g.xmda210"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda209
            
            #add-point:AFTER FIELD xmda209 name="input.a.xmda209"
            IF NOT cl_null(g_xmda_m.xmda209) THEN 
               IF g_xmda_m.xmda209 != g_xmda_m_o.xmda209 OR g_xmda_m_o.xmda209 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda209
                  LET g_chkparam.arg2 = '3'
                  LET g_errparam.replace[1] = '3'
                  IF NOT cl_chk_exist("v_dbaa001_1") THEN
                     LET g_xmda_m.xmda209 = g_xmda_m_o.xmda209
                     CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda209) RETURNING g_xmda_m.xmda209_desc
                     DISPLAY BY NAME g_xmda_m.xmda209_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF cl_null(g_xmda_m.xmda210) THEN
                     CALL s_adb_get_dbaa003(g_xmda_m.xmda209,'3') RETURNING g_xmda_m.xmda210
                     CALL s_adb_get_dbaa003(g_xmda_m.xmda210,'2') RETURNING g_xmda_m.xmda211
                     CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda210) RETURNING g_xmda_m.xmda210_desc
                     CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda211) RETURNING g_xmda_m.xmda211_desc
                     DISPLAY BY NAME g_xmda_m.xmda210_desc
                     DISPLAY BY NAME g_xmda_m.xmda211_desc
                  END IF  
                  LET g_xmda_m.xmda208 = ''
                  LET g_xmda_m.xmda208_desc = ''
                  DISPLAY BY NAME g_xmda_m.xmda208_desc
               END IF
            END IF 
            LET g_xmda_m_o.xmda208 = g_xmda_m.xmda208
            LET g_xmda_m_o.xmda209 = g_xmda_m.xmda209
            LET g_xmda_m_o.xmda210 = g_xmda_m.xmda210
            LET g_xmda_m_o.xmda211 = g_xmda_m.xmda211
            CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda209) RETURNING g_xmda_m.xmda209_desc
            DISPLAY BY NAME g_xmda_m.xmda209_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda209
            #add-point:BEFORE FIELD xmda209 name="input.b.xmda209"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda209
            #add-point:ON CHANGE xmda209 name="input.g.xmda209"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda208
            
            #add-point:AFTER FIELD xmda208 name="input.a.xmda208"
            IF NOT cl_null(g_xmda_m.xmda208) THEN 
               IF g_xmda_m.xmda208 != g_xmda_m_o.xmda208 OR g_xmda_m_o.xmda208 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda208
                  LET g_chkparam.arg2 = '4'
                  LET g_errparam.replace[1] = '4'
                  IF NOT cl_chk_exist("v_dbaa001_1") THEN
                     LET g_xmda_m.xmda208 = g_xmda_m_o.xmda208
                     CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda208) RETURNING g_xmda_m.xmda208_desc
                     DISPLAY BY NAME g_xmda_m.xmda208_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF cl_null(g_xmda_m.xmda209) THEN
                     CALL s_adb_get_dbaa003(g_xmda_m.xmda208,'4') RETURNING g_xmda_m.xmda209
                     CALL s_adb_get_dbaa003(g_xmda_m.xmda209,'3') RETURNING g_xmda_m.xmda210
                     CALL s_adb_get_dbaa003(g_xmda_m.xmda210,'2') RETURNING g_xmda_m.xmda211
                     CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda209) RETURNING g_xmda_m.xmda209_desc
                     CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda210) RETURNING g_xmda_m.xmda210_desc
                     CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda211) RETURNING g_xmda_m.xmda211_desc
                     DISPLAY BY NAME g_xmda_m.xmda209_desc
                     DISPLAY BY NAME g_xmda_m.xmda210_desc
                     DISPLAY BY NAME g_xmda_m.xmda211_desc
                  END IF  
               END IF
            END IF 
            LET g_xmda_m_o.xmda208 = g_xmda_m.xmda208
            LET g_xmda_m_o.xmda209 = g_xmda_m.xmda209
            LET g_xmda_m_o.xmda210 = g_xmda_m.xmda210
            LET g_xmda_m_o.xmda211 = g_xmda_m.xmda211
            CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda208) RETURNING g_xmda_m.xmda208_desc
            DISPLAY BY NAME g_xmda_m.xmda208_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda208
            #add-point:BEFORE FIELD xmda208 name="input.b.xmda208"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda208
            #add-point:ON CHANGE xmda208 name="input.g.xmda208"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda204
            
            #add-point:AFTER FIELD xmda204 name="input.a.xmda204"
            IF NOT cl_null(g_xmda_m.xmda204) THEN 
               IF g_xmda_m.xmda204 != g_xmda_m_o.xmda204 OR g_xmda_m_o.xmda204 IS NULL THEN
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = TRUE #是否開窗 #160318-00025#28  add
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda204
                  LET g_chkparam.err_str[1] = "apr-00060:sub-01307|aprm201|",cl_get_progname("aprm201",g_lang,"2"),"|:EXEPROGaprm201"#要執行的建議程式待補 #160318-00025#28  add
                  LET g_chkparam.err_str[2] = "apr-00059:sub-01302|aprm201|",cl_get_progname("aprm201",g_lang,"2"),"|:EXEPROGaprm201"#要執行的建議程式待補 #160318-00025#28  add
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_prcf001") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda204 = g_xmda_m_o.xmda204
                     CALL adbt500_xmda204_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            CALL adbt500_xmda204_ref()
            LET g_xmda_m_o.xmda204 = g_xmda_m.xmda204
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda204
            #add-point:BEFORE FIELD xmda204 name="input.b.xmda204"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda204
            #add-point:ON CHANGE xmda204 name="input.g.xmda204"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda205
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmda_m.xmda205,"0","1","100","1","azz-00087",1) THEN
               NEXT FIELD xmda205
            END IF 
 
 
 
            #add-point:AFTER FIELD xmda205 name="input.a.xmda205"
            IF NOT cl_null(g_xmda_m.xmda205) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda205
            #add-point:BEFORE FIELD xmda205 name="input.b.xmda205"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda205
            #add-point:ON CHANGE xmda205 name="input.g.xmda205"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda071
            #add-point:BEFORE FIELD xmda071 name="input.b.xmda071"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda071
            
            #add-point:AFTER FIELD xmda071 name="input.a.xmda071"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda071
            #add-point:ON CHANGE xmda071 name="input.g.xmda071"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda025
            
            #add-point:AFTER FIELD xmda025 name="input.a.xmda025"
            IF NOT cl_null(g_xmda_m.xmda025) THEN 
               IF g_xmda_m.xmda025 != g_xmda_m_o.xmda025 OR g_xmda_m_o.xmda025 IS NULL THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = TRUE #是否開窗 #160318-00025#28  add
                  #設定g_chkparam.*的參數
                  
			         LET g_chkparam.arg1 = l_pmaa027
                  LET g_chkparam.arg2 = g_xmda_m.xmda025
                  LET g_chkparam.err_str[1] = "apm-00214:adb-00362"
#                  LET g_chkparam.err_str[2] = "anm-00025:adb-00363"  #160318-00025#28  mark
                  LET g_chkparam.err_str[2] = "anm-00025:sub-01302|apmm800|",cl_get_progname("apmm800",g_lang,"2"),"|:EXEPROGapmm800"#要執行的建議程式待補 #160318-00025#28  add
                  LET g_chkparam.err_str[3] = "apm-00269:adb-00365"
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_oofb019_1") THEN
                  
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda025 = g_xmda_m_o.xmda025
                     CALL s_adb_address_ref('3',g_xmda_m.xmda025,g_xmda_m.xmda022)
                        RETURNING r_oofb011,r_address
                     LET g_xmda_m.xmda025_desc = r_oofb011
                     LET g_xmda_m.oofb017 = r_address
                     DISPLAY BY NAME g_xmda_m.xmda025_desc,g_xmda_m.oofb017
                     NEXT FIELD CURRENT
                  END IF
                  CALL s_adb_delivery_site_default(g_xmda_m.xmda022,l_pmaa027,'3',g_xmda_m.xmda025)
                     RETURNING g_xmda_m.xmda206
                  CALL s_adb_get_dbaf001(g_xmda_m.xmda206)
                     RETURNING g_xmda_m.xmda207
               END IF
            ELSE               
               LET g_xmda_m.xmda206 = ''
               LET g_xmda_m.xmda207 = ''
               LET g_xmda_m.oofb017 = ''
            END IF
            CALL s_adb_address_ref('3',g_xmda_m.xmda025,g_xmda_m.xmda022)
               RETURNING r_oofb011,r_address
            LET g_xmda_m.xmda025_desc = r_oofb011
            LET g_xmda_m.oofb017 = r_address
            
            LET g_xmda_m.xmda206_desc = s_desc_get_dbad001_desc(g_xmda_m.xmda206)
            LET g_xmda_m.xmda207_desc = s_desc_get_dbab001_desc(g_xmda_m.xmda207) 
            DISPLAY BY NAME g_xmda_m.xmda025_desc,g_xmda_m.oofb017,g_xmda_m.xmda206,g_xmda_m.xmda207
            DISPLAY BY NAME g_xmda_m.xmda206_desc,g_xmda_m.xmda207_desc
            
            LET g_xmda_m_o.xmda025 = g_xmda_m.xmda025
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda025
            #add-point:BEFORE FIELD xmda025 name="input.b.xmda025"
            LET l_pmaa027 = ''
            CALL adbt500_get_pmaa027(g_xmda_m.xmda022) RETURNING l_pmaa027                                                           
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda025
            #add-point:ON CHANGE xmda025 name="input.g.xmda025"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda026
            
            #add-point:AFTER FIELD xmda026 name="input.a.xmda026"
            IF NOT cl_null(g_xmda_m.xmda026) THEN 
               IF g_xmda_m.xmda026 != g_xmda_m_o.xmda026 OR g_xmda_m_o.xmda026 IS NULL THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = TRUE #是否開窗 #160318-00025#28  add
                  #設定g_chkparam.*的參數
			         LET g_chkparam.arg1 = l_pmaa027
                  LET g_chkparam.arg2 = g_xmda_m.xmda026
                  LET g_chkparam.err_str[1] = "apm-00214:adb-00362"
#                  LET g_chkparam.err_str[2] = "anm-00025:adb-00363"  #160318-00025#28  mark
                  LET g_chkparam.err_str[2] = "anm-00025:sub-01302|apmm800|",cl_get_progname("apmm800",g_lang,"2"),"|:EXEPROGapmm800"#要執行的建議程式待補 #160318-00025#28  add
                  LET g_chkparam.err_str[3] = "apm-00270:adb-00365"
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_oofb019_2") THEN
                  
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda026 = g_xmda_m_o.xmda026
                      CALL s_adb_address_ref('5',g_xmda_m.xmda026,g_xmda_m.xmda021)
                         RETURNING r_oofb011,r_address
                      LET g_xmda_m.xmda026_desc = r_oofb011
                      LET g_xmda_m.oofb017_1 = r_address 
                     DISPLAY BY NAME g_xmda_m.xmda026_desc,g_xmda_m.oofb017_1
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_adb_address_ref('5',g_xmda_m.xmda026,g_xmda_m.xmda021)
               RETURNING r_oofb011,r_address
            LET g_xmda_m.xmda026_desc = r_oofb011
            LET g_xmda_m.oofb017_1 = r_address 
            DISPLAY BY NAME g_xmda_m.xmda026_desc,g_xmda_m.oofb017_1
            LET g_xmda_m_o.xmda026 = g_xmda_m.xmda026
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda026
            #add-point:BEFORE FIELD xmda026 name="input.b.xmda026"
            LET l_pmaa027 = ''
            CALL adbt500_get_pmaa027(g_xmda_m.xmda021) RETURNING l_pmaa027                                                             
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda026
            #add-point:ON CHANGE xmda026 name="input.g.xmda026"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda020
            
            #add-point:AFTER FIELD xmda020 name="input.a.xmda020"
            IF NOT cl_null(g_xmda_m.xmda020) THEN 
               IF g_xmda_m.xmda020 != g_xmda_m_o.xmda020 OR g_xmda_m_o.xmda020 IS NULL THEN
                  IF NOT s_azzi650_chk_exist('263',g_xmda_m.xmda020) THEN
                     LET g_xmda_m.xmda020 = g_xmda_m_o.xmda020
                     CALL s_desc_get_acc_desc('263',g_xmda_m.xmda020) RETURNING g_xmda_m.xmda020_desc
                     DISPLAY BY NAME g_xmda_m.xmda020_desc  
                     NEXT FIELD CURRENT
                  END IF          
               END IF
            END IF 
            CALL s_desc_get_acc_desc('263',g_xmda_m.xmda020) RETURNING g_xmda_m.xmda020_desc
            DISPLAY BY NAME g_xmda_m.xmda020_desc 
            LET g_xmda_m_o.xmda020 = g_xmda_m.xmda020 
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda020
            #add-point:BEFORE FIELD xmda020 name="input.b.xmda020"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda020
            #add-point:ON CHANGE xmda020 name="input.g.xmda020"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda036
            
            #add-point:AFTER FIELD xmda036 name="input.a.xmda036"
            IF NOT cl_null(g_xmda_m.xmda036) THEN 
               IF g_xmda_m.xmda036 != g_xmda_m_o.xmda036 OR g_xmda_m_o.xmda036 IS NULL THEN
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda036
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_pmaa001_1") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda036=g_xmda_m_o.xmda036
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda036) RETURNING g_xmda_m.xmda036_desc
                     DISPLAY BY NAME g_xmda_m.xmda036_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda036) RETURNING g_xmda_m.xmda036_desc
            DISPLAY BY NAME g_xmda_m.xmda036_desc
            LET g_xmda_m_o.xmda036 = g_xmda_m.xmda036 
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda036
            #add-point:BEFORE FIELD xmda036 name="input.b.xmda036"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda036
            #add-point:ON CHANGE xmda036 name="input.g.xmda036"
                                                                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda048
            #add-point:BEFORE FIELD xmda048 name="input.b.xmda048"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda048
            
            #add-point:AFTER FIELD xmda048 name="input.a.xmda048"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda048
            #add-point:ON CHANGE xmda048 name="input.g.xmda048"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda049
            #add-point:BEFORE FIELD xmda049 name="input.b.xmda049"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda049
            
            #add-point:AFTER FIELD xmda049 name="input.a.xmda049"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda049
            #add-point:ON CHANGE xmda049 name="input.g.xmda049"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda009
            
            #add-point:AFTER FIELD xmda009 name="input.a.xmda009"
            IF NOT cl_null(g_xmda_m.xmda009) THEN 
               IF g_xmda_m.xmda009 != g_xmda_m_o.xmda009 OR g_xmda_m_o.xmda009 IS NULL THEN
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda004
                  LET g_chkparam.arg2 = g_xmda_m.xmda009
                  LET g_chkparam.err_str[1] = "axm-00012:adb-00335"
                  LET g_chkparam.err_str[2] = "axm-00010:adb-00336"
                  LET g_chkparam.err_str[3] = "axm-00011:adb-00337"
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_pmad002_2") THEN
                     #檢查成功時後續處理
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda009 = g_xmda_m_o.xmda009
                     CALL s_desc_get_ooib002_desc(g_xmda_m.xmda009) RETURNING g_xmda_m.xmda009_desc
                     DISPLAY BY NAME g_xmda_m.xmda009_desc                  
                     NEXT FIELD CURRENT
                  END IF 
                  IF g_xmda_m.xmda007 = '5' THEN
                     SELECT COUNT(*)
                       INTO l_cnt
                       FROM xmdk_t
                      WHERE xmdkent = g_enterprise 
                        AND xmdkdocno = g_xmda_m.xmda008
                        AND xmdk000 <> '2'
                        AND xmdk010 = g_xmda_m.xmda009
                     IF l_cnt = 0 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'adb-00050'
                        LET g_errparam.extend = g_xmda_m.xmda009
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                  
                        LET g_xmda_m.xmda009 = g_xmda_m_o.xmda009
                        CALL s_desc_get_ooib002_desc(g_xmda_m.xmda009) RETURNING g_xmda_m.xmda009_desc
                        DISPLAY BY NAME g_xmda_m.xmda009_desc  
                        NEXT FIELD CURRENT
                     END IF
                  END IF

                    #重新修改收款條件時，需詢問是否要重新取價，並重新計算含稅金額、未稅金額、稅額                
                  #  LET l_cnt = 0
                  #  SELECT COUNT(*) INTO l_cnt    
                  #    FROM xmdc_t
                  #   WHERE xmdcent = g_enterprise 
                  #     AND xmdcdocno = g_xmda_m.xmdadocno                
                  # 
                  #  IF l_cnt > 0 AND (g_xmda_m.xmda009 != g_xmda_m_o.xmda009) THEN 
                  #     IF cl_ask_confirm('axm-00230') THEN
                  #       #CALL adbt500_get_xmdc015()          
                  #        CALL adbt500_change_xmdc016()
                  #     END IF
                  #     LET g_xmda_m_o.xmda009 = g_xmda_m.xmda009          
                  #  END IF 
               END IF                  
            END IF 
            CALL s_desc_get_ooib002_desc(g_xmda_m.xmda009) RETURNING g_xmda_m.xmda009_desc
            DISPLAY BY NAME g_xmda_m.xmda009_desc
            LET g_xmda_m_o.xmda009 = g_xmda_m.xmda009 
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda009
            #add-point:BEFORE FIELD xmda009 name="input.b.xmda009"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda009
            #add-point:ON CHANGE xmda009 name="input.g.xmda009"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda010
            
            #add-point:AFTER FIELD xmda010 name="input.a.xmda010"
            IF NOT cl_null(g_xmda_m.xmda010) THEN 
               IF g_xmda_m.xmda010 != g_xmda_m_o.xmda010 OR g_xmda_m_o.xmda010 IS NULL THEN
                  IF NOT s_azzi650_chk_exist('238',g_xmda_m.xmda010) THEN
                     LET g_xmda_m.xmda010 = g_xmda_m_o.xmda010
                     CALL s_desc_get_acc_desc('238',g_xmda_m.xmda010) RETURNING g_xmda_m.xmda010_desc
                     DISPLAY BY NAME g_xmda_m.xmda010_desc                  
                     NEXT FIELD CURRENT
                  END IF
                  IF g_xmda_m.xmda007 = '5' THEN
                     SELECT COUNT(*)
                       INTO l_cnt
                       FROM xmdk_t
                      WHERE xmdkent = g_enterprise 
                        AND xmdkdocno = g_xmda_m.xmda008
                        AND xmdk000 <> '2'
                        AND xmdk011 = g_xmda_m.xmda010
                     IF l_cnt = 0 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'adb-00050'
                        LET g_errparam.extend = g_xmda_m.xmda010
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                  
                        LET g_xmda_m.xmda010 = g_xmda_m_o.xmda010
                        CALL s_desc_get_acc_desc('238',g_xmda_m.xmda010) RETURNING g_xmda_m.xmda010_desc
                        DISPLAY BY NAME g_xmda_m.xmda010_desc   
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF   
               #重新修改交易條件時，需詢問是否要重新取價，並重新計算含稅金額、未稅金額、稅額  
             # LET l_cnt = 0
             # SELECT COUNT(*) INTO l_cnt    
             #   FROM xmdc_t
             #  WHERE xmdcent = g_enterprise 
             #    AND xmdcdocno = g_xmda_m.xmdadocno                 
             # IF l_cnt > 0 AND (g_xmda_m.xmda010 != g_xmda_m_o.xmda010) THEN 
             #    IF cl_ask_confirm('axm-00230') THEN
             #      #CALL adbt500_get_xmdc015()          
             #       CALL adbt500_change_xmdc016()
             #    END IF
             #    LET g_xmda_m_o.xmda010 = g_xmda_m.xmda010                       
             # END IF             
            END IF 
            CALL s_desc_get_acc_desc('238',g_xmda_m.xmda010) RETURNING g_xmda_m.xmda010_desc
            DISPLAY BY NAME g_xmda_m.xmda010_desc
            LET g_xmda_m_o.xmda010 = g_xmda_m.xmda010 
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda010
            #add-point:BEFORE FIELD xmda010 name="input.b.xmda010"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda010
            #add-point:ON CHANGE xmda010 name="input.g.xmda010"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda015
            
            #add-point:AFTER FIELD xmda015 name="input.a.xmda015"

            IF NOT cl_null(g_xmda_m.xmda015) THEN 
               IF g_xmda_m.xmda015 != g_xmda_m_o.xmda015 OR g_xmda_m_o.xmda015 IS NULL THEN     
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = TRUE #是否開窗 #160318-00025#28  add
                  LET g_chkparam.arg1 = g_xmda_m.xmdasite
                  LET g_chkparam.arg2 = g_xmda_m.xmda015
                  LET g_chkparam.err_str[1] = "aoo-00176:sub-01302|aooi150|",cl_get_progname("aooi150",g_lang,"2"),"|:EXEPROGaooi150"#要執行的建議程式待補 #160318-00025#28  add
                  IF cl_chk_exist("v_ooaj002") THEN
                     #檢查成功時後續處理
                     CALL s_adb_get_exchange(g_xmda_m.xmdasite,g_xmda_m.xmda048,g_xmda_m.xmda015) RETURNING l_errno,g_xmda_m.xmda016
                     DISPLAY BY NAME g_xmda_m.xmda016
                     IF NOT cl_null(l_errno) THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = l_errno
                        LET g_errparam.extend = g_xmda_m.xmda015
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        
                        LET g_xmda_m.xmda015 = g_xmda_m_o.xmda015
                        CALL s_desc_get_currency_desc(g_xmda_m.xmda015) RETURNING g_xmda_m.xmda015_desc
                        DISPLAY BY NAME g_xmda_m.xmda015_desc
                        NEXT FIELD CURRENT
                     END IF
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda015 = g_xmda_m_o.xmda015
                     CALL s_desc_get_currency_desc(g_xmda_m.xmda015) RETURNING g_xmda_m.xmda015_desc
                     DISPLAY BY NAME g_xmda_m.xmda015_desc
                     NEXT FIELD CURRENT
                  END IF
               
                  IF g_xmda_m.xmda007 = '5' THEN
                     SELECT COUNT(*)
                       INTO l_cnt
                       FROM xmdk_t
                      WHERE xmdkent = g_enterprise 
                        AND xmdkdocno = g_xmda_m.xmda008
                        AND xmdk000 <> '2'
                        AND xmdk016 = g_xmda_m.xmda015
                     IF l_cnt = 0 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'adb-00050'
                        LET g_errparam.extend = g_xmda_m.xmda015
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        
                        LET g_xmda_m.xmda015 = g_xmda_m_o.xmda015
                        CALL s_desc_get_currency_desc(g_xmda_m.xmda015) RETURNING g_xmda_m.xmda015_desc
                        DISPLAY BY NAME g_xmda_m.xmda015_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  #重新修改幣別時，需詢問是否要重新取價，並重新計算含稅金額、未稅金額、稅額  
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt    
                    FROM xmdc_t
                   WHERE xmdcent = g_enterprise 
                     AND xmdcdocno = g_xmda_m.xmdadocno                 
                  IF l_cnt > 0 AND (g_xmda_m.xmda015 != g_xmda_m_o.xmda015) THEN 
                     IF cl_ask_confirm('axm-00230') THEN        
                        CALL adbt500_change_xmdc016()
                     END IF          
                  END IF 
               END IF                  
            END IF 
            CALL s_desc_get_currency_desc(g_xmda_m.xmda015) RETURNING g_xmda_m.xmda015_desc
            DISPLAY BY NAME g_xmda_m.xmda015_desc
            LET g_xmda_m_o.xmda015 = g_xmda_m.xmda015
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda015
            #add-point:BEFORE FIELD xmda015 name="input.b.xmda015"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda015
            #add-point:ON CHANGE xmda015 name="input.g.xmda015"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda011
            
            #add-point:AFTER FIELD xmda011 name="input.a.xmda011"
            IF NOT cl_null(g_xmda_m.xmda011) THEN 
               #此段落由子樣板a19產生
               IF g_xmda_m.xmda011 <> g_xmda_m_o.xmda011 OR g_xmda_m_o.xmda011 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = TRUE #是否開窗 #160318-00025#28  add
                  LET g_chkparam.arg1 = g_xmda_m.xmdasite
                  LET g_chkparam.arg2 = g_xmda_m.xmda011
                  LET g_chkparam.err_str[1] = "aoo-00223:sub-01302|aooi610|",cl_get_progname("aooi610",g_lang,"2"),"|:EXEPROGaooi610"#要執行的建議程式待補 #160318-00025#28  add
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_oodb002") THEN
                     LET g_xmda_m.xmda011 = g_xmda_m_o.xmda011
                     LET g_xmda_m.xmda012 = g_xmda_m_o.xmda012
                     LET g_xmda_m.xmda013 = g_xmda_m_o.xmda013
                     CALL s_desc_get_tax_desc1(g_xmda_m.xmdasite,g_xmda_m.xmda011) RETURNING g_xmda_m.xmda011_desc
                     DISPLAY BY NAME g_xmda_m.xmda011_desc                      
                     NEXT FIELD CURRENT
                  END IF
                  #帶出稅率、含稅否
                  CALL s_tax_chk(g_xmda_m.xmdasite,g_xmda_m.xmda011)
                   RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011   
                  IF NOT l_success OR NOT adbt500_xmda011_chk(g_xmda_m.xmda011) THEN
                     LET g_xmda_m.xmda011 = g_xmda_m_o.xmda011 
                     LET g_xmda_m.xmda012 = g_xmda_m_o.xmda012
                     LET g_xmda_m.xmda013 = g_xmda_m_o.xmda013
                     CALL s_desc_get_tax_desc1(g_xmda_m.xmdasite,g_xmda_m.xmda011) RETURNING g_xmda_m.xmda011_desc
                     DISPLAY BY NAME g_xmda_m.xmda011_desc                      
                     NEXT FIELD CURRENT
                  END IF

                  LET g_xmda_m.xmda012 = l_oodb006
                  LET g_xmda_m.xmda013 = l_oodb005
                  LET g_tax_app = l_oodb011 
                  DISPLAY BY NAME g_xmda_m.xmda012
                  DISPLAY BY NAME g_xmda_m.xmda013
                  #重新修改稅別時，需詢問是否要重新取價，並重新計算含稅金額、未稅金額、稅額                
                  IF g_xmdc4_d.getLength() > 0 AND (g_xmda_m.xmda011 != g_xmda_m_o.xmda011) THEN
                     IF cl_ask_confirm('apm-00351') THEN
                        CALL adbt500_change_xmdc016()
                     END IF                      
                  END IF            
               END IF

            END IF 
            CALL s_desc_get_tax_desc1(g_xmda_m.xmdasite,g_xmda_m.xmda011) RETURNING g_xmda_m.xmda011_desc
            DISPLAY BY NAME g_xmda_m.xmda011_desc
            LET g_xmda_m_o.xmda011 = g_xmda_m.xmda011
            LET g_xmda_m_o.xmda012 = g_xmda_m.xmda012
            LET g_xmda_m_o.xmda013 = g_xmda_m.xmda013 
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda011
            #add-point:BEFORE FIELD xmda011 name="input.b.xmda011"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda011
            #add-point:ON CHANGE xmda011 name="input.g.xmda011"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda035
            
            #add-point:AFTER FIELD xmda035 name="input.a.xmda035"
            IF NOT cl_null(g_xmda_m.xmda035) THEN
               IF g_xmda_m.xmda035 != g_xmda_m_o.xmda035 OR g_xmda_m_o.xmda035 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  SELECT ooef019 INTO l_ooef019 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_xmda_m.xmdasite
                  LET g_chkparam.arg1 = l_ooef019 
                  LET g_chkparam.arg2 = g_xmda_m.xmda035
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_isac002") THEN
                     #檢查成功時後續處理
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda035 = g_xmda_m_o.xmda035
                     CALL s_desc_get_invoice_type_desc1(g_xmda_m.xmdasite,g_xmda_m.xmda035) RETURNING g_xmda_m.xmda035_desc
                     DISPLAY BY NAME g_xmda_m.xmda035_desc 
                     NEXT FIELD CURRENT
                  END IF
               END IF                  
            END IF
            CALL s_desc_get_invoice_type_desc1(g_xmda_m.xmdasite,g_xmda_m.xmda035) RETURNING g_xmda_m.xmda035_desc
            DISPLAY BY NAME g_xmda_m.xmda035_desc 
            LET g_xmda_m_o.xmda035 = g_xmda_m.xmda035  
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda035
            #add-point:BEFORE FIELD xmda035 name="input.b.xmda035"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda035
            #add-point:ON CHANGE xmda035 name="input.g.xmda035"
                                                                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda039
            #add-point:BEFORE FIELD xmda039 name="input.b.xmda039"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda039
            
            #add-point:AFTER FIELD xmda039 name="input.a.xmda039"
                                                                        
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda039
            #add-point:ON CHANGE xmda039 name="input.g.xmda039"
                                                                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda041
            #add-point:BEFORE FIELD xmda041 name="input.b.xmda041"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda041
            
            #add-point:AFTER FIELD xmda041 name="input.a.xmda041"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda041
            #add-point:ON CHANGE xmda041 name="input.g.xmda041"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda042
            #add-point:BEFORE FIELD xmda042 name="input.b.xmda042"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda042
            
            #add-point:AFTER FIELD xmda042 name="input.a.xmda042"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda042
            #add-point:ON CHANGE xmda042 name="input.g.xmda042"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda034
            
            #add-point:AFTER FIELD xmda034 name="input.a.xmda034"
            #IF NOT cl_null(g_xmda_m.xmda034)  AND g_xmda_m.xmda034 <> g_xmda_m_t.xmda034 THEN  #160824-00007#48 Mark By Ken 161007 
            IF NOT cl_null(g_xmda_m.xmda034)  AND g_xmda_m.xmda034 <> g_xmda_m_o.xmda034 THEN   #160824-00007#48 Add By Ken 161007
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL        
               LET g_errshow = TRUE #是否開窗 #160318-00025#28  add               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmda_m.xmda034
               LET g_chkparam.arg2 = 'ALL'
               LET g_chkparam.err_str[1] = "apm-00201:sub-01302|axmm200|",cl_get_progname("axmm200",g_lang,"2"),"|:EXEPROGaxmm200"#要執行的建議程式待補 #160318-00025#28  add
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pmaa001_3") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  #LET g_xmda_m.xmda034 = g_xmda_m_t.xmda034   #160824-00007#48 Mark By Ken 161007
                  LET g_xmda_m.xmda034 = g_xmda_m_o.xmda034    #160824-00007#48 Add By Ken 161007
                  CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda034) RETURNING g_xmda_m.xmda034_desc
                  DISPLAY BY NAME g_xmda_m.xmda034_desc
                  NEXT FIELD CURRENT
               END IF
            END IF 
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda034) RETURNING g_xmda_m.xmda034_desc
            DISPLAY BY NAME g_xmda_m.xmda034_desc
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda034
            #add-point:BEFORE FIELD xmda034 name="input.b.xmda034"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda034
            #add-point:ON CHANGE xmda034 name="input.g.xmda034"
                                                                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda006
            #add-point:BEFORE FIELD xmda006 name="input.b.xmda006"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda006
            
            #add-point:AFTER FIELD xmda006 name="input.a.xmda006"
                                                                        
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda006
            #add-point:ON CHANGE xmda006 name="input.g.xmda006"
                                                                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda033
            #add-point:BEFORE FIELD xmda033 name="input.b.xmda033"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda033
            
            #add-point:AFTER FIELD xmda033 name="input.a.xmda033"
                                                                        
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda033
            #add-point:ON CHANGE xmda033 name="input.g.xmda033"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda017
            
            #add-point:AFTER FIELD xmda017 name="input.a.xmda017"
            IF NOT cl_null(g_xmda_m.xmda017) THEN 
               IF g_xmda_m.xmda017 != g_xmda_m_o.xmda017 OR g_xmda_m_o.xmda017 IS NULL THEN
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = TRUE #是否開窗 #160318-00025#28  add                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda017
                  LET g_chkparam.err_str[1] = "axm-00026:sub-01302|axmi130|",cl_get_progname("axmi130",g_lang,"2"),"|:EXEPROGaxmi130"#要執行的建議程式待補 #160318-00025#28  add                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_xmah001") THEN
                     #CALL adbt500_get_xmdc015()
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmda_m.xmda017 = g_xmda_m_o.xmda017
                     CALL adbt500_xmda017_ref(g_xmda_m.xmda017) RETURNING g_xmda_m.xmda017_desc
                     DISPLAY BY NAME g_xmda_m.xmda017_desc
                     NEXT FIELD CURRENT                                 
                  END IF
                  #重新修改取價方式時，需詢問是否要重新取價，並重新計算含稅金額、未稅金額、稅額                
                #  LET l_cnt = 0
                #  SELECT COUNT(*) INTO l_cnt    
                #    FROM xmdc_t
                #   WHERE xmdcent = g_enterprise 
                #     AND xmdcdocno = g_xmda_m.xmdadocno                
                # 
                #  IF l_cnt > 0 AND (g_xmda_m.xmda017 != g_xmda_m_o.xmda017) THEN 
                #     IF cl_ask_confirm('axm-00230') THEN
                #       #CALL adbt500_get_xmdc015()          
                #        CALL adbt500_change_xmdc016()
                #     END IF
                #     LET g_xmda_m_o.xmda017 = g_xmda_m.xmda017          
                #  END IF             
               END IF
            END IF 
            CALL adbt500_xmda017_ref(g_xmda_m.xmda017) RETURNING g_xmda_m.xmda017_desc
            DISPLAY BY NAME g_xmda_m.xmda017_desc  
            LET g_xmda_m_o.xmda017 = g_xmda_m.xmda017 
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda017
            #add-point:BEFORE FIELD xmda017 name="input.b.xmda017"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda017
            #add-point:ON CHANGE xmda017 name="input.g.xmda017"
                                                                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda019
            #add-point:BEFORE FIELD xmda019 name="input.b.xmda019"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda019
            
            #add-point:AFTER FIELD xmda019 name="input.a.xmda019"
                                                                        
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda019
            #add-point:ON CHANGE xmda019 name="input.g.xmda019"
                                                                        
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda018
            
            #add-point:AFTER FIELD xmda018 name="input.a.xmda018"
            IF NOT cl_null(g_xmda_m.xmda018) THEN 
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = TRUE #是否開窗 #160318-00025#28  add
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_xmda_m.xmda018
               LET g_chkparam.err_str[1] = "aoo-00194:sub-01302|aooi717|",cl_get_progname("aooi717",g_lang,"2"),"|:EXEPROGaooi717"#要執行的建議程式待補 #160318-00025#28  add
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooid001_2") THEN
                  #檢查成功時後續處理
                ELSE
                  #檢查失敗時後續處理
                  #LET g_xmda_m.xmda018 = g_xmda_m_t.xmda018   #160824-00007#48 Add By Ken 161007
                  LET g_xmda_m.xmda018 = g_xmda_m_o.xmda018    #160824-00007#48 Mark By Ken 161007
                  CALL s_desc_ooid001_desc(g_xmda_m.xmda018) RETURNING g_xmda_m.xmda018_desc
                  DISPLAY BY NAME g_xmda_m.xmda018_desc                  
                  NEXT FIELD CURRENT
               END IF
 
            END IF 
            CALL s_desc_ooid001_desc(g_xmda_m.xmda018) RETURNING g_xmda_m.xmda018_desc
            DISPLAY BY NAME g_xmda_m.xmda018_desc
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda018
            #add-point:BEFORE FIELD xmda018 name="input.b.xmda018"
                                                                        
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda018
            #add-point:ON CHANGE xmda018 name="input.g.xmda018"
                                                                        
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmda028
            #add-point:BEFORE FIELD xmda028 name="input.b.xmda028"
                                                                        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmda028
            
            #add-point:AFTER FIELD xmda028 name="input.a.xmda028"
                                                                        
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmda028
            #add-point:ON CHANGE xmda028 name="input.g.xmda028"
                                                                        
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xmdasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdasite
            #add-point:ON ACTION controlp INFIELD xmdasite name="input.c.xmdasite"
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmdasite             #給予default值

            #給予arg
            #LET g_qryparam.arg1 = g_site
            #LET g_qryparam.arg2 = '8'

            #CALL q_ooed004_3()                                #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmdasite',g_xmda_m.xmdasite,'i') #150308-00001#2  By sakura add 'i'
            CALL q_ooef001_24()
            LET g_xmda_m.xmdasite = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmdasite TO xmdasite              #顯示到畫面上
            CALL s_desc_get_department_desc(g_xmda_m.xmdasite) RETURNING g_xmda_m.xmdasite_desc
            DISPLAY BY NAME g_xmda_m.xmdasite_desc
            NEXT FIELD xmdasite                          #返回原欄位                                                           
            #END add-point
 
 
         #Ctrlp:input.c.xmdadocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdadocdt
            #add-point:ON ACTION controlp INFIELD xmdadocdt name="input.c.xmdadocdt"
                                                                        
            #END add-point
 
 
         #Ctrlp:input.c.xmdadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdadocno
            #add-point:ON ACTION controlp INFIELD xmdadocno name="input.c.xmdadocno"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmdadocno             #給予default值

            #給予arg
            LET l_ooef004 = ''
            SELECT ooef004 INTO l_ooef004 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_xmda_m.xmdasite
            LET g_qryparam.arg1 = l_ooef004
            LET g_qryparam.arg2 = g_prog

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_xmda_m.xmdadocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmdadocno TO xmdadocno              #顯示到畫面上
            CALL s_aooi200_get_slip_desc(g_xmda_m.xmdadocno) RETURNING g_xmda_m.xmdadocno_desc 
            DISPLAY BY NAME g_xmda_m.xmdadocno_desc
            NEXT FIELD xmdadocno                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda001
            #add-point:ON ACTION controlp INFIELD xmda001 name="input.c.xmda001"
                                                                        
            #END add-point
 
 
         #Ctrlp:input.c.xmda005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda005
            #add-point:ON ACTION controlp INFIELD xmda005 name="input.c.xmda005"
                                                                        
            #END add-point
 
 
         #Ctrlp:input.c.xmda202
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda202
            #add-point:ON ACTION controlp INFIELD xmda202 name="input.c.xmda202"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda202             #給予default值

            #給予arg
            #161006-00008#5-add(s)
            IF s_aooi500_setpoint(g_prog,'xmda202') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmda202',g_xmda_m.xmdasite,'c')
               CALL q_ooef001_24()                   
            ELSE
            #161006-00008#5-add(e)
               LET g_qryparam.where = "ooef305 = 'Y'"
               CALL q_ooef001()                                #呼叫開窗
            END IF                     #161006-00008#5-add
            LET g_xmda_m.xmda202 = g_qryparam.return1      
            DISPLAY g_xmda_m.xmda202 TO xmda202              #
            CALL s_desc_get_department_desc(g_xmda_m.xmda202) RETURNING g_xmda_m.xmda202_desc
            DISPLAY BY NAME g_xmda_m.xmda202_desc
            NEXT FIELD xmda202                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda023
            #add-point:ON ACTION controlp INFIELD xmda023 name="input.c.xmda023"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda023             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "1"
            CALL q_oojd001_1()                                #呼叫開窗

            LET g_xmda_m.xmda023 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmda023 TO xmda023              #顯示到畫面上
            CALL adbt500_xmda023_ref(g_xmda_m.xmda023) RETURNING g_xmda_m.xmda023_desc
            DISPLAY BY NAME g_xmda_m.xmda023_desc
            NEXT FIELD xmda023                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda004
            #add-point:ON ACTION controlp INFIELD xmda004 name="input.c.xmda004"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            #LET g_qryparam.where = "1=1 "  
            LET g_qryparam.where = " NOT (pmaa002 = '2' AND pmaa230 = '2')" 
          
            LET g_qryparam.default1 = g_xmda_m.xmda004             #給予default值
            #給予arg
            LET g_qryparam.arg1 = 'ALL'
            CALL q_pmaa001_6()                                #呼叫開窗

            LET g_xmda_m.xmda004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmda004 TO xmda004              #顯示到畫面上
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda004) RETURNING g_xmda_m.xmda004_desc
            DISPLAY BY NAME g_xmda_m.xmda004_desc
            NEXT FIELD xmda004                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda200
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda200
            #add-point:ON ACTION controlp INFIELD xmda200 name="input.c.xmda200"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda200             #給予default值

            #給予arg

            CALL q_pmaa001_20()                                #呼叫開窗

            LET g_xmda_m.xmda200 = g_qryparam.return1              

            DISPLAY g_xmda_m.xmda200 TO xmda200              #
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda200) RETURNING g_xmda_m.xmda200_desc
            NEXT FIELD xmda200                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda201
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda201
            #add-point:ON ACTION controlp INFIELD xmda201 name="input.c.xmda201"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda201             #給予default值

            #給予arg
            
            CALL q_pmaa001_10()                                #呼叫開窗

            LET g_xmda_m.xmda201 = g_qryparam.return1              

            DISPLAY g_xmda_m.xmda201 TO xmda201              #
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda201) RETURNING g_xmda_m.xmda201_desc
            DISPLAY BY NAME g_xmda_m.xmda201_desc
            NEXT FIELD xmda201                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmdastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdastus
            #add-point:ON ACTION controlp INFIELD xmdastus name="input.c.xmdastus"
                                                                        
            #END add-point
 
 
         #Ctrlp:input.c.xmda007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda007
            #add-point:ON ACTION controlp INFIELD xmda007 name="input.c.xmda007"
                                                                        
            #END add-point
 
 
         #Ctrlp:input.c.xmda008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda008
            #add-point:ON ACTION controlp INFIELD xmda008 name="input.c.xmda008"
            IF g_xmda_m.xmda007 = '5' THEN
               #開窗i段
		   	   INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
			      LET g_qryparam.reqry = FALSE
               
               LET g_qryparam.default1 = g_xmda_m.xmda008             #給予default值
               
               
               #給予arg
               LET g_qryparam.arg1 = g_xmda_m.xmdasite
               LET g_qryparam.arg2 = '2'
               
               CALL q_xmdkdocno_4()                                #呼叫開窗
               
               LET g_xmda_m.xmda008 = g_qryparam.return1              #將開窗取得的值回傳到變數
               
               DISPLAY g_xmda_m.xmda008 TO xmda008              #顯示到畫面上
               
               NEXT FIELD xmda008                          #返回原欄位
            END IF               
            #END add-point
 
 
         #Ctrlp:input.c.xmda021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda021
            #add-point:ON ACTION controlp INFIELD xmda021 name="input.c.xmda021"
            #此段落由子樣板a07產生            
            #開窗i段
		      INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda021             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_xmda_m.xmda004
            LET g_qryparam.arg2 = 'ALL'
            CALL q_pmac002_5()                                #呼叫開窗

            LET g_xmda_m.xmda021 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_xmda_m.pmaal004 = g_qryparam.return2 #交易對象簡稱
            DISPLAY g_xmda_m.xmda021 TO xmda021              #顯示到畫面上
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda021) RETURNING g_xmda_m.xmda021_desc
            DISPLAY BY NAME g_xmda_m.xmda021_desc
            NEXT FIELD xmda021                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda022
            #add-point:ON ACTION controlp INFIELD xmda022 name="input.c.xmda022"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda022             #給予default值
            LET g_qryparam.default2 = ""                           #g_xmda_m.pmaal004 #交易對象簡稱

            #給予arg
            LET g_qryparam.arg1 = g_xmda_m.xmda004 #
            LET g_qryparam.arg2 = 'ALL'

            CALL q_pmac002_6()                                #呼叫開窗

            LET g_xmda_m.xmda022 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda022 TO xmda022              #顯示到畫面上
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda022) RETURNING g_xmda_m.xmda022_desc
            DISPLAY BY NAME g_xmda_m.xmda022_desc
            NEXT FIELD xmda022                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda203
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda203
            #add-point:ON ACTION controlp INFIELD xmda203 name="input.c.xmda203"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda203             #給予default值
            LET g_qryparam.default2 = "" #g_xmda_m.pmaal004 #交易對象簡稱
            #給予arg
            #lori522612  150121  add ----------------------(S)
            #LET g_qryparam.arg1 = g_xmda_m.xmda004
            #LET g_qryparam.arg2 = '3'
            #CALL q_pmac002_9()                               
            LET g_qryparam.arg1 = g_xmda_m.xmda004
            LET g_qryparam.arg2 = 'ALL'
            CALL q_pmac002_7()
            #lori522612  150121  add ----------------------(E)
            LET g_xmda_m.xmda203 = g_qryparam.return1              
            #LET g_xmda_m.pmaal004 = g_qryparam.return2 
            DISPLAY g_xmda_m.xmda203 TO xmda203              #
            #DISPLAY g_xmda_m.pmaal004 TO pmaal004 #交易對象簡稱
            CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda203) RETURNING g_xmda_m.xmda203_desc
            DISPLAY BY NAME g_xmda_m.xmda203_desc
            NEXT FIELD xmda203                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda027
            #add-point:ON ACTION controlp INFIELD xmda027 name="input.c.xmda027"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda027             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmda_m.xmda004 #

            CALL q_pmaj002()                                #呼叫開窗

            LET g_xmda_m.xmda027 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmda027 TO xmda027              #顯示到畫面上
            CALL adbt500_xmda027_ref(g_xmda_m.xmda027) RETURNING g_xmda_m.xmda027_desc
            DISPLAY BY NAME g_xmda_m.xmda027_desc
            NEXT FIELD xmda027                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda024
            #add-point:ON ACTION controlp INFIELD xmda024 name="input.c.xmda024"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda024             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "295"

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmda_m.xmda024 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmda024 TO xmda024              #顯示到畫面上
            CALL s_desc_get_acc_desc('295',g_xmda_m.xmda024) RETURNING g_xmda_m.xmda024_desc
            DISPLAY BY NAME g_xmda_m.xmda024_desc
            NEXT FIELD xmda024                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda002
            #add-point:ON ACTION controlp INFIELD xmda002 name="input.c.xmda002"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda002             #給予default值

            #給予arg

            CALL q_ooag001()                                #呼叫開窗

            LET g_xmda_m.xmda002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmda002 TO xmda002              #顯示到畫面上

            NEXT FIELD xmda002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda003
            #add-point:ON ACTION controlp INFIELD xmda003 name="input.c.xmda003"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmda_m.xmdadocdt

            CALL q_ooeg001()                                #呼叫開窗

            LET g_xmda_m.xmda003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmda003 TO xmda003              #顯示到畫面上

            NEXT FIELD xmda003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmdaunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdaunit
            #add-point:ON ACTION controlp INFIELD xmdaunit name="input.c.xmdaunit"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmdaunit             #給予default值

#            #給予arg
#            LET g_qryparam.arg1 = '8'
#            
#            CALL q_ooed004_2()                                #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmdaunit',g_xmda_m.xmdasite,'i') #150308-00001#2  By sakura add 'i'
            CALL q_ooef001_24()
            LET g_xmda_m.xmdaunit = g_qryparam.return1              

            DISPLAY g_xmda_m.xmdaunit TO xmdaunit              #
            CALL s_desc_get_department_desc(g_xmda_m.xmdaunit) RETURNING g_xmda_m.xmdaunit_desc
            DISPLAY BY NAME g_xmda_m.xmdaunit_desc
            NEXT FIELD xmdaunit                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda211
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda211
            #add-point:ON ACTION controlp INFIELD xmda211 name="input.c.xmda211"
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda211             #給予default值
            #給予arg
            LET g_qryparam.arg1 = "1" #
            CALL q_dbaa001_1()                                #呼叫開窗
            LET g_xmda_m.xmda211 = g_qryparam.return1              
            DISPLAY g_xmda_m.xmda211 TO xmda211              #
            CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda211) RETURNING g_xmda_m.xmda211_desc
            DISPLAY BY NAME g_xmda_m.xmda211_desc
            NEXT FIELD xmda211                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.xmda210
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda210
            #add-point:ON ACTION controlp INFIELD xmda210 name="input.c.xmda210"
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda210             #給予default值
            IF NOT cl_null(g_xmda_m.xmda211) THEN
               LET g_qryparam.arg1 = "2"
               LET g_qryparam.arg2 = g_xmda_m.xmda211
               CALL q_dbaa001_2()                                #呼叫開窗
            ELSE
               LET g_qryparam.arg1 = "2"
               CALL q_dbaa001_1()                                #呼叫開窗
            END IF
            LET g_xmda_m.xmda210 = g_qryparam.return1              

            DISPLAY g_xmda_m.xmda210 TO xmda210              #
            CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda210) RETURNING g_xmda_m.xmda210_desc
            DISPLAY BY NAME g_xmda_m.xmda210_desc
            NEXT FIELD xmda210                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda209
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda209
            #add-point:ON ACTION controlp INFIELD xmda209 name="input.c.xmda209"
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda209             #給予default值
            IF NOT cl_null(g_xmda_m.xmda210) THEN
               LET g_qryparam.arg1 = "3"
               LET g_qryparam.arg2 = g_xmda_m.xmda210
               CALL q_dbaa001_2()                                #呼叫開窗
            ELSE
               LET g_qryparam.arg1 = "3"
               CALL q_dbaa001_1()                                #呼叫開窗
            END IF
            LET g_xmda_m.xmda209 = g_qryparam.return1              
            DISPLAY g_xmda_m.xmda209 TO xmda209              #
            CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda209) RETURNING g_xmda_m.xmda209_desc
            DISPLAY BY NAME g_xmda_m.xmda209_desc
            NEXT FIELD xmda209                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda208
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda208
            #add-point:ON ACTION controlp INFIELD xmda208 name="input.c.xmda208"
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda208             #給予default值
            IF NOT cl_null(g_xmda_m.xmda209) THEN
               LET g_qryparam.arg1 = "4"
               LET g_qryparam.arg2 = g_xmda_m.xmda209
               CALL q_dbaa001_2()                                #呼叫開窗
            ELSE
               LET g_qryparam.arg1 = "4"
               CALL q_dbaa001_1()                                #呼叫開窗
            END IF
            LET g_xmda_m.xmda208 = g_qryparam.return1              
            DISPLAY g_xmda_m.xmda208 TO xmda208              #
            CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda208) RETURNING g_xmda_m.xmda208_desc
            DISPLAY BY NAME g_xmda_m.xmda208_desc
            NEXT FIELD xmda208                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda204
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda204
            #add-point:ON ACTION controlp INFIELD xmda204 name="input.c.xmda204"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda204             #給予default值

            #給予arg
            
            CALL q_prcf001_1()                                #呼叫開窗

            LET g_xmda_m.xmda204 = g_qryparam.return1              

            DISPLAY g_xmda_m.xmda204 TO xmda204              #
            CALL adbt500_xmda204_ref()
            NEXT FIELD xmda204                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda205
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda205
            #add-point:ON ACTION controlp INFIELD xmda205 name="input.c.xmda205"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmda071
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda071
            #add-point:ON ACTION controlp INFIELD xmda071 name="input.c.xmda071"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmda025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda025
            #add-point:ON ACTION controlp INFIELD xmda025 name="input.c.xmda025"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda025             #給予default值
            LET g_qryparam.where = " oofb008 = '3' "               #聯絡地址
            #給予arg
			   LET g_qryparam.arg1 = l_pmaa027
            CALL q_oofb019_1()                                     #呼叫開窗
            LET g_xmda_m.xmda025 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda025 TO xmda025                    #顯示到畫面上
            CALL s_adb_address_ref('3',g_xmda_m.xmda025,g_xmda_m.xmda022)
               RETURNING r_oofb011,r_address
            LET g_xmda_m.xmda025_desc = r_oofb011
            LET g_xmda_m.oofb017 = r_address
            DISPLAY BY NAME g_xmda_m.xmda025_desc,g_xmda_m.oofb017
            NEXT FIELD xmda025                                     #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda026
            #add-point:ON ACTION controlp INFIELD xmda026 name="input.c.xmda026"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda026             #給予default值

            #給予arg
			LET g_qryparam.arg1 = l_pmaa027
            LET g_qryparam.where = " oofb008 = '5' "          #聯絡地址
            CALL q_oofb019_1()                                #呼叫開窗

            LET g_xmda_m.xmda026 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmda026 TO xmda026              #顯示到畫面上
            CALL s_adb_address_ref('5',g_xmda_m.xmda026,g_xmda_m.xmda021)
               RETURNING r_oofb011,r_address
            LET g_xmda_m.xmda026_desc = r_oofb011
            LET g_xmda_m.oofb017_1 = r_address 
            DISPLAY BY NAME g_xmda_m.xmda026_desc,g_xmda_m.oofb017_1
            NEXT FIELD xmda026                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda020
            #add-point:ON ACTION controlp INFIELD xmda020 name="input.c.xmda020"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda020             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "263" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_xmda_m.xmda020 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmda020 TO xmda020              #顯示到畫面上
            CALL s_desc_get_acc_desc('263',g_xmda_m.xmda020) RETURNING g_xmda_m.xmda020_desc
            DISPLAY BY NAME g_xmda_m.xmda020_desc
            NEXT FIELD xmda020                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda036
            #add-point:ON ACTION controlp INFIELD xmda036 name="input.c.xmda036"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda036             #給予default值

            #給予arg

            CALL q_pmaa001_3()                                #呼叫開窗

            LET g_xmda_m.xmda036 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmda036 TO xmda036              #顯示到畫面上

            NEXT FIELD xmda036                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda048
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda048
            #add-point:ON ACTION controlp INFIELD xmda048 name="input.c.xmda048"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmda049
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda049
            #add-point:ON ACTION controlp INFIELD xmda049 name="input.c.xmda049"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmda009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda009
            #add-point:ON ACTION controlp INFIELD xmda009 name="input.c.xmda009"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda009             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmda_m.xmda004

            CALL q_pmad002_3()                                 #呼叫開窗

            LET g_xmda_m.xmda009 = g_qryparam.return1          #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmda009 TO xmda009                #顯示到畫面上
            CALL s_desc_get_ooib002_desc(g_xmda_m.xmda009) RETURNING g_xmda_m.xmda009_desc
            DISPLAY BY NAME g_xmda_m.xmda009_desc
            NEXT FIELD xmda009                                 #返回原欄位
  

            #END add-point
 
 
         #Ctrlp:input.c.xmda010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda010
            #add-point:ON ACTION controlp INFIELD xmda010 name="input.c.xmda010"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda010             #給予default值

            #給予arg
			LET g_qryparam.arg1 = '238'
            CALL q_oocq002()                                #呼叫開窗

            LET g_xmda_m.xmda010 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmda010 TO xmda010              #顯示到畫面上
            CALL s_desc_get_acc_desc('238',g_xmda_m.xmda010) RETURNING g_xmda_m.xmda010_desc
            DISPLAY BY NAME g_xmda_m.xmda010_desc
            NEXT FIELD xmda010                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda015
            #add-point:ON ACTION controlp INFIELD xmda015 name="input.c.xmda015"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda015             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmda_m.xmdasite
            CALL q_ooaj002_2()                                 #呼叫開窗

            LET g_xmda_m.xmda015 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmda015 TO xmda015              #顯示到畫面上
            CALL s_desc_get_currency_desc(g_xmda_m.xmda015) RETURNING g_xmda_m.xmda015_desc
            DISPLAY BY NAME g_xmda_m.xmda015_desc

            NEXT FIELD xmda015                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda011
            #add-point:ON ACTION controlp INFIELD xmda011 name="input.c.xmda011"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda011             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmda_m.xmdasite

            CALL q_oodb002_3()                                #呼叫開窗

            LET g_xmda_m.xmda011 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmda011 TO xmda011              #顯示到畫面上
            CALL s_desc_get_tax_desc1(g_xmda_m.xmdasite,g_xmda_m.xmda011) RETURNING g_xmda_m.xmda011_desc
            DISPLAY BY NAME g_xmda_m.xmda011_desc
            NEXT FIELD xmda011                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda035
            #add-point:ON ACTION controlp INFIELD xmda035 name="input.c.xmda035"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda035             #給予default值


            #給予arg
            SELECT ooef019 INTO l_ooef019 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_xmda_m.xmdasite
            LET g_qryparam.arg1 = l_ooef019 
            LET g_qryparam.arg2 = "2" 
            CALL q_isac002_1()                            #呼叫開窗

            LET g_xmda_m.xmda035 = g_qryparam.return1              #將開窗取得的值回傳到變數         

            DISPLAY g_xmda_m.xmda035 TO xmda035              #顯示到畫面上
            CALL s_desc_get_invoice_type_desc1(g_xmda_m.xmdasite,g_xmda_m.xmda035) RETURNING g_xmda_m.xmda035_desc
            DISPLAY BY NAME g_xmda_m.xmda035_desc  

            NEXT FIELD xmda035                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda039
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda039
            #add-point:ON ACTION controlp INFIELD xmda039 name="input.c.xmda039"
                                                                        
            #END add-point
 
 
         #Ctrlp:input.c.xmda041
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda041
            #add-point:ON ACTION controlp INFIELD xmda041 name="input.c.xmda041"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmda042
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda042
            #add-point:ON ACTION controlp INFIELD xmda042 name="input.c.xmda042"
            
            #END add-point
 
 
         #Ctrlp:input.c.xmda034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda034
            #add-point:ON ACTION controlp INFIELD xmda034 name="input.c.xmda034"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda034             #給予default值
            LET g_qryparam.arg1 = 'ALL'
            CALL q_pmaa001_6()                                #呼叫開窗
            LET g_xmda_m.xmda034 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda034 TO xmda034              #顯示到畫面上
            NEXT FIELD xmda034                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda006
            #add-point:ON ACTION controlp INFIELD xmda006 name="input.c.xmda006"
                                                                        
            #END add-point
 
 
         #Ctrlp:input.c.xmda033
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda033
            #add-point:ON ACTION controlp INFIELD xmda033 name="input.c.xmda033"
                                                                        
            #END add-point
 
 
         #Ctrlp:input.c.xmda017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda017
            #add-point:ON ACTION controlp INFIELD xmda017 name="input.c.xmda017"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda017             #給予default值

            #給予arg

            CALL q_xmah001()                                #呼叫開窗

            LET g_xmda_m.xmda017 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmda017 TO xmda017              #顯示到畫面上
            CALL adbt500_xmda017_ref(g_xmda_m.xmda017) RETURNING g_xmda_m.xmda017_desc
            DISPLAY BY NAME g_xmda_m.xmda017_desc
            NEXT FIELD xmda017                               #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda019
            #add-point:ON ACTION controlp INFIELD xmda019 name="input.c.xmda019"
                                                                        
            #END add-point
 
 
         #Ctrlp:input.c.xmda018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda018
            #add-point:ON ACTION controlp INFIELD xmda018 name="input.c.xmda018"
                                                                        #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmda_m.xmda018             #給予default值

            #給予arg

            CALL q_ooid001_1()                                #呼叫開窗

            LET g_xmda_m.xmda018 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmda_m.xmda018 TO xmda018              #顯示到畫面上
            CALL s_desc_ooid001_desc(g_xmda_m.xmda018) RETURNING g_xmda_m.xmda018_desc
            DISPLAY BY NAME g_xmda_m.xmda018_desc
            NEXT FIELD xmda018                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.xmda028
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmda028
            #add-point:ON ACTION controlp INFIELD xmda028 name="input.c.xmda028"
                                                                        
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xmda_m.xmdadocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               CALL s_aooi200_gen_docno(g_xmda_m.xmdasite,g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt,g_prog) RETURNING l_success,g_xmda_m.xmdadocno 
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_xmda_m.xmdadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()  
                  NEXT FIELD xmdodocno
                  CONTINUE DIALOG
                  RETURN
               END IF 
               DISPLAY BY NAME g_xmda_m.xmdadocno

              
               #取完單號後，如果是一次性交易對像，需回寫回完整單號
               LET l_pmaa004 = ''
               SELECT pmaa004 INTO l_pmaa004
                 FROM pmaa_t
                WHERE pmaaent = g_enterprise
                  AND pmaa001 = g_xmda_m.xmda004
               IF l_cmd_t = 'r' AND l_pmaa004 MATCHES '[24]' AND NOT cl_null(g_xmda_m.xmda028) THEN
                  #重新取聯絡對象識別碼
                  LET l_pmak002 = ''
                  LET g_sql = "SELECT pmak002 FROM pmak_t",
                              " WHERE pmakent = ",g_enterprise,
                              "   AND pmak001 = '",g_xmda_m_t.xmda028,"'"
                  PREPARE adbt500_pmak002 FROM g_sql
                  EXECUTE adbt500_pmak002 INTO l_pmak002
                  LET l_success = ''
                  SELECT pmaa002 INTO l_pmaa002
                    FROM pmaa_t
                   WHERE pmaaent = g_enterprise
                     AND pmaa001 =  l_pmak002
                  IF cl_null(l_pmaa002) THEN
                     LET l_pmaa002 = '3'
                  END IF
                  CALL s_aooi350_ins_oofa('3',l_pmak002,l_pmaa002)
                     RETURNING l_success,g_xmda_m.xmda028
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "oofa_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CONTINUE DIALOG
                  END IF
                  LET g_sql = "INSERT INTO pmak_t (pmakent,pmak001,pmak002,pmak003,pmak004,",
                              "                    pmak005,pmak006,pmak007,pmak008,pmak009)",
                              "SELECT pmakent,'",g_xmda_m.xmda028,"',pmak002,pmak003,pmak004,",
                              "       pmak005,'",g_xmda_m.xmdadocno,"',pmak007,pmak008,pmak009",
                              "  FROM pmak_t",
                              " WHERE pmakent = ",g_enterprise,
                              "   AND pmak001 = '",g_xmda_m_t.xmda028,"'"
                  PREPARE adbt500_ins_pmak FROM g_sql
                  EXECUTE adbt500_ins_pmak
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "Insert pmak_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CONTINUE DIALOG
                  END IF
               ELSE
                  IF l_pmaa004 MATCHES '[24]' AND NOT cl_null(g_xmda_m.xmda028) THEN
                     UPDATE pmak_t
                        SET pmak006 = g_xmda_m.xmdadocno
                      WHERE pmakent = g_enterprise
                        AND pmak001 = g_xmda_m.xmda028
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "Update pmak_t"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        CONTINUE DIALOG
                     END IF
                  END IF
               END IF
               #end add-point
               
               INSERT INTO xmda_t (xmdaent,xmdasite,xmdadocdt,xmdadocno,xmda001,xmda005,xmda202,xmda023, 
                   xmda004,xmda200,xmda201,xmdastus,xmda007,xmda008,xmda021,xmda022,xmda203,xmda027, 
                   xmda024,xmda002,xmda003,xmdaunit,xmda211,xmda210,xmda209,xmda208,xmda204,xmda205, 
                   xmda032,xmda071,xmda025,xmda026,xmda206,xmda207,xmda020,xmda036,xmda048,xmda049,xmda009, 
                   xmda010,xmda015,xmda016,xmda011,xmda012,xmda013,xmda035,xmda213,xmda039,xmda041,xmda042, 
                   xmdaownid,xmdaowndp,xmdacrtid,xmdacrtdp,xmdacrtdt,xmdamodid,xmdamoddt,xmdacnfid,xmdacnfdt, 
                   xmda034,xmda006,xmda033,xmda017,xmda019,xmda018,xmda030,xmda031,xmda045,xmda046,xmda047, 
                   xmda028,xmda043)
               VALUES (g_enterprise,g_xmda_m.xmdasite,g_xmda_m.xmdadocdt,g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
                   g_xmda_m.xmda005,g_xmda_m.xmda202,g_xmda_m.xmda023,g_xmda_m.xmda004,g_xmda_m.xmda200, 
                   g_xmda_m.xmda201,g_xmda_m.xmdastus,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda021, 
                   g_xmda_m.xmda022,g_xmda_m.xmda203,g_xmda_m.xmda027,g_xmda_m.xmda024,g_xmda_m.xmda002, 
                   g_xmda_m.xmda003,g_xmda_m.xmdaunit,g_xmda_m.xmda211,g_xmda_m.xmda210,g_xmda_m.xmda209, 
                   g_xmda_m.xmda208,g_xmda_m.xmda204,g_xmda_m.xmda205,g_xmda_m.xmda032,g_xmda_m.xmda071, 
                   g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda206,g_xmda_m.xmda207,g_xmda_m.xmda020, 
                   g_xmda_m.xmda036,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda009,g_xmda_m.xmda010, 
                   g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013, 
                   g_xmda_m.xmda035,g_xmda_m.xmda213,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042, 
                   g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt, 
                   g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt,g_xmda_m.xmda034, 
                   g_xmda_m.xmda006,g_xmda_m.xmda033,g_xmda_m.xmda017,g_xmda_m.xmda019,g_xmda_m.xmda018, 
                   g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047, 
                   g_xmda_m.xmda028,g_xmda_m.xmda043) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_xmda_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
                                                                                          
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
                                       
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL adbt500_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL adbt500_b_fill()
                  CALL adbt500_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
                                                                                          
               #end add-point
               
               #將遮罩欄位還原
               CALL adbt500_xmda_t_mask_restore('restore_mask_o')
               
               UPDATE xmda_t SET (xmdasite,xmdadocdt,xmdadocno,xmda001,xmda005,xmda202,xmda023,xmda004, 
                   xmda200,xmda201,xmdastus,xmda007,xmda008,xmda021,xmda022,xmda203,xmda027,xmda024, 
                   xmda002,xmda003,xmdaunit,xmda211,xmda210,xmda209,xmda208,xmda204,xmda205,xmda032, 
                   xmda071,xmda025,xmda026,xmda206,xmda207,xmda020,xmda036,xmda048,xmda049,xmda009,xmda010, 
                   xmda015,xmda016,xmda011,xmda012,xmda013,xmda035,xmda213,xmda039,xmda041,xmda042,xmdaownid, 
                   xmdaowndp,xmdacrtid,xmdacrtdp,xmdacrtdt,xmdamodid,xmdamoddt,xmdacnfid,xmdacnfdt,xmda034, 
                   xmda006,xmda033,xmda017,xmda019,xmda018,xmda030,xmda031,xmda045,xmda046,xmda047,xmda028, 
                   xmda043) = (g_xmda_m.xmdasite,g_xmda_m.xmdadocdt,g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
                   g_xmda_m.xmda005,g_xmda_m.xmda202,g_xmda_m.xmda023,g_xmda_m.xmda004,g_xmda_m.xmda200, 
                   g_xmda_m.xmda201,g_xmda_m.xmdastus,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda021, 
                   g_xmda_m.xmda022,g_xmda_m.xmda203,g_xmda_m.xmda027,g_xmda_m.xmda024,g_xmda_m.xmda002, 
                   g_xmda_m.xmda003,g_xmda_m.xmdaunit,g_xmda_m.xmda211,g_xmda_m.xmda210,g_xmda_m.xmda209, 
                   g_xmda_m.xmda208,g_xmda_m.xmda204,g_xmda_m.xmda205,g_xmda_m.xmda032,g_xmda_m.xmda071, 
                   g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda206,g_xmda_m.xmda207,g_xmda_m.xmda020, 
                   g_xmda_m.xmda036,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda009,g_xmda_m.xmda010, 
                   g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013, 
                   g_xmda_m.xmda035,g_xmda_m.xmda213,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042, 
                   g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt, 
                   g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt,g_xmda_m.xmda034, 
                   g_xmda_m.xmda006,g_xmda_m.xmda033,g_xmda_m.xmda017,g_xmda_m.xmda019,g_xmda_m.xmda018, 
                   g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047, 
                   g_xmda_m.xmda028,g_xmda_m.xmda043)
                WHERE xmdaent = g_enterprise AND xmdadocno = g_xmdadocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmda_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               #141219-00011#3 當修改單頭送貨客戶，會影響單身送貨網點
               # 當單身有多筆資料時，必須要全部重取合同，太耗效能
               #IF g_xmda_m.xmda022 <> g_xmda_m_t.xmda022 OR   #新值<>舊值
               #   (cl_null(g_xmda_m_t.xmda022) AND            #舊值 = NULL
               #   NOT cl_null(g_xmda_m.xmda022)) THEN         #新值 != NULL
               #   CALL adbt500_change_xmda022()
               #   CALL adbt500_b_fill()
               #END IF      
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL adbt500_xmda_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_xmda_m_t)
               LET g_log2 = util.JSON.stringify(g_xmda_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
                                                                                          
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="adbt500.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xmdc_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = FALSE, 
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmdc_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adbt500_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_xmdc_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            RETURN                                                         
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adbt500_cl USING g_enterprise,g_xmda_m.xmdadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adbt500_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE adbt500_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmdc_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmdc_d[l_ac].xmdcseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xmdc_d_t.* = g_xmdc_d[l_ac].*  #BACKUP
               LET g_xmdc_d_o.* = g_xmdc_d[l_ac].*  #BACKUP
               CALL adbt500_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
                                                                                          
               #end add-point  
               CALL adbt500_set_no_entry_b(l_cmd)
               IF NOT adbt500_lock_b("xmdc_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adbt500_bcl INTO g_xmdc_d[l_ac].xmdcsite,g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc027, 
                      g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002,g_xmdc_d[l_ac].xmdc004,g_xmdc_d[l_ac].xmdc005, 
                      g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc007,g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc009, 
                      g_xmdc_d[l_ac].xmdc024,g_xmdc_d[l_ac].xmdc012,g_xmdc_d[l_ac].xmdc013,g_xmdc_d[l_ac].xmdc045, 
                      g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc016, 
                      g_xmdc_d[l_ac].xmdc017,g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048, 
                      g_xmdc_d[l_ac].xmdc023,g_xmdc_d[l_ac].xmdc019,g_xmdc_d[l_ac].xmdc020,g_xmdc_d[l_ac].xmdc021, 
                      g_xmdc_d[l_ac].xmdc022,g_xmdc_d[l_ac].xmdc051,g_xmdc_d[l_ac].xmdcunit,g_xmdc_d[l_ac].xmdcorga, 
                      g_xmdc_d[l_ac].xmdc052,g_xmdc_d[l_ac].xmdc049,g_xmdc_d[l_ac].xmdc053,g_xmdc_d[l_ac].xmdc050 
 
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_xmdc_d_t.xmdcseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmdc_d_mask_o[l_ac].* =  g_xmdc_d[l_ac].*
                  CALL adbt500_xmdc_t_mask()
                  LET g_xmdc_d_mask_n[l_ac].* =  g_xmdc_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL adbt500_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
                                                                      
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmdc_d[l_ac].* TO NULL 
            INITIALIZE g_xmdc_d_t.* TO NULL 
            INITIALIZE g_xmdc_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_xmdc_d[l_ac].xmdc007 = "0"
      LET g_xmdc_d[l_ac].xmdc009 = "0"
      LET g_xmdc_d[l_ac].xmdc024 = "N"
      LET g_xmdc_d[l_ac].xmdc045 = "1"
      LET g_xmdc_d[l_ac].xmdc011 = "0"
      LET g_xmdc_d[l_ac].xmdc015 = "0"
      LET g_xmdc_d[l_ac].xmdc046 = "0"
      LET g_xmdc_d[l_ac].xmdc047 = "0"
      LET g_xmdc_d[l_ac].xmdc048 = "0"
      LET g_xmdc_d[l_ac].xmdc019 = "1"
      LET g_xmdc_d[l_ac].xmdc020 = "1"
      LET g_xmdc_d[l_ac].xmdc021 = "N"
      LET g_xmdc_d[l_ac].xmdc022 = "Y"
      LET g_xmdc_d[l_ac].xmdc052 = "Y"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_xmdc_d_t.* = g_xmdc_d[l_ac].*     #新輸入資料
            LET g_xmdc_d_o.* = g_xmdc_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adbt500_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
                                                                        
            #end add-point
            CALL adbt500_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmdc_d[li_reproduce_target].* = g_xmdc_d[li_reproduce].*
 
               LET g_xmdc_d[li_reproduce_target].xmdcseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
         
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            #檢查單身單價不可小於等於零
               
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmdc_t 
             WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno
 
               AND xmdcseq = g_xmdc_d[l_ac].xmdcseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
                                                                                          
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys[2] = g_xmdc_d[g_detail_idx].xmdcseq
               CALL adbt500_insert_b('xmdc_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
                                                                                          
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_xmdc_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdc_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adbt500_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
         
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
                                                                                          
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmda_m.xmdadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_xmdc_d_t.xmdcseq
 
            
               #刪除同層單身
               IF NOT adbt500_delete_b('xmdc_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adbt500_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT adbt500_key_delete_b(gs_keys,'xmdc_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adbt500_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
                                                                                          
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE adbt500_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
    
               #end add-point
               LET l_count = g_xmdc_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
                                                                        
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmdc_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdcsite
            #add-point:BEFORE FIELD xmdcsite name="input.b.page1.xmdcsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdcsite
            
            #add-point:AFTER FIELD xmdcsite name="input.a.page1.xmdcsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdcsite
            #add-point:ON CHANGE xmdcsite name="input.g.page1.xmdcsite"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.xmdcsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdcsite
            #add-point:ON ACTION controlp INFIELD xmdcsite name="input.c.page1.xmdcsite"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmdc_d[l_ac].* = g_xmdc_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE adbt500_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_xmdc_d[l_ac].xmdcseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_xmdc_d[l_ac].* = g_xmdc_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               #lori522612  150116  add ----------------------(S)
               #產品特徵為NULL時,給空白   
               IF cl_null(g_xmdc_d[l_ac].xmdc002) THEN
                  LET g_xmdc_d[l_ac].xmdc002 = ' '
               END IF
               #lori522612  150116  add ----------------------(E)                                                                                         
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL adbt500_xmdc_t_mask_restore('restore_mask_o')
      
               UPDATE xmdc_t SET (xmdcdocno,xmdcsite,xmdcseq,xmdc027,xmdc001,xmdc002,xmdc004,xmdc005, 
                   xmdc006,xmdc007,xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc010,xmdc011,xmdc015, 
                   xmdc016,xmdc017,xmdc046,xmdc047,xmdc048,xmdc023,xmdc019,xmdc020,xmdc021,xmdc022,xmdc051, 
                   xmdcunit,xmdcorga,xmdc052,xmdc049,xmdc053,xmdc050) = (g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcsite, 
                   g_xmdc_d[l_ac].xmdcseq,g_xmdc_d[l_ac].xmdc027,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002, 
                   g_xmdc_d[l_ac].xmdc004,g_xmdc_d[l_ac].xmdc005,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc007, 
                   g_xmdc_d[l_ac].xmdc008,g_xmdc_d[l_ac].xmdc009,g_xmdc_d[l_ac].xmdc024,g_xmdc_d[l_ac].xmdc012, 
                   g_xmdc_d[l_ac].xmdc013,g_xmdc_d[l_ac].xmdc045,g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011, 
                   g_xmdc_d[l_ac].xmdc015,g_xmdc_d[l_ac].xmdc016,g_xmdc_d[l_ac].xmdc017,g_xmdc_d[l_ac].xmdc046, 
                   g_xmdc_d[l_ac].xmdc047,g_xmdc_d[l_ac].xmdc048,g_xmdc_d[l_ac].xmdc023,g_xmdc_d[l_ac].xmdc019, 
                   g_xmdc_d[l_ac].xmdc020,g_xmdc_d[l_ac].xmdc021,g_xmdc_d[l_ac].xmdc022,g_xmdc_d[l_ac].xmdc051, 
                   g_xmdc_d[l_ac].xmdcunit,g_xmdc_d[l_ac].xmdcorga,g_xmdc_d[l_ac].xmdc052,g_xmdc_d[l_ac].xmdc049, 
                   g_xmdc_d[l_ac].xmdc053,g_xmdc_d[l_ac].xmdc050)
                WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno 
 
                  AND xmdcseq = g_xmdc_d_t.xmdcseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
                                                                                          
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmdc_d[l_ac].* = g_xmdc_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdc_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_xmdc_d[l_ac].* = g_xmdc_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdc_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys_bak[1] = g_xmdadocno_t
               LET gs_keys[2] = g_xmdc_d[g_detail_idx].xmdcseq
               LET gs_keys_bak[2] = g_xmdc_d_t.xmdcseq
               CALL adbt500_update_b('xmdc_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL adbt500_xmdc_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_xmdc_d[g_detail_idx].xmdcseq = g_xmdc_d_t.xmdcseq 
 
                  ) THEN
                  LET gs_keys[01] = g_xmda_m.xmdadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_xmdc_d_t.xmdcseq
 
                  CALL adbt500_key_update_b(gs_keys,'xmdc_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc_d_t)
               LET g_log2 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
                                                                                                                                     
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
                                                                        
            #end add-point
            CALL adbt500_unlock_b("xmdc_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
                                                                        
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmdc_d[li_reproduce_target].* = g_xmdc_d[li_reproduce].*
 
               LET g_xmdc_d[li_reproduce_target].xmdcseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmdc_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmdc_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_xmdc4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_adbt500_03
            LET g_action_choice="open_adbt500_03"
            IF cl_auth_chk_act("open_adbt500_03") THEN
               
               #add-point:ON ACTION open_adbt500_03 name="input.detail_input.page4.open_adbt500_03"
               IF l_ac > 0 THEN
                  IF NOT cl_null(g_xmdc_d[l_ac].xmdcseq) THEN
                     CALL s_transaction_begin()
                     CALL adbt500_03(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq,'','','','','','')
                     RETURNING l_xmja031,l_xmja032,l_xmja014

                     IF NOT cl_null(l_xmja031) AND NOT cl_null(l_xmja032) AND NOT cl_null(l_xmja014) THEN
                        CALL adbt500_update_xmja014(l_xmja014)
                        UPDATE xmja_t
                           SET xmja031 = l_xmja031,
                               xmja032 = l_xmja032
                         WHERE xmjaent = g_enterprise
                           AND xmjadocno = g_xmda_m.xmdadocno
                           AND xmjaseq = g_xmdc_d[l_ac].xmdcseq
                        IF NOT s_adbt500_gen_xmdc(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                           CALL s_transaction_end('N','0')
                        END IF
                        IF NOT s_adbt500_gen_xmdd(g_xmda_m.xmdadocno,g_xmdc_d[l_ac].xmdcseq) THEN
                           CALL s_transaction_end('N','0')
                        END IF
                        CALL s_transaction_end('Y','0')
                     ELSE
                        CALL s_transaction_end('N','0')
                     END IF 
                     CALL adbt500_b_fill()
                     #CALL adbt500_show()
                  END IF
               END IF
               #END add-point
            END IF
 
 
 
 
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body4.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmdc4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adbt500_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_xmdc4_d.getLength()
            #add-point:資料輸入前 name="input.body4.before_input"
            IF g_xmda_m.xmda007 = '5' THEN
               SELECT COUNT(*)
                 INTO l_cnt
                 FROM xmja_t
                WHERE xmjaent = g_enterprise
                  AND xmjadocno = g_xmda_m.xmdadocno
               IF l_cnt = 0 THEN
                  IF cl_ask_confirm('axm-00013') THEN
                     CALL s_transaction_begin()
                     CALL s_adbt500_gen_detail(g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmdadocno)
                        RETURNING l_success
                     IF l_success THEN
                        CALL s_transaction_end('Y','0')
                     ELSE
                        CALL s_transaction_end('N','0')
                        RETURN
                     END IF
                  END IF
               END IF
               
              #取得價格是否允許修改,修改容差率,價格超過容差率的處理方式,允許單價為0
               LET g_xmah003 = ''
               LET g_xmah006 = ''
               SELECT xmah003,xmah006
                 INTO g_xmah003,g_xmah006
                 FROM xmah_t       
                WHERE xmahent = g_enterprise
                  AND xmah001 = g_xmda_m.xmda017  
          
               CALL adbt500_b_fill()
               LET g_rec_b = g_xmdc4_d.getLength()
            END IF
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmdc4_d[l_ac].* TO NULL 
            INITIALIZE g_xmdc4_d_t.* TO NULL 
            INITIALIZE g_xmdc4_d_o.* TO NULL 
            #公用欄位給值(單身4)
            
            #自定義預設值(單身4)
                  LET g_xmdc4_d[l_ac].xmja001 = "1"
      LET g_xmdc4_d[l_ac].l_imaa116 = "0"
      LET g_xmdc4_d[l_ac].xmja030 = "N"
 
            #add-point:modify段before備份 name="input.body4.insert.before_bak"
            #160513-00027#1 20160520 add by beckxie---S
            IF NOT cl_null(g_xmda_m.xmda022)THEN
               LET g_xmdc4_d[l_ac].xmja025 = g_xmda_m.xmda022
            END IF
            #160513-00027#1 20160520 add by beckxie---E
            #end add-point
            LET g_xmdc4_d_t.* = g_xmdc4_d[l_ac].*     #新輸入資料
            LET g_xmdc4_d_o.* = g_xmdc4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adbt500_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body4.insert.after_set_entry_b"
            LET g_flag3 = TRUE
            CALL adbt500_set_no_required_b()
            CALL adbt500_set_required_b()
            #end add-point
            CALL adbt500_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmdc4_d[li_reproduce_target].* = g_xmdc4_d[li_reproduce].*
 
               LET g_xmdc4_d[li_reproduce_target].xmjaseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body4.before_insert"
            CALL s_transaction_begin()        
            LET g_xmdc4_d[l_ac].xmja001 = '1'
            LET g_xmdc4_d[l_ac].xmjasite = g_xmda_m.xmdasite
            LET g_xmdc4_d[l_ac].xmjasite_desc = g_xmda_m.xmdasite_desc
            #150403-00005#1 2015/04/15 By pomelo add(S)
            IF NOT adbt500_stce_chk('1') THEN
               LET g_xmdc4_d[l_ac].xmjasite = ''
               LET g_xmdc4_d[l_ac].xmjasite_desc = ''
            END IF
            #150403-00005#1 2015/04/15 By pomelo add(S)
            LET g_xmdc4_d[l_ac].xmjaunit = g_xmda_m.xmdasite
            LET g_xmdc4_d[l_ac].xmja004 =  ' '          
            LET g_xmdc4_d[l_ac].xmja007 = g_xmda_m.xmda012
            LET g_xmdc4_d[l_ac].xmja022 = 0
            LET g_xmdc4_d[l_ac].xmja005 = g_xmda_m.xmda204
            CALL adbt500_xmja005_ref()
   
            IF NOT cl_null(g_xmda_m.xmda022) THEN
               LET g_xmdc4_d[l_ac].xmja025 = g_xmda_m.xmda022
               LET g_xmdc4_d[l_ac].xmja026 = g_xmda_m.xmda025
               LET g_xmdc4_d[l_ac].xmja027 = g_xmda_m.xmda206
               LET g_xmdc4_d[l_ac].xmja025_desc = g_xmda_m.xmda022_desc
               CALL adbt500_xmja026_ref()
               CALL s_desc_get_dbad001_desc(g_xmdc4_d[l_ac].xmja027)
                  RETURNING g_xmdc4_d[l_ac].xmja027_desc
            END IF
            IF NOT cl_null(g_xmda_m.xmda025) THEN
               LET g_xmdc4_d[l_ac].xmja026 = g_xmda_m.xmda025
            END IF
            
            SELECT pmaa241,t1.dbaal003,
                   pmaa242,t2.dbaal003,
                   pmaa243,t3.dbaal003,
                   pmaa244,t4.dbaal003
              INTO g_xmdc4_d[l_ac].xmja040,g_xmdc4_d[l_ac].xmja040_desc,
                   g_xmdc4_d[l_ac].xmja039,g_xmdc4_d[l_ac].xmja039_desc,
                   g_xmdc4_d[l_ac].xmja038,g_xmdc4_d[l_ac].xmja038_desc,
                   g_xmdc4_d[l_ac].xmja037,g_xmdc4_d[l_ac].xmja037_desc
              FROM pmaa_t
              LEFT OUTER JOIN dbaal_t t1 ON t1.dbaalent = pmaaent AND t1.dbaal001 = pmaa241 AND t1.dbaal002 = g_dlang
              LEFT OUTER JOIN dbaal_t t2 ON t2.dbaalent = pmaaent AND t2.dbaal001 = pmaa242 AND t2.dbaal002 = g_dlang
              LEFT OUTER JOIN dbaal_t t3 ON t3.dbaalent = pmaaent AND t3.dbaal003 = pmaa243 AND t3.dbaal002 = g_dlang
              LEFT OUTER JOIN dbaal_t t4 ON t4.dbaalent = pmaaent AND t4.dbaal004 = pmaa244 AND t4.dbaal002 = g_dlang
             WHERE pmaaent = g_enterprise
               AND pmaa001 = g_xmdc4_d[l_ac].xmja025
            
            #150403-00005#1 2015/04/15 By pomelo mark(S)
            #IF NOT adbt500_stce_chk() THEN
            #   CALL FGL_SET_ARR_CURR(l_ac-1)
            #   CALL g_xmdc4_d.deleteElement(l_ac)
            #   NEXT FIELD xmjaseq
            #END IF
            #150403-00005#1 2015/04/15 By pomelo mark(E)
   
            #項次加1
            SELECT MAX(xmjaseq)+1 INTO g_xmdc4_d[l_ac].xmjaseq FROM xmja_t 
             WHERE xmjaent = g_enterprise AND xmjadocno = g_xmda_m.xmdadocno
               AND xmjaseq <= 9000        #160513-00033#4
            IF cl_null(g_xmdc4_d[l_ac].xmjaseq) THEN
               LET g_xmdc4_d[l_ac].xmjaseq = 1
            END IF
            
           #新增時，若稅別應用=1.正常稅率，則單身的稅別、稅率預設為單頭的稅別、稅率
            IF g_tax_app = '1' THEN
               LET g_xmdc4_d[l_ac].xmja006 = g_xmda_m.xmda011
               LET g_xmdc4_d[l_ac].xmja006_desc = g_xmda_m.xmda011_desc
               LET g_xmdc4_d[l_ac].xmja007 = g_xmda_m.xmda012
            END IF
            
            LET g_xmdc4_d_t.* = g_xmdc4_d[l_ac].*
            LET g_xmdc4_d_o.* = g_xmdc4_d[l_ac].*
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body4.before_row2"
            LET g_flag3 = FALSE
            LET l_delete =FALSE
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[4] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 4
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adbt500_cl USING g_enterprise,g_xmda_m.xmdadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adbt500_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE adbt500_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmdc4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmdc4_d[l_ac].xmjaseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmdc4_d_t.* = g_xmdc4_d[l_ac].*  #BACKUP
               LET g_xmdc4_d_o.* = g_xmdc4_d[l_ac].*  #BACKUP
               CALL adbt500_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body4.after_set_entry_b"
               CALL adbt500_set_no_required_b()
               CALL adbt500_set_required_b()
               #end add-point  
               CALL adbt500_set_no_entry_b(l_cmd)
               IF NOT adbt500_lock_b("xmja_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adbt500_bcl4 INTO g_xmdc4_d[l_ac].xmjaunit,g_xmdc4_d[l_ac].xmjaseq,g_xmdc4_d[l_ac].xmjasite, 
                      g_xmdc4_d[l_ac].xmja001,g_xmdc4_d[l_ac].xmja002,g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja033, 
                      g_xmdc4_d[l_ac].xmja004,g_xmdc4_d[l_ac].xmja005,g_xmdc4_d[l_ac].xmja006,g_xmdc4_d[l_ac].xmja007, 
                      g_xmdc4_d[l_ac].xmja011,g_xmdc4_d[l_ac].xmja012,g_xmdc4_d[l_ac].xmja013,g_xmdc4_d[l_ac].xmja014, 
                      g_xmdc4_d[l_ac].xmja015,g_xmdc4_d[l_ac].xmja016,g_xmdc4_d[l_ac].xmja017,g_xmdc4_d[l_ac].xmja018, 
                      g_xmdc4_d[l_ac].xmja008,g_xmdc4_d[l_ac].xmja009,g_xmdc4_d[l_ac].xmja010,g_xmdc4_d[l_ac].xmja022, 
                      g_xmdc4_d[l_ac].xmja019,g_xmdc4_d[l_ac].xmja020,g_xmdc4_d[l_ac].xmja021,g_xmdc4_d[l_ac].xmja024, 
                      g_xmdc4_d[l_ac].xmja025,g_xmdc4_d[l_ac].xmja026,g_xmdc4_d[l_ac].xmja027,g_xmdc4_d[l_ac].xmja028, 
                      g_xmdc4_d[l_ac].xmja029,g_xmdc4_d[l_ac].xmja030,g_xmdc4_d[l_ac].xmja031,g_xmdc4_d[l_ac].xmja032, 
                      g_xmdc4_d[l_ac].xmja040,g_xmdc4_d[l_ac].xmja039,g_xmdc4_d[l_ac].xmja038,g_xmdc4_d[l_ac].xmja037, 
                      g_xmdc4_d[l_ac].xmja034
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmdc4_d_mask_o[l_ac].* =  g_xmdc4_d[l_ac].*
                  CALL adbt500_xmja_t_mask()
                  LET g_xmdc4_d_mask_n[l_ac].* =  g_xmdc4_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL adbt500_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body4.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body4.after_delete_d"
               #刪除訂單多交期匯總檔
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM xmdf_t
                   WHERE xmdfent = g_enterprise 
                     AND xmdfdocno = g_xmda_m.xmdadocno 
                     AND xmdfseq = g_xmdc4_d_t.xmjaseq
                  IF l_cnt > 0 THEN                     
                     DELETE FROM xmdf_t 
                      WHERE xmdfent = g_enterprise 
                        AND xmdfdocno = g_xmda_m.xmdadocno 
                        AND xmdfseq = g_xmdc4_d_t.xmjaseq
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "xmdf_t"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                     END IF           
                  END IF  
                  #刪除交易稅明細
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM xrcd_t
                   WHERE xrcdent = g_enterprise 
                     AND xrcddocno = g_xmda_m.xmdadocno 
                     AND xrcdseq = g_xmdc4_d_t.xmjaseq
                  IF l_cnt > 0 THEN                     
                     DELETE FROM xrcd_t 
                      WHERE xrcdent = g_enterprise 
                        AND xrcddocno = g_xmda_m.xmdadocno 
                        AND xrcdseq = g_xmdc4_d_t.xmjaseq
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "xrcd_t"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                     END IF           
                  END IF 
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body4.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前 name="input.body4.b_delete"
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM xmja_t
                WHERE xmjaent = g_enterprise AND xmjadocno = g_xmda_m.xmdadocno AND xmja001 = '2'
               IF l_cnt > 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = 'adb-00232' #单身存在赠品资料，不允许删除 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmda_m.xmdadocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmdc4_d_t.xmjaseq
            
               #刪除同層單身
               IF NOT adbt500_delete_b('xmja_t',gs_keys,"'4'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adbt500_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT adbt500_key_delete_b(gs_keys,'xmja_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adbt500_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身4刪除中 name="input.body4.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE adbt500_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身4刪除後 name="input.body4.a_delete"
                  DELETE FROM xmdd_t 
                   WHERE xmddent = g_enterprise 
                     AND xmdddocno = g_xmda_m.xmdadocno 
                     AND xmddseq = g_xmdc4_d_t.xmjaseq
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "xmdd_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                     RETURN
                     CANCEL DELETE
                  END IF 
                  #刪除訂單多交期匯總檔
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM xmdf_t
                   WHERE xmdfent = g_enterprise 
                     AND xmdfdocno = g_xmda_m.xmdadocno 
                     AND xmdfseq = g_xmdc4_d_t.xmjaseq
                  IF l_cnt > 0 THEN                     
                     DELETE FROM xmdf_t 
                      WHERE xmdfent = g_enterprise 
                        AND xmdfdocno = g_xmda_m.xmdadocno 
                        AND xmdfseq = g_xmdc4_d_t.xmjaseq
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "xmdf_t"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        CALL s_transaction_end('N','0')
                        RETURN
                        CANCEL DELETE
                     END IF           
                  END IF  
                  #刪除交易稅明細
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM xrcd_t
                   WHERE xrcdent = g_enterprise 
                     AND xrcddocno = g_xmda_m.xmdadocno 
                     AND xrcdseq = g_xmdc4_d_t.xmjaseq
                  IF l_cnt > 0 THEN                     
                     DELETE FROM xrcd_t 
                      WHERE xrcdent = g_enterprise 
                        AND xrcddocno = g_xmda_m.xmdadocno 
                        AND xrcdseq = g_xmdc4_d_t.xmjaseq
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "xrcd_t"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        CALL s_transaction_end('N','0')
                        RETURN
                        CANCEL DELETE
                     END IF           
                  END IF 
                  #刪除訂單單身明細
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM xmdc_t
                   WHERE xmdcent = g_enterprise 
                     AND xmdcdocno = g_xmda_m.xmdadocno 
                     AND xmdcseq = g_xmdc4_d_t.xmjaseq
                  IF l_cnt > 0 THEN                     
                     DELETE FROM xmdc_t 
                      WHERE xmdcent = g_enterprise 
                        AND xmdcdocno = g_xmda_m.xmdadocno 
                        AND xmdcseq = g_xmdc4_d_t.xmjaseq
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "xmdc_t"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        CALL s_transaction_end('N','0')
                        RETURN
                        CANCEL DELETE
                     END IF           
                  END IF
                  LET l_delete =TRUE
               #end add-point
               LET l_count = g_xmdc_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body4.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmdc4_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前 name="input.body4.b_a_insert"
            LET g_flag3 = FALSE
#            #檢查單身交易價不可小於等於零
#            IF g_xmah006 = 'N' AND g_xmdc4_d[l_ac].xmja010 <= 0 THEN
#               IF g_xmda_m.xmda007 <> '5' THEN
#                  INITIALIZE g_errparam TO NULL
#                  LET g_errparam.code = 'sub-00543'
#                  LET g_errparam.extend = g_xmda_m.xmdadocno
#                  LET g_errparam.popup = TRUE
#                  CALL cl_err()
#                  
#                  CANCEL INSERT
#               END IF
#            END IF 
#            #檢查單身稅別不可空白
#            IF cl_null(g_xmdc4_d[l_ac].xmja006) THEN
#               INITIALIZE g_errparam TO NULL
#               LET g_errparam.code = 'axm-00231'
#               LET g_errparam.extend = g_xmda_m.xmdadocno
#               LET g_errparam.popup = TRUE
#               CALL cl_err()
#
#               CANCEL INSERT
#            END IF
#            #料件有使用產品特徴則不可空白                                
#            IF NOT cl_null(g_imaa005) THEN
#               IF cl_null(g_xmdc4_d[l_ac].xmja004) THEN
#                  INITIALIZE g_errparam TO NULL
#                  LET g_errparam.code = 'sub-00280'
#                  LET g_errparam.extend = g_xmda_m.xmdadocno
#                  LET g_errparam.popup = TRUE
#                  CALL cl_err()
#                  NEXT FIELD xmja004              
#               END IF
#            ELSE 
#               IF cl_null(g_xmdc4_d[l_ac].xmja004) THEN
#                  LET g_xmdc4_d[l_ac].xmja004 = ' ' 
#               END IF          
#            END IF             
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmja_t 
             WHERE xmjaent = g_enterprise AND xmjadocno = g_xmda_m.xmdadocno
               AND xmjaseq = g_xmdc4_d[l_ac].xmjaseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前 name="input.body4.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys[2] = g_xmdc4_d[g_detail_idx].xmjaseq
               CALL adbt500_insert_b('xmja_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4 name="input.body4.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_xmdc_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmja_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adbt500_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body4.after_insert"
#               #若单身存在返物资料，则不重取促销价
#               LET l_cnt = 0
#               SELECT COUNT(*) INTO l_cnt
#                 FROM xmja_t
#                WHERE xmjaent = g_enterprise
#                  AND xmjadocno = g_xmda_m.xmdadocno
#                  AND xmja001 = '2'
#               IF l_cnt = 0 THEN
#                  CALL s_get_price_adb('1',g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt,g_xmdc4_d[l_ac].xmjaseq,g_xmda_m.xmda004,g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja017,g_xmdc4_d[l_ac].xmja018,g_xmda_m.xmda015,g_xmdc4_d[l_ac].xmja006,'2')
#                     RETURNING l_success,l_xmja008,l_xmja009,l_xmja010,l_xmja022  
#               END IF
               LET l_success = TRUE
               
               CALL adbt500_gen_xmdf(1, g_xmdc4_d[l_ac].xmjaseq, g_xmdc4_d_t.xmjaseq,g_xmdc4_d[l_ac].xmjasite,
                                     g_xmdc4_d[l_ac].xmja003, g_xmdc4_d[l_ac].xmja004,g_xmdc4_d[l_ac].xmja014,
                                     g_xmdc4_d[l_ac].xmja018, g_xmdc4_d[l_ac].xmja025,g_xmdc4_d[l_ac].xmja030,
                                     g_xmdc4_d[l_ac].xmja031, g_xmdc4_d[l_ac].xmja032,g_xmdc4_d[l_ac].xmja037,
                                     g_xmdc4_d[l_ac].xmja038, g_xmdc4_d[l_ac].xmja039,g_xmdc4_d[l_ac].xmja040) RETURNING l_success
               
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "xmdf_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL INSERT 
               END IF
               #產生訂單單身
               LET l_success = TRUE
               CALL s_adbt500_gen_xmdc(g_xmda_m.xmdadocno,g_xmdc4_d[l_ac].xmjaseq) RETURNING l_success
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "xmdc_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
       
                  CALL s_transaction_end('N','0')                    
                  CANCEL INSERT   
               END IF
               #產生交期明細
               LET l_success = TRUE
               CALL s_adbt500_gen_xmdd(g_xmda_m.xmdadocno,g_xmdc4_d[l_ac].xmjaseq) RETURNING l_success
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "xmdd_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
       
                  CALL s_transaction_end('N','0')                    
                  CANCEL INSERT   
               END IF
               #產生產品特徵開窗的值到資料庫
               IF g_inam.getLength() > 1 THEN
                  LET l_success = TRUE
                  CALL adbt500_feature() RETURNING l_success
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                     CANCEL INSERT
                  END IF
               END IF 
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmdc4_d[l_ac].* = g_xmdc4_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE adbt500_bcl4
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_xmdc4_d[l_ac].* = g_xmdc4_d_t.*
            ELSE
               #add-point:單身page4修改前 name="input.body4.b_update"
               IF cl_null(g_xmdc4_d[l_ac].xmja004) THEN
                  LET g_xmdc4_d[l_ac].xmja004 = ' ' 
               END IF          
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               #將遮罩欄位還原
               CALL adbt500_xmja_t_mask_restore('restore_mask_o')
                              
               UPDATE xmja_t SET (xmjadocno,xmjaunit,xmjaseq,xmjasite,xmja001,xmja002,xmja003,xmja033, 
                   xmja004,xmja005,xmja006,xmja007,xmja011,xmja012,xmja013,xmja014,xmja015,xmja016,xmja017, 
                   xmja018,xmja008,xmja009,xmja010,xmja022,xmja019,xmja020,xmja021,xmja024,xmja025,xmja026, 
                   xmja027,xmja028,xmja029,xmja030,xmja031,xmja032,xmja040,xmja039,xmja038,xmja037,xmja034) = (g_xmda_m.xmdadocno, 
                   g_xmdc4_d[l_ac].xmjaunit,g_xmdc4_d[l_ac].xmjaseq,g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja001, 
                   g_xmdc4_d[l_ac].xmja002,g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja033,g_xmdc4_d[l_ac].xmja004, 
                   g_xmdc4_d[l_ac].xmja005,g_xmdc4_d[l_ac].xmja006,g_xmdc4_d[l_ac].xmja007,g_xmdc4_d[l_ac].xmja011, 
                   g_xmdc4_d[l_ac].xmja012,g_xmdc4_d[l_ac].xmja013,g_xmdc4_d[l_ac].xmja014,g_xmdc4_d[l_ac].xmja015, 
                   g_xmdc4_d[l_ac].xmja016,g_xmdc4_d[l_ac].xmja017,g_xmdc4_d[l_ac].xmja018,g_xmdc4_d[l_ac].xmja008, 
                   g_xmdc4_d[l_ac].xmja009,g_xmdc4_d[l_ac].xmja010,g_xmdc4_d[l_ac].xmja022,g_xmdc4_d[l_ac].xmja019, 
                   g_xmdc4_d[l_ac].xmja020,g_xmdc4_d[l_ac].xmja021,g_xmdc4_d[l_ac].xmja024,g_xmdc4_d[l_ac].xmja025, 
                   g_xmdc4_d[l_ac].xmja026,g_xmdc4_d[l_ac].xmja027,g_xmdc4_d[l_ac].xmja028,g_xmdc4_d[l_ac].xmja029, 
                   g_xmdc4_d[l_ac].xmja030,g_xmdc4_d[l_ac].xmja031,g_xmdc4_d[l_ac].xmja032,g_xmdc4_d[l_ac].xmja040, 
                   g_xmdc4_d[l_ac].xmja039,g_xmdc4_d[l_ac].xmja038,g_xmdc4_d[l_ac].xmja037,g_xmdc4_d[l_ac].xmja034)  
                   #自訂欄位頁簽
                WHERE xmjaent = g_enterprise AND xmjadocno = g_xmda_m.xmdadocno
                  AND xmjaseq = g_xmdc4_d_t.xmjaseq #項次 
                  
               #add-point:單身page4修改中 name="input.body4.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmdc4_d[l_ac].* = g_xmdc4_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmja_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_xmdc4_d[l_ac].* = g_xmdc4_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmja_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys_bak[1] = g_xmdadocno_t
               LET gs_keys[2] = g_xmdc4_d[g_detail_idx].xmjaseq
               LET gs_keys_bak[2] = g_xmdc4_d_t.xmjaseq
               CALL adbt500_update_b('xmja_t',gs_keys,gs_keys_bak,"'4'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL adbt500_xmja_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_xmdc4_d[g_detail_idx].xmjaseq = g_xmdc4_d_t.xmjaseq 
                  ) THEN
                  LET gs_keys[01] = g_xmda_m.xmdadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmdc4_d_t.xmjaseq
                  CALL adbt500_key_update_b(gs_keys,'xmja_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc4_d_t)
               LET g_log2 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc4_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後 name="input.body4.a_update"
#               #若单身存在返物资料，则不重取促销价
#               LET l_cnt = 0
#               SELECT COUNT(*) INTO l_cnt
#                 FROM xmja_t
#                WHERE xmjaent = g_enterprise
#                  AND xmjadocno = g_xmda_m.xmdadocno
#                  AND xmja001 = '2'
#               IF l_cnt = 0 THEN
#                  CALL s_get_price_adb('1',g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt,g_xmdc4_d[l_ac].xmjaseq,g_xmda_m.xmda004,g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja017,g_xmdc4_d[l_ac].xmja018,g_xmda_m.xmda015,g_xmdc4_d[l_ac].xmja006,'2')
#                     RETURNING l_success,l_xmja008,l_xmja009,l_xmja010,l_xmja022  
#               END IF
               CALL s_adbt500_gen_xmdc(g_xmda_m.xmdadocno,g_xmdc4_d[l_ac].xmjaseq) RETURNING l_success
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "xmdc_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_xmdc4_d[l_ac].* = g_xmdc4_d_t.*
                  CALL s_transaction_end('N','0')
               END IF
               IF NOT s_adbt500_gen_xmdd(g_xmda_m.xmdadocno,g_xmdc4_d[l_ac].xmjaseq) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "xmdd_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_xmdc4_d[l_ac].* = g_xmdc4_d_t.*
                  CALL s_transaction_end('N','0')
               END IF 
               
               CALL adbt500_gen_xmdf(2, g_xmdc4_d[l_ac].xmjaseq, g_xmdc4_d_t.xmjaseq, g_xmdc4_d[l_ac].xmjasite,
                                     g_xmdc4_d[l_ac].xmja003, g_xmdc4_d[l_ac].xmja004,g_xmdc4_d[l_ac].xmja014,
                                     g_xmdc4_d[l_ac].xmja018, g_xmdc4_d[l_ac].xmja025,g_xmdc4_d[l_ac].xmja030,
                                     g_xmdc4_d[l_ac].xmja031, g_xmdc4_d[l_ac].xmja032,g_xmdc4_d[l_ac].xmja037,
                                     g_xmdc4_d[l_ac].xmja038, g_xmdc4_d[l_ac].xmja039,g_xmdc4_d[l_ac].xmja040) RETURNING l_success
               
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "xmdf_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_xmdc4_d[l_ac].* = g_xmdc4_d_t.*
                  CALL s_transaction_end('N','0')
               END IF 
               CALL adbt500_b_fill()
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmjaseq
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc4_d[l_ac].xmjaseq,"0.000","0","9001","0","azz-00087",1) THEN 
 
               NEXT FIELD xmjaseq
            END IF 
 
 
 
            #add-point:AFTER FIELD xmjaseq name="input.a.page4.xmjaseq"
            #此段落由子樣板a05產生
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc4_d[g_detail_idx].xmjaseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc4_d[g_detail_idx].xmjaseq != g_xmdc4_d_t.xmjaseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmja_t WHERE "||"xmjaent = '" ||g_enterprise|| "' AND "||"xmjadocno = '"||g_xmda_m.xmdadocno ||"' AND "|| "xmjaseq = '"||g_xmdc4_d[g_detail_idx].xmjaseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmjaseq
            #add-point:BEFORE FIELD xmjaseq name="input.b.page4.xmjaseq"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmjaseq
            #add-point:ON CHANGE xmjaseq name="input.g.page4.xmjaseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmjasite
            
            #add-point:AFTER FIELD xmjasite name="input.a.page4.xmjasite"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmjasite) THEN
                IF g_xmdc4_d[l_ac].xmjasite != g_xmdc4_d_o.xmjasite OR g_xmdc4_d_o.xmjasite IS NULL THEN 
                   CALL s_aooi500_chk(g_prog,'xmjasite',g_xmdc4_d[l_ac].xmjasite,g_xmda_m.xmdasite) RETURNING l_success,l_errno
                   IF NOT l_success THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = '' 
                      LET g_errparam.code   = l_errno 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
                      
                      LET g_xmdc4_d[l_ac].xmjasite = g_xmdc4_d_o.xmjasite
                      CALL s_desc_get_department_desc(g_xmdc4_d[l_ac].xmjasite) RETURNING g_xmdc4_d[l_ac].xmjasite_desc
                      NEXT FIELD CURRENT
                   END IF
                END IF
                
                #當訂單性質 = 3.簽收訂單 且 合同經營方式 = 13.寄銷 報錯
                IF NOT adbt500_stce_chk('2') THEN
                   LET g_xmdc4_d[l_ac].xmjasite = g_xmdc4_d_o.xmjasite
                   CALL s_desc_get_department_desc(g_xmdc4_d[l_ac].xmjasite)
                      RETURNING g_xmdc4_d[l_ac].xmjasite_desc
                   NEXT FIELD xmjasite
                END IF
            END IF
            
            LET g_xmdc4_d_o.xmjasite = g_xmdc4_d[l_ac].xmjasite
            CALL s_desc_get_department_desc(g_xmdc4_d[l_ac].xmjasite) RETURNING g_xmdc4_d[l_ac].xmjasite_desc
            LET g_flag3 = FALSE
            CALL adbt500_set_entry_b(l_cmd)
            CALL adbt500_set_no_entry_b(l_cmd)
            #170116-00018#3 -s 20170117 mark by 08172
            #add by geza 20161029 #161027-00055#2(S)
#            IF g_xmdc4_d[l_ac].xmjasite IS NOT NULL AND g_xmdc4_d[l_ac].xmja003 IS NOT NULL  THEN
#               SELECT rtdx029 INTO g_xmdc4_d[l_ac].rtdx029
#                 FROM rtdx_t 
#                WHERE rtdxent = g_enterprise
#                  AND rtdx001 = g_xmdc4_d[l_ac].xmja003
#                  AND rtdxsite = g_xmdc4_d[l_ac].xmjasite
#                  AND rtdxstus = 'Y'
#               SELECT ooefl003 INTO g_xmdc4_d[l_ac].rtdx029_desc
#                 FROM ooefl_t 
#                WHERE ooeflent = g_enterprise
#                  AND ooefl001 = g_xmdc4_d[l_ac].rtdx029         
#                  AND ooefl002 = g_lang          
#            END IF 
#            IF g_xmdc4_d[l_ac].rtdx029 IS NOT NULL AND g_xmdc4_d[l_ac].xmja003 IS NOT NULL AND g_xmdc4_d[l_ac].xmja004 IS NOT NULL THEN                   
#               #CALL adbt500_xmja041_count(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].rtdx029,g_xmdc4_d[l_ac].xmja004) RETURNING g_xmdc4_d[l_ac].inag009  #mark by geza 20161209 161124-00039#1
#               CALL adbt500_xmja041_count(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].rtdx029,g_xmdc4_d[l_ac].xmja004,'',g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja040,g_xmdc4_d[l_ac].xmja039, g_xmdc4_d[l_ac].xmja038,g_xmdc4_d[l_ac].xmja037) RETURNING g_xmdc4_d[l_ac].inag009   #add by geza 20161209 161124-00039#1             
#            ELSE
#               LET g_xmdc4_d[l_ac].inag009 = 0           
#            END IF   
            #add by geza 20161029 #161027-00055#2(E)
            #170116-00018#3 -e 20170117 mark by 08172
            #170116-00018#3 -s 20170117 add by 08172
#            IF g_xmdc4_d[l_ac].xmja003 IS NOT NULL AND g_xmdc4_d[l_ac].xmja004 IS NOT NULL AND  g_xmdc3_d[l_ac].xmdd004 IS NOT NULL
#               AND g_xmdc3_d[l_ac].xmddunit IS NOT NULL AND g_xmdc3_d[l_ac].xmdd213 IS NOT NULL THEN
#               CALL adbt500_inas011_count(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja004,g_xmdc3_d[l_ac].xmdd004,g_xmdc3_d[l_ac].xmddunit,g_xmdc3_d[l_ac].xmdd213)   
#                    RETURNING g_xmdc4_d[l_ac].inag009              
#            ELSE 
#               LET g_xmdc4_d[l_ac].inag009 = ''
#            END IF
            #170116-00018#3 -e 20170117 add by 08172
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmjasite
            #add-point:BEFORE FIELD xmjasite name="input.b.page4.xmjasite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmjasite
            #add-point:ON CHANGE xmjasite name="input.g.page4.xmjasite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja001
            #add-point:BEFORE FIELD xmja001 name="input.b.page4.xmja001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja001
            
            #add-point:AFTER FIELD xmja001 name="input.a.page4.xmja001"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja001
            #add-point:ON CHANGE xmja001 name="input.g.page4.xmja001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja002
            
            #add-point:AFTER FIELD xmja002 name="input.a.page4.xmja002"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja002) THEN
               IF g_xmdc4_d[l_ac].xmja002 != g_xmdc4_d_o.xmja002 OR g_xmdc4_d_o.xmja002 IS NULL THEN             
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdc4_d[l_ac].xmja002
                  IF NOT cl_chk_exist("v_imay003_1") THEN
                     LET g_xmdc4_d[l_ac].xmja002 = g_xmdc4_d_o.xmja002
                     NEXT FIELD CURRENT
                  END IF
                  
                  SELECT imay001,imay004
                    INTO g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja011
                    FROM imay_t
                   WHERE imayent = g_enterprise
                     AND imay003 = g_xmdc4_d[l_ac].xmja002
                     
                  IF NOT cl_null(g_xmdc4_d[l_ac].xmja003) THEN
                     INITIALIZE g_chkparam.* TO NULL
                     LET g_chkparam.arg1 = 'ALL'
                     LET g_chkparam.arg2 = g_xmdc4_d[l_ac].xmja003
                     IF cl_chk_exist("v_imaf001_3") THEN
                        IF NOT adbt500_xmja003_chk(g_xmdc4_d[l_ac].xmja003) THEN
                           LET g_xmdc4_d[l_ac].xmja002 = g_xmdc4_d_o.xmja002
                           LET g_xmdc4_d[l_ac].xmja011 = g_xmdc4_d_o.xmja011
                           LET g_xmdc4_d[l_ac].xmja003 = g_xmdc4_d_o.xmja003
                           CALL s_desc_get_item_desc(g_xmdc4_d[l_ac].xmja003)RETURNING g_xmdc4_d[l_ac].xmja003_desc,g_xmdc4_d[l_ac].xmja003_desc_desc
                           NEXT FIELD CURRENT
                        END IF
                        CALL adbt500_xmja003_default()                        
                     ELSE                  
                        LET g_xmdc4_d[l_ac].xmja011 = g_xmdc4_d_o.xmja011 
                        LET g_xmdc4_d[l_ac].xmja003 = g_xmdc4_d_o.xmja003
                        CALL s_desc_get_item_desc(g_xmdc4_d[l_ac].xmja003)RETURNING g_xmdc4_d[l_ac].xmja003_desc,g_xmdc4_d[l_ac].xmja003_desc_desc
                        LET g_xmdc4_d[l_ac].xmja002 = g_xmdc4_d_o.xmja002
                        NEXT FIELD CURRENT
                     END IF
                     
                     LET g_xmdc4_d[l_ac].xmja004 = ''
                     IF g_xmdc4_d[l_ac].xmja004 = ' ' OR cl_null(g_xmdc4_d[l_ac].xmja004) THEN
                        LET g_xmdc4_d[l_ac].xmja033 = ''
                        SELECT pmao004 INTO g_xmdc4_d[l_ac].xmja033 
                          FROM pmao_t
                         WHERE pmaoent = g_enterprise
                           AND pmao001 = g_xmda_m.xmda004
                           AND pmao002 = g_xmdc4_d[l_ac].xmja003
                           AND pmao000 = '2'    #161221-00064#24 add 
                           AND pmao007 = 'Y'
                     END IF
                     CALL adbt500_get_price()
                  END IF

                  #160602-00025#1 160612 by lori add---(S)
                  IF cl_null(g_xmdc4_d[l_ac].xmja011) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "adb-00091"
                     LET g_errparam.extend = g_xmdc4_d[l_ac].xmja003
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     
                     LET g_xmdc4_d[l_ac].xmja002 = g_xmdc4_d_o.xmja002
                     LET g_xmdc4_d[l_ac].xmja003 = g_xmdc4_d_o.xmja003
                     CALL s_desc_get_item_desc(g_xmdc4_d[l_ac].xmja003)RETURNING g_xmdc4_d[l_ac].xmja003_desc,g_xmdc4_d[l_ac].xmja003_desc_desc
                     NEXT FIELD CURRENT                            
                  END IF                         
                  #160602-00025#1 160612 by lori add---(E) 
                     
                  CALL s_desc_get_item_desc(g_xmdc4_d[l_ac].xmja003)RETURNING g_xmdc4_d[l_ac].xmja003_desc,g_xmdc4_d[l_ac].xmja003_desc_desc
                  CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja011) RETURNING g_xmdc4_d[l_ac].xmja011_desc
               END IF
            END IF 
            LET g_xmdc4_d_o.xmja002 = g_xmdc4_d[l_ac].xmja002
            LET g_xmdc4_d_o.xmja003 = g_xmdc4_d[l_ac].xmja003
            LET g_xmdc4_d_o.xmja011 = g_xmdc4_d[l_ac].xmja011
            CALL adbt500_set_entry_b(l_cmd)
            CALL adbt500_set_no_required_b()
            CALL adbt500_set_required_b()
            CALL adbt500_set_no_entry_b(l_cmd)
            #161017-00029#3 16/10/18 by 08742 -S
            SELECT imay019 INTO  g_xmdc4_d[l_ac].xmja004
              FROM imay_t
             WHERE imayent = g_enterprise
               AND imay003 = g_xmdc4_d[l_ac].xmja002
            #161017-00029#3 16/10/18 by 08742 -E
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja002
            #add-point:BEFORE FIELD xmja002 name="input.b.page4.xmja002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja002
            #add-point:ON CHANGE xmja002 name="input.g.page4.xmja002"
 
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja003
            
            #add-point:AFTER FIELD xmja003 name="input.a.page4.xmja003"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja003) THEN 
               IF g_xmdc4_d[l_ac].xmja003 != g_xmdc4_d_o.xmja003 OR g_xmdc4_d_o.xmja003 IS NULL THEN 
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  
                  IF NOT adbt500_xmja003_chk(g_xmdc4_d[l_ac].xmja003) THEN
                     #檢查失敗時後續處理
                     LET g_xmdc4_d[l_ac].xmja003 = g_xmdc4_d_o.xmja003
                     CALL s_desc_get_item_desc(g_xmdc4_d[l_ac].xmja003)RETURNING g_xmdc4_d[l_ac].xmja003_desc,g_xmdc4_d[l_ac].xmja003_desc_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF cl_null(g_xmdc4_d[l_ac].xmja002) THEN
                     SELECT imaa014
                       INTO g_xmdc4_d[l_ac].xmja002
                       FROM imaa_t
                      WHERE imaaent = g_enterprise
                        AND imaa001 = g_xmdc4_d[l_ac].xmja003
                     
                     IF NOT cl_null(g_xmdc4_d[l_ac].xmja002) THEN
                        SELECT imay004
                          INTO g_xmdc4_d[l_ac].xmja011
                          FROM imay_t
                         WHERE imayent = g_enterprise
                           AND imay003 = g_xmdc4_d[l_ac].xmja002

                         #160602-00025#1 160612 by lori add---(S)
                         IF cl_null(g_xmdc4_d[l_ac].xmja011) THEN
                            INITIALIZE g_errparam TO NULL
                            LET g_errparam.code = "adb-00091"
                            LET g_errparam.extend = g_xmdc4_d[l_ac].xmja003
                            LET g_errparam.popup = TRUE
                            CALL cl_err()
                            
                            LET g_xmdc4_d[l_ac].xmja002 = g_xmdc4_d_o.xmja002
                            LET g_xmdc4_d[l_ac].xmja003 = g_xmdc4_d_o.xmja003
                            CALL s_desc_get_item_desc(g_xmdc4_d[l_ac].xmja003)RETURNING g_xmdc4_d[l_ac].xmja003_desc,g_xmdc4_d[l_ac].xmja003_desc_desc
                            NEXT FIELD CURRENT                            
                         END IF                         
                         #160602-00025#1 160612 by lori add---(E) 
                         CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja011) RETURNING g_xmdc4_d[l_ac].xmja011_desc
                      END IF
                  END IF
                  
                  CALL adbt500_xmja003_default() 
                  #160602-00025#1 160612 by lori add---(S)
                  IF cl_null(g_xmdc4_d[l_ac].xmja011) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "adb-00091"
                     LET g_errparam.extend = g_xmdc4_d[l_ac].xmja003
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     
                     LET g_xmdc4_d[l_ac].xmja002 = g_xmdc4_d_o.xmja002
                     LET g_xmdc4_d[l_ac].xmja003 = g_xmdc4_d_o.xmja003
                     CALL s_desc_get_item_desc(g_xmdc4_d[l_ac].xmja003)RETURNING g_xmdc4_d[l_ac].xmja003_desc,g_xmdc4_d[l_ac].xmja003_desc_desc
                     NEXT FIELD CURRENT                            
                  END IF                         
                  #160602-00025#1 160612 by lori add---(E) 


                  CALL adbt500_get_price()
                  LET g_xmdc4_d[l_ac].xmja004 = ''
                  LET g_imaa005 = ''
                  CALL s_adb_get_imaa005(g_enterprise,g_xmdc4_d[l_ac].xmja003) RETURNING g_imaa005 
                  #料件有使用產品特徵功能時此欄位才可輸入，不可輸入給予空白      
                  IF cl_null(g_imaa005) THEN
                     LET g_xmdc4_d[l_ac].xmja004 = ' '
                  END IF
                  IF g_xmdc4_d[l_ac].xmja004 = ' ' OR cl_null(g_xmdc4_d[l_ac].xmja004) THEN
                     LET g_xmdc4_d[l_ac].xmja033 = ''
                     SELECT pmao004 INTO g_xmdc4_d[l_ac].xmja033 
                       FROM pmao_t
                      WHERE pmaoent = g_enterprise
                        AND pmao001 = g_xmda_m.xmda004
                        AND pmao002 = g_xmdc4_d[l_ac].xmja003
                        AND pmao000 = '2'    #161221-00064#24 add 
                        AND pmao007 = 'Y'
                  END IF
               END IF
            END IF
            LET g_xmdc4_d_o.xmja003 = g_xmdc4_d[l_ac].xmja003  
            LET g_xmdc4_d_o.xmja002 = g_xmdc4_d[l_ac].xmja002
            LET g_xmdc4_d_o.xmja011 = g_xmdc4_d[l_ac].xmja011             
            CALL s_desc_get_item_desc(g_xmdc4_d[l_ac].xmja003)RETURNING g_xmdc4_d[l_ac].xmja003_desc,g_xmdc4_d[l_ac].xmja003_desc_desc
            CALL adbt500_set_entry_b(l_cmd)
            CALL adbt500_set_no_required_b()
            CALL adbt500_set_required_b()
            CALL adbt500_set_no_entry_b(l_cmd)
            #170116-00018#3 -s 20170117 mark by 08172
            #add by geza 20161029 #161027-00055#2(S)
#            IF g_xmdc4_d[l_ac].xmjasite IS NOT NULL AND g_xmdc4_d[l_ac].xmja003 IS NOT NULL  THEN
#               SELECT rtdx029 INTO g_xmdc4_d[l_ac].rtdx029
#                 FROM rtdx_t 
#                WHERE rtdxent = g_enterprise
#                  AND rtdx001 = g_xmdc4_d[l_ac].xmja003
#                  AND rtdxsite = g_xmdc4_d[l_ac].xmjasite
#                  AND rtdxstus = 'Y'
#               SELECT ooefl003 INTO g_xmdc4_d[l_ac].rtdx029_desc
#                 FROM ooefl_t 
#                WHERE ooeflent = g_enterprise
#                  AND ooefl001 = g_xmdc4_d[l_ac].rtdx029         
#                  AND ooefl002 = g_lang          
#            END IF 
#            IF g_xmdc4_d[l_ac].rtdx029 IS NOT NULL AND g_xmdc4_d[l_ac].xmja003 IS NOT NULL AND g_xmdc4_d[l_ac].xmja004 IS NOT NULL THEN                   
#               #CALL adbt500_xmja041_count(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].rtdx029,g_xmdc4_d[l_ac].xmja004) RETURNING g_xmdc4_d[l_ac].inag009  #mark by geza 20161209 161124-00039#1
#               CALL adbt500_xmja041_count(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].rtdx029,g_xmdc4_d[l_ac].xmja004,'',g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja040,g_xmdc4_d[l_ac].xmja039, g_xmdc4_d[l_ac].xmja038,g_xmdc4_d[l_ac].xmja037) RETURNING g_xmdc4_d[l_ac].inag009   #add by geza 20161209 161124-00039#1             
#            ELSE
#               LET g_xmdc4_d[l_ac].inag009 = 0           
#            END IF   
            #add by geza 20161029 #161027-00055#2(E)
            #170116-00018#3 -e 20170117 mark by 08172
            #170116-00018#3 -s 20170117 add by 08172
#            IF g_xmdc4_d[l_ac].xmja003 IS NOT NULL AND g_xmdc4_d[l_ac].xmja004 IS NOT NULL AND  g_xmdc3_d[l_ac].xmdd004 IS NOT NULL
#               AND g_xmdc3_d[l_ac].xmddunit IS NOT NULL AND g_xmdc3_d[l_ac].xmdd213 IS NOT NULL THEN
#               CALL adbt500_inas011_count(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja004,g_xmdc3_d[l_ac].xmdd004,g_xmdc3_d[l_ac].xmddunit,g_xmdc3_d[l_ac].xmdd213)   
#                    RETURNING g_xmdc4_d[l_ac].inag009              
#            ELSE 
#               LET g_xmdc4_d[l_ac].inag009 = ''
#            END IF
            #170116-00018#3 -e 20170117 add by 08172
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja003
            #add-point:BEFORE FIELD xmja003 name="input.b.page4.xmja003"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja003
            #add-point:ON CHANGE xmja003 name="input.g.page4.xmja003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja033
            
            #add-point:AFTER FIELD xmja033 name="input.a.page4.xmja033"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja033) THEN 
               IF g_xmdc4_d[l_ac].xmja033 != g_xmdc4_d_o.xmja033 OR g_xmdc4_d_o.xmja033 IS NULL THEN
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = TRUE #是否開窗 #160318-00025#28  add
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda004
                  LET g_chkparam.arg2 = g_xmdc4_d[l_ac].xmja033
                  LET g_chkparam.err_str[1] = "apm-00397:sub-01302|apmi070|",cl_get_progname("apmi070",g_lang,"2"),"|:EXEPROGapmi070"#要執行的建議程式待補 #160318-00025#28  add
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_pmao004_3") THEN
                     #檢查失敗時後續處理
                     LET g_xmdc4_d[l_ac].xmja033 = g_xmdc4_d_o.xmja033
                     CALL s_desc_get_item_desc(g_xmdc4_d[l_ac].xmja003)RETURNING g_xmdc4_d[l_ac].xmja003_desc,g_xmdc4_d[l_ac].xmja003_desc_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF 
            LET g_xmdc4_d_o.xmja033 = g_xmdc4_d[l_ac].xmja033

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja033
            #add-point:BEFORE FIELD xmja033 name="input.b.page4.xmja033"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja033
            #add-point:ON CHANGE xmja033 name="input.g.page4.xmja033"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja004
            #add-point:BEFORE FIELD xmja004 name="input.b.page4.xmja004"
            LET g_imaa005=''
            CALL s_adb_get_imaa005(g_enterprise,g_xmdc4_d[l_ac].xmja003) RETURNING g_imaa005

            IF NOT cl_null(g_imaa005)  THEN            
#               IF l_cmd = 'a' AND cl_null(g_xmdc4_d[l_ac].xmja004) THEN   #160314-00009#2   marked by zhujing 2016-3-16
               IF l_cmd = 'a' AND cl_null(g_xmdc4_d[l_ac].xmja004) AND s_feature_auto_chk(g_xmdc4_d[l_ac].xmja003) THEN    #160314-00009#2   mod by zhujing 2016-3-16
                  CALL g_inam.clear()
                  CALL s_feature(l_cmd,g_xmdc4_d[l_ac].xmja003,'','',g_xmda_m.xmdasite,g_xmda_m.xmdadocno) RETURNING l_success,g_inam
                  LET g_xmdc4_d[l_ac].xmja004 = g_inam[1].inam002
                  LET g_xmdc4_d[l_ac].xmja012 = g_inam[1].inam004
                  CALL adbt500_xmja012_convert()
                  DISPLAY BY NAME g_xmdc4_d[l_ac].xmja004,g_xmdc4_d[l_ac].xmja014
               END IF
            ELSE
               LET g_xmdc_d[l_ac].xmdc002 = ' '
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja004
            
            #add-point:AFTER FIELD xmja004 name="input.a.page4.xmja004"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja004) THEN
               #161219-00001#4 by sunxh 161219 add(S)
               IF NOT s_feature_check(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja004) THEN               
                  NEXT FIELD CURRENT
               END IF 
               #161219-00001#4 by sunxh 161219 add(E)            
               IF g_xmdc4_d[l_ac].xmja004 != g_xmdc4_d_o.xmja004 OR g_xmdc4_d_o.xmja004 IS NULL THEN 
                  #依交易對象、料號、產品特徵回傳客戶料號
                  IF NOT cl_null(g_xmdc4_d[l_ac].xmja003) THEN
                     #161221-00064#24 mod-S
#                     CALL s_apmi070_get_pmao004(g_xmda_m.xmda004,g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja004)
                     CALL s_apmi070_get_pmao004_2(g_xmda_m.xmda004,g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja004,'2')
                     #161221-00064#24 mod-E
                       RETURNING l_success,l_pmao004
                     IF l_success THEN
                        LET g_xmdc_d[l_ac].xmdc027 = l_pmao004
                        DISPLAY BY NAME g_xmdc4_d[l_ac].xmja033
                     END IF 
                  END IF  
               END IF  
               #151224-00025#1 --- add start ---
               IF NOT s_feature_direct_input(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja004,g_xmdc4_d_o.xmja004,g_xmda_m.xmdadocno,g_xmda_m.xmdasite) THEN
                  NEXT FIELD CURRENT
               END IF
               #151224-00025#1 --- add end   ---
            ELSE
               IF NOT cl_null(g_imaa005) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  'sub-00124'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()    
                  NEXT FIELD CURRENT
               ELSE 
                  LET g_xmdc4_d[l_ac].xmja004 = ' '            
               END IF                
            END IF   
            LET g_xmdc4_d_o.xmja004 = g_xmdc4_d[l_ac].xmja004 
            #161017-00029#3 16/10/18 by 08742 -S
            #161228-00033#1 Mark By Ken 170105(S)
            #SELECT imay003 INTO  g_xmdc4_d[l_ac].xmja002
            #  FROM imay_t
            # WHERE imayent = g_enterprise
            #   AND imay019 = g_xmdc4_d[l_ac].xmja004
            #   AND imay001 = g_xmdc4_d[l_ac].xmja003
            #   AND ROWNUM = 1
            #161228-00033#1 Mark By Ken 170105(E)
            #161228-00033#1 Add By Ken 170105(S)
            LET l_sql = "SELECT imay003 ",
                        "  FROM imay_t ",
                        " WHERE imayent = ", g_enterprise ,
                        "   AND imay019 = '", g_xmdc4_d[l_ac].xmja004 ,"' ",
                        "   AND imay001 = '", g_xmdc4_d[l_ac].xmja003 ,"' "
            PREPARE adbt500_imay003_pre FROM l_sql
            DECLARE adbt500_imay003_cur SCROLL CURSOR FOR adbt500_imay003_pre
            OPEN adbt500_imay003_cur
            FETCH FIRST adbt500_imay003_cur INTO g_xmdc4_d[l_ac].xmja002
            FREE adbt500_imay003_pre
            CLOSE adbt500_imay003_cur                         
            #161228-00033#1 Mark By Ken 170105(E)
            IF sqlca.sqlcode = 100 THEN
               SELECT imay003 INTO  g_xmdc4_d[l_ac].xmja002
                FROM imay_t
               WHERE imayent = g_enterprise
                 AND imay006='Y'
                 AND imay001 = g_xmdc4_d[l_ac].xmja003
            END IF
            #161017-00029#3 16/10/18 by 08742 -E
            #170116-00018#3 -s 20170117 mark by 08172
            #add by geza 20161029 #161027-00055#2(S)
#            IF g_xmdc4_d[l_ac].xmjasite IS NOT NULL AND g_xmdc4_d[l_ac].xmja003 IS NOT NULL  THEN
#               SELECT rtdx029 INTO g_xmdc4_d[l_ac].rtdx029
#                 FROM rtdx_t 
#                WHERE rtdxent = g_enterprise
#                  AND rtdx001 = g_xmdc4_d[l_ac].xmja003
#                  AND rtdxsite = g_xmdc4_d[l_ac].xmjasite
#                  AND rtdxstus = 'Y'
#               SELECT ooefl003 INTO g_xmdc4_d[l_ac].rtdx029_desc
#                 FROM ooefl_t 
#                WHERE ooeflent = g_enterprise
#                  AND ooefl001 = g_xmdc4_d[l_ac].rtdx029         
#                  AND ooefl002 = g_lang          
#            END IF 
#            IF g_xmdc4_d[l_ac].rtdx029 IS NOT NULL AND g_xmdc4_d[l_ac].xmja003 IS NOT NULL AND g_xmdc4_d[l_ac].xmja004 IS NOT NULL THEN                   
#               #CALL adbt500_xmja041_count(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].rtdx029,g_xmdc4_d[l_ac].xmja004) RETURNING g_xmdc4_d[l_ac].inag009  #mark by geza 20161209 161124-00039#1
#               CALL adbt500_xmja041_count(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].rtdx029,g_xmdc4_d[l_ac].xmja004,'',g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja040,g_xmdc4_d[l_ac].xmja039, g_xmdc4_d[l_ac].xmja038,g_xmdc4_d[l_ac].xmja037) RETURNING g_xmdc4_d[l_ac].inag009   #add by geza 20161209 161124-00039#1             
#            ELSE
#               LET g_xmdc4_d[l_ac].inag009 = 0           
#            END IF    
            #add by geza 20161029 #161027-00055#2(E)
            #170116-00018#3 -e 20170117 mark by 08172
            #170116-00018#3 -s 20170117 add by 08172
#            IF g_xmdc4_d[l_ac].xmja003 IS NOT NULL AND g_xmdc4_d[l_ac].xmja004 IS NOT NULL AND  g_xmdc3_d[l_ac].xmdd004 IS NOT NULL
#               AND g_xmdc3_d[l_ac].xmddunit IS NOT NULL AND g_xmdc3_d[l_ac].xmdd213 IS NOT NULL THEN
#               CALL adbt500_inas011_count(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja004,g_xmdc3_d[l_ac].xmdd004,g_xmdc3_d[l_ac].xmddunit,g_xmdc3_d[l_ac].xmdd213)   
#                    RETURNING g_xmdc4_d[l_ac].inag009              
#            ELSE 
#               LET g_xmdc4_d[l_ac].inag009 = ''
#            END IF
            #170116-00018#3 -e 20170117 add by 08172
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja004
            #add-point:ON CHANGE xmja004 name="input.g.page4.xmja004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja005
            
            #add-point:AFTER FIELD xmja005 name="input.a.page4.xmja005"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja005) THEN 
               IF g_xmdc4_d[l_ac].xmja005 != g_xmdc4_d_o.xmja005 OR g_xmdc4_d_o.xmja005 IS NULL THEN 
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = TRUE #是否開窗 #160318-00025#28  add
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdc4_d[l_ac].xmja005
                  LET g_chkparam.err_str[1] = "apr-00060:sub-01307|aprm201|",cl_get_progname("aprm201",g_lang,"2"),"|:EXEPROGaprm201"#要執行的建議程式待補 #160318-00025#28  add
                  LET g_chkparam.err_str[2] = "apr-00059:sub-01302|aprm201|",cl_get_progname("aprm201",g_lang,"2"),"|:EXEPROGaprm201"#要執行的建議程式待補 #160318-00025#28  add  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_prcf001") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmdc4_d[l_ac].xmja005 = g_xmdc4_d_o.xmja005
                     CALL adbt500_xmja005_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF   

            END IF 
            LET g_xmdc4_d_o.xmja005 = g_xmdc4_d[l_ac].xmja005
            CALL adbt500_xmja005_ref()


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja005
            #add-point:BEFORE FIELD xmja005 name="input.b.page4.xmja005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja005
            #add-point:ON CHANGE xmja005 name="input.g.page4.xmja005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja006
            
            #add-point:AFTER FIELD xmja006 name="input.a.page4.xmja006"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja006) THEN 
               IF g_xmdc4_d[l_ac].xmja006 != g_xmdc4_d_o.xmja006 OR g_xmdc4_d_o.xmja006 IS NULL THEN 
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = TRUE #是否開窗 #160318-00025#28  add
                  LET g_chkparam.arg1 = g_xmda_m.xmdasite
                  LET g_chkparam.arg2 = g_xmdc4_d[l_ac].xmja006
                  LET g_chkparam.err_str[1] = "aoo-00223:sub-01302|aooi610|",cl_get_progname("aooi610",g_lang,"2"),"|:EXEPROGaooi610"#要執行的建議程式待補 #160318-00025#28  add
                  IF NOT cl_chk_exist("v_oodb002") THEN
                     LET g_xmdc4_d[l_ac].xmja006 = g_xmdc4_d_o.xmja006
                     CALL s_desc_get_tax_desc1(g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja006) RETURNING g_xmdc4_d[l_ac].xmja006_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL adbt500_get_price()
               END IF
            END IF             
            LET g_xmdc4_d_o.xmja006 = g_xmdc4_d[l_ac].xmja006 
            CALL s_desc_get_tax_desc1(g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja006) RETURNING g_xmdc4_d[l_ac].xmja006_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja006
            #add-point:BEFORE FIELD xmja006 name="input.b.page4.xmja006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja006
            #add-point:ON CHANGE xmja006 name="input.g.page4.xmja006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja006_desc
            #add-point:BEFORE FIELD xmja006_desc name="input.b.page4.xmja006_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja006_desc
            
            #add-point:AFTER FIELD xmja006_desc name="input.a.page4.xmja006_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja006_desc
            #add-point:ON CHANGE xmja006_desc name="input.g.page4.xmja006_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja007
            #add-point:BEFORE FIELD xmja007 name="input.b.page4.xmja007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja007
            
            #add-point:AFTER FIELD xmja007 name="input.a.page4.xmja007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja007
            #add-point:ON CHANGE xmja007 name="input.g.page4.xmja007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja011
            
            #add-point:AFTER FIELD xmja011 name="input.a.page4.xmja011"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja011) THEN 
               IF g_xmdc4_d[l_ac].xmja011 != g_xmdc4_d_o.xmja011 OR g_xmdc4_d_o.xmja011 IS NULL THEN            
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdc4_d[l_ac].xmja003
                  LET g_chkparam.arg2 = g_xmdc4_d[l_ac].xmja011
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_imao002") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmdc4_d[l_ac].xmja011 = g_xmdc4_d_o.xmja011
                     CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja011) RETURNING g_xmdc4_d[l_ac].xmja011_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL adbt500_xmja012_convert()
               END IF
            END IF  
            LET g_xmdc4_d_o.xmja011 = g_xmdc4_d[l_ac].xmja011 
            CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja011) RETURNING g_xmdc4_d[l_ac].xmja011_desc
            

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja011
            #add-point:BEFORE FIELD xmja011 name="input.b.page4.xmja011"
            CALL adbt500_set_entry_b(l_cmd)
            CALL adbt500_set_no_entry_b(l_cmd)
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja011
            #add-point:ON CHANGE xmja011 name="input.g.page4.xmja011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja012
            #add-point:BEFORE FIELD xmja012 name="input.b.page4.xmja012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja012
            
            #add-point:AFTER FIELD xmja012 name="input.a.page4.xmja012"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja012) THEN
               IF g_xmdc4_d[l_ac].xmja012 != g_xmdc4_d_o.xmja012 OR g_xmdc4_d_o.xmja012 IS NULL THEN            
                  CALL s_aooi250_take_decimals(g_xmdc4_d[l_ac].xmja011,g_xmdc4_d[l_ac].xmja012) RETURNING l_success,g_xmdc4_d[l_ac].xmja012
                  CALL adbt500_xmja012_convert()
               END IF
               #當為修改且多交期 = 'Y'
               IF NOT cl_null(g_xmdc4_d[l_ac].xmja012) AND g_xmdc4_d[l_ac].xmja030 = 'Y' AND
                  g_xmdc4_d[l_ac].xmja012 != g_xmdc4_d_o.xmja012 THEN
                  CALL adbt500_03(g_xmda_m.xmdadocno,g_xmdc4_d[l_ac].xmjaseq,g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja004,
                                     g_xmdc4_d[l_ac].xmja014,g_xmdc4_d[l_ac].xmja030,g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja025)
                     RETURNING g_xmdc4_d[l_ac].xmja031,g_xmdc4_d[l_ac].xmja032,g_xmdc4_d[l_ac].xmja014
                  DISPLAY BY NAME g_xmdc4_d[l_ac].xmja031,g_xmdc4_d[l_ac].xmja032,g_xmdc4_d[l_ac].xmja014
                  CALL adbt500_update_xmja014(g_xmdc4_d[l_ac].xmja014)
               END IF
            END IF
            LET g_xmdc4_d_o.xmja012 = g_xmdc4_d[l_ac].xmja012
            LET g_xmdc4_d_o.xmja014 = g_xmdc4_d[l_ac].xmja014  #By benson
            LET g_xmdc4_d_o.xmja016 = g_xmdc4_d[l_ac].xmja016
            LET g_xmdc4_d_o.xmja018 = g_xmdc4_d[l_ac].xmja018
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja012
            #add-point:ON CHANGE xmja012 name="input.g.page4.xmja012"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja013
            
            #add-point:AFTER FIELD xmja013 name="input.a.page4.xmja013"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja013) THEN 
               IF g_xmdc4_d[l_ac].xmja013 != g_xmdc4_d_o.xmja013 OR g_xmdc4_d_o.xmja013 IS NULL THEN            
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdc4_d[l_ac].xmja003
                  LET g_chkparam.arg2 = g_xmdc4_d[l_ac].xmja013
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_imao002") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmdc4_d[l_ac].xmja013 = g_xmdc4_d_o.xmja013
                     CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja013) RETURNING g_xmdc4_d[l_ac].xmja013_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL adbt500_xmja012_convert()
               END IF
            END IF  
            LET g_xmdc4_d_o.xmja013 = g_xmdc4_d[l_ac].xmja013 
            CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja013) RETURNING g_xmdc4_d[l_ac].xmja013_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja013
            #add-point:BEFORE FIELD xmja013 name="input.b.page4.xmja013"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja013
            #add-point:ON CHANGE xmja013 name="input.g.page4.xmja013"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja014
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc4_d[l_ac].xmja014,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmja014
            END IF 
 
 
 
            #add-point:AFTER FIELD xmja014 name="input.a.page4.xmja014"
            #By benson --- S --- 
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja014) THEN
               IF g_xmdc4_d[l_ac].xmja014 != g_xmdc4_d_o.xmja014 OR g_xmdc4_d_o.xmja014 IS NULL THEN            
                  CALL s_aooi250_take_decimals(g_xmdc4_d[l_ac].xmja013,g_xmdc4_d[l_ac].xmja014) RETURNING l_success,g_xmdc4_d[l_ac].xmja014
                  CALL adbt500_xmja014_convert()
               END IF
               #當為修改且多交期 = 'Y'
               IF NOT cl_null(g_xmdc4_d[l_ac].xmja014) AND g_xmdc4_d[l_ac].xmja030 = 'Y' AND
                  g_xmdc4_d[l_ac].xmja014 != g_xmdc4_d_o.xmja014 THEN
                  CALL adbt500_03(g_xmda_m.xmdadocno,g_xmdc4_d[l_ac].xmjaseq,g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja004,
                                  g_xmdc4_d[l_ac].xmja014,g_xmdc4_d[l_ac].xmja030,g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja025)
                     RETURNING g_xmdc4_d[l_ac].xmja031,g_xmdc4_d[l_ac].xmja032,g_xmdc4_d[l_ac].xmja014
                  DISPLAY BY NAME g_xmdc4_d[l_ac].xmja031,g_xmdc4_d[l_ac].xmja032,g_xmdc4_d[l_ac].xmja014
                  CALL adbt500_update_xmja014(g_xmdc4_d[l_ac].xmja014)
               END IF
            ELSE
               LET g_xmdc4_d[l_ac].xmja012 = ''
            END IF
            LET g_xmdc4_d_o.xmja012 = g_xmdc4_d[l_ac].xmja012
            LET g_xmdc4_d_o.xmja014 = g_xmdc4_d[l_ac].xmja014  
            LET g_xmdc4_d_o.xmja016 = g_xmdc4_d[l_ac].xmja016
            LET g_xmdc4_d_o.xmja018 = g_xmdc4_d[l_ac].xmja018
            CALL adbt500_set_entry_b(p_cmd)
            CALL adbt500_set_no_entry_b(p_cmd)
            #By benson --- E --- 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja014
            #add-point:BEFORE FIELD xmja014 name="input.b.page4.xmja014"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja014
            #add-point:ON CHANGE xmja014 name="input.g.page4.xmja014"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja015
            
            #add-point:AFTER FIELD xmja015 name="input.a.page4.xmja015"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja015) THEN 
               IF g_xmdc4_d[l_ac].xmja015 != g_xmdc4_d_o.xmja015 OR g_xmdc4_d_o.xmja015 IS NULL THEN            
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdc4_d[l_ac].xmja003
                  LET g_chkparam.arg2 = g_xmdc4_d[l_ac].xmja015
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_imao002") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmdc4_d[l_ac].xmja015 = g_xmdc4_d_o.xmja015
                     CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja015) RETURNING g_xmdc4_d[l_ac].xmja015_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL adbt500_xmja012_convert()
               END IF
            END IF  
            LET g_xmdc4_d_o.xmja015 = g_xmdc4_d[l_ac].xmja015 
            CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja015) RETURNING g_xmdc4_d[l_ac].xmja015_desc
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja015
            #add-point:BEFORE FIELD xmja015 name="input.b.page4.xmja015"
            CALL adbt500_set_no_required_b()
            CALL adbt500_set_required_b()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja015
            #add-point:ON CHANGE xmja015 name="input.g.page4.xmja015"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja016
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc4_d[l_ac].xmja016,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmja016
            END IF 
 
 
 
            #add-point:AFTER FIELD xmja016 name="input.a.page4.xmja016"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja016) THEN 
               CALL s_aooi250_take_decimals(g_xmdc4_d[l_ac].xmja015,g_xmdc4_d[l_ac].xmja016) RETURNING l_success,g_xmdc4_d[l_ac].xmja016
            END IF 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja016
            #add-point:BEFORE FIELD xmja016 name="input.b.page4.xmja016"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja016
            #add-point:ON CHANGE xmja016 name="input.g.page4.xmja016"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja017
            
            #add-point:AFTER FIELD xmja017 name="input.a.page4.xmja017"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja017) THEN 
               IF g_xmdc4_d[l_ac].xmja017 != g_xmdc4_d_o.xmja017 OR g_xmdc4_d_o.xmja017 IS NULL THEN            
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdc4_d[l_ac].xmja003
                  LET g_chkparam.arg2 = g_xmdc4_d[l_ac].xmja017
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_imao002") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmdc4_d[l_ac].xmja017 = g_xmdc4_d_o.xmja017
                     CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja017) RETURNING g_xmdc4_d[l_ac].xmja017_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL adbt500_xmja012_convert()
               END IF
            END IF  
            LET g_xmdc4_d_o.xmja017 = g_xmdc4_d[l_ac].xmja017 
            CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja017) RETURNING g_xmdc4_d[l_ac].xmja017_desc
           
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja017
            #add-point:BEFORE FIELD xmja017 name="input.b.page4.xmja017"
            CALL adbt500_set_no_required_b()
            CALL adbt500_set_required_b()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja017
            #add-point:ON CHANGE xmja017 name="input.g.page4.xmja017"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja018
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc4_d[l_ac].xmja018,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmja018
            END IF 
 
 
 
            #add-point:AFTER FIELD xmja018 name="input.a.page4.xmja018"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja018) THEN 
               CALL s_aooi250_take_decimals(g_xmdc4_d[l_ac].xmja017,g_xmdc4_d[l_ac].xmja018) RETURNING l_success,g_xmdc4_d[l_ac].xmja018
               IF g_xmdc4_d[l_ac].xmja018 != g_xmdc4_d_o.xmja018 OR g_xmdc4_d_o.xmja018 IS NULL THEN          
                  CALL adbt500_xmja018_convert()   #160601-00027#1 160606 by lori add
                  CALL adbt500_get_price()
                  CALL adbt500_regen_amounts()
                  #CALL adbt500_get_xmja022()
               END IF
            END IF 
            LET g_xmdc4_d_o.xmja018 = g_xmdc4_d[l_ac].xmja018

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja018
            #add-point:BEFORE FIELD xmja018 name="input.b.page4.xmja018"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja018
            #add-point:ON CHANGE xmja018 name="input.g.page4.xmja018"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja008
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc4_d[l_ac].xmja008,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmja008
            END IF 
 
 
 
            #add-point:AFTER FIELD xmja008 name="input.a.page4.xmja008"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja008) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja008
            #add-point:BEFORE FIELD xmja008 name="input.b.page4.xmja008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja008
            #add-point:ON CHANGE xmja008 name="input.g.page4.xmja008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja009
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc4_d[l_ac].xmja009,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD xmja009
            END IF 
 
 
 
            #add-point:AFTER FIELD xmja009 name="input.a.page4.xmja009"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja009) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja009
            #add-point:BEFORE FIELD xmja009 name="input.b.page4.xmja009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja009
            #add-point:ON CHANGE xmja009 name="input.g.page4.xmja009"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja010
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc4_d[l_ac].xmja010,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD xmja010
            END IF 
 
 
 
            #add-point:AFTER FIELD xmja010 name="input.a.page4.xmja010"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja010) THEN 
               IF g_xmdc4_d[l_ac].xmja010 != g_xmdc4_d_o.xmja010 OR g_xmdc4_d_o.xmja010 IS NULL THEN   
                  #若單頭取價方式的基本資料設置單價不可為0時，則輸入的單價不可以為0
                  IF g_xmah006 = 'N' AND g_xmdc4_d[l_ac].xmja010 = 0 THEN  
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'apm-00273'
                     LET g_errparam.extend = g_xmdc4_d[l_ac].xmja010
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_xmdc4_d[l_ac].xmja010 = g_xmdc4_d_o.xmja010
                     NEXT FIELD CURRENT
                  END IF
                  CALL adbt500_regen_amounts()
                  CALL adbt500_get_xmja022()
               END IF
            END IF 
            LET g_xmdc4_d_o.xmja010 = g_xmdc4_d[l_ac].xmja010 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja010
            #add-point:BEFORE FIELD xmja010 name="input.b.page4.xmja010"
 
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja010
            #add-point:ON CHANGE xmja010 name="input.g.page4.xmja010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja022
            #add-point:BEFORE FIELD xmja022 name="input.b.page4.xmja022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja022
            
            #add-point:AFTER FIELD xmja022 name="input.a.page4.xmja022"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja022
            #add-point:ON CHANGE xmja022 name="input.g.page4.xmja022"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja019
            #add-point:BEFORE FIELD xmja019 name="input.b.page4.xmja019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja019
            
            #add-point:AFTER FIELD xmja019 name="input.a.page4.xmja019"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja019
            #add-point:ON CHANGE xmja019 name="input.g.page4.xmja019"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja020
            #add-point:BEFORE FIELD xmja020 name="input.b.page4.xmja020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja020
            
            #add-point:AFTER FIELD xmja020 name="input.a.page4.xmja020"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja020
            #add-point:ON CHANGE xmja020 name="input.g.page4.xmja020"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja021
            #add-point:BEFORE FIELD xmja021 name="input.b.page4.xmja021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja021
            
            #add-point:AFTER FIELD xmja021 name="input.a.page4.xmja021"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja021
            #add-point:ON CHANGE xmja021 name="input.g.page4.xmja021"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_imaa116
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xmdc4_d[l_ac].l_imaa116,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD l_imaa116
            END IF 
 
 
 
            #add-point:AFTER FIELD l_imaa116 name="input.a.page4.l_imaa116"
            IF NOT cl_null(g_xmdc4_d[l_ac].l_imaa116) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_imaa116
            #add-point:BEFORE FIELD l_imaa116 name="input.b.page4.l_imaa116"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_imaa116
            #add-point:ON CHANGE l_imaa116 name="input.g.page4.l_imaa116"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_diaopai
            #add-point:BEFORE FIELD l_diaopai name="input.b.page4.l_diaopai"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_diaopai
            
            #add-point:AFTER FIELD l_diaopai name="input.a.page4.l_diaopai"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_diaopai
            #add-point:ON CHANGE l_diaopai name="input.g.page4.l_diaopai"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_rate
            #add-point:BEFORE FIELD l_rate name="input.b.page4.l_rate"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_rate
            
            #add-point:AFTER FIELD l_rate name="input.a.page4.l_rate"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_rate
            #add-point:ON CHANGE l_rate name="input.g.page4.l_rate"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja024
            
            #add-point:AFTER FIELD xmja024 name="input.a.page4.xmja024"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja024) THEN 
               IF g_xmdc4_d[l_ac].xmja024 != g_xmdc4_d_o.xmja024 OR g_xmdc4_d_o.xmja024 IS NULL THEN   
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xmdc4_d[l_ac].xmja024
                  LET g_chkparam.arg2 = g_xmda_m.xmda004
                  IF NOT cl_chk_exist("v_pmaa001_20") THEN
                     LET g_xmdc4_d[l_ac].xmja024 = g_xmdc4_d_o.xmja024
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmdc4_d[l_ac].xmja024) RETURNING g_xmdc4_d[l_ac].xmja024_desc
                     NEXT FIELD CURRENT
                  END IF
                  #當訂單性質 = 3.簽收訂單 且 合同經營方式 = 13.寄銷 報錯
                  LET g_xmdc4_d[l_ac].xmja025 = g_xmdc4_d[l_ac].xmja024
                  IF NOT adbt500_stce_chk('2') THEN
                     LET g_xmdc4_d[l_ac].xmja024 = g_xmdc4_d_o.xmja024
                     LET g_xmdc4_d[l_ac].xmja025 = g_xmdc4_d_o.xmja025
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmdc4_d[l_ac].xmja024) RETURNING g_xmdc4_d[l_ac].xmja024_desc
                     CALL s_desc_get_trading_partner_abbr_desc(g_xmdc4_d[l_ac].xmja025) RETURNING g_xmdc4_d[l_ac].xmja025_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            LET g_xmdc4_d[l_ac].xmja025 = g_xmdc4_d[l_ac].xmja024
            LET g_xmdc4_d_o.xmja024 = g_xmdc4_d[l_ac].xmja024
            LET g_xmdc4_d_o.xmja025 = g_xmdc4_d[l_ac].xmja025
            CALL s_desc_get_trading_partner_abbr_desc(g_xmdc4_d[l_ac].xmja024) RETURNING g_xmdc4_d[l_ac].xmja024_desc
            CALL s_desc_get_trading_partner_abbr_desc(g_xmdc4_d[l_ac].xmja025) RETURNING g_xmdc4_d[l_ac].xmja025_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja024
            #add-point:BEFORE FIELD xmja024 name="input.b.page4.xmja024"
            CALL adbt500_set_entry_b(l_cmd)
            CALL adbt500_set_no_entry_b(l_cmd)
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja024
            #add-point:ON CHANGE xmja024 name="input.g.page4.xmja024"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja025
            
            #add-point:AFTER FIELD xmja025 name="input.a.page4.xmja025"
 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja025
            #add-point:BEFORE FIELD xmja025 name="input.b.page4.xmja025"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja025
            #add-point:ON CHANGE xmja025 name="input.g.page4.xmja025"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja026
            
            #add-point:AFTER FIELD xmja026 name="input.a.page4.xmja026"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja026) THEN 
               IF g_xmdc4_d[l_ac].xmja026 != g_xmdc4_d_o.xmja026 OR g_xmdc4_d_o.xmja026 IS NULL THEN   
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = TRUE #是否開窗 #160318-00025#28  add
                  #設定g_chkparam.*的參數
                  CALL adbt500_get_pmaa027(g_xmdc4_d[l_ac].xmja025) RETURNING l_pmaa027_1
                  LET g_chkparam.arg1 = l_pmaa027_1
                  LET g_chkparam.arg2 = g_xmdc4_d[l_ac].xmja026
                  LET g_chkparam.err_str[1] = "apm-00214:adb-00362"
#                  LET g_chkparam.err_str[2] = "anm-00025:adb-00363"    #160318-00025#28 mark
                  LET g_chkparam.err_str[2] = "anm-00025:sub-01302|apmm800|",cl_get_progname("apmm800",g_lang,"2"),"|:EXEPROGapmm800"#要執行的建議程式待補 #160318-00025#28  add
                  LET g_chkparam.err_str[3] = "apm-00269:adb-00365"
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_oofb019_1") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmdc4_d[l_ac].xmja026 = g_xmdc4_d_o.xmja026
                     CALL adbt500_xmja026_ref()
                     NEXT FIELD CURRENT
                  END IF
                  CALL adbt500_get_pmaa027(g_xmdc4_d[l_ac].xmja025) RETURNING l_pmaa027   
                  #161228-00033#1 Mark By Ken 170105(S)
                  #SELECT oofb022 INTO g_xmdc4_d[l_ac].xmja027 FROM oofb_t
                  # WHERE oofb002 = l_pmaa027 AND oofb008 = '3' 
                  #   AND oofbstus = 'Y' 
                  #   AND oofb019 = g_xmdc4_d[l_ac].xmja026
                  #   AND rownum = 1 
                  #161228-00033#1 Mark By Ken 170105(E)
                  #161228-00033#1 Add By Ken 170105(S)
                  LET l_sql = "SELECT oofb022 ",
                              "  FROM oofb_t ",
                              " WHERE oofb002 = '", l_pmaa027 ,"' ", 
                              "   AND oofb008 = '3' ",
                              "   AND oofbstus = 'Y' ",
                              "   AND oofb019 = '", g_xmdc4_d[l_ac].xmja026 ,"' "
                  PREPARE adbt500_oofb022_pre FROM l_sql
                  DECLARE adbt500_oofb022_cur SCROLL CURSOR FOR adbt500_oofb022_pre
                  OPEN adbt500_oofb022_cur
                  FETCH FIRST adbt500_oofb022_cur INTO g_xmdc4_d[l_ac].xmja027 
                  FREE adbt500_oofb022_pre
                  CLOSE adbt500_oofb022_cur                               
                  #161228-00033#1 Add By Ken 170105(E)   
               END IF
            ELSE
               LET g_xmdc4_d[l_ac].xmja027 = NULL
            END IF 
            LET g_xmdc4_d_o.xmja026 = g_xmdc4_d[l_ac].xmja026 
            CALL adbt500_xmja026_ref()
            LET g_xmdc4_d[l_ac].xmja027_desc = s_desc_get_dbad001_desc(g_xmdc4_d[l_ac].xmja027)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja026
            #add-point:BEFORE FIELD xmja026 name="input.b.page4.xmja026"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja026
            #add-point:ON CHANGE xmja026 name="input.g.page4.xmja026"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja026_desc
            #add-point:BEFORE FIELD xmja026_desc name="input.b.page4.xmja026_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja026_desc
            
            #add-point:AFTER FIELD xmja026_desc name="input.a.page4.xmja026_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja026_desc
            #add-point:ON CHANGE xmja026_desc name="input.g.page4.xmja026_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja029
            #add-point:BEFORE FIELD xmja029 name="input.b.page4.xmja029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja029
            
            #add-point:AFTER FIELD xmja029 name="input.a.page4.xmja029"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja029
            #add-point:ON CHANGE xmja029 name="input.g.page4.xmja029"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja030
            #add-point:BEFORE FIELD xmja030 name="input.b.page4.xmja030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja030
            
            #add-point:AFTER FIELD xmja030 name="input.a.page4.xmja030"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja030) THEN
               IF g_xmdc4_d[l_ac].xmja030 != g_xmdc4_d_o.xmja030 OR g_xmdc4_d_o.xmja030 IS NULL THEN   
                  IF g_xmdc4_d[l_ac].xmja030= 'Y' THEN
                     CALL adbt500_03(g_xmda_m.xmdadocno,g_xmdc4_d[l_ac].xmjaseq,g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja004,
                                     g_xmdc4_d[l_ac].xmja014,g_xmdc4_d[l_ac].xmja030,g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja025)
                        RETURNING g_xmdc4_d[l_ac].xmja031,g_xmdc4_d[l_ac].xmja032,g_xmdc4_d[l_ac].xmja014
                     DISPLAY BY NAME g_xmdc4_d[l_ac].xmja031,g_xmdc4_d[l_ac].xmja032,g_xmdc4_d[l_ac].xmja014
                     CALL adbt500_update_xmja014(g_xmdc4_d[l_ac].xmja014)
                  ELSE
                     #從多交期改成非多交期需清空多交期資料
                     IF g_xmdc4_d_t.xmja030 = 'Y' THEN
                        DELETE FROM xmdf_t
                         WHERE xmdfent = g_enterprise
                           AND xmdfdocno = g_xmda_m.xmdadocno
                           AND xmdfseq = g_xmdc4_d[l_ac].xmjaseq
                     END IF
                  END IF
               END IF
            END IF
            LET g_xmdc4_d_o.xmja030 = g_xmdc4_d[l_ac].xmja030
            CALL adbt500_set_entry_b(l_cmd)
            CALL adbt500_set_no_entry_b(l_cmd)

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja030
            #add-point:ON CHANGE xmja030 name="input.g.page4.xmja030"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja031
            #add-point:BEFORE FIELD xmja031 name="input.b.page4.xmja031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja031
            
            #add-point:AFTER FIELD xmja031 name="input.a.page4.xmja031"
            IF g_xmdc4_d[l_ac].xmja031 > g_xmdc4_d[l_ac].xmja032 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'adb-00079'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               NEXT FIELD  xmja031
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja031
            #add-point:ON CHANGE xmja031 name="input.g.page4.xmja031"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja032
            #add-point:BEFORE FIELD xmja032 name="input.b.page4.xmja032"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja032
            
            #add-point:AFTER FIELD xmja032 name="input.a.page4.xmja032"
            IF g_xmdc4_d[l_ac].xmja032 < g_xmdc4_d[l_ac].xmja031 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'adb-00079'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               NEXT FIELD  xmja032
            END IF  
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja032
            #add-point:ON CHANGE xmja032 name="input.g.page4.xmja032"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja040
            
            #add-point:AFTER FIELD xmja040 name="input.a.page4.xmja040"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja040) THEN 
               IF g_xmdc4_d[l_ac].xmja040 != g_xmdc4_d_o.xmja040 OR g_xmdc4_d_o.xmja040 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdc4_d[l_ac].xmja040
                  LET g_chkparam.arg2 = '1'
                  LET g_errparam.replace[1] = '1'
                  IF NOT cl_chk_exist("v_dbaa001_1") THEN
                     LET g_xmdc4_d[l_ac].xmja040 = g_xmdc4_d_o.xmja040
                     CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja040) RETURNING g_xmdc4_d[l_ac].xmja040_desc
                     DISPLAY BY NAME g_xmdc4_d[l_ac].xmja040_desc
                     NEXT FIELD CURRENT
                  END IF 
                  LET g_xmdc4_d[l_ac].xmja037 = ''
                  LET g_xmdc4_d[l_ac].xmja038 = ''
                  LET g_xmdc4_d[l_ac].xmja039 = ''
                  LET g_xmdc4_d[l_ac].xmja037_desc = ''
                  LET g_xmdc4_d[l_ac].xmja038_desc = ''
                  LET g_xmdc4_d[l_ac].xmja039_desc = ''
                  DISPLAY BY NAME g_xmdc4_d[l_ac].xmja037_desc
                  DISPLAY BY NAME g_xmdc4_d[l_ac].xmja038_desc
                  DISPLAY BY NAME g_xmdc4_d[l_ac].xmja039_desc
               END IF
            END IF 
            LET g_xmdc4_d_o.xmja037 = g_xmdc4_d[l_ac].xmja037
            LET g_xmdc4_d_o.xmja038 = g_xmdc4_d[l_ac].xmja038
            LET g_xmdc4_d_o.xmja039 = g_xmdc4_d[l_ac].xmja039
            LET g_xmdc4_d_o.xmja040 = g_xmdc4_d[l_ac].xmja040
            CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja040) RETURNING g_xmdc4_d[l_ac].xmja040_desc
            DISPLAY BY NAME g_xmdc4_d[l_ac].xmja040_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja040
            #add-point:BEFORE FIELD xmja040 name="input.b.page4.xmja040"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja040
            #add-point:ON CHANGE xmja040 name="input.g.page4.xmja040"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja039
            
            #add-point:AFTER FIELD xmja039 name="input.a.page4.xmja039"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja039) THEN 
               IF g_xmdc4_d[l_ac].xmja039 != g_xmdc4_d_o.xmja039 OR g_xmdc4_d_o.xmja039 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdc4_d[l_ac].xmja039
                  LET g_chkparam.arg2 = '2'
                  LET g_errparam.replace[1] = '2'
                  IF NOT cl_chk_exist("v_dbaa001_1") THEN
                     LET g_xmdc4_d[l_ac].xmja039 = g_xmdc4_d_o.xmja039
                     CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja039) RETURNING g_xmdc4_d[l_ac].xmja039_desc
                     DISPLAY BY NAME g_xmdc4_d[l_ac].xmja039_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF cl_null(g_xmdc4_d[l_ac].xmja040) THEN
                     CALL s_adb_get_dbaa003(g_xmdc4_d[l_ac].xmja039,'2') RETURNING g_xmdc4_d[l_ac].xmja040
                     CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja040) RETURNING g_xmdc4_d[l_ac].xmja040_desc
                     DISPLAY BY NAME g_xmdc4_d[l_ac].xmja040_desc
                  END IF  
                  LET g_xmdc4_d[l_ac].xmja037 = ''
                  LET g_xmdc4_d[l_ac].xmja038 = ''
                  LET g_xmdc4_d[l_ac].xmja037_desc = ''
                  LET g_xmdc4_d[l_ac].xmja038_desc = ''
                  DISPLAY BY NAME g_xmdc4_d[l_ac].xmja037_desc
                  DISPLAY BY NAME g_xmdc4_d[l_ac].xmja038_desc
               END IF
            END IF 
            LET g_xmdc4_d_o.xmja037 = g_xmdc4_d[l_ac].xmja037
            LET g_xmdc4_d_o.xmja038 = g_xmdc4_d[l_ac].xmja038
            LET g_xmdc4_d_o.xmja039 = g_xmdc4_d[l_ac].xmja039
            LET g_xmdc4_d_o.xmja040 = g_xmdc4_d[l_ac].xmja040
            CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja039) RETURNING g_xmdc4_d[l_ac].xmja039_desc
            DISPLAY BY NAME g_xmdc4_d[l_ac].xmja039_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja039
            #add-point:BEFORE FIELD xmja039 name="input.b.page4.xmja039"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja039
            #add-point:ON CHANGE xmja039 name="input.g.page4.xmja039"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja038
            
            #add-point:AFTER FIELD xmja038 name="input.a.page4.xmja038"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja038) THEN 
               IF g_xmdc4_d[l_ac].xmja038 != g_xmdc4_d_o.xmja038 OR g_xmdc4_d_o.xmja038 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdc4_d[l_ac].xmja038
                  LET g_chkparam.arg2 = '3'
                  LET g_errparam.replace[1] = '3'
                  IF NOT cl_chk_exist("v_dbaa001_1") THEN
                     LET g_xmdc4_d[l_ac].xmja038 = g_xmdc4_d_o.xmja038
                     CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja038) RETURNING g_xmdc4_d[l_ac].xmja038_desc
                     DISPLAY BY NAME g_xmdc4_d[l_ac].xmja038_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF cl_null(g_xmdc4_d[l_ac].xmja039) THEN
                     CALL s_adb_get_dbaa003(g_xmdc4_d[l_ac].xmja038,'3') RETURNING g_xmdc4_d[l_ac].xmja039
                     CALL s_adb_get_dbaa003(g_xmdc4_d[l_ac].xmja039,'2') RETURNING g_xmdc4_d[l_ac].xmja040
                     CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja039) RETURNING g_xmdc4_d[l_ac].xmja039_desc
                     CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja040) RETURNING g_xmdc4_d[l_ac].xmja040_desc
                     DISPLAY BY NAME g_xmdc4_d[l_ac].xmja039_desc
                     DISPLAY BY NAME g_xmdc4_d[l_ac].xmja040_desc
                  END IF  
                  LET g_xmdc4_d[l_ac].xmja037 = ''
                  LET g_xmdc4_d[l_ac].xmja037_desc = ''
                  DISPLAY BY NAME g_xmdc4_d[l_ac].xmja037_desc
               END IF
            END IF 
            LET g_xmdc4_d_o.xmja037 = g_xmdc4_d[l_ac].xmja037
            LET g_xmdc4_d_o.xmja038 = g_xmdc4_d[l_ac].xmja038
            LET g_xmdc4_d_o.xmja039 = g_xmdc4_d[l_ac].xmja039
            LET g_xmdc4_d_o.xmja040 = g_xmdc4_d[l_ac].xmja040
            CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja038) RETURNING g_xmdc4_d[l_ac].xmja038_desc
            DISPLAY BY NAME g_xmdc4_d[l_ac].xmja038_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja038
            #add-point:BEFORE FIELD xmja038 name="input.b.page4.xmja038"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja038
            #add-point:ON CHANGE xmja038 name="input.g.page4.xmja038"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja037
            
            #add-point:AFTER FIELD xmja037 name="input.a.page4.xmja037"
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja037) THEN 
               IF g_xmdc4_d[l_ac].xmja037 != g_xmdc4_d_o.xmja037 OR g_xmdc4_d_o.xmja037 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmdc4_d[l_ac].xmja037
                  LET g_chkparam.arg2 = '4'
                  LET g_errparam.replace[1] = '4'
                  IF NOT cl_chk_exist("v_dbaa001_1") THEN
                     LET g_xmdc4_d[l_ac].xmja037 = g_xmdc4_d_o.xmja037
                     CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja037) RETURNING g_xmdc4_d[l_ac].xmja037_desc
                     DISPLAY BY NAME g_xmdc4_d[l_ac].xmja037_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF cl_null(g_xmdc4_d[l_ac].xmja038) THEN
                     CALL s_adb_get_dbaa003(g_xmdc4_d[l_ac].xmja037,'4') RETURNING g_xmdc4_d[l_ac].xmja038
                     CALL s_adb_get_dbaa003(g_xmdc4_d[l_ac].xmja038,'3') RETURNING g_xmdc4_d[l_ac].xmja039
                     CALL s_adb_get_dbaa003(g_xmdc4_d[l_ac].xmja039,'2') RETURNING g_xmdc4_d[l_ac].xmja040
                     CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja038) RETURNING g_xmdc4_d[l_ac].xmja038_desc
                     CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja039) RETURNING g_xmdc4_d[l_ac].xmja039_desc
                     CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja040) RETURNING g_xmdc4_d[l_ac].xmja040_desc
                     DISPLAY BY NAME g_xmdc4_d[l_ac].xmja038_desc
                     DISPLAY BY NAME g_xmdc4_d[l_ac].xmja039_desc
                     DISPLAY BY NAME g_xmdc4_d[l_ac].xmja040_desc
                  END IF  
               END IF
            END IF 
            LET g_xmdc4_d_o.xmja037 = g_xmdc4_d[l_ac].xmja037
            LET g_xmdc4_d_o.xmja038 = g_xmdc4_d[l_ac].xmja038
            LET g_xmdc4_d_o.xmja039 = g_xmdc4_d[l_ac].xmja039
            LET g_xmdc4_d_o.xmja040 = g_xmdc4_d[l_ac].xmja040
            CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja037) RETURNING g_xmdc4_d[l_ac].xmja037_desc
            DISPLAY BY NAME g_xmdc4_d[l_ac].xmja037_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja037
            #add-point:BEFORE FIELD xmja037 name="input.b.page4.xmja037"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja037
            #add-point:ON CHANGE xmja037 name="input.g.page4.xmja037"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmja034
            #add-point:BEFORE FIELD xmja034 name="input.b.page4.xmja034"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmja034
            
            #add-point:AFTER FIELD xmja034 name="input.a.page4.xmja034"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmja034
            #add-point:ON CHANGE xmja034 name="input.g.page4.xmja034"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page4.xmjaseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmjaseq
            #add-point:ON ACTION controlp INFIELD xmjaseq name="input.c.page4.xmjaseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmjasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmjasite
            #add-point:ON ACTION controlp INFIELD xmjasite name="input.c.page4.xmjasite"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmjasite             #給予default值

            #給予arg
#			   LET g_qryparam.arg1 = g_xmda_m.xmdasite
#			   LET g_qryparam.arg2 = '8'
#            
#            CALL q_ooed004_3()                                #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'xmjasite',g_xmda_m.xmdasite,'i') #150308-00001#2  By sakura add 'i'
            CALL q_ooef001_24()
            LET g_xmdc4_d[l_ac].xmjasite = g_qryparam.return1              

            DISPLAY g_xmdc4_d[l_ac].xmjasite TO xmjasite              #
            CALL s_desc_get_department_desc(g_xmdc4_d[l_ac].xmjasite) RETURNING g_xmdc4_d[l_ac].xmjasite_desc
            NEXT FIELD xmjasite                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja001
            #add-point:ON ACTION controlp INFIELD xmja001 name="input.c.page4.xmja001"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja002
            #add-point:ON ACTION controlp INFIELD xmja002 name="input.c.page4.xmja002"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmja002             #給予default值
            LET g_qryparam.where = g_qryparam.where ,"  EXISTS(SELECT 1 FROM dbbc_t WHERE dbbcent = ",g_enterprise,
                                                     "                               AND dbbc002 = '",g_xmda_m.xmdasite,"'",
                                                     "                               AND dbbc005 = '",g_xmda_m.xmda202,"'",
                                                     "                               AND dbbc003 = '",g_xmda_m.xmda023,"'",
                                                     "                               AND dbbc004 = imaa143 ) "
            #給予arg
            
            CALL q_imay003_6()                                #呼叫開窗

            LET g_xmdc4_d[l_ac].xmja002 = g_qryparam.return1              

            DISPLAY g_xmdc4_d[l_ac].xmja002 TO xmja002              #
            
            NEXT FIELD xmja002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja003
            #add-point:ON ACTION controlp INFIELD xmja003 name="input.c.page4.xmja003"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmja003             #給予default值
            LET g_qryparam.where = "1=1 "
 
            LET g_qryparam.where = " EXISTS(SELECT 1 FROM dbbc_t WHERE dbbcent = ",g_enterprise,
                                   "                               AND dbbc002 = '",g_xmda_m.xmdasite,"'",
                                   "                               AND dbbc005 = '",g_xmda_m.xmda202,"'",
                                   "                               AND dbbc003 = '",g_xmda_m.xmda023,"'",
                                   "                               AND dbbc004 = imaa143 ) "
     
            #給予arg
            LET g_qryparam.arg1 = 'ALL' #g_xmdc4_d[l_ac].xmjasite

            CALL q_imaf001_16()                                 #呼叫開窗
            LET g_xmdc4_d[l_ac].xmja003 = g_qryparam.return1              
            DISPLAY g_xmdc4_d[l_ac].xmja003 TO xmja003           
            CALL s_desc_get_item_desc(g_xmdc4_d[l_ac].xmja003)RETURNING g_xmdc4_d[l_ac].xmja003_desc,g_xmdc4_d[l_ac].xmja003_desc_desc
            NEXT FIELD xmja003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja033
            #add-point:ON ACTION controlp INFIELD xmja033 name="input.c.page4.xmja033"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmja033             #給予default值
            
            IF cl_null(g_xmdc4_d[l_ac].xmja003) OR cl_null(g_xmdc4_d[l_ac].xmja004) THEN
               #給予arg
               LET g_qryparam.arg1 = g_xmda_m.xmda004 
               IF NOT cl_null(g_xmdc4_d[l_ac].xmja003) THEN
                  LET g_qryparam.where = "pmao002 = '",g_xmdc4_d[l_ac].xmja003,"'"
               END IF
               IF NOT cl_null(g_xmdc4_d[l_ac].xmja004) THEN
                  LET g_qryparam.where = "pmao003 = '",g_xmdc4_d[l_ac].xmja004,"'"
               END IF
               CALL q_pmao004_3()                                #呼叫開窗
               
               IF NOT cl_null(g_qryparam.return1) THEN
                  LET g_xmdc4_d[l_ac].xmja033 = g_qryparam.return1  
                  LET g_xmdc4_d[l_ac].xmja003 = g_qryparam.return2  
                  LET g_xmdc4_d[l_ac].xmja004 = g_qryparam.return3 
               END IF

               DISPLAY BY NAME g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja004
            ELSE  
               #給予arg
               LET g_qryparam.arg1 = g_xmda_m.xmda004
               LET g_qryparam.arg2 = g_xmdc4_d[l_ac].xmja003
               LET g_qryparam.arg3 = g_xmdc4_d[l_ac].xmja004
            
               CALL q_pmao004_1()                                #呼叫開窗
               IF NOT cl_null(g_qryparam.return1) THEN
                  LET g_xmdc4_d[l_ac].xmja033 = g_qryparam.return1  
               END IF
            END IF           

            DISPLAY g_xmdc4_d[l_ac].xmja033 TO xmja033              #

            NEXT FIELD xmja033                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja004
            #add-point:ON ACTION controlp INFIELD xmja004 name="input.c.page4.xmja004"
            LET g_imaa005 = ''
            CALL s_adb_get_imaa005(g_enterprise,g_xmdc4_d[l_ac].xmja003) RETURNING g_imaa005

            IF NOT cl_null(g_imaa005) THEN
               IF l_cmd = 'a' THEN
                  CALL g_inam.clear()
                  CALL s_feature(l_cmd,g_xmdc4_d[l_ac].xmja003,'','',g_xmda_m.xmdasite,g_xmda_m.xmdadocno) RETURNING l_success,g_inam
                  LET g_xmdc4_d[l_ac].xmja004 = g_inam[1].inam002
                  LET g_xmdc4_d[l_ac].xmja014 = g_inam[1].inam004
                  DISPLAY BY NAME g_xmdc4_d[l_ac].xmja004,g_xmdc4_d[l_ac].xmja014
                  CALL adbt500_xmja014_convert()
               END IF
               IF l_cmd = 'u' THEN
                  CALL s_feature_single(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja004,g_xmda_m.xmdasite,g_xmda_m.xmdadocno)
                       RETURNING l_success,g_xmdc4_d[l_ac].xmja004
               END IF
               #依交易對象、料號、產品特徵回傳客戶料號
               #161221-00064#24 mod-S
#               CALL s_apmi070_get_pmao004(g_xmda_m.xmda004,g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja004)
               CALL s_apmi070_get_pmao004_2(g_xmda_m.xmda004,g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja004,'2')
               #161221-00064#24 mod-E
                 RETURNING r_success,l_pmao004
               IF r_success THEN
                  LET g_xmdc4_d[l_ac].xmja033 = l_pmao004
                  DISPLAY BY NAME g_xmdc4_d[l_ac].xmja033
               END IF                       
               DISPLAY BY NAME g_xmdc4_d[l_ac].xmja004
            END IF
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja005
            #add-point:ON ACTION controlp INFIELD xmja005 name="input.c.page4.xmja005"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmja005             #給予default值

            #給予arg

            
            CALL q_prcf001_1()                                #呼叫開窗

            LET g_xmdc4_d[l_ac].xmja005 = g_qryparam.return1              

            DISPLAY g_xmdc4_d[l_ac].xmja005 TO xmja005              #
            CALL adbt500_xmja005_ref()
            NEXT FIELD xmja005                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja006
            #add-point:ON ACTION controlp INFIELD xmja006 name="input.c.page4.xmja006"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmja006             #給予default值

            #給予arg
            
            CALL q_oodb002_2()                                #呼叫開窗

            LET g_xmdc4_d[l_ac].xmja006 = g_qryparam.return1              

            DISPLAY g_xmdc4_d[l_ac].xmja006 TO xmja006              #
            CALL s_desc_get_tax_desc1(g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja006) RETURNING g_xmdc4_d[l_ac].xmja006_desc
            NEXT FIELD xmja006                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja006_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja006_desc
            #add-point:ON ACTION controlp INFIELD xmja006_desc name="input.c.page4.xmja006_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja007
            #add-point:ON ACTION controlp INFIELD xmja007 name="input.c.page4.xmja007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja011
            #add-point:ON ACTION controlp INFIELD xmja011 name="input.c.page4.xmja011"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmja011             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmdc4_d[l_ac].xmja003
            CALL q_imao002()                                #呼叫開窗

            LET g_xmdc4_d[l_ac].xmja011 = g_qryparam.return1              

            DISPLAY g_xmdc4_d[l_ac].xmja011 TO xmja011              #
            CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja011) RETURNING g_xmdc4_d[l_ac].xmja011_desc
            NEXT FIELD xmja011                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja012
            #add-point:ON ACTION controlp INFIELD xmja012 name="input.c.page4.xmja012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja013
            #add-point:ON ACTION controlp INFIELD xmja013 name="input.c.page4.xmja013"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmja013             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmdc4_d[l_ac].xmja003
            CALL q_imao002()                                #呼叫開窗

            LET g_xmdc4_d[l_ac].xmja013 = g_qryparam.return1              

            DISPLAY g_xmdc4_d[l_ac].xmja013 TO xmja013              #
            CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja013) RETURNING g_xmdc4_d[l_ac].xmja013_desc
            NEXT FIELD xmja013                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja014
            #add-point:ON ACTION controlp INFIELD xmja014 name="input.c.page4.xmja014"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja015
            #add-point:ON ACTION controlp INFIELD xmja015 name="input.c.page4.xmja015"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmja015             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmdc4_d[l_ac].xmja003
            CALL q_imao002()                                #呼叫開窗

            LET g_xmdc4_d[l_ac].xmja015 = g_qryparam.return1              

            DISPLAY g_xmdc4_d[l_ac].xmja015 TO xmja015              #
            CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja015) RETURNING g_xmdc4_d[l_ac].xmja015_desc
            NEXT FIELD xmja015                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja016
            #add-point:ON ACTION controlp INFIELD xmja016 name="input.c.page4.xmja016"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja017
            #add-point:ON ACTION controlp INFIELD xmja017 name="input.c.page4.xmja017"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmja017             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmdc4_d[l_ac].xmja003
            CALL q_imao002()                                #呼叫開窗

            LET g_xmdc4_d[l_ac].xmja017 = g_qryparam.return1              

            DISPLAY g_xmdc4_d[l_ac].xmja017 TO xmja017              #
            CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja017) RETURNING g_xmdc4_d[l_ac].xmja017_desc
            NEXT FIELD xmja017                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja018
            #add-point:ON ACTION controlp INFIELD xmja018 name="input.c.page4.xmja018"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja008
            #add-point:ON ACTION controlp INFIELD xmja008 name="input.c.page4.xmja008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja009
            #add-point:ON ACTION controlp INFIELD xmja009 name="input.c.page4.xmja009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja010
            #add-point:ON ACTION controlp INFIELD xmja010 name="input.c.page4.xmja010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja022
            #add-point:ON ACTION controlp INFIELD xmja022 name="input.c.page4.xmja022"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja019
            #add-point:ON ACTION controlp INFIELD xmja019 name="input.c.page4.xmja019"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja020
            #add-point:ON ACTION controlp INFIELD xmja020 name="input.c.page4.xmja020"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja021
            #add-point:ON ACTION controlp INFIELD xmja021 name="input.c.page4.xmja021"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.l_imaa116
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_imaa116
            #add-point:ON ACTION controlp INFIELD l_imaa116 name="input.c.page4.l_imaa116"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.l_diaopai
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_diaopai
            #add-point:ON ACTION controlp INFIELD l_diaopai name="input.c.page4.l_diaopai"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.l_rate
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_rate
            #add-point:ON ACTION controlp INFIELD l_rate name="input.c.page4.l_rate"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja024
            #add-point:ON ACTION controlp INFIELD xmja024 name="input.c.page4.xmja024"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmja024             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmda_m.xmda004
            CALL q_pmaa001_22()                                #呼叫開窗

            LET g_xmdc4_d[l_ac].xmja024 = g_qryparam.return1              

            DISPLAY g_xmdc4_d[l_ac].xmja024 TO xmja024              #
            CALL s_desc_get_trading_partner_abbr_desc(g_xmdc4_d[l_ac].xmja024) RETURNING g_xmdc4_d[l_ac].xmja024_desc
            NEXT FIELD xmja024                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja025
            #add-point:ON ACTION controlp INFIELD xmja025 name="input.c.page4.xmja025"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja026
            #add-point:ON ACTION controlp INFIELD xmja026 name="input.c.page4.xmja026"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmja026             #給予default值
            
            #給予arg
            CALL adbt500_get_pmaa027(g_xmdc4_d[l_ac].xmja025) RETURNING l_pmaa027_1
            LET g_qryparam.arg1 = l_pmaa027_1

            
            CALL q_oofb019()                                #呼叫開窗

            LET g_xmdc4_d[l_ac].xmja026 = g_qryparam.return1              

            DISPLAY g_xmdc4_d[l_ac].xmja026 TO xmja026              #
            CALL adbt500_xmja026_ref()
            NEXT FIELD xmja026                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja026_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja026_desc
            #add-point:ON ACTION controlp INFIELD xmja026_desc name="input.c.page4.xmja026_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja029
            #add-point:ON ACTION controlp INFIELD xmja029 name="input.c.page4.xmja029"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja030
            #add-point:ON ACTION controlp INFIELD xmja030 name="input.c.page4.xmja030"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja031
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja031
            #add-point:ON ACTION controlp INFIELD xmja031 name="input.c.page4.xmja031"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja032
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja032
            #add-point:ON ACTION controlp INFIELD xmja032 name="input.c.page4.xmja032"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja040
            #add-point:ON ACTION controlp INFIELD xmja040 name="input.c.page4.xmja040"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmja040             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "1"  
            CALL q_dbaa001_1()                                #呼叫開窗
            LET g_xmdc4_d[l_ac].xmja040 = g_qryparam.return1              
            DISPLAY g_xmdc4_d[l_ac].xmja040 TO xmja040              #
            CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja040) RETURNING g_xmdc4_d[l_ac].xmja040_desc
            DISPLAY BY NAME g_xmdc4_d[l_ac].xmja040_desc
            NEXT FIELD xmja040                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja039
            #add-point:ON ACTION controlp INFIELD xmja039 name="input.c.page4.xmja039"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmja039             #給予default值

            IF NOT cl_null( g_xmdc4_d[l_ac].xmja040) THEN
               LET g_qryparam.arg1 = "2"
               LET g_qryparam.arg2 =  g_xmdc4_d[l_ac].xmja040
               CALL q_dbaa001_2()                                #呼叫開窗
            ELSE
               LET g_qryparam.arg1 = "2"
               CALL q_dbaa001_1()                                #呼叫開窗
            END IF 
            LET g_xmdc4_d[l_ac].xmja039 = g_qryparam.return1              
            DISPLAY g_xmdc4_d[l_ac].xmja039 TO xmja039              #
            CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja039) RETURNING g_xmdc4_d[l_ac].xmja039_desc
            DISPLAY BY NAME g_xmdc4_d[l_ac].xmja039_desc
            NEXT FIELD xmja039                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja038
            #add-point:ON ACTION controlp INFIELD xmja038 name="input.c.page4.xmja038"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmja038             #給予default值
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja039) THEN
               LET g_qryparam.arg1 = "3"
               LET g_qryparam.arg2 = g_xmdc4_d[l_ac].xmja039
               CALL q_dbaa001_2()                                #呼叫開窗
            ELSE
               LET g_qryparam.arg1 = "3"
               CALL q_dbaa001_1()                                #呼叫開窗
            END IF

            LET g_xmdc4_d[l_ac].xmja038 = g_qryparam.return1              
            DISPLAY g_xmdc4_d[l_ac].xmja038 TO xmja038              #
            CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja038) RETURNING g_xmdc4_d[l_ac].xmja038_desc
            DISPLAY BY NAME g_xmdc4_d[l_ac].xmja038_desc
            NEXT FIELD xmja038                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja037
            #add-point:ON ACTION controlp INFIELD xmja037 name="input.c.page4.xmja037"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc4_d[l_ac].xmja037             #給予default值
            IF NOT cl_null(g_xmdc4_d[l_ac].xmja038) THEN
               LET g_qryparam.arg1 = "4"
               LET g_qryparam.arg2 = g_xmdc4_d[l_ac].xmja038
               CALL q_dbaa001_2()                                #呼叫開窗
            ELSE
               LET g_qryparam.arg1 = "4"
               CALL q_dbaa001_1()                                #呼叫開窗
            END IF

            LET g_xmdc4_d[l_ac].xmja037 = g_qryparam.return1              
            DISPLAY g_xmdc4_d[l_ac].xmja037 TO xmja037              #
            CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja037) RETURNING g_xmdc4_d[l_ac].xmja037_desc
            DISPLAY BY NAME g_xmdc4_d[l_ac].xmja037_desc
            NEXT FIELD xmja037                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page4.xmja034
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmja034
            #add-point:ON ACTION controlp INFIELD xmja034 name="input.c.page4.xmja034"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row name="input.body4.after_row"
            IF NOT INT_FLAG THEN
               LET l_ac = ARR_CURR()
               IF (l_cmd='u' AND l_delete = FALSE) OR (l_cmd='a' AND l_insert = FALSE) THEN
                  
                  
                  CALL adbt500_gen_xmdf(1, g_xmdc4_d[l_ac].xmjaseq, g_xmdc4_d_t.xmjaseq,g_xmdc4_d[l_ac].xmjasite,
                                    g_xmdc4_d[l_ac].xmja003, g_xmdc4_d[l_ac].xmja004,g_xmdc4_d[l_ac].xmja014,
                                    g_xmdc4_d[l_ac].xmja018, g_xmdc4_d[l_ac].xmja025,g_xmdc4_d[l_ac].xmja030,
                                    g_xmdc4_d[l_ac].xmja031, g_xmdc4_d[l_ac].xmja032,g_xmdc4_d[l_ac].xmja037,
                                    g_xmdc4_d[l_ac].xmja038, g_xmdc4_d[l_ac].xmja039,g_xmdc4_d[l_ac].xmja040) RETURNING l_success
                  
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "xmdf_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_xmdc4_d[l_ac].* = g_xmdc4_d_t.*
                     CALL s_transaction_end('N','0')
                  END IF
               END IF
            END IF
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmdc4_d[l_ac].* = g_xmdc4_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE adbt500_bcl4
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL adbt500_unlock_b("xmja_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2 name="input.body4.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body4.after_input"
            #160601-00027#1 160606 by lori add---(S)
            #重新計算整單的未稅、含稅總金額
            IF NOT cl_null(g_xmda_m.xmdadocno) THEN
               CALL s_transaction_begin()
               #160707-00009#1 20160707 add by beckxie---S
               #若单身存在返物资料，则不重取促销价
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM xmja_t
                WHERE xmjaent = g_enterprise
                  AND xmjadocno = g_xmda_m.xmdadocno
                  AND xmja001 = '2'
               IF l_cnt = 0 THEN
                  CALL s_get_price_adb('1',g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt,g_xmdc4_d[l_ac].xmjaseq,g_xmda_m.xmda004,g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja017,g_xmdc4_d[l_ac].xmja018,g_xmda_m.xmda015,g_xmdc4_d[l_ac].xmja006,'2')
                     RETURNING l_success,l_xmja008,l_xmja009,l_xmja010,l_xmja022  
               END IF
               CALL adbt500_b_fill()
               CALL adbt500_get_price() 
               CALL s_adbt500_get_amounts(g_xmda_m.xmdadocno,g_xmdc4_d[l_ac].xmjaseq,g_xmdc4_d[l_ac].xmjasite,g_xmda_m.xmda015,g_xmda_m.xmda016,
                                          g_xmdc4_d[l_ac].xmja006,g_xmdc4_d[l_ac].xmja021,g_xmdc4_d[l_ac].xmja018)
               RETURNING g_xmdc4_d[l_ac].xmja019,g_xmdc4_d[l_ac].xmja020,g_xmdc4_d[l_ac].xmja021
               #160707-00009#1 20160707 add by beckxie---E
               CALL s_tax_recount(g_xmda_m.xmdadocno)
                 RETURNING g_xmda_m.xmda041,g_xmda_m.xmda043,g_xmda_m.xmda042,l_xrcd113,l_xrcd114,l_xrcd115
               IF cl_null(g_xmda_m.xmda041) THEN
                  LET g_xmda_m.xmda041 = 0
               END IF
               IF cl_null(g_xmda_m.xmda042) THEN
                  LET g_xmda_m.xmda042 = 0
               END IF
               IF cl_null(g_xmda_m.xmda043) THEN
                  LET g_xmda_m.xmda043 = 0
               END IF
               UPDATE xmda_t SET xmda041 = g_xmda_m.xmda041,
                                 xmda042 = g_xmda_m.xmda042,
                                 xmda043 = g_xmda_m.xmda043
                 WHERE xmdaent = g_enterprise AND xmdadocno = g_xmdadocno_t
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "xmda_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
            
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            END IF            
            #160601-00027#1 160606 by lori add---(E)
            
            #160707-00009#1 20160707 mark by beckxie---S
            ##若单身存在返物资料，则不重取促销价
            #LET l_cnt = 0
            #SELECT COUNT(*) INTO l_cnt
            #  FROM xmja_t
            # WHERE xmjaent = g_enterprise
            #   AND xmjadocno = g_xmda_m.xmdadocno
            #   AND xmja001 = '2'
            #IF l_cnt = 0 THEN
            #   CALL s_get_price_adb('1',g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt,g_xmdc4_d[l_ac].xmjaseq,g_xmda_m.xmda004,g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja017,g_xmdc4_d[l_ac].xmja018,g_xmda_m.xmda015,g_xmdc4_d[l_ac].xmja006,'2')
            #      RETURNING l_success,l_xmja008,l_xmja009,l_xmja010,l_xmja022  
            #END IF
            #CALL adbt500_b_fill()
            #160707-00009#1 20160707 mark by beckxie---E
            
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmdc4_d[li_reproduce_target].* = g_xmdc4_d[li_reproduce].*
 
               LET g_xmdc4_d[li_reproduce_target].xmjaseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmdc4_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmdc4_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_xmdc5_d FROM s_detail5.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = FALSE,
                 APPEND ROW = FALSE)
                 
         #自訂ACTION(detail_input,page_5)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body5.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmdc5_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adbt500_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_xmdc5_d.getLength()
            #add-point:資料輸入前 name="input.body5.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmdc5_d[l_ac].* TO NULL 
            INITIALIZE g_xmdc5_d_t.* TO NULL 
            INITIALIZE g_xmdc5_d_o.* TO NULL 
            #公用欄位給值(單身5)
            
            #自定義預設值(單身5)
                  LET g_xmdc5_d[l_ac].xmdb001 = "1"
      LET g_xmdc5_d[l_ac].xmdb016 = "2"
      LET g_xmdc5_d[l_ac].xmdb017 = "1"
      LET g_xmdc5_d[l_ac].xmdb200 = "0"
 
            #add-point:modify段before備份 name="input.body5.insert.before_bak"
            
            #end add-point
            LET g_xmdc5_d_t.* = g_xmdc5_d[l_ac].*     #新輸入資料
            LET g_xmdc5_d_o.* = g_xmdc5_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adbt500_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body5.insert.after_set_entry_b"
            
            #end add-point
            CALL adbt500_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xmdc5_d[li_reproduce_target].* = g_xmdc5_d[li_reproduce].*
 
               LET g_xmdc5_d[li_reproduce_target].xmdb001 = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body5.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body5.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[5] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 5
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adbt500_cl USING g_enterprise,g_xmda_m.xmdadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adbt500_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE adbt500_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_xmdc5_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmdc5_d[l_ac].xmdb001 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_xmdc5_d_t.* = g_xmdc5_d[l_ac].*  #BACKUP
               LET g_xmdc5_d_o.* = g_xmdc5_d[l_ac].*  #BACKUP
               CALL adbt500_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body5.after_set_entry_b"
               
               #end add-point  
               CALL adbt500_set_no_entry_b(l_cmd)
               IF NOT adbt500_lock_b("xmdb_t","'5'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adbt500_bcl5 INTO g_xmdc5_d[l_ac].xmdbsite,g_xmdc5_d[l_ac].xmdb001,g_xmdc5_d[l_ac].xmdb002, 
                      g_xmdc5_d[l_ac].xmdb003,g_xmdc5_d[l_ac].xmdb004,g_xmdc5_d[l_ac].xmdb005,g_xmdc5_d[l_ac].xmdb006, 
                      g_xmdc5_d[l_ac].xmdb016,g_xmdc5_d[l_ac].xmdb017,g_xmdc5_d[l_ac].xmdb007,g_xmdc5_d[l_ac].xmdb008, 
                      g_xmdc5_d[l_ac].xmdb009,g_xmdc5_d[l_ac].xmdb200
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_xmdc5_d_mask_o[l_ac].* =  g_xmdc5_d[l_ac].*
                  CALL adbt500_xmdb_t_mask()
                  LET g_xmdc5_d_mask_n[l_ac].* =  g_xmdc5_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL adbt500_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body5.before_row"
                                                                        
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body5.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body5.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身5刪除前 name="input.body5.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xmda_m.xmdadocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmdc5_d_t.xmdb001
            
               #刪除同層單身
               IF NOT adbt500_delete_b('xmdb_t',gs_keys,"'5'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adbt500_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT adbt500_key_delete_b(gs_keys,'xmdb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adbt500_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身5刪除中 name="input.body5.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE adbt500_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身5刪除後 name="input.body5.a_delete"
               
               #end add-point
               LET l_count = g_xmdc_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body5.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_xmdc5_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身5新增前 name="input.body5.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xmdb_t 
             WHERE xmdbent = g_enterprise AND xmdbdocno = g_xmda_m.xmdadocno
               AND xmdb001 = g_xmdc5_d[l_ac].xmdb001
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身5新增前 name="input.body5.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys[2] = g_xmdc5_d[g_detail_idx].xmdb001
               CALL adbt500_insert_b('xmdb_t',gs_keys,"'5'")
                           
               #add-point:單身新增後5 name="input.body5.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_xmdc_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xmdb_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adbt500_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body5.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_xmdc5_d[l_ac].* = g_xmdc5_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE adbt500_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_xmdc5_d[l_ac].* = g_xmdc5_d_t.*
            ELSE
               #add-point:單身page5修改前 name="input.body5.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身5)
               
               
               #將遮罩欄位還原
               CALL adbt500_xmdb_t_mask_restore('restore_mask_o')
                              
               UPDATE xmdb_t SET (xmdbdocno,xmdbsite,xmdb001,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006, 
                   xmdb016,xmdb017,xmdb007,xmdb008,xmdb009,xmdb200) = (g_xmda_m.xmdadocno,g_xmdc5_d[l_ac].xmdbsite, 
                   g_xmdc5_d[l_ac].xmdb001,g_xmdc5_d[l_ac].xmdb002,g_xmdc5_d[l_ac].xmdb003,g_xmdc5_d[l_ac].xmdb004, 
                   g_xmdc5_d[l_ac].xmdb005,g_xmdc5_d[l_ac].xmdb006,g_xmdc5_d[l_ac].xmdb016,g_xmdc5_d[l_ac].xmdb017, 
                   g_xmdc5_d[l_ac].xmdb007,g_xmdc5_d[l_ac].xmdb008,g_xmdc5_d[l_ac].xmdb009,g_xmdc5_d[l_ac].xmdb200)  
                   #自訂欄位頁簽
                WHERE xmdbent = g_enterprise AND xmdbdocno = g_xmda_m.xmdadocno
                  AND xmdb001 = g_xmdc5_d_t.xmdb001 #項次 
                  
               #add-point:單身page5修改中 name="input.body5.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_xmdc5_d[l_ac].* = g_xmdc5_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdb_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_xmdc5_d[l_ac].* = g_xmdc5_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xmdb_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xmda_m.xmdadocno
               LET gs_keys_bak[1] = g_xmdadocno_t
               LET gs_keys[2] = g_xmdc5_d[g_detail_idx].xmdb001
               LET gs_keys_bak[2] = g_xmdc5_d_t.xmdb001
               CALL adbt500_update_b('xmdb_t',gs_keys,gs_keys_bak,"'5'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL adbt500_xmdb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_xmdc5_d[g_detail_idx].xmdb001 = g_xmdc5_d_t.xmdb001 
                  ) THEN
                  LET gs_keys[01] = g_xmda_m.xmdadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xmdc5_d_t.xmdb001
                  CALL adbt500_key_update_b(gs_keys,'xmdb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc5_d_t)
               LET g_log2 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc5_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page5修改後 name="input.body5.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xmdb200
            #add-point:BEFORE FIELD xmdb200 name="input.b.page5.xmdb200"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xmdb200
            
            #add-point:AFTER FIELD xmdb200 name="input.a.page5.xmdb200"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xmdb200
            #add-point:ON CHANGE xmdb200 name="input.g.page5.xmdb200"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page5.xmdb200
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xmdb200
            #add-point:ON ACTION controlp INFIELD xmdb200 name="input.c.page5.xmdb200"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page5 after_row name="input.body5.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmdc5_d[l_ac].* = g_xmdc5_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE adbt500_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL adbt500_unlock_b("xmdb_t","'5'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page5 after_row2 name="input.body5.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body5.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_xmdc5_d[li_reproduce_target].* = g_xmdc5_d[li_reproduce].*
 
               LET g_xmdc5_d[li_reproduce_target].xmdb001 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_xmdc5_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_xmdc5_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
      DISPLAY ARRAY g_xmdc2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL adbt500_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx = l_ac
            
            #add-point:page2, before row動作 name="input.body2.before_row"
                                                                        
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL adbt500_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為 name="input.body2.action"
         
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_xmdc3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL adbt500_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            LET g_detail_idx = l_ac
            
            #add-point:page3, before row動作 name="input.body3.before_row"
                                                                        
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            CALL adbt500_idx_chk()
            LET g_current_page = 3
      
         #add-point:page3自定義行為 name="input.body3.action"
         CALL adbt500_b_fill() 
         CALL adbt500_show()
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_xmdc6_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL adbt500_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail6")
            LET g_detail_idx = l_ac
            
            #add-point:page6, before row動作 name="input.body6.before_row"
            
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail6")
            CALL adbt500_idx_chk()
            LET g_current_page = 6
      
         #add-point:page6自定義行為 name="input.body6.action"
            CALL adbt500_b_fill() 
            CALL adbt500_show()
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_xmdc7_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL adbt500_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail7")
            LET g_detail_idx = l_ac
            
            #add-point:page7, before row動作 name="input.body7.before_row"
            
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'7',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail7")
            CALL adbt500_idx_chk()
            LET g_current_page = 7
      
         #add-point:page7自定義行為 name="input.body7.action"
         
         #end add-point
      
      END DISPLAY
 
 
 
{</section>}
 
{<section id="adbt500.input.other" >}
      
      #add-point:自定義input name="input.more_input"
        
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
                               
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'2',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue("'3',"))
         CALL DIALOG.setCurrentRow("s_detail4",g_idx_group.getValue("'4',"))
         CALL DIALOG.setCurrentRow("s_detail5",g_idx_group.getValue("'5',"))
         CALL DIALOG.setCurrentRow("s_detail6",g_idx_group.getValue("'6',"))
         CALL DIALOG.setCurrentRow("s_detail7",g_idx_group.getValue("'7',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            NEXT FIELD xmdasite
            #end add-point  
            NEXT FIELD xmdadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xmdcsite
               WHEN "s_detail2"
                  NEXT FIELD rticseq
               WHEN "s_detail3"
                  NEXT FIELD xmdddocno
               WHEN "s_detail4"
                  NEXT FIELD xmjaunit
               WHEN "s_detail5"
                  NEXT FIELD xmdbsite
               WHEN "s_detail6"
                  NEXT FIELD xrcdseq
               WHEN "s_detail7"
                  NEXT FIELD rtieseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
         LET g_detail_idx_list[6] = 1
         LET g_detail_idx_list[7] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
         CALL g_curr_diag.setCurrentRow("s_detail6",1)
         CALL g_curr_diag.setCurrentRow("s_detail7",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
         LET g_detail_idx_list[6] = 1
         LET g_detail_idx_list[7] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
         CALL g_curr_diag.setCurrentRow("s_detail6",1)
         CALL g_curr_diag.setCurrentRow("s_detail7",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   #160601-00027#1 160606 by lori mark---(S)
   #重新計算整單的未稅、含稅總金額
   #IF NOT cl_null(g_xmda_m.xmdadocno) THEN
   #   CALL s_transaction_begin()
   #   CALL s_tax_recount(g_xmda_m.xmdadocno)
   #     RETURNING g_xmda_m.xmda041,g_xmda_m.xmda043,g_xmda_m.xmda042,l_xrcd113,l_xrcd114,l_xrcd115
   #   IF cl_null(g_xmda_m.xmda041) THEN
   #      LET g_xmda_m.xmda041 = 0
   #   END IF
   #   IF cl_null(g_xmda_m.xmda042) THEN
   #      LET g_xmda_m.xmda042 = 0
   #   END IF
   #   IF cl_null(g_xmda_m.xmda043) THEN
   #      LET g_xmda_m.xmda043 = 0
   #   END IF        
   #   UPDATE xmda_t SET xmda041 = g_xmda_m.xmda041,
   #                     xmda042 = g_xmda_m.xmda042,
   #                     xmda043 = g_xmda_m.xmda043
   #     WHERE xmdaent = g_enterprise AND xmdadocno = g_xmdadocno_t  
   #   IF SQLCA.sqlcode THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = SQLCA.sqlcode
   #      LET g_errparam.extend = "xmda_t"
   #      LET g_errparam.popup = TRUE
   #      CALL cl_err()
   #
   #      CALL s_transaction_end('N','0')
   #      RETURN
   #   ELSE
   #      CALL s_transaction_end('Y','0')
   #   END IF                  
   #END IF  
   #160601-00027#1 160606 by lori mark---(E)   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="adbt500.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION adbt500_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_pmaa027 LIKE pmaa_t.pmaa027
   DEFINE l_success LIKE type_t.num5 
   DEFINE l_address STRING   
   DEFINE l_oofb011 LIKE oofb_t.oofb011
   DEFINE l_sql     STRING
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
 
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL adbt500_b_fill() #單身填充
      CALL adbt500_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL adbt500_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   CALL s_desc_get_tax_desc1(g_xmda_m.xmdasite,g_xmda_m.xmda011) RETURNING g_xmda_m.xmda011_desc
   DISPLAY BY NAME g_xmda_m.xmda011_desc

   CALL s_desc_get_invoice_type_desc1(g_xmda_m.xmdasite,g_xmda_m.xmda035) RETURNING g_xmda_m.xmda035_desc
   DISPLAY BY NAME g_xmda_m.xmda035_desc

   LET l_pmaa027 = ''
   LET g_xmda_m.xmda026_desc = ''
   LET g_xmda_m.oofb017_1 = ''
   IF NOT cl_null(g_xmda_m.xmda021) AND NOT cl_null(g_xmda_m.xmda026) THEN 
       CALL s_adb_address_ref('5',g_xmda_m.xmda026,g_xmda_m.xmda021)
          RETURNING l_oofb011,l_address
       LET g_xmda_m.xmda026_desc = l_oofb011
       LET g_xmda_m.oofb017_1 = l_address    
   END IF
   DISPLAY BY NAME g_xmda_m.xmda026_desc,g_xmda_m.oofb017_1

   LET l_pmaa027 = ''
   LET g_xmda_m.xmda025_desc = ''
   LET g_xmda_m.oofb017 = ''
   IF NOT cl_null(g_xmda_m.xmda022) AND NOT cl_null(g_xmda_m.xmda025) THEN   
      CALL s_adb_address_ref('3',g_xmda_m.xmda025,g_xmda_m.xmda022)
         RETURNING l_oofb011,l_address
      LET g_xmda_m.xmda025_desc = l_oofb011
      LET g_xmda_m.oofb017 = l_address
   END IF
   DISPLAY BY NAME g_xmda_m.xmda025_desc,g_xmda_m.oofb017
 
   CALL adbt500_get_isaf011()
   #end add-point
   
   #遮罩相關處理
   LET g_xmda_m_mask_o.* =  g_xmda_m.*
   CALL adbt500_xmda_t_mask()
   LET g_xmda_m_mask_n.* =  g_xmda_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xmda_m.xmdasite,g_xmda_m.xmdasite_desc,g_xmda_m.xmdadocdt,g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
       g_xmda_m.xmdadocno_desc,g_xmda_m.xmda005,g_xmda_m.xmda202,g_xmda_m.xmda202_desc,g_xmda_m.xmda023, 
       g_xmda_m.xmda023_desc,g_xmda_m.xmda004,g_xmda_m.xmda004_desc,g_xmda_m.xmda200,g_xmda_m.xmda200_desc, 
       g_xmda_m.xmda201,g_xmda_m.xmda201_desc,g_xmda_m.xmdastus,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda021, 
       g_xmda_m.xmda021_desc,g_xmda_m.xmda022,g_xmda_m.xmda022_desc,g_xmda_m.xmda203,g_xmda_m.xmda203_desc, 
       g_xmda_m.xmda027,g_xmda_m.xmda027_desc,g_xmda_m.xmda024,g_xmda_m.xmda024_desc,g_xmda_m.xmda002, 
       g_xmda_m.xmda002_desc,g_xmda_m.xmda003,g_xmda_m.xmda003_desc,g_xmda_m.xmdaunit,g_xmda_m.xmdaunit_desc, 
       g_xmda_m.xmda211,g_xmda_m.xmda211_desc,g_xmda_m.xmda210,g_xmda_m.xmda210_desc,g_xmda_m.xmda209, 
       g_xmda_m.xmda209_desc,g_xmda_m.xmda208,g_xmda_m.xmda208_desc,g_xmda_m.xmda204,g_xmda_m.xmda204_desc, 
       g_xmda_m.xmda205,g_xmda_m.xmda032,g_xmda_m.xmda032_desc,g_xmda_m.xmda071,g_xmda_m.xmda025,g_xmda_m.xmda025_desc, 
       g_xmda_m.oofb017,g_xmda_m.xmda026,g_xmda_m.xmda026_desc,g_xmda_m.oofb017_1,g_xmda_m.xmda206,g_xmda_m.xmda206_desc, 
       g_xmda_m.xmda207,g_xmda_m.xmda207_desc,g_xmda_m.xmda020,g_xmda_m.xmda020_desc,g_xmda_m.xmda036, 
       g_xmda_m.xmda036_desc,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda009,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda015,g_xmda_m.xmda015_desc,g_xmda_m.xmda016, 
       g_xmda_m.xmda011,g_xmda_m.xmda011_desc,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc, 
       g_xmda_m.isaf011,g_xmda_m.xmda213,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid, 
       g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc, 
       g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc, 
       g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmdacnfdt,g_xmda_m.xmda034, 
       g_xmda_m.xmda034_desc,g_xmda_m.xmda006,g_xmda_m.xmda033,g_xmda_m.xmda017,g_xmda_m.xmda017_desc, 
       g_xmda_m.xmda019,g_xmda_m.xmda018,g_xmda_m.xmda018_desc,g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045, 
       g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmda_m.xmdastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xmdc_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
 
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_xmdc2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
 
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdc3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdc4_d.getLength()
      #add-point:show段單身reference name="show.body4.reference"
 
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdc5_d.getLength()
      #add-point:show段單身reference name="show.body5.reference"
                                    
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdc6_d.getLength()
      #add-point:show段單身reference name="show.body6.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_xmdc7_d.getLength()
      #add-point:show段單身reference name="show.body7.reference"
 
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
        
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL adbt500_detail_show()
 
   #add-point:show段之後 name="show.after"
   #CALL adbt500_comp_visible_b()   #160513-00027#1 20160520 mark by beckxie
   #160513-00027#1 20160520 add by beckxie---S
   CALL adbt500_set_comp_visible_b()
   CALL adbt500_set_comp_no_visible_b()
   #160513-00027#1 20160520 add by beckxie---E
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION adbt500_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
                  
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
 
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
                  
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION adbt500_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE xmda_t.xmdadocno 
   DEFINE l_oldno     LIKE xmda_t.xmdadocno 
 
   DEFINE l_master    RECORD LIKE xmda_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE xmdc_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE rtic_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE xmdd_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE xmja_t.* #此變數樣板目前無使用
 
   DEFINE l_detail5    RECORD LIKE xmdb_t.* #此變數樣板目前無使用
 
   DEFINE l_detail6    RECORD LIKE xrcd_t.* #此變數樣板目前無使用
 
   DEFINE l_detail7    RECORD LIKE rtie_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_doctype     LIKE rtai_t.rtai004  
   DEFINE l_insert      LIKE type_t.num5          
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_xmda_m.xmdadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
    
   LET g_xmda_m.xmdadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xmda_m.xmdaownid = g_user
      LET g_xmda_m.xmdaowndp = g_dept
      LET g_xmda_m.xmdacrtid = g_user
      LET g_xmda_m.xmdacrtdp = g_dept 
      LET g_xmda_m.xmdacrtdt = cl_get_current()
      LET g_xmda_m.xmdamodid = g_user
      LET g_xmda_m.xmdamoddt = cl_get_current()
      LET g_xmda_m.xmdastus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   LET g_xmda_m.xmdastus = 'N' 
   LET g_xmda_m.xmda002 = g_user
   LET g_xmda_m.xmda003 = g_dept
   LET g_xmda_m.xmdadocdt = g_today
   LET g_xmda_m.xmdacnfid = ""
   LET g_xmda_m.xmdacnfdt = ""
   LET g_xmda_m.xmda001 = '0'
   LET g_xmda_m.xmda213 = 'N'
   CALL s_aooi500_default(g_prog,'xmdasite',g_xmda_m.xmdasite) RETURNING l_insert,g_xmda_m.xmdasite
   IF NOT l_insert THEN
      RETURN
   END IF
   CALL s_desc_get_person_desc(g_xmda_m.xmda002) RETURNING g_xmda_m.xmda002_desc
   DISPLAY BY NAME g_xmda_m.xmda002_desc     
   LET g_xmda_m.xmda003 = g_dept
   CALL s_desc_get_department_desc(g_xmda_m.xmda003) RETURNING g_xmda_m.xmda003_desc
   DISPLAY BY NAME g_xmda_m.xmda003_desc
   #預設單據的單別 
   LET l_success = ''
   LET l_doctype = ''
   CALL s_arti200_get_def_doc_type(g_xmda_m.xmdasite,g_prog,'1')
        RETURNING l_success, l_doctype
   LET g_xmda_m.xmdadocno = l_doctype
   LET g_xmda_m_t.* = g_xmda_m.*              #舊值備份 
   LET g_xmda_m_o.* = g_xmda_m.*
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xmda_m.xmdastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
      LET g_xmda_m.xmdadocno_desc = ''
   DISPLAY BY NAME g_xmda_m.xmdadocno_desc
 
   
   CALL adbt500_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_xmda_m.* TO NULL
      INITIALIZE g_xmdc_d TO NULL
      INITIALIZE g_xmdc2_d TO NULL
      INITIALIZE g_xmdc3_d TO NULL
      INITIALIZE g_xmdc4_d TO NULL
      INITIALIZE g_xmdc5_d TO NULL
      INITIALIZE g_xmdc6_d TO NULL
      INITIALIZE g_xmdc7_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      INITIALIZE g_xmdc8_d TO NULL  #160513-00033#4

      #end add-point
      CALL adbt500_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adbt500_set_act_visible()   
   CALL adbt500_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " xmdaent = " ||g_enterprise|| " AND",
                      " xmdadocno = '", g_xmda_m.xmdadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL adbt500_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
                  
   #end add-point
   
   CALL adbt500_idx_chk()
   
   LET g_data_owner = g_xmda_m.xmdaownid      
   LET g_data_dept  = g_xmda_m.xmdaowndp
   
   #功能已完成,通報訊息中心
   CALL adbt500_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="adbt500.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION adbt500_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xmdc_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE rtic_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE xmdd_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE xmja_t.* #此變數樣板目前無使用
 
   DEFINE l_detail5    RECORD LIKE xmdb_t.* #此變數樣板目前無使用
 
   DEFINE l_detail6    RECORD LIKE xrcd_t.* #此變數樣板目前無使用
 
   DEFINE l_detail7    RECORD LIKE rtie_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
                  
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE adbt500_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
                  
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmdc_t
    WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmdadocno_t
 
    INTO TEMP adbt500_detail
 
   #將key修正為調整後   
   UPDATE adbt500_detail 
      #更新key欄位
      SET xmdcdocno = g_xmda_m.xmdadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   DELETE FROM adbt500_detail WHERE xmdcdocno = g_xmda_m.xmdadocno AND xmdcseq > 9000   #160825-00030#1 160831 by lori add
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO xmdc_t SELECT * FROM adbt500_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
 
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adbt500_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
                  
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
                  
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtic_t 
    WHERE rticent = g_enterprise AND rticdocno = g_xmdadocno_t
 
    INTO TEMP adbt500_detail
 
   #將key修正為調整後   
   UPDATE adbt500_detail SET rticdocno = g_xmda_m.xmdadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtic_t SELECT * FROM adbt500_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
 
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adbt500_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
                  
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table3.b_insert"
                  
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmdd_t 
    WHERE xmddent = g_enterprise AND xmdddocno = g_xmdadocno_t
 
    INTO TEMP adbt500_detail
 
   #將key修正為調整後   
   UPDATE adbt500_detail SET xmdddocno = g_xmda_m.xmdadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table3.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmdd_t SELECT * FROM adbt500_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table3.m_insert"
   UPDATE xmdd_t
      SET xmdd014 = 0,
          xmdd015 = 0,
          xmdd016 = 0,
          xmdd031 = 0,
          xmdd034 = 0
    WHERE xmddent = g_enterprise
      AND xmdddocno = g_xmda_m.xmdadocno
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adbt500_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table3.a_insert"
   #161129-00027#1 add by cheng ---s---
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE adbt500_detail AS ",
      "SELECT * FROM xmdf_t "
   PREPARE repro_tbl6_1 FROM ls_sql
   EXECUTE repro_tbl6_1
   FREE repro_tbl6_1
      
   INSERT INTO adbt500_detail SELECT * FROM xmdf_t
                                         WHERE xmdfent = g_enterprise AND xmdfdocno = g_xmdadocno_t
  
   UPDATE adbt500_detail SET xmdfdocno = g_xmda_m.xmdadocno
 
   INSERT INTO xmdf_t SELECT * FROM adbt500_detail
   
   DROP TABLE adbt500_detail
   

   #161129-00027#1 add by cheng ---e---                 
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table4.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmja_t 
    WHERE xmjaent = g_enterprise AND xmjadocno = g_xmdadocno_t
 
    INTO TEMP adbt500_detail
 
   #將key修正為調整後   
   UPDATE adbt500_detail SET xmjadocno = g_xmda_m.xmdadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table4.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmja_t SELECT * FROM adbt500_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table4.m_insert"
   CALL adbt500_xmja_init() 
   UPDATE xmdb_t
      SET xmdb008 = 0,
          xmdb009 = 0
    WHERE xmdbent = g_enterprise
      AND xmdbdocno = g_xmda_m.xmdadocno
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adbt500_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table4.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table5.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xmdb_t 
    WHERE xmdbent = g_enterprise AND xmdbdocno = g_xmdadocno_t
 
    INTO TEMP adbt500_detail
 
   #將key修正為調整後   
   UPDATE adbt500_detail SET xmdbdocno = g_xmda_m.xmdadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table5.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xmdb_t SELECT * FROM adbt500_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table5.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adbt500_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table5.a_insert"
   #141219-00011#3 當修改單頭送貨客戶，會影響單身送貨網點
   # 當單身有多筆資料時，必須要全部重取合同，太耗效能
   #CALL adbt500_change_xmda022()
   #161129-00027#1 mark by cheng ---s---
#   LET ls_sql = 
#      "CREATE GLOBAL TEMPORARY TABLE adbt500_detail AS ",
#      "SELECT * FROM xmdf_t "
#   PREPARE repro_tbl6_1 FROM ls_sql
#   EXECUTE repro_tbl6_1
#   FREE repro_tbl6_1
#      
#   INSERT INTO adbt500_detail SELECT * FROM xmdf_t
#                                         WHERE xmdfent = g_enterprise AND xmdfdocno = g_xmdadocno_t
#  
#   UPDATE adbt500_detail SET xmdfdocno = g_xmda_m.xmdadocno
# 
#   INSERT INTO xmdf_t SELECT * FROM adbt500_detail
#   
#   DROP TABLE adbt500_detail

   #161129-00027#1 mark by cheng ---e---
   
   CALL adbt500_b_fill()
   CALL adbt500_show()
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table6.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xrcd_t 
    WHERE xrcdent = g_enterprise AND xrcddocno = g_xmdadocno_t
 
    INTO TEMP adbt500_detail
 
   #將key修正為調整後   
   UPDATE adbt500_detail SET xrcddocno = g_xmda_m.xmdadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table6.b_update"
   DELETE FROM adbt500_detail WHERE xrcddocno = g_xmda_m.xmdadocno AND xrcdseq > 9000   #160825-00030#1 160831 by lori add
   DELETE FROM adbt500_detail WHERE xrcddocno = g_xmda_m.xmdadocno   #160907-00048#1 1600913 by sakura add
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xrcd_t SELECT * FROM adbt500_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table6.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adbt500_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table6.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table7.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtie_t 
    WHERE rtieent = g_enterprise AND rtiedocno = g_xmdadocno_t
 
    INTO TEMP adbt500_detail
 
   #將key修正為調整後   
   UPDATE adbt500_detail SET rtiedocno = g_xmda_m.xmdadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table7.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtie_t SELECT * FROM adbt500_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table7.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adbt500_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table7.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.delete" >}
#+ 資料刪除
PRIVATE FUNCTION adbt500_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE  l_cnt           LIKE type_t.num5
   DEFINE  l_success       LIKE type_t.num5
   DEFINE  l_xmdc200       LIKE xmdc_t.xmdc200              #151008-00010#4
   DEFINE l_date           DATETIME YEAR TO SECOND          #151008-00010#4
   DEFINE l_prog           LIKE gzza_t.gzza001              #160513-00033#4
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_xmda_m.xmdadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN adbt500_cl USING g_enterprise,g_xmda_m.xmdadocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN adbt500_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE adbt500_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE adbt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdasite,g_xmda_m.xmdadocdt, 
       g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmda005,g_xmda_m.xmda202,g_xmda_m.xmda023,g_xmda_m.xmda004, 
       g_xmda_m.xmda200,g_xmda_m.xmda201,g_xmda_m.xmdastus,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda021, 
       g_xmda_m.xmda022,g_xmda_m.xmda203,g_xmda_m.xmda027,g_xmda_m.xmda024,g_xmda_m.xmda002,g_xmda_m.xmda003, 
       g_xmda_m.xmdaunit,g_xmda_m.xmda211,g_xmda_m.xmda210,g_xmda_m.xmda209,g_xmda_m.xmda208,g_xmda_m.xmda204, 
       g_xmda_m.xmda205,g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda206, 
       g_xmda_m.xmda207,g_xmda_m.xmda020,g_xmda_m.xmda036,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda009, 
       g_xmda_m.xmda010,g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013, 
       g_xmda_m.xmda035,g_xmda_m.xmda213,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid, 
       g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid, 
       g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt,g_xmda_m.xmda034,g_xmda_m.xmda006,g_xmda_m.xmda033, 
       g_xmda_m.xmda017,g_xmda_m.xmda019,g_xmda_m.xmda018,g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045, 
       g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043,g_xmda_m.xmdasite_desc,g_xmda_m.xmda202_desc, 
       g_xmda_m.xmda023_desc,g_xmda_m.xmda004_desc,g_xmda_m.xmda200_desc,g_xmda_m.xmda201_desc,g_xmda_m.xmda021_desc, 
       g_xmda_m.xmda022_desc,g_xmda_m.xmda203_desc,g_xmda_m.xmda027_desc,g_xmda_m.xmda024_desc,g_xmda_m.xmda002_desc, 
       g_xmda_m.xmda003_desc,g_xmda_m.xmdaunit_desc,g_xmda_m.xmda211_desc,g_xmda_m.xmda210_desc,g_xmda_m.xmda209_desc, 
       g_xmda_m.xmda208_desc,g_xmda_m.xmda204_desc,g_xmda_m.xmda032_desc,g_xmda_m.xmda206_desc,g_xmda_m.xmda207_desc, 
       g_xmda_m.xmda020_desc,g_xmda_m.xmda036_desc,g_xmda_m.xmda009_desc,g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc, 
       g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp_desc, 
       g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmda034_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc 
 
   
   
   #檢查是否允許此動作
   IF NOT adbt500_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xmda_m_mask_o.* =  g_xmda_m.*
   CALL adbt500_xmda_t_mask()
   LET g_xmda_m_mask_n.* =  g_xmda_m.*
   
   CALL adbt500_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   #如果已經有收款就不可以刪除單據
   LET l_success = ''
   CALL s_pay_chk(g_xmda_m.xmdadocno) RETURNING l_success
   IF NOT l_success THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
                                    
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL adbt500_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_xmdadocno_t = g_xmda_m.xmdadocno
 
 
      DELETE FROM xmda_t
       WHERE xmdaent = g_enterprise AND xmdadocno = g_xmda_m.xmdadocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
                          
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xmda_m.xmdadocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      IF NOT s_aooi200_del_docno(g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      #160513-00033#4--(S)
      LET l_xmdc200 = ''
      SELECT DISTINCT xmdc200 INTO l_xmdc200
        FROM xmdc_t
       WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno 
         AND xmdcseq > 9000 AND xmdc200 IS NOT NULL
      IF NOT cl_null(l_xmdc200) THEN
         CALL s_astt620_conf_upd(l_xmdc200,'N') RETURNING g_sub_success,g_errno
         LET l_prog = g_prog
         LET g_prog = 'astt620'
         IF NOT s_aooi200_del_docno(l_xmdc200,g_xmda_m.xmdadocdt) THEN
            LET l_date = cl_get_current()
            UPDATE stci_t 
               SET stcistus = 'X',stcimodid = g_user,stcimoddt = l_date
             WHERE stcient = g_enterprise AND stcidocno = l_xmdc200
         ELSE
            DELETE FROM stci_t
             WHERE stcient = g_enterprise AND stcidocno = l_xmdc200
            DELETE FROM stcj_t
             WHERE stcjent = g_enterprise AND stcjdocno = l_xmdc200
         END IF
         LET g_prog = l_prog
      END IF
      #160513-00033#4--(E)      
      #end add-point
      
      DELETE FROM xmdc_t
       WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
                                    
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdc_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
                                    
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
                                    
      #end add-point
      DELETE FROM rtic_t
       WHERE rticent = g_enterprise AND
             rticdocno = g_xmda_m.xmdadocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
                                    
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
                                    
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete3"
                                    
      #end add-point
      DELETE FROM xmdd_t
       WHERE xmddent = g_enterprise AND
             xmdddocno = g_xmda_m.xmdadocno
      #add-point:單身刪除中 name="delete.body.m_delete3"
                                    
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete3"
      #刪除訂單多交期匯總檔
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt
        FROM xmdf_t 
       WHERE xmdfent = g_enterprise 
         AND xmdfdocno = g_xmda_m.xmdadocno
      IF l_cnt > 0 THEN   
         DELETE FROM xmdf_t WHERE xmdfent = g_enterprise AND xmdfdocno = g_xmda_m.xmdadocno
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "xmdf_t"
            LET g_errparam.popup = FALSE
            CALL cl_err()

            CALL s_transaction_end('N','0')
           RETURN
         END IF
      END IF

      #一次性交易對象
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt
        FROM pmak_t 
       WHERE pmakent = g_enterprise 
         AND pmak001 = g_xmda_m.xmda028
      IF l_cnt > 0 THEN
         DELETE FROM pmak_t WHERE pmakent = g_enterprise AND pmak001 = g_xmda_m.xmda028
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "pmak_t"
            LET g_errparam.popup = FALSE
            CALL cl_err()

            CALL s_transaction_end('N','0')
            RETURN
         END IF            
      END IF   

      #删除单据资料的同时，删除返物记录，返物贡献，折价信息
      #删除返物记录
      DELETE FROM rtii_t WHERE rtiient = g_enterprise AND rtiidocno = g_xmda_m.xmdadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "Del rtii_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #删除返物贡献
      DELETE FROM rtij_t WHERE rtijent = g_enterprise AND rtijdocno = g_xmda_m.xmdadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "Del rtij_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #删除折价信息
      DELETE FROM rtic_t WHERE rticent = g_enterprise AND rticdocno = g_xmda_m.xmdadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "Del rtic_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete4"
      
      #end add-point
      DELETE FROM xmja_t
       WHERE xmjaent = g_enterprise AND
             xmjadocno = g_xmda_m.xmdadocno
      #add-point:單身刪除中 name="delete.body.m_delete4"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmja_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete4"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete5"
      
      #end add-point
      DELETE FROM xmdb_t
       WHERE xmdbent = g_enterprise AND
             xmdbdocno = g_xmda_m.xmdadocno
      #add-point:單身刪除中 name="delete.body.m_delete5"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete5"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete6"
      
      #end add-point
      DELETE FROM xrcd_t
       WHERE xrcdent = g_enterprise AND
             xrcddocno = g_xmda_m.xmdadocno
      #add-point:單身刪除中 name="delete.body.m_delete6"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete6"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete7"
      
      #end add-point
      DELETE FROM rtie_t
       WHERE rtieent = g_enterprise AND
             rtiedocno = g_xmda_m.xmdadocno
      #add-point:單身刪除中 name="delete.body.m_delete7"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete7"
      
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_xmda_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE adbt500_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_xmdc_d.clear() 
      CALL g_xmdc2_d.clear()       
      CALL g_xmdc3_d.clear()       
      CALL g_xmdc4_d.clear()       
      CALL g_xmdc5_d.clear()       
      CALL g_xmdc6_d.clear()       
      CALL g_xmdc7_d.clear()       
 
     
      CALL adbt500_ui_browser_refresh()  
      #CALL adbt500_ui_headershow()  
      #CALL adbt500_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
   
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
      
      
      
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL adbt500_browser_fill("")
         CALL adbt500_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE adbt500_cl
 
   #功能已完成,通報訊息中心
   CALL adbt500_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="adbt500.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION adbt500_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE l_sql      STRING
   DEFINE l_no_use   LIKE type_t.chr1
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_xmdc_d.clear()
   CALL g_xmdc2_d.clear()
   CALL g_xmdc3_d.clear()
   CALL g_xmdc4_d.clear()
   CALL g_xmdc5_d.clear()
   CALL g_xmdc6_d.clear()
   CALL g_xmdc7_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   CALL g_xmdc8_d.clear()     #160513-00033#4
   
   LET l_sql = "SELECT xmja002,xmja003,imaal003,imaal004,",
               "       xmja017,oocal003,xmja018,xmja008,",
               "       xmja009,xmja010,xmja021",
               "  FROM xmja_t",
               "  LEFT OUTER JOIN imaal_t ON xmjaent = imaalent AND xmja003 = imaal001 AND imaal002 = '",g_dlang,"'",
               "  LEFT OUTER JOIN oocal_t ON xmjaent = oocalent AND xmja017 = oocal001 AND oocal002 = '",g_dlang,"'",
               " WHERE xmjaent = ",g_enterprise,
               "   AND xmjadocno = '",g_xmda_m.xmdadocno,"'",
               "   AND xmjaseq = ?"
   PREPARE adbt500_xmja FROM l_sql
   
   LET l_sql = "SELECT xmja002,xmja003,imaal003,imaal004",
            "  FROM xmja_t",
            "  LEFT OUTER JOIN imaal_t ON xmjaent = imaalent AND xmja003 = imaal001 AND imaal002 = '",g_dlang,"'",
            " WHERE xmjaent = ",g_enterprise,
            "   AND xmjadocno = '",g_xmda_m.xmdadocno,"'",
            "   AND xmjaseq = ?"
   PREPARE adbt500_pre FROM l_sql
   #160513-00033#7--(S)
   LET l_sql = "SELECT (SELECT imaa014 FROM imaa_t WHERE imaaent = ",g_enterprise," AND imaa001 = xmdc001 ),xmdc001,imaal003,imaal004",
            "  FROM xmdc_t",
            "  LEFT OUTER JOIN imaal_t ON xmdcent = imaalent AND xmdc001 = imaal001 AND imaal002 = '",g_dlang,"'",
            " WHERE xmdcent = ",g_enterprise,
            "   AND xmdcdocno = '",g_xmda_m.xmdadocno,"'",
            "   AND xmdcseq = ?"
   PREPARE adbt500_pre1 FROM l_sql
   #160513-00033#7--(E)
   LET l_sql = "SELECT oodbl004",
               "  FROM oodbl_t,ooef_t",
               " WHERE oodblent = ",g_enterprise,
               "   AND ooefent = oodblent",
               "   AND ooef001  = ?",
               "   AND ooef019  = oodbl001",
               "   AND oodbl002 = ?",
               "   AND oodbl003 = '",g_dlang,"'"
   PREPARE adbt500_tax_ref FROM l_sql
   #end add-point
   
   #判斷是否填充
   IF adbt500_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmdcsite,xmdcseq,xmdc027,xmdc001,xmdc002,xmdc004,xmdc005,xmdc006, 
             xmdc007,xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc010,xmdc011,xmdc015,xmdc016, 
             xmdc017,xmdc046,xmdc047,xmdc048,xmdc023,xmdc019,xmdc020,xmdc021,xmdc022,xmdc051,xmdcunit, 
             xmdcorga,xmdc052,xmdc049,xmdc053,xmdc050 ,t1.imaal003 ,t2.imaal004 ,t3.oocql004 ,t4.oocal003 , 
             t5.oocal003 ,t6.oocal003 ,t7.ooefl003 ,t8.ooefl003 ,t9.oocql004 ,t10.oocql004 FROM xmdc_t", 
                
                     " INNER JOIN xmda_t ON xmdaent = " ||g_enterprise|| " AND xmdadocno = xmdcdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=xmdc001 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=xmdc001 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent="||g_enterprise||" AND t3.oocql001='221' AND t3.oocql002=xmdc004 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent="||g_enterprise||" AND t4.oocal001=xmdc006 AND t4.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent="||g_enterprise||" AND t5.oocal001=xmdc008 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t6 ON t6.oocalent="||g_enterprise||" AND t6.oocal001=xmdc010 AND t6.oocal002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent="||g_enterprise||" AND t7.ooefl001=xmdcunit AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent="||g_enterprise||" AND t8.ooefl001=xmdcorga AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t9 ON t9.oocqlent="||g_enterprise||" AND t9.oocql001='265' AND t9.oocql002=xmdc049 AND t9.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t10 ON t10.oocqlent="||g_enterprise||" AND t10.oocql001='265' AND t10.oocql002=xmdc053 AND t10.oocql003='"||g_dlang||"' ",
 
                     " WHERE xmdcent=? AND xmdcdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
      LET g_sql = g_sql , " AND xmdcseq <= 9000 "        #151008-00010#4
      LET l_sql = " 1=1"
      #折扣明細
      IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM rtic_t ",
                                         " WHERE rticent = xmdcent ",
                                         "   AND rticdocno = xmdcdocno ",
                                         "   AND rticseq = xmdcseq ",
                                         "   AND ",g_wc2_table2 CLIPPED,")" 
      END IF
      #多交期明細
      IF NOT cl_null(g_wc2_table3) AND g_wc2_table3 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmdd_t ",
                                         " WHERE xmddent = xmdcent ",
                                         "   AND xmdddocno = xmdcdocno ",
                                         "   AND xmddseq = xmdcseq ",
                                         "   AND ",g_wc2_table3 CLIPPED,")" 
      END IF
      #商品明細
      IF NOT cl_null(g_wc2_table4) AND g_wc2_table4 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmja_t ",
                                         " WHERE xmjaent = xmdcent ",
                                         "   AND xmjadocno = xmdcdocno ",
                                         "   AND xmjaseq = xmdcseq ",
                                         "   AND ",g_wc2_table4 CLIPPED,")"  
      END IF
      #多期預收款明細
      IF NOT cl_null(g_wc2_table5) AND g_wc2_table5 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmdb_t ",
                                         " WHERE xmdbent = xmdcent ",
                                         "   AND xmdbdocno = xmdcdocno ",
                                         "   AND ",g_wc2_table5 CLIPPED,")"  
      END IF
      #交易稅明細
      IF NOT cl_null(g_wc2_table6) AND g_wc2_table6 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xrcd_t ",
                                         " WHERE xrcdent = xmdcent ",
                                         "   AND xrcddocno = xmdcdocno ",
                                         "   AND xrcdseq = xmdcseq ",
                                         "   AND ",g_wc2_table6 CLIPPED,")"   
      END IF
      #收款明細
      IF NOT cl_null(g_wc2_table7) AND g_wc2_table7 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM rtie_t ",
                                         " WHERE rtieent = xmdcent ",
                                         "   AND rtiedocno = xmdcdocno ",
                                         "   AND rtieseq = xmdcseq ",
                                         "   AND ",g_wc2_table7 CLIPPED,")"   
      END IF
      IF NOT cl_null(l_sql) THEN
         LET g_sql = g_sql CLIPPED, " AND ", l_sql CLIPPED
      END IF
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdc_t.xmdcseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
                              
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adbt500_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR adbt500_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_xmda_m.xmdadocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_xmda_m.xmdadocno INTO g_xmdc_d[l_ac].xmdcsite,g_xmdc_d[l_ac].xmdcseq, 
          g_xmdc_d[l_ac].xmdc027,g_xmdc_d[l_ac].xmdc001,g_xmdc_d[l_ac].xmdc002,g_xmdc_d[l_ac].xmdc004, 
          g_xmdc_d[l_ac].xmdc005,g_xmdc_d[l_ac].xmdc006,g_xmdc_d[l_ac].xmdc007,g_xmdc_d[l_ac].xmdc008, 
          g_xmdc_d[l_ac].xmdc009,g_xmdc_d[l_ac].xmdc024,g_xmdc_d[l_ac].xmdc012,g_xmdc_d[l_ac].xmdc013, 
          g_xmdc_d[l_ac].xmdc045,g_xmdc_d[l_ac].xmdc010,g_xmdc_d[l_ac].xmdc011,g_xmdc_d[l_ac].xmdc015, 
          g_xmdc_d[l_ac].xmdc016,g_xmdc_d[l_ac].xmdc017,g_xmdc_d[l_ac].xmdc046,g_xmdc_d[l_ac].xmdc047, 
          g_xmdc_d[l_ac].xmdc048,g_xmdc_d[l_ac].xmdc023,g_xmdc_d[l_ac].xmdc019,g_xmdc_d[l_ac].xmdc020, 
          g_xmdc_d[l_ac].xmdc021,g_xmdc_d[l_ac].xmdc022,g_xmdc_d[l_ac].xmdc051,g_xmdc_d[l_ac].xmdcunit, 
          g_xmdc_d[l_ac].xmdcorga,g_xmdc_d[l_ac].xmdc052,g_xmdc_d[l_ac].xmdc049,g_xmdc_d[l_ac].xmdc053, 
          g_xmdc_d[l_ac].xmdc050,g_xmdc_d[l_ac].xmdc001_desc,g_xmdc_d[l_ac].xmdc001_desc_desc,g_xmdc_d[l_ac].xmdc004_desc, 
          g_xmdc_d[l_ac].xmdc006_desc,g_xmdc_d[l_ac].xmdc008_desc,g_xmdc_d[l_ac].xmdc010_desc,g_xmdc_d[l_ac].xmdcunit_desc, 
          g_xmdc_d[l_ac].xmdcorga_desc,g_xmdc_d[l_ac].xmdc049_desc,g_xmdc_d[l_ac].xmdc053_desc   #(ver:78) 
 
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         EXECUTE adbt500_tax_ref USING g_xmda_m.xmdasite,g_xmdc_d[l_ac].xmdc016
            INTO g_xmdc_d[l_ac].xmdc016_desc
         #CALL s_desc_get_tax_desc1(g_xmda_m.xmdasite,g_xmdc_d[l_ac].xmdc016)
         #   RETURNING g_xmdc_d[l_ac].xmdc016_desc
         #DISPLAY BY NAME g_xmdc_d[l_ac].xmdc016_desc
         #CALL s_desc_get_item_desc(g_xmdc_d[l_ac].xmdc001)                      
         #  RETURNING g_xmdc_d[l_ac].xmdc001_desc,g_xmdc_d[l_ac].xmdc001_desc_desc                        
         #DISPLAY BY NAME g_xmdc_d[l_ac].xmdc001_desc,g_xmdc_d[l_ac].xmdc001_desc_desc 
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF adbt500_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rticseq,rticseq1,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006, 
             rtic007,rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017, 
             rtic018,rtic019,rtic020,rtic021,rtic022,rtic023,rtic024,rtic025,rtic026,rtic027,rtic028, 
             rtic029  FROM rtic_t",   
                     " INNER JOIN  xmda_t ON xmdaent = " ||g_enterprise|| " AND xmdadocno = rticdocno ",
 
                     "",
                     
                     
                     " WHERE rticent=? AND rticdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
      LET l_sql = " 1=1"
      #商品明細
      IF NOT cl_null(g_wc2_table1) AND g_wc2_table1 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmdc_t ",
                                          " WHERE xmdcent   = rticent ",
                                          "   AND xmdcdocno = rticdocno ",
                                          "   AND xmdcseq   = rticseq ",
                                          "   AND ",g_wc2_table1 CLIPPED,")" 
      END IF
      #多交期明細
      IF NOT cl_null(g_wc2_table3) AND g_wc2_table3 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmdd_t ",
                                         " WHERE xmddent   = rticent ",
                                         "   AND xmdddocno = rticdocno ",
                                         "   AND xmddseq   = rticseq ",
                                         "   AND ",g_wc2_table3 CLIPPED,")" 
      END IF
      #商品明細
      IF NOT cl_null(g_wc2_table4) AND g_wc2_table4 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmja_t ",
                                         " WHERE xmjaent   = rticent ",
                                         "   AND xmjadocno = rticdocno ",
                                         "   AND xmjaseq   = rticseq ",
                                         "   AND ",g_wc2_table4 CLIPPED,")"  
      END IF
      #多期預收款明細
      IF NOT cl_null(g_wc2_table5) AND g_wc2_table5 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmdb_t ",
                                         " WHERE xmdbent   = rticent ",
                                         "   AND xmdbdocno = rticdocno ",
                                         "   AND ",g_wc2_table5 CLIPPED,")"  
      END IF
      #交易稅明細
      IF NOT cl_null(g_wc2_table6) AND g_wc2_table6 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT xrcddocno,xrcdseq FROM xrcd_t ",
                                         " WHERE xrcdent   = rticent ",
                                         "   AND xrcddocno = rticdocno ",
                                         "   AND xrcdseq   = rticseq ",
                                         "   AND ",g_wc2_table6 CLIPPED,")"   
      END IF
      #收款明細
      IF NOT cl_null(g_wc2_table7) AND g_wc2_table7 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT rtiedocno,rtieseq FROM rtie_t ",
                                         " WHERE rtieent   = rticent ",
                                         "   AND rtiedocno = rticdocno ",
                                         "   AND rtieseq   = rticseq ",
                                         "   AND ",g_wc2_table7 CLIPPED,")"   
      END IF
      IF NOT cl_null(l_sql) THEN
         LET g_sql = g_sql CLIPPED," AND ",l_sql CLIPPED
      END IF
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtic_t.rticseq,rtic_t.rticseq1"
         
         #add-point:單身填充控制 name="b_fill.sql2"
                                 
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adbt500_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR adbt500_pb2
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs2 USING g_enterprise,g_xmda_m.xmdadocno   #(ver:78)
                                               
      FOREACH b_fill_cs2 USING g_enterprise,g_xmda_m.xmdadocno INTO g_xmdc2_d[l_ac].rticseq,g_xmdc2_d[l_ac].rticseq1, 
          g_xmdc2_d[l_ac].rtic001,g_xmdc2_d[l_ac].rtic002,g_xmdc2_d[l_ac].rtic003,g_xmdc2_d[l_ac].rtic004, 
          g_xmdc2_d[l_ac].rtic005,g_xmdc2_d[l_ac].rtic006,g_xmdc2_d[l_ac].rtic007,g_xmdc2_d[l_ac].rtic008, 
          g_xmdc2_d[l_ac].rtic009,g_xmdc2_d[l_ac].rtic010,g_xmdc2_d[l_ac].rtic011,g_xmdc2_d[l_ac].rtic012, 
          g_xmdc2_d[l_ac].rtic013,g_xmdc2_d[l_ac].rtic014,g_xmdc2_d[l_ac].rtic015,g_xmdc2_d[l_ac].rtic016, 
          g_xmdc2_d[l_ac].rtic017,g_xmdc2_d[l_ac].rtic018,g_xmdc2_d[l_ac].rtic019,g_xmdc2_d[l_ac].rtic020, 
          g_xmdc2_d[l_ac].rtic021,g_xmdc2_d[l_ac].rtic022,g_xmdc2_d[l_ac].rtic023,g_xmdc2_d[l_ac].rtic024, 
          g_xmdc2_d[l_ac].rtic025,g_xmdc2_d[l_ac].rtic026,g_xmdc2_d[l_ac].rtic027,g_xmdc2_d[l_ac].rtic028, 
          g_xmdc2_d[l_ac].rtic029   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         EXECUTE adbt500_xmja USING g_xmdc2_d[l_ac].rticseq
            INTO g_xmdc2_d[l_ac].xmja0021,g_xmdc2_d[l_ac].xmja0031,g_xmdc2_d[l_ac].xmja0031_desc,g_xmdc2_d[l_ac].xmja0031_desc_1,
                 g_xmdc2_d[l_ac].xmja0171,g_xmdc2_d[l_ac].xmja0171_desc,g_xmdc2_d[l_ac].xmja0181,g_xmdc2_d[l_ac].xmja0081,
                 g_xmdc2_d[l_ac].xmja0091,g_xmdc2_d[l_ac].xmja0101,g_xmdc2_d[l_ac].xmja0211
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF adbt500_fill_chk(3) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body3.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmdddocno,xmddseq,xmddseq1,xmddseq2,xmdd229,xmdd003,xmdd001,xmdd002, 
             xmdd200,xmdd004,xmdd005,xmdd011,xmdd012,xmdd006,xmdd201,xmdd202,xmdd024,xmdd025,xmdd026, 
             xmdd027,xmdd203,xmdd204,xmdd205,xmdd206,xmdd029,xmdd028,xmdd019,xmdd030,xmdd207,xmddunit, 
             xmdd210,xmdd212,xmdd213,xmdd214,xmdd215,xmdd231,xmdd009,xmdd031,xmdd014,xmdd015,xmdd016, 
             xmdd017,xmdd221,xmddsite,xmdd218,xmdd219,xmdd220,xmdd222,xmdd223,xmdd224,xmddorga,xmdd226, 
             xmdd227,xmdd228,xmdd013,xmdd018,xmdd020,xmdd021,xmdd022,xmdd023 ,t13.imaal003 ,t14.imaal004 , 
             t15.prcfl003 ,t16.oocal003 ,t17.oocal003 ,t18.oocal003 ,t19.oocal003 ,t20.pmaal004 ,t21.ooefl003 , 
             t22.oocql004 ,t23.inayl003 ,t24.inab003 ,t25.ooefl003 ,t26.oojdl003 ,t27.dbbal003 ,t28.dbbcl003 , 
             t29.ooefl003 ,t30.ooag011 ,t31.ooefl003 ,t32.ooefl003 ,t33.oocql004 ,t34.staal003 ,t35.ooag011 FROM xmdd_t", 
                
                     " INNER JOIN  xmda_t ON xmdaent = " ||g_enterprise|| " AND xmdadocno = xmdddocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t13 ON t13.imaalent="||g_enterprise||" AND t13.imaal001=xmdd001 AND t13.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t14 ON t14.imaalent="||g_enterprise||" AND t14.imaal001=xmdd001 AND t14.imaal002='"||g_dlang||"' ",
               " LEFT JOIN prcfl_t t15 ON t15.prcflent="||g_enterprise||" AND t15.prcfl001=xmdd200 AND t15.prcfl002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t16 ON t16.oocalent="||g_enterprise||" AND t16.oocal001=xmdd004 AND t16.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t17 ON t17.oocalent="||g_enterprise||" AND t17.oocal001=xmdd201 AND t17.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t18 ON t18.oocalent="||g_enterprise||" AND t18.oocal001=xmdd024 AND t18.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t19 ON t19.oocalent="||g_enterprise||" AND t19.oocal001=xmdd026 AND t19.oocal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t20 ON t20.pmaalent="||g_enterprise||" AND t20.pmaal001=xmdd207 AND t20.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t21 ON t21.ooeflent="||g_enterprise||" AND t21.ooefl001=xmddunit AND t21.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t22 ON t22.oocqlent="||g_enterprise||" AND t22.oocql001='274' AND t22.oocql002=xmdd210 AND t22.oocql003='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t23 ON t23.inaylent="||g_enterprise||" AND t23.inayl001=xmdd213 AND t23.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t24 ON t24.inabent="||g_enterprise||" AND t24.inabsite=xmddunit AND t24.inab001=xmdd213 AND t24.inab002=xmdd214  ",
               " LEFT JOIN ooefl_t t25 ON t25.ooeflent="||g_enterprise||" AND t25.ooefl001=xmddsite AND t25.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oojdl_t t26 ON t26.oojdlent="||g_enterprise||" AND t26.oojdl001=xmdd218 AND t26.oojdl002='"||g_dlang||"' ",
               " LEFT JOIN dbbal_t t27 ON t27.dbbalent="||g_enterprise||" AND t27.dbbal001=xmdd219 AND t27.dbbal002='"||g_dlang||"' ",
               " LEFT JOIN dbbcl_t t28 ON t28.dbbclent="||g_enterprise||" AND t28.dbbcl001=xmdd220 AND t28.dbbcl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t29 ON t29.ooeflent="||g_enterprise||" AND t29.ooefl001=xmdd222 AND t29.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t30 ON t30.ooagent="||g_enterprise||" AND t30.ooag001=xmdd223  ",
               " LEFT JOIN ooefl_t t31 ON t31.ooeflent="||g_enterprise||" AND t31.ooefl001=xmdd224 AND t31.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t32 ON t32.ooeflent="||g_enterprise||" AND t32.ooefl001=xmddorga AND t32.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t33 ON t33.oocqlent="||g_enterprise||" AND t33.oocql001='2060' AND t33.oocql002=xmdd227 AND t33.oocql003='"||g_dlang||"' ",
               " LEFT JOIN staal_t t34 ON t34.staalent="||g_enterprise||" AND t34.staal001=xmdd228 AND t34.staal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t35 ON t35.ooagent="||g_enterprise||" AND t35.ooag001=xmdd022  ",
 
                     " WHERE xmddent=? AND xmdddocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body3.fill_sql"
      LET l_sql = " 1=1"
      #商品明細
      IF NOT cl_null(g_wc2_table1) AND g_wc2_table1 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmdc_t ",
                                         " WHERE xmdcent   = xmddent ",
                                         "   AND xmdcdocno = xmdddocno ",
                                         "   AND xmdcseq   = xmddseq ",
                                         "   AND ",g_wc2_table1 CLIPPED,")" 
      END IF
	   #折扣明細
      IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT rticdocno,rticseq FROM rtic_t ",
                                         " WHERE rticent   = xmddent ",
                                         "   AND rticdocno = xmdddocno ",
                                         "   AND rticseq   = xmddseq ",
                                         "   AND ",g_wc2_table2 CLIPPED,")" 
      END IF
      #商品明細
      IF NOT cl_null(g_wc2_table4) AND g_wc2_table4 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT xmjadocno,xmjaseq FROM xmja_t ",
                                  " WHERE xmjaent   = xmddent ",
                                  "   AND xmjadocno = xmdddocno ",
                                  "   AND xmjaseq   = xmddseq ",
                                  "   AND ",g_wc2_table4 CLIPPED,")"  
      END IF
      #多期預收款明細
      IF NOT cl_null(g_wc2_table5) AND g_wc2_table5 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT xmdbdocno FROM xmdb_t ",
                                         " WHERE xmdbent   = xmddent ",
                                         "   AND xmdbdocno = xmdddocno ",
                                         "   AND ",g_wc2_table5 CLIPPED,")"  
      END IF
      #交易稅明細
      IF NOT cl_null(g_wc2_table6) AND g_wc2_table6 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT xrcddocno,xrcdseq FROM xrcd_t ",
                                         " WHERE xrcdent   = xmddent ",
                                         "   AND xrcddocno = xmdddocno ",
                                         "   AND xrcdseq   = xmddseq ",
                                         "   AND ",g_wc2_table6 CLIPPED,")"   
      END IF
      #收款明細
      IF NOT cl_null(g_wc2_table7) AND g_wc2_table7 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT rtiedocno,rtieseq FROM rtie_t ",
                                         " WHERE rtieent   = xmddent ",
                                         "   AND rtiedocno = xmdddocno ",
                                         "   AND rtieseq   = xmddseq ",
                                         "   AND ",g_wc2_table7 CLIPPED,")"   
      END IF  
      IF NOT cl_null(l_sql) THEN
         LET g_sql = g_sql CLIPPED," AND ",l_sql CLIPPED
      END IF
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdd_t.xmddseq,xmdd_t.xmddseq1,xmdd_t.xmddseq2"
         
         #add-point:單身填充控制 name="b_fill.sql3"
                               
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adbt500_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR adbt500_pb3
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs3 USING g_enterprise,g_xmda_m.xmdadocno   #(ver:78)
                                               
      FOREACH b_fill_cs3 USING g_enterprise,g_xmda_m.xmdadocno INTO g_xmdc3_d[l_ac].xmdddocno,g_xmdc3_d[l_ac].xmddseq, 
          g_xmdc3_d[l_ac].xmddseq1,g_xmdc3_d[l_ac].xmddseq2,g_xmdc3_d[l_ac].xmdd229,g_xmdc3_d[l_ac].xmdd003, 
          g_xmdc3_d[l_ac].xmdd001,g_xmdc3_d[l_ac].xmdd002,g_xmdc3_d[l_ac].xmdd200,g_xmdc3_d[l_ac].xmdd004, 
          g_xmdc3_d[l_ac].xmdd005,g_xmdc3_d[l_ac].xmdd011,g_xmdc3_d[l_ac].xmdd012,g_xmdc3_d[l_ac].xmdd006, 
          g_xmdc3_d[l_ac].xmdd201,g_xmdc3_d[l_ac].xmdd202,g_xmdc3_d[l_ac].xmdd024,g_xmdc3_d[l_ac].xmdd025, 
          g_xmdc3_d[l_ac].xmdd026,g_xmdc3_d[l_ac].xmdd027,g_xmdc3_d[l_ac].xmdd203,g_xmdc3_d[l_ac].xmdd204, 
          g_xmdc3_d[l_ac].xmdd205,g_xmdc3_d[l_ac].xmdd206,g_xmdc3_d[l_ac].xmdd029,g_xmdc3_d[l_ac].xmdd028, 
          g_xmdc3_d[l_ac].xmdd019,g_xmdc3_d[l_ac].xmdd030,g_xmdc3_d[l_ac].xmdd207,g_xmdc3_d[l_ac].xmddunit, 
          g_xmdc3_d[l_ac].xmdd210,g_xmdc3_d[l_ac].xmdd212,g_xmdc3_d[l_ac].xmdd213,g_xmdc3_d[l_ac].xmdd214, 
          g_xmdc3_d[l_ac].xmdd215,g_xmdc3_d[l_ac].xmdd231,g_xmdc3_d[l_ac].xmdd009,g_xmdc3_d[l_ac].xmdd031, 
          g_xmdc3_d[l_ac].xmdd014,g_xmdc3_d[l_ac].xmdd015,g_xmdc3_d[l_ac].xmdd016,g_xmdc3_d[l_ac].xmdd017, 
          g_xmdc3_d[l_ac].xmdd221,g_xmdc3_d[l_ac].xmddsite,g_xmdc3_d[l_ac].xmdd218,g_xmdc3_d[l_ac].xmdd219, 
          g_xmdc3_d[l_ac].xmdd220,g_xmdc3_d[l_ac].xmdd222,g_xmdc3_d[l_ac].xmdd223,g_xmdc3_d[l_ac].xmdd224, 
          g_xmdc3_d[l_ac].xmddorga,g_xmdc3_d[l_ac].xmdd226,g_xmdc3_d[l_ac].xmdd227,g_xmdc3_d[l_ac].xmdd228, 
          g_xmdc3_d[l_ac].xmdd013,g_xmdc3_d[l_ac].xmdd018,g_xmdc3_d[l_ac].xmdd020,g_xmdc3_d[l_ac].xmdd021, 
          g_xmdc3_d[l_ac].xmdd022,g_xmdc3_d[l_ac].xmdd023,g_xmdc3_d[l_ac].xmdd001_desc,g_xmdc3_d[l_ac].xmdd001_desc_desc, 
          g_xmdc3_d[l_ac].xmdd200_desc,g_xmdc3_d[l_ac].xmdd004_desc,g_xmdc3_d[l_ac].xmdd201_desc,g_xmdc3_d[l_ac].xmdd024_desc, 
          g_xmdc3_d[l_ac].xmdd026_desc,g_xmdc3_d[l_ac].xmdd207_desc,g_xmdc3_d[l_ac].xmddunit_desc,g_xmdc3_d[l_ac].xmdd210_desc, 
          g_xmdc3_d[l_ac].xmdd213_desc,g_xmdc3_d[l_ac].xmdd214_desc,g_xmdc3_d[l_ac].xmddsite_desc,g_xmdc3_d[l_ac].xmdd218_desc, 
          g_xmdc3_d[l_ac].xmdd219_desc,g_xmdc3_d[l_ac].xmdd220_desc,g_xmdc3_d[l_ac].xmdd222_desc,g_xmdc3_d[l_ac].xmdd223_desc, 
          g_xmdc3_d[l_ac].xmdd224_desc,g_xmdc3_d[l_ac].xmddorga_desc,g_xmdc3_d[l_ac].xmdd227_desc,g_xmdc3_d[l_ac].xmdd228_desc, 
          g_xmdc3_d[l_ac].xmdd022_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill3.fill"
         EXECUTE adbt500_tax_ref USING g_xmdc3_d[l_ac].xmddsite,g_xmdc3_d[l_ac].xmdd019
            INTO g_xmdc3_d[l_ac].xmdd019_desc
         #CALL s_desc_get_tax_desc1(g_xmdc3_d[l_ac].xmddsite,g_xmdc3_d[l_ac].xmdd019) RETURNING g_xmdc3_d[l_ac].xmdd019_desc
         #CALL s_desc_get_trading_partner_abbr_desc(g_xmdc3_d[l_ac].xmdd207) RETURNING g_xmdc3_d[l_ac].xmdd207_desc                       
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF adbt500_fill_chk(4) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body4.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmjaunit,xmjaseq,xmjasite,xmja001,xmja002,xmja003,xmja033,xmja004, 
             xmja005,xmja006,xmja007,xmja011,xmja012,xmja013,xmja014,xmja015,xmja016,xmja017,xmja018, 
             xmja008,xmja009,xmja010,xmja022,xmja019,xmja020,xmja021,xmja024,xmja025,xmja026,xmja027, 
             xmja028,xmja029,xmja030,xmja031,xmja032,xmja040,xmja039,xmja038,xmja037,xmja034 ,t36.ooefl003 , 
             t37.imaal003 ,t38.imaal004 ,t39.prcfl003 ,t40.oocal003 ,t41.oocal003 ,t42.oocal003 ,t43.oocal003 , 
             t44.pmaal004 ,t45.pmaal004 ,t46.dbadl003 ,t47.dbaal003 ,t48.dbaal003 ,t49.dbaal003 ,t50.dbaal003 FROM xmja_t", 
                
                     " INNER JOIN  xmda_t ON xmdaent = " ||g_enterprise|| " AND xmdadocno = xmjadocno ",
 
                     "",
                     
                                    " LEFT JOIN ooefl_t t36 ON t36.ooeflent="||g_enterprise||" AND t36.ooefl001=xmjasite AND t36.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t37 ON t37.imaalent="||g_enterprise||" AND t37.imaal001=xmja003 AND t37.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t38 ON t38.imaalent="||g_enterprise||" AND t38.imaal001=xmja003 AND t38.imaal002='"||g_dlang||"' ",
               " LEFT JOIN prcfl_t t39 ON t39.prcflent="||g_enterprise||" AND t39.prcfl001=xmja005 AND t39.prcfl002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t40 ON t40.oocalent="||g_enterprise||" AND t40.oocal001=xmja011 AND t40.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t41 ON t41.oocalent="||g_enterprise||" AND t41.oocal001=xmja013 AND t41.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t42 ON t42.oocalent="||g_enterprise||" AND t42.oocal001=xmja015 AND t42.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t43 ON t43.oocalent="||g_enterprise||" AND t43.oocal001=xmja017 AND t43.oocal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t44 ON t44.pmaalent="||g_enterprise||" AND t44.pmaal001=xmja024 AND t44.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t45 ON t45.pmaalent="||g_enterprise||" AND t45.pmaal001=xmja025 AND t45.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN dbadl_t t46 ON t46.dbadlent="||g_enterprise||" AND t46.dbadl001=xmja027 AND t46.dbadl002='"||g_dlang||"' ",
               " LEFT JOIN dbaal_t t47 ON t47.dbaalent="||g_enterprise||" AND t47.dbaal001=xmja040 AND t47.dbaal002='"||g_dlang||"' ",
               " LEFT JOIN dbaal_t t48 ON t48.dbaalent="||g_enterprise||" AND t48.dbaal001=xmja039 AND t48.dbaal002='"||g_dlang||"' ",
               " LEFT JOIN dbaal_t t49 ON t49.dbaalent="||g_enterprise||" AND t49.dbaal001=xmja038 AND t49.dbaal002='"||g_dlang||"' ",
               " LEFT JOIN dbaal_t t50 ON t50.dbaalent="||g_enterprise||" AND t50.dbaal001=xmja037 AND t50.dbaal002='"||g_dlang||"' ",
 
                     " WHERE xmjaent=? AND xmjadocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body4.fill_sql"
      LET l_sql = " 1=1"
      #商品明細
      IF NOT cl_null(g_wc2_table1) AND g_wc2_table1 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT xmdcdocno,xmdcseq FROM xmdc_t ",
                                         " WHERE xmdcent   = xmjaent ",
                                         "   AND xmdcdocno = xmjadocno ",
                                         "   AND xmdcseq   = xmjaseq ",
                                         "   AND ",g_wc2_table1 CLIPPED,")" 
      END IF
	   #折扣明細
      IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT rticdocno,rticseq FROM rtic_t ",
                                         " WHERE rticent   = xmjaent ",
                                         "   AND rticdocno = xmjadocno ",
                                         "   AND rticseq   = xmjaseq ",
                                         "   AND ",g_wc2_table2 CLIPPED,")" 
      END IF
      #多交期明細
      IF NOT cl_null(g_wc2_table3) AND g_wc2_table3 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT xmdddocno,xmddseq FROM xmdd_t ",
                                         " WHERE xmddent   = xmjaent ",
                                         "   AND xmdddocno = xmjadocno ",
                                         "   AND xmddseq   = xmjaseq ",
                                         "   AND ",g_wc2_table3 CLIPPED,")" 
      END IF
      #多期預收款明細
      IF NOT cl_null(g_wc2_table5) AND g_wc2_table5 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT xmdbdocno FROM xmdb_t ",
                                         " WHERE xmdbent   = xmjaent ",
                                         "   AND xmdbdocno = xmjadocno ",
                                         "   AND ",g_wc2_table5 CLIPPED,")"  
      END IF
      #交易稅明細
      IF NOT cl_null(g_wc2_table6) AND g_wc2_table6 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT xrcddocno,xrcdseq FROM xrcd_t ",
                                         " WHERE xrcdent   = xmjaent ",
                                         "   AND xrcddocno = xmjadocno ",
                                         "   AND xrcdseq   = xmjaseq ",
                                         "   AND ",g_wc2_table6 CLIPPED,")"   
      END IF
      #收款明細
      IF NOT cl_null(g_wc2_table7) AND g_wc2_table7 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT rtiedocno,rtieseq FROM rtie_t ",
                                         " WHERE rtieent   = xmjaent ",
                                         "   AND rtiedocno = xmjadocno ",
                                         "   AND rtieseq   = xmjaseq ",
                                         "   AND ",g_wc2_table7 CLIPPED,")"   
      END IF
      IF NOT cl_null(l_sql) THEN
         LET g_sql = g_sql CLIPPED," AND ",l_sql CLIPPED
      END IF
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmja_t.xmjaseq"
         
         #add-point:單身填充控制 name="b_fill.sql4"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adbt500_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR adbt500_pb4
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs4 USING g_enterprise,g_xmda_m.xmdadocno   #(ver:78)
                                               
      FOREACH b_fill_cs4 USING g_enterprise,g_xmda_m.xmdadocno INTO g_xmdc4_d[l_ac].xmjaunit,g_xmdc4_d[l_ac].xmjaseq, 
          g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja001,g_xmdc4_d[l_ac].xmja002,g_xmdc4_d[l_ac].xmja003, 
          g_xmdc4_d[l_ac].xmja033,g_xmdc4_d[l_ac].xmja004,g_xmdc4_d[l_ac].xmja005,g_xmdc4_d[l_ac].xmja006, 
          g_xmdc4_d[l_ac].xmja007,g_xmdc4_d[l_ac].xmja011,g_xmdc4_d[l_ac].xmja012,g_xmdc4_d[l_ac].xmja013, 
          g_xmdc4_d[l_ac].xmja014,g_xmdc4_d[l_ac].xmja015,g_xmdc4_d[l_ac].xmja016,g_xmdc4_d[l_ac].xmja017, 
          g_xmdc4_d[l_ac].xmja018,g_xmdc4_d[l_ac].xmja008,g_xmdc4_d[l_ac].xmja009,g_xmdc4_d[l_ac].xmja010, 
          g_xmdc4_d[l_ac].xmja022,g_xmdc4_d[l_ac].xmja019,g_xmdc4_d[l_ac].xmja020,g_xmdc4_d[l_ac].xmja021, 
          g_xmdc4_d[l_ac].xmja024,g_xmdc4_d[l_ac].xmja025,g_xmdc4_d[l_ac].xmja026,g_xmdc4_d[l_ac].xmja027, 
          g_xmdc4_d[l_ac].xmja028,g_xmdc4_d[l_ac].xmja029,g_xmdc4_d[l_ac].xmja030,g_xmdc4_d[l_ac].xmja031, 
          g_xmdc4_d[l_ac].xmja032,g_xmdc4_d[l_ac].xmja040,g_xmdc4_d[l_ac].xmja039,g_xmdc4_d[l_ac].xmja038, 
          g_xmdc4_d[l_ac].xmja037,g_xmdc4_d[l_ac].xmja034,g_xmdc4_d[l_ac].xmjasite_desc,g_xmdc4_d[l_ac].xmja003_desc, 
          g_xmdc4_d[l_ac].xmja003_desc_desc,g_xmdc4_d[l_ac].xmja005_desc,g_xmdc4_d[l_ac].xmja011_desc, 
          g_xmdc4_d[l_ac].xmja013_desc,g_xmdc4_d[l_ac].xmja015_desc,g_xmdc4_d[l_ac].xmja017_desc,g_xmdc4_d[l_ac].xmja024_desc, 
          g_xmdc4_d[l_ac].xmja025_desc,g_xmdc4_d[l_ac].xmja027_desc,g_xmdc4_d[l_ac].xmja040_desc,g_xmdc4_d[l_ac].xmja039_desc, 
          g_xmdc4_d[l_ac].xmja038_desc,g_xmdc4_d[l_ac].xmja037_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill4.fill"
         EXECUTE adbt500_tax_ref USING g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja006
            INTO g_xmdc4_d[l_ac].xmja006_desc
         #CALL s_desc_get_tax_desc1(g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja006) RETURNING g_xmdc4_d[l_ac].xmja006_desc
         #地址
         IF cl_null(g_xmda_m.xmda025) THEN
            CALL adbt500_xmja026_ref()
         ELSE
            LET g_xmdc4_d[l_ac].xmja026_desc = g_xmda_m.xmda025_desc
         END IF
         #170116-00018#3 -s 20170117 mark by 08172
         #add by geza 20161029 #161027-00055#2(S)
#         IF g_xmdc4_d[l_ac].xmjasite IS NOT NULL AND g_xmdc4_d[l_ac].xmja003 IS NOT NULL  THEN
#            SELECT rtdx029 INTO g_xmdc4_d[l_ac].rtdx029
#              FROM rtdx_t 
#             WHERE rtdxent = g_enterprise
#               AND rtdx001 = g_xmdc4_d[l_ac].xmja003
#               AND rtdxsite = g_xmdc4_d[l_ac].xmjasite
#               AND rtdxstus = 'Y'
#            SELECT ooefl003 INTO g_xmdc4_d[l_ac].rtdx029_desc
#              FROM ooefl_t 
#             WHERE ooeflent = g_enterprise
#               AND ooefl001 = g_xmdc4_d[l_ac].rtdx029         
#               AND ooefl002 = g_lang          
#         END IF 
#         IF g_xmdc4_d[l_ac].rtdx029 IS NOT NULL AND g_xmdc4_d[l_ac].xmja003 IS NOT NULL AND g_xmdc4_d[l_ac].xmja004 IS NOT NULL THEN                   
#            #CALL adbt500_xmja041_count(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].rtdx029,g_xmdc4_d[l_ac].xmja004) RETURNING g_xmdc4_d[l_ac].inag009  #mark by geza 20161209 161124-00039#1
#            CALL adbt500_xmja041_count(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].rtdx029,g_xmdc4_d[l_ac].xmja004,'',g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja040,g_xmdc4_d[l_ac].xmja039, g_xmdc4_d[l_ac].xmja038,g_xmdc4_d[l_ac].xmja037) RETURNING g_xmdc4_d[l_ac].inag009   #add by geza 20161209 161124-00039#1             
#         ELSE
#            LET g_xmdc4_d[l_ac].inag009 = 0           
#         END IF   
         #add by geza 20161029 #161027-00055#2(E)
         #170116-00018#3 -e 20170117 mark by 08172
         #170116-00018#3 -s 20170117 add by 08172
         IF g_xmdc4_d[l_ac].xmja003 IS NOT NULL AND g_xmdc4_d[l_ac].xmja004 IS NOT NULL AND  g_xmdc3_d[l_ac].xmdd004 IS NOT NULL
            AND g_xmdc3_d[l_ac].xmddunit IS NOT NULL AND g_xmdc3_d[l_ac].xmdd213 IS NOT NULL THEN
            CALL adbt500_inas011_count(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja004,g_xmdc3_d[l_ac].xmdd004,g_xmdc3_d[l_ac].xmddunit,g_xmdc3_d[l_ac].xmdd213)   
                 RETURNING g_xmdc4_d[l_ac].inag009              
         ELSE 
            LET g_xmdc4_d[l_ac].inag009 = ''
         END IF
         #170116-00018#3 -e 20170117 add by 08172
         #add by liuxsa 20161121 #161028-00038#9(S)
        select imaa116 into g_xmdc4_d[l_ac].l_imaa116 from imaa_t where imaa001=g_xmdc4_d[l_ac].xmja003 and imaaent=g_enterprise
        let g_xmdc4_d[l_ac].l_diaopai=g_xmdc4_d[l_ac].l_imaa116*g_xmdc4_d[l_ac].xmja014
#        let g_xmdc4_d[l_ac].l_rate=g_xmdc4_d[l_ac].l_diaopai/g_xmdc4_d[l_ac].xmja021*100  #161125-00003#1 by 08172
         LET g_xmdc4_d[l_ac].l_rate=g_xmdc4_d[l_ac].xmja021/g_xmdc4_d[l_ac].l_diaopai*100  #161125-00003#1 by 08172
         #add by liuxsa 20161121 #161028-00038#9(E)
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF adbt500_fill_chk(5) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body5.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xmdbsite,xmdb001,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006,xmdb016, 
             xmdb017,xmdb007,xmdb008,xmdb009,xmdb200 ,t51.ooibl004 FROM xmdb_t",   
                     " INNER JOIN  xmda_t ON xmdaent = " ||g_enterprise|| " AND xmdadocno = xmdbdocno ",
 
                     "",
                     
                                    " LEFT JOIN ooibl_t t51 ON t51.ooiblent="||g_enterprise||" AND t51.ooibl002=xmdb002 AND t51.ooibl003='"||g_dlang||"' ",
 
                     " WHERE xmdbent=? AND xmdbdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body5.fill_sql"
      LET l_sql = " 1=1"
      #商品明細
      IF NOT cl_null(g_wc2_table1) AND g_wc2_table1 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmdc_t ",
                                         " WHERE xmdcent   = xmdbent ",
                                         "   AND xmdcdocno = xmdbdocno ",
                                         "   AND xmdcseq   = xmdbseq ",
                                         "   AND ",g_wc2_table1 CLIPPED,")" 
      END IF
	   #折扣明細
      IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM rtic_t ",
                                         " WHERE rticent   = xmdbent ",
                                         "   AND rticdocno = xmdbdocno ",
                                         "   AND rticseq   = xmdbseq ",
                                         "   AND ",g_wc2_table2 CLIPPED,")" 
      END IF
      #多交期明細
      IF NOT cl_null(g_wc2_table3) AND g_wc2_table3 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmdd_t ",
                                         " WHERE xmddent   = xmdbent ",
                                         "   AND xmdddocno = xmdbdocno ",
                                         "   AND xmddseq   = xmdbseq ",
                                         "   AND ",g_wc2_table3 CLIPPED,")" 
      END IF
      #商品明細
      IF NOT cl_null(g_wc2_table4) AND g_wc2_table4 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmja_t ",
                                         " WHERE xmjaent   = xmdbent ",
                                         "   AND xmjadocno = xmdbdocno ",
                                         "   AND xmjaseq   = xmdbseq ",
                                         "   AND ",g_wc2_table4 CLIPPED,")"  
      END IF
      #交易稅明細
      IF NOT cl_null(g_wc2_table6) AND g_wc2_table6 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xrcd_t ",
                                         " WHERE xrcdent   = xmdbent ",
                                         "   AND xrcddocno = xmdbdocno ",
                                         "   AND xrcdseq   = xmdbseq ",
                                         "   AND ",g_wc2_table6 CLIPPED,")"   
      END IF
      #收款明細
      IF NOT cl_null(g_wc2_table7) AND g_wc2_table7 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM rtie_t ",
                                         " WHERE rtieent   = xmdbent ",
                                         "   AND rtiedocno = xmdbdocno ",
                                         "   AND rtieseq   = xmdbseq ",
                                         "   AND ",g_wc2_table7 CLIPPED,")"   
      END IF
      IF NOT cl_null(l_sql) THEN
         LET g_sql = g_sql CLIPPED," AND ",l_sql CLIPPED
      END IF
         #end add-point
         IF NOT cl_null(g_wc2_table5) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table5 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xmdb_t.xmdb001"
         
         #add-point:單身填充控制 name="b_fill.sql5"
 
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adbt500_pb5 FROM g_sql
         DECLARE b_fill_cs5 CURSOR FOR adbt500_pb5
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs5 USING g_enterprise,g_xmda_m.xmdadocno   #(ver:78)
                                               
      FOREACH b_fill_cs5 USING g_enterprise,g_xmda_m.xmdadocno INTO g_xmdc5_d[l_ac].xmdbsite,g_xmdc5_d[l_ac].xmdb001, 
          g_xmdc5_d[l_ac].xmdb002,g_xmdc5_d[l_ac].xmdb003,g_xmdc5_d[l_ac].xmdb004,g_xmdc5_d[l_ac].xmdb005, 
          g_xmdc5_d[l_ac].xmdb006,g_xmdc5_d[l_ac].xmdb016,g_xmdc5_d[l_ac].xmdb017,g_xmdc5_d[l_ac].xmdb007, 
          g_xmdc5_d[l_ac].xmdb008,g_xmdc5_d[l_ac].xmdb009,g_xmdc5_d[l_ac].xmdb200,g_xmdc5_d[l_ac].xmdb002_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill5.fill"
 
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF adbt500_fill_chk(6) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body6.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xrcdseq,xrcdld,xrcd002,xrcdseq2,xrcd007,xrcd003,xrcd006,xrcd004, 
             xrcd104  FROM xrcd_t",   
                     " INNER JOIN  xmda_t ON xmdaent = " ||g_enterprise|| " AND xmdadocno = xrcddocno ",
 
                     "",
                     
                     
                     " WHERE xrcdent=? AND xrcddocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body6.fill_sql"
      LET l_sql = " 1=1"
      #商品明細
      IF NOT cl_null(g_wc2_table1) AND g_wc2_table1 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmdc_t ",
                                         " WHERE xmdcent   = xrcdent ",
                                         "   AND xmdcdocno = xrcddocno ",
                                         "   AND xmdcseq   = xrcdseq ",
                                         "   AND ",g_wc2_table1 CLIPPED,")" 
      END IF
	  #折扣明細
      IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM rtic_t ",
                                         " WHERE rticent   = xrcdent ",
                                         "   AND rticdocno = xrcddocno ",
                                         "   AND rticseq   = xrcdseq ",
                                         "   AND ",g_wc2_table2 CLIPPED,")" 
      END IF
      #多交期明細
      IF NOT cl_null(g_wc2_table3) AND g_wc2_table3 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmdd_t ",
                                            " WHERE xmddent   = xrcdent ",
                                            "   AND xmdddocno = xrcddocno ",
                                            "   AND xmddseq   = xrcdseq ",
                                            "   AND ",g_wc2_table3 CLIPPED,")" 
      END IF
      #商品明細
      IF NOT cl_null(g_wc2_table4) AND g_wc2_table4 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmja_t ",
                                         " WHERE xmjaent   = xrcdent ",
                                         "   AND xmjadocno = xrcddocno ",
                                         "   AND xmjaseq   = xrcdseq ",
                                         "   AND ",g_wc2_table4 CLIPPED,")"  
      END IF
      #多期預收款明細
      IF NOT cl_null(g_wc2_table5) AND g_wc2_table5 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmdb_t ",
                                         " WHERE xmdbent   = xrcdent ",
                                         "   AND xmdbdocno = xrcddocno ",
                                         "   AND ",g_wc2_table5 CLIPPED,")"  
      END IF
      #收款明細
      IF NOT cl_null(g_wc2_table7) AND g_wc2_table7 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM rtie_t ",
                                            " WHERE rtieent   = xrcdent ",
                                            "   AND rtiedocno = xrcddocno ",
                                            "   AND rtieseq   = xrcdseq ",
                                            "   AND ",g_wc2_table7 CLIPPED,")"   
      END IF
      IF NOT cl_null(l_sql) THEN
         LET g_sql = g_sql CLIPPED," AND ",l_sql CLIPPED
      END IF
         #end add-point
         IF NOT cl_null(g_wc2_table6) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table6 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xrcd_t.xrcdld,xrcd_t.xrcdseq,xrcd_t.xrcdseq2,xrcd_t.xrcd007"
         
         #add-point:單身填充控制 name="b_fill.sql6"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adbt500_pb6 FROM g_sql
         DECLARE b_fill_cs6 CURSOR FOR adbt500_pb6
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs6 USING g_enterprise,g_xmda_m.xmdadocno   #(ver:78)
                                               
      FOREACH b_fill_cs6 USING g_enterprise,g_xmda_m.xmdadocno INTO g_xmdc6_d[l_ac].xrcdseq,g_xmdc6_d[l_ac].xrcdld, 
          g_xmdc6_d[l_ac].xrcd002,g_xmdc6_d[l_ac].xrcdseq2,g_xmdc6_d[l_ac].xrcd007,g_xmdc6_d[l_ac].xrcd003, 
          g_xmdc6_d[l_ac].xrcd006,g_xmdc6_d[l_ac].xrcd004,g_xmdc6_d[l_ac].xrcd104   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill6.fill"
         EXECUTE adbt500_tax_ref USING g_xmda_m.xmdasite,g_xmdc6_d[l_ac].xrcd002
            INTO g_xmdc6_d[l_ac].xrcd002_desc
         IF g_xmdc6_d[l_ac].xrcdseq < 9001 THEN    #160513-00033#7
            EXECUTE adbt500_pre USING g_xmdc6_d[l_ac].xrcdseq
                                 INTO g_xmdc6_d[l_ac].imay0031,g_xmdc6_d[l_ac].imaa0011,
                                      g_xmdc6_d[l_ac].imaa0011_desc,
                                      g_xmdc6_d[l_ac].imaa0011_desc_desc
         #160513-00033#7--(S)
         ELSE
            EXECUTE adbt500_pre1 USING g_xmdc6_d[l_ac].xrcdseq
                                  INTO g_xmdc6_d[l_ac].imay0031,g_xmdc6_d[l_ac].imaa0011,
                                       g_xmdc6_d[l_ac].imaa0011_desc,
                                       g_xmdc6_d[l_ac].imaa0011_desc_desc
         END IF
         #160513-00033#7--(E)
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF adbt500_fill_chk(7) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body7.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtieseq,rtieseq1,rtie001,rtie002,rtie006 ,t56.ooial003 FROM rtie_t", 
                
                     " INNER JOIN  xmda_t ON xmdaent = " ||g_enterprise|| " AND xmdadocno = rtiedocno ",
 
                     "",
                     
                                    " LEFT JOIN ooial_t t56 ON t56.ooialent="||g_enterprise||" AND t56.ooial001=rtie002 AND t56.ooial002='"||g_dlang||"' ",
 
                     " WHERE rtieent=? AND rtiedocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body7.fill_sql"
      LET l_sql = " 1=1"
      #商品明細
      IF NOT cl_null(g_wc2_table1) AND g_wc2_table1 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1FROM xmdc_t ",
                                         " WHERE xmdcent   = rtieent ",
                                         "   AND xmdcdocno = rtiedocno ",
                                         "   AND xmdcseq   = rtieseq ",
                                         "   AND ",g_wc2_table1 CLIPPED,")" 
      END IF
	   #折扣明細
      IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM rtic_t ",
                                         " WHERE rticent   = rtieent ",
                                         "   AND rticdocno = rtiedocno ",
                                         "   AND rticseq   = rtieseq ",
                                         "   AND ",g_wc2_table2 CLIPPED,")" 
      END IF
      #多交期明細
      IF NOT cl_null(g_wc2_table3) AND g_wc2_table3 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmdd_t ",
                                         " WHERE xmddent   = rtieent ",
                                         "   AND xmdddocno = rtiedocno ",
                                         "   AND xmddseq   = rtieseq ",
                                         "   AND ",g_wc2_table3 CLIPPED,")" 
      END IF
      #商品明細
      IF NOT cl_null(g_wc2_table4) AND g_wc2_table4 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmja_t ",
                                         " WHERE xmjaent   = rtieent ",
                                         "   AND xmjadocno = rtiedocno ",
                                         "   AND xmjaseq   = rtieseq ",
                                         "   AND ",g_wc2_table4 CLIPPED,")"  
      END IF
      #多期預收款明細
      IF NOT cl_null(g_wc2_table5) AND g_wc2_table5 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xmdb_t ",
                                         " WHERE xmdbent   = rtieent ",
                                         "   AND xmdbdocno = rtiedocno ",
                                         "   AND ",g_wc2_table5 CLIPPED,")"  
      END IF
      #交易稅明細
      IF NOT cl_null(g_wc2_table6) AND g_wc2_table6 <> " 1=1" THEN
         LET l_sql = l_sql CLIPPED,
                            " AND EXISTS (SELECT 1 FROM xrcd_t ",
                                         " WHERE xrcdent   = rtieent ",
                                         "   AND xrcddocno = rtiedocno ",
                                         "   AND xrcdseq   = rtieseq ",
                                         "   AND ",g_wc2_table6 CLIPPED,")"   
      END IF
      IF NOT cl_null(l_sql) THEN
         LET g_sql = g_sql CLIPPED," AND ",l_sql CLIPPED
      END IF
         #end add-point
         IF NOT cl_null(g_wc2_table7) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table7 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtie_t.rtieseq,rtie_t.rtieseq1"
         
         #add-point:單身填充控制 name="b_fill.sql7"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adbt500_pb7 FROM g_sql
         DECLARE b_fill_cs7 CURSOR FOR adbt500_pb7
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs7 USING g_enterprise,g_xmda_m.xmdadocno   #(ver:78)
                                               
      FOREACH b_fill_cs7 USING g_enterprise,g_xmda_m.xmdadocno INTO g_xmdc7_d[l_ac].rtieseq,g_xmdc7_d[l_ac].rtieseq1, 
          g_xmdc7_d[l_ac].rtie001,g_xmdc7_d[l_ac].rtie002,g_xmdc7_d[l_ac].rtie006,g_xmdc7_d[l_ac].rtie002_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill7.fill"
         EXECUTE adbt500_pre USING g_xmdc7_d[l_ac].rtieseq
                              INTO g_xmdc7_d[l_ac].imay0032,g_xmdc7_d[l_ac].imaa0012,
                                   g_xmdc7_d[l_ac].imaa0012_desc,
                                   g_xmdc7_d[l_ac].imaa0012_desc_desc
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   #160513-00033#4--(S)
   #判斷是否填充
   IF adbt500_fill_chk(8) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT DISTINCT xmdcseq,xmdc200,xmdc201,",
                           " (CASE WHEN stcj029 = '1' ",
                           " THEN (SELECT oocql004 FROM oocql_t WHERE oocqlent = '" ||g_enterprise|| "' AND oocql001 = '2147'  AND oocql002 = stcj031 AND oocql003 =  '" ||g_dlang|| "') ",
                           " ELSE (SELECT stael003 FROM stael_t WHERE staelent = '" ||g_enterprise|| "' AND stael001 = stcj004 AND stael002 ='" ||g_dlang|| "')",
                           " END) ,xmdc001,'','', ",
                           " stcj013,stcj032,xmdc016 ,xmdc017 ,'',xmdc049 ,'',ABS(xmdc046) ,ABS(xmdc047)",
                     " FROM stci_t,stcj_t,xmdc_t INNER JOIN  xmda_t ON xmdaent = '" ||g_enterprise|| "' AND xmdadocno = xmdcdocno ",  
                     " WHERE xmdcent=? AND xmdcdocno=?",
                     "   AND xmdc200 = stcjdocno AND xmdc201 = stcjseq AND stcient = stcjent AND stcidocno = stcjdocno AND stcistus = 'Y' AND xmdcent = stcient "
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         LET l_sql = " 1=1"
         #商品明細
         IF NOT cl_null(g_wc2_table1) AND g_wc2_table1 <> " 1=1" THEN
            LET l_sql = l_sql CLIPPED,
                               " AND EXISTS (SELECT 1FROM xmdc_t ",
                                            " WHERE xmdcent   = rtieent ",
                                            "   AND xmdcdocno = rtiedocno ",
                                            "   AND xmdcseq   = rtieseq ",
                                            "   AND ",g_wc2_table1 CLIPPED,")" 
         END IF
   	   #折扣明細
         IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
            LET l_sql = l_sql CLIPPED,
                               " AND EXISTS (SELECT 1 FROM rtic_t ",
                                            " WHERE rticent   = rtieent ",
                                            "   AND rticdocno = rtiedocno ",
                                            "   AND rticseq   = rtieseq ",
                                            "   AND ",g_wc2_table2 CLIPPED,")" 
         END IF
         #多交期明細
         IF NOT cl_null(g_wc2_table3) AND g_wc2_table3 <> " 1=1" THEN
            LET l_sql = l_sql CLIPPED,
                               " AND EXISTS (SELECT 1 FROM xmdd_t ",
                                            " WHERE xmddent   = rtieent ",
                                            "   AND xmdddocno = rtiedocno ",
                                            "   AND xmddseq   = rtieseq ",
                                            "   AND ",g_wc2_table3 CLIPPED,")" 
         END IF
         #商品明細
         IF NOT cl_null(g_wc2_table4) AND g_wc2_table4 <> " 1=1" THEN
            LET l_sql = l_sql CLIPPED,
                               " AND EXISTS (SELECT 1 FROM xmja_t ",
                                            " WHERE xmjaent   = rtieent ",
                                            "   AND xmjadocno = rtiedocno ",
                                            "   AND xmjaseq   = rtieseq ",
                                            "   AND ",g_wc2_table4 CLIPPED,")"  
         END IF
         #多期預收款明細
         IF NOT cl_null(g_wc2_table5) AND g_wc2_table5 <> " 1=1" THEN
            LET l_sql = l_sql CLIPPED,
                               " AND EXISTS (SELECT 1 FROM xmdb_t ",
                                            " WHERE xmdbent   = rtieent ",
                                            "   AND xmdbdocno = rtiedocno ",
                                            "   AND ",g_wc2_table5 CLIPPED,")"  
         END IF
         #交易稅明細
         IF NOT cl_null(g_wc2_table6) AND g_wc2_table6 <> " 1=1" THEN
            LET l_sql = l_sql CLIPPED,
                               " AND EXISTS (SELECT 1 FROM xrcd_t ",
                                            " WHERE xrcdent   = rtieent ",
                                            "   AND xrcddocno = rtiedocno ",
                                            "   AND xrcdseq   = rtieseq ",
                                            "   AND ",g_wc2_table6 CLIPPED,")"   
         END IF
         IF NOT cl_null(l_sql) THEN
            LET g_sql = g_sql CLIPPED," AND ",l_sql CLIPPED
         END IF
         IF NOT cl_null(g_wc2_table7) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table7 CLIPPED
         END IF
         LET g_sql = g_sql, " ORDER BY xmdc_t.xmdcseq"
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adbt500_pb8 FROM g_sql
         DECLARE b_fill_cs8 CURSOR FOR adbt500_pb8
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs8 USING g_enterprise,g_xmda_m.xmdadocno
                                               
      FOREACH b_fill_cs8 INTO g_xmdc8_d[l_ac].l_xmdcseq,
         g_xmdc8_d[l_ac].l_xmdc200,g_xmdc8_d[l_ac].l_xmdc201,g_xmdc8_d[l_ac].l_stcj029,
         g_xmdc8_d[l_ac].l_xmdc001,g_xmdc8_d[l_ac].l_imaal003_desc,g_xmdc8_d[l_ac].l_imaal004_desc ,
         g_xmdc8_d[l_ac].l_stcj013,g_xmdc8_d[l_ac].l_stcj032,g_xmdc8_d[l_ac].l_xmdc016,
         g_xmdc8_d[l_ac].l_xmdc017,g_xmdc8_d[l_ac].l_oodb005,g_xmdc8_d[l_ac].l_xmdc049 ,
         g_xmdc8_d[l_ac].l_xmdc049_desc,g_xmdc8_d[l_ac].l_xmdc046,g_xmdc8_d[l_ac].l_xmdc047
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         CALL s_desc_get_item_desc(g_xmdc8_d[l_ac].l_xmdc001) RETURNING g_xmdc8_d[l_ac].l_imaal003_desc,g_xmdc8_d[l_ac].l_imaal004_desc
         CALL s_tax_chk(g_xmda_m.xmdasite,g_xmdc8_d[l_ac].l_xmdc016) RETURNING g_sub_success,l_no_use,g_xmdc8_d[l_ac].l_oodb005,l_no_use,l_no_use
         CALL s_desc_get_acc_desc('2146',g_xmdc8_d[l_ac].l_xmdc049) RETURNING g_xmdc8_d[l_ac].l_xmdc049_desc
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
   
   CALL g_xmdc8_d.deleteElement(g_xmdc8_d.getLength())   #160513-00033#4  
   FREE adbt500_pb8
   LET g_xmdc8_d_mask_o.* =  g_xmdc8_d.*
   FOR l_ac = 1 TO g_xmdc8_d.getLength()
      LET g_xmdc8_d_mask_o[l_ac].* =  g_xmdc8_d[l_ac].*
      CALL adbt500_xmdc_t_mask()
      LET g_xmdc8_d_mask_n[l_ac].* =  g_xmdc8_d[l_ac].*
   END FOR   
   #160513-00033#4--(E)
   #end add-point
   
   CALL g_xmdc_d.deleteElement(g_xmdc_d.getLength())
   CALL g_xmdc2_d.deleteElement(g_xmdc2_d.getLength())
   CALL g_xmdc3_d.deleteElement(g_xmdc3_d.getLength())
   CALL g_xmdc4_d.deleteElement(g_xmdc4_d.getLength())
   CALL g_xmdc5_d.deleteElement(g_xmdc5_d.getLength())
   CALL g_xmdc6_d.deleteElement(g_xmdc6_d.getLength())
   CALL g_xmdc7_d.deleteElement(g_xmdc7_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE adbt500_pb
   FREE adbt500_pb2
 
   FREE adbt500_pb3
 
   FREE adbt500_pb4
 
   FREE adbt500_pb5
 
   FREE adbt500_pb6
 
   FREE adbt500_pb7
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_xmdc_d.getLength()
      LET g_xmdc_d_mask_o[l_ac].* =  g_xmdc_d[l_ac].*
      CALL adbt500_xmdc_t_mask()
      LET g_xmdc_d_mask_n[l_ac].* =  g_xmdc_d[l_ac].*
   END FOR
   
   LET g_xmdc2_d_mask_o.* =  g_xmdc2_d.*
   FOR l_ac = 1 TO g_xmdc2_d.getLength()
      LET g_xmdc2_d_mask_o[l_ac].* =  g_xmdc2_d[l_ac].*
      CALL adbt500_rtic_t_mask()
      LET g_xmdc2_d_mask_n[l_ac].* =  g_xmdc2_d[l_ac].*
   END FOR
   LET g_xmdc3_d_mask_o.* =  g_xmdc3_d.*
   FOR l_ac = 1 TO g_xmdc3_d.getLength()
      LET g_xmdc3_d_mask_o[l_ac].* =  g_xmdc3_d[l_ac].*
      CALL adbt500_xmdd_t_mask()
      LET g_xmdc3_d_mask_n[l_ac].* =  g_xmdc3_d[l_ac].*
   END FOR
   LET g_xmdc4_d_mask_o.* =  g_xmdc4_d.*
   FOR l_ac = 1 TO g_xmdc4_d.getLength()
      LET g_xmdc4_d_mask_o[l_ac].* =  g_xmdc4_d[l_ac].*
      CALL adbt500_xmja_t_mask()
      LET g_xmdc4_d_mask_n[l_ac].* =  g_xmdc4_d[l_ac].*
   END FOR
   LET g_xmdc5_d_mask_o.* =  g_xmdc5_d.*
   FOR l_ac = 1 TO g_xmdc5_d.getLength()
      LET g_xmdc5_d_mask_o[l_ac].* =  g_xmdc5_d[l_ac].*
      CALL adbt500_xmdb_t_mask()
      LET g_xmdc5_d_mask_n[l_ac].* =  g_xmdc5_d[l_ac].*
   END FOR
   LET g_xmdc6_d_mask_o.* =  g_xmdc6_d.*
   FOR l_ac = 1 TO g_xmdc6_d.getLength()
      LET g_xmdc6_d_mask_o[l_ac].* =  g_xmdc6_d[l_ac].*
      CALL adbt500_xrcd_t_mask()
      LET g_xmdc6_d_mask_n[l_ac].* =  g_xmdc6_d[l_ac].*
   END FOR
   LET g_xmdc7_d_mask_o.* =  g_xmdc7_d.*
   FOR l_ac = 1 TO g_xmdc7_d.getLength()
      LET g_xmdc7_d_mask_o[l_ac].* =  g_xmdc7_d[l_ac].*
      CALL adbt500_rtie_t_mask()
      LET g_xmdc7_d_mask_n[l_ac].* =  g_xmdc7_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="adbt500.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION adbt500_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
                  
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
                                    
      #end add-point    
      DELETE FROM xmdc_t
       WHERE xmdcent = g_enterprise AND
         xmdcdocno = ps_keys_bak[1] AND xmdcseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
                                    
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmdc_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
                                    
      #end add-point    
      DELETE FROM rtic_t
       WHERE rticent = g_enterprise AND
             rticdocno = ps_keys_bak[1] AND rticseq = ps_keys_bak[2] AND rticseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
                                    
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_xmdc2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
                                    
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete3"
                                    
      #end add-point    
      DELETE FROM xmdd_t
       WHERE xmddent = g_enterprise AND
             xmdddocno = ps_keys_bak[1] AND xmddseq = ps_keys_bak[2] AND xmddseq1 = ps_keys_bak[3] AND xmddseq2 = ps_keys_bak[4]
      #add-point:delete_b段刪除中 name="delete_b.m_delete3"
                                    
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmdc3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete3"
                                    
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete4"
      
      #end add-point    
      DELETE FROM xmja_t
       WHERE xmjaent = g_enterprise AND
             xmjadocno = ps_keys_bak[1] AND xmjaseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete4"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmja_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_xmdc4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete4"
      
      #end add-point    
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete5"
      
      #end add-point    
      DELETE FROM xmdb_t
       WHERE xmdbent = g_enterprise AND
             xmdbdocno = ps_keys_bak[1] AND xmdb001 = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete5"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_xmdc5_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete5"
      
      #end add-point    
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete6"
      
      #end add-point    
      DELETE FROM xrcd_t
       WHERE xrcdent = g_enterprise AND
             xrcddocno = ps_keys_bak[1] AND xrcdld = ps_keys_bak[2] AND xrcdseq = ps_keys_bak[3] AND xrcdseq2 = ps_keys_bak[4] AND xrcd007 = ps_keys_bak[5]
      #add-point:delete_b段刪除中 name="delete_b.m_delete6"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_xmdc6_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete6"
      
      #end add-point    
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete7"
      
      #end add-point    
      DELETE FROM rtie_t
       WHERE rtieent = g_enterprise AND
             rtiedocno = ps_keys_bak[1] AND rtieseq = ps_keys_bak[2] AND rtieseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete7"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_xmdc7_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete7"
      
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   #160513-00033#4--(S)
   LET ls_group = "'8',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN                                    
      DELETE FROM xmdc_t
       WHERE xmdcent = g_enterprise AND
         xmdcdocno = ps_keys_bak[1] AND xmdcseq = ps_keys_bak[2]                                    

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'8'" THEN 
         CALL g_xmdc8_d.deleteElement(li_idx) 
      END IF 
 
   END IF 
   #160513-00033#4--(E)
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION adbt500_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
                  
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      #lori522612  150116  add ----------------------(S)
      #產品特徵為NULL時,給空白   
      IF cl_null(g_xmdc_d[g_detail_idx].xmdc002) THEN
         LET g_xmdc_d[g_detail_idx].xmdc002 = ' '
      END IF
      #lori522612  150116  add ----------------------(E)                                    
      #end add-point 
      INSERT INTO xmdc_t
                  (xmdcent,
                   xmdcdocno,
                   xmdcseq
                   ,xmdcsite,xmdc027,xmdc001,xmdc002,xmdc004,xmdc005,xmdc006,xmdc007,xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc010,xmdc011,xmdc015,xmdc016,xmdc017,xmdc046,xmdc047,xmdc048,xmdc023,xmdc019,xmdc020,xmdc021,xmdc022,xmdc051,xmdcunit,xmdcorga,xmdc052,xmdc049,xmdc053,xmdc050) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmdc_d[g_detail_idx].xmdcsite,g_xmdc_d[g_detail_idx].xmdc027,g_xmdc_d[g_detail_idx].xmdc001, 
                       g_xmdc_d[g_detail_idx].xmdc002,g_xmdc_d[g_detail_idx].xmdc004,g_xmdc_d[g_detail_idx].xmdc005, 
                       g_xmdc_d[g_detail_idx].xmdc006,g_xmdc_d[g_detail_idx].xmdc007,g_xmdc_d[g_detail_idx].xmdc008, 
                       g_xmdc_d[g_detail_idx].xmdc009,g_xmdc_d[g_detail_idx].xmdc024,g_xmdc_d[g_detail_idx].xmdc012, 
                       g_xmdc_d[g_detail_idx].xmdc013,g_xmdc_d[g_detail_idx].xmdc045,g_xmdc_d[g_detail_idx].xmdc010, 
                       g_xmdc_d[g_detail_idx].xmdc011,g_xmdc_d[g_detail_idx].xmdc015,g_xmdc_d[g_detail_idx].xmdc016, 
                       g_xmdc_d[g_detail_idx].xmdc017,g_xmdc_d[g_detail_idx].xmdc046,g_xmdc_d[g_detail_idx].xmdc047, 
                       g_xmdc_d[g_detail_idx].xmdc048,g_xmdc_d[g_detail_idx].xmdc023,g_xmdc_d[g_detail_idx].xmdc019, 
                       g_xmdc_d[g_detail_idx].xmdc020,g_xmdc_d[g_detail_idx].xmdc021,g_xmdc_d[g_detail_idx].xmdc022, 
                       g_xmdc_d[g_detail_idx].xmdc051,g_xmdc_d[g_detail_idx].xmdcunit,g_xmdc_d[g_detail_idx].xmdcorga, 
                       g_xmdc_d[g_detail_idx].xmdc052,g_xmdc_d[g_detail_idx].xmdc049,g_xmdc_d[g_detail_idx].xmdc053, 
                       g_xmdc_d[g_detail_idx].xmdc050)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
                                    
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdc_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_xmdc_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
                                    
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
                                    
      #end add-point 
      INSERT INTO rtic_t
                  (rticent,
                   rticdocno,
                   rticseq,rticseq1
                   ,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007,rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic019,rtic020,rtic021,rtic022,rtic023,rtic024,rtic025,rtic026,rtic027,rtic028,rtic029) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_xmdc2_d[g_detail_idx].rtic001,g_xmdc2_d[g_detail_idx].rtic002,g_xmdc2_d[g_detail_idx].rtic003, 
                       g_xmdc2_d[g_detail_idx].rtic004,g_xmdc2_d[g_detail_idx].rtic005,g_xmdc2_d[g_detail_idx].rtic006, 
                       g_xmdc2_d[g_detail_idx].rtic007,g_xmdc2_d[g_detail_idx].rtic008,g_xmdc2_d[g_detail_idx].rtic009, 
                       g_xmdc2_d[g_detail_idx].rtic010,g_xmdc2_d[g_detail_idx].rtic011,g_xmdc2_d[g_detail_idx].rtic012, 
                       g_xmdc2_d[g_detail_idx].rtic013,g_xmdc2_d[g_detail_idx].rtic014,g_xmdc2_d[g_detail_idx].rtic015, 
                       g_xmdc2_d[g_detail_idx].rtic016,g_xmdc2_d[g_detail_idx].rtic017,g_xmdc2_d[g_detail_idx].rtic018, 
                       g_xmdc2_d[g_detail_idx].rtic019,g_xmdc2_d[g_detail_idx].rtic020,g_xmdc2_d[g_detail_idx].rtic021, 
                       g_xmdc2_d[g_detail_idx].rtic022,g_xmdc2_d[g_detail_idx].rtic023,g_xmdc2_d[g_detail_idx].rtic024, 
                       g_xmdc2_d[g_detail_idx].rtic025,g_xmdc2_d[g_detail_idx].rtic026,g_xmdc2_d[g_detail_idx].rtic027, 
                       g_xmdc2_d[g_detail_idx].rtic028,g_xmdc2_d[g_detail_idx].rtic029)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
                                    
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_xmdc2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
                                    
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert3"
      #lori522612  150116  add ----------------------(S)
      #產品特徵為NULL時,給空白   
      IF cl_null(g_xmdc3_d[g_detail_idx].xmdd002) THEN
         LET g_xmdc3_d[g_detail_idx].xmdd002 = ' '
      END IF
      #lori522612  150116  add ----------------------(E)                                    
      #end add-point 
      INSERT INTO xmdd_t
                  (xmddent,
                   xmdddocno,
                   xmddseq,xmddseq1,xmddseq2
                   ,xmdd229,xmdd003,xmdd001,xmdd002,xmdd200,xmdd004,xmdd005,xmdd011,xmdd012,xmdd006,xmdd201,xmdd202,xmdd024,xmdd025,xmdd026,xmdd027,xmdd203,xmdd204,xmdd205,xmdd206,xmdd029,xmdd028,xmdd019,xmdd030,xmdd207,xmddunit,xmdd210,xmdd212,xmdd213,xmdd214,xmdd215,xmdd231,xmdd009,xmdd031,xmdd014,xmdd015,xmdd016,xmdd017,xmdd221,xmddsite,xmdd218,xmdd219,xmdd220,xmdd222,xmdd223,xmdd224,xmddorga,xmdd226,xmdd227,xmdd228,xmdd013,xmdd018,xmdd020,xmdd021,xmdd022,xmdd023) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_xmdc3_d[g_detail_idx].xmdd229,g_xmdc3_d[g_detail_idx].xmdd003,g_xmdc3_d[g_detail_idx].xmdd001, 
                       g_xmdc3_d[g_detail_idx].xmdd002,g_xmdc3_d[g_detail_idx].xmdd200,g_xmdc3_d[g_detail_idx].xmdd004, 
                       g_xmdc3_d[g_detail_idx].xmdd005,g_xmdc3_d[g_detail_idx].xmdd011,g_xmdc3_d[g_detail_idx].xmdd012, 
                       g_xmdc3_d[g_detail_idx].xmdd006,g_xmdc3_d[g_detail_idx].xmdd201,g_xmdc3_d[g_detail_idx].xmdd202, 
                       g_xmdc3_d[g_detail_idx].xmdd024,g_xmdc3_d[g_detail_idx].xmdd025,g_xmdc3_d[g_detail_idx].xmdd026, 
                       g_xmdc3_d[g_detail_idx].xmdd027,g_xmdc3_d[g_detail_idx].xmdd203,g_xmdc3_d[g_detail_idx].xmdd204, 
                       g_xmdc3_d[g_detail_idx].xmdd205,g_xmdc3_d[g_detail_idx].xmdd206,g_xmdc3_d[g_detail_idx].xmdd029, 
                       g_xmdc3_d[g_detail_idx].xmdd028,g_xmdc3_d[g_detail_idx].xmdd019,g_xmdc3_d[g_detail_idx].xmdd030, 
                       g_xmdc3_d[g_detail_idx].xmdd207,g_xmdc3_d[g_detail_idx].xmddunit,g_xmdc3_d[g_detail_idx].xmdd210, 
                       g_xmdc3_d[g_detail_idx].xmdd212,g_xmdc3_d[g_detail_idx].xmdd213,g_xmdc3_d[g_detail_idx].xmdd214, 
                       g_xmdc3_d[g_detail_idx].xmdd215,g_xmdc3_d[g_detail_idx].xmdd231,g_xmdc3_d[g_detail_idx].xmdd009, 
                       g_xmdc3_d[g_detail_idx].xmdd031,g_xmdc3_d[g_detail_idx].xmdd014,g_xmdc3_d[g_detail_idx].xmdd015, 
                       g_xmdc3_d[g_detail_idx].xmdd016,g_xmdc3_d[g_detail_idx].xmdd017,g_xmdc3_d[g_detail_idx].xmdd221, 
                       g_xmdc3_d[g_detail_idx].xmddsite,g_xmdc3_d[g_detail_idx].xmdd218,g_xmdc3_d[g_detail_idx].xmdd219, 
                       g_xmdc3_d[g_detail_idx].xmdd220,g_xmdc3_d[g_detail_idx].xmdd222,g_xmdc3_d[g_detail_idx].xmdd223, 
                       g_xmdc3_d[g_detail_idx].xmdd224,g_xmdc3_d[g_detail_idx].xmddorga,g_xmdc3_d[g_detail_idx].xmdd226, 
                       g_xmdc3_d[g_detail_idx].xmdd227,g_xmdc3_d[g_detail_idx].xmdd228,g_xmdc3_d[g_detail_idx].xmdd013, 
                       g_xmdc3_d[g_detail_idx].xmdd018,g_xmdc3_d[g_detail_idx].xmdd020,g_xmdc3_d[g_detail_idx].xmdd021, 
                       g_xmdc3_d[g_detail_idx].xmdd022,g_xmdc3_d[g_detail_idx].xmdd023)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert3"
                                    
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_xmdc3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert3"
                                    
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert4"
       #lori522612  150116  add ----------------------(S)
       #產品特徵為NULL時,給空白
       IF cl_null(g_xmdc4_d[g_detail_idx].xmja004) THEN
          LET g_xmdc4_d[g_detail_idx].xmja004 = ' '
       END IF
       #lori522612  150116  add ----------------------(E)
      #end add-point 
      INSERT INTO xmja_t
                  (xmjaent,
                   xmjadocno,
                   xmjaseq
                   ,xmjaunit,xmjasite,xmja001,xmja002,xmja003,xmja033,xmja004,xmja005,xmja006,xmja007,xmja011,xmja012,xmja013,xmja014,xmja015,xmja016,xmja017,xmja018,xmja008,xmja009,xmja010,xmja022,xmja019,xmja020,xmja021,xmja024,xmja025,xmja026,xmja027,xmja028,xmja029,xmja030,xmja031,xmja032,xmja040,xmja039,xmja038,xmja037,xmja034) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmdc4_d[g_detail_idx].xmjaunit,g_xmdc4_d[g_detail_idx].xmjasite,g_xmdc4_d[g_detail_idx].xmja001, 
                       g_xmdc4_d[g_detail_idx].xmja002,g_xmdc4_d[g_detail_idx].xmja003,g_xmdc4_d[g_detail_idx].xmja033, 
                       g_xmdc4_d[g_detail_idx].xmja004,g_xmdc4_d[g_detail_idx].xmja005,g_xmdc4_d[g_detail_idx].xmja006, 
                       g_xmdc4_d[g_detail_idx].xmja007,g_xmdc4_d[g_detail_idx].xmja011,g_xmdc4_d[g_detail_idx].xmja012, 
                       g_xmdc4_d[g_detail_idx].xmja013,g_xmdc4_d[g_detail_idx].xmja014,g_xmdc4_d[g_detail_idx].xmja015, 
                       g_xmdc4_d[g_detail_idx].xmja016,g_xmdc4_d[g_detail_idx].xmja017,g_xmdc4_d[g_detail_idx].xmja018, 
                       g_xmdc4_d[g_detail_idx].xmja008,g_xmdc4_d[g_detail_idx].xmja009,g_xmdc4_d[g_detail_idx].xmja010, 
                       g_xmdc4_d[g_detail_idx].xmja022,g_xmdc4_d[g_detail_idx].xmja019,g_xmdc4_d[g_detail_idx].xmja020, 
                       g_xmdc4_d[g_detail_idx].xmja021,g_xmdc4_d[g_detail_idx].xmja024,g_xmdc4_d[g_detail_idx].xmja025, 
                       g_xmdc4_d[g_detail_idx].xmja026,g_xmdc4_d[g_detail_idx].xmja027,g_xmdc4_d[g_detail_idx].xmja028, 
                       g_xmdc4_d[g_detail_idx].xmja029,g_xmdc4_d[g_detail_idx].xmja030,g_xmdc4_d[g_detail_idx].xmja031, 
                       g_xmdc4_d[g_detail_idx].xmja032,g_xmdc4_d[g_detail_idx].xmja040,g_xmdc4_d[g_detail_idx].xmja039, 
                       g_xmdc4_d[g_detail_idx].xmja038,g_xmdc4_d[g_detail_idx].xmja037,g_xmdc4_d[g_detail_idx].xmja034) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert4"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmja_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_xmdc4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert4"
      
      #end add-point
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert5"
      
      #end add-point 
      INSERT INTO xmdb_t
                  (xmdbent,
                   xmdbdocno,
                   xmdb001
                   ,xmdbsite,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006,xmdb016,xmdb017,xmdb007,xmdb008,xmdb009,xmdb200) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_xmdc5_d[g_detail_idx].xmdbsite,g_xmdc5_d[g_detail_idx].xmdb002,g_xmdc5_d[g_detail_idx].xmdb003, 
                       g_xmdc5_d[g_detail_idx].xmdb004,g_xmdc5_d[g_detail_idx].xmdb005,g_xmdc5_d[g_detail_idx].xmdb006, 
                       g_xmdc5_d[g_detail_idx].xmdb016,g_xmdc5_d[g_detail_idx].xmdb017,g_xmdc5_d[g_detail_idx].xmdb007, 
                       g_xmdc5_d[g_detail_idx].xmdb008,g_xmdc5_d[g_detail_idx].xmdb009,g_xmdc5_d[g_detail_idx].xmdb200) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert5"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xmdb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_xmdc5_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert5"
      
      #end add-point
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert6"
      
      #end add-point 
      INSERT INTO xrcd_t
                  (xrcdent,
                   xrcddocno,
                   xrcdld,xrcdseq,xrcdseq2,xrcd007
                   ,xrcd002,xrcd003,xrcd006,xrcd004,xrcd104) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
                   ,g_xmdc6_d[g_detail_idx].xrcd002,g_xmdc6_d[g_detail_idx].xrcd003,g_xmdc6_d[g_detail_idx].xrcd006, 
                       g_xmdc6_d[g_detail_idx].xrcd004,g_xmdc6_d[g_detail_idx].xrcd104)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert6"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_xmdc6_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert6"
      
      #end add-point
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert7"
      
      #end add-point 
      INSERT INTO rtie_t
                  (rtieent,
                   rtiedocno,
                   rtieseq,rtieseq1
                   ,rtie001,rtie002,rtie006) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_xmdc7_d[g_detail_idx].rtie001,g_xmdc7_d[g_detail_idx].rtie002,g_xmdc7_d[g_detail_idx].rtie006) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert7"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_xmdc7_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert7"
      
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
                  
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION adbt500_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
                  
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdc_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      #lori522612  150116  add ----------------------(S)
      #產品特徵為NULL時,給空白   
      IF cl_null(g_xmdc_d[g_detail_idx].xmdc002) THEN
         LET g_xmdc_d[g_detail_idx].xmdc002 = ' '
      END IF
      #lori522612  150116  add ----------------------(E)                                      
      #end add-point 
      
      #將遮罩欄位還原
      CALL adbt500_xmdc_t_mask_restore('restore_mask_o')
               
      UPDATE xmdc_t 
         SET (xmdcdocno,
              xmdcseq
              ,xmdcsite,xmdc027,xmdc001,xmdc002,xmdc004,xmdc005,xmdc006,xmdc007,xmdc008,xmdc009,xmdc024,xmdc012,xmdc013,xmdc045,xmdc010,xmdc011,xmdc015,xmdc016,xmdc017,xmdc046,xmdc047,xmdc048,xmdc023,xmdc019,xmdc020,xmdc021,xmdc022,xmdc051,xmdcunit,xmdcorga,xmdc052,xmdc049,xmdc053,xmdc050) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmdc_d[g_detail_idx].xmdcsite,g_xmdc_d[g_detail_idx].xmdc027,g_xmdc_d[g_detail_idx].xmdc001, 
                  g_xmdc_d[g_detail_idx].xmdc002,g_xmdc_d[g_detail_idx].xmdc004,g_xmdc_d[g_detail_idx].xmdc005, 
                  g_xmdc_d[g_detail_idx].xmdc006,g_xmdc_d[g_detail_idx].xmdc007,g_xmdc_d[g_detail_idx].xmdc008, 
                  g_xmdc_d[g_detail_idx].xmdc009,g_xmdc_d[g_detail_idx].xmdc024,g_xmdc_d[g_detail_idx].xmdc012, 
                  g_xmdc_d[g_detail_idx].xmdc013,g_xmdc_d[g_detail_idx].xmdc045,g_xmdc_d[g_detail_idx].xmdc010, 
                  g_xmdc_d[g_detail_idx].xmdc011,g_xmdc_d[g_detail_idx].xmdc015,g_xmdc_d[g_detail_idx].xmdc016, 
                  g_xmdc_d[g_detail_idx].xmdc017,g_xmdc_d[g_detail_idx].xmdc046,g_xmdc_d[g_detail_idx].xmdc047, 
                  g_xmdc_d[g_detail_idx].xmdc048,g_xmdc_d[g_detail_idx].xmdc023,g_xmdc_d[g_detail_idx].xmdc019, 
                  g_xmdc_d[g_detail_idx].xmdc020,g_xmdc_d[g_detail_idx].xmdc021,g_xmdc_d[g_detail_idx].xmdc022, 
                  g_xmdc_d[g_detail_idx].xmdc051,g_xmdc_d[g_detail_idx].xmdcunit,g_xmdc_d[g_detail_idx].xmdcorga, 
                  g_xmdc_d[g_detail_idx].xmdc052,g_xmdc_d[g_detail_idx].xmdc049,g_xmdc_d[g_detail_idx].xmdc053, 
                  g_xmdc_d[g_detail_idx].xmdc050) 
         WHERE xmdcent = g_enterprise AND xmdcdocno = ps_keys_bak[1] AND xmdcseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
                                    
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdc_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdc_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adbt500_xmdc_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
                                    
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtic_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
                                    
      #end add-point  
      
      #將遮罩欄位還原
      CALL adbt500_rtic_t_mask_restore('restore_mask_o')
               
      UPDATE rtic_t 
         SET (rticdocno,
              rticseq,rticseq1
              ,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007,rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic019,rtic020,rtic021,rtic022,rtic023,rtic024,rtic025,rtic026,rtic027,rtic028,rtic029) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_xmdc2_d[g_detail_idx].rtic001,g_xmdc2_d[g_detail_idx].rtic002,g_xmdc2_d[g_detail_idx].rtic003, 
                  g_xmdc2_d[g_detail_idx].rtic004,g_xmdc2_d[g_detail_idx].rtic005,g_xmdc2_d[g_detail_idx].rtic006, 
                  g_xmdc2_d[g_detail_idx].rtic007,g_xmdc2_d[g_detail_idx].rtic008,g_xmdc2_d[g_detail_idx].rtic009, 
                  g_xmdc2_d[g_detail_idx].rtic010,g_xmdc2_d[g_detail_idx].rtic011,g_xmdc2_d[g_detail_idx].rtic012, 
                  g_xmdc2_d[g_detail_idx].rtic013,g_xmdc2_d[g_detail_idx].rtic014,g_xmdc2_d[g_detail_idx].rtic015, 
                  g_xmdc2_d[g_detail_idx].rtic016,g_xmdc2_d[g_detail_idx].rtic017,g_xmdc2_d[g_detail_idx].rtic018, 
                  g_xmdc2_d[g_detail_idx].rtic019,g_xmdc2_d[g_detail_idx].rtic020,g_xmdc2_d[g_detail_idx].rtic021, 
                  g_xmdc2_d[g_detail_idx].rtic022,g_xmdc2_d[g_detail_idx].rtic023,g_xmdc2_d[g_detail_idx].rtic024, 
                  g_xmdc2_d[g_detail_idx].rtic025,g_xmdc2_d[g_detail_idx].rtic026,g_xmdc2_d[g_detail_idx].rtic027, 
                  g_xmdc2_d[g_detail_idx].rtic028,g_xmdc2_d[g_detail_idx].rtic029) 
         WHERE rticent = g_enterprise AND rticdocno = ps_keys_bak[1] AND rticseq = ps_keys_bak[2] AND rticseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update2"
                                    
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtic_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adbt500_rtic_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
                                    
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdd_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update3"
      #lori522612  150116  add ----------------------(S)
      #產品特徵為NULL時,給空白   
      IF cl_null(g_xmdc3_d[g_detail_idx].xmdd002) THEN
         LET g_xmdc3_d[g_detail_idx].xmdd002 = ' '
      END IF
      #lori522612  150116  add ----------------------(E)                                    
      #end add-point  
      
      #將遮罩欄位還原
      CALL adbt500_xmdd_t_mask_restore('restore_mask_o')
               
      UPDATE xmdd_t 
         SET (xmdddocno,
              xmddseq,xmddseq1,xmddseq2
              ,xmdd229,xmdd003,xmdd001,xmdd002,xmdd200,xmdd004,xmdd005,xmdd011,xmdd012,xmdd006,xmdd201,xmdd202,xmdd024,xmdd025,xmdd026,xmdd027,xmdd203,xmdd204,xmdd205,xmdd206,xmdd029,xmdd028,xmdd019,xmdd030,xmdd207,xmddunit,xmdd210,xmdd212,xmdd213,xmdd214,xmdd215,xmdd231,xmdd009,xmdd031,xmdd014,xmdd015,xmdd016,xmdd017,xmdd221,xmddsite,xmdd218,xmdd219,xmdd220,xmdd222,xmdd223,xmdd224,xmddorga,xmdd226,xmdd227,xmdd228,xmdd013,xmdd018,xmdd020,xmdd021,xmdd022,xmdd023) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_xmdc3_d[g_detail_idx].xmdd229,g_xmdc3_d[g_detail_idx].xmdd003,g_xmdc3_d[g_detail_idx].xmdd001, 
                  g_xmdc3_d[g_detail_idx].xmdd002,g_xmdc3_d[g_detail_idx].xmdd200,g_xmdc3_d[g_detail_idx].xmdd004, 
                  g_xmdc3_d[g_detail_idx].xmdd005,g_xmdc3_d[g_detail_idx].xmdd011,g_xmdc3_d[g_detail_idx].xmdd012, 
                  g_xmdc3_d[g_detail_idx].xmdd006,g_xmdc3_d[g_detail_idx].xmdd201,g_xmdc3_d[g_detail_idx].xmdd202, 
                  g_xmdc3_d[g_detail_idx].xmdd024,g_xmdc3_d[g_detail_idx].xmdd025,g_xmdc3_d[g_detail_idx].xmdd026, 
                  g_xmdc3_d[g_detail_idx].xmdd027,g_xmdc3_d[g_detail_idx].xmdd203,g_xmdc3_d[g_detail_idx].xmdd204, 
                  g_xmdc3_d[g_detail_idx].xmdd205,g_xmdc3_d[g_detail_idx].xmdd206,g_xmdc3_d[g_detail_idx].xmdd029, 
                  g_xmdc3_d[g_detail_idx].xmdd028,g_xmdc3_d[g_detail_idx].xmdd019,g_xmdc3_d[g_detail_idx].xmdd030, 
                  g_xmdc3_d[g_detail_idx].xmdd207,g_xmdc3_d[g_detail_idx].xmddunit,g_xmdc3_d[g_detail_idx].xmdd210, 
                  g_xmdc3_d[g_detail_idx].xmdd212,g_xmdc3_d[g_detail_idx].xmdd213,g_xmdc3_d[g_detail_idx].xmdd214, 
                  g_xmdc3_d[g_detail_idx].xmdd215,g_xmdc3_d[g_detail_idx].xmdd231,g_xmdc3_d[g_detail_idx].xmdd009, 
                  g_xmdc3_d[g_detail_idx].xmdd031,g_xmdc3_d[g_detail_idx].xmdd014,g_xmdc3_d[g_detail_idx].xmdd015, 
                  g_xmdc3_d[g_detail_idx].xmdd016,g_xmdc3_d[g_detail_idx].xmdd017,g_xmdc3_d[g_detail_idx].xmdd221, 
                  g_xmdc3_d[g_detail_idx].xmddsite,g_xmdc3_d[g_detail_idx].xmdd218,g_xmdc3_d[g_detail_idx].xmdd219, 
                  g_xmdc3_d[g_detail_idx].xmdd220,g_xmdc3_d[g_detail_idx].xmdd222,g_xmdc3_d[g_detail_idx].xmdd223, 
                  g_xmdc3_d[g_detail_idx].xmdd224,g_xmdc3_d[g_detail_idx].xmddorga,g_xmdc3_d[g_detail_idx].xmdd226, 
                  g_xmdc3_d[g_detail_idx].xmdd227,g_xmdc3_d[g_detail_idx].xmdd228,g_xmdc3_d[g_detail_idx].xmdd013, 
                  g_xmdc3_d[g_detail_idx].xmdd018,g_xmdc3_d[g_detail_idx].xmdd020,g_xmdc3_d[g_detail_idx].xmdd021, 
                  g_xmdc3_d[g_detail_idx].xmdd022,g_xmdc3_d[g_detail_idx].xmdd023) 
         WHERE xmddent = g_enterprise AND xmdddocno = ps_keys_bak[1] AND xmddseq = ps_keys_bak[2] AND xmddseq1 = ps_keys_bak[3] AND xmddseq2 = ps_keys_bak[4]
      #add-point:update_b段修改中 name="update_b.m_update3"
                                    
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdd_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdd_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adbt500_xmdd_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update3"
                                    
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmja_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update4"
      #lori522612  150116  add ----------------------(S)
      #產品特徵為NULL時,給空白   
      IF cl_null(g_xmdc4_d[g_detail_idx].xmja004) THEN
         LET g_xmdc4_d[g_detail_idx].xmja004 = ' '
      END IF
      #lori522612  150116  add ----------------------(E)
      #end add-point  
      
      #將遮罩欄位還原
      CALL adbt500_xmja_t_mask_restore('restore_mask_o')
               
      UPDATE xmja_t 
         SET (xmjadocno,
              xmjaseq
              ,xmjaunit,xmjasite,xmja001,xmja002,xmja003,xmja033,xmja004,xmja005,xmja006,xmja007,xmja011,xmja012,xmja013,xmja014,xmja015,xmja016,xmja017,xmja018,xmja008,xmja009,xmja010,xmja022,xmja019,xmja020,xmja021,xmja024,xmja025,xmja026,xmja027,xmja028,xmja029,xmja030,xmja031,xmja032,xmja040,xmja039,xmja038,xmja037,xmja034) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmdc4_d[g_detail_idx].xmjaunit,g_xmdc4_d[g_detail_idx].xmjasite,g_xmdc4_d[g_detail_idx].xmja001, 
                  g_xmdc4_d[g_detail_idx].xmja002,g_xmdc4_d[g_detail_idx].xmja003,g_xmdc4_d[g_detail_idx].xmja033, 
                  g_xmdc4_d[g_detail_idx].xmja004,g_xmdc4_d[g_detail_idx].xmja005,g_xmdc4_d[g_detail_idx].xmja006, 
                  g_xmdc4_d[g_detail_idx].xmja007,g_xmdc4_d[g_detail_idx].xmja011,g_xmdc4_d[g_detail_idx].xmja012, 
                  g_xmdc4_d[g_detail_idx].xmja013,g_xmdc4_d[g_detail_idx].xmja014,g_xmdc4_d[g_detail_idx].xmja015, 
                  g_xmdc4_d[g_detail_idx].xmja016,g_xmdc4_d[g_detail_idx].xmja017,g_xmdc4_d[g_detail_idx].xmja018, 
                  g_xmdc4_d[g_detail_idx].xmja008,g_xmdc4_d[g_detail_idx].xmja009,g_xmdc4_d[g_detail_idx].xmja010, 
                  g_xmdc4_d[g_detail_idx].xmja022,g_xmdc4_d[g_detail_idx].xmja019,g_xmdc4_d[g_detail_idx].xmja020, 
                  g_xmdc4_d[g_detail_idx].xmja021,g_xmdc4_d[g_detail_idx].xmja024,g_xmdc4_d[g_detail_idx].xmja025, 
                  g_xmdc4_d[g_detail_idx].xmja026,g_xmdc4_d[g_detail_idx].xmja027,g_xmdc4_d[g_detail_idx].xmja028, 
                  g_xmdc4_d[g_detail_idx].xmja029,g_xmdc4_d[g_detail_idx].xmja030,g_xmdc4_d[g_detail_idx].xmja031, 
                  g_xmdc4_d[g_detail_idx].xmja032,g_xmdc4_d[g_detail_idx].xmja040,g_xmdc4_d[g_detail_idx].xmja039, 
                  g_xmdc4_d[g_detail_idx].xmja038,g_xmdc4_d[g_detail_idx].xmja037,g_xmdc4_d[g_detail_idx].xmja034)  
 
         WHERE xmjaent = g_enterprise AND xmjadocno = ps_keys_bak[1] AND xmjaseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update4"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmja_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmja_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adbt500_xmja_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update4"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xmdb_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update5"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL adbt500_xmdb_t_mask_restore('restore_mask_o')
               
      UPDATE xmdb_t 
         SET (xmdbdocno,
              xmdb001
              ,xmdbsite,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006,xmdb016,xmdb017,xmdb007,xmdb008,xmdb009,xmdb200) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_xmdc5_d[g_detail_idx].xmdbsite,g_xmdc5_d[g_detail_idx].xmdb002,g_xmdc5_d[g_detail_idx].xmdb003, 
                  g_xmdc5_d[g_detail_idx].xmdb004,g_xmdc5_d[g_detail_idx].xmdb005,g_xmdc5_d[g_detail_idx].xmdb006, 
                  g_xmdc5_d[g_detail_idx].xmdb016,g_xmdc5_d[g_detail_idx].xmdb017,g_xmdc5_d[g_detail_idx].xmdb007, 
                  g_xmdc5_d[g_detail_idx].xmdb008,g_xmdc5_d[g_detail_idx].xmdb009,g_xmdc5_d[g_detail_idx].xmdb200)  
 
         WHERE xmdbent = g_enterprise AND xmdbdocno = ps_keys_bak[1] AND xmdb001 = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update5"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdb_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xmdb_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adbt500_xmdb_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update5"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xrcd_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update6"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL adbt500_xrcd_t_mask_restore('restore_mask_o')
               
      UPDATE xrcd_t 
         SET (xrcddocno,
              xrcdld,xrcdseq,xrcdseq2,xrcd007
              ,xrcd002,xrcd003,xrcd006,xrcd004,xrcd104) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
              ,g_xmdc6_d[g_detail_idx].xrcd002,g_xmdc6_d[g_detail_idx].xrcd003,g_xmdc6_d[g_detail_idx].xrcd006, 
                  g_xmdc6_d[g_detail_idx].xrcd004,g_xmdc6_d[g_detail_idx].xrcd104) 
         WHERE xrcdent = g_enterprise AND xrcddocno = ps_keys_bak[1] AND xrcdld = ps_keys_bak[2] AND xrcdseq = ps_keys_bak[3] AND xrcdseq2 = ps_keys_bak[4] AND xrcd007 = ps_keys_bak[5]
      #add-point:update_b段修改中 name="update_b.m_update6"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xrcd_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adbt500_xrcd_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update6"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtie_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update7"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL adbt500_rtie_t_mask_restore('restore_mask_o')
               
      UPDATE rtie_t 
         SET (rtiedocno,
              rtieseq,rtieseq1
              ,rtie001,rtie002,rtie006) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_xmdc7_d[g_detail_idx].rtie001,g_xmdc7_d[g_detail_idx].rtie002,g_xmdc7_d[g_detail_idx].rtie006)  
 
         WHERE rtieent = g_enterprise AND rtiedocno = ps_keys_bak[1] AND rtieseq = ps_keys_bak[2] AND rtieseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update7"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtie_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL adbt500_rtie_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update7"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
                  
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION adbt500_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION adbt500_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION adbt500_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
                  
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL adbt500_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "xmdc_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN adbt500_bcl USING g_enterprise,
                                       g_xmda_m.xmdadocno,g_xmdc_d[g_detail_idx].xmdcseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adbt500_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "rtic_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adbt500_bcl2 USING g_enterprise,
                                             g_xmda_m.xmdadocno,g_xmdc2_d[g_detail_idx].rticseq,g_xmdc2_d[g_detail_idx].rticseq1 
 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adbt500_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "xmdd_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adbt500_bcl3 USING g_enterprise,
                                             g_xmda_m.xmdadocno,g_xmdc3_d[g_detail_idx].xmddseq,g_xmdc3_d[g_detail_idx].xmddseq1, 
                                                 g_xmdc3_d[g_detail_idx].xmddseq2
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adbt500_bcl3:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "xmja_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adbt500_bcl4 USING g_enterprise,
                                             g_xmda_m.xmdadocno,g_xmdc4_d[g_detail_idx].xmjaseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adbt500_bcl4:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'5',"
   #僅鎖定自身table
   LET ls_group = "xmdb_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adbt500_bcl5 USING g_enterprise,
                                             g_xmda_m.xmdadocno,g_xmdc5_d[g_detail_idx].xmdb001
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adbt500_bcl5:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'6',"
   #僅鎖定自身table
   LET ls_group = "xrcd_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adbt500_bcl6 USING g_enterprise,
                                             g_xmda_m.xmdadocno,g_xmdc6_d[g_detail_idx].xrcdld,g_xmdc6_d[g_detail_idx].xrcdseq, 
                                                 g_xmdc6_d[g_detail_idx].xrcdseq2,g_xmdc6_d[g_detail_idx].xrcd007 
 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adbt500_bcl6:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'7',"
   #僅鎖定自身table
   LET ls_group = "rtie_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adbt500_bcl7 USING g_enterprise,
                                             g_xmda_m.xmdadocno,g_xmdc7_d[g_detail_idx].rtieseq,g_xmdc7_d[g_detail_idx].rtieseq1 
 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adbt500_bcl7:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
                  
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="adbt500.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION adbt500_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
                  
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adbt500_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adbt500_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adbt500_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adbt500_bcl4
   END IF
 
   LET ls_group = "'5',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adbt500_bcl5
   END IF
 
   LET ls_group = "'6',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adbt500_bcl6
   END IF
 
   LET ls_group = "'7',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adbt500_bcl7
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
                  
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="adbt500.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION adbt500_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
                  
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("xmdadocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xmdadocno",TRUE)
      CALL cl_set_comp_entry("xmdadocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("xmdadocdt",TRUE)
      CALL cl_set_comp_entry("xmdasite",TRUE)
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   CALL cl_set_comp_entry("xmda043,xmda039",TRUE)
   CALL cl_set_comp_entry("xmda200,xmda201",TRUE)
   CALL cl_set_comp_required("xmda200",TRUE)
   CALL cl_set_comp_entry("xmda032",TRUE) 
   CALL cl_set_comp_entry("xmda022,xmdaunit,xmda025",TRUE) 
   CALL cl_set_comp_entry("xmda005",TRUE)
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="adbt500.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION adbt500_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   DEFINE l_pmam003   LIKE pmam_t.pmam003
   DEFINE l_cnt       LIKE type_t.num5
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xmdadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      CALL cl_set_comp_entry("xmdadocdt",FALSE)
      CALL cl_set_comp_entry("xmdasite",FALSE)                                    
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("xmdadocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("xmdadocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF p_cmd = 'a' AND g_flag2 THEN
      CALL cl_set_comp_entry("xmdasite",FALSE)
   END IF
   IF NOT s_aooi500_comp_entry(g_prog,'xmdasite') THEN
      CALL cl_set_comp_entry("xmdasite",FALSE)  
   END IF
   IF NOT s_aooi500_comp_entry(g_prog,'xmdaunit') THEN
      CALL cl_set_comp_entry("xmdaunit",FALSE)  
   END IF
   IF NOT g_flag1 THEN
      CALL cl_set_comp_entry("xmda039",FALSE)
   END IF
   
   CALL cl_set_comp_entry("xmda043",FALSE)
      
   IF g_xmda_m.xmda005 <> '6' THEN
      CALL cl_set_comp_entry("xmda200",FALSE)
      CALL cl_set_comp_required("xmda200",FALSE)
   ELSE
      CALL cl_set_comp_entry("xmda201",FALSE)
   END IF
   
   IF g_xmda_m.xmda007 != '1' THEN
      CALL cl_set_comp_entry("xmda005",FALSE)
   END IF
   
   IF NOT g_hold THEN
      CALL cl_set_comp_entry("xmda032",FALSE) 
   END IF 
   LET l_cnt = 0
   SELECT COUNT(xmjaseq) INTO l_cnt
     FROM xmja_t
    WHERE xmjaent = g_enterprise
      AND xmjadocno = g_xmda_m.xmdadocno
   IF l_cnt > 0 THEN   
      CALL cl_set_comp_entry("xmda022,xmdaunit,xmda025",FALSE) 
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="adbt500.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION adbt500_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
                  
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   IF g_flag1 THEN
      CALL cl_set_comp_entry("xmdb001,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006",TRUE)
   END IF
  #Mark&Add By 150408-00003#1 baogc -- Begin ---
  #交易价不允许修改，因此拿掉所有开启交易价的地方xmja010
  #CALL cl_set_comp_entry("xmja003,xmja005,xmja006,xmja010,xmja011,xmja024,xmja026,xmja031,xmja032,xmjasite",TRUE)
  #CALL cl_set_comp_entry("xmjaseq,xmjasite,xmja002,xmja003,xmja004,xmja010,xmja011,xmja012,xmja015,xmja016,xmja017,xmja018,xmja033",TRUE)
   CALL cl_set_comp_entry("xmja003,xmja005,xmja006,xmja011,xmja024,xmja026,xmja031,xmja032,xmjasite",TRUE)
   CALL cl_set_comp_entry("xmjaseq,xmjasite,xmja002,xmja003,xmja004,xmja011,xmja012,xmja015,xmja016,xmja017,xmja018,xmja033",TRUE)
  #Mark&Add By 150408-00003#1 baogc -- End   ---
   CALL cl_set_comp_entry("xmja012",TRUE) #By benson
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="adbt500.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION adbt500_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   DEFINE l_xmah003   LIKE xmah_t.xmah003 
   DEFINE l_pmaa002   LIKE pmaa_t.pmaa002 
   DEFINE l_imaf015   LIKE imaf_t.imaf015
   DEFINE l_cnt       LIKE type_t.num5   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #若1.正常稅率，則單身稅別不可輸入
   IF g_tax_app = '1' THEN
      CALL cl_set_comp_entry("xmja006",FALSE)
   END IF
   #單頭取價方式的基本資料設置不允許修改單價
   IF g_xmah003 <> 'Y' THEN
      CALL cl_set_comp_entry("xmja010",FALSE)
   END IF
   IF l_ac > 0 THEN
      IF NOT cl_null(g_xmdc4_d[l_ac].xmja003) THEN
         LET g_imaa005 = ''
         CALL s_adb_get_imaa005(g_enterprise,g_xmdc4_d[l_ac].xmja003) RETURNING g_imaa005
         #料件主檔無特徵類別，不能維護產品特徵
         IF cl_null(g_imaa005) THEN
            CALL cl_set_comp_entry("xmja004",FALSE)
         ELSE
            #若料件有使用產品特徵時，則此欄位不允許空白
            CALL cl_set_comp_required("xmja004",TRUE)
         END IF
         END IF
      IF NOT cl_null(g_xmdc4_d[l_ac].xmja002) AND g_xmdc4_d[l_ac].xmja002 <> " " THEN
         CALL cl_set_comp_entry("xmja003,xmja011",FALSE)
      END IF
      IF g_xmdc4_d[l_ac].xmja030 = "Y" THEN
         CALL cl_set_comp_entry("xmja031,xmja032",FALSE)
      END IF
      
      LET l_imaf015 = ''
      SELECT imaf015 INTO l_imaf015
        FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite = 'ALL'
         AND imaf001 = g_xmdc4_d[l_ac].xmja003
         
      #[T:料件據點進銷存檔]未設參考單位，參考單位、參考數量不允許輸入
      IF cl_null(l_imaf015) THEN
         CALL cl_set_comp_entry("xmja015,xmja016",FALSE)
      END IF
   END IF   
   IF NOT cl_null(g_xmda_m.xmda022) THEN
      IF l_ac > 0 THEN
         LET g_xmdc4_d[l_ac].xmja024 = NULL
      END IF
      CALL cl_set_comp_entry("xmja024",FALSE)
   END IF 
   IF NOT cl_null(g_xmda_m.xmda025) THEN
      CALL cl_set_comp_entry("xmja026",FALSE)
   END IF
   IF NOT cl_null(g_xmda_m.xmda204) THEN
      CALL cl_set_comp_entry("xmja005",FALSE)
   END IF
   IF p_cmd <> 'a' OR NOT g_flag3 THEN
      CALL cl_set_comp_entry("xmjasite",FALSE)
   END IF
    #多期預付款頁籤：已經有應收帳款與已收金額的資料不可以進行修改
   IF (NOT cl_null(g_xmdc5_d_t.xmdb007)) OR (g_xmdc5_d_t.xmdb008> 0 OR g_xmdc5_d_t.xmdb009 > 0)  OR NOT g_flag1 THEN
      CALL cl_set_comp_entry("xmdb001,xmdb002,xmdb003,xmdb004,xmdb005,xmdb006",FALSE)
   END IF
   
   IF g_xmda_m.xmda007 = '5' THEN
      CALL cl_set_comp_entry("xmja010",FALSE)
   END IF

   #单身存在赠品资料
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM xmja_t
    WHERE xmjaent = g_enterprise AND xmjadocno = g_xmda_m.xmdadocno AND xmja001 = '2'
   IF l_cnt > 0 THEN
      CALL cl_set_comp_entry("xmjaseq,xmjasite,xmja002,xmja003,xmja004,xmja005,xmja010,xmja011,xmja012,xmja015,xmja016,xmja017,xmja018,xmja033",FALSE)
   END IF
   #By benson --- S ---
   IF NOT cl_null( g_xmdc4_d[l_ac].xmja014) THEN
      CALL cl_set_comp_entry("xmja011,xmja012",FALSE)
   END IF
   #By benson --- E ---
   #CALL adbt500_comp_visible_b()   #160513-00027#1 20160520 mark by beckxie
   #160513-00027#1 20160520 add by beckxie---S
   CALL adbt500_set_comp_visible_b()
   CALL adbt500_set_comp_no_visible_b()
   #160513-00027#1 20160520 add by beckxie---E
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="adbt500.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION adbt500_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
 
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   CALL cl_set_act_visible("modify,delete,modify_detail,open_xmdb,open_apmi004_01,open_adbt500_02,open_adbt500_03,adbt500_04,open_s_pay,open_s_pay09", TRUE)
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION adbt500_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   DEFINE l_pmaa004  LIKE pmaa_t.pmaa004 
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_flag     LIKE type_t.num5  
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   IF g_xmda_m.xmdastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail,open_apmi004_01,open_adbt500_03,adbt500_04,open_xmdb,open_s_pay", FALSE)
   END IF
   IF g_xmda_m.xmdastus <> 'Y' THEN 
      CALL cl_set_act_visible("open_adbt500_02", FALSE)             
   END IF 
   IF NOT cl_null(g_xmda_m.xmda004) THEN
      LET l_pmaa004 = ''
      SELECT pmaa004 INTO l_pmaa004
        FROM pmaa_t
       WHERE pmaaent = g_enterprise
         AND pmaa001 = g_xmda_m.xmda004
      IF l_pmaa004 NOT MATCHES '[24]' THEN
         CALL cl_set_act_visible("open_apmi004_01", FALSE)
      ELSE
         CALL cl_set_act_visible("open_apmi004_01", TRUE)       
      END IF
   ELSE
      CALL cl_set_act_visible("open_apmi004_01", FALSE)
   END IF  
   CALL cl_set_toolbaritem_visible("adbt500_04",FALSE)
    
   #判斷當下的營運據點是否在控制組限制的營運據點範圍內，若不在限制內則不允許新增
   CALL cl_set_act_visible("modify,delete,insert,open_xmdb", TRUE)

   IF g_xmda_m.xmdastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,open_apmi004_01,open_xmdb", FALSE)
   END IF                         
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION adbt500_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION adbt500_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION adbt500_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
                  
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
                  
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xmdadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
         INITIALIZE g_wc2_table4 TO NULL
 
         INITIALIZE g_wc2_table5 TO NULL
 
         INITIALIZE g_wc2_table6 TO NULL
 
         INITIALIZE g_wc2_table7 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "xmda_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xmdc_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtic_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xmdd_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xmja_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xmdb_t" 
                  LET g_wc2_table5 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xrcd_t" 
                  LET g_wc2_table6 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "rtie_t" 
                  LET g_wc2_table7 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
            OR NOT cl_null(g_wc2_table4)
 
            OR NOT cl_null(g_wc2_table5)
 
            OR NOT cl_null(g_wc2_table6)
 
            OR NOT cl_null(g_wc2_table7)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF
 
            IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
            END IF
 
            IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
            END IF
 
            IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   IF NOT cl_null(g_argv[2]) THEN
      LET ls_wc = g_argv[2], " AND "
   END IF  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         #LET g_wc = " 1=1"           #160719-00015#2 160719 by sakura mark
         LET g_wc = g_wc," AND 1=1"   #160719-00015#2 160719 by sakura add
      END IF
   END IF
   DISPLAY g_wc  
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="adbt500.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION adbt500_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_hold          LIKE type_t.num5            #160505-00018#1 160510 by lori add
   DEFINE l_cnt           LIKE type_t.num5            #160513-00033#7 
   DEFINE l_cnt1          LIKE type_t.num5            #160513-00033#7 
   DEFINE l_sql           STRING                      #160513-00033#7 
   DEFINE l_xmja028       LIKE xmja_t.xmja028         #160513-00033#7 
   DEFINE l_error_msg     LIKE gzze_t.gzze003         #160513-00033#7 
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
                  
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xmda_m.xmdadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN adbt500_cl USING g_enterprise,g_xmda_m.xmdadocno
   IF STATUS THEN
      CLOSE adbt500_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN adbt500_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE adbt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdasite,g_xmda_m.xmdadocdt, 
       g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmda005,g_xmda_m.xmda202,g_xmda_m.xmda023,g_xmda_m.xmda004, 
       g_xmda_m.xmda200,g_xmda_m.xmda201,g_xmda_m.xmdastus,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda021, 
       g_xmda_m.xmda022,g_xmda_m.xmda203,g_xmda_m.xmda027,g_xmda_m.xmda024,g_xmda_m.xmda002,g_xmda_m.xmda003, 
       g_xmda_m.xmdaunit,g_xmda_m.xmda211,g_xmda_m.xmda210,g_xmda_m.xmda209,g_xmda_m.xmda208,g_xmda_m.xmda204, 
       g_xmda_m.xmda205,g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda206, 
       g_xmda_m.xmda207,g_xmda_m.xmda020,g_xmda_m.xmda036,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda009, 
       g_xmda_m.xmda010,g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013, 
       g_xmda_m.xmda035,g_xmda_m.xmda213,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid, 
       g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid, 
       g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt,g_xmda_m.xmda034,g_xmda_m.xmda006,g_xmda_m.xmda033, 
       g_xmda_m.xmda017,g_xmda_m.xmda019,g_xmda_m.xmda018,g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045, 
       g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043,g_xmda_m.xmdasite_desc,g_xmda_m.xmda202_desc, 
       g_xmda_m.xmda023_desc,g_xmda_m.xmda004_desc,g_xmda_m.xmda200_desc,g_xmda_m.xmda201_desc,g_xmda_m.xmda021_desc, 
       g_xmda_m.xmda022_desc,g_xmda_m.xmda203_desc,g_xmda_m.xmda027_desc,g_xmda_m.xmda024_desc,g_xmda_m.xmda002_desc, 
       g_xmda_m.xmda003_desc,g_xmda_m.xmdaunit_desc,g_xmda_m.xmda211_desc,g_xmda_m.xmda210_desc,g_xmda_m.xmda209_desc, 
       g_xmda_m.xmda208_desc,g_xmda_m.xmda204_desc,g_xmda_m.xmda032_desc,g_xmda_m.xmda206_desc,g_xmda_m.xmda207_desc, 
       g_xmda_m.xmda020_desc,g_xmda_m.xmda036_desc,g_xmda_m.xmda009_desc,g_xmda_m.xmda010_desc,g_xmda_m.xmda015_desc, 
       g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp_desc, 
       g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmda034_desc,g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc 
 
   
 
   #檢查是否允許此動作
   IF NOT adbt500_action_chk() THEN
      CLOSE adbt500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xmda_m.xmdasite,g_xmda_m.xmdasite_desc,g_xmda_m.xmdadocdt,g_xmda_m.xmdadocno,g_xmda_m.xmda001, 
       g_xmda_m.xmdadocno_desc,g_xmda_m.xmda005,g_xmda_m.xmda202,g_xmda_m.xmda202_desc,g_xmda_m.xmda023, 
       g_xmda_m.xmda023_desc,g_xmda_m.xmda004,g_xmda_m.xmda004_desc,g_xmda_m.xmda200,g_xmda_m.xmda200_desc, 
       g_xmda_m.xmda201,g_xmda_m.xmda201_desc,g_xmda_m.xmdastus,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda021, 
       g_xmda_m.xmda021_desc,g_xmda_m.xmda022,g_xmda_m.xmda022_desc,g_xmda_m.xmda203,g_xmda_m.xmda203_desc, 
       g_xmda_m.xmda027,g_xmda_m.xmda027_desc,g_xmda_m.xmda024,g_xmda_m.xmda024_desc,g_xmda_m.xmda002, 
       g_xmda_m.xmda002_desc,g_xmda_m.xmda003,g_xmda_m.xmda003_desc,g_xmda_m.xmdaunit,g_xmda_m.xmdaunit_desc, 
       g_xmda_m.xmda211,g_xmda_m.xmda211_desc,g_xmda_m.xmda210,g_xmda_m.xmda210_desc,g_xmda_m.xmda209, 
       g_xmda_m.xmda209_desc,g_xmda_m.xmda208,g_xmda_m.xmda208_desc,g_xmda_m.xmda204,g_xmda_m.xmda204_desc, 
       g_xmda_m.xmda205,g_xmda_m.xmda032,g_xmda_m.xmda032_desc,g_xmda_m.xmda071,g_xmda_m.xmda025,g_xmda_m.xmda025_desc, 
       g_xmda_m.oofb017,g_xmda_m.xmda026,g_xmda_m.xmda026_desc,g_xmda_m.oofb017_1,g_xmda_m.xmda206,g_xmda_m.xmda206_desc, 
       g_xmda_m.xmda207,g_xmda_m.xmda207_desc,g_xmda_m.xmda020,g_xmda_m.xmda020_desc,g_xmda_m.xmda036, 
       g_xmda_m.xmda036_desc,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda009,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda015,g_xmda_m.xmda015_desc,g_xmda_m.xmda016, 
       g_xmda_m.xmda011,g_xmda_m.xmda011_desc,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc, 
       g_xmda_m.isaf011,g_xmda_m.xmda213,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid, 
       g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc, 
       g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc, 
       g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmdacnfdt,g_xmda_m.xmda034, 
       g_xmda_m.xmda034_desc,g_xmda_m.xmda006,g_xmda_m.xmda033,g_xmda_m.xmda017,g_xmda_m.xmda017_desc, 
       g_xmda_m.xmda019,g_xmda_m.xmda018,g_xmda_m.xmda018_desc,g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045, 
       g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043
 
   CASE g_xmda_m.xmdastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "C"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
      WHEN "H"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
      WHEN "UH"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xmda_m.xmdastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "C"
               HIDE OPTION "closed"
            WHEN "H"
               HIDE OPTION "hold"
            WHEN "UH"
               HIDE OPTION "unhold"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      CALL cl_set_act_visible("signing,withdraw,closed",FALSE)
      #將open改為unconfirmed
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CASE g_xmda_m.xmdastus
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed,hold,unhold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold,unhold",FALSE)
            
         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold,unhold",FALSE) 

         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold,unhold",FALSE)
            CALL s_transaction_end('N','0')   #160816-00068#2 add
            RETURN
         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,unhold",FALSE)
         WHEN "H"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)    
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold,unhold",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold,unhold",FALSE)
         WHEN "C"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold,unhold",FALSE)
            CALL s_transaction_end('N','0')   #160816-00068#2 add
            RETURN
      END CASE
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT adbt500_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE adbt500_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT adbt500_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE adbt500_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            CALL cl_err_collect_init()
            CALL s_adbt500_unconf_chk(g_xmda_m.xmdadocno) RETURNING l_success
            IF NOT l_success THEN
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')   #160816-00068#2 add
               RETURN
            ELSE            
               CALL cl_err_collect_show()
               
               IF NOT cl_ask_confirm('aim-00110') THEN
                  CALL s_transaction_end('N','0')   #160816-00068#2 add
                  RETURN
               ELSE
                  CALL cl_err_collect_init()
                  CALL s_adbt500_unconf_upd(g_xmda_m.xmdadocno) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err_collect_show()
                     CALL s_transaction_end('N','0')
                     RETURN
                  ELSE
                     CALL cl_err_collect_show()
                  END IF
               END IF
            END IF
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            #160513-00033#7-S
            SELECT DISTINCT xmja028 INTO l_xmja028
              FROM xmja_t
             WHERE xmjaent = g_enterprise
               AND xmjadocno = g_xmda_m.xmdadocno
            LET l_sql = "SELECT SUM(sum_data)",
                        "  FROM (",
                                 "SELECT CASE WHEN count(*) > 0 THEN 1 ELSE 0 END  as sum_data",
                                 "  FROM stcf_t",
                                 " WHERE stcfent = ",g_enterprise," AND stcf021 = 'Y'",
                                 "   AND stcf001 ='",l_xmja028,"'",
                                 " UNION ",
                                 "SELECT CASE WHEN count(*) > 0 THEN 1 ELSE 0 END ",
                                 "  FROM stcl_t ",
                                 " WHERE stclent = ",g_enterprise,
                                 "  AND stcl001 ='",l_xmja028,"'",
                                ")"
            PREPARE s_cash_back_sel_stce FROM l_sql
            EXECUTE s_cash_back_sel_stce INTO l_cnt
            SELECT count(*) INTO l_cnt1
              FROM xmdc_t
             WHERE xmdcent = g_enterprise
               AND xmdcdocno = g_xmda_m.xmdadocno
               AND xmdcseq > 9000
            IF l_cnt > 0 AND l_cnt1 = 0  THEN
               LET l_error_msg = 'adb-00435'
            ELSE
               LET l_error_msg = 'aim-00108'
            END IF
            #160513-00033#7-e
            CALL cl_err_collect_init()
            CALL s_adbt500_conf_chk(g_xmda_m.xmdadocno) RETURNING l_success
            IF NOT l_success THEN
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')   #160816-00068#2 add
               RETURN
            ELSE
               CALL cl_err_collect_show()
               
              #IF NOT cl_ask_confirm('aim-00108') THEN      #160513-00033#7-mark
               IF NOT cl_ask_confirm(l_error_msg) THEN      #160513-00033#7
                  CALL s_transaction_end('N','0')   #160816-00068#2 add
                  RETURN
               ELSE
                  CALL cl_err_collect_init()
                  LET l_success = ''        #160505-00018#1 160510 by lori add
                  LET l_hold = ''           #160505-00018#1 160510 by lori add
                  CALL s_adbt500_conf_upd(g_xmda_m.xmdadocno) RETURNING l_success,l_hold   #160505-00018#1 160510 by lori add l_hold 
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                     CALL cl_err_collect_show()
                     RETURN
                  ELSE
                     CALL cl_err_collect_show()
                     #160505-00018#1 160510 by lori add---(E)
                     IF NOT l_hold THEN
                        LET lc_state = 'H'
                     END IF
                     #160505-00018#1 160510 by lori add---(E)                     
                  END IF
               END IF
            END IF                                                 
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION closed
         IF cl_auth_chk_act("closed") THEN
            LET lc_state = "C"
            #add-point:action控制 name="statechange.closed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION hold
         IF cl_auth_chk_act("hold") THEN
            LET lc_state = "H"
            #add-point:action控制 name="statechange.hold"
            CALL cl_err_collect_init()
            IF NOT adbt500_xmda032_hold() THEN
               CALL s_transaction_end('N','0')
               CALL cl_err_collect_show()
               RETURN
            ELSE 
               #160525-00012#1 160525 by lori add---(S)
               IF NOT adbt500_upd_xmdc045(lc_state) THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()
                  RETURN
               END IF
               #160525-00012#1 160525 by lori add---(E)
               
               CALL cl_err_collect_show()
            END IF
            #end add-point
         END IF
         EXIT MENU
      ON ACTION unhold
         IF cl_auth_chk_act("unhold") THEN
            LET lc_state = "UH"
            #add-point:action控制 name="statechange.unhold"
            CALL cl_err_collect_init()
            IF NOT adbt500_xmda032_unhold() THEN
               CALL s_transaction_end('N','0')
               CALL cl_err_collect_show()
               RETURN
            ELSE 
               #160525-00012#1 160525 by lori add---(S)
               IF NOT adbt500_upd_xmdc045(lc_state) THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()
                  RETURN
               END IF
               #160525-00012#1 160525 by lori add---(E)
               
               LET lc_state = 'Y'
               CALL cl_err_collect_show()
            END IF            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            CALL cl_err_collect_init()
            CALL s_adbt500_invalid_chk(g_xmda_m.xmdadocno) RETURNING l_success
            IF NOT l_success THEN
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')   #160816-00068#2 add
               RETURN
            ELSE
               CALL cl_err_collect_show()
               
               IF NOT cl_ask_confirm('aim-00109') THEN
                  CALL s_transaction_end('N','0')   #160816-00068#2 add
                  RETURN
               ELSE
                  CALL cl_err_collect_init()
                  CALL s_adbt500_invalid_upd(g_xmda_m.xmdadocno) RETURNING l_success
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                     CALL cl_err_collect_show()
                     RETURN
                  ELSE
                     CALL cl_err_collect_show()
                  END IF
               END IF
            END IF                                                      
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
                                    
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "C"
      AND lc_state <> "H"
      AND lc_state <> "UH"
      AND lc_state <> "X"
      ) OR 
      g_xmda_m.xmdastus = lc_state OR cl_null(lc_state) THEN
      CLOSE adbt500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
 
   #end add-point
   
   LET g_xmda_m.xmdamodid = g_user
   LET g_xmda_m.xmdamoddt = cl_get_current()
   LET g_xmda_m.xmdastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE xmda_t 
      SET (xmdastus,xmdamodid,xmdamoddt) 
        = (g_xmda_m.xmdastus,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt)     
    WHERE xmdaent = g_enterprise AND xmdadocno = g_xmda_m.xmdadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "H"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/hold.png")
         WHEN "UH"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unhold.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE adbt500_master_referesh USING g_xmda_m.xmdadocno INTO g_xmda_m.xmdasite,g_xmda_m.xmdadocdt, 
          g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmda005,g_xmda_m.xmda202,g_xmda_m.xmda023,g_xmda_m.xmda004, 
          g_xmda_m.xmda200,g_xmda_m.xmda201,g_xmda_m.xmdastus,g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda021, 
          g_xmda_m.xmda022,g_xmda_m.xmda203,g_xmda_m.xmda027,g_xmda_m.xmda024,g_xmda_m.xmda002,g_xmda_m.xmda003, 
          g_xmda_m.xmdaunit,g_xmda_m.xmda211,g_xmda_m.xmda210,g_xmda_m.xmda209,g_xmda_m.xmda208,g_xmda_m.xmda204, 
          g_xmda_m.xmda205,g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda206, 
          g_xmda_m.xmda207,g_xmda_m.xmda020,g_xmda_m.xmda036,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda009, 
          g_xmda_m.xmda010,g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013, 
          g_xmda_m.xmda035,g_xmda_m.xmda213,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid, 
          g_xmda_m.xmdaowndp,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid, 
          g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt,g_xmda_m.xmda034,g_xmda_m.xmda006, 
          g_xmda_m.xmda033,g_xmda_m.xmda017,g_xmda_m.xmda019,g_xmda_m.xmda018,g_xmda_m.xmda030,g_xmda_m.xmda031, 
          g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043,g_xmda_m.xmdasite_desc, 
          g_xmda_m.xmda202_desc,g_xmda_m.xmda023_desc,g_xmda_m.xmda004_desc,g_xmda_m.xmda200_desc,g_xmda_m.xmda201_desc, 
          g_xmda_m.xmda021_desc,g_xmda_m.xmda022_desc,g_xmda_m.xmda203_desc,g_xmda_m.xmda027_desc,g_xmda_m.xmda024_desc, 
          g_xmda_m.xmda002_desc,g_xmda_m.xmda003_desc,g_xmda_m.xmdaunit_desc,g_xmda_m.xmda211_desc,g_xmda_m.xmda210_desc, 
          g_xmda_m.xmda209_desc,g_xmda_m.xmda208_desc,g_xmda_m.xmda204_desc,g_xmda_m.xmda032_desc,g_xmda_m.xmda206_desc, 
          g_xmda_m.xmda207_desc,g_xmda_m.xmda020_desc,g_xmda_m.xmda036_desc,g_xmda_m.xmda009_desc,g_xmda_m.xmda010_desc, 
          g_xmda_m.xmda015_desc,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid_desc, 
          g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmda034_desc, 
          g_xmda_m.xmda017_desc,g_xmda_m.xmda018_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_xmda_m.xmdasite,g_xmda_m.xmdasite_desc,g_xmda_m.xmdadocdt,g_xmda_m.xmdadocno, 
          g_xmda_m.xmda001,g_xmda_m.xmdadocno_desc,g_xmda_m.xmda005,g_xmda_m.xmda202,g_xmda_m.xmda202_desc, 
          g_xmda_m.xmda023,g_xmda_m.xmda023_desc,g_xmda_m.xmda004,g_xmda_m.xmda004_desc,g_xmda_m.xmda200, 
          g_xmda_m.xmda200_desc,g_xmda_m.xmda201,g_xmda_m.xmda201_desc,g_xmda_m.xmdastus,g_xmda_m.xmda007, 
          g_xmda_m.xmda008,g_xmda_m.xmda021,g_xmda_m.xmda021_desc,g_xmda_m.xmda022,g_xmda_m.xmda022_desc, 
          g_xmda_m.xmda203,g_xmda_m.xmda203_desc,g_xmda_m.xmda027,g_xmda_m.xmda027_desc,g_xmda_m.xmda024, 
          g_xmda_m.xmda024_desc,g_xmda_m.xmda002,g_xmda_m.xmda002_desc,g_xmda_m.xmda003,g_xmda_m.xmda003_desc, 
          g_xmda_m.xmdaunit,g_xmda_m.xmdaunit_desc,g_xmda_m.xmda211,g_xmda_m.xmda211_desc,g_xmda_m.xmda210, 
          g_xmda_m.xmda210_desc,g_xmda_m.xmda209,g_xmda_m.xmda209_desc,g_xmda_m.xmda208,g_xmda_m.xmda208_desc, 
          g_xmda_m.xmda204,g_xmda_m.xmda204_desc,g_xmda_m.xmda205,g_xmda_m.xmda032,g_xmda_m.xmda032_desc, 
          g_xmda_m.xmda071,g_xmda_m.xmda025,g_xmda_m.xmda025_desc,g_xmda_m.oofb017,g_xmda_m.xmda026, 
          g_xmda_m.xmda026_desc,g_xmda_m.oofb017_1,g_xmda_m.xmda206,g_xmda_m.xmda206_desc,g_xmda_m.xmda207, 
          g_xmda_m.xmda207_desc,g_xmda_m.xmda020,g_xmda_m.xmda020_desc,g_xmda_m.xmda036,g_xmda_m.xmda036_desc, 
          g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda009,g_xmda_m.xmda009_desc,g_xmda_m.xmda010, 
          g_xmda_m.xmda010_desc,g_xmda_m.xmda015,g_xmda_m.xmda015_desc,g_xmda_m.xmda016,g_xmda_m.xmda011, 
          g_xmda_m.xmda011_desc,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc, 
          g_xmda_m.isaf011,g_xmda_m.xmda213,g_xmda_m.xmda039,g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmdaownid, 
          g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp,g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc, 
          g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdp_desc,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc, 
          g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfid_desc,g_xmda_m.xmdacnfdt,g_xmda_m.xmda034, 
          g_xmda_m.xmda034_desc,g_xmda_m.xmda006,g_xmda_m.xmda033,g_xmda_m.xmda017,g_xmda_m.xmda017_desc, 
          g_xmda_m.xmda019,g_xmda_m.xmda018,g_xmda_m.xmda018_desc,g_xmda_m.xmda030,g_xmda_m.xmda031, 
          g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda043
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   CALL adbt500_display_xmda213()
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
                  
   #end add-point  
 
   CLOSE adbt500_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL adbt500_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="adbt500.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION adbt500_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
                  
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xmdc_d.getLength() THEN
         LET g_detail_idx = g_xmdc_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_xmdc2_d.getLength() THEN
         LET g_detail_idx = g_xmdc2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_xmdc3_d.getLength() THEN
         LET g_detail_idx = g_xmdc3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_xmdc4_d.getLength() THEN
         LET g_detail_idx = g_xmdc4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc4_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_xmdc5_d.getLength() THEN
         LET g_detail_idx = g_xmdc5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc5_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 6 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail6")
      IF g_detail_idx > g_xmdc6_d.getLength() THEN
         LET g_detail_idx = g_xmdc6_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc6_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc6_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 7 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail7")
      IF g_detail_idx > g_xmdc7_d.getLength() THEN
         LET g_detail_idx = g_xmdc7_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc7_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc7_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   #160513-00033#4--(S)
   IF g_current_page = 8 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail8")
      IF g_detail_idx > g_xmdc8_d.getLength() THEN
         LET g_detail_idx = g_xmdc8_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xmdc8_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xmdc8_d.getLength() TO FORMONLY.cnt
   END IF
   #160513-00033#4--(E)
   #150915-00006#1 20150915 add by beckxie---S
   CASE g_touch
     WHEN 1
        CALL gfrm_curr.ensureFieldVisible("xmda_t.xmda007")
     WHEN 2
        CALL gfrm_curr.ensureFieldVisible("xmda_t.xmda025")
     WHEN 3
        CALL gfrm_curr.ensureFieldVisible("xmda_t.xmda048")
     WHEN 4
        CALL gfrm_curr.ensureFieldVisible("xmda_t.xmda039")
     WHEN 5
        CALL gfrm_curr.ensureFieldVisible("xmda_t.xmdaownid")
   END CASE
   #150915-00006#1 20150915 add by beckxie---E
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION adbt500_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
                  
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
                  
   #end add-point
    
   LET l_ac = li_ac
   
   CALL adbt500_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION adbt500_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
                  
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
 
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1')  AND 
      (cl_null(g_wc2_table5) OR g_wc2_table5.trim() = '1=1')  AND 
      (cl_null(g_wc2_table6) OR g_wc2_table6.trim() = '1=1')  AND 
      (cl_null(g_wc2_table7) OR g_wc2_table7.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
                                    
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   IF NOT (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') OR 
      NOT (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') OR 
      NOT (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1') OR 
      NOT (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1') OR 
      NOT (cl_null(g_wc2_table5) OR g_wc2_table5.trim() = '1=1') OR 
      NOT (cl_null(g_wc2_table6) OR g_wc2_table6.trim() = '1=1') OR 
      NOT (cl_null(g_wc2_table7) OR g_wc2_table7.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="adbt500.status_show" >}
PRIVATE FUNCTION adbt500_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="adbt500.mask_functions" >}
&include "erp/adb/adbt500_mask.4gl"
 
{</section>}
 
{<section id="adbt500.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION adbt500_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
   LET g_wc2_table4 = " 1=1"
   LET g_wc2_table5 = " 1=1"
   LET g_wc2_table6 = " 1=1"
   LET g_wc2_table7 = " 1=1"
 
 
   CALL adbt500_show()
   CALL adbt500_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   IF NOT s_adbt500_conf_chk(g_xmda_m.xmdadocno) THEN
      CLOSE adbt500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   CALL adbt500_b_fill()   #160707-00009#1 20160707 add by beckxie
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_xmda_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_xmdc_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_xmdc2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_xmdc3_d))
   CALL cl_bpm_set_detail_data("s_detail4", util.JSONArray.fromFGL(g_xmdc4_d))
   CALL cl_bpm_set_detail_data("s_detail5", util.JSONArray.fromFGL(g_xmdc5_d))
   CALL cl_bpm_set_detail_data("s_detail6", util.JSONArray.fromFGL(g_xmdc6_d))
   CALL cl_bpm_set_detail_data("s_detail7", util.JSONArray.fromFGL(g_xmdc7_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   CALL cl_bpm_set_detail_data("s_detail8", util.JSONArray.fromFGL(g_xmdc8_d))   #160513-00033#4
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL adbt500_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL adbt500_ui_headershow()
   CALL adbt500_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION adbt500_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL adbt500_ui_headershow()  
   CALL adbt500_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="adbt500.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION adbt500_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xmda_m.xmdadocno
   LET g_pk_array[1].column = 'xmdadocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="adbt500.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="adbt500.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION adbt500_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL adbt500_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xmda_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="adbt500.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION adbt500_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#6 -s by 08172
   SELECT xmdastus  INTO g_xmda_m.xmdastus
     FROM xmda_t
    WHERE xmdaent = g_enterprise
      AND xmdadocno = g_xmda_m.xmdadocno
   LET g_errno = NULL
   IF (g_action_choice="modify" OR g_action_choice="modify_detail" OR g_action_choice="delete")  THEN
     CASE g_xmda_m.xmdastus
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
        WHEN 'C'
           LET g_errno = 'ain-00197'
        WHEN 'H'
           LET g_errno = 'sub-01348'
        WHEN 'UH'
           LET g_errno = 'sub-01358'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_xmda_m.xmdadocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL adbt500_show()
        RETURN FALSE
     END IF
   END IF
   #160818-00017#6 -e by 08172
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="adbt500.other_function" readonly="Y" >}
#根據客戶編號帶出其他欄位值
PRIVATE FUNCTION adbt500_xmda004_desc()
  DEFINE l_n         LIKE type_t.num5
  DEFINE l_success   LIKE type_t.num5
  DEFINE l_controlno LIKE ooha_t.ooha001

      LET g_xmda_m.xmda009 = ''
      LET g_xmda_m.xmda009_desc = ''
      LET g_xmda_m.xmda010 = ''
      LET g_xmda_m.xmda010_desc = ''
      LET g_xmda_m.xmda011 = ''
      LET g_xmda_m.xmda011_desc = ''
      LET g_xmda_m.xmda012 = ''
      LET g_xmda_m.xmda013 = ''
      LET g_xmda_m.xmda015 = ''
      LET g_xmda_m.xmda015_desc = ''
      LET g_xmda_m.xmda016 = ''
      LET g_xmda_m.xmda017 = ''
      LET g_xmda_m.xmda017_desc = ''
      LET g_xmda_m.xmda020 = ''
      LET g_xmda_m.xmda020_desc = ''
      #LET g_xmda_m.xmda023 = ''
      #LET g_xmda_m.xmda023_desc = ''
      LET g_xmda_m.xmda024 = ''
      LET g_xmda_m.xmda024_desc = ''
      LET g_xmda_m.xmda035 = ''
      LET g_xmda_m.xmda035_desc = ''
     
      
      SELECT pmab087,pmab103,pmab084,pmab083,
            pmab104,pmab090,
            pmab089,pmab087,pmab106,
            pmab107,pmab108
       INTO g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda015,
            g_xmda_m.xmda017,g_xmda_m.xmda020,
            g_xmda_m.xmda024,g_xmda_m.xmda018,g_xmda_m.xmda035,
            g_xmda_m.xmda048,g_xmda_m.xmda049  
       FROM pmab_t WHERE pmabent = g_enterprise AND pmabsite = 'ALL' AND pmab001 = g_xmda_m.xmda004      

      LET g_xmda_m_o.xmda009 = g_xmda_m.xmda009
      LET g_xmda_m_o.xmda010 = g_xmda_m.xmda010
      LET g_xmda_m_o.xmda011 = g_xmda_m.xmda011
      LET g_xmda_m_o.xmda015 = g_xmda_m.xmda015
      LET g_xmda_m_o.xmda017 = g_xmda_m.xmda017
      LET g_xmda_m_o.xmda020 = g_xmda_m.xmda020
      LET g_xmda_m_o.xmda024 = g_xmda_m.xmda024
      LET g_xmda_m_o.xmda018 = g_xmda_m.xmda018
      LET g_xmda_m_o.xmda035 = g_xmda_m.xmda035
      LET g_xmda_m_o.xmda048 = g_xmda_m.xmda048
      LET g_xmda_m_o.xmda049 = g_xmda_m.xmda049
      
      SELECT pmaa241,pmaa242,pmaa243,pmaa244
        INTO g_xmda_m.xmda211,g_xmda_m.xmda210,g_xmda_m.xmda209,g_xmda_m.xmda208
        FROM pmaa_t
       WHERE pmaaent = g_enterprise
         AND pmaa001 = g_xmda_m.xmda004
         
      LET g_xmda_m_o.xmda208 = g_xmda_m.xmda208
      LET g_xmda_m_o.xmda209 = g_xmda_m.xmda209
      LET g_xmda_m_o.xmda210 = g_xmda_m.xmda210
      LET g_xmda_m_o.xmda211 = g_xmda_m.xmda211
         
      CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda208) RETURNING g_xmda_m.xmda208_desc
      CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda209) RETURNING g_xmda_m.xmda209_desc
      CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda210) RETURNING g_xmda_m.xmda210_desc
      CALL s_desc_get_dbaa001_desc(g_xmda_m.xmda211) RETURNING g_xmda_m.xmda211_desc
      DISPLAY BY NAME g_xmda_m.xmda211_desc,g_xmda_m.xmda210_desc,g_xmda_m.xmda209_desc,g_xmda_m.xmda208_desc

      
      CALL adbt500_head_default()
            
END FUNCTION
#根據不同的資料來源類型，判斷資料的有效否
PRIVATE FUNCTION adbt500_xmda008_chk()
DEFINE r_success   LIKE type_t.num5
DEFINE l_cnt       LIKE type_t.num5
DEFINE l_xmdk005   LIKE xmdk_t.xmdk005
DEFINE l_xmdksite  LIKE xmdk_t.xmdksite
DEFINE l_sql       STRING

   LET r_success = TRUE

   IF g_xmda_m.xmda007 = '5' THEN
      IF cl_null(g_xmda_m.xmda008) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'adb-00047'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF  
      #銷退單須存在
      SELECT COUNT(*)
        INTO l_cnt
        FROM xmdk_t
       WHERE xmdkent = g_enterprise 
         AND xmdkdocno = g_xmda_m.xmda008
         AND xmdk000 = '6'
         AND xmdkstus = "Y"

      IF l_cnt = 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'adb-00048'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
      #不可為無訂單出貨
      SELECT xmdk005,xmdksite
        INTO l_xmdk005,l_xmdksite
        FROM xmdk_t
       WHERE xmdkent = g_enterprise
         AND xmdkdocno = g_xmda_m.xmda008
         AND xmdkstus = "Y"
         AND xmdk000 = '6'
      IF NOT cl_null(l_xmdk005) THEN
         LET l_cnt = 0
         SELECT COUNT(*)
           INTO l_cnt
           FROM xmdk_t
          WHERE xmdkent = g_enterprise 
            AND xmdkdocno = l_xmdk005
            AND xmdkstus = "Y"
            AND xmdk000 = '2'
         IF l_cnt > 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'adb-00049'
            LET g_errparam.extend = ''
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
      
      LET l_sql = " SELECT COUNT(*) FROM ooed_t ",        
                  #"  WHERE ooed004 = '",l_xmdksite,"' AND ooed001='8' ",   #170202-00026#1 20170202 mark by beckxie
                  "  WHERE ooedent = ",g_enterprise," AND ooed004 = '",l_xmdksite,"' AND ooed001='8' ",   #170202-00026#1 20170202 add by beckxie
                  "    AND ((ooed006 <= '",g_today,"'  AND ooed007 >= '",g_today,"' ) OR ooed007 IS NULL) ",
                  "    AND ooed004  IN ((SELECT DISTINCT ooed004 FROM ooed_t ",
                  #"                       WHERE ooed001='8'  AND ((ooed006 <= '",g_today,"'  AND ooed007 >= '",g_today,"' ) OR ooed007 IS NULL) ",   #170202-00026#1 20170202 mark by beckxie
                  "                       WHERE ooedent = ",g_enterprise," AND ooed001='8'  AND ((ooed006 <= '",g_today,"'  AND ooed007 >= '",g_today,"' ) OR ooed007 IS NULL) ",   #170202-00026#1 20170202 add by beckxie
                  "                       START WITH ooed005='",g_xmda_m.xmdasite,"' AND ooed001 = '8' ",
                  "                         AND ((ooed006 <= '",g_today,"'  AND ooed007 >= '",g_today,"' ) OR ooed007 IS NULL) ",
                  "                     CONNECT BY  NOCYCLE PRIOR ooed004=ooed005 AND ooed001='8' ) ",
                  #"                       UNION (SELECT ooed004 FROM ooed_t WHERE ooed004='",g_xmda_m.xmdasite,"' )) "   #170202-00026#1 20170202 mark by beckxie
                  "                       UNION (SELECT ooed004 FROM ooed_t WHERE ooedent = ",g_enterprise," AND ooed004='",g_xmda_m.xmdasite,"' )) "   #170202-00026#1 20170202 add by beckxie
      PREPARE adbt500_site_pre FROM l_sql
      LET l_cnt = 0
      EXECUTE adbt500_site_pre INTO l_cnt
      IF l_cnt = 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'adb-00100'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   RETURN r_success
END FUNCTION
#依來源單號抓取相關欄位至訂單頭上
PRIVATE FUNCTION adbt500_xmda008_desc()
DEFINE p_xmda007 LIKE xmda_t.xmda007
DEFINE p_xmda008 LIKE xmda_t.xmda008

   IF cl_null(g_xmda_m.xmda007) OR cl_null(g_xmda_m.xmda008) THEN RETURN END IF
   IF g_xmda_m.xmda007 = '5' THEN
   #先判斷是否為無訂單出貨
   
   
      LET g_xmda_m.xmda009 = ''
      LET g_xmda_m.xmda009_desc = ''
      LET g_xmda_m.xmda010 = ''
      LET g_xmda_m.xmda010_desc = ''
      LET g_xmda_m.xmda011 = ''
      LET g_xmda_m.xmda011_desc = ''
      LET g_xmda_m.xmda012 = ''
      LET g_xmda_m.xmda013 = ''
      LET g_xmda_m.xmda015 = ''
      LET g_xmda_m.xmda015_desc = ''
      LET g_xmda_m.xmda016 = ''
      LET g_xmda_m.xmda017 = ''
      LET g_xmda_m.xmda017_desc = ''
      LET g_xmda_m.xmda020 = ''
      LET g_xmda_m.xmda020_desc = ''
      #LET g_xmda_m.xmda023 = ''
      #LET g_xmda_m.xmda023_desc = ''
      LET g_xmda_m.xmda024 = ''
      LET g_xmda_m.xmda024_desc = ''
      LET g_xmda_m.xmda035 = ''
      LET g_xmda_m.xmda035_desc = ''
   
      SELECT xmdk007,xmdk010,xmdk011,xmdk012,xmdk016
             xmdk018,xmdk022,
             xmdk031,xmdk019,xmdk015
        INTO g_xmda_m.xmda004,g_xmda_m.xmda009,g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda015,
             g_xmda_m.xmda017,g_xmda_m.xmda020,
             g_xmda_m.xmda024,g_xmda_m.xmda018,g_xmda_m.xmda035
        FROM xmdk_t
       WHERE xmdkent = g_enterprise AND xmdkdocno = g_xmda_m.xmda008
      
      CALL adbt500_head_default()
   END IF
END FUNCTION
#稅別檢查
PRIVATE FUNCTION adbt500_xmda011_chk(p_xmda011)
DEFINE p_xmda011      LIKE xmda_t.xmda011
DEFINE r_success      LIKE type_t.num5
DEFINE l_cnt          LIKE type_t.num5

       LET r_success = TRUE
       IF NOT cl_null(p_xmda011) THEN 
          IF g_xmda_m.xmda007 = '5' THEN
             SELECT COUNT(*)
               INTO l_cnt
               FROM xmdk_t
              WHERE xmdkent = g_enterprise 
                AND xmdkdocno = g_xmda_m.xmda008
                AND xmdk000 <> '2'
                AND xmdk012 = p_xmda011
             IF l_cnt = 0 THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = 'adb-00050'
                LET g_errparam.extend = p_xmda011
                LET g_errparam.popup = TRUE
                CALL cl_err()

                LET r_success = FALSE
                RETURN r_success
             END IF
          END IF
       END IF 
       RETURN r_success
END FUNCTION
#取價方式顯示
PRIVATE FUNCTION adbt500_xmda017_ref(p_xmda017)
DEFINE p_xmda017    LIKE xmda_t.xmda017
DEFINE r_pmaml003   LIKE pmaml_t.pmaml003

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_xmda017
       CALL ap_ref_array2(g_ref_fields,"SELECT xmahl003 FROM xmahl_t WHERE xmahlent='"||g_enterprise||"' AND xmahl001=? AND xmahl002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_pmaml003 = '', g_rtn_fields[1] , ''
       RETURN r_pmaml003
       
END FUNCTION
#銷售通路顯示
PRIVATE FUNCTION adbt500_xmda023_ref(p_xmda023)
DEFINE p_xmda023   LIKE xmda_t.xmda023
DEFINE r_oocql004  LIKE oocql_t.oocql004

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_xmda023
       CALL ap_ref_array2(g_ref_fields,"SELECT oojdl003 FROM oojdl_t WHERE oojdlent='"||g_enterprise||"' AND oojdl001=? AND oojdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_oocql004 = '', g_rtn_fields[1] , ''
       RETURN r_oocql004   
       
END FUNCTION
#銷售通路檢查
PRIVATE FUNCTION adbt500_xmda023_chk(p_xmda023)
DEFINE p_xmda023    LIKE xmda_t.xmda023
DEFINE r_success    LIKE type_t.num5

       LET r_success = TRUE

       IF NOT cl_null(p_xmda023) THEN
          IF NOT s_azzi650_chk_exist('275',p_xmda023) THEN
             LET r_success = FALSE
             RETURN r_success
          END IF
       END IF
       RETURN r_success
END FUNCTION

PRIVATE FUNCTION adbt500_xmda025_desc()
  DEFINE r_address   STRING
  DEFINE r_oofb011   LIKE oofb_t.oofb011
  DEFINE r_success   LIKE type_t.num5  
  DEFINE l_oofb019   LIKE oofb_t.oofb019    #簡要代碼
  DEFINE l_oofb022   LIKE oofb_t.oofb022    #送貨站點
  DEFINE l_dbaf001   LIKE dbaf_t.dbaf001    #路線編號 

      #收貨地址
      LET r_address = '' 
      LET g_xmda_m.xmda025 = ''
      LET g_xmda_m.xmda025_desc = ''
      LET g_xmda_m.xmda206 = ''
      LET g_xmda_m.xmda206_desc = ''
      LET g_xmda_m.xmda207 = ''
      LET g_xmda_m.xmda207_desc = ''
      LET g_xmda_m.oofb017 = ''
      IF NOT cl_null(g_xmda_m.xmda022) THEN    
         CALL s_adb_address_default('3',g_xmda_m.xmda022)
            RETURNING l_oofb019,l_oofb022,l_dbaf001
            
         LET g_xmda_m.xmda025 = l_oofb019   #簡要代碼
         LET g_xmda_m.xmda206 = l_oofb022   #送貨站點
         LET g_xmda_m.xmda207 = l_dbaf001   #路線編號

         IF NOT cl_null(g_xmda_m.xmda025) THEN
            CALL s_adb_address_ref('3',g_xmda_m.xmda025,g_xmda_m.xmda022)
               RETURNING r_oofb011,r_address
            LET g_xmda_m.xmda025_desc = r_oofb011
            LET g_xmda_m.oofb017 = r_address  
         END IF
      END IF
      LET g_xmda_m_o.xmda025 = g_xmda_m.xmda025
      
      LET g_xmda_m.xmda206_desc = s_desc_get_dbad001_desc(g_xmda_m.xmda206)
      LET g_xmda_m.xmda207_desc = s_desc_get_dbab001_desc(g_xmda_m.xmda207)
      DISPLAY BY NAME g_xmda_m.xmda025,g_xmda_m.xmda025_desc,
                      g_xmda_m.xmda206,g_xmda_m.xmda207,
                      g_xmda_m.oofb017,g_xmda_m.xmda206_desc,
                      g_xmda_m.xmda207_desc
END FUNCTION

PRIVATE FUNCTION adbt500_xmda026_desc()
  DEFINE r_address   STRING
  DEFINE r_oofb011   LIKE oofb_t.oofb011
  DEFINE r_success   LIKE type_t.num5  
  DEFINE l_oofb022   LIKE oofb_t.oofb022

      #收款地址
      LET r_address = ''
      LET g_xmda_m.xmda026 = ''
      LET g_xmda_m.xmda026_desc = ''
      LET g_xmda_m.oofb017_1 = ''
      
      IF NOT cl_null(g_xmda_m.xmda021) THEN      
         CALL s_adb_main_address('5',g_xmda_m.xmda021) 
            RETURNING g_xmda_m.xmda026,l_oofb022
         
         DISPLAY BY NAME g_xmda_m.xmda026
         
         IF NOT cl_null(g_xmda_m.xmda026) THEN
            CALL s_adb_address_ref('5',g_xmda_m.xmda026,g_xmda_m.xmda021)
               RETURNING r_oofb011,r_address
            LET g_xmda_m.xmda026_desc = r_oofb011
            LET g_xmda_m.oofb017_1 = r_address  
         END IF 
      END IF
      LET g_xmda_m_o.xmda026 = g_xmda_m.xmda026
      
      DISPLAY BY NAME g_xmda_m.xmda026,g_xmda_m.xmda026_desc 
      DISPLAY BY NAME g_xmda_m.oofb017_1
END FUNCTION

PRIVATE FUNCTION adbt500_xmda027_ref(p_xmda027)
DEFINE p_xmda027   LIKE xmda_t.xmda027
DEFINE r_oofa011   LIKE oofa_t.oofa011

       LET r_oofa011 = ''
       SELECT oofa011 INTO r_oofa011 FROM oofa_t WHERE oofaent=g_enterprise AND oofa001=p_xmda027
       RETURN r_oofa011
END FUNCTION

PRIVATE FUNCTION adbt500_xmda202_chk()
DEFINE l_cnt     LIKE type_t.num5
DEFINE r_return  LIKE type_t.num5

      LET r_return = TRUE
      IF NOT cl_null(g_xmda_m.xmda202) 
         AND cl_null(g_xmda_m.xmda023) THEN
         SELECT COUNT(*)
           INTO l_cnt
           FROM dbbc_t
          WHERE dbbcent = g_enterprise
            AND dbbc002 = g_xmda_m.xmdasite
            AND dbbc005 = g_xmda_m.xmda202
          IF l_cnt = 0 THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = 'adb-00042'
             LET g_errparam.extend = ""
             LET g_errparam.popup = TRUE
             CALL cl_err()

             LET r_return = FALSE
             RETURN r_return
          END IF
      END IF
      IF NOT cl_null(g_xmda_m.xmda023) 
         AND cl_null(g_xmda_m.xmda202) THEN
         SELECT COUNT(*)
           INTO l_cnt
           FROM dbbc_t
          WHERE dbbcent = g_enterprise
            AND dbbc002 = g_xmda_m.xmdasite
            AND dbbc003 = g_xmda_m.xmda023
          IF l_cnt = 0 THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = 'adb-00042'
             LET g_errparam.extend = ""
             LET g_errparam.popup = TRUE
             CALL cl_err()

             LET r_return = FALSE
             RETURN r_return
          END IF
      END IF
      IF NOT cl_null(g_xmda_m.xmda202) 
         AND NOT cl_null(g_xmda_m.xmda023) THEN
         SELECT COUNT(*)
           INTO l_cnt
           FROM dbbc_t
          WHERE dbbcent = g_enterprise
            AND dbbc002 = g_xmda_m.xmdasite
            AND dbbc005 = g_xmda_m.xmda202
            AND dbbc003 = g_xmda_m.xmda023
          IF l_cnt = 0 THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = 'adb-00042'
             LET g_errparam.extend = ""
             LET g_errparam.popup = TRUE
             CALL cl_err()

             LET r_return = FALSE
             RETURN r_return
          END IF
      END IF
      RETURN r_return
END FUNCTION

PRIVATE FUNCTION adbt500_xmda204_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_xmda_m.xmda204
      CALL ap_ref_array2(g_ref_fields,"SELECT prcfl003 FROM prcfl_t WHERE prcflent='"||g_enterprise||"' AND prcfl001=? AND prcfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_xmda_m.xmda204_desc = '', g_rtn_fields[1] , ''
      #DISPLAY BY NAME g_xmda_m.xmda204_desc
END FUNCTION
#根據交貨日期計算緊急度
PRIVATE FUNCTION adbt500_xmdc012_to_xmdc020()
DEFINE l_imae071    LIKE imae_t.imae071  #固定
DEFINE l_imae072    LIKE imae_t.imae072  #變動
DEFINE l_imae074    LIKE imae_t.imae074  #QC
DEFINE l_imae076    LIKE imae_t.imae076  #嚴守交期前置時間
DEFINE l_time1      LIKE imaf_t.imaf171
DEFINE l_time2      LIKE imaf_t.imaf171

        IF NOT cl_null(g_xmdc_d[l_ac].xmdc012) THEN
           LET l_imae071 = 0   
           LET l_imae072 = 0   
           LET l_imae074 = 0  
           LET l_imae076 = 0             
           LET l_time1 = 0
           LET l_time2 = 0

          SELECT imae071,imae072,imae074,imae076 
            INTO l_imae071,l_imae072,l_imae074,l_imae076
            FROM imae_t
           WHERE imaeent = g_enterprise AND imaesite = g_xmda_m.xmdasite 
             AND imae001 = g_xmdc_d[l_ac].xmdc001

          LET l_time1 = g_xmdc_d[l_ac].xmdc012 - g_today      #交貨日期  - g_today
          LET l_time2 = l_imae071 + l_imae072 + l_imae074     #[T:料件據點生管資料檔]設置的(固定+變動+QC)前置天數

          #若輸入的交貨日期 - g_today > [T:料件據點生管資料檔]設置的(固定+變動+QC)前置天數，則[C:緊急度] = '1'(一般)
          IF l_time1 >= l_time2 THEN
             LET g_xmdc_d[l_ac].xmdc020 = '1'
          END IF

          #若輸入的交貨日期 - g_today < [T:料件據點生管資料檔]設置的(固定+變動+QC)前置天數，
          #且約定交貨日期 - g_today >[T:料件據點生管資料檔].[C:嚴守交期前置時間]時，則[C:緊急度] = '2'(緊急)
          IF l_time1 < l_time2 AND l_time1 >= l_imae076 THEN
             LET g_xmdc_d[l_ac].xmdc020 = '2'
          END IF

          #若約定交貨日期 - g_today <[T:料件據點生管資料檔].[C:嚴守交期前置時間]時，則[C:緊急度] = '3'(特急)
          IF l_time1 < l_imae076 THEN
             LET g_xmdc_d[l_ac].xmdc020 = '3'
          END IF
       END IF
END FUNCTION
#檢查理由碼
PRIVATE FUNCTION adbt500_xmdc049_chk(p_xmdc049)
DEFINE p_xmdc049  LIKE xmdc_t.xmdc049
DEFINE l_success  LIKE type_t.num5
DEFINE r_success  LIKE type_t.num5
DEFINE l_flag     LIKE type_t.num5

        LET r_success = TRUE
        
        IF NOT cl_null(p_xmdc049) THEN
           CALL s_azzi650_chk_exist(g_acc,p_xmdc049) RETURNING l_success
           IF NOT l_success THEN
               LET r_success = FALSE
               RETURN r_success
           END IF
        END IF           
        RETURN r_success
END FUNCTION
#檢查營運據點
PRIVATE FUNCTION adbt500_xmdcunit_chk(p_xmdcunit)
DEFINE p_xmdcunit   LIKE xmdc_t.xmdcunit
DEFINE l_success    LIKE type_t.num5
DEFINE l_flag       LIKE type_t.num5
DEFINE r_success    LIKE type_t.num5

       LET r_success = TRUE
       
       IF NOT cl_null(p_xmdcunit) THEN 
          #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
          INITIALIZE g_chkparam.* TO NULL
          LET g_errshow = TRUE #是否開窗 #160318-00025#28  add
          #設定g_chkparam.*的參數
          LET g_chkparam.arg1 = p_xmdcunit
          LET g_chkparam.err_str[1] = "aoo-00095:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"#要執行的建議程式待補 #160318-00025#28  add
          #呼叫檢查存在並帶值的library
          IF NOT cl_chk_exist("v_ooef001") THEN
             LET r_success = FALSE
             RETURN r_success
          END IF
       END IF 
       RETURN r_success
END FUNCTION

PRIVATE FUNCTION adbt500_xmja003_default()
DEFINE l_success     LIKE type_t.num5
DEFINE l_oodbl004    LIKE oodbl_t.oodbl004  #稅別名稱
DEFINE l_oodb005     LIKE oodb_t.oodb005    #含稅否
DEFINE l_oodb006     LIKE oodb_t.oodb006    #稅率 
DEFINE l_oodb011     LIKE oodb_t.oodb011    #取得稅別類型1:正常稅率2:依料件設定  

   IF cl_null(g_xmdc4_d_t.xmja003) OR g_xmdc4_d[l_ac].xmja003 <> g_xmdc4_d_t.xmja003 THEN
      IF g_tax_app = '2' AND NOT cl_null(g_pmab089) THEN
         CALL s_tax_chktype(g_xmda_m.xmdasite,g_xmda_m.xmda004,g_xmdc4_d[l_ac].xmja003,'1',g_pmab089)
         RETURNING l_success,g_xmdc4_d[l_ac].xmja006,g_xmdc4_d[l_ac].xmja007
            #帶出單身稅率
            LET l_oodb006 = ''
            CALL s_tax_chk(g_xmda_m.xmdasite,g_xmdc4_d[l_ac].xmja006)
              RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011     
            IF l_success THEN
               LET g_xmdc4_d[l_ac].xmja007 = l_oodb006
               CALL adbt500_regen_amounts()
            ELSE
               #檢查失敗時後續處理
               LET g_xmdc4_d[l_ac].xmja006 = ''
               LET g_xmdc4_d[l_ac].xmja007 = ''               
            END IF
      ELSE
         LET g_xmdc4_d[l_ac].xmja006 = g_xmda_m.xmda011 
         LET g_xmdc4_d[l_ac].xmja007 = g_xmda_m.xmda012
      END IF
      
      CALL s_desc_get_tax_desc1(g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja006) RETURNING g_xmdc4_d[l_ac].xmja006_desc
      
      SELECT imaa105,imaa106
        INTO g_xmdc4_d[l_ac].xmja013,g_xmdc4_d[l_ac].xmja017
        FROM imaa_t
       WHERE imaaent = g_enterprise
         AND imaa001 = g_xmdc4_d[l_ac].xmja003
      
      LET g_xmdc4_d_o.xmja006 = g_xmdc4_d[l_ac].xmja006  
      LET g_xmdc4_d_o.xmja007 = g_xmdc4_d[l_ac].xmja007       
      LET g_xmdc4_d_o.xmja015 = g_xmdc4_d[l_ac].xmja015 
      LET g_xmdc4_d_o.xmja013 = g_xmdc4_d[l_ac].xmja013
      LET g_xmdc4_d_o.xmja017 = g_xmdc4_d[l_ac].xmja017

      CALL s_desc_get_tax_desc1(g_xmdc4_d[l_ac].xmjasite,g_xmdc4_d[l_ac].xmja006) RETURNING g_xmdc4_d[l_ac].xmja006_desc
      CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja013) RETURNING g_xmdc4_d[l_ac].xmja013_desc 
      CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja017) RETURNING g_xmdc4_d[l_ac].xmja017_desc
      CALL s_desc_get_unit_desc(g_xmdc4_d[l_ac].xmja015) RETURNING g_xmdc4_d[l_ac].xmja015_desc
   END IF
END FUNCTION
#料件編號檢查
PRIVATE FUNCTION adbt500_xmja003_chk(p_xmja003)
DEFINE p_xmja003     LIKE xmja_t.xmja003
DEFINE l_flag        LIKE type_t.num5
DEFINE l_success     LIKE type_t.num5
DEFINE r_success     LIKE type_t.num5
DEFINE l_cnt         LIKE type_t.num5
DEFINE l_imaa143     LIKE imaa_t.imaa143

       LET r_success = TRUE
       
       IF NOT cl_null(p_xmja003) THEN           
          INITIALIZE g_chkparam.* TO NULL
          LET g_chkparam.arg1 = p_xmja003
          LET g_chkparam.arg2 = 'ALL'  #g_xmda_m.xmdasite
          IF NOT cl_chk_exist("v_imaf001_15") THEN
             LET r_success = FALSE
             RETURN r_success
          END IF
          
          SELECT imaa143
            INTO l_imaa143
            FROM imaa_t
           WHERE imaaent = g_enterprise
             AND imaa001 = p_xmja003
             
          LET l_cnt = 0   
          SELECT COUNT(*)
            INTO l_cnt
            FROM dbbc_t
           WHERE dbbcent = g_enterprise
             AND dbbc002 = g_xmda_m.xmdasite
             AND dbbc005 = g_xmda_m.xmda202
             AND dbbc003 = g_xmda_m.xmda023
             AND dbbc004 = l_imaa143
             
          IF l_cnt = 0 THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = 'adb-00051'
             LET g_errparam.extend = ""
             LET g_errparam.popup = TRUE
             CALL cl_err()

             LET r_success = FALSE
             RETURN r_success
          END IF
       END IF 

       RETURN r_success
END FUNCTION

PRIVATE FUNCTION adbt500_xmja005_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_xmdc4_d[l_ac].xmja005
      CALL ap_ref_array2(g_ref_fields,"SELECT prcfl003 FROM prcfl_t WHERE prcflent='"||g_enterprise||"' AND prcfl001=? AND prcfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_xmdc4_d[l_ac].xmja005_desc = '', g_rtn_fields[1] , ''
      #DISPLAY BY NAME g_xmdc4_d[l_ac].xmja005_desc
END FUNCTION

PRIVATE FUNCTION adbt500_xmja024_desc()
#  DEFINE l_pmaa027   LIKE pmaa_t.pmaa027  
      
      #送貨地址
#      LET l_pmaa027 = ''                                      
#      CALL adbt500_get_pmaa027(g_xmdc4_d[l_ac].xmja025) RETURNING l_pmaa027
#      SELECT oofb019,oofb022 INTO g_xmdc4_d[l_ac].xmja026,g_xmdc4_d[l_ac].xmja027 FROM oofb_t
#       WHERE oofbent = g_enterprise
#         AND oofb002 = l_pmaa027 AND oofb008 = '3' 
#         AND oofbstus = 'Y' AND oofb010 = 'Y' AND rownum = 1 
      CALL s_adb_main_address('3',g_xmdc4_d[l_ac].xmja025) 
         RETURNING g_xmdc4_d[l_ac].xmja026,g_xmdc4_d[l_ac].xmja027
        
      CALL adbt500_xmja026_ref()
      LET g_xmdc4_d[l_ac].xmja027_desc = s_desc_get_dbad001_desc(g_xmdc4_d[l_ac].xmja027)
      
      SELECT pmaa241,pmaa242,pmaa243,pmaa244
        INTO g_xmdc4_d[l_ac].xmja040,g_xmdc4_d[l_ac].xmja039,g_xmdc4_d[l_ac].xmja038,g_xmdc4_d[l_ac].xmja037
        FROM pmaa_t
       WHERE pmaaent = g_enterprise
         AND pmaa001 = g_xmdc4_d[l_ac].xmja025
         
      LET g_xmdc4_d_o.xmja040 = g_xmdc4_d[l_ac].xmja040
      LET g_xmdc4_d_o.xmja039 = g_xmdc4_d[l_ac].xmja039
      LET g_xmdc4_d_o.xmja038 = g_xmdc4_d[l_ac].xmja038
      LET g_xmdc4_d_o.xmja037 = g_xmdc4_d[l_ac].xmja037
         
      CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja040) RETURNING g_xmdc4_d[l_ac].xmja040_desc
      CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja039) RETURNING g_xmdc4_d[l_ac].xmja039_desc
      CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja038) RETURNING g_xmdc4_d[l_ac].xmja038_desc
      CALL s_desc_get_dbaa001_desc(g_xmdc4_d[l_ac].xmja037) RETURNING g_xmdc4_d[l_ac].xmja037_desc
      #DISPLAY BY NAME g_xmdc4_d[l_ac].xmja040_desc,g_xmdc4_d[l_ac].xmja039_desc,g_xmdc4_d[l_ac].xmja038_desc,g_xmdc4_d[l_ac].xmja037_desc
            
END FUNCTION

PRIVATE FUNCTION adbt500_xmja026_ref()
  DEFINE l_pmaa027   LIKE pmaa_t.pmaa027
  DEFINE r_address   STRING
  DEFINE r_success   LIKE type_t.num5  
  
      LET l_pmaa027 = ''
      LET r_address = ''                                       
      CALL adbt500_get_pmaa027(g_xmdc4_d[l_ac].xmja025) RETURNING l_pmaa027
      IF NOT cl_null(g_xmdc4_d[l_ac].xmja026) THEN
         CALL s_aooi350_get_address(l_pmaa027,g_xmdc4_d[l_ac].xmja026,g_lang)RETURNING r_success,r_address
         LET g_xmdc4_d[l_ac].xmja026_desc = r_address
         #DISPLAY BY NAME g_xmdc4_d[l_ac].xmja026_desc
      ELSE
         LET g_xmdc4_d[l_ac].xmja026_desc = ''
         #DISPLAY BY NAME g_xmdc4_d[l_ac].xmja026_desc
      END IF
END FUNCTION
#單頭變更送貨客戶
PRIVATE FUNCTION adbt500_change_xmda022()
DEFINE l_pmaa002      LIKE pmaa_t.pmaa002

   UPDATE xmja_t
      SET xmja024 = NULL,
          xmja025 = g_xmda_m.xmda022,
          xmja026 = g_xmda_m.xmda025,
          xmja027 = g_xmda_m.xmda206
    WHERE xmjaent = g_enterprise
      AND xmjadocno = g_xmda_m.xmdadocno
      
END FUNCTION
################################################################################
# Descriptions...: 單頭稅別修改時，單身稅別一併修改
# Memo...........:
# Usage..........: CALL adbt500__change_xmdc016()
#                  
# Input parameter:
#                : 
# Return code....: 
#                : 
# Date & Author..: 2014/03/25 By polly
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt500_change_xmdc016()
DEFINE p_cmd             LIKE type_t.chr1
DEFINE l_i               LIKE type_t.num10
DEFINE l_success         LIKE type_t.num5
DEFINE l_xmdcseq         LIKE xmdc_t.xmdcseq
DEFINE l_xmdc001         LIKE xmdc_t.xmdc001
DEFINE l_xmdc011         LIKE xmdc_t.xmdc011
DEFINE l_xmdc015         LIKE xmdc_t.xmdc015
DEFINE l_xmdc016         LIKE xmdc_t.xmdc016
DEFINE l_xmdc017         LIKE xmdc_t.xmdc017
DEFINE l_xmdc046         LIKE xmdc_t.xmdc046
DEFINE l_xmdc047         LIKE xmdc_t.xmdc047
DEFINE l_xmdc048         LIKE xmdc_t.xmdc048
DEFINE l_xmjaseq         LIKE xmja_t.xmjaseq
DEFINE l_xmja003         LIKE xmja_t.xmja003
DEFINE l_xmja018         LIKE xmja_t.xmja018
DEFINE l_xmja010         LIKE xmja_t.xmja010
DEFINE l_xmja006         LIKE xmja_t.xmja006
DEFINE l_xmja007         LIKE xmja_t.xmja007
DEFINE l_xmja019         LIKE xmja_t.xmja019
DEFINE l_xmja020         LIKE xmja_t.xmja020
DEFINE l_xmja021         LIKE xmja_t.xmja021
DEFINE l_xmja017         LIKE xmja_t.xmja017
DEFINE l_xmja008         LIKE xmja_t.xmja008
DEFINE l_xmja009         LIKE xmja_t.xmja009
DEFINE l_xmja022         LIKE xmja_t.xmja022
DEFINE l_xmjasite        LIKE xmja_t.xmjasite
DEFINE l_ooef016         LIKE ooef_t.ooef016
DEFINE l_xmdb001         LIKE xmdb_t.xmdb001
DEFINE l_xmdb006         LIKE xmdb_t.xmdb006
DEFINE l_xmdb200         LIKE xmdb_t.xmdb200


      DECLARE sel_xmja_cs CURSOR FOR
       
       SELECT xmjaseq,xmja003,xmja018,xmja017,xmjasite
         FROM xmja_t
        WHERE xmjaent = g_enterprise
          AND xmjadocno = g_xmda_m.xmdadocno
      
      FOREACH sel_xmja_cs INTO l_xmjaseq,l_xmja003,l_xmja018,l_xmja017,l_xmjasite
         IF g_tax_app = '2' AND NOT cl_null(g_pmab089) THEN
            #依料件設定
            CALL s_tax_chktype(g_xmda_m.xmdasite,g_xmda_m.xmda004,l_xmja003,'1',g_pmab089)
                 RETURNING l_success,l_xmja006,l_xmja007
            IF NOT l_success THEN   #稅別檢查
               #稅別檢查失敗，將稅別、稅率清空
               LET l_xmja006 = ''
               LET l_xmja007 = ''
            END IF                   
         ELSE
            #依正常稅率
            LET l_xmja006 = g_xmda_m.xmda011
            LET l_xmja007 = g_xmda_m.xmda012
         END IF
         #重取單價
         CALL s_get_price_adb('1',g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt,l_xmjaseq,g_xmda_m.xmda004,l_xmja003,l_xmja017,l_xmja018,g_xmda_m.xmda015,l_xmja006,'1')
           RETURNING l_success,l_xmja008,l_xmja009,l_xmja010,l_xmja022

         #重計未稅金額、含稅金額、稅額
         IF l_xmja010 = 0 OR cl_null(l_xmja006) THEN
            LET l_xmja019 = 0
            LET l_xmja020 = 0
            LET l_xmja021 = 0
         ELSE 
            #160707-00009#1 20160707 modify by beckxie---S
            #CALL s_adbt500_get_amounts(g_xmda_m.xmdadocno,l_xmjaseq,l_xmjasite,g_xmda_m.xmda015,g_xmda_m.xmda016,l_xmja006,l_xmja010,l_xmja018)
            CALL s_adbt500_get_amounts(g_xmda_m.xmdadocno,l_xmjaseq,l_xmjasite,g_xmda_m.xmda015,g_xmda_m.xmda016,l_xmja006,l_xmja010*l_xmja018,l_xmja018)
            #160707-00009#1 20160707 modify by beckxie---E
              RETURNING l_xmja019,l_xmja020,l_xmja021
            
         END IF 
         UPDATE xmja_t SET xmja006 = l_xmja006,
                           xmja007 = l_xmja007,
                           xmja019 = l_xmja019,
                           xmja020 = l_xmja020,
                           xmja021 = l_xmja021,
                           xmja008 = l_xmja008,
                           xmja009 = l_xmja009,
                           xmja010 = l_xmja010,
                           xmja022 = l_xmja022
          WHERE xmjaent = g_enterprise
            AND xmjacdocno = g_xmda_m.xmdadocno
            AND xmjaseq = l_xmjaseq
            
         CALL s_adbt500_gen_xmdc(g_xmda_m.xmdadocno,l_xmjaseq) RETURNING l_success
         #需呼叫"交期明細資料"的Function重新產生交期明細資料
         CALL s_adbt500_gen_xmdd(g_xmda_m.xmdadocno,l_xmjaseq) RETURNING l_success 
      END FOREACH
      
      LET l_ooef016 = ''
      SELECT ooef016 INTO l_ooef016
        FROM ooef_t
       WHERE ooefent = g_enterprise
         AND ooef001 = g_xmda_m.xmdasite
      
      DECLARE sel_xmdb_cs CURSOR FOR
       SELECT xmdb001,xmdb006
         FROM xmdb_t
        WHERE xmdbent = g_enterprise
          AND xmdbdocno = g_xmda_m.xmdadocno
          
      FOREACH sel_xmdb_cs INTO l_xmdb001,l_xmdb006
         LET l_xmdb200 = s_curr_round(g_xmda_m.xmdasite,l_ooef016,l_xmdb006 * g_xmda_m.xmda016,2)
         
         UPDATE xmdb_t SET xmdb200 = l_xmdb200
           WHERE xmdbent = g_enterprise
             AND xmdbdocno = g_xmda_m.xmdadocno
             AND xmdb001 = l_xmdb001
      END FOREACH
      
      CALL adbt500_b_fill()

END FUNCTION
################################################################################
# Descriptions...: 新增時，依據產品特徵開窗後的值新增到資料庫
# Memo...........:
# Usage..........: CALL adbt500_feature()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 2014/04/10 By Polly
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt500_feature()
   #DEFINE  l_xmdcseq    LIKE xmdc_t.xmdcseq
   #DEFINE  l_xmdc       RECORD LIKE xmdc_t.*
   DEFINE  r_success    LIKE type_t.num5
   DEFINE  l_success    LIKE type_t.num5   
   DEFINE  l_i          LIKE type_t.num5
   DEFINE  l_pmao004    LIKE pmao_t.pmao004 
   DEFINE  l_xmjaseq    LIKE xmja_t.xmjaseq
   DEFINE  l_xmja       RECORD
           xmjaent      LIKE xmja_t.xmjaent,
           xmjasite     LIKE xmja_t.xmjasite,
           xmjaunit     LIKE xmja_t.xmjaunit,
           xmjadocno    LIKE xmja_t.xmjadocno,
           xmjaseq      LIKE xmja_t.xmjaseq,
           xmja001      LIKE xmja_t.xmja001,
           xmja002      LIKE xmja_t.xmja002,
           xmja003      LIKE xmja_t.xmja003,
           xmja004      LIKE xmja_t.xmja004,
           xmja005      LIKE xmja_t.xmja005,
           xmja006      LIKE xmja_t.xmja006,
           xmja007      LIKE xmja_t.xmja007,
           xmja008      LIKE xmja_t.xmja008,
           xmja009      LIKE xmja_t.xmja009,
           xmja010      LIKE xmja_t.xmja010,
           xmja011      LIKE xmja_t.xmja011,
           xmja012      LIKE xmja_t.xmja012,
           xmja013      LIKE xmja_t.xmja013,
           xmja014      LIKE xmja_t.xmja014,
           xmja015      LIKE xmja_t.xmja015,
           xmja016      LIKE xmja_t.xmja016,
           xmja017      LIKE xmja_t.xmja017,
           xmja018      LIKE xmja_t.xmja018,
           xmja019      LIKE xmja_t.xmja019,
           xmja020      LIKE xmja_t.xmja020,
           xmja021      LIKE xmja_t.xmja021,
           xmja022      LIKE xmja_t.xmja022,
           xmja024      LIKE xmja_t.xmja024,
           xmja025      LIKE xmja_t.xmja025,
           xmja026      LIKE xmja_t.xmja026,
           xmja027      LIKE xmja_t.xmja027,
           xmja028      LIKE xmja_t.xmja028,
           xmja029      LIKE xmja_t.xmja029,
           xmja030      LIKE xmja_t.xmja030,
           xmja031      LIKE xmja_t.xmja031,
           xmja032      LIKE xmja_t.xmja032,
           xmja033      LIKE xmja_t.xmja033,
           xmja034      LIKE xmja_t.xmja034,
           xmja037      LIKE xmja_t.xmja037,
           xmja038      LIKE xmja_t.xmja038,
           xmja039      LIKE xmja_t.xmja039,
           xmja040      LIKE xmja_t.xmja040
                        END RECORD
   DEFINE  l_rtdx029    LIKE rtdx_t.rtdx029   
   DEFINE  l_sql        STRING               #161228-00033#1 Add By Ken 170105   
   LET r_success = TRUE
  
   LET l_xmjaseq = '' 
   INITIALIZE l_xmja.* TO NULL  
   SELECT xmjaent,xmjasite,xmjaunit,xmjadocno,xmjaseq,
          xmja001,xmja002,xmja003,xmja004,xmja005,xmja006,
          xmja007,xmja008,xmja009,xmja010,xmja011,xmja012,
          xmja013,xmja014,xmja015,xmja016,xmja017,xmja018,
          xmja019,xmja020,xmja021,xmja022,xmja024,xmja025,
          xmja026,xmja027,xmja028,xmja029,xmja030,xmja031,
          xmja032,xmja033,xmja034,xmja037,xmja038,xmja039,
          xmja040
     INTO l_xmja.xmjaent,l_xmja.xmjasite,l_xmja.xmjaunit,l_xmja.xmjadocno,l_xmja.xmjaseq,
          l_xmja.xmja001,l_xmja.xmja002,l_xmja.xmja003,l_xmja.xmja004,l_xmja.xmja005,l_xmja.xmja006,
          l_xmja.xmja007,l_xmja.xmja008,l_xmja.xmja009,l_xmja.xmja010,l_xmja.xmja011,l_xmja.xmja012,
          l_xmja.xmja013,l_xmja.xmja014,l_xmja.xmja015,l_xmja.xmja016,l_xmja.xmja017,l_xmja.xmja018,
          l_xmja.xmja019,l_xmja.xmja020,l_xmja.xmja021,l_xmja.xmja022,l_xmja.xmja024,l_xmja.xmja025,
          l_xmja.xmja026,l_xmja.xmja027,l_xmja.xmja028,l_xmja.xmja029,l_xmja.xmja030,l_xmja.xmja031,
          l_xmja.xmja032,l_xmja.xmja033,l_xmja.xmja034,l_xmja.xmja037,l_xmja.xmja038,l_xmja.xmja039,
          l_xmja.xmja040
     FROM xmja_t
    WHERE xmjaent = g_enterprise
      AND xmjadocno = g_xmda_m.xmdadocno
      AND xmjaseq = g_xmdc4_d[l_ac].xmjaseq
    
   SELECT MAX(xmjaseq) INTO l_xmjaseq
     FROM xmja_t
    WHERE xmjaent = g_enterprise
      AND xmjadocno = g_xmda_m.xmdadocno
      AND xmjaseq <= 9000        #160513-00033#4
   IF cl_null(l_xmjaseq) THEN
      LET l_xmjaseq = 0
   END IF  
   
   FOR l_i = 2 TO g_inam.getLength()
        #lori522612  150116  add ----------------------(S)
       #產品特徵為NULL時,給空白   
       IF cl_null(g_inam[l_i].inam002) THEN
          LET g_inam[l_i].inam002 = ' '
       END IF
       #lori522612  150116  add ----------------------(E) 
       
       
       LET l_xmjaseq = l_xmjaseq + 1
       LET l_xmja.xmjaseq = l_xmjaseq
       LET l_xmja.xmja030 = 'N' 
       LET l_xmja.xmja003 = g_inam[l_i].inam001
       LET l_xmja.xmja004 = g_inam[l_i].inam002
       #lori522612  150116  add ----------------------(S)
       #產品特徵為NULL時,給空白   
       IF cl_null(l_xmja.xmja004) THEN
          LET l_xmja.xmja004 = ' '
       END IF
       #lori522612  150116  add ----------------------(E)       
       LET l_xmja.xmja012 = g_inam[l_i].inam004
       LET l_xmja.xmja014 = ''
       LET l_xmja.xmja016 = ''
       LET l_xmja.xmja018 = ''
       #銷售數量
       IF NOT cl_null(l_xmja.xmja013) THEN  
          CALL s_aooi250_convert_qty(l_xmja.xmja003,l_xmja.xmja011,l_xmja.xmja013,l_xmja.xmja012)
             RETURNING l_success,l_xmja.xmja014
       END IF
       #參考單位
       IF NOT cl_null(l_xmja.xmja015) THEN  
          CALL s_aooi250_convert_qty(l_xmja.xmja003,l_xmja.xmja011,l_xmja.xmja015,l_xmja.xmja012)
             RETURNING l_success,l_xmja.xmja016
       END IF
       #計價數量
       IF NOT cl_null(l_xmja.xmja017) THEN  
          CALL s_aooi250_convert_qty(l_xmja.xmja003,l_xmja.xmja011,l_xmja.xmja017,l_xmja.xmja012)
             RETURNING l_success,l_xmja.xmja018
       END IF
       
       #依交易對象、料號、產品特徵回傳客戶料號
       #161221-00064#24 mod-S
#       CALL s_apmi070_get_pmao004(g_xmda_m.xmda004,l_xmja.xmja003,g_inam[l_i].inam002)
       CALL s_apmi070_get_pmao004_2(g_xmda_m.xmda004,l_xmja.xmja003,g_inam[l_i].inam002,'2')
       #161221-00064#24 mod-E
         RETURNING l_success,l_pmao004
       IF l_success THEN
          LET l_xmja.xmja033 = l_pmao004
       END IF
       #160707-00009#1 20160707 modify by beckxie---S
       #CALL s_adbt500_get_amounts(g_xmda_m.xmdadocno,l_xmja.xmjaseq,l_xmja.xmjasite,g_xmda_m.xmda015,g_xmda_m.xmda016,l_xmja.xmja006,l_xmja.xmja010,l_xmja.xmja018)
       CALL s_adbt500_get_amounts(g_xmda_m.xmdadocno,l_xmja.xmjaseq,l_xmja.xmjasite,g_xmda_m.xmda015,g_xmda_m.xmda016,l_xmja.xmja006,l_xmja.xmja010*l_xmja.xmja018,l_xmja.xmja018)
       #160707-00009#1 20160707 modify by beckxie---E
         RETURNING l_xmja.xmja019,l_xmja.xmja020,l_xmja.xmja021
       
       IF l_xmja.xmja008 <> 0 AND l_xmja.xmja010 <> 0 AND l_xmja.xmja018 <> 0 THEN
          LET l_xmja.xmja022 = (l_xmja.xmja008 - l_xmja.xmja010) * l_xmja.xmja018
       END IF
       
        #161017-00029#3 16/10/18 by 08742 -S
        #161228-00033#1 Mark By Ken 170105(S)
        #SELECT imay003 INTO  l_xmja.xmja002
        #  FROM imay_t
        # WHERE imayent = g_enterprise
        #   AND imay019 = l_xmja.xmja004
        #   AND imay001 = l_xmja.xmja003
        #   AND ROWNUM = 1
        #161228-00033#1 Mark By Ken 170105(E)
        #161228-00033#1 Add By Ken 170105(S)
        LET l_sql = "SELECT imay003 ", 
                    "  FROM imay_t ",
                    " WHERE imayent = ", g_enterprise ,
                    "   AND imay019 = '", l_xmja.xmja004 ,"' ",
                    "   AND imay001 = '", l_xmja.xmja003 ,"' "
        PREPARE adbt500_imay_pre FROM l_sql
        DECLARE adbt500_imay_cur SCROLL CURSOR FOR adbt500_imay_pre
        OPEN adbt500_imay_cur
        FETCH FIRST adbt500_imay_cur INTO l_xmja.xmja002
        FREE adbt500_imay_pre
        CLOSE adbt500_imay_cur         
        #161228-00033#1 Add By Ken 170105(E)
        IF sqlca.sqlcode = 100 THEN
           SELECT imay003 INTO  l_xmja.xmja002
            FROM imay_t
           WHERE imayent = g_enterprise
             AND imay006='Y'
             AND imay001 = l_xmja.xmja003
        END IF
            #161017-00029#3 16/10/18 by 08742 -E
               
        
       INSERT INTO xmja_t
              (xmjaent,xmjasite,xmjaunit,xmjadocno,xmjaseq,xmja001,xmja002,
               xmja003,xmja004,xmja005,xmja006,xmja007,xmja008,xmja009,xmja010,
               xmja011,xmja012,xmja013,xmja014,xmja015,xmja016,xmja017,xmja018,
               xmja019,xmja020,xmja021,xmja022,xmja024,xmja025,xmja026,xmja027,
               xmja028,xmja029,xmja030,xmja031,xmja032,xmja033,xmja034,xmja037,
               xmja038,xmja039,xmja040) 
       VALUES (l_xmja.xmjaent,l_xmja.xmjasite,l_xmja.xmjaunit,l_xmja.xmjadocno,l_xmja.xmjaseq,l_xmja.xmja001,l_xmja.xmja002,
               l_xmja.xmja003,l_xmja.xmja004,l_xmja.xmja005,l_xmja.xmja006,l_xmja.xmja007,l_xmja.xmja008,l_xmja.xmja009,l_xmja.xmja010,
               l_xmja.xmja011,l_xmja.xmja012,l_xmja.xmja013,l_xmja.xmja014,l_xmja.xmja015,l_xmja.xmja016,l_xmja.xmja017,l_xmja.xmja018,
               l_xmja.xmja019,l_xmja.xmja020,l_xmja.xmja021,l_xmja.xmja022,l_xmja.xmja024,l_xmja.xmja025,l_xmja.xmja026,l_xmja.xmja027,
               l_xmja.xmja028,l_xmja.xmja029,l_xmja.xmja030,l_xmja.xmja031,l_xmja.xmja032,l_xmja.xmja033,l_xmja.xmja034,l_xmja.xmja037,
               l_xmja.xmja038,l_xmja.xmja039,l_xmja.xmja040 ) 
               
       #161017-00048--dongsz add--s
       CALL adbt500_gen_xmdf(1, l_xmja.xmjaseq, -1,l_xmja.xmjasite,
                            l_xmja.xmja003, l_xmja.xmja004, l_xmja.xmja014,
                            l_xmja.xmja018, l_xmja.xmja025, l_xmja.xmja030,
                            l_xmja.xmja031, l_xmja.xmja032, l_xmja.xmja037,
                            l_xmja.xmja038, l_xmja.xmja039, l_xmja.xmja040) RETURNING l_success
       
       IF NOT l_success THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = SQLCA.sqlcode
          LET g_errparam.extend = "xmdf_t"
          LET g_errparam.popup = TRUE
          CALL cl_err()
          LET r_success = FALSE
          EXIT FOR
       END IF 
       #161017-00048--dongsz add--e
       
       CALL s_adbt500_gen_xmdc(g_xmda_m.xmdadocno,l_xmja.xmjaseq) RETURNING l_success 
       IF NOT l_success THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = SQLCA.sqlcode
          LET g_errparam.extend = "xmdc_t"
          LET g_errparam.popup = TRUE
          CALL cl_err()

          LET r_success = FALSE
          EXIT FOR
       END IF
       
       #161017-00048--dongsz mark--s
#       CALL adbt500_gen_xmdf(1, l_xmja.xmjaseq, -1,l_xmja.xmjasite,
#                            l_xmja.xmja003, l_xmja.xmja004, l_xmja.xmja014,
#                            l_xmja.xmja018, l_xmja.xmja025, l_xmja.xmja030,
#                            l_xmja.xmja031, l_xmja.xmja032, l_xmja.xmja037,
#                            l_xmja.xmja038, l_xmja.xmja039, l_xmja.xmja040) RETURNING l_success
#       
#       IF NOT l_success THEN
#          INITIALIZE g_errparam TO NULL
#          LET g_errparam.code = SQLCA.sqlcode
#          LET g_errparam.extend = "xmdf_t"
#          LET g_errparam.popup = TRUE
#          CALL cl_err()
#          LET r_success = FALSE
#          EXIT FOR
#       END IF 
       #161017-00048--dongsz mark--e      
       
       CALL s_adbt500_gen_xmdd(g_xmda_m.xmdadocno,l_xmja.xmjaseq) RETURNING l_success
       IF NOT l_success THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = SQLCA.sqlcode
          LET g_errparam.extend = "xmdd_t"
          LET g_errparam.popup = TRUE
          CALL cl_err()

          LET r_success = FALSE
          EXIT FOR
       END IF                  
   END FOR 
   CALL g_inam.clear()
   CALL adbt500_b_fill() 
   RETURN r_success
      
END FUNCTION
#抓取聯絡對象識別碼
PRIVATE FUNCTION adbt500_get_pmaa027(p_pmaa001)
DEFINE p_pmaa001 LIKE pmaa_t.pmaa001
DEFINE r_pmaa027 LIKE pmaa_t.pmaa003

      LET r_pmaa027 = ''
      
      SELECT pmaa027 INTO r_pmaa027
        FROM pmaa_t
       WHERE pmaaent = g_enterprise
         AND pmaa001 = p_pmaa001
         
      RETURN r_pmaa027
END FUNCTION
################################################################################
# Descriptions...: 取得單據別設定的欄位預設值
# Memo...........: 需搭配單據別aooi200的設定
################################################################################
PRIVATE FUNCTION adbt500_docno_xmda_default()
DEFINE  l_success    LIKE type_t.num5   
DEFINE  l_slip       LIKE oobal_t.oobal002
   
   #抓取單據別
   LET l_slip = ''
   CALL s_aooi200_get_slip(g_xmda_m.xmdadocno) RETURNING l_success,l_slip
   IF NOT l_success THEN
      RETURN
   END IF
   
   IF cl_null(g_xmda_m.xmdasite) THEN
      RETURN
   END IF
   
   LET g_xmda_m.xmdadocdt = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmdadocdt',g_xmda_m.xmdadocdt)
   LET g_xmda_m.xmda004 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda004',g_xmda_m.xmda004)
   LET g_xmda_m.xmda002 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda002',g_xmda_m.xmda002)
   LET g_xmda_m.xmda003 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda003',g_xmda_m.xmda003)
   LET g_xmda_m.xmda005 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda005',g_xmda_m.xmda005)
   LET g_xmda_m.xmda006 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda006',g_xmda_m.xmda006)
   LET g_xmda_m.xmda007 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda007',g_xmda_m.xmda007)
   LET g_xmda_m.xmda008 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda008',g_xmda_m.xmda008)
   LET g_xmda_m.xmda033 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda033',g_xmda_m.xmda033)
   LET g_xmda_m.xmda027 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda027',g_xmda_m.xmda027)
   LET g_xmda_m.xmda009 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda009',g_xmda_m.xmda009)
   LET g_xmda_m.xmda010 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda010',g_xmda_m.xmda010)
   LET g_xmda_m.xmda011 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda011',g_xmda_m.xmda011)
   LET g_xmda_m.xmda012 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda012',g_xmda_m.xmda012)
   LET g_xmda_m.xmda013 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda013',g_xmda_m.xmda013)
   LET g_xmda_m.xmda035 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda035',g_xmda_m.xmda035)
   LET g_xmda_m.xmda015 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda015',g_xmda_m.xmda015)
   LET g_xmda_m.xmda016 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda016',g_xmda_m.xmda016)
   LET g_xmda_m.xmda017 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda017',g_xmda_m.xmda017)
   LET g_xmda_m.xmda018 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda018',g_xmda_m.xmda018)
   LET g_xmda_m.xmda019 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda019',g_xmda_m.xmda019)
   LET g_xmda_m.xmda023 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda023',g_xmda_m.xmda023)
   LET g_xmda_m.xmda032 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda032',g_xmda_m.xmda032)
   LET g_xmda_m.xmda043 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda043',g_xmda_m.xmda043)
   LET g_xmda_m.xmda021 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda021',g_xmda_m.xmda021)
   LET g_xmda_m.xmda022 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda022',g_xmda_m.xmda022)
   LET g_xmda_m.xmda034 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda034',g_xmda_m.xmda034)
   LET g_xmda_m.xmda024 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda024',g_xmda_m.xmda024)
   LET g_xmda_m.xmda030 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda030',g_xmda_m.xmda030)
   LET g_xmda_m.xmda031 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda031',g_xmda_m.xmda031)
   LET g_xmda_m.xmda025 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda025',g_xmda_m.xmda025)
   LET g_xmda_m.xmda026 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda026',g_xmda_m.xmda026)
   LET g_xmda_m.xmda020 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda020',g_xmda_m.xmda020)
   LET g_xmda_m.xmda036 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda036',g_xmda_m.xmda036)
   LET g_xmda_m.xmda202 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda202',g_xmda_m.xmda202)
   LET g_xmda_m.xmda200 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda200',g_xmda_m.xmda200)
   LET g_xmda_m.xmda201 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda201',g_xmda_m.xmda201)
   LET g_xmda_m.xmda203 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda203',g_xmda_m.xmda203)
   LET g_xmda_m.xmda204 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda204',g_xmda_m.xmda204)
   LET g_xmda_m.xmda205 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda205',g_xmda_m.xmda205)
   LET g_xmda_m.xmda071 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda071',g_xmda_m.xmda071)
   LET g_xmda_m.xmda206 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda206',g_xmda_m.xmda206)
   LET g_xmda_m.xmda207 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda207',g_xmda_m.xmda207)
   LET g_xmda_m.xmda048 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda048',g_xmda_m.xmda048)
   LET g_xmda_m.xmda049 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda049',g_xmda_m.xmda049)
   LET g_xmda_m.xmda039 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda039',g_xmda_m.xmda039)
   LET g_xmda_m.xmda045 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda045',g_xmda_m.xmda045)
   LET g_xmda_m.xmda046 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda046',g_xmda_m.xmda046)
   LET g_xmda_m.xmda047 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda047',g_xmda_m.xmda047)
   LET g_xmda_m.xmda028 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda028',g_xmda_m.xmda028)
   LET g_xmda_m.xmda041 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda041',g_xmda_m.xmda041)
   LET g_xmda_m.xmda042 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda042',g_xmda_m.xmda042)
   LET g_xmda_m.xmda043 = s_aooi200_get_doc_default(g_xmda_m.xmdasite,'1',l_slip,'xmda043',g_xmda_m.xmda043)
      
   DISPLAY g_xmda_m.xmdadocdt TO xmdadocdt
   DISPLAY g_xmda_m.xmda004 TO xmda004
   DISPLAY g_xmda_m.xmda002 TO xmda002
   DISPLAY g_xmda_m.xmda003 TO xmda003 
   DISPLAY g_xmda_m.xmda005 TO xmda005
   DISPLAY g_xmda_m.xmda006 TO xmda006
   DISPLAY g_xmda_m.xmda007 TO xmda007
   DISPLAY g_xmda_m.xmda008 TO xmda008
   DISPLAY g_xmda_m.xmda033 TO xmda033
   DISPLAY g_xmda_m.xmda027 TO xmda027
   DISPLAY g_xmda_m.xmda009 TO xmda009
   DISPLAY g_xmda_m.xmda010 TO xmda010
   DISPLAY g_xmda_m.xmda011 TO xmda011
   DISPLAY g_xmda_m.xmda012 TO xmda012
   DISPLAY g_xmda_m.xmda013 TO xmda013
   DISPLAY g_xmda_m.xmda035 TO xmda035
   DISPLAY g_xmda_m.xmda015 TO xmda015
   DISPLAY g_xmda_m.xmda016 TO xmda016
   DISPLAY g_xmda_m.xmda017 TO xmda017
   DISPLAY g_xmda_m.xmda018 TO xmda018
   DISPLAY g_xmda_m.xmda019 TO xmda019
   DISPLAY g_xmda_m.xmda023 TO xmda023
   DISPLAY g_xmda_m.xmda032 TO xmda032
   DISPLAY g_xmda_m.xmda043 TO xmda043
   DISPLAY g_xmda_m.xmda021 TO xmda021
   DISPLAY g_xmda_m.xmda022 TO xmda022
   DISPLAY g_xmda_m.xmda034 TO xmda034
   DISPLAY g_xmda_m.xmda024 TO xmda024
   DISPLAY g_xmda_m.xmda030 TO xmda030
   DISPLAY g_xmda_m.xmda031 TO xmda031
   DISPLAY g_xmda_m.xmda025 TO xmda025
   DISPLAY g_xmda_m.xmda026 TO xmda026
   DISPLAY g_xmda_m.xmda020 TO xmda020
   DISPLAY g_xmda_m.xmda036 TO xmda036
   DISPLAY g_xmda_m.xmda202 TO xmda202
   DISPLAY g_xmda_m.xmda200 TO xmda200
   DISPLAY g_xmda_m.xmda201 TO xmda201
   DISPLAY g_xmda_m.xmda203 TO xmda203
   DISPLAY g_xmda_m.xmda204 TO xmda204
   DISPLAY g_xmda_m.xmda205 TO xmda205
   DISPLAY g_xmda_m.xmda071 TO xmda071
   DISPLAY g_xmda_m.xmda206 TO xmda206
   DISPLAY g_xmda_m.xmda207 TO xmda207
   DISPLAY g_xmda_m.xmda048 TO xmda048
   DISPLAY g_xmda_m.xmda049 TO xmda049
   DISPLAY g_xmda_m.xmda039 TO xmda039
   DISPLAY g_xmda_m.xmda045 TO xmda045
   DISPLAY g_xmda_m.xmda046 TO xmda046
   DISPLAY g_xmda_m.xmda047 TO xmda047
   DISPLAY g_xmda_m.xmda028 TO xmda028
   DISPLAY g_xmda_m.xmda041 TO xmda041
   DISPLAY g_xmda_m.xmda042 TO xmda042
   DISPLAY g_xmda_m.xmda043 TO xmda043
   
   CALL s_aooi200_get_slip_desc(g_xmda_m.xmdadocno) RETURNING g_xmda_m.xmdadocno_desc 
   CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda004) RETURNING g_xmda_m.xmda004_desc
   CALL s_desc_get_person_desc(g_xmda_m.xmda002) RETURNING g_xmda_m.xmda002_desc
   CALL s_desc_get_department_desc(g_xmda_m.xmda003) RETURNING g_xmda_m.xmda003_desc
   CALL adbt500_xmda027_ref(g_xmda_m.xmda027) RETURNING g_xmda_m.xmda027_desc
   CALL s_desc_get_ooib002_desc(g_xmda_m.xmda009) RETURNING g_xmda_m.xmda009_desc
   CALL s_desc_get_acc_desc('238',g_xmda_m.xmda010) RETURNING g_xmda_m.xmda010_desc
   CALL s_desc_get_tax_desc1(g_xmda_m.xmdasite,g_xmda_m.xmda011) RETURNING g_xmda_m.xmda011_desc
   CALL s_desc_get_invoice_type_desc1(g_xmda_m.xmdasite,g_xmda_m.xmda035) RETURNING g_xmda_m.xmda035_desc
   CALL s_desc_get_currency_desc(g_xmda_m.xmda015) RETURNING g_xmda_m.xmda015_desc
   CALL adbt500_xmda017_ref(g_xmda_m.xmda017) RETURNING g_xmda_m.xmda017_desc
   CALL s_desc_ooid001_desc(g_xmda_m.xmda018) RETURNING g_xmda_m.xmda018_desc
   CALL adbt500_xmda023_ref(g_xmda_m.xmda023) RETURNING g_xmda_m.xmda023_desc
   CALL s_desc_get_acc_desc('297',g_xmda_m.xmda032) RETURNING g_xmda_m.xmda032_desc
   CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda021) RETURNING g_xmda_m.xmda021_desc
   CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda022) RETURNING g_xmda_m.xmda022_desc
   CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda034) RETURNING g_xmda_m.xmda034_desc
   CALL s_desc_get_acc_desc('295',g_xmda_m.xmda024) RETURNING g_xmda_m.xmda024_desc
   CALL s_desc_get_acc_desc('263',g_xmda_m.xmda020) RETURNING g_xmda_m.xmda020_desc
   CALL s_desc_get_department_desc(g_xmda_m.xmda202) RETURNING g_xmda_m.xmda202_desc
   CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda200) RETURNING g_xmda_m.xmda200_desc
   CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda201) RETURNING g_xmda_m.xmda201_desc
   CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda203) RETURNING g_xmda_m.xmda203_desc
   CALL adbt500_xmda204_ref()
   LET g_xmda_m.xmda206_desc = s_desc_get_dbad001_desc(g_xmda_m.xmda206)
   LET g_xmda_m.xmda207_desc = s_desc_get_dbab001_desc(g_xmda_m.xmda207)
   
   DISPLAY BY NAME g_xmda_m.xmdadocno_desc
   DISPLAY BY NAME g_xmda_m.xmda004_desc
   DISPLAY BY NAME g_xmda_m.xmda002_desc
   DISPLAY BY NAME g_xmda_m.xmda003_desc
   DISPLAY BY NAME g_xmda_m.xmda027_desc
   DISPLAY BY NAME g_xmda_m.xmda009_desc
   DISPLAY BY NAME g_xmda_m.xmda010_desc
   DISPLAY BY NAME g_xmda_m.xmda011_desc
   DISPLAY BY NAME g_xmda_m.xmda035_desc
   DISPLAY BY NAME g_xmda_m.xmda015_desc
   DISPLAY BY NAME g_xmda_m.xmda017_desc
   DISPLAY BY NAME g_xmda_m.xmda018_desc
   DISPLAY BY NAME g_xmda_m.xmda023_desc
   DISPLAY BY NAME g_xmda_m.xmda032_desc
   DISPLAY BY NAME g_xmda_m.xmda021_desc
   DISPLAY BY NAME g_xmda_m.xmda022_desc
   DISPLAY BY NAME g_xmda_m.xmda034_desc
   DISPLAY BY NAME g_xmda_m.xmda024_desc
   DISPLAY BY NAME g_xmda_m.xmda020_desc
   DISPLAY BY NAME g_xmda_m.xmda036_desc
   DISPLAY BY NAME g_xmda_m.xmda202_desc
   DISPLAY BY NAME g_xmda_m.xmda200_desc
   DISPLAY BY NAME g_xmda_m.xmda201_desc
   DISPLAY BY NAME g_xmda_m.xmda203_desc
   DISPLAY BY NAME g_xmda_m.xmda206_desc
   DISPLAY BY NAME g_xmda_m.xmda207_desc
END FUNCTION

PRIVATE FUNCTION adbt500_get_xmja022()
      IF g_xmdc4_d[l_ac].xmja008 <> 0 AND g_xmdc4_d[l_ac].xmja010 <> 0 AND g_xmdc4_d[l_ac].xmja018 <> 0 THEN
         LET g_xmdc4_d[l_ac].xmja022 = (g_xmdc4_d[l_ac].xmja008 - g_xmdc4_d[l_ac].xmja010) * g_xmdc4_d[l_ac].xmja018
      END IF
END FUNCTION

PRIVATE FUNCTION adbt500_gen_xmdf(p_type,p_xmjaseq,p_xmjaseq_t,p_xmjasite,p_xmja003,p_xmja004,p_xmja014,p_xmja018,p_xmja025,p_xmja030,p_xmja031,p_xmja032,p_xmja037,p_xmja038,p_xmja039,p_xmja040)
DEFINE p_type                LIKE type_t.num5
DEFINE p_xmjaseq             LIKE xmja_t.xmjaseq
DEFINE p_xmjaseq_t           LIKE xmja_t.xmjaseq
DEFINE p_xmjasite            LIKE xmja_t.xmjasite
DEFINE p_xmja003             LIKE xmja_t.xmja003
DEFINE p_xmja004             LIKE xmja_t.xmja004
DEFINE p_xmja014             LIKE xmja_t.xmja014
DEFINE p_xmja018             LIKE xmja_t.xmja018
DEFINE p_xmja025             LIKE xmja_t.xmja025
DEFINE p_xmja030             LIKE xmja_t.xmja030       
DEFINE p_xmja031             LIKE xmja_t.xmja031
DEFINE p_xmja032             LIKE xmja_t.xmja032
DEFINE p_xmja037             LIKE xmja_t.xmja037
DEFINE p_xmja038             LIKE xmja_t.xmja038
DEFINE p_xmja039             LIKE xmja_t.xmja039
DEFINE p_xmja040             LIKE xmja_t.xmja040

DEFINE r_success             LIKE type_t.num5

DEFINE l_cnt                 LIKE type_t.num5
DEFINE l_xmja014             LIKE xmja_t.xmja014
DEFINE l_xmja031             LIKE xmja_t.xmja031
DEFINE l_xmja032             LIKE xmja_t.xmja032
DEFINE l_xmdf200             LIKE xmdf_t.xmdf200
DEFINE l_xmdf201             LIKE xmdf_t.xmdf201
DEFINE l_xmdfunit            LIKE xmdf_t.xmdfunit
DEFINE l_org                 LIKE xmdf_t.xmdfunit   #lori522612  150122 add 

   LET r_success = TRUE
   IF cl_null(p_xmjaseq) THEN
      RETURN r_success
   END IF
   IF p_xmja030 = 'Y' THEN
      IF p_type = 2 AND p_xmjaseq <> p_xmjaseq_t THEN
         LET l_cnt = 0
         SELECT COUNT(*)
           INTO l_cnt
           FROM xmdf_t
          WHERE xmdfent = g_enterprise
            AND xmdfdocno = g_xmda_m.xmdadocno
            AND xmdfseq = p_xmjaseq_t
         IF l_cnt > 0 THEN
            UPDATE xmdf_t
               SET xmdfseq = p_xmjaseq
             WHERE xmdfent = g_enterprise
               AND xmdfdocno = g_xmda_m.xmdadocno
               AND xmdfseq = p_xmjaseq_t
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "xmdf_t"
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET r_success = FALSE
               RETURN r_success
            END IF 
         END IF
      END IF
   ELSE
      IF p_type = 1 THEN
         LET l_cnt = 0
         SELECT COUNT(*)
           INTO l_cnt
           FROM xmdf_t
          WHERE xmdfent = g_enterprise
            AND xmdfdocno = g_xmda_m.xmdadocno
            AND xmdfseq = p_xmjaseq
         IF l_cnt = 0 THEN
            IF NOT cl_null(g_xmda_m.xmdaunit) THEN
               LET l_xmdfunit = g_xmda_m.xmdaunit
            ELSE
               LET l_xmdfunit = p_xmjasite
            END IF
            LET l_xmdf200 = ''
            LET l_xmdf201 = ''
            IF NOT cl_null(g_xmda_m.xmda201) THEN
               SELECT dbag004,dbag005
                 INTO l_xmdf200,l_xmdf201
                 FROM dbag_t
                WHERE dbagent = g_enterprise
                  AND dbagsite = l_xmdfunit
                  AND dbag001 = '1'
                  AND dbag002 = g_xmda_m.xmda201
            #lori522612  150122 add ----------------------(S)
            ELSE
               LET l_org = ''
               CALL s_adbi260_inv_scope_def(l_xmdfunit,                          
                                            p_xmja003,g_xmda_m.xmda023,
                                            p_xmja040,p_xmja039,
                                            p_xmja038,p_xmja037)
                  RETURNING l_org,l_xmdf200            
            #lori522612  150122 add ----------------------(E)
            END IF
            IF cl_null(l_xmdf200) THEN
               LET l_xmdf200 = ' '
            END IF 
            IF cl_null(l_xmdf201) THEN
               LET l_xmdf201 = ''
            END IF 
            INSERT INTO xmdf_t(xmdfent, xmdfsite, xmdfunit, xmdfdocno,
                               xmdfseq, xmdfseq2, xmdf002,  xmdf003,
                               xmdf004, xmdf006,  xmdf007,  xmdf200,
                               xmdf201, xmdf202)
                        VALUES(g_enterprise, p_xmjasite, l_xmdfunit, g_xmda_m.xmdadocno,
                               p_xmjaseq,    1,          p_xmja014,  p_xmja031,
                               p_xmja032,    'N',        '1',        l_xmdf200,
                               l_xmdf201,    ' ')
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "xmdf_t"
               LET g_errparam.popup = FALSE
               CALL cl_err()
               LET r_success = FALSE
               RETURN r_success
            END IF
            
            IF p_xmja030 = 'Y' THEN   #160513-00024#1 20160513 add by beckxie
               CALL adbt500_03(g_xmda_m.xmdadocno, p_xmjaseq, p_xmja003,
                               p_xmja004,          p_xmja014, p_xmja030,
                               p_xmjasite,         p_xmja025)
                  RETURNING l_xmja031,l_xmja032,l_xmja014
            END IF   #160513-00024#1 20160513 add by beckxie   
            CALL adbt500_update_xmja014(l_xmja014)
            
            CALL s_adbt500_gen_xmdd(g_xmda_m.xmdadocno,p_xmjaseq)
               RETURNING r_success  
         END IF
      ELSE
         LET l_cnt = 0
         SELECT COUNT(*)
           INTO l_cnt
           FROM xmdf_t
          WHERE xmdfent = g_enterprise
            AND xmdfdocno = g_xmda_m.xmdadocno
            AND xmdfseq = p_xmjaseq_t
         IF l_cnt > 0 THEN
            UPDATE xmdf_t
               SET xmdfseq = p_xmjaseq,
                   xmdf002 = p_xmja018,
                   xmdf003 = p_xmja031,
                   xmdf004 = p_xmja032
             WHERE xmdfent = g_enterprise
               AND xmdfdocno = g_xmda_m.xmdadocno
               AND xmdfseq = p_xmjaseq_t
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "xmdf_t"
               LET g_errparam.popup = FALSE
               CALL cl_err()
               LET r_success = FALSE
               RETURN r_success
            END IF 
         END IF
      END IF
   END IF
   
   RETURN r_success
#160630-00010#1 20160630 mark by beckxie---E
END FUNCTION

PRIVATE FUNCTION adbt500_get_isaf011()
DEFINE l_isaf011       LIKE isaf_t.isaf011
   
   LET g_xmda_m.isaf011 = ''
   DECLARE adbt500_isaf_cl1 CURSOR FOR
    SELECT DISTINCT isaf011
      FROM isaf_t,isag_t
     WHERE isafent = isagent
       AND isafcomp = isagcomp
       AND isafdocno = isagdocno
       AND isafent = g_enterprise
       AND isaf001 = '1'
       AND isag001 = 'axmt500'
       AND isag002 = g_xmda_m.xmdadocno
       AND isaf011 IS NOT NULL
       ORDER BY isaf011
       
   FOREACH adbt500_isaf_cl1 INTO l_isaf011
      IF cl_null(g_xmda_m.isaf011) THEN
         LET g_xmda_m.isaf011 = l_isaf011
      ELSE
         LET g_xmda_m.isaf011 = g_xmda_m.isaf011,",",l_isaf011
      END IF
   END FOREACH
END FUNCTION

PRIVATE FUNCTION adbt500_head_default()
  DEFINE l_ooef016   LIKE ooef_t.ooef016
  DEFINE l_success   LIKE type_t.num5
  DEFINE l_slip      LIKE ooba_t.ooba001
  DEFINE l_para_data LIKE type_t.chr80
  DEFINE l_oodbl004  LIKE oodbl_t.oodbl004  #稅別名稱
  DEFINE l_oodb005   LIKE oodb_t.oodb005    #含稅否
  DEFINE l_oodb006   LIKE oodb_t.oodb006    #稅率 
  DEFINE l_oodb011   LIKE oodb_t.oodb011    #取得稅別類型1:正常稅率2:依料件設定 
  DEFINE l_errno     LIKE type_t.chr10
  DEFINE l_sql       STRING                 #161228-00033#1 Add By Ken 170105

      IF cl_null(g_xmda_m.xmda048) THEN
         LET g_xmda_m.xmda048 = '1'
      END IF
      IF cl_null(g_xmda_m.xmda049) THEN
         LET g_xmda_m.xmda049 = '1'
      END IF 

      #取得銷售分類
      LET g_pmab089 = g_xmda_m.xmda024
      IF cl_null(g_xmda_m.xmda023) THEN
         SELECT pmaa231 INTO g_xmda_m.xmda023 FROM pmaa_t WHERE pmaaent = g_enterprise AND pmaa001 = g_xmda_m.xmda004
      END IF
      #取稅率、單價含稅否
      IF NOT cl_null(g_xmda_m.xmda011) THEN
         CALL s_tax_chk(g_xmda_m.xmdasite,g_xmda_m.xmda011)
           RETURNING l_success,l_oodbl004,l_oodb005,l_oodb006,l_oodb011
         IF l_success THEN
            LET g_xmda_m.xmda012 = l_oodb006
            LET g_xmda_m.xmda013 = l_oodb005
            LET g_tax_app = l_oodb011
            DISPLAY BY NAME g_xmda_m.xmda012
            DISPLAY BY NAME g_xmda_m.xmda013
         END IF           
      END IF
      
      #取匯率
      IF NOT cl_null(g_xmda_m.xmda015) THEN
         CALL s_adb_get_exchange(g_xmda_m.xmdasite,g_xmda_m.xmda048,g_xmda_m.xmda015) RETURNING l_errno,g_xmda_m.xmda016
      END IF   
    
      CALL s_desc_get_ooib002_desc(g_xmda_m.xmda009) RETURNING g_xmda_m.xmda009_desc
      CALL s_desc_get_acc_desc('238',g_xmda_m.xmda010) RETURNING g_xmda_m.xmda010_desc
      CALL s_desc_get_tax_desc1(g_xmda_m.xmdasite,g_xmda_m.xmda011) RETURNING g_xmda_m.xmda011_desc
      CALL s_desc_get_currency_desc(g_xmda_m.xmda015) RETURNING g_xmda_m.xmda015_desc
      CALL adbt500_xmda017_ref(g_xmda_m.xmda017) RETURNING g_xmda_m.xmda017_desc
      CALL s_desc_get_acc_desc('263',g_xmda_m.xmda020) RETURNING g_xmda_m.xmda020_desc     
      CALL adbt500_xmda023_ref(g_xmda_m.xmda023) RETURNING g_xmda_m.xmda023_desc
      CALL s_desc_get_invoice_type_desc1(g_xmda_m.xmdasite,g_xmda_m.xmda035) RETURNING g_xmda_m.xmda035_desc
      CALL s_desc_get_acc_desc('295',g_xmda_m.xmda024) RETURNING g_xmda_m.xmda024_desc
      CALL s_desc_ooid001_desc(g_xmda_m.xmda018) RETURNING g_xmda_m.xmda018_desc

      DISPLAY BY NAME g_xmda_m.xmda009,g_xmda_m.xmda009_desc,g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda011,
                      g_xmda_m.xmda011_desc,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda015,g_xmda_m.xmda015_desc,
                      g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda017_desc,g_xmda_m.xmda020,g_xmda_m.xmda020_desc,
                      g_xmda_m.xmda023,g_xmda_m.xmda023_desc,g_xmda_m.xmda024,g_xmda_m.xmda024_desc,g_xmda_m.xmda035,
                      g_xmda_m.xmda035_desc,
                      g_xmda_m.xmda018,g_xmda_m.xmda018_desc,g_xmda_m.xmda035,g_xmda_m.xmda035_desc

      #收款客戶
      LET g_xmda_m.xmda021 = ''
      LET g_xmda_m.xmda021_desc = ''
      CALL s_adb_get_pmac002(g_xmda_m.xmda004,'1','') RETURNING g_xmda_m.xmda021
#      SELECT pmac002 INTO g_xmda_m.xmda021 FROM pmac_t 
#       WHERE pmacent = g_enterprise AND pmac001 = g_xmda_m.xmda004 
#         AND pmac003 = '1' AND pmacstus = 'Y' AND pmac004 = 'Y'
#      IF cl_null(g_xmda_m.xmda021) THEN
#         SELECT pmac002 INTO g_xmda_m.xmda021 FROM pmac_t 
#          WHERE pmacent = g_enterprise AND pmac001 = g_xmda_m.xmda004 
#            AND pmac003 = '1' AND pmacstus = 'Y' AND rownum = 1
#         IF cl_null(g_xmda_m.xmda021) THEN
#            LET g_xmda_m.xmda021 = g_xmda_m.xmda004
#         END IF
#      END IF
      CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda021) RETURNING g_xmda_m.xmda021_desc
      DISPLAY BY NAME g_xmda_m.xmda021,g_xmda_m.xmda021_desc 
      
      CALL adbt500_xmda026_desc()
      
      #收貨客戶
      LET g_xmda_m.xmda022 = ''
      LET g_xmda_m.xmda022_desc = ''
      CALL s_adb_get_pmac002(g_xmda_m.xmda004,'2','') RETURNING g_xmda_m.xmda022
#      SELECT pmac002 INTO g_xmda_m.xmda022 FROM pmac_t 
#       WHERE pmacent = g_enterprise AND pmac001 = g_xmda_m.xmda004 
#         AND pmac003 = '2' AND pmacstus = 'Y' AND pmac004 = 'Y'
#      IF cl_null(g_xmda_m.xmda022) THEN
#         SELECT pmac002 INTO g_xmda_m.xmda022 FROM pmac_t 
#          WHERE pmacent = g_enterprise AND pmac001 = g_xmda_m.xmda004 
#            AND pmac003 = '2' AND pmacstus = 'Y' AND rownum = 1
#         IF cl_null(g_xmda_m.xmda022) THEN
#            LET g_xmda_m.xmda022 = g_xmda_m.xmda004
#         END IF
#      END IF
      CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda022) RETURNING g_xmda_m.xmda022_desc
      DISPLAY BY NAME g_xmda_m.xmda022,g_xmda_m.xmda022_desc  
      CALL adbt500_xmda025_desc()
      
      #發票客戶
      LET g_xmda_m.xmda203 = ''
      LET g_xmda_m.xmda203_desc = ''
      CALL s_adb_get_pmac002(g_xmda_m.xmda004,'3','') RETURNING g_xmda_m.xmda203
#      SELECT pmac002 INTO g_xmda_m.xmda203 FROM pmac_t 
#       WHERE pmacent = g_enterprise AND pmac001 = g_xmda_m.xmda004 
#         AND pmac003 = '3' AND pmacstus = 'Y' AND pmac004 = 'Y'
#      IF cl_null(g_xmda_m.xmda203) THEN
#         SELECT pmac002 INTO g_xmda_m.xmda203 FROM pmac_t 
#          WHERE pmacent = g_enterprise AND pmac001 = g_xmda_m.xmda004 
#            AND pmac003 = '3' AND pmacstus = 'Y' AND rownum = 1
#         IF cl_null(g_xmda_m.xmda203) THEN
#            LET g_xmda_m.xmda203 = g_xmda_m.xmda004
#         END IF
#      END IF
      CALL s_desc_get_trading_partner_abbr_desc(g_xmda_m.xmda203) RETURNING g_xmda_m.xmda203_desc
      
      #抓取交易對象聯絡人明細檔的聯絡對像識別碼顯示在訂單單上的[C:客戶連絡人]，
      #若有設置多個聯絡人時，則取有勾選主要聯絡人的那一個
      LET g_xmda_m.xmda027 = ''
      LET g_xmda_m.xmda027_desc = ''
      SELECT pmaj002 INTO g_xmda_m.xmda027 FROM pmaj_t 
       WHERE pmajent = g_enterprise AND pmaj001 = g_xmda_m.xmda004 
         AND pmajstus = 'Y' AND pmaj004 = 'Y'
      IF cl_null(g_xmda_m.xmda022) THEN
         #161228-00033#1 Mark By Ken 170105(S)
         #SELECT pmaj002 INTO g_xmda_m.xmda027 FROM pmaj_t 
         # WHERE pmajent = g_enterprise AND pmaj001 = g_xmda_m.xmda004 
         #   AND pmajstus = 'Y' AND pmaj004 = 'Y' AND rownum = 1  
         #161228-00033#1 Mark By Ken 170105(E)
         #161228-00033#1 Add By Ken 170105(S)
         LET l_sql = " SELECT pmaj002 ", 
                     "   FROM pmaj_t ",
                     "  WHERE pmajent = ", g_enterprise , 
                     "    AND pmaj001 = '", g_xmda_m.xmda004 ,"' ",
                     "    AND pmajstus = 'Y' ",
                     "    AND pmaj004 = 'Y' "
         PREPARE adbt500_pmaj002_pre FROM l_sql
         DECLARE adbt500_pmaj002_cur SCROLL CURSOR FOR adbt500_pmaj002_pre
         OPEN adbt500_pmaj002_cur
         FETCH FIRST adbt500_pmaj002_cur INTO g_xmda_m.xmda027
         FREE adbt500_pmaj002_pre
         CLOSE adbt500_pmaj002_cur                      
         #161228-00033#1 Add By Ken 170105(E)
      END IF
      CALL adbt500_xmda027_ref(g_xmda_m.xmda027) RETURNING g_xmda_m.xmda027_desc
      DISPLAY BY NAME g_xmda_m.xmda027,g_xmda_m.xmda027_desc

      LET g_xmda_m_o.xmda048 = g_xmda_m.xmda048
      LET g_xmda_m_o.xmda049 = g_xmda_m.xmda049
      LET g_xmda_m_o.xmda023 = g_xmda_m.xmda023
      LET g_xmda_m_o.xmda012 = g_xmda_m.xmda012
      LET g_xmda_m_o.xmda013 = g_xmda_m.xmda013
      LET g_xmda_m_o.xmda016 = g_xmda_m.xmda016
      LET g_xmda_m_o.xmda021 = g_xmda_m.xmda021
      LET g_xmda_m_o.xmda022 = g_xmda_m.xmda022
      LET g_xmda_m_o.xmda203 = g_xmda_m.xmda203
      LET g_xmda_m_o.xmda027 = g_xmda_m.xmda027
END FUNCTION
#依據運輸方式所設置的運輸類型(ACC='263'對應的參考欄位16)檢核起目的地的合理性
PRIVATE FUNCTION adbt500_location_chk(p_location,p_oocq019)
   DEFINE p_location            LIKE type_t.chr10     #地點
   DEFINE l_n                   LIKE type_t.num5
   DEFINE l_stus                LIKE type_t.chr10
   DEFINE p_oocq019             LIKE oocq_t.oocq019

   LET g_errno = ''
   LET l_n = 0
   LET l_stus = ''

   CASE
      WHEN p_oocq019 ='1' OR   #1:陸運
           p_oocq019 ='4'      #4:其它    
         LET l_n=0
         SELECT COUNT(oock003) INTO l_n
           FROM oock_t
          WHERE oockent = g_enterprise
            AND oock003 = p_location
            AND oockstus = 'Y'

             #輸入資料不存在 縣市資料檔 中！
          IF l_n = 0 THEN LET g_errno = 'aoo-00015' RETURN END IF

      WHEN p_oocq019 ='2'      #2:海運
         SELECT oocqstus INTO l_stus
           FROM oocq_t
          WHERE oocqent = g_enterprise
            AND oocq001 = '262'
            AND oocq002 = p_location

         CASE
            WHEN SQLCA.sqlcode = 100
               #LET g_errno = 'axm-00032'  #160318-00005#6 mark
               #160318-00005#6 --s add
               LET g_errno = 'sub-01303' 
               LET g_errparam.replace[1] = 'apmi010'
               LET g_errparam.replace[2] = cl_get_progname('apmi010',g_lang,"2")
               LET g_errparam.exeprog = 'apmi010'
               #160318-00005#6 --e add
            WHEN l_stus <> 'Y'
               #LET g_errno = 'axm-00033'  #160318-00005#6 mark
               #160318-00005#6 --s add
               LET g_errno = 'sub-01302' 
               LET g_errparam.replace[1] = 'apmi010'
               LET g_errparam.replace[2] = cl_get_progname('apmi010',g_lang,"2")
               LET g_errparam.exeprog = 'apmi010'
               #160318-00005#6 --e add
            OTHERWISE
               LET g_errno = SQLCA.sqlcode USING '------'
         END CASE

      WHEN p_oocq019 ='3'      #3:空運                     
         SELECT oocqstus INTO l_stus
           FROM oocq_t
          WHERE oocqent = g_enterprise
            AND oocq001 = '276'
            AND oocq002 = p_location

         CASE
            WHEN SQLCA.sqlcode = 100
               #LET g_errno = 'axm-00086' #160318-00005#6 mark
               #160318-00005#6 --s add
               LET g_errno = 'sub-01303' 
               LET g_errparam.replace[1] = 'apmi014'
               LET g_errparam.replace[2] = cl_get_progname('apmi014',g_lang,"2")
               LET g_errparam.exeprog = 'apmi014'
               #160318-00005#6 --e add 
            WHEN l_stus <> 'Y'
               #LET g_errno = 'axm-00087' #160318-00005#6 mark
               #160318-00005#6 --s add
               LET g_errno = 'sub-01302' 
               LET g_errparam.replace[1] = 'apmi014'
               LET g_errparam.replace[2] = cl_get_progname('apmi014',g_lang,"2")
               LET g_errparam.exeprog = 'apmi014'
               #160318-00005#6 --e add               
            OTHERWISE
               LET g_errno = SQLCA.sqlcode USING '------'
         END CASE

   END CASE
   RETURN

END FUNCTION
#維護多期預付款單身
PRIVATE FUNCTION adbt500_open_xmdb()
DEFINE  l_cmd           LIKE type_t.chr1
DEFINE  l_ac_t          LIKE type_t.num5                #未取消的ARRAY CNT 
DEFINE  l_n             LIKE type_t.num5                #檢查重複用  
DEFINE  l_cnt           LIKE type_t.num5                #檢查重複用  
DEFINE  l_lock_sw       LIKE type_t.chr1                #單身鎖住否  
DEFINE  l_allow_insert  LIKE type_t.num5                #可新增否 
DEFINE  l_allow_delete  LIKE type_t.num5                #可刪除否  
DEFINE  l_count         LIKE type_t.num5
DEFINE  l_i             LIKE type_t.num5
DEFINE  l_insert        BOOLEAN
DEFINE  ls_return       STRING
DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
DEFINE  l_vars          DYNAMIC ARRAY OF STRING
DEFINE  l_fields        DYNAMIC ARRAY OF STRING
DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
DEFINE  l_xmdb005       LIKE xmdb_t.xmdb005
DEFINE  l_xmdb006       LIKE xmdb_t.xmdb006
DEFINE  l_sum           LIKE xmdb_t.xmdb005
DEFINE  l_ooef016       LIKE ooef_t.ooef016

   IF g_xmda_m.xmdadocno IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
   
   SELECT UNIQUE xmdasite,xmdadocno,xmda001,xmdadocdt,xmda002,
                 xmda004,xmda003,xmdastus,xmda005,xmda006,
                 xmda007,xmda008,xmda033,xmda027,xmda009,
                 xmda010,xmda011,xmda012,xmda013,xmda035,
                 xmda015,xmda016,xmda017,xmda018,xmda019,
                 xmda023,xmda032,xmda071,xmda021,xmda022,
                 xmda034,xmda024,xmda030,xmda031,
                 xmda045,xmda046,xmda047,xmda028,xmda041,
                 xmda042,xmda043,xmda025,xmda026,xmda020,
                 xmda048,xmda049,xmda036,xmdaownid,xmdaowndp,
                 xmdacrtid,xmdacrtdp,xmdacrtdt,xmdamodid,xmdamoddt,
                 xmdacnfid,xmdacnfdt
                 
     INTO g_xmda_m.xmdasite,g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocdt,g_xmda_m.xmda002,
          g_xmda_m.xmda004,g_xmda_m.xmda003,g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,
          g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027,g_xmda_m.xmda009,
          g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035,
          g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,
          g_xmda_m.xmda023,g_xmda_m.xmda032,g_xmda_m.xmda071,g_xmda_m.xmda021,g_xmda_m.xmda022,
          g_xmda_m.xmda034,g_xmda_m.xmda024,g_xmda_m.xmda030,g_xmda_m.xmda031,
          g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda041,
          g_xmda_m.xmda042,g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda026,g_xmda_m.xmda020,
          g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda036,g_xmda_m.xmdaownid,g_xmda_m.xmdaowndp,
          g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamoddt,
          g_xmda_m.xmdacnfid,g_xmda_m.xmdacnfdt
          
     FROM xmda_t
    WHERE xmdaent = g_enterprise AND xmdadocno = g_xmda_m.xmdadocno
 
   LET l_ooef016 = ''
   SELECT ooef016 INTO l_ooef016
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_xmda_m.xmdasite
   
   ERROR ""
  
   CALL s_transaction_begin()
           
   OPEN adbt500_cl2 USING g_enterprise,g_xmda_m.xmdadocno

   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN adbt500_cl2:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE adbt500_cl2
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #鎖住將被更改或取消的資料
    FETCH adbt500_cl2 INTO g_xmda_m.xmdasite,g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocno_desc, 
       g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda004_desc,g_xmda_m.xmda002,g_xmda_m.xmda002_desc, 
       g_xmda_m.xmda003,g_xmda_m.xmda003_desc,g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007, 
       g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027,g_xmda_m.xmda027_desc,g_xmda_m.xmda009,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda011,g_xmda_m.xmda011_desc,g_xmda_m.xmda012, 
       g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc,g_xmda_m.xmda015,g_xmda_m.xmda015_desc, 
       g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda017_desc,g_xmda_m.xmda018,g_xmda_m.xmda018_desc, 
       g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda023_desc,g_xmda_m.xmda032,g_xmda_m.xmda032_desc, 
       g_xmda_m.xmda071,g_xmda_m.xmda021,g_xmda_m.xmda021_desc,g_xmda_m.xmda022,g_xmda_m.xmda022_desc, 
       g_xmda_m.xmda034,g_xmda_m.xmda034_desc,g_xmda_m.xmda024,g_xmda_m.xmda024_desc,
       g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028, 
       g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda025_desc,g_xmda_m.oofb017, 
       g_xmda_m.xmda026,g_xmda_m.xmda026_desc,g_xmda_m.oofb017_1,g_xmda_m.xmda020,g_xmda_m.xmda020_desc, 
       g_xmda_m.xmda036,g_xmda_m.xmda036_desc,g_xmda_m.xmda048,g_xmda_m.xmda049,
       g_xmda_m.xmdaownid,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp, 
       g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdp_desc, 
       g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid, 
       g_xmda_m.xmdacnfid_desc,g_xmda_m.xmdacnfdt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_xmda_m.xmdadocno
      LET g_errparam.popup = FALSE
      CALL cl_err()

      CLOSE adbt500_cl2
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   CALL adbt500_show()  
   LET g_forupd_sql = "SELECT xmdbsite,xmdb001,xmdb002,xmdb003,xmdb004,",
                      "       xmdb005,xmdb006,xmdb007,xmdb008,xmdb009,",
                      "       xmdb016,xmdb017,xmdb200",
                      "  FROM xmdb_t",
                      " WHERE xmdbent=? AND xmdbdocno=? AND xmdb001=? FOR UPDATE"

   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE adbt500_bcl15 CURSOR FROM g_forupd_sql

   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'

   DISPLAY BY NAME g_xmda_m.xmdasite,g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocdt,g_xmda_m.xmda002,
                   g_xmda_m.xmda004,g_xmda_m.xmda003,g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,
                   g_xmda_m.xmda007,g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027,g_xmda_m.xmda009,
                   g_xmda_m.xmda010,g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035,
                   g_xmda_m.xmda015,g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,
                   g_xmda_m.xmda023,g_xmda_m.xmda032,g_xmda_m.xmda043,g_xmda_m.xmda021,g_xmda_m.xmda022,
                   g_xmda_m.xmda034,g_xmda_m.xmda024,g_xmda_m.xmda030,g_xmda_m.xmda031,
                   g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028,g_xmda_m.xmda025,
                   g_xmda_m.xmda026,g_xmda_m.xmda020,g_xmda_m.xmda036
                  
   
   LET g_errshow = 1
   
   LET g_flag1 = TRUE
   CALL adbt500_set_entry('u')
   CALL adbt500_set_no_entry('u')
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      INPUT BY NAME g_xmda_m.xmda039 ATTRIBUTE(WITHOUT DEFAULTS)         
                        
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            UPDATE xmda_t SET xmda039 = g_xmda_m.xmda039 
              WHERE xmdaent = g_enterprise AND xmdadocno = g_xmda_m.xmdadocno
            CASE
               WHEN SQLCA.sqlerrd[3] = 0                   #更新不到的處理
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "std-00009"
                  LET g_errparam.extend = "xmda_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
               WHEN SQLCA.sqlcode                          #其他錯誤
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "xmda_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
               OTHERWISE
                  CALL s_transaction_end('Y','0')
            END CASE              
            
      END INPUT
      
      INPUT ARRAY g_xmdc5_d FROM s_detail5.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert,
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 

         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xmdc5_d.getLength()+1) 
              LET g_insert = 'N' 
            END IF 

            CALL adbt500_b_fill()
            LET g_rec_b = g_xmdc5_d.getLength()
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xmdc5_d[l_ac].* TO NULL 
            LET g_xmdc5_d[l_ac].xmdbsite = g_xmda_m.xmdasite
            LET g_xmdc5_d[l_ac].xmdb016 = "2"
            LET g_xmdc5_d[l_ac].xmdb017 = "1"
            LET g_xmdc5_d[l_ac].xmdb200 = "0"
            
            SELECT MAX(xmdb001)+1 INTO g_xmdc5_d[l_ac].xmdb001 FROM xmdb_t
              WHERE xmdbent = g_enterprise AND xmdbdocno = g_xmda_m.xmdadocno
            IF cl_null(g_xmdc5_d[l_ac].xmdb001) OR g_xmdc5_d[l_ac].xmdb001 = 0 THEN
               LET g_xmdc5_d[l_ac].xmdb001 = 1
            END IF
            
            LET g_xmdc5_d_t.* = g_xmdc5_d[l_ac].*     #新輸入資料
            LET g_xmdc5_d_o.* = g_xmdc5_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adbt500_set_entry_b(l_cmd)

            CALL adbt500_set_no_entry_b(l_cmd)
            
         BEFORE ROW     
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
           
            LET g_rec_b = g_xmdc5_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xmdc5_d[l_ac].xmdb001 IS NOT NULL
            THEN 
               LET l_cmd = 'u'
               LET g_xmdc5_d_t.* = g_xmdc5_d[l_ac].*  #BACKUP
               LET g_xmdc5_d_o.* = g_xmdc5_d[l_ac].*  #BACKUP
               CALL adbt500_set_entry_b(l_cmd)
               CALL adbt500_set_no_entry_b(l_cmd)
               
               OPEN adbt500_bcl15 USING g_enterprise,g_xmda_m.xmdadocno,g_xmdc5_d[l_ac].xmdb001
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "adbt500_bcl15"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET l_lock_sw = 'Y'
               ELSE
                  FETCH adbt500_bcl15 INTO g_xmdc5_d[l_ac].xmdbsite,g_xmdc5_d[l_ac].xmdb001,g_xmdc5_d[l_ac].xmdb002,
                                           g_xmdc5_d[l_ac].xmdb003,g_xmdc5_d[l_ac].xmdb004,g_xmdc5_d[l_ac].xmdb005,
                                           g_xmdc5_d[l_ac].xmdb006,g_xmdc5_d[l_ac].xmdb007,g_xmdc5_d[l_ac].xmdb008,
                                           g_xmdc5_d[l_ac].xmdb009,g_xmdc5_d[l_ac].xmdb016,g_xmdc5_d[l_ac].xmdb017
                                           
                   IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = 'Y'
                  END IF
                  
                  LET g_bfill = 'N'
                  CALL adbt500_show()
                  LET g_bfill = 'Y'
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_xmdc5_d.deleteElement(l_ac)
               NEXT FIELD xmdb001
            END IF
         
            IF NOT cl_null(g_xmdc5_d[l_ac].xmdb001) THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = 'Y' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF
               
               #已經有應收帳款與已收金額的資料不可以進行刪除
               IF NOT cl_null(g_xmdc5_d[l_ac].xmdb007) OR g_xmdc5_d[l_ac].xmdb008 > 0 OR
                  g_xmdc5_d[l_ac].xmdb009 > 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axm-00396'
                  LET g_errparam.extend = g_xmdc5_d[l_ac].xmdb001
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE                     
               END IF   
               
               DELETE FROM xmdb_t
                WHERE xmdbent = g_enterprise AND xmdbdocno = g_xmda_m.xmdadocno AND
                      xmdb001 = g_xmdc5_d_t.xmdb001

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "pmdn_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1

                  CALL s_transaction_end('Y','0')
               END IF 
               LET l_count = g_xmdc_d.getLength()
            END IF 

         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CLOSE adbt500_bcl15
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xmdb_t 
             WHERE xmdbent = g_enterprise AND xmdbdocno = g_xmda_m.xmdadocno
               AND xmdb001 = g_xmdc5_d[l_ac].xmdb001
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               INSERT INTO xmdb_t
                  (xmdbent,xmdbdocno,xmdb001,
                   xmdbsite,xmdb002,xmdb003,
                   xmdb004,xmdb005,xmdb006,
                   xmdb007,xmdb008,xmdb009,
                   xmdb016,xmdb017,xmdb200) 
                 VALUES(g_enterprise,g_xmda_m.xmdadocno,g_xmdc5_d[l_ac].xmdb001,
                   g_xmdc5_d[l_ac].xmdbsite,g_xmdc5_d[l_ac].xmdb002,g_xmdc5_d[l_ac].xmdb003, 
                   g_xmdc5_d[l_ac].xmdb004,g_xmdc5_d[l_ac].xmdb005,g_xmdc5_d[l_ac].xmdb006, 
                   g_xmdc5_d[l_ac].xmdb007,g_xmdc5_d[l_ac].xmdb008,g_xmdc5_d[l_ac].xmdb009,
                   g_xmdc5_d[l_ac].xmdb016,g_xmdc5_d[l_ac].xmdb017,g_xmdc5_d[l_ac].xmdb200) 

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "xmdb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
  
                  CALL s_transaction_end('N','0')                    
                  CANCEL INSERT
               END IF
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT xmdb_t'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_xmdc_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
            
            CALL s_transaction_end('Y','0')
            ERROR 'INSERT O.K'
            LET g_rec_b = g_rec_b + 1
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_xmdc5_d[l_ac].* = g_xmdc5_d_t.*
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_xmdc5_d[l_ac].* = g_xmdc5_d_t.*
            ELSE
               UPDATE xmdb_t SET (xmdbdocno,xmdbsite,xmdb001,
                                  xmdb002,xmdb003,xmdb004,
                                  xmdb005,xmdb006,xmdb007,
                                  xmdb008,xmdb009,xmdb016,
                                  xmdb017,xmdb200) 
                               = (g_xmda_m.xmdadocno,g_xmdc5_d[l_ac].xmdbsite,g_xmdc5_d[l_ac].xmdb001,
                                  g_xmdc5_d[l_ac].xmdb002,g_xmdc5_d[l_ac].xmdb003,g_xmdc5_d[l_ac].xmdb004,
                                  g_xmdc5_d[l_ac].xmdb005,g_xmdc5_d[l_ac].xmdb006,g_xmdc5_d[l_ac].xmdb007,
                                  g_xmdc5_d[l_ac].xmdb008,g_xmdc5_d[l_ac].xmdb009,g_xmdc5_d[l_ac].xmdb016,
                                  g_xmdc5_d[l_ac].xmdb017,g_xmdc5_d[l_ac].xmdb200) #自訂欄位頁簽
                WHERE xmdbent = g_enterprise AND xmdbdocno = g_xmda_m.xmdadocno
                  AND xmdb001 = g_xmdc5_d_t.xmdb001 #項次                   
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "xmdb_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                     LET g_xmdc5_d[l_ac].* = g_xmdc5_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "xmdb_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
  
                     CALL s_transaction_end('N','0')
                     LET g_xmdc5_d[l_ac].* = g_xmdc5_d_t.*
                  OTHERWISE
                      INITIALIZE gs_keys TO NULL 
                      LET gs_keys[1] = g_xmda_m.xmdadocno
                      LET gs_keys_bak[1] = g_xmdadocno_t
                      LET gs_keys[2] = g_xmdc5_d[g_detail_idx].xmdb001
                      LET gs_keys_bak[2] = g_xmdc5_d_t.xmdb001
                      CALL adbt500_update_b('xmdb_t',gs_keys,gs_keys_bak,"'5'")
                     #資料多語言用-增/改
                     
               END CASE
            END IF
         
         #---------------------<  Detail: page5  >---------------------
         #----<<xmdb001>>----
         #此段落由子樣板a02產生
         AFTER FIELD xmdb001
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmdc5_d[l_ac].xmdb001,"0.000","0","","","azz-00079",1) THEN
               LET g_xmdc5_d[l_ac].xmdb001 = g_xmdc5_d_t.xmdb001
               NEXT FIELD xmdb001
            END IF

            #此段落由子樣板a05產生
            IF  g_xmda_m.xmdadocno IS NOT NULL AND g_xmdc5_d[l_ac].xmdb001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xmda_m.xmdadocno != g_xmdadocno_t OR g_xmdc5_d[l_ac].xmdb001 != g_xmdc5_d_t.xmdb001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xmdb_t WHERE "||"xmdbent = '" ||g_enterprise|| "' AND "||"xmdbdocno = '"||g_xmda_m.xmdadocno ||"' AND "|| "xmdb001 = '"||g_xmdc5_d[l_ac].xmdb001 ||"'",'std-00004',0) THEN 
                     LET g_xmdc5_d[l_ac].xmdb001 = g_xmdc5_d_t.xmdb001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

         #----<<xmdb002>>----
         #此段落由子樣板a02產生
         AFTER FIELD xmdb002
            IF NOT cl_null(g_xmdc5_d[l_ac].xmdb002) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_xmdc5_d[l_ac].xmdb002 != g_xmdc5_d_t.xmdb002 OR g_xmdc5_d_t.xmdb002 IS NULL )) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_xmda_m.xmda004
                  LET g_chkparam.arg2 = g_xmdc5_d[l_ac].xmdb002
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_pmad002_2") THEN
                     #檢查成功時後續處理
                  
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xmdc5_d[l_ac].xmdb002 = g_xmdc5_d_t.xmdb002
                     CALL s_desc_get_ooib002_desc(g_xmdc5_d[l_ac].xmdb002) RETURNING g_xmdc5_d[l_ac].xmdb002_desc
                     DISPLAY BY NAME g_xmdc5_d[l_ac].xmdb002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            CALL s_desc_get_ooib002_desc(g_xmdc5_d[l_ac].xmdb002) RETURNING g_xmdc5_d[l_ac].xmdb002_desc
            DISPLAY BY NAME g_xmdc5_d[l_ac].xmdb002_desc
            
            
         AFTER FIELD xmdb003
            IF g_xmdc5_d[l_ac].xmdb003 > g_xmdc5_d[l_ac].xmdb004 THEN
               LET g_xmdc5_d[l_ac].xmdb003 = g_xmdc5_d_t.xmdb003
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'adb-00080'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               NEXT FIELD xmdb003
            END IF  
            
         AFTER FIELD xmdb004
            IF g_xmdc5_d[l_ac].xmdb004 < g_xmdc5_d[l_ac].xmdb003 THEN
               LET g_xmdc5_d[l_ac].xmdb004 = g_xmdc5_d_t.xmdb004
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'adb-00080'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               NEXT FIELD xmdb004
            END IF  

         #----<<xmdb005>>----
         #此段落由子樣板a02產生
         AFTER FIELD xmdb005
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmdc5_d[l_ac].xmdb005,"0.000","0","","","azz-00079",1) THEN
               LET g_xmdc5_d[l_ac].xmdb005 = g_xmdc5_d_t.xmdb005
               NEXT FIELD xmdb005
            END IF
            IF NOT cl_null(g_xmdc5_d[l_ac].xmdb005) THEN
               IF g_xmdc5_d[l_ac].xmdb005 != g_xmdc5_d_o.xmdb005 OR g_xmdc5_d_o.xmdb005 IS NULL THEN 
                  LET l_sum = 0
                  FOR l_i = 1 TO g_xmdc5_d.getLength()
                     LET l_sum = l_sum + g_xmdc5_d[l_i].xmdb005
                  END FOR
                  IF l_sum > g_xmda_m.xmda041 THEN
                     LET g_xmdc5_d[l_ac].xmdb005 = g_xmdc5_d_t.xmdb005
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'adb-00086'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = FALSE
                     CALL cl_err()
                  
                     NEXT FIELD xmdb005
                  END IF

                  #稅率依單頭需自動推算未稅金額
                  CALL s_tax_get_xrcd105(g_xmdc5_d[l_ac].xmdb005,g_xmda_m.xmda012,g_xmda_m.xmda015)
                    RETURNING g_xmdc5_d[l_ac].xmdb006
                  DISPLAY BY NAME g_xmdc5_d[l_ac].xmdb006  
                  
                  LET g_xmdc5_d[l_ac].xmdb200 = s_curr_round(g_xmda_m.xmdasite,l_ooef016,g_xmdc5_d[l_ac].xmdb006 * g_xmda_m.xmda016,2)
                  LET g_xmdc5_d_o.xmdb005 = g_xmdc5_d[l_ac].xmdb005
                  LET g_xmdc5_d_o.xmdb006 = g_xmdc5_d[l_ac].xmdb006
               END IF
            END IF

         #----<<xmdb006>>----
         #此段落由子樣板a02產生
         AFTER FIELD xmdb006
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_xmdc5_d[l_ac].xmdb006,"0.000","0","","","azz-00079",1) THEN
               LET g_xmdc5_d[l_ac].xmdb006 = g_xmdc5_d_t.xmdb006
               NEXT FIELD xmdb006
            END IF

            IF NOT cl_null(g_xmdc5_d[l_ac].xmdb006) THEN
               IF g_xmdc5_d[l_ac].xmdb006 != g_xmdc5_d_o.xmdb006 OR g_xmdc5_d_o.xmdb006 IS NULL THEN  
                   LET l_sum = 0
                   FOR l_i = 1 TO g_xmdc5_d.getLength()
                      LET l_sum = l_sum + g_xmdc5_d[l_i].xmdb006
                   END FOR
                   IF l_sum > g_xmda_m.xmda042 THEN
                      LET g_xmdc5_d[l_ac].xmdb006 = g_xmdc5_d_t.xmdb006
                      INITIALIZE g_errparam TO NULL
                      LET g_errparam.code = 'adb-00087'
                      LET g_errparam.extend = ''
                      LET g_errparam.popup = FALSE
                      CALL cl_err()
                   
                      NEXT FIELD xmdb006
                   END IF
                   #稅率依單頭需含稅金額自動推算未稅金額
                   CALL s_tax_get_xrcd103(g_xmdc5_d[l_ac].xmdb006,g_xmda_m.xmda012,g_xmda_m.xmda015)
                     RETURNING g_xmdc5_d[l_ac].xmdb005
                   DISPLAY BY NAME g_xmdc5_d[l_ac].xmdb005  
                   
                   LET g_xmdc5_d[l_ac].xmdb200 = s_curr_round(g_xmda_m.xmdasite,l_ooef016,g_xmdc5_d[l_ac].xmdb006 * g_xmda_m.xmda016,2)
                   LET g_xmdc5_d_o.xmdb005 = g_xmdc5_d[l_ac].xmdb005
                   LET g_xmdc5_d_o.xmdb006 = g_xmdc5_d[l_ac].xmdb006
               END IF
            END IF
         #---------------------<  Detail: page5  >---------------------
         #----<<xmdb002>>----
         #Ctrlp:input.c.page5.xmdb002
         ON ACTION controlp INFIELD xmdb002
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xmdc5_d[l_ac].xmdb002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_xmda_m.xmda004 #

            CALL q_pmad002_3()                                #呼叫開窗

            LET g_xmdc5_d[l_ac].xmdb002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xmdc5_d[l_ac].xmdb002 TO xmdb002              #顯示到畫面上
            CALL s_desc_get_ooib002_desc(g_xmdc5_d[l_ac].xmdb002) RETURNING g_xmdc5_d[l_ac].xmdb002_desc
            DISPLAY BY NAME g_xmdc5_d[l_ac].xmdb002_desc

            NEXT FIELD xmdb002                          #返回原欄位

 
         AFTER ROW
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac

            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_xmdc5_d[l_ac].* = g_xmdc5_d_t.*
               END IF
               CLOSE adbt500_bcl15
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #多帳期預付款金額加總不可超過整張訂購單總訂購金額(含未稅金額均不能超過)
            LET l_xmdb005 = 0
            LET l_xmdb006 = 0
            SELECT SUM(xmdb005),SUM(xmdb006) 
              INTO l_xmdb005,l_xmdb006 FROM xmdb_t 
               WHERE xmdbent = g_enterprise AND xmdbdocno = g_xmda_m.xmdadocno

            IF l_xmdb005 > g_xmda_m.xmda041 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'apm-00263'
               LET g_errparam.extend = g_xmda_m.xmdadocno
               LET g_errparam.popup = TRUE
               CALL cl_err()

               NEXT FIELD xmdb005
            END IF
            IF l_xmdb006 > g_xmda_m.xmda042 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'apm-00264'
               LET g_errparam.extend = g_xmda_m.xmdadocno
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_xmdc5_d[l_ac].xmdb006 = g_xmdc5_d_t.xmdb006
               NEXT FIELD xmdb006
            END IF
            
            #其他table進行unlock
            CLOSE adbt500_bcl15
            CALL s_transaction_end('Y','0')  
            
         AFTER INPUT
            #多帳期預付款金額加總不可超過整張訂購單總訂金額(含未稅金額均不能超過)
            LET l_xmdb005 = 0
            LET l_xmdb006 = 0
            SELECT SUM(xmdb005),SUM(xmdb006) 
              INTO l_xmdb005,l_xmdb006 FROM xmdb_t 
             WHERE xmdbent = g_enterprise AND xmdbdocno = g_xmda_m.xmdadocno
            IF l_xmdb005 > g_xmda_m.xmda041 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'apm-00263'
               LET g_errparam.extend = g_xmda_m.xmdadocno
               LET g_errparam.popup = TRUE
               CALL cl_err()

               NEXT FIELD xmdb005
            END IF
            IF l_xmdb006 > g_xmda_m.xmda042 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'apm-00264'
               LET g_errparam.extend = g_xmda_m.xmdadocno
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_xmdc5_d[l_ac].xmdb006 = g_xmdc5_d_t.xmdb006
               NEXT FIELD xmdb006
            END IF
 
      END INPUT
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG

   CLOSE adbt500_cl2
   LET g_flag1 = FALSE
   
END FUNCTION
#單身金額計算
PRIVATE FUNCTION adbt500_regen_amounts()
   DEFINE l_xrcd103       LIKE xrcd_t.xrcd103,
          l_xrcd104       LIKE xrcd_t.xrcd104,
          l_xrcd105       LIKE xrcd_t.xrcd105,
          l_xrcd113       LIKE xrcd_t.xrcd113,
          l_xrcd114       LIKE xrcd_t.xrcd114,
          l_xrcd115       LIKE xrcd_t.xrcd115,
          l_xrcd123       LIKE xrcd_t.xrcd113,
          l_xrcd124       LIKE xrcd_t.xrcd114,
          l_xrcd125       LIKE xrcd_t.xrcd115,
          l_xrcd133       LIKE xrcd_t.xrcd113,
          l_xrcd134       LIKE xrcd_t.xrcd114,
          l_xrcd135       LIKE xrcd_t.xrcd115
          
      IF NOT cl_null(g_xmdc4_d[l_ac].xmja006) AND NOT cl_null(g_xmdc4_d[l_ac].xmja018) AND NOT cl_null(g_xmdc4_d[l_ac].xmja010) 
         AND g_xmdc4_d[l_ac].xmja018 <> 0 AND g_xmdc4_d[l_ac].xmja010 <> 0 THEN
         #160707-00009#1 20160707 modify by beckxie---S
         #將傳入參數g_xmdc4_d[l_ac].xmja018*g_xmdc4_d[l_ac].xmja010 改為 g_xmdc4_d[l_ac].xmja021
         #CALL s_tax_ins(g_xmda_m.xmdadocno,g_xmdc4_d[l_ac].xmjaseq,0,g_xmda_m.xmdasite,g_xmdc4_d[l_ac].xmja018*g_xmdc4_d[l_ac].xmja010,
         #CALL s_tax_ins(g_xmda_m.xmdadocno,g_xmdc4_d[l_ac].xmjaseq,0,g_xmda_m.xmdasite,g_xmdc4_d[l_ac].xmja021, #mark by geza 20161030
         CALL s_tax_ins(g_xmda_m.xmdadocno,g_xmdc4_d[l_ac].xmjaseq,0,g_xmda_m.xmdasite,g_xmdc4_d[l_ac].xmja018*g_xmdc4_d[l_ac].xmja010,  #add by geza 20161030
         #160707-00009#1 20160707 modify by beckxie---E
                        g_xmdc4_d[l_ac].xmja006,g_xmdc4_d[l_ac].xmja018,g_xmda_m.xmda015,g_xmda_m.xmda016,' ',' ',' ')
           RETURNING l_xrcd103,l_xrcd104, l_xrcd105,l_xrcd113,l_xrcd114,l_xrcd115,
                     l_xrcd123,l_xrcd124,l_xrcd125,l_xrcd133,l_xrcd134,l_xrcd135
         IF cl_null(l_xrcd103) THEN LET l_xrcd103 = 0 END IF
         IF cl_null(l_xrcd104) THEN LET l_xrcd104 = 0 END IF
         IF cl_null(l_xrcd105) THEN LET l_xrcd105 = 0 END IF           
         LET g_xmdc4_d[l_ac].xmja019 = l_xrcd103 
         LET g_xmdc4_d[l_ac].xmja020 = l_xrcd104 
         LET g_xmdc4_d[l_ac].xmja021 = l_xrcd105 
      END IF
      #CALL adbt500_get_xmja022()
END FUNCTION

PRIVATE FUNCTION adbt500_set_required_b()
   DEFINE l_imaf015     LIKE imaf_t.imaf015
   DEFINE l_imaa106     LIKE imaa_t.imaa106
   DEFINE l_pmaa002     LIKE pmaa_t.pmaa002
   
      IF l_ac > 0 THEN
          #參考單位
         SELECT imaf015
           INTO l_imaf015
           FROM imaf_t
          WHERE imafent = g_enterprise
            AND imafsite = 'ALL'  #g_xmda_m.xmdasite
            AND imaf001 = g_xmdc4_d[l_ac].xmja003
         IF NOT cl_null(l_imaf015) THEN
            CALL cl_set_comp_required("xmja015",TRUE)
         END IF
         
         SELECT imaa106
           INTO l_imaa106
           FROM imaa_t
          WHERE imaaent = g_enterprise
            AND imaa001 = g_xmdc4_d[l_ac].xmja003
         #計價單位
         IF NOT cl_null(l_imaa106) THEN
            CALL cl_set_comp_required("xmja017",TRUE)
         END IF
         IF g_xmdc4_d[l_ac].xmja030 = "N" THEN
            CALL cl_set_comp_required("xmja031,xmja032",TRUE) 
         END IF
      END IF
      SELECT pmaa002
        INTO l_pmaa002
        FROM pmaa_t
       WHERE pmaaent = g_enterprise
         AND pmaa001 = g_xmda_m.xmda004
      IF l_pmaa002 = '2' THEN
         CALL cl_set_comp_required("xmja024",TRUE)
      END IF 
END FUNCTION

PRIVATE FUNCTION adbt500_set_no_required_b()
      CALL cl_set_comp_required("xmja015,xmja016,xmja017,xmja018",FALSE)  
      CALL cl_set_comp_required("xmja024,xmja031,xmja032",FALSE)       
END FUNCTION

PRIVATE FUNCTION adbt500_xmja012_convert()
DEFINE l_rate       LIKE inaj_t.inaj014
DEFINE l_success    LIKE type_t.num5  
     
   IF cl_null(g_xmdc4_d[l_ac].xmja012) OR cl_null(g_xmdc4_d[l_ac].xmja011) THEN
      RETURN
   END IF 
   #銷售數量
   IF NOT cl_null(g_xmdc4_d[l_ac].xmja013) THEN  
      CALL s_aooi250_convert_qty(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja011,g_xmdc4_d[l_ac].xmja013,g_xmdc4_d[l_ac].xmja012)
         RETURNING l_success,g_xmdc4_d[l_ac].xmja014
   END IF
   #參考單位
   IF NOT cl_null(g_xmdc4_d[l_ac].xmja015) THEN  
      CALL s_aooi250_convert_qty(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja011,g_xmdc4_d[l_ac].xmja015,g_xmdc4_d[l_ac].xmja012)
         RETURNING l_success,g_xmdc4_d[l_ac].xmja016
   END IF
   #計價數量
   IF NOT cl_null(g_xmdc4_d[l_ac].xmja017) THEN  
      CALL s_aooi250_convert_qty(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja011,g_xmdc4_d[l_ac].xmja017,g_xmdc4_d[l_ac].xmja012)
         RETURNING l_success,g_xmdc4_d[l_ac].xmja018
      CALL adbt500_get_price()
   END IF
END FUNCTION

################################################################################
# Descriptions...: 取價
# Memo...........:
# Usage..........: CALL adbt500_get_price()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: r_success     處理狀況
#                :  
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt500_get_price()
   DEFINE l_success     LIKE type_t.num5
   
   IF NOT cl_null(g_xmdc4_d[l_ac].xmja003) AND NOT cl_null(g_xmdc4_d[l_ac].xmja017) AND 
      NOT cl_null(g_xmdc4_d[l_ac].xmja018) AND NOT cl_null(g_xmdc4_d[l_ac].xmja006) AND
      g_xmda_m.xmda007 <> '5' THEN   
      CALL s_get_price_adb('1',g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt,g_xmdc4_d[l_ac].xmjaseq,g_xmda_m.xmda004,g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja017,g_xmdc4_d[l_ac].xmja018,g_xmda_m.xmda015,g_xmdc4_d[l_ac].xmja006,'1')
         RETURNING l_success,g_xmdc4_d[l_ac].xmja008,g_xmdc4_d[l_ac].xmja009,g_xmdc4_d[l_ac].xmja010,g_xmdc4_d[l_ac].xmja022
   
      CALL adbt500_regen_amounts()
   END IF
END FUNCTION

PRIVATE FUNCTION adbt500_xmja_init()
  #DEFINE l_xmja      RECORD LIKE xmja_t.*   #161104-00002#1 161107 by lori mark
   #161104-00002#1 161107 by lori add---(S)
   DEFINE l_xmja      RECORD
             xmjaent     LIKE xmja_t.xmjaent   ,   #企業編號
             xmjasite    LIKE xmja_t.xmjasite  ,   #營運據點
             xmjaunit    LIKE xmja_t.xmjaunit  ,   #應用組織
             xmjadocno   LIKE xmja_t.xmjadocno ,   #單據編號
             xmjaseq     LIKE xmja_t.xmjaseq   ,   #項次
             xmja001     LIKE xmja_t.xmja001   ,   #交易類型
             xmja002     LIKE xmja_t.xmja002   ,   #商品條碼
             xmja003     LIKE xmja_t.xmja003   ,   #商品編號
             xmja004     LIKE xmja_t.xmja004   ,   #產品特徵
             xmja005     LIKE xmja_t.xmja005   ,   #促銷方案
             xmja006     LIKE xmja_t.xmja006   ,   #稅別編號
             xmja007     LIKE xmja_t.xmja007   ,   #稅率
             xmja008     LIKE xmja_t.xmja008   ,   #標準售價
             xmja009     LIKE xmja_t.xmja009   ,   #促銷價
             xmja010     LIKE xmja_t.xmja010   ,   #交易價
             xmja011     LIKE xmja_t.xmja011   ,   #包裝單位
             xmja012     LIKE xmja_t.xmja012   ,   #包裝數量
             xmja013     LIKE xmja_t.xmja013   ,   #銷售單位
             xmja014     LIKE xmja_t.xmja014   ,   #銷售數量
             xmja015     LIKE xmja_t.xmja015   ,   #參考單位
             xmja016     LIKE xmja_t.xmja016   ,   #參考數量
             xmja017     LIKE xmja_t.xmja017   ,   #計價單位
             xmja018     LIKE xmja_t.xmja018   ,   #計價數量
             xmja019     LIKE xmja_t.xmja019   ,   #未稅金額
             xmja020     LIKE xmja_t.xmja020   ,   #稅額
             xmja021     LIKE xmja_t.xmja021   ,   #含稅金額
             xmja022     LIKE xmja_t.xmja022   ,   #折價金額
             xmja024     LIKE xmja_t.xmja024   ,   #收貨網點
             xmja025     LIKE xmja_t.xmja025   ,   #送貨客戶
             xmja026     LIKE xmja_t.xmja026   ,   #送貨地址碼
             xmja027     LIKE xmja_t.xmja027   ,   #送貨站點	
             xmja028     LIKE xmja_t.xmja028   ,   #主合約編號
             xmja029     LIKE xmja_t.xmja029   ,   #協議編號
             xmja030     LIKE xmja_t.xmja030   ,   #多交期
             xmja031     LIKE xmja_t.xmja031   ,   #約定交貨日
             xmja032     LIKE xmja_t.xmja032   ,   #約定簽收日
             xmja033     LIKE xmja_t.xmja033   ,   #客戶料號
             xmja034     LIKE xmja_t.xmja034   ,   #備註
             xmja035     LIKE xmja_t.xmja035   ,   #來源促銷分配單號
             xmja036     LIKE xmja_t.xmja036   ,   #來源促銷分配項次
             xmja037     LIKE xmja_t.xmja037   ,   #地區編號
             xmja038     LIKE xmja_t.xmja038   ,   #縣市編號
             xmja039     LIKE xmja_t.xmja039   ,   #省區編號
             xmja040     LIKE xmja_t.xmja040   ,   #區域編號
             #161123-00042#1 Add By Ken 161128(S)
             xmjaud001   LIKE xmja_t.xmjaud001, #自定義欄位(文字)001
             xmjaud002   LIKE xmja_t.xmjaud002, #自定義欄位(文字)002
             xmjaud003   LIKE xmja_t.xmjaud003, #自定義欄位(文字)003
             xmjaud004   LIKE xmja_t.xmjaud004, #自定義欄位(文字)004
             xmjaud005   LIKE xmja_t.xmjaud005, #自定義欄位(文字)005
             xmjaud006   LIKE xmja_t.xmjaud006, #自定義欄位(文字)006
             xmjaud007   LIKE xmja_t.xmjaud007, #自定義欄位(文字)007
             xmjaud008   LIKE xmja_t.xmjaud008, #自定義欄位(文字)008
             xmjaud009   LIKE xmja_t.xmjaud009, #自定義欄位(文字)009
             xmjaud010   LIKE xmja_t.xmjaud010, #自定義欄位(文字)010
             xmjaud011   LIKE xmja_t.xmjaud011, #自定義欄位(數字)011
             xmjaud012   LIKE xmja_t.xmjaud012, #自定義欄位(數字)012
             xmjaud013   LIKE xmja_t.xmjaud013, #自定義欄位(數字)013
             xmjaud014   LIKE xmja_t.xmjaud014, #自定義欄位(數字)014
             xmjaud015   LIKE xmja_t.xmjaud015, #自定義欄位(數字)015
             xmjaud016   LIKE xmja_t.xmjaud016, #自定義欄位(數字)016
             xmjaud017   LIKE xmja_t.xmjaud017, #自定義欄位(數字)017
             xmjaud018   LIKE xmja_t.xmjaud018, #自定義欄位(數字)018
             xmjaud019   LIKE xmja_t.xmjaud019, #自定義欄位(數字)019
             xmjaud020   LIKE xmja_t.xmjaud020, #自定義欄位(數字)020
             xmjaud021   LIKE xmja_t.xmjaud021, #自定義欄位(日期時間)021
             xmjaud022   LIKE xmja_t.xmjaud022, #自定義欄位(日期時間)022
             xmjaud023   LIKE xmja_t.xmjaud023, #自定義欄位(日期時間)023
             xmjaud024   LIKE xmja_t.xmjaud024, #自定義欄位(日期時間)024
             xmjaud025   LIKE xmja_t.xmjaud025, #自定義欄位(日期時間)025
             xmjaud026   LIKE xmja_t.xmjaud026, #自定義欄位(日期時間)026
             xmjaud027   LIKE xmja_t.xmjaud027, #自定義欄位(日期時間)027
             xmjaud028   LIKE xmja_t.xmjaud028, #自定義欄位(日期時間)028
             xmjaud029   LIKE xmja_t.xmjaud029, #自定義欄位(日期時間)029
             xmjaud030   LIKE xmja_t.xmjaud030  #自定義欄位(日期時間)030
             #161123-00042#1 Add By Ken 161128(E)             
                      END RECORD
   #161104-00002#1 161107 by lori add---(E)
   
   DEFINE l_sql       STRING
   DEFINE l_success   LIKE type_t.num5

   #删除赠品
   DELETE FROM xmja_t WHERE xmjaent = g_enterprise AND xmjadocno = g_xmda_m.xmdadocno AND xmja001 = '2'
   #160907-00048#1 1600913 by sakura add(S)
   #刪除訂單明細、交期明細資料，重新依商品明細處理
   DELETE FROM xmdc_t WHERE xmdcent = g_enterprise AND xmdcdocno = g_xmda_m.xmdadocno
   DELETE FROM xmdd_t WHERE xmddent = g_enterprise AND xmdddocno = g_xmda_m.xmdadocno
   #160907-00048#1 1600913 by sakura add(E)   
   
   #重新取价
   #1.基础价
  #LET l_sql = "SELECT * FROM xmja_t WHERE xmjaent = '",g_enterprise,"' AND xmjadocno = '",g_xmda_m.xmdadocno,"' "   #161104-00002#1 161107 by lori mark
   #161104-00002#1 161107 by lori add---(S)
   LET l_sql = "SELECT xmjaent   ,xmjasite  ,xmjaunit  ,xmjadocno ,xmjaseq   , ",
               "       xmja001   ,xmja002   ,xmja003   ,xmja004   ,xmja005   , ",
               "       xmja006   ,xmja007   ,xmja008   ,xmja009   ,xmja010   , ",
               "       xmja011   ,xmja012   ,xmja013   ,xmja014   ,xmja015   , ",
               "       xmja016   ,xmja017   ,xmja018   ,xmja019   ,xmja020   , ",
               "       xmja021   ,xmja022   ,xmja024   ,xmja025   ,            ",
               "       xmja026   ,xmja027   ,xmja028   ,xmja029   ,xmja030   , ",
               "       xmja031   ,xmja032   ,xmja033   ,xmja034   ,xmja035   , ",
               "       xmja036   ,xmja037   ,xmja038   ,xmja039   ,xmja040   , ",   
               #161123-00042#1 Add By Ken 161128(S)
               "       xmjaud001,xmjaud002,xmjaud003,xmjaud004,xmjaud005, ",
               "       xmjaud006,xmjaud007,xmjaud008,xmjaud009,xmjaud010, ",
               "       xmjaud011,xmjaud012,xmjaud013,xmjaud014,xmjaud015, ",
               "       xmjaud016,xmjaud017,xmjaud018,xmjaud019,xmjaud020, ",
               "       xmjaud021,xmjaud022,xmjaud023,xmjaud024,xmjaud025, ",
               "       xmjaud026,xmjaud027,xmjaud028,xmjaud029,xmjaud030  ",
               #161123-00042#1 Add By Ken 161128(E)
               "  FROM xmja_t WHERE xmjaent = '",g_enterprise,"' AND xmjadocno = '",g_xmda_m.xmdadocno,"' "
   #161104-00002#1 161107 by lori add---(E)
   
   PREPARE adbt500_xmja_init_sel_xmja_pre FROM l_sql
   DECLARE adbt500_xmja_init_sel_xmja_cs CURSOR FOR adbt500_xmja_init_sel_xmja_pre
   
  #FOREACH adbt500_xmja_init_sel_xmja_cs INTO l_xmja.*   #161104-00002#1 161107 by lori mark
   #161104-00002#1 161107 by lori add---(S)
   FOREACH adbt500_xmja_init_sel_xmja_cs INTO l_xmja.xmjaent ,l_xmja.xmjasite ,l_xmja.xmjaunit ,l_xmja.xmjadocno ,l_xmja.xmjaseq   ,
                                              l_xmja.xmja001 ,l_xmja.xmja002  ,l_xmja.xmja003  ,l_xmja.xmja004   ,l_xmja.xmja005   ,
                                              l_xmja.xmja006 ,l_xmja.xmja007  ,l_xmja.xmja008  ,l_xmja.xmja009   ,l_xmja.xmja010   ,
                                              l_xmja.xmja011 ,l_xmja.xmja012  ,l_xmja.xmja013  ,l_xmja.xmja014   ,l_xmja.xmja015   ,
                                              l_xmja.xmja016 ,l_xmja.xmja017  ,l_xmja.xmja018  ,l_xmja.xmja019   ,l_xmja.xmja020   ,
                                              l_xmja.xmja021 ,l_xmja.xmja022  ,l_xmja.xmja024  ,l_xmja.xmja025   ,                   
                                              l_xmja.xmja026 ,l_xmja.xmja027  ,l_xmja.xmja028  ,l_xmja.xmja029   ,l_xmja.xmja030   ,
                                              l_xmja.xmja031 ,l_xmja.xmja032  ,l_xmja.xmja033  ,l_xmja.xmja034   ,l_xmja.xmja035   ,
                                              l_xmja.xmja036 ,l_xmja.xmja037  ,l_xmja.xmja038  ,l_xmja.xmja039   ,l_xmja.xmja040   ,
                                              #161123-00042#1 Add By Ken 161128(S)
                                              l_xmja.xmjaud001,l_xmja.xmjaud002,l_xmja.xmjaud003,l_xmja.xmjaud004,l_xmja.xmjaud005, 
                                              l_xmja.xmjaud006,l_xmja.xmjaud007,l_xmja.xmjaud008,l_xmja.xmjaud009,l_xmja.xmjaud010, 
                                              l_xmja.xmjaud011,l_xmja.xmjaud012,l_xmja.xmjaud013,l_xmja.xmjaud014,l_xmja.xmjaud015, 
                                              l_xmja.xmjaud016,l_xmja.xmjaud017,l_xmja.xmjaud018,l_xmja.xmjaud019,l_xmja.xmjaud020, 
                                              l_xmja.xmjaud021,l_xmja.xmjaud022,l_xmja.xmjaud023,l_xmja.xmjaud024,l_xmja.xmjaud025, 
                                              l_xmja.xmjaud026,l_xmja.xmjaud027,l_xmja.xmjaud028,l_xmja.xmjaud029,l_xmja.xmjaud030  
                                              #161123-00042#1 Add By Ken 161128(E)                                              
   #161104-00002#1 161107 by lori add---(E)
   
      CALL s_get_price_adb('1',g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt,l_xmja.xmjaseq,g_xmda_m.xmda004,l_xmja.xmja003,l_xmja.xmja017,l_xmja.xmja018,g_xmda_m.xmda015,l_xmja.xmja006,'1')
        RETURNING l_success,l_xmja.xmja008,l_xmja.xmja009,l_xmja.xmja010,l_xmja.xmja022

      #160707-00009#1 20160707 modify by beckxie---S
      #CALL s_adbt500_get_amounts(g_xmda_m.xmdadocno,l_xmja.xmjaseq,g_xmda_m.xmdasite,g_xmda_m.xmda015,g_xmda_m.xmda016,l_xmja.xmja006,l_xmja.xmja010,l_xmja.xmja018)
      CALL s_adbt500_get_amounts(g_xmda_m.xmdadocno,l_xmja.xmjaseq,g_xmda_m.xmdasite,g_xmda_m.xmda015,g_xmda_m.xmda016,l_xmja.xmja006,l_xmja.xmja010*l_xmja.xmja018,l_xmja.xmja018)
      #160707-00009#1 20160707 modify by beckxie---E
         RETURNING l_xmja.xmja019,l_xmja.xmja020,l_xmja.xmja021
      
      UPDATE xmja_t SET xmja019 = l_xmja.xmja019,
                        xmja020 = l_xmja.xmja020,
                        xmja021 = l_xmja.xmja021,
                        xmja008 = l_xmja.xmja008,
                        xmja009 = l_xmja.xmja009,
                        xmja010 = l_xmja.xmja010,                        
                        xmja022 = l_xmja.xmja022
       WHERE xmjaent = g_enterprise
         AND xmjadocno = g_xmda_m.xmdadocno
         AND xmjaseq = l_xmja.xmjaseq
         
      #160907-00048#1 1600913 by sakura add(S)
      #產生訂單單身
      LET l_success = TRUE
      CALL s_adbt500_gen_xmdc(g_xmda_m.xmdadocno,l_xmja.xmjaseq) RETURNING l_success
      IF NOT l_success THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "xmdc_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
      END IF
      #產生交期明細
      LET l_success = TRUE
      CALL s_adbt500_gen_xmdd(g_xmda_m.xmdadocno,l_xmja.xmjaseq) RETURNING l_success
      IF NOT l_success THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "xmdd_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
      END IF      
      #160907-00048#1 1600913 by sakura add(E)         
         
      INITIALIZE l_xmja.* TO NULL
   END FOREACH
   #2.促销价
   CALL s_get_price_adb('1',g_xmda_m.xmdadocno,g_xmda_m.xmdadocdt,l_xmja.xmjaseq,g_xmda_m.xmda004,l_xmja.xmja003,l_xmja.xmja017,l_xmja.xmja018,g_xmda_m.xmda015,l_xmja.xmja006,'2')
      RETURNING l_success,l_xmja.xmja008,l_xmja.xmja009,l_xmja.xmja010,l_xmja.xmja022
      
END FUNCTION

PRIVATE FUNCTION adbt500_xmda032_hold()
   DEFINE  r_success       LIKE type_t.num5

   
   LET r_success = TRUE
   IF g_xmda_m.xmdadocno IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success     
   END IF
 
   ERROR ""
  
   CALL s_transaction_begin()           
   OPEN adbt500_cl2 USING g_enterprise,g_xmda_m.xmdadocno

   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN adbt500_cl2:"
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CLOSE adbt500_cl2
      CALL s_transaction_end('N','0')
      LET r_success = FALSE
      RETURN r_success
   END IF

   #鎖住將被更改或取消的資料
   
    FETCH adbt500_cl2 INTO g_xmda_m.xmdasite,g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocno_desc, 
       g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda004_desc,g_xmda_m.xmda002,g_xmda_m.xmda002_desc, 
       g_xmda_m.xmda003,g_xmda_m.xmda003_desc,g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007, 
       g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027,g_xmda_m.xmda027_desc,g_xmda_m.xmda009,g_xmda_m.xmda009_desc, 
       g_xmda_m.xmda010,g_xmda_m.xmda010_desc,g_xmda_m.xmda011,g_xmda_m.xmda011_desc,g_xmda_m.xmda012, 
       g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda035_desc,g_xmda_m.xmda015,g_xmda_m.xmda015_desc, 
       g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda017_desc,g_xmda_m.xmda018,g_xmda_m.xmda018_desc, 
       g_xmda_m.xmda019,g_xmda_m.xmda023,g_xmda_m.xmda023_desc,g_xmda_m.xmda032,g_xmda_m.xmda032_desc, 
       g_xmda_m.xmda071,g_xmda_m.xmda021,g_xmda_m.xmda021_desc,g_xmda_m.xmda022,g_xmda_m.xmda022_desc, 
       g_xmda_m.xmda034,g_xmda_m.xmda034_desc,g_xmda_m.xmda024,g_xmda_m.xmda024_desc,
       g_xmda_m.xmda030,g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda028, 
       g_xmda_m.xmda041,g_xmda_m.xmda042,g_xmda_m.xmda043,g_xmda_m.xmda025,g_xmda_m.xmda025_desc,g_xmda_m.oofb017, 
       g_xmda_m.xmda026,g_xmda_m.xmda026_desc,g_xmda_m.oofb017_1,g_xmda_m.xmda020,g_xmda_m.xmda020_desc, 
       g_xmda_m.xmda036,g_xmda_m.xmda036_desc,g_xmda_m.xmda048,g_xmda_m.xmda049,
       g_xmda_m.xmdaownid,g_xmda_m.xmdaownid_desc,g_xmda_m.xmdaowndp, 
       g_xmda_m.xmdaowndp_desc,g_xmda_m.xmdacrtid,g_xmda_m.xmdacrtid_desc,g_xmda_m.xmdacrtdp,g_xmda_m.xmdacrtdp_desc, 
       g_xmda_m.xmdacrtdt,g_xmda_m.xmdamodid,g_xmda_m.xmdamodid_desc,g_xmda_m.xmdamoddt,g_xmda_m.xmdacnfid, 
       g_xmda_m.xmdacnfid_desc,g_xmda_m.xmdacnfdt 
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_xmda_m.xmdadocno
      LET g_errparam.popup = FALSE
      CALL cl_err()
      CLOSE adbt500_cl2
      CALL s_transaction_end('N','0')
      LET r_success = FALSE
      RETURN r_success
   END IF
 
   CALL adbt500_show()  

#   LET g_qryparam.state = 'i'
#   
#   DISPLAY BY NAME g_xmda_m.xmdadocno,g_xmda_m.xmda001,g_xmda_m.xmdadocdt,g_xmda_m.xmda004,g_xmda_m.xmda002,
#                   g_xmda_m.xmda003,g_xmda_m.xmdastus,g_xmda_m.xmda005,g_xmda_m.xmda006,g_xmda_m.xmda007,
#                   g_xmda_m.xmda008,g_xmda_m.xmda033,g_xmda_m.xmda027,g_xmda_m.xmda009,g_xmda_m.xmda010,
#                   g_xmda_m.xmda011,g_xmda_m.xmda012,g_xmda_m.xmda013,g_xmda_m.xmda035,g_xmda_m.xmda015,
#                   g_xmda_m.xmda016,g_xmda_m.xmda017,g_xmda_m.xmda018,g_xmda_m.xmda019,g_xmda_m.xmda023,
#                   g_xmda_m.xmda071,g_xmda_m.xmda050,g_xmda_m.xmda021,g_xmda_m.xmda022,g_xmda_m.xmda034,       
#                   g_xmda_m.xmda024,g_xmda_m.xmda048,g_xmda_m.xmda049,g_xmda_m.xmda044,g_xmda_m.xmda030,
#                   g_xmda_m.xmda031,g_xmda_m.xmda045,g_xmda_m.xmda046,g_xmda_m.xmda047,g_xmda_m.xmda025,
#                   g_xmda_m.xmda026,g_xmda_m.xmda020, g_xmda_m.xmda037,g_xmda_m.xmda038,g_xmda_m.xmda036  
#                  
#   
#   LET g_errshow = 1
#   
   LET g_hold = TRUE
 
   CALL adbt500_set_entry('u')
   CALL adbt500_set_no_entry('u')
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      INPUT BY NAME g_xmda_m.xmda032 ATTRIBUTE(WITHOUT DEFAULTS)         

         AFTER FIELD xmda032
         
            LET g_xmda_m.xmda032_desc = ''
            IF NOT cl_null(g_xmda_m.xmda032) THEN
               #IF g_xmda_m.xmda032 != g_xmda_m_t.xmda032 OR g_xmda_m_t.xmda032 IS NULL THEN   #160824-00007#48 Mark By Ken 161007
               IF g_xmda_m.xmda032 != g_xmda_m_o.xmda032 OR g_xmda_m_o.xmda032 IS NULL THEN    #160824-00007#48 Add By Ken 161007
                  IF NOT s_azzi650_chk_exist('297',g_xmda_m.xmda032) THEN
                     LET g_xmda_m.xmda032 = g_xmda_m_o.xmda032
                     CALL s_desc_get_acc_desc('297',g_xmda_m.xmda032) RETURNING g_xmda_m.xmda032_desc
                     DISPLAY BY NAME g_xmda_m.xmda032,g_xmda_m.xmda032_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_acc_desc('297',g_xmda_m.xmda032) RETURNING g_xmda_m.xmda032_desc
            DISPLAY BY NAME g_xmda_m.xmda032_desc
            LET g_xmda_m_o.* = g_xmda_m.*    #160824-00007#48 Add By Ken 161007


         ON ACTION controlp INFIELD xmda032
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xmda_m.xmda032  #給予default值
            LET g_qryparam.arg1 = "297"
            CALL q_oocq002()                            #呼叫開窗
            LET g_xmda_m.xmda032 = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_xmda_m.xmda032 TO xmda032         #顯示到畫面上
            CALL s_desc_get_acc_desc('297',g_xmda_m.xmda032) RETURNING g_xmda_m.xmda032_desc
            DISPLAY BY NAME g_xmda_m.xmda032_desc
            NEXT FIELD xmda032                          #返回原欄位

         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            UPDATE xmda_t SET xmda032 = g_xmda_m.xmda032 
              WHERE xmdaent = g_enterprise 
                AND xmdadocno = g_xmda_m.xmdadocno
            CASE
               WHEN SQLCA.sqlerrd[3] = 0                   #更新不到的處理
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "std-00009"
                  LET g_errparam.extend = "UPDATE xmda032"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  LET r_success = FALSE
                  RETURN r_success
               WHEN SQLCA.sqlcode                          #其他錯誤
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "UPDATE xmda032"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  LET r_success = FALSE
                  RETURN r_success                  
               OTHERWISE
                  CALL s_transaction_end('Y','0')
            END CASE           
            
      END INPUT 
      
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET r_success = FALSE
         RETURN r_success         
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         LET r_success = FALSE
         RETURN r_success          
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         LET r_success = FALSE
         RETURN r_success          
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG        
   END DIALOG
   CLOSE adbt500_cl2
   LET g_hold = FALSE   
   RETURN r_success   
END FUNCTION

PRIVATE FUNCTION adbt500_xmda032_unhold()
   DEFINE  r_success       LIKE type_t.num5
 
   LET r_success = TRUE
   #清空留置原因
   UPDATE xmda_t
      SET xmda032 = ''
    WHERE xmdaent = g_enterprise 
      AND xmdadocno = g_xmda_m.xmdadocno  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xmda032"            
      LET g_errparam.popup  = FALSE
      CALL cl_err() 
      LET r_success = FALSE            
      RETURN r_success 
   END IF
   
   LET g_xmda_m.xmda032 = ''
   LET g_xmda_m.xmda032_desc = ''
   DISPLAY BY NAME g_xmda_m.xmda032,g_xmda_m.xmda032_desc
   
   RETURN r_success   
END FUNCTION

PRIVATE FUNCTION adbt500_stce005_chk()
DEFINE r_success    LIKE type_t.num5
DEFINE l_stce005    LIKE stce_t.stce005
DEFINE l_sql        STRING
DEFINE l_sql1       STRING
      
   LET r_success = TRUE
   #簽收訂單不允許輸入寄售經營類型的資料
   IF g_xmda_m.xmda005 != '3' THEN
      RETURN r_success
   END IF
   
   #經銷商帶出主合約
   #先經銷商+網點+訂單日期+銷售渠道+銷售組織
   #    =>取合同編號/結算方式/經營方式
   #  取不到，再取經銷商+網點為空+訂單日期+銷售渠道+銷售組織
   #    =>取合同編號/結算方式/經營方式
   
   LET l_sql = "SELECT stce005",
               "  FROM stce_t",
               " WHERE stceent = ",g_enterprise,
               "   AND stcestus = 'Y'",
               "   AND stce009 = '",g_xmda_m.xmda004,"'",         #經銷商
               "   AND stce012 = '",g_xmda_m.xmda023,"'",         #銷售渠道
               "   AND stce017 <= '",g_xmda_m.xmdadocdt,"'",      #生效日期
               "   AND (stce018 IS NULL",                         #失效日期
               "    OR stce018 >= '",g_xmda_m.xmdadocdt,"')",
               #"   AND stce025 = '",g_xmdc4_d[l_ac].xmjasite,"'"  #銷售組織
               "   AND stce025 = '",g_xmda_m.xmdasite,"'"  #銷售組織
               
   #沒限定網點編號
   LET l_sql1 = l_sql,
                "   AND COALESCE(stce010,'-1') = '-1'",#網點編號
                " ORDER BY stce017 DESC"
   PREPARE adbt500_stce005_pre1 FROM l_sql1
   DECLARE adbt500_stce005_cs1 SCROLL CURSOR FOR adbt500_stce005_pre1
   
   #160906-00007#1 160912 by sakura mark(S)
   ##限定網點編號
   #LET l_sql = l_sql,
   #            "   AND stce010 = '",g_xmdc4_d[l_ac].xmja024,"'",  #網點編號
   #            " ORDER BY stce017 DESC"
   #PREPARE adbt500_stce005_pre FROM l_sql
   #DECLARE adbt500_stce005_cs SCROLL CURSOR FOR adbt500_stce005_pre
   #
   ##限定網點編號
   #OPEN adbt500_stce005_cs
   #FETCH adbt500_stce005_cs INTO l_stce005
   #IF cl_null(l_stce005) AND SQLCA.sqlcode = 100 THEN
   #160906-00007#1 160912 by sakura mark(E)
      OPEN adbt500_stce005_cs1
      FETCH adbt500_stce005_cs1 INTO l_stce005
   #160906-00007#1 160912 by sakura mark(S)
   #END IF
   #CLOSE adbt500_stce005_cs
   #160906-00007#1 160912 by sakura mark(E)
   CLOSE adbt500_stce005_cs1
   
   #當經營方式 = 13.寄銷
   IF l_stce005 = '13' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  'adb-00300'
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
    
   RETURN r_success
END FUNCTION

PRIVATE FUNCTION adbt500_xmda207_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_xmda_m.xmda207
      CALL ap_ref_array2(g_ref_fields,"SELECT dbabl003 FROM dbabl_t WHERE dbablent='"||g_enterprise||"' AND dbabl001=? AND dbabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_xmda_m.xmda207_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_xmda_m.xmda207_desc
END FUNCTION

PRIVATE FUNCTION adbt500_xmda206_ref()
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_xmda_m.xmda206
      CALL ap_ref_array2(g_ref_fields,"SELECT dbadl003 FROM dbadl_t WHERE dbadlent='"||g_enterprise||"' AND dbadl001=? AND dbadl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_xmda_m.xmda206_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_xmda_m.xmda206_desc
END FUNCTION
#銷售分類顯示
PRIVATE FUNCTION adbt500_xmda024_ref(p_xmda024)
DEFINE p_xmda024   LIKE xmda_t.xmda024
DEFINE r_oocql004  LIKE oocql_t.oocql004

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_xmda024
       CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='295' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_oocql004 = '', g_rtn_fields[1] , ''
       RETURN r_oocql004
END FUNCTION
#運送方式顯示
PRIVATE FUNCTION adbt500_xmda020_ref(p_xmda020)
DEFINE p_xmda020   LIKE xmda_t.xmda020
DEFINE r_oocql004  LIKE oocql_t.oocql004

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_xmda020
       CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='263' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_oocql004 = '', g_rtn_fields[1] , ''
       RETURN r_oocql004
END FUNCTION
#付款條件顯示
PRIVATE FUNCTION adbt500_xmda018_ref(p_xmda018)
DEFINE p_xmda018    LIKE xmda_t.xmda018
DEFINE r_ooidl003   LIKE ooidl_t.ooidl003

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_xmda018
       CALL ap_ref_array2(g_ref_fields,"SELECT ooidl003 FROM ooidl_t WHERE ooidlent='"||g_enterprise||"' AND ooidl001=? AND ooidl002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_ooidl003 = '', g_rtn_fields[1] , ''
       RETURN r_ooidl003
END FUNCTION
#幣別顯示
PRIVATE FUNCTION adbt500_xmda015_ref(p_xmda015)
DEFINE p_xmda015      LIKE xmda_t.xmda015
DEFINE r_ooail003     LIKE ooail_t.ooail003

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_xmda015
       CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_ooail003 = '', g_rtn_fields[1] , ''
       RETURN r_ooail003
END FUNCTION
#稅別顯示
PRIVATE FUNCTION adbt500_xmda011_ref(p_xmda011)
DEFINE p_xmda011      LIKE xmda_t.xmda011
DEFINE r_oodbl004     LIKE oodbl_t.oodbl004
DEFINE l_ooef019      LIKE ooef_t.ooef019

       SELECT ooef019 INTO l_ooef019 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_xmda_m.xmdasite
       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_xmda011
       CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001='"||l_ooef019||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_oodbl004 = '', g_rtn_fields[1] , ''
       RETURN r_oodbl004
END FUNCTION
#交昜條件顯示
PRIVATE FUNCTION adbt500_xmda010_ref(p_xmda010)
DEFINE p_xmda010      LIKE xmda_t.xmda010
DEFINE r_oocql004     LIKE oocql_t.oocql004

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_xmda010
       CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='238' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_oocql004 = g_rtn_fields[1]
       RETURN r_oocql004
END FUNCTION
#收款條件顯示
PRIVATE FUNCTION adbt500_xmda009_ref(p_xmda009)
DEFINE p_xmda009      LIKE xmda_t.xmda009
DEFINE r_ooibl004     LIKE ooibl_t.ooibl004

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_xmda009
       CALL ap_ref_array2(g_ref_fields,"SELECT ooibl004 FROM ooibl_t WHERE ooiblent='"||g_enterprise||"' AND ooibl002=? AND ooibl003='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_ooibl004 = g_rtn_fields[1]
       RETURN r_ooibl004
END FUNCTION
#帶出供應商說明
PRIVATE FUNCTION adbt500_xmda004_ref(p_xmda004)
DEFINE p_xmda004    LIKE xmda_t.xmda004
DEFINE r_pmaal004   LIKE pmaal_t.pmaal004

        INITIALIZE g_ref_fields TO NULL
        LET g_ref_fields[1] = p_xmda004
        CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
        LET r_pmaal004 = '', g_rtn_fields[1] , ''
        RETURN r_pmaal004
END FUNCTION
#獲取部門編號說明
PRIVATE FUNCTION adbt500_xmda003_ref(p_xmda003)
DEFINE p_xmda003      LIKE xmda_t.xmda003
DEFINE r_xmda003_desc LIKE ooefl_t.ooefl003

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_xmda003
       CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_xmda003_desc = '', g_rtn_fields[1] , ''
       RETURN r_xmda003_desc
END FUNCTION
#獲取員工編號說明
PRIVATE FUNCTION adbt500_xmda002_ref(p_xmda002)
DEFINE p_xmda002      LIKE xmda_t.xmda002
DEFINE r_xmda002_desc LIKE oofa_t.oofa011

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_xmda002
       CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
       LET r_xmda002_desc = '', g_rtn_fields[1] , ''
       RETURN r_xmda002_desc
END FUNCTION

################################################################################
# Descriptions...: 重新撈取資料庫xmda213
# Memo...........:
# Usage..........: CALL adbt500_display_xmda213()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/10/22 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adbt500_display_xmda213()

   SELECT xmda213 INTO g_xmda_m.xmda213
     FROM xmda_t
    WHERE xmdaent = g_enterprise
      AND xmdadocno = g_xmda_m.xmdadocno
   DISPLAY BY NAME g_xmda_m.xmda213
END FUNCTION

################################################################################
# Descriptions...: 維護多交期子程式後，如維護的總數量跟畫面單身的銷售數量不相同時，詢問使用者是否回寫，確認回寫後，一併回寫包裝數量、計價數量、金額重算等
# Memo...........:
# Usage..........: CALL adbt500_update_xmja014(p_xmja014)
# Input parameter: p_xmja014      銷售數量
# Return code....: 無
# Date & Author..: 2014/11/06 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adbt500_update_xmja014(p_xmja014)
DEFINE p_xmja014        LIKE xmja_t.xmja014
DEFINE l_success        LIKE type_t.num5
DEFINE l_cnt            LIKE type_t.num10  #150226-00004#1 sakura.150305 add

   IF p_xmja014 = g_xmdc4_d[l_ac].xmja014 THEN
      #銷售數量
      LET g_xmdc4_d[l_ac].xmja014 = p_xmja014
      #包裝數量
      IF NOT cl_null(g_xmdc4_d[l_ac].xmja011) THEN  
         CALL s_aooi250_convert_qty(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja013,g_xmdc4_d[l_ac].xmja011,g_xmdc4_d[l_ac].xmja014)
            RETURNING l_success,g_xmdc4_d[l_ac].xmja012
      END IF
      #參考單位
      IF NOT cl_null(g_xmdc4_d[l_ac].xmja015) THEN  
         CALL s_aooi250_convert_qty(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja011,g_xmdc4_d[l_ac].xmja015,g_xmdc4_d[l_ac].xmja012)
            RETURNING l_success,g_xmdc4_d[l_ac].xmja016
      END IF
      #計價數量
      IF NOT cl_null(g_xmdc4_d[l_ac].xmja017) THEN  
         CALL s_aooi250_convert_qty(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja011,g_xmdc4_d[l_ac].xmja017,g_xmdc4_d[l_ac].xmja012)
            RETURNING l_success,g_xmdc4_d[l_ac].xmja018
         CALL adbt500_get_price()
      END IF

      #150226-00004#1 sakura.150305 add---str
      #判斷多交期為一筆時,更新多交期為"N"
      LET l_cnt = 0
      SELECT COUNT(xmdfseq) INTO l_cnt
        FROM xmdf_t
       WHERE xmdfent = g_enterprise
         AND xmdfdocno = g_xmda_m.xmdadocno
         AND xmdfseq = g_xmdc4_d[l_ac].xmjaseq

      IF l_cnt <= 1 THEN
         LET g_xmdc4_d[l_ac].xmja030 = 'N'
      ELSE
         LET g_xmdc4_d[l_ac].xmja030 = 'Y'
      END IF      
      #150226-00004#1 sakura.150305 add---end

      UPDATE xmja_t SET xmja014 = g_xmdc4_d[l_ac].xmja014,
                        xmja012 = g_xmdc4_d[l_ac].xmja012,
                        xmja016 = g_xmdc4_d[l_ac].xmja016,
                        xmja018 = g_xmdc4_d[l_ac].xmja018,
                        xmja030 = g_xmdc4_d[l_ac].xmja030   #150226-00004#1 sakura.150305 add
       WHERE xmjaent = g_enterprise
         AND xmjadocno = g_xmda_m.xmdadocno
         AND xmjaseq = g_xmdc4_d[l_ac].xmjaseq
   END IF
END FUNCTION
#從銷售數量推算 包裝數量,參考數量,計價數量
PUBLIC FUNCTION adbt500_xmja014_convert()
DEFINE l_rate       LIKE inaj_t.inaj014
DEFINE l_success    LIKE type_t.num5

   IF cl_null(g_xmdc4_d[l_ac].xmja013) OR cl_null(g_xmdc4_d[l_ac].xmja014) THEN
      RETURN
   END IF
   #包裝數量
   IF NOT cl_null(g_xmdc4_d[l_ac].xmja011) THEN
      CALL s_aooi250_convert_qty(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja013,g_xmdc4_d[l_ac].xmja011,g_xmdc4_d[l_ac].xmja014)
         RETURNING l_success,g_xmdc4_d[l_ac].xmja012
   END IF
   #參考數量
   IF NOT cl_null(g_xmdc4_d[l_ac].xmja015) THEN
      CALL s_aooi250_convert_qty(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja013,g_xmdc4_d[l_ac].xmja015,g_xmdc4_d[l_ac].xmja014)
         RETURNING l_success,g_xmdc4_d[l_ac].xmja016
   END IF
   #計價數量
   IF NOT cl_null(g_xmdc4_d[l_ac].xmja017) THEN
      CALL s_aooi250_convert_qty(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja013,g_xmdc4_d[l_ac].xmja017,g_xmdc4_d[l_ac].xmja014)
         RETURNING l_success,g_xmdc4_d[l_ac].xmja018
      CALL adbt500_get_price()
   END IF
END FUNCTION

################################################################################
# Descriptions...: 檢查合約編號是否正確
# Memo...........: 訂單客戶的 客戶庫存管理否 = 'Y'
#                : 則不允許經營方式 = 13.寄售
# Usage..........: CALL adbt500_stce_chk(p_type)
#                  RETURNING r_success
# Input parameter: p_type         1.預設 2.校驗
# Return code....: r_success      True/False
# Date & Author..: 2015/01/27 By pomelo
# Modify.........: 150403-00005#1 2015/04/15 By pomelo modify 增加一個參數，當預設的時候部出現錯誤訊息
################################################################################
PRIVATE FUNCTION adbt500_stce_chk(p_type)
DEFINE p_type            LIKE type_t.chr1      #類型   150403-00005#1 2015/04/15 By pomelo add
DEFINE r_success         LIKE type_t.num5
DEFINE l_pmaa248         LIKE pmaa_t.pmaa248   #客戶庫存管理
DEFINE l_stce005         LIKE stce_t.stce005   #經營方式

   LET r_success = TRUE
   
   LET l_pmaa248 = ''
   SELECT pmaa248 INTO l_pmaa248
     FROM pmaa_t
    WHERE pmaaent = g_enterprise
      AND pmaa001 = g_xmda_m.xmda004
               
   #取合約資訊
   CALL s_adbt500_get_stce(g_xmda_m.xmda005, g_xmda_m.xmda004,
                           g_xmdc4_d[l_ac].xmja025, g_xmda_m.xmda023,
                           g_xmda_m.xmdadocdt, g_xmdc4_d[l_ac].xmjasite)
      RETURNING g_xmdc4_d[l_ac].xmja028,l_stce005
   
   IF l_pmaa248 = 'Y' AND l_stce005 = '13' THEN
      IF p_type = '2' THEN   #150403-00005#1 2015/04/15 By pomelo add
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  'adb-00184'
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         CALL cl_err()
      END IF                 #150403-00005#1 2015/04/15 By pomelo add
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 修改交易價
# Memo...........: 提供“修改交易價”按鈕供用戶修改交易價，差價會產生一筆折價類型為10.人工改價的折價明細
# Usage..........: CALL adbt500_modify_price()
# Date & Author..: 2015/04/08 By baogc
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt500_modify_price()
DEFINE  p_cmd                 LIKE type_t.chr1
DEFINE  l_cmd_t               LIKE type_t.chr1
DEFINE  l_cmd                 LIKE type_t.chr1
DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
DEFINE  l_count               LIKE type_t.num10
DEFINE  l_i                   LIKE type_t.num10
DEFINE  l_insert              BOOLEAN
DEFINE  ls_return             STRING
DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
DEFINE  l_vars                DYNAMIC ARRAY OF STRING
DEFINE  l_fields              DYNAMIC ARRAY OF STRING
DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
DEFINE  lb_reproduce          BOOLEAN
DEFINE  li_reproduce          LIKE type_t.num10
DEFINE  li_reproduce_target   LIKE type_t.num10
DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
#160601-00027#1 by lori add---(S)
DEFINE l_xrcd113              LIKE xrcd_t.xrcd113
DEFINE l_xrcd114              LIKE xrcd_t.xrcd114
DEFINE l_xrcd115              LIKE xrcd_t.xrcd115
#160601-00027#1 by lori add---(E)

   #未审核的资料才可修改价格
   IF g_xmda_m.xmdastus <> 'N' THEN RETURN END IF
   
   #单身无资料不可修改价格
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM xmja_t
    WHERE xmjaent = g_enterprise AND xmjadocno = g_xmda_m.xmdadocno
   IF l_cnt <= 0 THEN RETURN END IF

   LET g_action_choice = ""

   LET g_forupd_sql = "SELECT xmjaunit,xmjaseq,xmjasite,xmja001,xmja002,xmja003,xmja033,xmja004,xmja005, 
       xmja006,xmja007,xmja011,xmja012,xmja013,xmja014,xmja015,xmja016,xmja017,xmja018,xmja008,xmja009, 
       xmja010,xmja022,xmja019,xmja020,xmja021,xmja024,xmja025,xmja026,xmja027,xmja028,xmja029,xmja030, 
       xmja031,xmja032,xmja040,xmja039,xmja038,xmja037,xmja034 FROM xmja_t WHERE xmjaent=? AND xmjadocno=?  
       AND xmjaseq=? FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adbt500_modify_price_bcl CURSOR FROM g_forupd_sql

   ##不允许新增，不允许删除
   LET l_allow_insert = FALSE
   LET l_allow_delete = FALSE
   
   INPUT ARRAY g_xmdc4_d FROM s_detail4.*
      ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS,
                INSERT ROW = l_allow_insert,
                DELETE ROW = l_allow_delete,
                APPEND ROW = l_allow_insert)
                
      BEFORE INPUT
         IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
            CALL FGL_SET_ARR_CURR(g_xmdc4_d.getLength()+1) 
            LET g_insert = 'N' 
         END IF 
   
         CALL adbt500_b_fill()
         #如果一直都在單身1則控制筆數位置
         IF g_loc = 'd' AND g_rec_b != 0 THEN
            CALL FGL_SET_ARR_CURR(g_detail_idx)
         END IF
         LET g_loc = 'd'
         LET g_rec_b = g_xmdc4_d.getLength()
            
         CALL cl_set_comp_entry("xmjaseq,xmjasite,xmja002,xmja003,xmja004,xmja005,xmja006,xmja011,xmja012,xmja014,xmja015,xmja016,xmja017,xmja018,xmja024,xmja026,xmja030,xmja031,xmja032,xmja033,xmja034,xmja037,xmja038,xmja039,xmja040",FALSE)
         CALL cl_set_comp_entry("xmja010",TRUE)
         
      BEFORE INSERT
         
      BEFORE ROW
         LET l_insert = FALSE
         LET l_cmd = ''
         LET l_ac = ARR_CURR()
         LET g_detail_idx = l_ac
           
         LET l_lock_sw = 'N'
         LET l_n = ARR_COUNT()
         DISPLAY l_ac TO FORMONLY.idx
      
         CALL s_transaction_begin()
         OPEN adbt500_cl USING g_enterprise,g_xmda_m.xmdadocno
         IF STATUS THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "OPEN adbt500_cl:" 
            LET g_errparam.code   = STATUS 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CLOSE adbt500_cl
            CALL s_transaction_end('N','0')
            RETURN
         END IF
         
         LET g_rec_b = g_xmdc4_d.getLength()
         
         IF g_rec_b >= l_ac 
            AND g_xmdc4_d[l_ac].xmjaseq IS NOT NULL
         THEN 
            LET l_cmd='u'
            LET g_xmdc4_d_t.* = g_xmdc4_d[l_ac].*  #BACKUP
            LET g_xmdc4_d_o.* = g_xmdc4_d[l_ac].*  #BACKUP
            
            OPEN adbt500_modify_price_bcl USING g_enterprise,g_xmda_m.xmdadocno,g_xmdc4_d[g_detail_idx].xmjaseq
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "adbt500_modify_price_bcl" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               RETURN FALSE
            ELSE
               FETCH adbt500_modify_price_bcl INTO g_xmdc4_d[l_ac].xmjaunit,g_xmdc4_d[l_ac].xmjaseq,g_xmdc4_d[l_ac].xmjasite, 
                   g_xmdc4_d[l_ac].xmja001,g_xmdc4_d[l_ac].xmja002,g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja033, 
                   g_xmdc4_d[l_ac].xmja004,g_xmdc4_d[l_ac].xmja005,g_xmdc4_d[l_ac].xmja006,g_xmdc4_d[l_ac].xmja007, 
                   g_xmdc4_d[l_ac].xmja011,g_xmdc4_d[l_ac].xmja012,g_xmdc4_d[l_ac].xmja013,g_xmdc4_d[l_ac].xmja014, 
                   g_xmdc4_d[l_ac].xmja015,g_xmdc4_d[l_ac].xmja016,g_xmdc4_d[l_ac].xmja017,g_xmdc4_d[l_ac].xmja018, 
                   g_xmdc4_d[l_ac].xmja008,g_xmdc4_d[l_ac].xmja009,g_xmdc4_d[l_ac].xmja010,g_xmdc4_d[l_ac].xmja022, 
                   g_xmdc4_d[l_ac].xmja019,g_xmdc4_d[l_ac].xmja020,g_xmdc4_d[l_ac].xmja021,g_xmdc4_d[l_ac].xmja024, 
                   g_xmdc4_d[l_ac].xmja025,g_xmdc4_d[l_ac].xmja026,g_xmdc4_d[l_ac].xmja027,g_xmdc4_d[l_ac].xmja028, 
                   g_xmdc4_d[l_ac].xmja029,g_xmdc4_d[l_ac].xmja030,g_xmdc4_d[l_ac].xmja031,g_xmdc4_d[l_ac].xmja032, 
                   g_xmdc4_d[l_ac].xmja040,g_xmdc4_d[l_ac].xmja039,g_xmdc4_d[l_ac].xmja038,g_xmdc4_d[l_ac].xmja037, 
                   g_xmdc4_d[l_ac].xmja034
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = '' 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET l_lock_sw = "Y"
               END IF
               
               #遮罩相關處理
               LET g_xmdc4_d_mask_o[l_ac].* =  g_xmdc4_d[l_ac].*
               CALL adbt500_xmja_t_mask()
               LET g_xmdc4_d_mask_n[l_ac].* =  g_xmdc4_d[l_ac].*
               
               LET g_bfill = "N"
               CALL adbt500_show()
               LET g_bfill = "Y"
               
               CALL cl_show_fld_cont()
            END IF
         ELSE
            LET l_cmd='a'
         END IF
         
      ON ROW CHANGE 
         IF INT_FLAG THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = '' 
            LET g_errparam.code   = 9001 
            LET g_errparam.popup  = FALSE 
            CALL cl_err()
            LET INT_FLAG = 0
            LET g_xmdc4_d[l_ac].* = g_xmdc4_d_t.*
            CLOSE adbt500_modify_price_bcl
            CALL s_transaction_end('N','0')
            EXIT INPUT
         END IF
         
         IF l_lock_sw = 'Y' THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = '' 
            LET g_errparam.code   = -263 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            LET g_xmdc4_d[l_ac].* = g_xmdc4_d_t.*
         ELSE
            IF cl_null(g_xmdc4_d[l_ac].xmja004) THEN
               LET g_xmdc4_d[l_ac].xmja004 = ' ' 
            END IF
            
            #將遮罩欄位還原
            CALL adbt500_xmja_t_mask_restore('restore_mask_o')
                           
            UPDATE xmja_t SET xmja010 = g_xmdc4_d[l_ac].xmja010
             WHERE xmjaent = g_enterprise AND xmjadocno = g_xmda_m.xmdadocno
               AND xmjaseq = g_xmdc4_d_t.xmjaseq #項次 
               
            #add-point:單身page4修改中
            
            #end add-point
               
            CASE
               WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmja_t" 
                  LET g_errparam.code   = "std-00009" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  LET g_xmdc4_d[l_ac].* = g_xmdc4_d_t.*
               WHEN SQLCA.sqlcode #其他錯誤
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xmja_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  LET g_xmdc4_d[l_ac].* = g_xmdc4_d_t.*
               OTHERWISE
                  INITIALIZE gs_keys TO NULL 
                  LET gs_keys[1] = g_xmda_m.xmdadocno
                  LET gs_keys_bak[1] = g_xmdadocno_t
                  LET gs_keys[2] = g_xmdc4_d[g_detail_idx].xmjaseq
                  LET gs_keys_bak[2] = g_xmdc4_d_t.xmjaseq
                  CALL adbt500_update_b('xmja_t',gs_keys,gs_keys_bak,"'4'")
                  #資料多語言用-增/改
                  
            END CASE
            
            #將遮罩欄位進行遮蔽
            CALL adbt500_xmja_t_mask_restore('restore_mask_n')
            
            #判斷key是否有改變
            INITIALIZE gs_keys TO NULL
            IF NOT (g_xmdc4_d[g_detail_idx].xmjaseq = g_xmdc4_d_t.xmjaseq 
               ) THEN
               LET gs_keys[01] = g_xmda_m.xmdadocno
               LET gs_keys[gs_keys.getLength()+1] = g_xmdc4_d_t.xmjaseq
               CALL adbt500_key_update_b(gs_keys,'xmja_t')
            END IF
            
            #修改歷程記錄
            LET g_log1 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc4_d_t)
            LET g_log2 = util.JSON.stringify(g_xmda_m),util.JSON.stringify(g_xmdc4_d[l_ac])
            IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
               CALL s_transaction_end('N','0')
            END IF
            
            #产生折价明细
            IF NOT adbt500_modify_price_gen_rtic() THEN
               CALL s_transaction_end('N','0')
               LET g_xmdc4_d[l_ac].* = g_xmdc4_d_t.*
            END IF
            
            #更新对应价格
            IF NOT s_get_price_adb_calculate('1',g_xmda_m.xmdadocno,g_xmda_m.xmda015,g_xmdc4_d[l_ac].xmjaseq) THEN
               CALL s_transaction_end('N','0')
               LET g_xmdc4_d[l_ac].* = g_xmdc4_d_t.*
            END IF
            
            CALL adbt500_b_fill()
            #end add-point
         END IF
         
      AFTER ROW
         LET l_ac = ARR_CURR()
         IF INT_FLAG THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = '' 
            LET g_errparam.code   = 9001 
            LET g_errparam.popup  = FALSE 
            CALL cl_err()
            LET INT_FLAG = 0
            IF l_cmd = 'u' THEN
               LET g_xmdc4_d[l_ac].* = g_xmdc4_d_t.*
            END IF
            CLOSE adbt500_modify_price_bcl
            CALL s_transaction_end('N','0')
            EXIT INPUT 
         END IF
         
         CLOSE adbt500_modify_price_bcl
         CALL s_transaction_end('Y','0')
      
   
      AFTER FIELD xmja010
         IF NOT cl_ap_chk_range(g_xmdc4_d[l_ac].xmja010,"0","1","","","azz-00079",1) THEN
            LET g_xmdc4_d[l_ac].xmja010 = g_xmdc4_d_t.xmja010
            NEXT FIELD xmja010
         END IF 
      
      AFTER INPUT
         #160601-00027#1 by lori add---(S)
         #重新計算整單的未稅、含稅總金額
         IF NOT cl_null(g_xmda_m.xmdadocno) THEN
            CALL s_transaction_begin()
            CALL s_tax_recount(g_xmda_m.xmdadocno)
              RETURNING g_xmda_m.xmda041,g_xmda_m.xmda043,g_xmda_m.xmda042,l_xrcd113,l_xrcd114,l_xrcd115
            IF cl_null(g_xmda_m.xmda041) THEN
               LET g_xmda_m.xmda041 = 0
            END IF
            IF cl_null(g_xmda_m.xmda042) THEN
               LET g_xmda_m.xmda042 = 0
            END IF
            IF cl_null(g_xmda_m.xmda043) THEN
               LET g_xmda_m.xmda043 = 0
            END IF
            UPDATE xmda_t SET xmda041 = g_xmda_m.xmda041,
                              xmda042 = g_xmda_m.xmda042,
                              xmda043 = g_xmda_m.xmda043
              #WHERE xmdaent = g_enterprise AND xmdadocno = g_xmdadocno_t       #160907-00048#1 1600913 by sakura mark
              WHERE xmdaent = g_enterprise AND xmdadocno = g_xmda_m.xmdadocno   #160907-00048#1 1600913 by sakura add
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "xmda_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
         
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         END IF
         CALL adbt500_ui_headershow()         
         #160601-00027#1 by lori add---(E)
   END INPUT
   
   CALL cl_set_comp_entry("xmjaseq,xmjasite,xmja002,xmja003,xmja004,xmja005,xmja006,xmja011,xmja012,xmja014,xmja015,xmja016,xmja017,xmja018,xmja024,xmja026,xmja030,xmja031,xmja032,xmja033,xmja034,xmja037,xmja038,xmja039,xmja040",TRUE)
   CALL cl_set_comp_entry("xmja010",FALSE)
END FUNCTION

################################################################################
# Descriptions...: 修改交易价产生折价明细
# Memo...........:
# Usage..........: CALL adbt500_modify_price_gen_rtic()
#                  RETURNING r_success
# Return code....: r_success      成功标识
# Date & Author..: 2015/04/08 By baogc
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt500_modify_price_gen_rtic()
  DEFINE r_success   LIKE type_t.num5
 #DEFINE l_rtic      RECORD LIKE rtic_t.*   #161104-00002#1 161107 by lori mark
 
  #161104-00002#1 161107 by lori add---(S)
  DEFINE l_rtic      RECORD
            rticent     LIKE rtic_t.rticent   ,   #企業編號
            rticsite    LIKE rtic_t.rticsite  ,   #營運據點
            rticunit    LIKE rtic_t.rticunit  ,   #應用組織
            rticdocno   LIKE rtic_t.rticdocno ,   #單據編號
            rticseq     LIKE rtic_t.rticseq   ,   #項次
            rticseq1    LIKE rtic_t.rticseq1  ,   #折扣序
            rtic001     LIKE rtic_t.rtic001   ,   #單據類型
            rtic002     LIKE rtic_t.rtic002   ,   #折價方式
            rtic003     LIKE rtic_t.rtic003   ,   #促銷規則
            rtic004     LIKE rtic_t.rtic004   ,   #活動類別
            rtic005     LIKE rtic_t.rtic005   ,   #活動子類別
            rtic006     LIKE rtic_t.rtic006   ,   #促銷方式
            rtic007     LIKE rtic_t.rtic007   ,   #入機方式
            rtic008     LIKE rtic_t.rtic008   ,   #參與數量
            rtic009     LIKE rtic_t.rtic009   ,   #參與金額
            rtic010     LIKE rtic_t.rtic010   ,   #贈送基數
            rtic011     LIKE rtic_t.rtic011   ,   #贈送幅度
            rtic012     LIKE rtic_t.rtic012   ,   #折扣率
            rtic013     LIKE rtic_t.rtic013   ,   #折讓金額
            rtic014     LIKE rtic_t.rtic014   ,   #贈卡券種
            rtic015     LIKE rtic_t.rtic015   ,   #贈卡券號
            rtic016     LIKE rtic_t.rtic016   ,   #贈送面額
            rtic017     LIKE rtic_t.rtic017   ,   #贈送面額單位金額
            rtic018     LIKE rtic_t.rtic018   ,   #接卡券種
            rtic019     LIKE rtic_t.rtic019   ,   #接卡券號
            rtic020     LIKE rtic_t.rtic020   ,   #接收基數
            rtic021     LIKE rtic_t.rtic021   ,   #接收幅度
            rtic022     LIKE rtic_t.rtic022   ,   #接收面額
            rtic023     LIKE rtic_t.rtic023   ,   #接收面額單位金額
            rtic024     LIKE rtic_t.rtic024   ,   #接卡券折扣率
            rtic025     LIKE rtic_t.rtic025   ,   #來源類型
            rtic026     LIKE rtic_t.rtic026   ,   #來源單號
            rtic027     LIKE rtic_t.rtic027   ,   #來源折價方式
            rtic028     LIKE rtic_t.rtic028   ,   #承擔比例
            rtic029     LIKE rtic_t.rtic029   ,   #轉費用否
            #161123-00042#1 Add By Ken 161128(S)
            rticud001   LIKE rtic_t.rticud001, #自定義欄位(文字)001
            rticud002   LIKE rtic_t.rticud002, #自定義欄位(文字)002
            rticud003   LIKE rtic_t.rticud003, #自定義欄位(文字)003
            rticud004   LIKE rtic_t.rticud004, #自定義欄位(文字)004
            rticud005   LIKE rtic_t.rticud005, #自定義欄位(文字)005
            rticud006   LIKE rtic_t.rticud006, #自定義欄位(文字)006
            rticud007   LIKE rtic_t.rticud007, #自定義欄位(文字)007
            rticud008   LIKE rtic_t.rticud008, #自定義欄位(文字)008
            rticud009   LIKE rtic_t.rticud009, #自定義欄位(文字)009
            rticud010   LIKE rtic_t.rticud010, #自定義欄位(文字)010
            rticud011   LIKE rtic_t.rticud011, #自定義欄位(數字)011
            rticud012   LIKE rtic_t.rticud012, #自定義欄位(數字)012
            rticud013   LIKE rtic_t.rticud013, #自定義欄位(數字)013
            rticud014   LIKE rtic_t.rticud014, #自定義欄位(數字)014
            rticud015   LIKE rtic_t.rticud015, #自定義欄位(數字)015
            rticud016   LIKE rtic_t.rticud016, #自定義欄位(數字)016
            rticud017   LIKE rtic_t.rticud017, #自定義欄位(數字)017
            rticud018   LIKE rtic_t.rticud018, #自定義欄位(數字)018
            rticud019   LIKE rtic_t.rticud019, #自定義欄位(數字)019
            rticud020   LIKE rtic_t.rticud020, #自定義欄位(數字)020
            rticud021   LIKE rtic_t.rticud021, #自定義欄位(日期時間)021
            rticud022   LIKE rtic_t.rticud022, #自定義欄位(日期時間)022
            rticud023   LIKE rtic_t.rticud023, #自定義欄位(日期時間)023
            rticud024   LIKE rtic_t.rticud024, #自定義欄位(日期時間)024
            rticud025   LIKE rtic_t.rticud025, #自定義欄位(日期時間)025
            rticud026   LIKE rtic_t.rticud026, #自定義欄位(日期時間)026
            rticud027   LIKE rtic_t.rticud027, #自定義欄位(日期時間)027
            rticud028   LIKE rtic_t.rticud028, #自定義欄位(日期時間)028
            rticud029   LIKE rtic_t.rticud029, #自定義欄位(日期時間)029
            rticud030   LIKE rtic_t.rticud030  #自定義欄位(日期時間)030
            #161123-00042#1 Add By Ken 161128(E)
                     END RECORD
  #161104-00002#1 161107 by lori add---(E)

   LET r_success = TRUE

   LET l_rtic.rticent   = g_enterprise                                      #企業編號        
   LET l_rtic.rticsite  = g_xmdc4_d[l_ac].xmjasite                          #營運據點        
   LET l_rtic.rticunit  = g_xmdc4_d[l_ac].xmjaunit                          #應用組織        
   LET l_rtic.rticdocno = g_xmda_m.xmdadocno                                #單據編號        
   LET l_rtic.rticseq   = g_xmdc4_d[l_ac].xmjaseq                           #項次            
  #LET l_rtic.rticseq1  = ''                                                #折扣序          
   LET l_rtic.rtic001   = '1'                                               #單據類型        
   LET l_rtic.rtic002   = '10'                                              #折價方式        
   LET l_rtic.rtic003   = ''                                                #促銷規則        
   LET l_rtic.rtic004   = ''                                                #活動類別        
   LET l_rtic.rtic005   = ''                                                #活動子類別      
   LET l_rtic.rtic006   = '3'                                               #促銷方式        
   LET l_rtic.rtic007   = '1'                                               #入機方式        
   LET l_rtic.rtic008   = g_xmdc4_d[l_ac].xmja018                           #參與數量        
   LET l_rtic.rtic009   = g_xmdc4_d[l_ac].xmja018*g_xmdc4_d_t.xmja010       #參與金額        
   LET l_rtic.rtic010   = g_xmdc4_d_t.xmja010                               #贈送基數        
   LET l_rtic.rtic011   = g_xmdc4_d_t.xmja010-g_xmdc4_d[l_ac].xmja010       #贈送幅度        
   LET l_rtic.rtic012   = g_xmdc4_d[l_ac].xmja010/g_xmdc4_d_t.xmja010*100   #折扣率          
   LET l_rtic.rtic013   = l_rtic.rtic011*l_rtic.rtic008                     #折讓金額        
   LET l_rtic.rtic014   = ''                                                #贈卡券種        
   LET l_rtic.rtic015   = ''                                                #贈卡券號        
   LET l_rtic.rtic016   = ''                                                #贈送面額        
   LET l_rtic.rtic017   = ''                                                #贈送面額單位金額
   LET l_rtic.rtic018   = ''                                                #接卡券種        
   LET l_rtic.rtic019   = ''                                                #接卡券號        
   LET l_rtic.rtic020   = ''                                                #接收基數        
   LET l_rtic.rtic021   = ''                                                #接收幅度        
   LET l_rtic.rtic022   = ''                                                #接收面額        
   LET l_rtic.rtic023   = ''                                                #接收面額單位金額
   LET l_rtic.rtic024   = ''                                                #接卡券折扣率    
   LET l_rtic.rtic025   = ''                                                #來源類型        
   LET l_rtic.rtic026   = ''                                                #來源單號        
   LET l_rtic.rtic027   = ''                                                #來源折價方式    
   LET l_rtic.rtic028   = 0                                                 #承擔比例        
   LET l_rtic.rtic029   = 'N'                                               #轉費用否        
   
   LET l_rtic.rtic011 = s_curr_round(g_xmdc4_d[l_ac].xmjasite,g_xmda_m.xmda015,l_rtic.rtic011,'2')
   LET l_rtic.rtic012 = s_curr_round(g_xmdc4_d[l_ac].xmjasite,g_xmda_m.xmda015,l_rtic.rtic012,'1')
   LET l_rtic.rtic013 = s_curr_round(g_xmdc4_d[l_ac].xmjasite,g_xmda_m.xmda015,l_rtic.rtic013,'2')

   #取项序+1
   SELECT MAX(rticseq1)+1 INTO l_rtic.rticseq1
     FROM rtic_t
    WHERE rticent = l_rtic.rticent AND rticdocno = l_rtic.rticdocno AND rticseq = l_rtic.rticseq
   IF cl_null(l_rtic.rticseq1) THEN
      LET l_rtic.rticseq1 = 1
   END IF

  #INSERT INTO rtic_t VALUES (l_rtic.*)   #161104-00002#1 161107 by lori mark
   #161104-00002#1 161107 by lori add---(S)
   INSERT INTO rtic_t(rticent   ,rticsite  ,rticunit  ,
                      rticdocno ,rticseq   ,rticseq1  ,
                      rtic001   ,rtic002   ,rtic003   ,rtic004   ,rtic005   ,
                      rtic006   ,rtic007   ,rtic008   ,rtic009   ,rtic010   ,
                      rtic011   ,rtic012   ,rtic013   ,rtic014   ,rtic015   ,
                      rtic016   ,rtic017   ,rtic018   ,rtic019   ,rtic020   ,
                      rtic021   ,rtic022   ,rtic023   ,rtic024   ,rtic025   ,
                      rtic026   ,rtic027   ,rtic028   ,rtic029,
                      #161123-00042#1 Add By Ken 161128(S)
                      rticud001,rticud002,rticud003,rticud004,rticud005,
                      rticud006,rticud007,rticud008,rticud009,rticud010,
                      rticud011,rticud012,rticud013,rticud014,rticud015,
                      rticud016,rticud017,rticud018,rticud019,rticud020,
                      rticud021,rticud022,rticud023,rticud024,rticud025,
                      rticud026,rticud027,rticud028,rticud029,rticud030)
                      #161123-00042#1 Add By Ken 161128(E)
   VALUES(l_rtic.rticent   ,l_rtic.rticsite  ,l_rtic.rticunit  ,
          l_rtic.rticdocno ,l_rtic.rticseq   ,l_rtic.rticseq1  ,
          l_rtic.rtic001   ,l_rtic.rtic002   ,l_rtic.rtic003   ,l_rtic.rtic004   ,l_rtic.rtic005   ,
          l_rtic.rtic006   ,l_rtic.rtic007   ,l_rtic.rtic008   ,l_rtic.rtic009   ,l_rtic.rtic010   ,
          l_rtic.rtic011   ,l_rtic.rtic012   ,l_rtic.rtic013   ,l_rtic.rtic014   ,l_rtic.rtic015   ,
          l_rtic.rtic016   ,l_rtic.rtic017   ,l_rtic.rtic018   ,l_rtic.rtic019   ,l_rtic.rtic020   ,
          l_rtic.rtic021   ,l_rtic.rtic022   ,l_rtic.rtic023   ,l_rtic.rtic024   ,l_rtic.rtic025   ,
          l_rtic.rtic026   ,l_rtic.rtic027   ,l_rtic.rtic028   ,l_rtic.rtic029   ,
          #161123-00042#1 Add By Ken 161128(S)
          l_rtic.rticud001,l_rtic.rticud002,l_rtic.rticud003,l_rtic.rticud004,l_rtic.rticud005,
          l_rtic.rticud006,l_rtic.rticud007,l_rtic.rticud008,l_rtic.rticud009,l_rtic.rticud010,
          l_rtic.rticud011,l_rtic.rticud012,l_rtic.rticud013,l_rtic.rticud014,l_rtic.rticud015,
          l_rtic.rticud016,l_rtic.rticud017,l_rtic.rticud018,l_rtic.rticud019,l_rtic.rticud020,
          l_rtic.rticud021,l_rtic.rticud022,l_rtic.rticud023,l_rtic.rticud024,l_rtic.rticud025,
          l_rtic.rticud026,l_rtic.rticud027,l_rtic.rticud028,l_rtic.rticud029,l_rtic.rticud030)
          #161123-00042#1 Add By Ken 161128(E)          
   #161104-00002#1 161107 by lori add---(E)
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "Ins rtic_t(",cl_getmsg('adb-00420',g_lang),")" #手工改价产生折价明细时出错
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 欄位隱藏
# Memo...........:
# Usage..........: CALL adbt500_set_comp_visible_b()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/11/19 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION adbt500_set_comp_visible_b()
   
   CALL cl_set_comp_visible("xmja024,xmja024_desc",TRUE) #160513-00027#1 20160520 add by beckxie
   #160513-00027#1 20160520 mark by beckxie---S
   #IF cl_null(g_xmda_m.xmda022) THEN
   #   CALL cl_set_comp_visible("xmja024,xmja024_desc",TRUE) 
   #ELSE
   #   CALL cl_set_comp_visible("xmja024,xmja024_desc",FALSE) 
   #END IF 
   #160513-00027#1 20160520 mark by beckxie---E
END FUNCTION

PRIVATE FUNCTION adbt500_set_comp_no_visible_b()
   #160513-00027#1 20160520 add by beckxie---S
   IF NOT cl_null(g_xmda_m.xmda022) THEN
      CALL cl_set_comp_visible("xmja024,xmja024_desc",FALSE) 
   END IF
   #160513-00027#1 20160520 add by beckxie---E
END FUNCTION

################################################################################
# Descriptions...: 單據留置或更新留置時更新單身狀態
# Memo...........:
# Usage..........: CALL adbt500_upd_xmdc045(p_type)
#                  RETURNING r_success
# Input parameter: p_type     H:留置, UH:取消留置
# Return code....: r_success  成功或失敗
# Date & Author..: 2016/05/25 By Lori   #160525-00012#1
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt500_upd_xmdc045(p_type)
   DEFINE  p_type       LIKE  type_t.chr5
   DEFINE  r_success    LIKE  type_t.num5
   
   LET r_success = TRUE
   
   IF cl_null(p_type) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'sub-00280'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF 
  
   CASE p_type
     WHEN 'H'
       UPDATE xmdc_t
          SET xmdc045 = '5',
              xmdc053 = g_xmda_m.xmda032
        WHERE xmdcent = g_enterprise
          AND xmdcdocno = g_xmda_m.xmdadocno      
          AND xmdc045 = '1'      
       
     WHEN 'UH'
       UPDATE xmdc_t
          SET xmdc045 = '1',
              xmdc053 = ''
        WHERE xmdcent = g_enterprise
          AND xmdcdocno = g_xmda_m.xmdadocno      
          AND xmdc045 = '5'       
     OTHERWISE
       RETURN r_success
   END CASE


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success      
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 依計價數量轉換期他單位的數量
# Memo...........:
# Usage..........: CALL adbt500_xmja018_convert()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2016/06/06 By Lori   #160601-00027#1
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt500_xmja018_convert()
   DEFINE l_rate       LIKE inaj_t.inaj014
   DEFINE l_success    LIKE type_t.num5

   IF cl_null(g_xmdc4_d[l_ac].xmja018) OR cl_null(g_xmdc4_d[l_ac].xmja017) THEN
      RETURN
   END IF

   #包裝數量
   IF NOT cl_null(g_xmdc4_d[l_ac].xmja011) THEN
      CALL s_aooi250_convert_qty(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja017,g_xmdc4_d[l_ac].xmja011,g_xmdc4_d[l_ac].xmja018)
         RETURNING l_success,g_xmdc4_d[l_ac].xmja012
   END IF

   #銷售數量
   IF NOT cl_null(g_xmdc4_d[l_ac].xmja013) THEN
      CALL s_aooi250_convert_qty(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja017,g_xmdc4_d[l_ac].xmja013,g_xmdc4_d[l_ac].xmja018)
         RETURNING l_success,g_xmdc4_d[l_ac].xmja014
   END IF

   #參考單位
   IF NOT cl_null(g_xmdc4_d[l_ac].xmja015) THEN
      CALL s_aooi250_convert_qty(g_xmdc4_d[l_ac].xmja003,g_xmdc4_d[l_ac].xmja017,g_xmdc4_d[l_ac].xmja015,g_xmdc4_d[l_ac].xmja018)
         RETURNING l_success,g_xmdc4_d[l_ac].xmja016
   END IF
END FUNCTION

################################################################################
# Descriptions...: 配送仓可用库存计算
# Memo...........:
# Usage..........: CALL adbt500_xmja041_count(p_imaa001,p_site,p_imay012,p_inag003,p_xmjasite,p_xmja040,p_xmja039,p_xmja038,p_xmja037)
#                  RETURNING 回传参数
# Input parameter: p_imaa001 料号
#                : p_site    配送中心
#                : p_imay012 产品特征
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 20161029 By geza
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt500_xmja041_count(p_imaa001,p_site,p_imay012,p_inag003,p_xmjasite,p_xmja040,p_xmja039,p_xmja038,p_xmja037)
DEFINE p_imaa001             LIKE imaa_t.imaa001     #料号
DEFINE p_site                LIKE pmda_t.pmdasite    #配送中心
DEFINE p_imay012             LIKE imay_t.imay012     #产品特征
DEFINE l_amount              LIKE inag_t.inag009     #数量   
DEFINE l_inag009             LIKE inag_t.inag009     #数量
DEFINE p_inag003             LIKE inag_t.inag003     #库存管理特征
DEFINE p_xmjasite            LIKE xmja_t.xmjasite    #需求组织
DEFINE p_inag004             LIKE inag_t.inag004     #库位
DEFINE p_inag007             LIKE inag_t.inag007     #库存单位
DEFINE l_inaasite            LIKE inaa_t.inaasite
DEFINE p_xmja037             LIKE xmja_t.xmja037
DEFINE p_xmja038             LIKE xmja_t.xmja038
DEFINE p_xmja039             LIKE xmja_t.xmja039
DEFINE p_xmja040             LIKE xmja_t.xmja040


   #add by geza 20161208 #161124-00039#1(S)
   CALL s_adbi260_inv_scope_def(p_site,                          
                                p_imaa001,g_xmda_m.xmda023,
                                p_xmja040,p_xmja039,
                                p_xmja038,p_xmja037)
                  RETURNING l_inaasite,p_inag004         
   #抓库存单位
   LET p_inag007 =''
   SELECT imaa104 INTO p_inag007
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = p_imaa001 
   #add by geza 20161208 #161124-00039#1(E)
   
   LET l_amount = 0
   SELECT SUM(inag009) INTO l_amount
     FROM inag_t
    WHERE inagent = g_enterprise
      AND inag001 = p_imaa001
      AND inag002 = p_imay012
      AND inag004 = p_inag004 #add by geza 201611206 161124-00039#1
      AND inag007 = p_inag007 #add by geza 201611206 161124-00039#1
      AND inagsite = p_site
      #AND EXISTS (SELECT 1 FROM inaa_t WHERE inagent = inaaent AND inaasite = p_site AND inaa001 = inag004 AND inaa008 = 'Y' AND inaastus = 'Y' ) #mark by geza 20161208 #161124-00039#1
      
   #CALL s_get_inag009_valid(p_site,p_imaa001,p_imay012,l_amount,'2') RETURNING l_inag009  #mark by geza 20161208 #161124-00039#1
   CALL s_get_inag009_valid(p_xmjasite,p_imaa001,p_imay012,l_amount,'2',p_inag003,p_inag004,p_inag007,p_site) RETURNING l_inag009 #add by geza 20161208 #161124-00039#1
   
   RETURN  l_inag009  
END FUNCTION

################################################################################
# Descriptions...: 配送仓预计可用量
# Memo...........:
# Usage..........: CALL adbt500_inas011_count(p_xmja003,p_xmja004,p_xmdd004,p_xmddunit,p_xmdd213)
#                  RETURNING r_amount
# Input parameter: p_xmja003     商品编号
#                : p_xmja004     商品特征
#                : p_xmdd004     单位
#                : p_xmddunit    发货组织
#                : p_xmdd213     发货仓库
# Return code....: r_amount      发货仓预计可用量
# Date & Author..: #170116-00018#3 20170117 by 08172 
# Modify.........:
################################################################################
PRIVATE FUNCTION adbt500_inas011_count(p_xmja003,p_xmja004,p_xmdd004,p_xmddunit,p_xmdd213)
   DEFINE p_xmja003     LIKE xmja_t.xmja003
   DEFINE p_xmja004     LIKE xmja_t.xmja004
   DEFINE p_xmdd004     LIKE xmdd_t.xmdd004
   DEFINE p_xmddunit    LIKE xmdd_t.xmddunit
   DEFINE p_xmdd213     LIKE xmdd_t.xmdd213
   DEFINE r_amount      LIKE inag_t.inag009
   DEFINE l_sql         STRING
   DEFINE l_inas011     LIKE inas_t.inas011
   DEFINE l_amount      LIKE inag_t.inag009
   
   #抓库存
   LET l_amount = 0
   SELECT SUM(inag009) INTO l_amount
     FROM inag_t
    WHERE inagent = g_enterprise
      AND inag001 = p_xmja003
      AND inag002 = p_xmja004
      AND inag004 = p_xmdd213 
      AND inag007 = p_xmdd004 
      AND inagsite = p_xmddunit 
      
   LET l_sql = " SELECT COALESCE(SUM(inas011),0) ",
               "   FROM inas_t",
               "  WHERE inasent = ",g_enterprise,
               "    AND inassite = '",p_xmddunit,"'",
               "    AND inas009 = '",p_xmja003,"'",
               "    AND inas010 = '",p_xmja004,"'",
               "    AND inas013 = '",p_xmdd004,"'"
   PREPARE adbt500_inas011_count_pr FROM l_sql
   EXECUTE adbt500_inas011_count_pr INTO l_inas011   
   LET r_amount = l_amount-l_inas011
   
   RETURN r_amount
END FUNCTION

 
{</section>}
 
