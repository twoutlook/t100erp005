#該程式未解開Section, 採用最新樣板產出!
{<section id="axrt530.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0002(2016-08-09 15:22:02), PR版次:0002(2016-10-12 15:44:14)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000023
#+ Filename...: axrt530
#+ Description: 銷售信用狀押匯作業
#+ Creator....: 02097(2016-04-26 11:38:11)
#+ Modifier...: 03080 -SD/PR- 03080
 
{</section>}
 
{<section id="axrt530.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
#Memos
#160518-00037#5   160809 By albireo  axrt530_v2修改   
#160818-00017#45  2016-08-30 By 08734 删除修改未重新判断状态码
#160905-00002#2   2016/09/05 By Hans  SQL無ENT補上
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_xrgf_m        RECORD
       xrgfcomp LIKE xrgf_t.xrgfcomp, 
   xrgfcomp_desc LIKE type_t.chr80, 
   xrgf002 LIKE xrgf_t.xrgf002, 
   xrgf002_desc LIKE type_t.chr80, 
   xrga006 LIKE xrga_t.xrga006, 
   xrgfdocno LIKE xrgf_t.xrgfdocno, 
   xrgfdocdt LIKE xrgf_t.xrgfdocdt, 
   xrgf009 LIKE xrgf_t.xrgf009, 
   xrgf001 LIKE xrgf_t.xrgf001, 
   xrgf003 LIKE xrgf_t.xrgf003, 
   xrgf003_desc LIKE type_t.chr80, 
   xrga001 LIKE xrga_t.xrga001, 
   xrgf010 LIKE xrgf_t.xrgf010, 
   xrga025 LIKE xrga_t.xrga025, 
   xrgfstus LIKE xrgf_t.xrgfstus, 
   xrgfownid LIKE xrgf_t.xrgfownid, 
   xrgfownid_desc LIKE type_t.chr80, 
   xrgfowndp LIKE xrgf_t.xrgfowndp, 
   xrgfowndp_desc LIKE type_t.chr80, 
   xrgfcrtid LIKE xrgf_t.xrgfcrtid, 
   xrgfcrtid_desc LIKE type_t.chr80, 
   xrgfcrtdp LIKE xrgf_t.xrgfcrtdp, 
   xrgfcrtdp_desc LIKE type_t.chr80, 
   xrgfcrtdt LIKE xrgf_t.xrgfcrtdt, 
   xrgfmodid LIKE xrgf_t.xrgfmodid, 
   xrgfmodid_desc LIKE type_t.chr80, 
   xrgfmoddt LIKE xrgf_t.xrgfmoddt, 
   xrgfcnfid LIKE xrgf_t.xrgfcnfid, 
   xrgfcnfid_desc LIKE type_t.chr80, 
   xrgfcnfdt LIKE xrgf_t.xrgfcnfdt, 
   xrga007 LIKE xrga_t.xrga007, 
   xrga003 LIKE xrga_t.xrga003, 
   xrga011 LIKE xrga_t.xrga011, 
   xrgf100 LIKE xrgf_t.xrgf100, 
   xrga103 LIKE xrga_t.xrga103, 
   xrgf007 LIKE xrgf_t.xrgf007, 
   xrgf004 LIKE xrgf_t.xrgf004, 
   xrgf004_desc LIKE type_t.chr80, 
   xrgf103 LIKE xrgf_t.xrgf103, 
   xrgf011 LIKE xrgf_t.xrgf011, 
   xrgf008 LIKE xrgf_t.xrgf008, 
   xrgf012 LIKE xrgf_t.xrgf012, 
   xrgf012_desc LIKE type_t.chr80, 
   xrgf006 LIKE xrgf_t.xrgf006, 
   xrgf013 LIKE xrgf_t.xrgf013, 
   xrgf013_desc LIKE type_t.chr80, 
   xrgf104 LIKE xrgf_t.xrgf104, 
   l_glaa001 LIKE type_t.chr10, 
   xrgf101 LIKE xrgf_t.xrgf101, 
   xrgf113 LIKE xrgf_t.xrgf113, 
   xrgf005 LIKE xrgf_t.xrgf005
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_apgc_d        RECORD
       apgcseq LIKE apgc_t.apgcseq, 
   apgcorga LIKE apgc_t.apgcorga, 
   apgcorga_desc LIKE type_t.chr500, 
   apgc001 LIKE apgc_t.apgc001, 
   apgc001_desc LIKE type_t.chr500, 
   apgc014 LIKE apgc_t.apgc014, 
   apgc100 LIKE apgc_t.apgc100, 
   apgc101 LIKE apgc_t.apgc101, 
   apgc006 LIKE apgc_t.apgc006, 
   oodb006 LIKE type_t.chr500, 
   oodb005 LIKE type_t.chr500, 
   apgc007 LIKE apgc_t.apgc007, 
   apgc008 LIKE apgc_t.apgc008, 
   apgc009 LIKE apgc_t.apgc009, 
   apgc010 LIKE apgc_t.apgc010, 
   apgc011 LIKE apgc_t.apgc011, 
   apgc103 LIKE apgc_t.apgc103, 
   apgc104 LIKE apgc_t.apgc104, 
   apgc105 LIKE apgc_t.apgc105, 
   apgc113 LIKE apgc_t.apgc113, 
   apgc114 LIKE apgc_t.apgc114, 
   apgc115 LIKE apgc_t.apgc115, 
   apgc015 LIKE apgc_t.apgc015, 
   apgc015_desc LIKE type_t.chr500, 
   apgc016 LIKE apgc_t.apgc016, 
   apgc016_desc LIKE type_t.chr100, 
   apgc004 LIKE apgc_t.apgc004, 
   apgc004_desc LIKE type_t.chr500, 
   apgc013 LIKE apgc_t.apgc013
       END RECORD
PRIVATE TYPE type_g_apgc2_d RECORD
       xrgiseq LIKE type_t.num10, 
   xrgi002 LIKE type_t.chr20, 
   xrgi003 LIKE type_t.dat, 
   xrgi100 LIKE type_t.chr10, 
   xrgi101 LIKE type_t.num26_10, 
   xrgi103 LIKE type_t.num20_6, 
   xrgi113 LIKE type_t.num20_6
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_xrgfcomp LIKE xrgf_t.xrgfcomp,
   b_xrgfcomp_desc LIKE type_t.chr80,
      b_xrgfdocno LIKE xrgf_t.xrgfdocno,
      b_xrgf001 LIKE xrgf_t.xrgf001,
      b_xrgfdocdt LIKE xrgf_t.xrgfdocdt,
      b_xrgf004 LIKE xrgf_t.xrgf004,
   b_xrgf004_desc LIKE type_t.chr80,
      b_xrgf008 LIKE xrgf_t.xrgf008
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_ooef019        LIKE ooef_t.ooef019
DEFINE g_glaald         LIKE glaa_t.glaald
DEFINE g_glaa001        LIKE glaa_t.glaa001
DEFINE g_glaa004        LIKE glaa_t.glaa004
DEFINE g_glaa005        LIKE glaa_t.glaa005
DEFINE g_glaa024        LIKE glaa_t.glaa024
DEFINE g_wc_cs_ld       STRING
DEFINE g_wc_cs_orga     STRING
DEFINE g_wc_cs_comp     STRING
#160518-00037#5-----s
DEFINE g_sql_bank       STRING
DEFINE g_parr   DYNAMIC ARRAY OF RECORD
                  chr     LIKE type_t.chr1000,
                  dat     LIKE type_t.dat
                  END RECORD
#160518-00037#5-----e
#end add-point
       
#模組變數(Module Variables)
DEFINE g_xrgf_m          type_g_xrgf_m
DEFINE g_xrgf_m_t        type_g_xrgf_m
DEFINE g_xrgf_m_o        type_g_xrgf_m
DEFINE g_xrgf_m_mask_o   type_g_xrgf_m #轉換遮罩前資料
DEFINE g_xrgf_m_mask_n   type_g_xrgf_m #轉換遮罩後資料
 
   DEFINE g_xrgfcomp_t LIKE xrgf_t.xrgfcomp
DEFINE g_xrgfdocno_t LIKE xrgf_t.xrgfdocno
DEFINE g_xrgf001_t LIKE xrgf_t.xrgf001
 
 
DEFINE g_apgc_d          DYNAMIC ARRAY OF type_g_apgc_d
DEFINE g_apgc_d_t        type_g_apgc_d
DEFINE g_apgc_d_o        type_g_apgc_d
DEFINE g_apgc_d_mask_o   DYNAMIC ARRAY OF type_g_apgc_d #轉換遮罩前資料
DEFINE g_apgc_d_mask_n   DYNAMIC ARRAY OF type_g_apgc_d #轉換遮罩後資料
DEFINE g_apgc2_d          DYNAMIC ARRAY OF type_g_apgc2_d
DEFINE g_apgc2_d_t        type_g_apgc2_d
DEFINE g_apgc2_d_o        type_g_apgc2_d
DEFINE g_apgc2_d_mask_o   DYNAMIC ARRAY OF type_g_apgc2_d #轉換遮罩前資料
DEFINE g_apgc2_d_mask_n   DYNAMIC ARRAY OF type_g_apgc2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="axrt530.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axr","")
 
   #add-point:作業初始化 name="main.init"
   CALL s_aap_create_multi_bill_perod_tmp()                    #新增多帳期FUNCTION用的TEMP TABLE
   CALL s_fin_create_account_center_tmp()                      #展組織下階成員所需之暫存檔 
   CALL s_aapp330_cre_tmp() RETURNING g_sub_success
   CALL s_fin_azzi800_sons_query(g_today)
   CALL s_fin_account_center_ld_str() RETURNING g_wc_cs_ld
   CALL s_fin_get_wc_str(g_wc_cs_ld)  RETURNING g_wc_cs_ld
   CALL s_fin_account_center_sons_str() RETURNING g_wc_cs_orga
   CALL s_fin_get_wc_str(g_wc_cs_orga)  RETURNING g_wc_cs_orga
   CALL s_fin_account_center_comp_str() RETURNING g_wc_cs_comp
   CALL s_fin_get_wc_str(g_wc_cs_comp)  RETURNING g_wc_cs_comp
   
   #160518-00037#5-----s
   CALL s_anmi120_get_bank_account_sql(g_user,g_dept)RETURNING g_sub_success,g_sql_bank
   #160518-00037#5-----e
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT xrgfcomp,'',xrgf002,'','',xrgfdocno,xrgfdocdt,xrgf009,xrgf001,xrgf003, 
       '','',xrgf010,'',xrgfstus,xrgfownid,'',xrgfowndp,'',xrgfcrtid,'',xrgfcrtdp,'',xrgfcrtdt,xrgfmodid, 
       '',xrgfmoddt,xrgfcnfid,'',xrgfcnfdt,'','','',xrgf100,'',xrgf007,xrgf004,'',xrgf103,xrgf011,xrgf008, 
       xrgf012,'',xrgf006,xrgf013,'',xrgf104,'',xrgf101,xrgf113,xrgf005", 
                      " FROM xrgf_t",
                      " WHERE xrgfent= ? AND xrgfcomp=? AND xrgfdocno=? AND xrgf001=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axrt530_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.xrgfcomp,t0.xrgf002,t0.xrgfdocno,t0.xrgfdocdt,t0.xrgf009,t0.xrgf001, 
       t0.xrgf003,t0.xrgf010,t0.xrgfstus,t0.xrgfownid,t0.xrgfowndp,t0.xrgfcrtid,t0.xrgfcrtdp,t0.xrgfcrtdt, 
       t0.xrgfmodid,t0.xrgfmoddt,t0.xrgfcnfid,t0.xrgfcnfdt,t0.xrgf100,t0.xrgf007,t0.xrgf004,t0.xrgf103, 
       t0.xrgf011,t0.xrgf008,t0.xrgf012,t0.xrgf006,t0.xrgf013,t0.xrgf104,t0.xrgf101,t0.xrgf113,t0.xrgf005, 
       t1.ooefl003 ,t2.ooag011 ,t3.pmaal004 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011 ,t7.ooefl003 ,t8.ooag011 , 
       t9.ooag011 ,t10.nmabl003 ,t11.nmajl003 ,t12.nmail004",
               " FROM xrgf_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.xrgfcomp AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.xrgf002  ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.xrgf003 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=t0.xrgfownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=t0.xrgfowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=t0.xrgfcrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent="||g_enterprise||" AND t7.ooefl001=t0.xrgfcrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent="||g_enterprise||" AND t8.ooag001=t0.xrgfmodid  ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent="||g_enterprise||" AND t9.ooag001=t0.xrgfcnfid  ",
               " LEFT JOIN nmabl_t t10 ON t10.nmablent="||g_enterprise||" AND t10.nmabl001=t0.xrgf004 AND t10.nmabl002='"||g_dlang||"' ",
               " LEFT JOIN nmajl_t t11 ON t11.nmajlent="||g_enterprise||" AND t11.nmajl001=t0.xrgf012 AND t11.nmajl002='"||g_dlang||"' ",
               " LEFT JOIN nmail_t t12 ON t12.nmailent="||g_enterprise||" AND t12.nmail001=t0.xrgf013 AND t12.nmail002='"||g_dlang||"' ",
 
               " WHERE t0.xrgfent = " ||g_enterprise|| " AND t0.xrgfcomp = ? AND t0.xrgfdocno = ? AND t0.xrgf001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE axrt530_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axrt530 WITH FORM cl_ap_formpath("axr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axrt530_init()   
 
      #進入選單 Menu (="N")
      CALL axrt530_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axrt530
      
   END IF 
   
   CLOSE axrt530_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   DROP TABLE s_aap_tmp1            #多帳期
   DROP TABLE s_voucher_tmp         #分錄底稿
   DROP TABLE s_fin_tmp1
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="axrt530.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axrt530_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('xrgfstus','13','Y,N,X')
 
      CALL cl_set_combo_scc('xrga006','8517') 
   CALL cl_set_combo_scc('xrga007','8515') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL cl_set_combo_scc('apgc011','9719')
   
   #160518-00037#5-----s
   CALL cl_set_combo_scc('xrgf006','8057')
   #160518-00037#5-----e
   #end add-point
   
   #初始化搜尋條件
   CALL axrt530_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="axrt530.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION axrt530_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   DEFINE g_rep_wc               STRING
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axrt530_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_xrgf_m.* TO NULL
         CALL g_apgc_d.clear()
         CALL g_apgc2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL axrt530_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL axrt530_fetch('') # reload data
               LET l_ac = 1
               CALL axrt530_ui_detailshow() #Setting the current row 
         
               CALL axrt530_idx_chk()
               #NEXT FIELD apgcseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_apgc_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axrt530_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL axrt530_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_apgc2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL axrt530_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL axrt530_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL axrt530_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axrt530_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axrt530_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axrt530_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL axrt530_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL axrt530_set_act_visible()   
            CALL axrt530_set_act_no_visible()
            IF NOT (g_xrgf_m.xrgfcomp IS NULL
              OR g_xrgf_m.xrgfdocno IS NULL
              OR g_xrgf_m.xrgf001 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " xrgfent = " ||g_enterprise|| " AND",
                                  " xrgfcomp = '", g_xrgf_m.xrgfcomp, "' "
                                  ," AND xrgfdocno = '", g_xrgf_m.xrgfdocno, "' "
                                  ," AND xrgf001 = '", g_xrgf_m.xrgf001, "' "
 
               #填到對應位置
               CALL axrt530_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xrgf_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "apgc_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xrgi_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL axrt530_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "xrgf_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "apgc_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "xrgi_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL axrt530_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL axrt530_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL axrt530_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL axrt530_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axrt530_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL axrt530_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axrt530_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL axrt530_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axrt530_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL axrt530_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axrt530_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL axrt530_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axrt530_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_apgc_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_apgc2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD apgcseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axrt530_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axrt530_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axrt530_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axrt530_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               LET g_rep_wc = " xrgfent = '",g_enterprise,"' AND xrgfcomp = '",g_xrgf_m.xrgfcomp,"' AND xrgfdocno = '",g_xrgf_m.xrgfdocno,"' "
               #END add-point
               &include "erp/axr/axrt530_rep.4gl"
               #add-point:ON ACTION output.after
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axrt530_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axrt530_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_xrgf002
            LET g_action_choice="prog_xrgf002"
            IF cl_auth_chk_act("prog_xrgf002") THEN
               
               #add-point:ON ACTION prog_xrgf002 name="menu.prog_xrgf002"
               #應用 a45 樣板自動產生(Version:3)
               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",g_xrgf_m.xrgf002)
 



               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_xrgf009
            LET g_action_choice="prog_xrgf009"
            IF cl_auth_chk_act("prog_xrgf009") THEN
               
               #add-point:ON ACTION prog_xrgf009 name="menu.prog_xrgf009"
               #應用 a41 樣板自動產生(Version:3)
               #使用JSON格式組合參數與作業編號(串查)
               INITIALIZE la_param.* TO NULL  
               #160518-00037#5-----s               
               LET la_param.prog     = 'axrt510'
               LET la_param.param[1] = g_xrgf_m.xrgfcomp
               LET la_param.param[2] = g_xrgf_m.xrgf009
               #160518-00037#5-----e
               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_aapt301
            LET g_action_choice="prog_aapt301"
            IF cl_auth_chk_act("prog_aapt301") THEN
               
               #add-point:ON ACTION prog_aapt301 name="menu.prog_aapt301"
               #應用 a41 樣板自動產生(Version:3)
               #使用JSON格式組合參數與作業編號(串查)
               INITIALIZE la_param.* TO NULL
               #160518-00037#5-----s
               LET la_param.prog     = 'axrt560'
               LET la_param.param[1] = g_glaald
               LET la_param.param[2] = g_xrgf_m.xrgf010
               #160518-00037#5-----e
               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)
 



               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL axrt530_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axrt530_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axrt530_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_xrgf_m.xrgfdocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="axrt530.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axrt530_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   IF NOT cl_null(g_wc_cs_comp) THEN
      LET l_wc = l_wc , " AND xrgfcomp IN ",g_wc_cs_comp
   END IF  
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT xrgfcomp,xrgfdocno,xrgf001 ",
                      " FROM xrgf_t ",
                      " ",
                      " LEFT JOIN apgc_t ON apgcent = xrgfent AND xrgfcomp = apgccomp AND xrgfdocno = apgcdocno AND xrgf001 = apgc900 ", "  ",
                      #add-point:browser_fill段sql(apgc_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
                      " LEFT JOIN xrgi_t ON xrgient = xrgfent AND xrgfcomp = xrgicomp AND xrgfdocno = xrgidocno AND xrgf001 = xrgi001", "  ",
                      #add-point:browser_fill段sql(xrgi_t1) name="browser_fill.cnt.join.xrgi_t1"
                      
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " ",                      
 
 
 
                      " WHERE xrgfent = " ||g_enterprise|| " AND apgcent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("xrgf_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT xrgfcomp,xrgfdocno,xrgf001 ",
                      " FROM xrgf_t ", 
                      "  ",
                      "  ",
                      " WHERE xrgfent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("xrgf_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_xrgf_m.* TO NULL
      CALL g_apgc_d.clear()        
      CALL g_apgc2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.xrgfcomp,t0.xrgfdocno,t0.xrgf001,t0.xrgfdocdt,t0.xrgf004,t0.xrgf008 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xrgfstus,t0.xrgfcomp,t0.xrgfdocno,t0.xrgf001,t0.xrgfdocdt,t0.xrgf004, 
          t0.xrgf008,t1.ooefl003 ,t2.nmabl003 ",
                  " FROM xrgf_t t0",
                  "  ",
                  "  LEFT JOIN apgc_t ON apgcent = xrgfent AND xrgfcomp = apgccomp AND xrgfdocno = apgcdocno AND xrgf001 = apgc900 ", "  ", 
                  #add-point:browser_fill段sql(apgc_t1) name="browser_fill.join.apgc_t1"
                  
                  #end add-point
                  "  LEFT JOIN xrgi_t ON xrgient = xrgfent AND xrgfcomp = xrgicomp AND xrgfdocno = xrgidocno AND xrgf001 = xrgi001", "  ", 
                  #add-point:browser_fill段sql(xrgi_t1) name="browser_fill.join.xrgi_t1"
                  
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
 
 
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.xrgfcomp AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN nmabl_t t2 ON t2.nmablent="||g_enterprise||" AND t2.nmabl001=t0.xrgf004 AND t2.nmabl002='"||g_dlang||"' ",
 
                  " WHERE t0.xrgfent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("xrgf_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.xrgfstus,t0.xrgfcomp,t0.xrgfdocno,t0.xrgf001,t0.xrgfdocdt,t0.xrgf004, 
          t0.xrgf008,t1.ooefl003 ,t2.nmabl003 ",
                  " FROM xrgf_t t0",
                  "  ",
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.xrgfcomp AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN nmabl_t t2 ON t2.nmablent="||g_enterprise||" AND t2.nmabl001=t0.xrgf004 AND t2.nmabl002='"||g_dlang||"' ",
 
                  " WHERE t0.xrgfent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("xrgf_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY xrgfcomp,xrgfdocno,xrgf001 ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"xrgf_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_xrgfcomp,g_browser[g_cnt].b_xrgfdocno, 
          g_browser[g_cnt].b_xrgf001,g_browser[g_cnt].b_xrgfdocdt,g_browser[g_cnt].b_xrgf004,g_browser[g_cnt].b_xrgf008, 
          g_browser[g_cnt].b_xrgfcomp_desc,g_browser[g_cnt].b_xrgf004_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL axrt530_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_xrgfcomp) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="axrt530.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION axrt530_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_xrgf_m.xrgfcomp = g_browser[g_current_idx].b_xrgfcomp   
   LET g_xrgf_m.xrgfdocno = g_browser[g_current_idx].b_xrgfdocno   
   LET g_xrgf_m.xrgf001 = g_browser[g_current_idx].b_xrgf001   
 
   EXECUTE axrt530_master_referesh USING g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001 INTO g_xrgf_m.xrgfcomp, 
       g_xrgf_m.xrgf002,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt,g_xrgf_m.xrgf009,g_xrgf_m.xrgf001,g_xrgf_m.xrgf003, 
       g_xrgf_m.xrgf010,g_xrgf_m.xrgfstus,g_xrgf_m.xrgfownid,g_xrgf_m.xrgfowndp,g_xrgf_m.xrgfcrtid,g_xrgf_m.xrgfcrtdp, 
       g_xrgf_m.xrgfcrtdt,g_xrgf_m.xrgfmodid,g_xrgf_m.xrgfmoddt,g_xrgf_m.xrgfcnfid,g_xrgf_m.xrgfcnfdt, 
       g_xrgf_m.xrgf100,g_xrgf_m.xrgf007,g_xrgf_m.xrgf004,g_xrgf_m.xrgf103,g_xrgf_m.xrgf011,g_xrgf_m.xrgf008, 
       g_xrgf_m.xrgf012,g_xrgf_m.xrgf006,g_xrgf_m.xrgf013,g_xrgf_m.xrgf104,g_xrgf_m.xrgf101,g_xrgf_m.xrgf113, 
       g_xrgf_m.xrgf005,g_xrgf_m.xrgfcomp_desc,g_xrgf_m.xrgf002_desc,g_xrgf_m.xrgf003_desc,g_xrgf_m.xrgfownid_desc, 
       g_xrgf_m.xrgfowndp_desc,g_xrgf_m.xrgfcrtid_desc,g_xrgf_m.xrgfcrtdp_desc,g_xrgf_m.xrgfmodid_desc, 
       g_xrgf_m.xrgfcnfid_desc,g_xrgf_m.xrgf004_desc,g_xrgf_m.xrgf012_desc,g_xrgf_m.xrgf013_desc
   
   CALL axrt530_xrgf_t_mask()
   CALL axrt530_show()
      
END FUNCTION
 
{</section>}
 
{<section id="axrt530.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION axrt530_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axrt530_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_xrgfcomp = g_xrgf_m.xrgfcomp 
         AND g_browser[l_i].b_xrgfdocno = g_xrgf_m.xrgfdocno 
         AND g_browser[l_i].b_xrgf001 = g_xrgf_m.xrgf001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION axrt530_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   DEFINE l_ooef017     LIKE ooef_t.ooef017
   DEFINE l_ooef019     LIKE ooef_t.ooef019
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_xrgf_m.* TO NULL
   CALL g_apgc_d.clear()        
   CALL g_apgc2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON xrgfcomp,xrgf002,xrgfdocno,xrgfdocdt,xrgf009,xrgf001,xrgf003,xrgf010, 
          xrgfstus,xrgfownid,xrgfowndp,xrgfcrtid,xrgfcrtdp,xrgfcrtdt,xrgfmodid,xrgfmoddt,xrgfcnfid,xrgfcnfdt, 
          xrgf100,xrgf007,xrgf004,xrgf103,xrgf011,xrgf008,xrgf012,xrgf006,xrgf013,xrgf104,xrgf101,xrgf113, 
          xrgf005
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<xrgfcrtdt>>----
         AFTER FIELD xrgfcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<xrgfmoddt>>----
         AFTER FIELD xrgfmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xrgfcnfdt>>----
         AFTER FIELD xrgfcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xrgfpstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.xrgfcomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgfcomp
            #add-point:ON ACTION controlp INFIELD xrgfcomp name="construct.c.xrgfcomp"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " ooef003 = 'Y' AND ooef001 IN ",g_wc_cs_comp
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgfcomp  #顯示到畫面上
            NEXT FIELD xrgfcomp                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfcomp
            #add-point:BEFORE FIELD xrgfcomp name="construct.b.xrgfcomp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgfcomp
            
            #add-point:AFTER FIELD xrgfcomp name="construct.a.xrgfcomp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgf002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf002
            #add-point:ON ACTION controlp INFIELD xrgf002 name="construct.c.xrgf002"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgf002  #顯示到畫面上
            NEXT FIELD xrgf002                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf002
            #add-point:BEFORE FIELD xrgf002 name="construct.b.xrgf002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf002
            
            #add-point:AFTER FIELD xrgf002 name="construct.a.xrgf002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgfdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgfdocno
            #add-point:ON ACTION controlp INFIELD xrgfdocno name="construct.c.xrgfdocno"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            #160518-00037#5 mark-----s
            #INITIALIZE g_qryparam.* TO NULL
            #LET g_qryparam.state = 'c' 
            #LET g_qryparam.reqry = FALSE
            #CALL q_xrgadocno()                           #呼叫開窗
            #DISPLAY g_qryparam.return1 TO xrgfdocno  #顯示到畫面上
            #NEXT FIELD xrgfdocno                     #返回原欄位
            #160518-00037#5 mark-----e
    
            #160518-00037#5-----s
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xrgfdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgfdocno  #顯示到畫面上
            NEXT FIELD xrgfdocno             
            #160518-00037#5-----e


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfdocno
            #add-point:BEFORE FIELD xrgfdocno name="construct.b.xrgfdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgfdocno
            
            #add-point:AFTER FIELD xrgfdocno name="construct.a.xrgfdocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfdocdt
            #add-point:BEFORE FIELD xrgfdocdt name="construct.b.xrgfdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgfdocdt
            
            #add-point:AFTER FIELD xrgfdocdt name="construct.a.xrgfdocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgfdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgfdocdt
            #add-point:ON ACTION controlp INFIELD xrgfdocdt name="construct.c.xrgfdocdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xrgf009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf009
            #add-point:ON ACTION controlp INFIELD xrgf009 name="construct.c.xrgf009"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            #160518-00037#5 mark-----s
            #INITIALIZE g_qryparam.* TO NULL
            #LET g_qryparam.state = 'c' 
            #LET g_qryparam.reqry = FALSE
            #CALL q_xrdadocno()                           #呼叫開窗
            #DISPLAY g_qryparam.return1 TO xrgf009  #顯示到畫面上
            #NEXT FIELD xrgf009                    #返回原欄位
            #160518-00037#5 mark-----e
            
            #160518-00037#5-----s
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " xrgacomp IN ",g_wc_cs_comp CLIPPED
            CALL q_xrgadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgf009  #顯示到畫面上
            NEXT FIELD xrgf009             #返回原欄位
            #160518-00037#5-----e


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf009
            #add-point:BEFORE FIELD xrgf009 name="construct.b.xrgf009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf009
            
            #add-point:AFTER FIELD xrgf009 name="construct.a.xrgf009"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf001
            #add-point:BEFORE FIELD xrgf001 name="construct.b.xrgf001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf001
            
            #add-point:AFTER FIELD xrgf001 name="construct.a.xrgf001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgf001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf001
            #add-point:ON ACTION controlp INFIELD xrgf001 name="construct.c.xrgf001"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xrgf003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf003
            #add-point:ON ACTION controlp INFIELD xrgf003 name="construct.c.xrgf003"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            #160518-00037#5-----s
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "('1','3')"
            CALL q_pmaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgf003  #顯示到畫面上
            NEXT FIELD xrgf003                     #返回原欄位
            #160518-00037#5-----e
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf003
            #add-point:BEFORE FIELD xrgf003 name="construct.b.xrgf003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf003
            
            #add-point:AFTER FIELD xrgf003 name="construct.a.xrgf003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgf010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf010
            #add-point:ON ACTION controlp INFIELD xrgf010 name="construct.c.xrgf010"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            #CALL q_apcadocno()                           #呼叫開窗        #160518-00037#5 mark
            LET g_qryparam.where = "xrca001 = '31' AND xrca016 = '43' "   #160518-00037#5
            CALL q_xrcadocno()                                            #160518-00037#5 add
            DISPLAY g_qryparam.return1 TO xrgf010  #顯示到畫面上
            NEXT FIELD xrgf010                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf010
            #add-point:BEFORE FIELD xrgf010 name="construct.b.xrgf010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf010
            
            #add-point:AFTER FIELD xrgf010 name="construct.a.xrgf010"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfstus
            #add-point:BEFORE FIELD xrgfstus name="construct.b.xrgfstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgfstus
            
            #add-point:AFTER FIELD xrgfstus name="construct.a.xrgfstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgfstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgfstus
            #add-point:ON ACTION controlp INFIELD xrgfstus name="construct.c.xrgfstus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xrgfownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgfownid
            #add-point:ON ACTION controlp INFIELD xrgfownid name="construct.c.xrgfownid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgfownid  #顯示到畫面上
            NEXT FIELD xrgfownid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfownid
            #add-point:BEFORE FIELD xrgfownid name="construct.b.xrgfownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgfownid
            
            #add-point:AFTER FIELD xrgfownid name="construct.a.xrgfownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgfowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgfowndp
            #add-point:ON ACTION controlp INFIELD xrgfowndp name="construct.c.xrgfowndp"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgfowndp  #顯示到畫面上
            NEXT FIELD xrgfowndp                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfowndp
            #add-point:BEFORE FIELD xrgfowndp name="construct.b.xrgfowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgfowndp
            
            #add-point:AFTER FIELD xrgfowndp name="construct.a.xrgfowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgfcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgfcrtid
            #add-point:ON ACTION controlp INFIELD xrgfcrtid name="construct.c.xrgfcrtid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgfcrtid  #顯示到畫面上
            NEXT FIELD xrgfcrtid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfcrtid
            #add-point:BEFORE FIELD xrgfcrtid name="construct.b.xrgfcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgfcrtid
            
            #add-point:AFTER FIELD xrgfcrtid name="construct.a.xrgfcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgfcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgfcrtdp
            #add-point:ON ACTION controlp INFIELD xrgfcrtdp name="construct.c.xrgfcrtdp"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgfcrtdp  #顯示到畫面上
            NEXT FIELD xrgfcrtdp                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfcrtdp
            #add-point:BEFORE FIELD xrgfcrtdp name="construct.b.xrgfcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgfcrtdp
            
            #add-point:AFTER FIELD xrgfcrtdp name="construct.a.xrgfcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfcrtdt
            #add-point:BEFORE FIELD xrgfcrtdt name="construct.b.xrgfcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xrgfmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgfmodid
            #add-point:ON ACTION controlp INFIELD xrgfmodid name="construct.c.xrgfmodid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgfmodid  #顯示到畫面上
            NEXT FIELD xrgfmodid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfmodid
            #add-point:BEFORE FIELD xrgfmodid name="construct.b.xrgfmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgfmodid
            
            #add-point:AFTER FIELD xrgfmodid name="construct.a.xrgfmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfmoddt
            #add-point:BEFORE FIELD xrgfmoddt name="construct.b.xrgfmoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xrgfcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgfcnfid
            #add-point:ON ACTION controlp INFIELD xrgfcnfid name="construct.c.xrgfcnfid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgfcnfid  #顯示到畫面上
            NEXT FIELD xrgfcnfid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfcnfid
            #add-point:BEFORE FIELD xrgfcnfid name="construct.b.xrgfcnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgfcnfid
            
            #add-point:AFTER FIELD xrgfcnfid name="construct.a.xrgfcnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfcnfdt
            #add-point:BEFORE FIELD xrgfcnfdt name="construct.b.xrgfcnfdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xrgf100
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf100
            #add-point:ON ACTION controlp INFIELD xrgf100 name="construct.c.xrgf100"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooai001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgf100  #顯示到畫面上
            NEXT FIELD xrgf100                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf100
            #add-point:BEFORE FIELD xrgf100 name="construct.b.xrgf100"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf100
            
            #add-point:AFTER FIELD xrgf100 name="construct.a.xrgf100"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf007
            #add-point:BEFORE FIELD xrgf007 name="construct.b.xrgf007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf007
            
            #add-point:AFTER FIELD xrgf007 name="construct.a.xrgf007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgf007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf007
            #add-point:ON ACTION controlp INFIELD xrgf007 name="construct.c.xrgf007"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xrgf004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf004
            #add-point:ON ACTION controlp INFIELD xrgf004 name="construct.c.xrgf004"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_nmab001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgf004  #顯示到畫面上
            NEXT FIELD xrgf004                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf004
            #add-point:BEFORE FIELD xrgf004 name="construct.b.xrgf004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf004
            
            #add-point:AFTER FIELD xrgf004 name="construct.a.xrgf004"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf103
            #add-point:BEFORE FIELD xrgf103 name="construct.b.xrgf103"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf103
            
            #add-point:AFTER FIELD xrgf103 name="construct.a.xrgf103"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgf103
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf103
            #add-point:ON ACTION controlp INFIELD xrgf103 name="construct.c.xrgf103"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf011
            #add-point:BEFORE FIELD xrgf011 name="construct.b.xrgf011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf011
            
            #add-point:AFTER FIELD xrgf011 name="construct.a.xrgf011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgf011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf011
            #add-point:ON ACTION controlp INFIELD xrgf011 name="construct.c.xrgf011"
            #160518-00037#5-----s
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_nmas001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgf011  #顯示到畫面上
            NEXT FIELD xrgf011  
            #160518-00037#5-----e
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf008
            #add-point:BEFORE FIELD xrgf008 name="construct.b.xrgf008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf008
            
            #add-point:AFTER FIELD xrgf008 name="construct.a.xrgf008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgf008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf008
            #add-point:ON ACTION controlp INFIELD xrgf008 name="construct.c.xrgf008"
 
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf012
            #add-point:BEFORE FIELD xrgf012 name="construct.b.xrgf012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf012
            
            #add-point:AFTER FIELD xrgf012 name="construct.a.xrgf012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgf012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf012
            #add-point:ON ACTION controlp INFIELD xrgf012 name="construct.c.xrgf012"
            #160518-00037#5-----s
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "nmad002 IN(SELECT nmaj001 FROM nmaj_t WHERE nmaj002 ='1' AND nmajstus = 'Y' AND nmajent = '",g_enterprise,"')"
            CALL q_nmad002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgf012  #顯示到畫面上
            NEXT FIELD xrgf012
            #160518-00037#5-----e
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf006
            #add-point:BEFORE FIELD xrgf006 name="construct.b.xrgf006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf006
            
            #add-point:AFTER FIELD xrgf006 name="construct.a.xrgf006"
 
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgf006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf006
            #add-point:ON ACTION controlp INFIELD xrgf006 name="construct.c.xrgf006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf013
            #add-point:BEFORE FIELD xrgf013 name="construct.b.xrgf013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf013
            
            #add-point:AFTER FIELD xrgf013 name="construct.a.xrgf013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgf013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf013
            #add-point:ON ACTION controlp INFIELD xrgf013 name="construct.c.xrgf013"
            #160518-00037#5-----s
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_nmai002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgf013  #顯示到畫面上
            NEXT FIELD xrgf013
            #160518-00037#5-----e
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf104
            #add-point:BEFORE FIELD xrgf104 name="construct.b.xrgf104"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf104
            
            #add-point:AFTER FIELD xrgf104 name="construct.a.xrgf104"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgf104
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf104
            #add-point:ON ACTION controlp INFIELD xrgf104 name="construct.c.xrgf104"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf101
            #add-point:BEFORE FIELD xrgf101 name="construct.b.xrgf101"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf101
            
            #add-point:AFTER FIELD xrgf101 name="construct.a.xrgf101"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgf101
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf101
            #add-point:ON ACTION controlp INFIELD xrgf101 name="construct.c.xrgf101"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf113
            #add-point:BEFORE FIELD xrgf113 name="construct.b.xrgf113"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf113
            
            #add-point:AFTER FIELD xrgf113 name="construct.a.xrgf113"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.xrgf113
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf113
            #add-point:ON ACTION controlp INFIELD xrgf113 name="construct.c.xrgf113"
            
            #END add-point
 
 
         #Ctrlp:construct.c.xrgf005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf005
            #add-point:ON ACTION controlp INFIELD xrgf005 name="construct.c.xrgf005"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where =  " xmdodocno IN (SELECT xrgf005 FROM xrgf_t WHERE xrgfent = ",g_enterprise,")"
            CALL q_xmdodocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrgf005  #顯示到畫面上
            NEXT FIELD xrgf005                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf005
            #add-point:BEFORE FIELD xrgf005 name="construct.b.xrgf005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf005
            
            #add-point:AFTER FIELD xrgf005 name="construct.a.xrgf005"
            
            #END add-point
            
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON apgcseq,apgcorga,apgc001,apgc014,apgc100,apgc101,apgc006,apgc007,apgc008, 
          apgc009,apgc010,apgc011,apgc103,apgc104,apgc105,apgc113,apgc114,apgc115,apgc015,apgc016,apgc004, 
          apgc013
           FROM s_detail1[1].apgcseq,s_detail1[1].apgcorga,s_detail1[1].apgc001,s_detail1[1].apgc014, 
               s_detail1[1].apgc100,s_detail1[1].apgc101,s_detail1[1].apgc006,s_detail1[1].apgc007,s_detail1[1].apgc008, 
               s_detail1[1].apgc009,s_detail1[1].apgc010,s_detail1[1].apgc011,s_detail1[1].apgc103,s_detail1[1].apgc104, 
               s_detail1[1].apgc105,s_detail1[1].apgc113,s_detail1[1].apgc114,s_detail1[1].apgc115,s_detail1[1].apgc015, 
               s_detail1[1].apgc016,s_detail1[1].apgc004,s_detail1[1].apgc013
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgcseq
            #add-point:BEFORE FIELD apgcseq name="construct.b.page1.apgcseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgcseq
            
            #add-point:AFTER FIELD apgcseq name="construct.a.page1.apgcseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgcseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgcseq
            #add-point:ON ACTION controlp INFIELD apgcseq name="construct.c.page1.apgcseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.apgcorga
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgcorga
            #add-point:ON ACTION controlp INFIELD apgcorga name="construct.c.page1.apgcorga"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            IF NOT cl_null(g_wc_cs_orga) THEN
               LET g_qryparam.where = " ooef001 IN ",g_wc_cs_orga
            END IF
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO apgcorga  #顯示到畫面上
            NEXT FIELD apgcorga                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgcorga
            #add-point:BEFORE FIELD apgcorga name="construct.b.page1.apgcorga"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgcorga
            
            #add-point:AFTER FIELD apgcorga name="construct.a.page1.apgcorga"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc001
            #add-point:ON ACTION controlp INFIELD apgc001 name="construct.c.page1.apgc001"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '3117'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO apgc001  #顯示到畫面上
            NEXT FIELD apgc001                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc001
            #add-point:BEFORE FIELD apgc001 name="construct.b.page1.apgc001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc001
            
            #add-point:AFTER FIELD apgc001 name="construct.a.page1.apgc001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc014
            #add-point:ON ACTION controlp INFIELD apgc014 name="construct.c.page1.apgc014"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " EXISTS(SELECT 1 FROM nmag_t WHERE nmag001 = nmaa003 ",
                                   " AND nmag002 IN ('1','5'))",
                                   " AND nmas002 IN (SELECT nmll001 FROM nmll_t WHERE nmllent=",g_enterprise, " AND nmll002 = '",g_user,"')"
            
            CALL q_nmas001()        
            DISPLAY g_qryparam.return1 TO apgc014  #顯示到畫面上
            NEXT FIELD apgc014                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc014
            #add-point:BEFORE FIELD apgc014 name="construct.b.page1.apgc014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc014
            
            #add-point:AFTER FIELD apgc014 name="construct.a.page1.apgc014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc100
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc100
            #add-point:ON ACTION controlp INFIELD apgc100 name="construct.c.page1.apgc100"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooai001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO apgc100  #顯示到畫面上
            NEXT FIELD apgc100                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc100
            #add-point:BEFORE FIELD apgc100 name="construct.b.page1.apgc100"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc100
            
            #add-point:AFTER FIELD apgc100 name="construct.a.page1.apgc100"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc101
            #add-point:BEFORE FIELD apgc101 name="construct.b.page1.apgc101"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc101
            
            #add-point:AFTER FIELD apgc101 name="construct.a.page1.apgc101"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc101
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc101
            #add-point:ON ACTION controlp INFIELD apgc101 name="construct.c.page1.apgc101"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc006
            #add-point:BEFORE FIELD apgc006 name="construct.b.page1.apgc006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc006
            
            #add-point:AFTER FIELD apgc006 name="construct.a.page1.apgc006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc006
            #add-point:ON ACTION controlp INFIELD apgc006 name="construct.c.page1.apgc006"
            #稅別
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   SELECT ooef017 INTO l_ooef017
			     FROM ooef_t
			    WHERE ooefent = g_enterprise
			      AND ooef001 = g_site
			   CALL s_tax_get_ooef019(l_ooef017) RETURNING g_sub_success,l_ooef019
			   LET g_qryparam.arg1 = l_ooef019        #稅區
            CALL q_oodb002_5()               
            DISPLAY g_qryparam.return1 TO apgc006  #顯示到畫面上

            NEXT FIELD apgc006  
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc007
            #add-point:BEFORE FIELD apgc007 name="construct.b.page1.apgc007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc007
            
            #add-point:AFTER FIELD apgc007 name="construct.a.page1.apgc007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc007
            #add-point:ON ACTION controlp INFIELD apgc007 name="construct.c.page1.apgc007"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_isac002()                     
            DISPLAY g_qryparam.return1 TO apgc007
            NEXT FIELD apgc007
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc008
            #add-point:BEFORE FIELD apgc008 name="construct.b.page1.apgc008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc008
            
            #add-point:AFTER FIELD apgc008 name="construct.a.page1.apgc008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc008
            #add-point:ON ACTION controlp INFIELD apgc008 name="construct.c.page1.apgc008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc009
            #add-point:BEFORE FIELD apgc009 name="construct.b.page1.apgc009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc009
            
            #add-point:AFTER FIELD apgc009 name="construct.a.page1.apgc009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc009
            #add-point:ON ACTION controlp INFIELD apgc009 name="construct.c.page1.apgc009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc010
            #add-point:BEFORE FIELD apgc010 name="construct.b.page1.apgc010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc010
            
            #add-point:AFTER FIELD apgc010 name="construct.a.page1.apgc010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc010
            #add-point:ON ACTION controlp INFIELD apgc010 name="construct.c.page1.apgc010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc011
            #add-point:BEFORE FIELD apgc011 name="construct.b.page1.apgc011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc011
            
            #add-point:AFTER FIELD apgc011 name="construct.a.page1.apgc011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc011
            #add-point:ON ACTION controlp INFIELD apgc011 name="construct.c.page1.apgc011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc103
            #add-point:BEFORE FIELD apgc103 name="construct.b.page1.apgc103"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc103
            
            #add-point:AFTER FIELD apgc103 name="construct.a.page1.apgc103"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc103
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc103
            #add-point:ON ACTION controlp INFIELD apgc103 name="construct.c.page1.apgc103"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc104
            #add-point:BEFORE FIELD apgc104 name="construct.b.page1.apgc104"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc104
            
            #add-point:AFTER FIELD apgc104 name="construct.a.page1.apgc104"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc104
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc104
            #add-point:ON ACTION controlp INFIELD apgc104 name="construct.c.page1.apgc104"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc105
            #add-point:BEFORE FIELD apgc105 name="construct.b.page1.apgc105"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc105
            
            #add-point:AFTER FIELD apgc105 name="construct.a.page1.apgc105"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc105
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc105
            #add-point:ON ACTION controlp INFIELD apgc105 name="construct.c.page1.apgc105"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc113
            #add-point:BEFORE FIELD apgc113 name="construct.b.page1.apgc113"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc113
            
            #add-point:AFTER FIELD apgc113 name="construct.a.page1.apgc113"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc113
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc113
            #add-point:ON ACTION controlp INFIELD apgc113 name="construct.c.page1.apgc113"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc114
            #add-point:BEFORE FIELD apgc114 name="construct.b.page1.apgc114"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc114
            
            #add-point:AFTER FIELD apgc114 name="construct.a.page1.apgc114"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc114
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc114
            #add-point:ON ACTION controlp INFIELD apgc114 name="construct.c.page1.apgc114"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc115
            #add-point:BEFORE FIELD apgc115 name="construct.b.page1.apgc115"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc115
            
            #add-point:AFTER FIELD apgc115 name="construct.a.page1.apgc115"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc115
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc115
            #add-point:ON ACTION controlp INFIELD apgc115 name="construct.c.page1.apgc115"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.apgc015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc015
            #add-point:ON ACTION controlp INFIELD apgc015 name="construct.c.page1.apgc015"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " nmaj002 = '2' "   #提出 
            CALL q_nmaj001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO apgc015  #顯示到畫面上
            NEXT FIELD apgc015
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc015
            #add-point:BEFORE FIELD apgc015 name="construct.b.page1.apgc015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc015
            
            #add-point:AFTER FIELD apgc015 name="construct.a.page1.apgc015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc016
            #add-point:ON ACTION controlp INFIELD apgc016 name="construct.c.page1.apgc016"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_nmai002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO apgc016  #顯示到畫面上
            NEXT FIELD apgc016                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc016
            #add-point:BEFORE FIELD apgc016 name="construct.b.page1.apgc016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc016
            
            #add-point:AFTER FIELD apgc016 name="construct.a.page1.apgc016"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc004
            #add-point:BEFORE FIELD apgc004 name="construct.b.page1.apgc004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc004
            
            #add-point:AFTER FIELD apgc004 name="construct.a.page1.apgc004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc004
            #add-point:ON ACTION controlp INFIELD apgc004 name="construct.c.page1.apgc004"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.where = "glac003 <>'1' " #非統制科目
            CALL aglt310_04()                 
            DISPLAY g_qryparam.return1 TO apgc004   #顯示到畫面上
            NEXT FIELD apgc004
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc013
            #add-point:BEFORE FIELD apgc013 name="construct.b.page1.apgc013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc013
            
            #add-point:AFTER FIELD apgc013 name="construct.a.page1.apgc013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.apgc013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc013
            #add-point:ON ACTION controlp INFIELD apgc013 name="construct.c.page1.apgc013"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON xrgiseq,xrgi002,xrgi003,xrgi100,xrgi101,xrgi103,xrgi113
           FROM s_detail2[1].xrgiseq,s_detail2[1].xrgi002,s_detail2[1].xrgi003,s_detail2[1].xrgi100, 
               s_detail2[1].xrgi101,s_detail2[1].xrgi103,s_detail2[1].xrgi113
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgiseq
            #add-point:BEFORE FIELD xrgiseq name="construct.b.page2.xrgiseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgiseq
            
            #add-point:AFTER FIELD xrgiseq name="construct.a.page2.xrgiseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xrgiseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgiseq
            #add-point:ON ACTION controlp INFIELD xrgiseq name="construct.c.page2.xrgiseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgi002
            #add-point:BEFORE FIELD xrgi002 name="construct.b.page2.xrgi002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgi002
            
            #add-point:AFTER FIELD xrgi002 name="construct.a.page2.xrgi002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xrgi002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgi002
            #add-point:ON ACTION controlp INFIELD xrgi002 name="construct.c.page2.xrgi002"
            #160518-00037#5-----s
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_xrgi002()                 
            DISPLAY g_qryparam.return1 TO xrgi002   #顯示到畫面上
            NEXT FIELD xrgi002
            #160518-00037#5-----e
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgi003
            #add-point:BEFORE FIELD xrgi003 name="construct.b.page2.xrgi003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgi003
            
            #add-point:AFTER FIELD xrgi003 name="construct.a.page2.xrgi003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xrgi003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgi003
            #add-point:ON ACTION controlp INFIELD xrgi003 name="construct.c.page2.xrgi003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgi100
            #add-point:BEFORE FIELD xrgi100 name="construct.b.page2.xrgi100"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgi100
            
            #add-point:AFTER FIELD xrgi100 name="construct.a.page2.xrgi100"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xrgi100
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgi100
            #add-point:ON ACTION controlp INFIELD xrgi100 name="construct.c.page2.xrgi100"
            #160518-00037#5-----s
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooai001()
            DISPLAY g_qryparam.return1 TO xrgi100  #顯示到畫面上
            NEXT FIELD xrgi100
            #160518-00037#5-----e
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgi101
            #add-point:BEFORE FIELD xrgi101 name="construct.b.page2.xrgi101"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgi101
            
            #add-point:AFTER FIELD xrgi101 name="construct.a.page2.xrgi101"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xrgi101
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgi101
            #add-point:ON ACTION controlp INFIELD xrgi101 name="construct.c.page2.xrgi101"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgi103
            #add-point:BEFORE FIELD xrgi103 name="construct.b.page2.xrgi103"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgi103
            
            #add-point:AFTER FIELD xrgi103 name="construct.a.page2.xrgi103"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xrgi103
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgi103
            #add-point:ON ACTION controlp INFIELD xrgi103 name="construct.c.page2.xrgi103"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgi113
            #add-point:BEFORE FIELD xrgi113 name="construct.b.page2.xrgi113"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgi113
            
            #add-point:AFTER FIELD xrgi113 name="construct.a.page2.xrgi113"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.xrgi113
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgi113
            #add-point:ON ACTION controlp INFIELD xrgi113 name="construct.c.page2.xrgi113"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "xrgf_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "apgc_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "xrgi_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axrt530.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION axrt530_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xrgfcomp,xrgfdocno,xrgf001,xrgfdocdt,xrgf004,xrgf008
                          FROM s_browse[1].b_xrgfcomp,s_browse[1].b_xrgfdocno,s_browse[1].b_xrgf001, 
                              s_browse[1].b_xrgfdocdt,s_browse[1].b_xrgf004,s_browse[1].b_xrgf008
 
         BEFORE CONSTRUCT
               DISPLAY axrt530_filter_parser('xrgfcomp') TO s_browse[1].b_xrgfcomp
            DISPLAY axrt530_filter_parser('xrgfdocno') TO s_browse[1].b_xrgfdocno
            DISPLAY axrt530_filter_parser('xrgf001') TO s_browse[1].b_xrgf001
            DISPLAY axrt530_filter_parser('xrgfdocdt') TO s_browse[1].b_xrgfdocdt
            DISPLAY axrt530_filter_parser('xrgf004') TO s_browse[1].b_xrgf004
            DISPLAY axrt530_filter_parser('xrgf008') TO s_browse[1].b_xrgf008
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL axrt530_filter_show('xrgfcomp')
   CALL axrt530_filter_show('xrgfdocno')
   CALL axrt530_filter_show('xrgf001')
   CALL axrt530_filter_show('xrgfdocdt')
   CALL axrt530_filter_show('xrgf004')
   CALL axrt530_filter_show('xrgf008')
 
END FUNCTION
 
{</section>}
 
{<section id="axrt530.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION axrt530_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="axrt530.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION axrt530_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axrt530_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="axrt530.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axrt530_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_apgc_d.clear()
   CALL g_apgc2_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL axrt530_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL axrt530_browser_fill("")
      CALL axrt530_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL axrt530_filter_show('xrgfcomp')
   CALL axrt530_filter_show('xrgfdocno')
   CALL axrt530_filter_show('xrgf001')
   CALL axrt530_filter_show('xrgfdocdt')
   CALL axrt530_filter_show('xrgf004')
   CALL axrt530_filter_show('xrgf008')
   CALL axrt530_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL axrt530_fetch("F") 
      #顯示單身筆數
      CALL axrt530_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="axrt530.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axrt530_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_xrgf_m.xrgfcomp = g_browser[g_current_idx].b_xrgfcomp
   LET g_xrgf_m.xrgfdocno = g_browser[g_current_idx].b_xrgfdocno
   LET g_xrgf_m.xrgf001 = g_browser[g_current_idx].b_xrgf001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axrt530_master_referesh USING g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001 INTO g_xrgf_m.xrgfcomp, 
       g_xrgf_m.xrgf002,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt,g_xrgf_m.xrgf009,g_xrgf_m.xrgf001,g_xrgf_m.xrgf003, 
       g_xrgf_m.xrgf010,g_xrgf_m.xrgfstus,g_xrgf_m.xrgfownid,g_xrgf_m.xrgfowndp,g_xrgf_m.xrgfcrtid,g_xrgf_m.xrgfcrtdp, 
       g_xrgf_m.xrgfcrtdt,g_xrgf_m.xrgfmodid,g_xrgf_m.xrgfmoddt,g_xrgf_m.xrgfcnfid,g_xrgf_m.xrgfcnfdt, 
       g_xrgf_m.xrgf100,g_xrgf_m.xrgf007,g_xrgf_m.xrgf004,g_xrgf_m.xrgf103,g_xrgf_m.xrgf011,g_xrgf_m.xrgf008, 
       g_xrgf_m.xrgf012,g_xrgf_m.xrgf006,g_xrgf_m.xrgf013,g_xrgf_m.xrgf104,g_xrgf_m.xrgf101,g_xrgf_m.xrgf113, 
       g_xrgf_m.xrgf005,g_xrgf_m.xrgfcomp_desc,g_xrgf_m.xrgf002_desc,g_xrgf_m.xrgf003_desc,g_xrgf_m.xrgfownid_desc, 
       g_xrgf_m.xrgfowndp_desc,g_xrgf_m.xrgfcrtid_desc,g_xrgf_m.xrgfcrtdp_desc,g_xrgf_m.xrgfmodid_desc, 
       g_xrgf_m.xrgfcnfid_desc,g_xrgf_m.xrgf004_desc,g_xrgf_m.xrgf012_desc,g_xrgf_m.xrgf013_desc
   
   #遮罩相關處理
   LET g_xrgf_m_mask_o.* =  g_xrgf_m.*
   CALL axrt530_xrgf_t_mask()
   LET g_xrgf_m_mask_n.* =  g_xrgf_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axrt530_set_act_visible()   
   CALL axrt530_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_xrgf_m_t.* = g_xrgf_m.*
   LET g_xrgf_m_o.* = g_xrgf_m.*
   
   LET g_data_owner = g_xrgf_m.xrgfownid      
   LET g_data_dept  = g_xrgf_m.xrgfowndp
   
   #重新顯示   
   CALL axrt530_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="axrt530.insert" >}
#+ 資料新增
PRIVATE FUNCTION axrt530_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_apgc_d.clear()   
   CALL g_apgc2_d.clear()  
 
 
   INITIALIZE g_xrgf_m.* TO NULL             #DEFAULT 設定
   
   LET g_xrgfcomp_t = NULL
   LET g_xrgfdocno_t = NULL
   LET g_xrgf001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xrgf_m.xrgfownid = g_user
      LET g_xrgf_m.xrgfowndp = g_dept
      LET g_xrgf_m.xrgfcrtid = g_user
      LET g_xrgf_m.xrgfcrtdp = g_dept 
      LET g_xrgf_m.xrgfcrtdt = cl_get_current()
      LET g_xrgf_m.xrgfmodid = g_user
      LET g_xrgf_m.xrgfmoddt = cl_get_current()
      LET g_xrgf_m.xrgfstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_xrgf_m.xrga103 = "0"
      LET g_xrgf_m.xrgf103 = "0"
      LET g_xrgf_m.xrgf006 = "N"
      LET g_xrgf_m.xrgf104 = "0"
      LET g_xrgf_m.xrgf101 = "0"
      LET g_xrgf_m.xrgf113 = "0"
 
  
      #add-point:單頭預設值 name="insert.default"
      CALL s_fin_orga_get_comp_ld(g_site) RETURNING g_sub_success,g_errno,g_xrgf_m.xrgfcomp,g_glaald
      CALL s_desc_get_department_desc(g_xrgf_m.xrgfcomp) RETURNING g_xrgf_m.xrgfcomp_desc
      LET g_xrgf_m.xrgf002   = g_user
      LET g_xrgf_m.xrgfdocdt = g_today
      CALL s_desc_get_person_desc(g_xrgf_m.xrgf002) RETURNING g_xrgf_m.xrgf002_desc
      CALL axrt530_get_comp_info()
      
      
      #160518-00037#5-----s
      LET g_xrgf_m.xrgf006 = '1'
      SELECT glab006,glab007 INTO g_xrgf_m.xrgf011,g_xrgf_m.xrgf012
        FROM glab_t
       WHERE glab002 = '3117' AND glab001 = '15' 
         AND glab003 = '8504_39' AND glabld = g_glaald
         AND glabent = g_enterprise                 #160905-00002#2
      #160518-00037#5-----e
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_xrgf_m_t.* = g_xrgf_m.*
      LET g_xrgf_m_o.* = g_xrgf_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xrgf_m.xrgfstus 
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL axrt530_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_xrgf_m.* TO NULL
         INITIALIZE g_apgc_d TO NULL
         INITIALIZE g_apgc2_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL axrt530_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_apgc_d.clear()
      #CALL g_apgc2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axrt530_set_act_visible()   
   CALL axrt530_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xrgfcomp_t = g_xrgf_m.xrgfcomp
   LET g_xrgfdocno_t = g_xrgf_m.xrgfdocno
   LET g_xrgf001_t = g_xrgf_m.xrgf001
 
   
   #組合新增資料的條件
   LET g_add_browse = " xrgfent = " ||g_enterprise|| " AND",
                      " xrgfcomp = '", g_xrgf_m.xrgfcomp, "' "
                      ," AND xrgfdocno = '", g_xrgf_m.xrgfdocno, "' "
                      ," AND xrgf001 = '", g_xrgf_m.xrgf001, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axrt530_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE axrt530_cl
   
   CALL axrt530_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE axrt530_master_referesh USING g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001 INTO g_xrgf_m.xrgfcomp, 
       g_xrgf_m.xrgf002,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt,g_xrgf_m.xrgf009,g_xrgf_m.xrgf001,g_xrgf_m.xrgf003, 
       g_xrgf_m.xrgf010,g_xrgf_m.xrgfstus,g_xrgf_m.xrgfownid,g_xrgf_m.xrgfowndp,g_xrgf_m.xrgfcrtid,g_xrgf_m.xrgfcrtdp, 
       g_xrgf_m.xrgfcrtdt,g_xrgf_m.xrgfmodid,g_xrgf_m.xrgfmoddt,g_xrgf_m.xrgfcnfid,g_xrgf_m.xrgfcnfdt, 
       g_xrgf_m.xrgf100,g_xrgf_m.xrgf007,g_xrgf_m.xrgf004,g_xrgf_m.xrgf103,g_xrgf_m.xrgf011,g_xrgf_m.xrgf008, 
       g_xrgf_m.xrgf012,g_xrgf_m.xrgf006,g_xrgf_m.xrgf013,g_xrgf_m.xrgf104,g_xrgf_m.xrgf101,g_xrgf_m.xrgf113, 
       g_xrgf_m.xrgf005,g_xrgf_m.xrgfcomp_desc,g_xrgf_m.xrgf002_desc,g_xrgf_m.xrgf003_desc,g_xrgf_m.xrgfownid_desc, 
       g_xrgf_m.xrgfowndp_desc,g_xrgf_m.xrgfcrtid_desc,g_xrgf_m.xrgfcrtdp_desc,g_xrgf_m.xrgfmodid_desc, 
       g_xrgf_m.xrgfcnfid_desc,g_xrgf_m.xrgf004_desc,g_xrgf_m.xrgf012_desc,g_xrgf_m.xrgf013_desc
   
   
   #遮罩相關處理
   LET g_xrgf_m_mask_o.* =  g_xrgf_m.*
   CALL axrt530_xrgf_t_mask()
   LET g_xrgf_m_mask_n.* =  g_xrgf_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfcomp_desc,g_xrgf_m.xrgf002,g_xrgf_m.xrgf002_desc,g_xrgf_m.xrga006, 
       g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt,g_xrgf_m.xrgf009,g_xrgf_m.xrgf001,g_xrgf_m.xrgf003,g_xrgf_m.xrgf003_desc, 
       g_xrgf_m.xrga001,g_xrgf_m.xrgf010,g_xrgf_m.xrga025,g_xrgf_m.xrgfstus,g_xrgf_m.xrgfownid,g_xrgf_m.xrgfownid_desc, 
       g_xrgf_m.xrgfowndp,g_xrgf_m.xrgfowndp_desc,g_xrgf_m.xrgfcrtid,g_xrgf_m.xrgfcrtid_desc,g_xrgf_m.xrgfcrtdp, 
       g_xrgf_m.xrgfcrtdp_desc,g_xrgf_m.xrgfcrtdt,g_xrgf_m.xrgfmodid,g_xrgf_m.xrgfmodid_desc,g_xrgf_m.xrgfmoddt, 
       g_xrgf_m.xrgfcnfid,g_xrgf_m.xrgfcnfid_desc,g_xrgf_m.xrgfcnfdt,g_xrgf_m.xrga007,g_xrgf_m.xrga003, 
       g_xrgf_m.xrga011,g_xrgf_m.xrgf100,g_xrgf_m.xrga103,g_xrgf_m.xrgf007,g_xrgf_m.xrgf004,g_xrgf_m.xrgf004_desc, 
       g_xrgf_m.xrgf103,g_xrgf_m.xrgf011,g_xrgf_m.xrgf008,g_xrgf_m.xrgf012,g_xrgf_m.xrgf012_desc,g_xrgf_m.xrgf006, 
       g_xrgf_m.xrgf013,g_xrgf_m.xrgf013_desc,g_xrgf_m.xrgf104,g_xrgf_m.l_glaa001,g_xrgf_m.xrgf101,g_xrgf_m.xrgf113, 
       g_xrgf_m.xrgf005
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_xrgf_m.xrgfownid      
   LET g_data_dept  = g_xrgf_m.xrgfowndp
   
   #功能已完成,通報訊息中心
   CALL axrt530_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.modify" >}
#+ 資料修改
PRIVATE FUNCTION axrt530_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_xrgf_m_t.* = g_xrgf_m.*
   LET g_xrgf_m_o.* = g_xrgf_m.*
   
   IF g_xrgf_m.xrgfcomp IS NULL
   OR g_xrgf_m.xrgfdocno IS NULL
   OR g_xrgf_m.xrgf001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_xrgfcomp_t = g_xrgf_m.xrgfcomp
   LET g_xrgfdocno_t = g_xrgf_m.xrgfdocno
   LET g_xrgf001_t = g_xrgf_m.xrgf001
 
   CALL s_transaction_begin()
   
   OPEN axrt530_cl USING g_enterprise,g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axrt530_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE axrt530_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axrt530_master_referesh USING g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001 INTO g_xrgf_m.xrgfcomp, 
       g_xrgf_m.xrgf002,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt,g_xrgf_m.xrgf009,g_xrgf_m.xrgf001,g_xrgf_m.xrgf003, 
       g_xrgf_m.xrgf010,g_xrgf_m.xrgfstus,g_xrgf_m.xrgfownid,g_xrgf_m.xrgfowndp,g_xrgf_m.xrgfcrtid,g_xrgf_m.xrgfcrtdp, 
       g_xrgf_m.xrgfcrtdt,g_xrgf_m.xrgfmodid,g_xrgf_m.xrgfmoddt,g_xrgf_m.xrgfcnfid,g_xrgf_m.xrgfcnfdt, 
       g_xrgf_m.xrgf100,g_xrgf_m.xrgf007,g_xrgf_m.xrgf004,g_xrgf_m.xrgf103,g_xrgf_m.xrgf011,g_xrgf_m.xrgf008, 
       g_xrgf_m.xrgf012,g_xrgf_m.xrgf006,g_xrgf_m.xrgf013,g_xrgf_m.xrgf104,g_xrgf_m.xrgf101,g_xrgf_m.xrgf113, 
       g_xrgf_m.xrgf005,g_xrgf_m.xrgfcomp_desc,g_xrgf_m.xrgf002_desc,g_xrgf_m.xrgf003_desc,g_xrgf_m.xrgfownid_desc, 
       g_xrgf_m.xrgfowndp_desc,g_xrgf_m.xrgfcrtid_desc,g_xrgf_m.xrgfcrtdp_desc,g_xrgf_m.xrgfmodid_desc, 
       g_xrgf_m.xrgfcnfid_desc,g_xrgf_m.xrgf004_desc,g_xrgf_m.xrgf012_desc,g_xrgf_m.xrgf013_desc
   
   #檢查是否允許此動作
   IF NOT axrt530_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xrgf_m_mask_o.* =  g_xrgf_m.*
   CALL axrt530_xrgf_t_mask()
   LET g_xrgf_m_mask_n.* =  g_xrgf_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
 
   
   CALL axrt530_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
 
    
   WHILE TRUE
      LET g_xrgfcomp_t = g_xrgf_m.xrgfcomp
      LET g_xrgfdocno_t = g_xrgf_m.xrgfdocno
      LET g_xrgf001_t = g_xrgf_m.xrgf001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_xrgf_m.xrgfmodid = g_user 
LET g_xrgf_m.xrgfmoddt = cl_get_current()
LET g_xrgf_m.xrgfmodid_desc = cl_get_username(g_xrgf_m.xrgfmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL axrt530_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE xrgf_t SET (xrgfmodid,xrgfmoddt) = (g_xrgf_m.xrgfmodid,g_xrgf_m.xrgfmoddt)
          WHERE xrgfent = g_enterprise AND xrgfcomp = g_xrgfcomp_t
            AND xrgfdocno = g_xrgfdocno_t
            AND xrgf001 = g_xrgf001_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_xrgf_m.* = g_xrgf_m_t.*
            CALL axrt530_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_xrgf_m.xrgfcomp != g_xrgf_m_t.xrgfcomp
      OR g_xrgf_m.xrgfdocno != g_xrgf_m_t.xrgfdocno
      OR g_xrgf_m.xrgf001 != g_xrgf_m_t.xrgf001
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE apgc_t SET apgccomp = g_xrgf_m.xrgfcomp
                                       ,apgcdocno = g_xrgf_m.xrgfdocno
                                       ,apgc900 = g_xrgf_m.xrgf001
 
          WHERE apgcent = g_enterprise AND apgccomp = g_xrgf_m_t.xrgfcomp
            AND apgcdocno = g_xrgf_m_t.xrgfdocno
            AND apgc900 = g_xrgf_m_t.xrgf001
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "apgc_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "apgc_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         
         #end add-point
         
         UPDATE xrgi_t
            SET xrgicomp = g_xrgf_m.xrgfcomp
               ,xrgidocno = g_xrgf_m.xrgfdocno
               ,xrgi001 = g_xrgf_m.xrgf001
 
          WHERE xrgient = g_enterprise AND
                xrgicomp = g_xrgfcomp_t
            AND xrgidocno = g_xrgfdocno_t
            AND xrgi001 = g_xrgf001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xrgi_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xrgi_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axrt530_set_act_visible()   
   CALL axrt530_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " xrgfent = " ||g_enterprise|| " AND",
                      " xrgfcomp = '", g_xrgf_m.xrgfcomp, "' "
                      ," AND xrgfdocno = '", g_xrgf_m.xrgfdocno, "' "
                      ," AND xrgf001 = '", g_xrgf_m.xrgf001, "' "
 
   #填到對應位置
   CALL axrt530_browser_fill("")
 
   CLOSE axrt530_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axrt530_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="axrt530.input" >}
#+ 資料輸入
PRIVATE FUNCTION axrt530_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_gzza001             LIKE gzza_t.gzza001
   DEFINE  l_comp_orga           LIKE ooef_t.ooef017
   DEFINE  l_ld                  LIKE glaa_t.glaald
   DEFINE  l_glab005             LIKE glab_t.glab005
   DEFINE  l_glab006             LIKE glab_t.glab006
   DEFINE  l_glab007             LIKE glab_t.glab007
   DEFINE  l_isac004             LIKE isac_t.isac004
   DEFINE  l_no_use_var          LIKE type_t.chr1
   
   #160518-00037#5-----s
   DEFINE  l_ooef006             LIKE ooef_t.ooef006
   DEFINE  l_nmas003             LIKE nmas_t.nmas003
   DEFINE  l_glaa005             LIKE glaa_t.glaa005
   DEFINE  l_glaa024             LIKE glaa_t.glaa024
   #160518-00037#5-----e
   
   #160926-00018#1-----s 
   DEFINE l_pmab037     LIKE pmab_t.pmab037
   DEFINE l_pmab055     LIKE pmab_t.pmab055
   DEFINE l_pmab034     LIKE pmab_t.pmab034 
   DEFINE l_pmab056     LIKE pmab_t.pmab056
   #160926-00018#1-----e
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfcomp_desc,g_xrgf_m.xrgf002,g_xrgf_m.xrgf002_desc,g_xrgf_m.xrga006, 
       g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt,g_xrgf_m.xrgf009,g_xrgf_m.xrgf001,g_xrgf_m.xrgf003,g_xrgf_m.xrgf003_desc, 
       g_xrgf_m.xrga001,g_xrgf_m.xrgf010,g_xrgf_m.xrga025,g_xrgf_m.xrgfstus,g_xrgf_m.xrgfownid,g_xrgf_m.xrgfownid_desc, 
       g_xrgf_m.xrgfowndp,g_xrgf_m.xrgfowndp_desc,g_xrgf_m.xrgfcrtid,g_xrgf_m.xrgfcrtid_desc,g_xrgf_m.xrgfcrtdp, 
       g_xrgf_m.xrgfcrtdp_desc,g_xrgf_m.xrgfcrtdt,g_xrgf_m.xrgfmodid,g_xrgf_m.xrgfmodid_desc,g_xrgf_m.xrgfmoddt, 
       g_xrgf_m.xrgfcnfid,g_xrgf_m.xrgfcnfid_desc,g_xrgf_m.xrgfcnfdt,g_xrgf_m.xrga007,g_xrgf_m.xrga003, 
       g_xrgf_m.xrga011,g_xrgf_m.xrgf100,g_xrgf_m.xrga103,g_xrgf_m.xrgf007,g_xrgf_m.xrgf004,g_xrgf_m.xrgf004_desc, 
       g_xrgf_m.xrgf103,g_xrgf_m.xrgf011,g_xrgf_m.xrgf008,g_xrgf_m.xrgf012,g_xrgf_m.xrgf012_desc,g_xrgf_m.xrgf006, 
       g_xrgf_m.xrgf013,g_xrgf_m.xrgf013_desc,g_xrgf_m.xrgf104,g_xrgf_m.l_glaa001,g_xrgf_m.xrgf101,g_xrgf_m.xrgf113, 
       g_xrgf_m.xrgf005
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT apgcseq,apgcorga,apgc001,apgc014,apgc100,apgc101,apgc006,apgc007,apgc008, 
       apgc009,apgc010,apgc011,apgc103,apgc104,apgc105,apgc113,apgc114,apgc115,apgc015,apgc016,apgc004, 
       apgc013 FROM apgc_t WHERE apgcent=? AND apgccomp=? AND apgcdocno=? AND apgc900=? AND apgcseq=?  
       FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axrt530_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   
   #end add-point    
   LET g_forupd_sql = "SELECT xrgiseq,xrgi002,xrgi003,xrgi100,xrgi101,xrgi103,xrgi113 FROM xrgi_t WHERE  
       xrgient=? AND xrgicomp=? AND xrgidocno=? AND xrgi001=? AND xrgiseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE axrt530_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axrt530_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL axrt530_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_xrgf_m.xrgfcomp,g_xrgf_m.xrgf002,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt,g_xrgf_m.xrgf009, 
       g_xrgf_m.xrgf001,g_xrgf_m.xrgf003,g_xrgf_m.xrgf010,g_xrgf_m.xrgfstus,g_xrgf_m.xrgf100,g_xrgf_m.xrgf007, 
       g_xrgf_m.xrgf004,g_xrgf_m.xrgf103,g_xrgf_m.xrgf011,g_xrgf_m.xrgf008,g_xrgf_m.xrgf012,g_xrgf_m.xrgf006, 
       g_xrgf_m.xrgf013,g_xrgf_m.xrgf104,g_xrgf_m.l_glaa001,g_xrgf_m.xrgf101,g_xrgf_m.xrgf113,g_xrgf_m.xrgf005 
 
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="axrt530.input.head" >}
      #單頭段
      INPUT BY NAME g_xrgf_m.xrgfcomp,g_xrgf_m.xrgf002,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt,g_xrgf_m.xrgf009, 
          g_xrgf_m.xrgf001,g_xrgf_m.xrgf003,g_xrgf_m.xrgf010,g_xrgf_m.xrgfstus,g_xrgf_m.xrgf100,g_xrgf_m.xrgf007, 
          g_xrgf_m.xrgf004,g_xrgf_m.xrgf103,g_xrgf_m.xrgf011,g_xrgf_m.xrgf008,g_xrgf_m.xrgf012,g_xrgf_m.xrgf006, 
          g_xrgf_m.xrgf013,g_xrgf_m.xrgf104,g_xrgf_m.l_glaa001,g_xrgf_m.xrgf101,g_xrgf_m.xrgf113,g_xrgf_m.xrgf005  
 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN axrt530_cl USING g_enterprise,g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axrt530_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE axrt530_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL axrt530_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL axrt530_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgfcomp
            
            #add-point:AFTER FIELD xrgfcomp name="input.a.xrgfcomp"
            #確認資料無重複
            IF  NOT cl_null(g_xrgf_m.xrgfcomp) AND NOT cl_null(g_xrgf_m.xrgfdocno) AND NOT cl_null(g_xrgf_m.xrgf001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xrgf_m.xrgfcomp != g_xrgfcomp_t  OR g_xrgf_m.xrgfdocno != g_xrgfdocno_t  OR g_xrgf_m.xrgf001 != g_xrgf001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrgf_t WHERE "||"xrgfent = '" ||g_enterprise|| "' AND "||"xrgfcomp = '"||g_xrgf_m.xrgfcomp ||"' AND "|| "xrgfdocno = '"||g_xrgf_m.xrgfdocno ||"' AND "|| "xrgf001 = '"||g_xrgf_m.xrgf001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_xrgf_m.xrgfcomp_desc = ''
            IF NOT cl_null(g_xrgf_m.xrgfcomp) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xrgf_m.xrgfcomp != g_xrgf_m_t.xrgfcomp OR g_xrgf_m_t.xrgfcomp IS NULL )) THEN
                  LET g_errno = ''
                  CALL s_fin_comp_chk(g_xrgf_m.xrgfcomp) RETURNING g_sub_success,g_errno
                  IF NOT g_sub_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_xrgf_m.xrgfcomp_desc = g_xrgf_m_t.xrgfcomp_desc
                     CALL s_desc_get_department_desc(g_xrgf_m.xrgfcomp) RETURNING g_xrgf_m.xrgfcomp_desc
                     DISPLAY BY NAME g_xrgf_m.xrgfcomp_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF s_chr_get_index_of(g_wc_cs_comp,g_xrgf_m.xrgfcomp,1) = 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ais-00228'
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_xrgf_m.xrgfcomp = g_xrgf_m_t.xrgfcomp
                     CALL s_desc_get_department_desc(g_xrgf_m.xrgfcomp) RETURNING g_xrgf_m.xrgfcomp_desc
                     DISPLAY BY NAME g_xrgf_m.xrgfcomp_desc
                     NEXT FIELD CURRENT
                  END IF                  
               END IF
            END IF
            CALL s_desc_get_department_desc(g_xrgf_m.xrgfcomp) RETURNING g_xrgf_m.xrgfcomp_desc
            DISPLAY BY NAME g_xrgf_m.xrgfcomp_desc  
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfcomp
            #add-point:BEFORE FIELD xrgfcomp name="input.b.xrgfcomp"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgfcomp
            #add-point:ON CHANGE xrgfcomp name="input.g.xrgfcomp"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf002
            
            #add-point:AFTER FIELD xrgf002 name="input.a.xrgf002"
            LET g_xrgf_m.xrgf002_desc = ''
            IF NOT cl_null(g_xrgf_m.xrgf002) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xrgf_m.xrgf002 != g_xrgf_m_t.xrgf002 OR g_xrgf_m_t.xrgf002 IS NULL )) THEN
                  LET g_errno = ''
                  CALL s_employee_chk(g_xrgf_m.xrgf002) RETURNING g_sub_success
                  IF NOT g_sub_success THEN
                     LET g_xrgf_m.xrgf002 = g_xrgf_m_t.xrgf002
                     CALL s_desc_get_person_desc(g_xrgf_m.xrgf002) RETURNING g_xrgf_m.xrgf002_desc
                     DISPLAY BY NAME g_xrgf_m.xrgf002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_person_desc(g_xrgf_m.xrgf002) RETURNING g_xrgf_m.xrgf002_desc
            DISPLAY BY NAME g_xrgf_m.xrgf002_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf002
            #add-point:BEFORE FIELD xrgf002 name="input.b.xrgf002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf002
            #add-point:ON CHANGE xrgf002 name="input.g.xrgf002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfdocno
            #add-point:BEFORE FIELD xrgfdocno name="input.b.xrgfdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgfdocno
            
            #add-point:AFTER FIELD xrgfdocno name="input.a.xrgfdocno"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            #IF  NOT cl_null(g_xrgf_m.xrgfcomp) AND NOT cl_null(g_xrgf_m.xrgfdocno) AND NOT cl_null(g_xrgf_m.xrgf001) THEN 
            #   IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xrgf_m.xrgfcomp != g_xrgfcomp_t  OR g_xrgf_m.xrgfdocno != g_xrgfdocno_t  OR g_xrgf_m.xrgf001 != g_xrgf001_t )) THEN 
            #      IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrgf_t WHERE "||"xrgfent = '" ||g_enterprise|| "' AND "||"xrgfcomp = '"||g_xrgf_m.xrgfcomp ||"' AND "|| "xrgfdocno = '"||g_xrgf_m.xrgfdocno ||"' AND "|| "xrgf001 = '"||g_xrgf_m.xrgf001 ||"'",'std-00004',0) THEN 
            #         NEXT FIELD CURRENT
            #      END IF
            #   END IF
            #END IF
            
            #160518-00037#5 mark----s
            #IF NOT cl_null(g_xrgf_m.xrgfdocno) THEN
            #   IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xrgf_m.xrgfcomp != g_xrgf_m_t.xrgfdocno OR g_xrgf_m_t.xrgfdocno IS NULL )) THEN
            #      LET g_errno = ''
            #      SELECT MAX(xrgf001)+1 INTO g_xrgf_m.xrgf001
            #        FROM xrgf_t
            #       WHERE xrgfent = g_enterprise
            #         AND xrgfcomp= g_xrgf_m.xrgfcomp AND xrgfdocno = g_xrgf_m.xrgfdocno
            #      IF cl_null(g_xrgf_m.xrgf001) THEN LET g_xrgf_m.xrgf001 = 1 END IF
            #      CALL s_axrt530_xrgfdocno_chk(g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001) RETURNING g_sub_success,l_gzza001,g_errno
            #      IF NOT g_sub_success THEN
            #         INITIALIZE g_errparam TO NULL
            #         LET g_errparam.code  = g_errno                     
            #         LET g_errparam.extend= l_gzza001
            #         LET g_errparam.popup = TRUE
            #         CALL cl_err()
            #         LET g_xrgf_m.xrgfdocno = g_xrgf_m_t.xrgfdocno
            #         LET g_xrgf_m.xrgf001   = ''
            #         NEXT FIELD CURRENT
            #      END IF
            #      CALL axrt530_get_xrgfdocno_info('i')
            #   END IF
            #END IF   
            #160518-00037#5 mark-----e        

            #160518-00037#5-----s
            
            LET l_ld = NULL
            SELECT glaald INTO l_ld FROM glaa_t
             WHERE glaaent = g_enterprise
               AND glaacomp = g_xrgf_m.xrgfcomp
               AND glaa014 = 'Y'
            IF NOT cl_null(g_xrgf_m.xrgfdocno) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (cl_null(g_xrgf_m_t.xrgfdocno) OR g_xrgf_m.xrgfdocno != g_xrgf_m_t.xrgfdocno)) THEN
                  #檢查是否有重複的單據編號(企業代碼/帳別/單號)
                  #現系統有提供直接打單號所以要檢查
                  IF NOT cl_null(g_xrgf_m.xrgfcomp) AND NOT cl_null(g_xrgf_m.xrgfdocno) THEN
                     IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xrgf_m.xrgfcomp != g_xrgfcomp_t  OR g_xrgf_m.xrgfdocno != g_xrgfdocno_t )) THEN
                        IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrgf_t WHERE "||"xrgfent = '" ||g_enterprise|| "' AND "||"xrgfcomp = '"||g_xrgf_m.xrgfcomp ||"' AND "|| "xrgfdocno = '"||g_xrgf_m.xrgfdocno ||"' ",'std-00004',0) THEN 
                           LET g_xrgf_m.xrgfdocno = g_xrgf_m_t.xrgfdocno
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                  END IF
                  IF NOT s_aooi200_fin_chk_docno(l_ld,'','',g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt,g_prog) THEN
                     LET g_xrgf_m.xrgfdocno = g_xrgf_m_t.xrgfdocno
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            #160518-00037#5-----e
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgfdocno
            #add-point:ON CHANGE xrgfdocno name="input.g.xrgfdocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfdocdt
            #add-point:BEFORE FIELD xrgfdocdt name="input.b.xrgfdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgfdocdt
            
            #add-point:AFTER FIELD xrgfdocdt name="input.a.xrgfdocdt"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgfdocdt
            #add-point:ON CHANGE xrgfdocdt name="input.g.xrgfdocdt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf009
            #add-point:BEFORE FIELD xrgf009 name="input.b.xrgf009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf009
            
            #add-point:AFTER FIELD xrgf009 name="input.a.xrgf009"
            #160518-00037#5 mark-----s
            #IF NOT cl_null(g_xrgf_m.xrgf009) THEN
            #   IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xrgf_m.xrgf009 != g_xrgf_m_t.xrgf009 OR g_xrgf_m_t.xrgf009 IS NULL )) THEN
            #      IF NOT s_aooi200_fin_chk_docno(g_glaald,'','',g_xrgf_m.xrgf009,g_xrgf_m.xrgfdocdt,'axrt400') THEN
            #         LET g_xrgf_m.xrgf009 = g_xrgf_m_t.xrgf009
            #         NEXT FIELD CURRENT
            #      END IF                  
            #      CALL axrt530_chk_slip(g_xrgf_m.xrgf009) RETURNING g_sub_success,g_errno
            #      IF NOT g_sub_success THEN
            #         INITIALIZE g_errparam TO NULL
            #         LET g_errparam.code  = g_errno
            #         LET g_errparam.popup = TRUE
            #         CALL cl_err()
            #         NEXT FIELD CURRENT
            #      END IF
            #   END IF
            #END IF
            #160518-00037#5 mark-----e
            
            #160518-00037#5-----s
            IF NOT cl_null(g_xrgf_m.xrgf009) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xrgf_m.xrgf009 != g_xrgf_m_t.xrgf009 OR g_xrgf_m_t.xrgf009 IS NULL )) THEN
                  LET g_errno = ''
                  SELECT MAX(xrgf001)+1 INTO g_xrgf_m.xrgf001
                    FROM xrgf_t
                   WHERE xrgfent = g_enterprise
                     AND xrgfcomp= g_xrgf_m.xrgfcomp AND xrgf001 = g_xrgf_m.xrgf001
                  IF cl_null(g_xrgf_m.xrgf001) THEN LET g_xrgf_m.xrgf001 = 1 END IF
                  CALL s_axrt530_xrgfdocno_chk(g_xrgf_m.xrgfcomp,g_xrgf_m.xrgf009,g_xrgf_m.xrgf001) RETURNING g_sub_success,l_gzza001,g_errno
                  IF NOT g_sub_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code  = g_errno                     
                     LET g_errparam.extend= l_gzza001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_xrgf_m.xrgf009 = g_xrgf_m_t.xrgf009
                     LET g_xrgf_m.xrgf001   = ''
                     NEXT FIELD CURRENT
                  END IF
                  CALL axrt530_get_xrgfdocno_info('i')
               END IF
            END IF            
            #160518-00037#5-----e
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf009
            #add-point:ON CHANGE xrgf009 name="input.g.xrgf009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf001
            #add-point:BEFORE FIELD xrgf001 name="input.b.xrgf001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf001
            
            #add-point:AFTER FIELD xrgf001 name="input.a.xrgf001"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  NOT cl_null(g_xrgf_m.xrgfcomp) AND NOT cl_null(g_xrgf_m.xrgfdocno) AND NOT cl_null(g_xrgf_m.xrgf001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_xrgf_m.xrgfcomp != g_xrgfcomp_t  OR g_xrgf_m.xrgfdocno != g_xrgfdocno_t  OR g_xrgf_m.xrgf001 != g_xrgf001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrgf_t WHERE "||"xrgfent = '" ||g_enterprise|| "' AND "||"xrgfcomp = '"||g_xrgf_m.xrgfcomp ||"' AND "|| "xrgfdocno = '"||g_xrgf_m.xrgfdocno ||"' AND "|| "xrgf001 = '"||g_xrgf_m.xrgf001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf001
            #add-point:ON CHANGE xrgf001 name="input.g.xrgf001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf003
            
            #add-point:AFTER FIELD xrgf003 name="input.a.xrgf003"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xrgf_m.xrgf003
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xrgf_m.xrgf003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xrgf_m.xrgf003_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf003
            #add-point:BEFORE FIELD xrgf003 name="input.b.xrgf003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf003
            #add-point:ON CHANGE xrgf003 name="input.g.xrgf003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf010
            #add-point:BEFORE FIELD xrgf010 name="input.b.xrgf010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf010
            
            #add-point:AFTER FIELD xrgf010 name="input.a.xrgf010"
            IF NOT cl_null(g_xrgf_m.xrgf010) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xrgf_m.xrgf010 != g_xrgf_m_t.xrgf010 OR g_xrgf_m_t.xrgf010 IS NULL )) THEN
                  IF NOT s_aooi200_fin_chk_docno(g_glaald,'','',g_xrgf_m.xrgf010,g_xrgf_m.xrgfdocdt,'aapt301') THEN
                     LET g_xrgf_m.xrgf010 = g_xrgf_m_t.xrgf010
                     NEXT FIELD CURRENT
                  END IF                  
                  CALL axrt530_chk_slip(g_xrgf_m.xrgf010) RETURNING g_sub_success,g_errno
                  IF NOT g_sub_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code  = g_errno
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf010
            #add-point:ON CHANGE xrgf010 name="input.g.xrgf010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgfstus
            #add-point:BEFORE FIELD xrgfstus name="input.b.xrgfstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgfstus
            
            #add-point:AFTER FIELD xrgfstus name="input.a.xrgfstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgfstus
            #add-point:ON CHANGE xrgfstus name="input.g.xrgfstus"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf100
            #add-point:BEFORE FIELD xrgf100 name="input.b.xrgf100"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf100
            
            #add-point:AFTER FIELD xrgf100 name="input.a.xrgf100"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf100
            #add-point:ON CHANGE xrgf100 name="input.g.xrgf100"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf007
            #add-point:BEFORE FIELD xrgf007 name="input.b.xrgf007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf007
            
            #add-point:AFTER FIELD xrgf007 name="input.a.xrgf007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf007
            #add-point:ON CHANGE xrgf007 name="input.g.xrgf007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf004
            
            #add-point:AFTER FIELD xrgf004 name="input.a.xrgf004"
            #160518-00037#5-----s
            LET g_xrgf_m.xrgf004_desc = ' '
            DISPLAY BY NAME g_xrgf_m.xrgf004_desc
            IF NOT cl_null(g_xrgf_m.xrgf004) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xrgf_m.xrgf004 != g_xrgf_m_t.xrgf004 OR g_xrgf_m_t.xrgf004 IS NULL )) THEN
                  
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xrgf_m.xrgf004
                  IF NOT cl_chk_exist("v_nmab001") THEN
                     LET g_xrgf_m.xrgf004 = g_xrgf_m_t.xrgf004
                     CALL s_desc_get_nmabl003(g_xrgf_m.xrgf004) RETURNING g_xrgf_m.xrgf004_desc
                     DISPLAY BY NAME g_xrgf_m.xrgf004_desc
                     NEXT FIELD CURRENT
                  END IF
                  
                  LET l_count = NULL
                  SELECT COUNT(*) INTO l_count FROM nmab_t,ooef_t
                   WHERE nmabent = ooefent AND nmab008 = ooef006
                     AND nmabent = g_enterprise AND ooef001 = g_xrgf_m.xrgfcomp
                     AND nmab001 = g_xrgf_m.xrgf004
                  IF cl_null(l_count)THEN LET l_count = 0 END IF
                  
                  IF l_count = 0 THEN
                     INITIALIZE g_errparam.* TO NULL
                     LET g_errparam.code = 'anm-00128'
                     LET g_errparam.popup = TRUE
                     LET g_errparam.extend = ''
                     CALL cl_err()
                     LET g_xrgf_m.xrgf004 = g_xrgf_m_t.xrgf004
                     CALL s_desc_get_nmabl003(g_xrgf_m.xrgf004) RETURNING g_xrgf_m.xrgf004_desc
                     DISPLAY BY NAME g_xrgf_m.xrgf004_desc
                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            END IF
            CALL s_desc_get_nmabl003(g_xrgf_m.xrgf004) RETURNING g_xrgf_m.xrgf004_desc
            DISPLAY BY NAME g_xrgf_m.xrgf004_desc            
            #160518-00037#5-----e
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf004
            #add-point:BEFORE FIELD xrgf004 name="input.b.xrgf004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf004
            #add-point:ON CHANGE xrgf004 name="input.g.xrgf004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf103
            #add-point:BEFORE FIELD xrgf103 name="input.b.xrgf103"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf103
            
            #add-point:AFTER FIELD xrgf103 name="input.a.xrgf103"
            CALL s_curr_round_ld('1',g_glaald,g_xrgf_m.xrgf100,g_xrgf_m.xrgf103,2) RETURNING g_sub_success,g_errno,g_xrgf_m.xrgf103
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf103
            #add-point:ON CHANGE xrgf103 name="input.g.xrgf103"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf011
            #add-point:BEFORE FIELD xrgf011 name="input.b.xrgf011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf011
            
            #add-point:AFTER FIELD xrgf011 name="input.a.xrgf011"
            #160518-00037#5-----s
            IF NOT cl_null(g_xrgf_m.xrgf011) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xrgf_m.xrgf011 != g_xrgf_m_t.xrgf011 OR g_xrgf_m_t.xrgf011 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xrgf_m.xrgf011
                  LET g_chkparam.arg2 = g_xrgf_m.xrgfcomp
                  LET g_chkparam.arg3 = '5'
                  IF NOT cl_chk_exist("v_nmas002_4") THEN
                     LET g_xrgf_m.xrgf011 = g_xrgf_m_t.xrgf011
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF NOT s_anmi120_nmll002_chk(g_xrgf_m.xrgf011,g_user)THEN
                     INITIALIZE g_errparam.* TO NULL
                     LET g_errparam.code = 'anm-00574'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_xrgf_m.xrgf011 = g_xrgf_m_t.xrgf011
                     NEXT FIELD CURRENT                     
                  END IF
                  
                  IF NOT cl_null(g_xrgf_m.xrgf100)THEN
                     LET l_nmas003 = NULL
                     SELECT nmas003 INTO l_nmas003 FROM nmas_t
                      WHERE nmasent = g_enterprise
                        AND nmas001 = g_xrgf_m.xrgf011
                     
                     IF l_nmas003 <> g_xrgf_m.xrgf100 THEN
                        LET g_errparam.extend = ''
                        LET g_errparam.code   = 'anm-00574'
                        LET g_errparam.popup  = TRUE
                        CALL cl_err()
                        LET g_xrgf_m.xrgf011 = g_xrgf_m_t.xrgf011
                        NEXT FIELD CURRENT 
                     END IF
                  END IF
               END IF
            END IF
            #160518-00037#5-----e
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf011
            #add-point:ON CHANGE xrgf011 name="input.g.xrgf011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf008
            #add-point:BEFORE FIELD xrgf008 name="input.b.xrgf008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf008
            
            #add-point:AFTER FIELD xrgf008 name="input.a.xrgf008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf008
            #add-point:ON CHANGE xrgf008 name="input.g.xrgf008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf012
            
            #add-point:AFTER FIELD xrgf012 name="input.a.xrgf012"
            #160518-00037#5 mark-----s
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_xrgf_m.xrgf012
            #CALL ap_ref_array2(g_ref_fields,"SELECT nmajl003 FROM nmajl_t WHERE nmajlent='"||g_enterprise||"' AND nmajl001=? AND nmajl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_xrgf_m.xrgf012_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_xrgf_m.xrgf012_desc
            #160518-00037#5 mark-----e

            #160518-00037#5-----s
            LET g_xrgf_m.xrgf012_desc = ''
            IF NOT cl_null(g_xrgf_m.xrgf012) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xrgf_m.xrgf012 != g_xrgf_m_t.xrgf012 OR g_xrgf_m_t.xrgf012 IS NULL )) THEN
                  LET l_glaa005 = NULL
                  SELECT glaa005 INTO l_glaa005 FROM glaa_t
                   WHERE glaaent  = g_enterprise
                     AND glaacomp = g_xrgf_m.xrgfcomp
                     AND glaa014  = 'Y'
                 INITIALIZE g_chkparam.* TO NULL
                 LET g_chkparam.arg1 = l_glaa005
                 LET g_chkparam.arg2 = g_xrgf_m.xrgf012
                 LET g_errshow = TRUE
                 LET g_chkparam.err_str[1] = "agl-00149:sub-01302|anmi172|",cl_get_progname("anmi172",g_lang,"2"),"|:EXEPROGanmi172"
                 IF cl_chk_exist("v_nmad002") THEN
                    IF cl_null(g_xrgf_m.xrgf013) THEN
                       SELECT nmad003 INTO g_xrgf_m.xrgf013
                         FROM nmad_t
                        WHERE nmadent = g_enterprise
                          AND nmad001 = l_glaa005
                          AND nmad002 = g_xrgf_m.xrgf012
                       CALL s_desc_get_nmail004_desc(l_glaa005,g_xrgf_m.xrgf013) RETURNING g_xrgf_m.xrgf013_desc
                       DISPLAY BY NAME g_xrgf_m.xrgf012,g_xrgf_m.xrgf012_desc
                    END IF
                 ELSE
                    LET g_xrgf_m.xrgf012 = g_xrgf_m_t.xrgf012
                    CALL s_desc_get_nmajl003_desc(g_xrgf_m.xrgf012) RETURNING g_xrgf_m.xrgf012_desc
                    NEXT FIELD CURRENT
                 END IF
               END IF
            END IF
            CALL s_desc_get_nmajl003_desc(g_xrgf_m.xrgf012) RETURNING g_xrgf_m.xrgf012_desc
            DISPLAY BY NAME g_xrgf_m.xrgf012_desc
            #160518-00037#5-----e
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf012
            #add-point:BEFORE FIELD xrgf012 name="input.b.xrgf012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf012
            #add-point:ON CHANGE xrgf012 name="input.g.xrgf012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf006
            #add-point:BEFORE FIELD xrgf006 name="input.b.xrgf006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf006
            
            #add-point:AFTER FIELD xrgf006 name="input.a.xrgf006"
            #160518-00037#5-----s
            IF NOT cl_null(g_xrgf_m.xrgf006)THEN
               IF cl_null(g_xrgf_m_t.xrgf006) OR (g_xrgf_m_t.xrgf006 <> g_xrgf_m.xrgf006)THEN
                  LET l_count = NULL
                  SELECT COUNT(*) INTO l_count FROM xrgi_t
                   WHERE xrgient = g_enterprise
                     AND xrgicomp = g_xrgf_m.xrgfcomp
                     AND xrgidocno = g_xrgf_m.xrgfdocno
                     AND xrgi001   = g_xrgf_m.xrgf001
                  IF cl_null(l_count)THEN LET l_count = 0 END IF
                  IF l_count = 0 THEN
                     CALL axrt530_iv_ins_xrgi()RETURNING g_sub_success
                  ELSE
                     IF cl_ask_confirm('axr-01037')THEN
                        CALL axrt530_iv_ins_xrgi()RETURNING g_sub_success            
                     END IF
                  END IF
                  CALL axrt530_b_fill()
               END IF
            END IF
            #160518-00037#5-----e
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf006
            #add-point:ON CHANGE xrgf006 name="input.g.xrgf006"
            #160518-00037#5 mark-----s
            #IF g_xrgf_m.xrgf006 = 'Y' THEN      #押汇失败
            #   LET g_xrgf_m.xrgf008 = ''
            #   LET g_xrgf_m.xrgf103 = 0
            #   LET g_xrgf_m.xrgf113 = 0
            #ELSE
            #   LET g_xrgf_m.xrgf008 = g_xrgf_m.xrgfdocdt
            #END IF
            #CALL axrt530_set_entry('')
            #CALL axrt530_set_no_entry('')
            #160518-00037#5 mark-----e
            

            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf013
            
            #add-point:AFTER FIELD xrgf013 name="input.a.xrgf013"
            #160518-00037#5 mark-----s
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_xrgf_m.xrgf013
            #CALL ap_ref_array2(g_ref_fields,"SELECT nmail004 FROM nmail_t WHERE nmailent='"||g_enterprise||"' AND nmail001=? AND nmail002='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_xrgf_m.xrgf013_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_xrgf_m.xrgf013_desc
            #160518-00037#5 mark-----e

            #160518-00037#5-----s
            LET l_glaa005 = NULL
            SELECT glaa005 INTO l_glaa005 FROM glaa_t
             WHERE glaaent  = g_enterprise
               AND glaacomp = g_xrgf_m.xrgfcomp
               AND glaa014  = 'Y'
            IF NOT cl_null(g_xrgf_m.xrgf013) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xrgf_m.xrgf013 != g_xrgf_m_t.xrgf013 OR g_xrgf_m_t.xrgf013 IS NULL )) THEN

                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xrgf_m.xrgf013
                  LET g_chkparam.arg2 = l_glaa005
                  IF cl_chk_exist("v_nmai002") THEN
                  ELSE
                     #檢查失敗時後續處理
                     LET g_xrgf_m.xrgf013 = g_xrgf_m_t.xrgf013
                     CALL s_desc_get_nmail004_desc(l_glaa005,g_xrgf_m.xrgf013) RETURNING g_xrgf_m.xrgf013_desc
                     DISPLAY BY NAME g_xrgf_m.xrgf013_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            INITIALIZE g_ref_fields TO NULL
            CALL s_desc_get_nmail004_desc(l_glaa005,g_xrgf_m.xrgf013) RETURNING g_xrgf_m.xrgf013_desc
            DISPLAY BY NAME g_xrgf_m.xrgf013_desc
            #160518-00037#5-----e
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf013
            #add-point:BEFORE FIELD xrgf013 name="input.b.xrgf013"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf013
            #add-point:ON CHANGE xrgf013 name="input.g.xrgf013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf104
            #add-point:BEFORE FIELD xrgf104 name="input.b.xrgf104"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf104
            
            #add-point:AFTER FIELD xrgf104 name="input.a.xrgf104"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf104
            #add-point:ON CHANGE xrgf104 name="input.g.xrgf104"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_glaa001
            #add-point:BEFORE FIELD l_glaa001 name="input.b.l_glaa001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_glaa001
            
            #add-point:AFTER FIELD l_glaa001 name="input.a.l_glaa001"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_glaa001
            #add-point:ON CHANGE l_glaa001 name="input.g.l_glaa001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf101
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_xrgf_m.xrgf101,"0","1","","","azz-00079",1) THEN
               NEXT FIELD xrgf101
            END IF 
 
 
 
            #add-point:AFTER FIELD xrgf101 name="input.a.xrgf101"
            CALL s_curr_round_ld('1',g_glaald,g_xrgf_m.xrgf100,g_xrgf_m.xrgf101,3) RETURNING g_sub_success,g_errno,g_xrgf_m.xrgf101
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf101
            #add-point:BEFORE FIELD xrgf101 name="input.b.xrgf101"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf101
            #add-point:ON CHANGE xrgf101 name="input.g.xrgf101"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf113
            #add-point:BEFORE FIELD xrgf113 name="input.b.xrgf113"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf113
            
            #add-point:AFTER FIELD xrgf113 name="input.a.xrgf113"
            CALL s_curr_round_ld('1',g_glaald,g_glaa001,g_xrgf_m.xrgf113,2) RETURNING g_sub_success,g_errno,g_xrgf_m.xrgf113
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf113
            #add-point:ON CHANGE xrgf113 name="input.g.xrgf113"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgf005
            #add-point:BEFORE FIELD xrgf005 name="input.b.xrgf005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgf005
            
            #add-point:AFTER FIELD xrgf005 name="input.a.xrgf005"
            IF NOT cl_null(g_xrgf_m.xrgf005) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_xrgf_m.xrgfcomp != g_xrgf_m_t.xrgf005 OR g_xrgf_m_t.xrgf005 IS NULL )) THEN
                  CALL s_axrt530_xrgf005_chk(g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001,g_xrgf_m.xrgf003,g_xrgf_m.xrgf005) RETURNING g_sub_success,g_errno
                  IF NOT g_sub_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code  = g_errno                     
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_xrgf_m.xrgf005 = g_xrgf_m_t.xrgf005
                     NEXT FIELD CURRENT
                  END IF
                  #160518-00037#5 mark-----s
                  #SELECT xmdo051 INTO g_xrgf_m.xmdo051
                  #  FROM xmdo_t
                  # WHERE xmdoent = g_enterprise AND xmdodocno = g_xrgf_m.xrgf005
                  #DISPLAY BY NAME g_xrgf_m.xmdo051
                  #160518-00037#5 mark-----e
               END IF
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgf005
            #add-point:ON CHANGE xrgf005 name="input.g.xrgf005"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.xrgfcomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgfcomp
            #add-point:ON ACTION controlp INFIELD xrgfcomp name="input.c.xrgfcomp"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE 
            LET g_qryparam.default1 = g_xrgf_m.xrgfcomp             #給予default值
            LET g_qryparam.where = " ooef003 = 'Y'  AND ooef001 IN ",g_wc_cs_comp
            CALL q_ooef001()
            LET g_xrgf_m.xrgfcomp = g_qryparam.return1              
            DISPLAY g_xrgf_m.xrgfcomp TO xrgfcomp
            CALL s_desc_get_department_desc(g_xrgf_m.xrgfcomp) RETURNING g_xrgf_m.xrgfcomp_desc                    
            DISPLAY BY NAME g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfcomp_desc
            NEXT FIELD xrgfcomp
            #END add-point
 
 
         #Ctrlp:input.c.xrgf002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf002
            #add-point:ON ACTION controlp INFIELD xrgf002 name="input.c.xrgf002"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_xrgf_m.xrgf002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

 
            CALL q_ooag001()                                #呼叫開窗
 
            LET g_xrgf_m.xrgf002 = g_qryparam.return1              

            DISPLAY g_xrgf_m.xrgf002 TO xrgf002              #

            NEXT FIELD xrgf002                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.xrgfdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgfdocno
            #add-point:ON ACTION controlp INFIELD xrgfdocno name="input.c.xrgfdocno"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            #160518-00037#5 mark-----s
            #INITIALIZE g_qryparam.* TO NULL
            #LET g_qryparam.state = 'i'
            #LET g_qryparam.reqry = FALSE 
            #LET g_qryparam.default1 = g_xrgf_m.xrgfdocno
            #LET g_qryparam.where = " xrga025 ='N' AND xrgastus = 'Y' AND xrgacomp = '",g_xrgf_m.xrgfcomp,"'"
            #CALL q_xrgadocno()
            #LET g_xrgf_m.xrgfdocno = g_qryparam.return1              
            #DISPLAY g_xrgf_m.xrgfdocno TO xrgfdocno
            #NEXT FIELD xrgfdocno
            #160518-00037#5 mark-----e
            
            #160518-00037#5-----s
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xrgf_m.xrgfdocno
            LET l_glaa024 = NULL
            SELECT glaa024 INTO l_glaa024 FROM glaa_t
             WHERE glaaent = g_enterprise
               AND glaacomp = g_xrgf_m.xrgfcomp
               AND glaa014 = 'Y'
            LET g_qryparam.arg1 = l_glaa024
            LET g_qryparam.arg2 = g_prog
            CALL q_ooba002_1()
            LET g_xrgf_m.xrgfdocno = g_qryparam.return1
            DISPLAY BY NAME g_xrgf_m.xrgfdocno
            NEXT FIELD xrgfdocno            
            #160518-00037#5-----e
            #END add-point
 
 
         #Ctrlp:input.c.xrgfdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgfdocdt
            #add-point:ON ACTION controlp INFIELD xrgfdocdt name="input.c.xrgfdocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.xrgf009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf009
            #add-point:ON ACTION controlp INFIELD xrgf009 name="input.c.xrgf009"
            #應用 a07 樣板自動產生(Version:3)   
            #160518-00037#5 mark-----s
            ##開窗i段
            #INITIALIZE g_qryparam.* TO NULL
            #LET g_qryparam.state = 'i'
            #LET g_qryparam.reqry = FALSE 
            #LET g_qryparam.default1 = g_xrgf_m.xrgf009             #給予default值
            #LET g_qryparam.arg1 = g_glaa024
            #LET g_qryparam.arg2 = "axrt400"
            #LET g_qryparam.where =  "     EXISTS ( SELECT 1 FROM ooac_t ",
            #                                          "      WHERE ooacent = oobaent AND ooac001 = ooba001 AND  ooac002 = ooba002 ",
            #                                          "        AND ooac003 = 'D-FIN-0030' AND ooac004 = 'Y') "  #只能選產生傳票的單別            
            #CALL q_ooba002_1()
            #LET g_xrgf_m.xrgf009 = g_qryparam.return1 
            #DISPLAY g_xrgf_m.xrgf009 TO xrgf009              #
            #NEXT FIELD xrgf009
            #160518-00037#5 mark-----e
            
            #160518-00037#5-----s
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE 
            LET g_qryparam.default1 = g_xrgf_m.xrgf009
            LET g_qryparam.where = " xrga025 ='N' AND xrgastus = 'Y' AND xrgacomp = '",g_xrgf_m.xrgfcomp,"'"
            CALL q_xrgadocno()
            LET g_xrgf_m.xrgf009 = g_qryparam.return1              
            DISPLAY BY NAME g_xrgf_m.xrgf009
            NEXT FIELD xrgf009
            #160518-00037#5-----e
            #END add-point
 
 
         #Ctrlp:input.c.xrgf001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf001
            #add-point:ON ACTION controlp INFIELD xrgf001 name="input.c.xrgf001"
            
            #END add-point
 
 
         #Ctrlp:input.c.xrgf003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf003
            #add-point:ON ACTION controlp INFIELD xrgf003 name="input.c.xrgf003"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_xrgf_m.xrgf003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "('1','3')"

 
            CALL q_pmaa001_1()                                #呼叫開窗
 
            LET g_xrgf_m.xrgf003 = g_qryparam.return1              

            DISPLAY g_xrgf_m.xrgf003 TO xrgf003              #

            NEXT FIELD xrgf003                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.xrgf010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf010
            #add-point:ON ACTION controlp INFIELD xrgf010 name="input.c.xrgf010"
            #應用 a07 樣板自動產生(Version:3)   
            #160518-00037#5 mark-----s
            ##開窗i段
            #INITIALIZE g_qryparam.* TO NULL
            #LET g_qryparam.state = 'i'
            #LET g_qryparam.reqry = FALSE 
            #LET g_qryparam.default1 = g_xrgf_m.xrgf010
            #LET g_qryparam.arg1 = g_glaa024
            #LET g_qryparam.arg2 = 'aapt301'       
            #LET g_qryparam.where =  "     EXISTS ( SELECT 1 FROM ooac_t ",
            #                                          "      WHERE ooacent = oobaent AND ooac001 = ooba001 AND  ooac002 = ooba002 ",
            #                                          "        AND ooac003 = 'D-FIN-0030' AND ooac004 = 'Y') "  #只能選產生傳票的單別            
            #CALL q_ooba002_1()
            #LET g_xrgf_m.xrgf010 = g_qryparam.return1
            #DISPLAY g_xrgf_m.xrgf010 TO xrgf010
            #NEXT FIELD xrgf010
            #160518-00037#5 mark-----e
            #END add-point
 
 
         #Ctrlp:input.c.xrgfstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgfstus
            #add-point:ON ACTION controlp INFIELD xrgfstus name="input.c.xrgfstus"
            
            #END add-point
 
 
         #Ctrlp:input.c.xrgf100
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf100
            #add-point:ON ACTION controlp INFIELD xrgf100 name="input.c.xrgf100"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_xrgf_m.xrgf100             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_ooai001()                                #呼叫開窗
 
            LET g_xrgf_m.xrgf100 = g_qryparam.return1              

            DISPLAY g_xrgf_m.xrgf100 TO xrgf100              #

            NEXT FIELD xrgf100                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.xrgf007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf007
            #add-point:ON ACTION controlp INFIELD xrgf007 name="input.c.xrgf007"
            
            #END add-point
 
 
         #Ctrlp:input.c.xrgf004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf004
            #add-point:ON ACTION controlp INFIELD xrgf004 name="input.c.xrgf004"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xrgf_m.xrgf004
            #160518-00037#5-----s
            SELECT ooef006 INTO l_ooef006 FROM ooef_t
             WHERE ooefent = g_enterprise
               AND ooef001 = g_xrgf_m.xrgfcomp
            LET g_qryparam.where = "nmab008 = '",l_ooef006,"' "   
            #160518-00037#5-----e
            CALL q_nmab001()
            LET g_xrgf_m.xrgf004 = g_qryparam.return1              
            DISPLAY g_xrgf_m.xrgf004 TO xrgf004
            NEXT FIELD xrgf004
            #END add-point
 
 
         #Ctrlp:input.c.xrgf103
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf103
            #add-point:ON ACTION controlp INFIELD xrgf103 name="input.c.xrgf103"
            
            #END add-point
 
 
         #Ctrlp:input.c.xrgf011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf011
            #add-point:ON ACTION controlp INFIELD xrgf011 name="input.c.xrgf011"
            #160518-00037#5-----s
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xrgf_m.xrgf011
            LET g_qryparam.where = "nmas002 IN(",g_sql_bank,") ",
                                   " AND EXISTS(SELECT 1 FROM nmag_t WHERE nmag001 = nmaa003 AND nmag002 IN ('1','5') AND nmagent = nmaaent) ",
                                   " AND nmaa002 IN (SELECT ooef001 FROM ooef_t WHERE ooefent = nmaaent AND ooef017 = '",g_xrgf_m.xrgfcomp,"') ",
                                   " AND nmas003 = '",g_xrgf_m.xrgf100,"' "

            CALL q_nmas_01()
            LET g_xrgf_m.xrgf011 = g_qryparam.return1             
            DISPLAY BY NAME g_xrgf_m.xrgf011
            NEXT FIELD xrgf011
            #160518-00037#5-----e
            #END add-point
 
 
         #Ctrlp:input.c.xrgf008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf008
            #add-point:ON ACTION controlp INFIELD xrgf008 name="input.c.xrgf008"
            
            #END add-point
 
 
         #Ctrlp:input.c.xrgf012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf012
            #add-point:ON ACTION controlp INFIELD xrgf012 name="input.c.xrgf012"
            #160518-00037#5-----s
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xrgf_m.xrgf012
            LET l_glaa005 = NULL
            SELECT glaa005 INTO l_glaa005 FROM glaa_t
             WHERE glaaent = g_enterprise
               AND glaacomp = g_xrgf_m.xrgfcomp
               AND glaa014 = 'Y'
            LET g_qryparam.arg1 = l_glaa005
            LET g_qryparam.where = "nmad002 IN(SELECT nmaj001 FROM nmaj_t WHERE nmaj002 ='1' AND nmajstus = 'Y' AND nmajent = '",g_enterprise,"' )"
            CALL q_nmad002()
            LET g_xrgf_m.xrgf012 = g_qryparam.return1             
            DISPLAY BY NAME g_xrgf_m.xrgf012
            NEXT FIELD xrgf012
            #160518-00037#5-----e
            #END add-point
 
 
         #Ctrlp:input.c.xrgf006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf006
            #add-point:ON ACTION controlp INFIELD xrgf006 name="input.c.xrgf006"
            
            #END add-point
 
 
         #Ctrlp:input.c.xrgf013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf013
            #add-point:ON ACTION controlp INFIELD xrgf013 name="input.c.xrgf013"
            #160518-00037#5-----s
            LET l_glaa005 = NULL
            SELECT glaa005 INTO l_glaa005 FROM glaa_t
             WHERE glaaent  = g_enterprise
               AND glaacomp = g_xrgf_m.xrgfcomp
               AND glaa014  = 'Y'
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xrgf_m.xrgf013
            LET g_qryparam.arg1 = ""
            LET g_qryparam.where = " nmai001='",l_glaa005,"' "
            CALL q_nmai002()
            LET g_xrgf_m.xrgf013 = g_qryparam.return1
            DISPLAY BY NAME g_xrgf_m.xrgf013
            NEXT FIELD xrgf013
            #160518-00037#5-----e
            #END add-point
 
 
         #Ctrlp:input.c.xrgf104
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf104
            #add-point:ON ACTION controlp INFIELD xrgf104 name="input.c.xrgf104"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_glaa001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_glaa001
            #add-point:ON ACTION controlp INFIELD l_glaa001 name="input.c.l_glaa001"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_xrgf_m.l_glaa001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_ooai001()                                #呼叫開窗
 
            LET g_xrgf_m.l_glaa001 = g_qryparam.return1              

            DISPLAY g_xrgf_m.l_glaa001 TO l_glaa001              #

            NEXT FIELD l_glaa001                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.xrgf101
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf101
            #add-point:ON ACTION controlp INFIELD xrgf101 name="input.c.xrgf101"
            
            #END add-point
 
 
         #Ctrlp:input.c.xrgf113
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf113
            #add-point:ON ACTION controlp INFIELD xrgf113 name="input.c.xrgf113"
            
            #END add-point
 
 
         #Ctrlp:input.c.xrgf005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgf005
            #add-point:ON ACTION controlp INFIELD xrgf005 name="input.c.xrgf005"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE 
            LET g_qryparam.default1 = g_xrgf_m.xrgf005
            LET g_qryparam.where =  " xmdostus = 'Y' AND xmdo007 = '",g_xrgf_m.xrgf003,"'",
                                    " AND xmdodocno IN ( SELECT DISTINCT xmdpdocno FROM xrgb_t,xmdp_t ",
                                                       "  WHERE xrgbent = ",g_enterprise ,
                                                       "    AND xmdp003 = xrgb001 AND xmdpent = xrgbent",
                                                       "    AND xrgbcomp= '",g_xrgf_m.xrgfcomp,"' AND xrgbdocno = '",g_xrgf_m.xrgfdocno,"')"
            CALL q_xmdodocno()
            LET g_xrgf_m.xrgf005 = g_qryparam.return1
            DISPLAY g_xrgf_m.xrgf005 TO xrgf005
            NEXT FIELD xrgf005
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               LET l_ld = NULL
               SELECT glaald INTO l_ld FROM glaa_t
                WHERE glaaent = g_enterprise
                  AND glaacomp = g_xrgf_m.xrgfcomp
                  AND glaa014 = 'Y'
               CALL s_aooi200_fin_gen_docno(l_ld,'','',g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt,g_prog)
                    RETURNING g_sub_success,g_xrgf_m.xrgfdocno
               IF NOT g_sub_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_xrgf_m.xrgfdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD xrgfdocno
               END IF
               #end add-point
               
               INSERT INTO xrgf_t (xrgfent,xrgfcomp,xrgf002,xrgfdocno,xrgfdocdt,xrgf009,xrgf001,xrgf003, 
                   xrgf010,xrgfstus,xrgfownid,xrgfowndp,xrgfcrtid,xrgfcrtdp,xrgfcrtdt,xrgfmodid,xrgfmoddt, 
                   xrgfcnfid,xrgfcnfdt,xrgf100,xrgf007,xrgf004,xrgf103,xrgf011,xrgf008,xrgf012,xrgf006, 
                   xrgf013,xrgf104,xrgf101,xrgf113,xrgf005)
               VALUES (g_enterprise,g_xrgf_m.xrgfcomp,g_xrgf_m.xrgf002,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt, 
                   g_xrgf_m.xrgf009,g_xrgf_m.xrgf001,g_xrgf_m.xrgf003,g_xrgf_m.xrgf010,g_xrgf_m.xrgfstus, 
                   g_xrgf_m.xrgfownid,g_xrgf_m.xrgfowndp,g_xrgf_m.xrgfcrtid,g_xrgf_m.xrgfcrtdp,g_xrgf_m.xrgfcrtdt, 
                   g_xrgf_m.xrgfmodid,g_xrgf_m.xrgfmoddt,g_xrgf_m.xrgfcnfid,g_xrgf_m.xrgfcnfdt,g_xrgf_m.xrgf100, 
                   g_xrgf_m.xrgf007,g_xrgf_m.xrgf004,g_xrgf_m.xrgf103,g_xrgf_m.xrgf011,g_xrgf_m.xrgf008, 
                   g_xrgf_m.xrgf012,g_xrgf_m.xrgf006,g_xrgf_m.xrgf013,g_xrgf_m.xrgf104,g_xrgf_m.xrgf101, 
                   g_xrgf_m.xrgf113,g_xrgf_m.xrgf005) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_xrgf_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axrt530_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL axrt530_b_fill()
                  CALL axrt530_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL axrt530_xrgf_t_mask_restore('restore_mask_o')
               
               UPDATE xrgf_t SET (xrgfcomp,xrgf002,xrgfdocno,xrgfdocdt,xrgf009,xrgf001,xrgf003,xrgf010, 
                   xrgfstus,xrgfownid,xrgfowndp,xrgfcrtid,xrgfcrtdp,xrgfcrtdt,xrgfmodid,xrgfmoddt,xrgfcnfid, 
                   xrgfcnfdt,xrgf100,xrgf007,xrgf004,xrgf103,xrgf011,xrgf008,xrgf012,xrgf006,xrgf013, 
                   xrgf104,xrgf101,xrgf113,xrgf005) = (g_xrgf_m.xrgfcomp,g_xrgf_m.xrgf002,g_xrgf_m.xrgfdocno, 
                   g_xrgf_m.xrgfdocdt,g_xrgf_m.xrgf009,g_xrgf_m.xrgf001,g_xrgf_m.xrgf003,g_xrgf_m.xrgf010, 
                   g_xrgf_m.xrgfstus,g_xrgf_m.xrgfownid,g_xrgf_m.xrgfowndp,g_xrgf_m.xrgfcrtid,g_xrgf_m.xrgfcrtdp, 
                   g_xrgf_m.xrgfcrtdt,g_xrgf_m.xrgfmodid,g_xrgf_m.xrgfmoddt,g_xrgf_m.xrgfcnfid,g_xrgf_m.xrgfcnfdt, 
                   g_xrgf_m.xrgf100,g_xrgf_m.xrgf007,g_xrgf_m.xrgf004,g_xrgf_m.xrgf103,g_xrgf_m.xrgf011, 
                   g_xrgf_m.xrgf008,g_xrgf_m.xrgf012,g_xrgf_m.xrgf006,g_xrgf_m.xrgf013,g_xrgf_m.xrgf104, 
                   g_xrgf_m.xrgf101,g_xrgf_m.xrgf113,g_xrgf_m.xrgf005)
                WHERE xrgfent = g_enterprise AND xrgfcomp = g_xrgfcomp_t
                  AND xrgfdocno = g_xrgfdocno_t
                  AND xrgf001 = g_xrgf001_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "xrgf_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL axrt530_xrgf_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_xrgf_m_t)
               LET g_log2 = util.JSON.stringify(g_xrgf_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_xrgfcomp_t = g_xrgf_m.xrgfcomp
            LET g_xrgfdocno_t = g_xrgf_m.xrgfdocno
            LET g_xrgf001_t = g_xrgf_m.xrgf001
 
            
      END INPUT
   
 
{</section>}
 
{<section id="axrt530.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_apgc_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
 
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_apgc_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axrt530_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_apgc_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axrt530_cl USING g_enterprise,g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axrt530_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE axrt530_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_apgc_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_apgc_d[l_ac].apgcseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_apgc_d_t.* = g_apgc_d[l_ac].*  #BACKUP
               LET g_apgc_d_o.* = g_apgc_d[l_ac].*  #BACKUP
               CALL axrt530_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL axrt530_set_no_entry_b(l_cmd)
               IF NOT axrt530_lock_b("apgc_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axrt530_bcl INTO g_apgc_d[l_ac].apgcseq,g_apgc_d[l_ac].apgcorga,g_apgc_d[l_ac].apgc001, 
                      g_apgc_d[l_ac].apgc014,g_apgc_d[l_ac].apgc100,g_apgc_d[l_ac].apgc101,g_apgc_d[l_ac].apgc006, 
                      g_apgc_d[l_ac].apgc007,g_apgc_d[l_ac].apgc008,g_apgc_d[l_ac].apgc009,g_apgc_d[l_ac].apgc010, 
                      g_apgc_d[l_ac].apgc011,g_apgc_d[l_ac].apgc103,g_apgc_d[l_ac].apgc104,g_apgc_d[l_ac].apgc105, 
                      g_apgc_d[l_ac].apgc113,g_apgc_d[l_ac].apgc114,g_apgc_d[l_ac].apgc115,g_apgc_d[l_ac].apgc015, 
                      g_apgc_d[l_ac].apgc016,g_apgc_d[l_ac].apgc004,g_apgc_d[l_ac].apgc013
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_apgc_d_t.apgcseq,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_apgc_d_mask_o[l_ac].* =  g_apgc_d[l_ac].*
                  CALL axrt530_apgc_t_mask()
                  LET g_apgc_d_mask_n[l_ac].* =  g_apgc_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axrt530_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_apgc_d[l_ac].* TO NULL 
            INITIALIZE g_apgc_d_t.* TO NULL 
            INITIALIZE g_apgc_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_apgc_d[l_ac].apgcseq = "0"
      LET g_apgc_d[l_ac].apgc101 = "0"
      LET g_apgc_d[l_ac].oodb005 = "N"
      LET g_apgc_d[l_ac].apgc103 = "0"
      LET g_apgc_d[l_ac].apgc104 = "0"
      LET g_apgc_d[l_ac].apgc105 = "0"
      LET g_apgc_d[l_ac].apgc113 = "0"
      LET g_apgc_d[l_ac].apgc114 = "0"
      LET g_apgc_d[l_ac].apgc115 = "0"
      LET g_apgc_d[l_ac].apgc013 = "axrt530"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            LET g_apgc_d[l_ac].apgcorga= g_xrgf_m.xrgfcomp
            IF l_cmd = 'a' THEN
               SELECT MAX(apgcseq)+1 INTO g_apgc_d[l_ac].apgcseq
                 FROM apgc_t
                WHERE apgcent = g_enterprise AND apgccomp = g_xrgf_m.xrgfcomp
                  AND apgcdocno = g_xrgf_m.xrgfdocno AND apgc900 = g_xrgf_m.xrgf001
                  AND apgc013 = 'axrt530'
               IF cl_null(g_apgc_d[l_ac].apgcseq) THEN LET g_apgc_d[l_ac].apgcseq = 1 END IF  
            END IF
            
            #160926-00018#1-----s
            CALL s_apmm101_sel_pmab(g_xrgf_m.xrgfcomp,g_xrgf_m.xrgf003,'pmab037|pmab055|pmab034|pmab056')
               RETURNING g_sub_success,g_errno,l_pmab037,l_pmab055,l_pmab034,l_pmab056
            #LET g_apgc_d[l_ac].apgc002 = g_xrgf_m.xrgf003
            #LET g_apgc_d[l_ac].apgc003 = l_pmab037   #預帶對象主要付款條件 pmab037
            #LET g_apgc_d[l_ac].apgc005 = l_pmab055   #慣用帳款類別 pmab055     
            LET g_apgc_d[l_ac].apgc006 = l_pmab034   #預帶交易對象慣用稅別  pmab034
            LET g_apgc_d[l_ac].apgc007 = l_pmab056   #慣用發票類型 pmab056
            #160926-00018#1-----e
            
            
            #end add-point
            LET g_apgc_d_t.* = g_apgc_d[l_ac].*     #新輸入資料
            LET g_apgc_d_o.* = g_apgc_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axrt530_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL axrt530_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_apgc_d[li_reproduce_target].* = g_apgc_d[li_reproduce].*
 
               LET g_apgc_d[li_reproduce_target].apgcseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM apgc_t 
             WHERE apgcent = g_enterprise AND apgccomp = g_xrgf_m.xrgfcomp
               AND apgcdocno = g_xrgf_m.xrgfdocno
               AND apgc900 = g_xrgf_m.xrgf001
 
               AND apgcseq = g_apgc_d[l_ac].apgcseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xrgf_m.xrgfcomp
               LET gs_keys[2] = g_xrgf_m.xrgfdocno
               LET gs_keys[3] = g_xrgf_m.xrgf001
               LET gs_keys[4] = g_apgc_d[g_detail_idx].apgcseq
               CALL axrt530_insert_b('apgc_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_apgc_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "apgc_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axrt530_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xrgf_m.xrgfcomp
               LET gs_keys[gs_keys.getLength()+1] = g_xrgf_m.xrgfdocno
               LET gs_keys[gs_keys.getLength()+1] = g_xrgf_m.xrgf001
 
               LET gs_keys[gs_keys.getLength()+1] = g_apgc_d_t.apgcseq
 
            
               #刪除同層單身
               IF NOT axrt530_delete_b('apgc_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axrt530_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axrt530_key_delete_b(gs_keys,'apgc_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axrt530_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE axrt530_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_apgc_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_apgc_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgcseq
            #add-point:BEFORE FIELD apgcseq name="input.b.page1.apgcseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgcseq
            
            #add-point:AFTER FIELD apgcseq name="input.a.page1.apgcseq"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  g_xrgf_m.xrgfcomp IS NOT NULL AND g_xrgf_m.xrgfdocno IS NOT NULL AND g_xrgf_m.xrgf001 IS NOT NULL AND g_apgc_d[g_detail_idx].apgcseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xrgf_m.xrgfcomp != g_xrgfcomp_t OR g_xrgf_m.xrgfdocno != g_xrgfdocno_t OR g_xrgf_m.xrgf001 != g_xrgf001_t OR g_apgc_d[g_detail_idx].apgcseq != g_apgc_d_t.apgcseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM apgc_t WHERE "||"apgcent = '" ||g_enterprise|| "' AND "||"apgccomp = '"||g_xrgf_m.xrgfcomp ||"' AND "|| "apgcdocno = '"||g_xrgf_m.xrgfdocno ||"' AND "|| "apgc900 = '"||g_xrgf_m.xrgf001 ||"' AND "|| "apgcseq = '"||g_apgc_d[g_detail_idx].apgcseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgcseq
            #add-point:ON CHANGE apgcseq name="input.g.page1.apgcseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgcorga
            
            #add-point:AFTER FIELD apgcorga name="input.a.page1.apgcorga"
            LET g_apgc_d[l_ac].apgcorga_desc = ''
            IF NOT cl_null(g_apgc_d[l_ac].apgcorga) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_apgc_d[l_ac].apgcorga != g_apgc_d_t.apgcorga OR g_apgc_d_t.apgcorga IS NULL )) THEN
                  IF s_chr_get_index_of(g_wc_cs_orga,g_apgc_d[l_ac].apgcorga,1) = 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ais-00228'
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_apgc_d[l_ac].apgcorga = g_apgc_d_t.apgcorga
                     CALL s_desc_get_department_desc(g_apgc_d[l_ac].apgcorga) RETURNING g_apgc_d[l_ac].apgcorga_desc
                     DISPLAY BY NAME g_apgc_d[l_ac].apgcorga_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL s_fin_orga_get_comp_ld(g_apgc_d[l_ac].apgcorga) RETURNING g_sub_success,g_errno,l_comp_orga,l_ld
                  IF l_comp_orga <> g_xrgf_m.xrgfcomp THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'aap-00537'
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_apgc_d[l_ac].apgcorga = g_apgc_d_t.apgcorga
                     CALL s_desc_get_department_desc(g_apgc_d[l_ac].apgcorga) RETURNING g_apgc_d[l_ac].apgcorga_desc
                     DISPLAY BY NAME g_apgc_d[l_ac].apgcorga_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_department_desc(g_apgc_d[l_ac].apgcorga) RETURNING g_apgc_d[l_ac].apgcorga_desc
            DISPLAY BY NAME g_apgc_d[l_ac].apgcorga_desc 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgcorga
            #add-point:BEFORE FIELD apgcorga name="input.b.page1.apgcorga"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgcorga
            #add-point:ON CHANGE apgcorga name="input.g.page1.apgcorga"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc001
            
            #add-point:AFTER FIELD apgc001 name="input.a.page1.apgc001"
            LET  g_apgc_d[l_ac].apgc001_desc = ''
            IF NOT cl_null( g_apgc_d[l_ac].apgc001) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND ( g_apgc_d[l_ac].apgc001 !=  g_apgc_d_t.apgc001 OR g_apgc_d_t.apgc001 IS NULL )) THEN
                  IF NOT s_azzi650_chk_exist('3117', g_apgc_d[l_ac].apgc001) THEN
                     LET  g_apgc_d[l_ac].apgc001=  g_apgc_d_t.apgc001
                     CALL s_desc_get_acc_desc('3117', g_apgc_d[l_ac].apgc001) RETURNING  g_apgc_d[l_ac].apgc001_desc
                     DISPLAY BY NAME  g_apgc_d[l_ac].apgc001_desc
                     NEXT FIELD CURRENT
                  END IF
                  LET l_glab005 = NULL LET l_glab006 = NULL LET l_glab007 = NULL
                  SELECT glab005,glab006,glab007
                    INTO l_glab005,l_glab006,l_glab007
                    FROM glab_t
                   WHERE glabent = g_enterprise AND glabld  = g_glaald
                     AND glab001 = '15'
                     AND glab002 = '3117'                     
                     AND glab003 = g_apgc_d[l_ac].apgc001
                  LET g_apgc_d[l_ac].apgc004 = l_glab005
                  LET g_apgc_d[l_ac].apgc015 = l_glab006
                  LET g_apgc_d[l_ac].apgc016 = l_glab007
                  LET g_apgc_d[l_ac].apgc004_desc = s_desc_get_account_desc(g_glaald,g_apgc_d[l_ac].apgc004)
                  LET g_apgc_d[l_ac].apgc015_desc = s_desc_get_nmajl003_desc(g_apgc_d[l_ac].apgc015)                
                  LET g_apgc_d[l_ac].apgc016_desc =s_desc_get_nmail004_desc(g_glaa005,g_apgc_d[l_ac].apgc016)
                  DISPLAY BY NAME g_apgc_d[l_ac].apgc004,g_apgc_d[l_ac].apgc015,g_apgc_d[l_ac].apgc016
               END IF
            END IF
            CALL s_desc_get_acc_desc('3117', g_apgc_d[l_ac].apgc001) RETURNING g_apgc_d[l_ac].apgc001_desc
            DISPLAY BY NAME g_apgc_d[l_ac].apgc001_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc001
            #add-point:BEFORE FIELD apgc001 name="input.b.page1.apgc001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc001
            #add-point:ON CHANGE apgc001 name="input.g.page1.apgc001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc014
            #add-point:BEFORE FIELD apgc014 name="input.b.page1.apgc014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc014
            
            #add-point:AFTER FIELD apgc014 name="input.a.page1.apgc014"
            IF NOT cl_null(g_apgc_d[l_ac].apgc014) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_apgc_d[l_ac].apgc014 != g_apgc_d_t.apgc014 OR g_apgc_d_t.apgc014 IS NULL )) THEN
                  LET g_chkparam.arg1 = g_apgc_d[l_ac].apgc014
                  LET g_chkparam.arg2 = g_xrgf_m.xrgfcomp
                  LET g_chkparam.arg3 = '5'    #kris  aapt5系列皆付現  所以帳戶為零用金類型(比照aapt420現金類處理)
                  IF cl_chk_exist("v_nmas002_4") THEN
                     IF NOT s_anmi120_nmll002_chk(g_apgc_d[l_ac].apgc014,g_user) THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.extend = g_apgc_d[l_ac].apgc014
                        LET g_errparam.code   = 'anm-00574'
                        LET g_errparam.popup  = TRUE
                        CALL cl_err()
                        LET g_apgc_d[l_ac].apgc014 = g_apgc_d_t.apgc014
                        NEXT FIELD CURRENT
                     END IF
                  ELSE
                     NEXT FIELD CURRENT
                  END IF
                  LET g_apgc_d[l_ac].apgc100 = s_anm_get_nmas003(g_apgc_d[l_ac].apgc014)
                  CALL axrt530_get_apgc_rate()
                  DISPLAY BY NAME g_apgc_d[l_ac].apgc014
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc014
            #add-point:ON CHANGE apgc014 name="input.g.page1.apgc014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc101
            #add-point:BEFORE FIELD apgc101 name="input.b.page1.apgc101"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc101
            
            #add-point:AFTER FIELD apgc101 name="input.a.page1.apgc101"
            CALL s_curr_round_ld('1',g_glaald,g_apgc_d[l_ac].apgc100,g_apgc_d[l_ac].apgc101,3) RETURNING g_sub_success,g_errno,g_apgc_d[l_ac].apgc101   #匯率
            CALL axrt530_calc_apgc_money(g_apgc_d[l_ac].oodb005)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc101
            #add-point:ON CHANGE apgc101 name="input.g.page1.apgc101"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc006
            #add-point:BEFORE FIELD apgc006 name="input.b.page1.apgc006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc006
            
            #add-point:AFTER FIELD apgc006 name="input.a.page1.apgc006"
            IF NOT cl_null(g_apgc_d[l_ac].apgc006) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_apgc_d[l_ac].apgc006 != g_apgc_d_t.apgc006 OR g_apgc_d_t.apgc006 IS NULL )) THEN
                  CALL s_tax_chk(g_xrgf_m.xrgfcomp,g_apgc_d[l_ac].apgc006) RETURNING g_sub_success,l_no_use_var,g_apgc_d[l_ac].oodb005,g_apgc_d[l_ac].oodb006,l_no_use_var
                  IF NOT g_sub_success THEN
                     LET g_apgc_d[l_ac].apgc006 = g_apgc_d_t.apgc006
                     NEXT FIELD CURRENT
                  END IF                  
                  CALL axrt530_calc_apgc_money(g_apgc_d[l_ac].oodb005)
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc006
            #add-point:ON CHANGE apgc006 name="input.g.page1.apgc006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc007
            #add-point:BEFORE FIELD apgc007 name="input.b.page1.apgc007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc007
            
            #add-point:AFTER FIELD apgc007 name="input.a.page1.apgc007"
            IF NOT cl_null(g_apgc_d[l_ac].apgc007) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_ooef019
               LET g_chkparam.arg2 = g_apgc_d[l_ac].apgc007
               IF NOT cl_chk_exist("v_isac002_3") THEN
                  LET g_apgc_d[l_ac].apgc007 = '' 
                  DISPLAY BY NAME g_apgc_d[l_ac].apgc007
                  NEXT FIELD CURRENT
               END IF
               LET l_isac004 = ''
               SELECT isac004 INTO l_isac004 FROM isac_t
                WHERE isacent = g_enterprise AND isac001 = g_ooef019 AND isac002 = g_apgc_d[l_ac].apgc007
               IF cl_null(l_isac004) THEN LET g_apgc_d[l_ac].apgc011 = '3' END IF
               DISPLAY BY NAME g_apgc_d[l_ac].apgc011
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc007
            #add-point:ON CHANGE apgc007 name="input.g.page1.apgc007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc008
            #add-point:BEFORE FIELD apgc008 name="input.b.page1.apgc008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc008
            
            #add-point:AFTER FIELD apgc008 name="input.a.page1.apgc008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc008
            #add-point:ON CHANGE apgc008 name="input.g.page1.apgc008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc009
            #add-point:BEFORE FIELD apgc009 name="input.b.page1.apgc009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc009
            
            #add-point:AFTER FIELD apgc009 name="input.a.page1.apgc009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc009
            #add-point:ON CHANGE apgc009 name="input.g.page1.apgc009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc010
            #add-point:BEFORE FIELD apgc010 name="input.b.page1.apgc010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc010
            
            #add-point:AFTER FIELD apgc010 name="input.a.page1.apgc010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc010
            #add-point:ON CHANGE apgc010 name="input.g.page1.apgc010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc011
            #add-point:BEFORE FIELD apgc011 name="input.b.page1.apgc011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc011
            
            #add-point:AFTER FIELD apgc011 name="input.a.page1.apgc011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc011
            #add-point:ON CHANGE apgc011 name="input.g.page1.apgc011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc103
            #add-point:BEFORE FIELD apgc103 name="input.b.page1.apgc103"
            IF g_apgc_d[l_ac].oodb005 = 'Y' AND g_apgc_d[l_ac].apgc103 = 0 AND  g_apgc_d[l_ac].apgc105 = 0 THEN
               NEXT FIELD apgc105
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc103
            
            #add-point:AFTER FIELD apgc103 name="input.a.page1.apgc103"
            IF NOT cl_null(g_apgc_d[l_ac].apgc103) THEN
               CALL s_curr_round_ld('1',g_glaald,g_apgc_d[l_ac].apgc100,g_apgc_d[l_ac].apgc103,2) RETURNING g_sub_success,g_errno,g_apgc_d[l_ac].apgc103
               CALL axrt530_calc_apgc_money(g_apgc_d[l_ac].oodb005)
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc103
            #add-point:ON CHANGE apgc103 name="input.g.page1.apgc103"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc104
            #add-point:BEFORE FIELD apgc104 name="input.b.page1.apgc104"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc104
            
            #add-point:AFTER FIELD apgc104 name="input.a.page1.apgc104"
            IF NOT cl_null(g_apgc_d[l_ac].apgc104) THEN
               CALL s_curr_round_ld('1',g_glaald,g_apgc_d[l_ac].apgc100,g_apgc_d[l_ac].apgc104,2) RETURNING g_sub_success,g_errno,g_apgc_d[l_ac].apgc104
               CALL axrt530_calc_apgc_money(g_apgc_d[l_ac].oodb005)
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc104
            #add-point:ON CHANGE apgc104 name="input.g.page1.apgc104"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc105
            #add-point:BEFORE FIELD apgc105 name="input.b.page1.apgc105"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc105
            
            #add-point:AFTER FIELD apgc105 name="input.a.page1.apgc105"
            IF NOT cl_null(g_apgc_d[l_ac].apgc105) THEN
               CALL s_curr_round_ld('1',g_glaald,g_apgc_d[l_ac].apgc100,g_apgc_d[l_ac].apgc105,2) RETURNING g_sub_success,g_errno,g_apgc_d[l_ac].apgc105
               CALL axrt530_calc_apgc_money(g_apgc_d[l_ac].oodb005)
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc105
            #add-point:ON CHANGE apgc105 name="input.g.page1.apgc105"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc113
            #add-point:BEFORE FIELD apgc113 name="input.b.page1.apgc113"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc113
            
            #add-point:AFTER FIELD apgc113 name="input.a.page1.apgc113"
            IF NOT cl_null(g_apgc_d[l_ac].apgc113) THEN
               CALL s_curr_round_ld('1',g_glaald,g_glaa001,g_apgc_d[l_ac].apgc113,2) RETURNING g_sub_success,g_errno,g_apgc_d[l_ac].apgc113
               CALL axrt530_calc_apgc_money(g_apgc_d[l_ac].oodb005)
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc113
            #add-point:ON CHANGE apgc113 name="input.g.page1.apgc113"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc114
            #add-point:BEFORE FIELD apgc114 name="input.b.page1.apgc114"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc114
            
            #add-point:AFTER FIELD apgc114 name="input.a.page1.apgc114"
            IF NOT cl_null(g_apgc_d[l_ac].apgc114) THEN
               CALL s_curr_round_ld('1',g_glaald,g_glaa001,g_apgc_d[l_ac].apgc114,2) RETURNING g_sub_success,g_errno,g_apgc_d[l_ac].apgc114
               CALL axrt530_calc_apgc_money(g_apgc_d[l_ac].oodb005)
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc114
            #add-point:ON CHANGE apgc114 name="input.g.page1.apgc114"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc115
            #add-point:BEFORE FIELD apgc115 name="input.b.page1.apgc115"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc115
            
            #add-point:AFTER FIELD apgc115 name="input.a.page1.apgc115"
            IF NOT cl_null(g_apgc_d[l_ac].apgc115) THEN
               CALL s_curr_round_ld('1',g_glaald,g_glaa001,g_apgc_d[l_ac].apgc115,2) RETURNING g_sub_success,g_errno,g_apgc_d[l_ac].apgc115
               CALL axrt530_calc_apgc_money(g_apgc_d[l_ac].oodb005)
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc115
            #add-point:ON CHANGE apgc115 name="input.g.page1.apgc115"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc015
            
            #add-point:AFTER FIELD apgc015 name="input.a.page1.apgc015"
           LET g_apgc_d[l_ac].apgc015_desc = ''
            IF NOT cl_null(g_apgc_d[l_ac].apgc015) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_apgc_d[l_ac].apgc015 !=  g_apgc_d_t.apgc015 OR g_apgc_d_t.apgc015 IS NULL)) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_apgc_d[l_ac].apgc015
                  LET g_chkparam.arg2 = '2'
                  LET g_errshow = TRUE
                  IF NOT cl_chk_exist("v_nmaj001_1") THEN
                     LET g_apgc_d[l_ac].apgc015 = g_apgc_d_t.apgc015
                     LET g_apgc_d[l_ac].apgc016 = s_anm_get_nmad003(g_glaa005,g_apgc_d[l_ac].apgc015)
                     LET g_apgc_d[l_ac].apgc015_desc = s_desc_get_nmajl003_desc(g_apgc_d[l_ac].apgc015)
                     LET g_apgc_d[l_ac].apgc016_desc = s_desc_get_nmail004_desc(g_glaa005,g_apgc_d[l_ac].apgc016)
                     DISPLAY BY NAME g_apgc_d[l_ac].apgc015,g_apgc_d[l_ac].apgc015_desc,g_apgc_d[l_ac].apgc016,g_apgc_d[l_ac].apgc016_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
               LET g_apgc_d[l_ac].apgc016 = s_anm_get_nmad003(g_glaa005,g_apgc_d[l_ac].apgc015)
               LET g_apgc_d[l_ac].apgc015_desc = s_desc_get_nmajl003_desc(g_apgc_d[l_ac].apgc015)
               LET g_apgc_d[l_ac].apgc016_desc = s_desc_get_nmail004_desc(g_glaa005,g_apgc_d[l_ac].apgc016)
               DISPLAY BY NAME g_apgc_d[l_ac].apgc015,g_apgc_d[l_ac].apgc015_desc,g_apgc_d[l_ac].apgc016,g_apgc_d[l_ac].apgc016_desc
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc015
            #add-point:BEFORE FIELD apgc015 name="input.b.page1.apgc015"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc015
            #add-point:ON CHANGE apgc015 name="input.g.page1.apgc015"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc016
            
            #add-point:AFTER FIELD apgc016 name="input.a.page1.apgc016"
            LET g_apgc_d[l_ac].apgc016_desc =''
            IF NOT cl_null(g_apgc_d[l_ac].apgc016) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_apgc_d[l_ac].apgc016 != g_apgc_d_t.apgc016 OR g_apgc_d_t.apgc016 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_apgc_d[l_ac].apgc016
                  LET g_chkparam.arg2 = g_glaa005
                  LET g_errshow = TRUE
                  IF NOT cl_chk_exist("v_nmai002") THEN
                     LET g_apgc_d[l_ac].apgc016 = g_apgc_d_t.apgc016
                     LET g_apgc_d[l_ac].apgc016_desc = s_desc_get_nmail004_desc(g_glaa005,g_apgc_d[l_ac].apgc016)
                     DISPLAY BY NAME g_apgc_d[l_ac].apgc016,g_apgc_d[l_ac].apgc016_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF    
            END IF
            LET g_apgc_d[l_ac].apgc016_desc = s_desc_get_nmail004_desc(g_glaa005,g_apgc_d[l_ac].apgc016)
            DISPLAY BY NAME g_apgc_d[l_ac].apgc016_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc016
            #add-point:BEFORE FIELD apgc016 name="input.b.page1.apgc016"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc016
            #add-point:ON CHANGE apgc016 name="input.g.page1.apgc016"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc016_desc
            #add-point:BEFORE FIELD apgc016_desc name="input.b.page1.apgc016_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc016_desc
            
            #add-point:AFTER FIELD apgc016_desc name="input.a.page1.apgc016_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc016_desc
            #add-point:ON CHANGE apgc016_desc name="input.g.page1.apgc016_desc"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc004
            
            #add-point:AFTER FIELD apgc004 name="input.a.page1.apgc004"
            IF NOT cl_null(g_apgc_d[l_ac].apgc004) THEN              
               IF s_aglt310_getlike_lc_subject(g_glaald,g_apgc_d[l_ac].apgc004,'') THEN
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
                  LET g_qryparam.reqry = 'FALSE'
                  LET g_qryparam.default1 = g_apgc_d[l_ac].apgc004
                  LET g_qryparam.arg1 = g_glaa004
                  LET g_qryparam.arg2 = g_apgc_d[l_ac].apgc004
                  LET g_qryparam.arg3 = g_glaald
                  LET g_qryparam.arg4 = "1 "
                  CALL q_glac002_6()
                  LET g_apgc_d[l_ac].apgc004       = g_qryparam.return1
                  LET g_apgc_d[l_ac].apgc004_desc  = s_desc_get_account_desc(g_glaald,g_apgc_d[l_ac].apgc004)
               END IF
               IF NOT s_aglt310_lc_subject(g_glaald,g_apgc_d[l_ac].apgc004,'N') THEN
                  LET g_apgc_d[l_ac].apgc004       = g_apgc_d_t.apgc004
                  LET g_apgc_d[l_ac].apgc004_desc  = g_apgc_d_t.apgc004_desc
                  DISPLAY BY NAME g_apgc_d[l_ac].apgc004,g_apgc_d[l_ac].apgc004_desc
                  NEXT FIELD CURRENT 
               END IF
               
               IF ( g_apgc_d[l_ac].apgc004 != g_apgc_d_t.apgc004 OR g_apgc_d_t.apgc004 IS NULL ) THEN
                  CALL s_aap_glac002_chk(g_apgc_d[l_ac].apgc004,g_glaald) RETURNING g_sub_success,g_errno
                  IF NOT g_sub_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.replace[1] = 'agli020'
                     LET g_errparam.replace[2] = cl_get_progname('agli020',g_lang,"2")
                     LET g_errparam.exeprog = 'agli020'
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_apgc_d[l_ac].apgc004       = g_apgc_d_t.apgc004
                     LET g_apgc_d[l_ac].apgc004_desc  = g_apgc_d_t.apgc004_desc
                     DISPLAY BY NAME g_apgc_d[l_ac].apgc004,g_apgc_d[l_ac].apgc004_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            ELSE
               LET g_apgc_d[l_ac].apgc004 = ''
            END IF
            LET g_apgc_d[l_ac].apgc004_desc  = s_desc_get_account_desc(g_glaald,g_apgc_d[l_ac].apgc004)        
            DISPLAY BY NAME g_apgc_d[l_ac].apgc004,g_apgc_d[l_ac].apgc004_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc004
            #add-point:BEFORE FIELD apgc004 name="input.b.page1.apgc004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc004
            #add-point:ON CHANGE apgc004 name="input.g.page1.apgc004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apgc013
            #add-point:BEFORE FIELD apgc013 name="input.b.page1.apgc013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apgc013
            
            #add-point:AFTER FIELD apgc013 name="input.a.page1.apgc013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apgc013
            #add-point:ON CHANGE apgc013 name="input.g.page1.apgc013"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.apgcseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgcseq
            #add-point:ON ACTION controlp INFIELD apgcseq name="input.c.page1.apgcseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgcorga
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgcorga
            #add-point:ON ACTION controlp INFIELD apgcorga name="input.c.page1.apgcorga"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE 
            LET g_qryparam.default1 = g_apgc_d[l_ac].apgcorga
            LET g_qryparam.where = " ooef017 = '",g_xrgf_m.xrgfcomp,"'"
            IF NOT cl_null(g_wc_cs_orga) THEN
               LET g_qryparam.where = g_qryparam.where," AND ooef001 IN ",g_wc_cs_orga
            END IF
            CALL q_ooef001()
            LET g_apgc_d[l_ac].apgcorga = g_qryparam.return1
            DISPLAY g_apgc_d[l_ac].apgcorga TO apgcorga
            NEXT FIELD apgcorga
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc001
            #add-point:ON ACTION controlp INFIELD apgc001 name="input.c.page1.apgc001"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '3117'
            CALL q_oocq002()
            LET g_apgc_d[l_ac].apgc001 = g_qryparam.return1
            DISPLAY g_qryparam.return1 TO apgc001  #顯示到畫面上
            NEXT FIELD apgc001
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc014
            #add-point:ON ACTION controlp INFIELD apgc014 name="input.c.page1.apgc014"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_apgc_d[l_ac].apgc014
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_apgc_d[l_ac].apgc014
            LET g_qryparam.where = " nmaa002 IN (SELECT ooef001 FROM ooef_t WHERE ooefent = ",g_enterprise," ",
                                   "              AND ooef017 = '",g_xrgf_m.xrgfcomp,"')",
                                   " AND EXISTS(SELECT 1 FROM nmag_t WHERE nmag001 = nmaa003 ",
                                   "                                   AND nmagent = nmaaent ", #160905-00002#2                                                    
                                   " AND nmag002 IN ('1','5'))",
                                   " AND nmas002 IN (SELECT nmll001 FROM nmll_t WHERE nmllent=",g_enterprise, " AND nmll002 = '",g_user,"')"
            CALL q_nmas_01()                             
            LET g_apgc_d[l_ac].apgc014 = g_qryparam.return1
            LET g_apgc_d[l_ac].apgc100 = s_anm_get_nmas003(g_apgc_d[l_ac].apgc014)
            DISPLAY BY NAME g_apgc_d[l_ac].apgc100,g_apgc_d[l_ac].apgc014
            NEXT FIELD apgc014   
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc101
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc101
            #add-point:ON ACTION controlp INFIELD apgc101 name="input.c.page1.apgc101"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc006
            #add-point:ON ACTION controlp INFIELD apgc006 name="input.c.page1.apgc006"
            #稅別
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_apgc_d[l_ac].apgc006  
            LET g_qryparam.arg1 = g_ooef019                   #稅區
            LET g_qryparam.where = " oodb004 ='1'"
            CALL q_oodb002_5()                          
            LET g_apgc_d[l_ac].apgc006 = g_qryparam.return1
            DISPLAY BY NAME g_apgc_d[l_ac].apgc006
            NEXT FIELD apgc006 
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc007
            #add-point:ON ACTION controlp INFIELD apgc007 name="input.c.page1.apgc007"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_apgc_d[l_ac].apgc007
            LET g_qryparam.where = " isac003 IN ('1','3') AND isac001 = '",g_ooef019,"' "
            CALL q_isac002()
            LET g_apgc_d[l_ac].apgc007 = g_qryparam.return1
            DISPLAY BY NAME g_apgc_d[l_ac].apgc007
            NEXT FIELD apgc007
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc008
            #add-point:ON ACTION controlp INFIELD apgc008 name="input.c.page1.apgc008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc009
            #add-point:ON ACTION controlp INFIELD apgc009 name="input.c.page1.apgc009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc010
            #add-point:ON ACTION controlp INFIELD apgc010 name="input.c.page1.apgc010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc011
            #add-point:ON ACTION controlp INFIELD apgc011 name="input.c.page1.apgc011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc103
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc103
            #add-point:ON ACTION controlp INFIELD apgc103 name="input.c.page1.apgc103"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc104
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc104
            #add-point:ON ACTION controlp INFIELD apgc104 name="input.c.page1.apgc104"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc105
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc105
            #add-point:ON ACTION controlp INFIELD apgc105 name="input.c.page1.apgc105"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc113
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc113
            #add-point:ON ACTION controlp INFIELD apgc113 name="input.c.page1.apgc113"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc114
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc114
            #add-point:ON ACTION controlp INFIELD apgc114 name="input.c.page1.apgc114"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc115
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc115
            #add-point:ON ACTION controlp INFIELD apgc115 name="input.c.page1.apgc115"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc015
            #add-point:ON ACTION controlp INFIELD apgc015 name="input.c.page1.apgc015"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_apgc_d[l_ac].apgc015
            LET g_qryparam.where = " nmaj002 = '2' "   #提出 
            CALL q_nmaj001()
            LET g_apgc_d[l_ac].apgc015 = g_qryparam.return1
            DISPLAY g_apgc_d[l_ac].apgc015 TO apgc015
            NEXT FIELD apgc015
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc016
            #add-point:ON ACTION controlp INFIELD apgc016 name="input.c.page1.apgc016"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " nmai001 = '",g_glaa005,"' "
            LET g_qryparam.default1 = g_apgc_d[l_ac].apgc016
            CALL q_nmai002()                                  #呼叫開窗
            LET g_apgc_d[l_ac].apgc016 = g_qryparam.return1
            DISPLAY BY NAME g_apgc_d[l_ac].apgc016
            NEXT FIELD apgc016
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc016_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc016_desc
            #add-point:ON ACTION controlp INFIELD apgc016_desc name="input.c.page1.apgc016_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc004
            #add-point:ON ACTION controlp INFIELD apgc004 name="input.c.page1.apgc004"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_apgc_d[l_ac].apgc004       
            LET g_qryparam.where = "glac001 = '",g_glaa004,"' AND  glac003 <>'1' ",
                                   " AND glac002 IN (SELECT glad001 FROM glad_t,glac_t WHERE glad001= glac002 ",
                                   "AND gladld='",g_glaald,"' AND gladent='",g_enterprise,"'",
                                   " AND gladstus = 'Y' )" 
            CALL aglt310_04()                          
            LET g_apgc_d[l_ac].apgc004 = g_qryparam.return1     
            CALL s_desc_get_account_desc(g_glaald,g_apgc_d[l_ac].apgc004) RETURNING g_apgc_d[l_ac].apgc004_desc
            DISPLAY BY NAME g_apgc_d[l_ac].apgc004_desc,g_apgc_d[l_ac].apgc004
            NEXT FIELD apgc004   
            #END add-point
 
 
         #Ctrlp:input.c.page1.apgc013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apgc013
            #add-point:ON ACTION controlp INFIELD apgc013 name="input.c.page1.apgc013"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_apgc_d[l_ac].* = g_apgc_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axrt530_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_apgc_d[l_ac].apgcseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_apgc_d[l_ac].* = g_apgc_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL axrt530_apgc_t_mask_restore('restore_mask_o')
      
               UPDATE apgc_t SET (apgccomp,apgcdocno,apgc900,apgcseq,apgcorga,apgc001,apgc014,apgc100, 
                   apgc101,apgc006,apgc007,apgc008,apgc009,apgc010,apgc011,apgc103,apgc104,apgc105,apgc113, 
                   apgc114,apgc115,apgc015,apgc016,apgc004,apgc013) = (g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno, 
                   g_xrgf_m.xrgf001,g_apgc_d[l_ac].apgcseq,g_apgc_d[l_ac].apgcorga,g_apgc_d[l_ac].apgc001, 
                   g_apgc_d[l_ac].apgc014,g_apgc_d[l_ac].apgc100,g_apgc_d[l_ac].apgc101,g_apgc_d[l_ac].apgc006, 
                   g_apgc_d[l_ac].apgc007,g_apgc_d[l_ac].apgc008,g_apgc_d[l_ac].apgc009,g_apgc_d[l_ac].apgc010, 
                   g_apgc_d[l_ac].apgc011,g_apgc_d[l_ac].apgc103,g_apgc_d[l_ac].apgc104,g_apgc_d[l_ac].apgc105, 
                   g_apgc_d[l_ac].apgc113,g_apgc_d[l_ac].apgc114,g_apgc_d[l_ac].apgc115,g_apgc_d[l_ac].apgc015, 
                   g_apgc_d[l_ac].apgc016,g_apgc_d[l_ac].apgc004,g_apgc_d[l_ac].apgc013)
                WHERE apgcent = g_enterprise AND apgccomp = g_xrgf_m.xrgfcomp 
                  AND apgcdocno = g_xrgf_m.xrgfdocno 
                  AND apgc900 = g_xrgf_m.xrgf001 
 
                  AND apgcseq = g_apgc_d_t.apgcseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_apgc_d[l_ac].* = g_apgc_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "apgc_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_apgc_d[l_ac].* = g_apgc_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "apgc_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xrgf_m.xrgfcomp
               LET gs_keys_bak[1] = g_xrgfcomp_t
               LET gs_keys[2] = g_xrgf_m.xrgfdocno
               LET gs_keys_bak[2] = g_xrgfdocno_t
               LET gs_keys[3] = g_xrgf_m.xrgf001
               LET gs_keys_bak[3] = g_xrgf001_t
               LET gs_keys[4] = g_apgc_d[g_detail_idx].apgcseq
               LET gs_keys_bak[4] = g_apgc_d_t.apgcseq
               CALL axrt530_update_b('apgc_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL axrt530_apgc_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_apgc_d[g_detail_idx].apgcseq = g_apgc_d_t.apgcseq 
 
                  ) THEN
                  LET gs_keys[01] = g_xrgf_m.xrgfcomp
                  LET gs_keys[gs_keys.getLength()+1] = g_xrgf_m.xrgfdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xrgf_m.xrgf001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_apgc_d_t.apgcseq
 
                  CALL axrt530_key_update_b(gs_keys,'apgc_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xrgf_m),util.JSON.stringify(g_apgc_d_t)
               LET g_log2 = util.JSON.stringify(g_xrgf_m),util.JSON.stringify(g_apgc_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL axrt530_unlock_b("apgc_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_apgc_d[li_reproduce_target].* = g_apgc_d[li_reproduce].*
 
               LET g_apgc_d[li_reproduce_target].apgcseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_apgc_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_apgc_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_apgc2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            #160518-00037#5-----s
            LET l_count = NULL
            SELECT COUNT(*) INTO l_count FROM xrgi_t
             WHERE xrgient = g_enterprise
               AND xrgicomp = g_xrgf_m.xrgfcomp
               AND xrgidocno = g_xrgf_m.xrgfdocno
               AND xrgi001   = g_xrgf_m.xrgf001
            IF cl_null(l_count)THEN LET l_count = 0 END IF
            
            IF l_count = 0 THEN
               #IF cl_ask_confirm('axr-01037')THEN
                  CALL s_transaction_begin()
                  CALL axrt530_iv_ins_xrgi()RETURNING g_sub_success
                  IF g_sub_success THEN
                     CALL s_transaction_end('Y','0')
                  ELSE
                     CALL s_transaction_end('N','0')
                  END IF
               #END IF
            END IF
            #160518-00037#5-----e
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_apgc2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axrt530_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_apgc2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_apgc2_d[l_ac].* TO NULL 
            INITIALIZE g_apgc2_d_t.* TO NULL 
            INITIALIZE g_apgc2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
            
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            #160518-00037#5-----s
            LET g_apgc2_d[l_ac].xrgiseq = NULL
            SELECT MAX(xrgiseq)+1 INTO g_apgc2_d[l_ac].xrgiseq FROM xrgi_t
             WHERE xrgient   = g_enterprise
               AND xrgicomp  = g_xrgf_m.xrgfcomp
               AND xrgidocno = g_xrgf_m.xrgfdocno
               ANd xrgi001   = g_xrgf_m.xrgf001
            IF cl_null(g_apgc2_d[l_ac].xrgiseq)THEN LET g_apgc2_d[l_ac].xrgiseq = 1 END IF
            #160518-00037#5-----e
            #end add-point
            LET g_apgc2_d_t.* = g_apgc2_d[l_ac].*     #新輸入資料
            LET g_apgc2_d_o.* = g_apgc2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axrt530_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
            
            #end add-point
            CALL axrt530_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_apgc2_d[li_reproduce_target].* = g_apgc2_d[li_reproduce].*
 
               LET g_apgc2_d[li_reproduce_target].xrgiseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body2.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[2] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axrt530_cl USING g_enterprise,g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN axrt530_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE axrt530_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_apgc2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_apgc2_d[l_ac].xrgiseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_apgc2_d_t.* = g_apgc2_d[l_ac].*  #BACKUP
               LET g_apgc2_d_o.* = g_apgc2_d[l_ac].*  #BACKUP
               CALL axrt530_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               
               #end add-point  
               CALL axrt530_set_no_entry_b(l_cmd)
               IF NOT axrt530_lock_b("xrgi_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axrt530_bcl2 INTO g_apgc2_d[l_ac].xrgiseq,g_apgc2_d[l_ac].xrgi002,g_apgc2_d[l_ac].xrgi003, 
                      g_apgc2_d[l_ac].xrgi100,g_apgc2_d[l_ac].xrgi101,g_apgc2_d[l_ac].xrgi103,g_apgc2_d[l_ac].xrgi113 
 
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_apgc2_d_mask_o[l_ac].* =  g_apgc2_d[l_ac].*
                  CALL axrt530_xrgi_t_mask()
                  LET g_apgc2_d_mask_n[l_ac].* =  g_apgc2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL axrt530_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body2.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_xrgf_m.xrgfcomp
               LET gs_keys[gs_keys.getLength()+1] = g_xrgf_m.xrgfdocno
               LET gs_keys[gs_keys.getLength()+1] = g_xrgf_m.xrgf001
               LET gs_keys[gs_keys.getLength()+1] = g_apgc2_d_t.xrgiseq
            
               #刪除同層單身
               IF NOT axrt530_delete_b('xrgi_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axrt530_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT axrt530_key_delete_b(gs_keys,'xrgi_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE axrt530_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身2刪除中 name="input.body2.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE axrt530_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body2.a_delete"
               
               #end add-point
               LET l_count = g_apgc_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_apgc2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body2.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM xrgi_t 
             WHERE xrgient = g_enterprise AND xrgicomp = g_xrgf_m.xrgfcomp
               AND xrgidocno = g_xrgf_m.xrgfdocno
               AND xrgi001 = g_xrgf_m.xrgf001
               AND xrgiseq = g_apgc2_d[l_ac].xrgiseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body2.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xrgf_m.xrgfcomp
               LET gs_keys[2] = g_xrgf_m.xrgfdocno
               LET gs_keys[3] = g_xrgf_m.xrgf001
               LET gs_keys[4] = g_apgc2_d[g_detail_idx].xrgiseq
               CALL axrt530_insert_b('xrgi_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body2.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_apgc_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xrgi_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axrt530_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_apgc2_d[l_ac].* = g_apgc2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axrt530_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_apgc2_d[l_ac].* = g_apgc2_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body2.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL axrt530_xrgi_t_mask_restore('restore_mask_o')
                              
               UPDATE xrgi_t SET (xrgicomp,xrgidocno,xrgi001,xrgiseq,xrgi002,xrgi003,xrgi100,xrgi101, 
                   xrgi103,xrgi113) = (g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001,g_apgc2_d[l_ac].xrgiseq, 
                   g_apgc2_d[l_ac].xrgi002,g_apgc2_d[l_ac].xrgi003,g_apgc2_d[l_ac].xrgi100,g_apgc2_d[l_ac].xrgi101, 
                   g_apgc2_d[l_ac].xrgi103,g_apgc2_d[l_ac].xrgi113) #自訂欄位頁簽
                WHERE xrgient = g_enterprise AND xrgicomp = g_xrgf_m.xrgfcomp
                  AND xrgidocno = g_xrgf_m.xrgfdocno
                  AND xrgi001 = g_xrgf_m.xrgf001
                  AND xrgiseq = g_apgc2_d_t.xrgiseq #項次 
                  
               #add-point:單身page2修改中 name="input.body2.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_apgc2_d[l_ac].* = g_apgc2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xrgi_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_apgc2_d[l_ac].* = g_apgc2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "xrgi_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xrgf_m.xrgfcomp
               LET gs_keys_bak[1] = g_xrgfcomp_t
               LET gs_keys[2] = g_xrgf_m.xrgfdocno
               LET gs_keys_bak[2] = g_xrgfdocno_t
               LET gs_keys[3] = g_xrgf_m.xrgf001
               LET gs_keys_bak[3] = g_xrgf001_t
               LET gs_keys[4] = g_apgc2_d[g_detail_idx].xrgiseq
               LET gs_keys_bak[4] = g_apgc2_d_t.xrgiseq
               CALL axrt530_update_b('xrgi_t',gs_keys,gs_keys_bak,"'2'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL axrt530_xrgi_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_apgc2_d[g_detail_idx].xrgiseq = g_apgc2_d_t.xrgiseq 
                  ) THEN
                  LET gs_keys[01] = g_xrgf_m.xrgfcomp
                  LET gs_keys[gs_keys.getLength()+1] = g_xrgf_m.xrgfdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_xrgf_m.xrgf001
                  LET gs_keys[gs_keys.getLength()+1] = g_apgc2_d_t.xrgiseq
                  CALL axrt530_key_update_b(gs_keys,'xrgi_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_xrgf_m),util.JSON.stringify(g_apgc2_d_t)
               LET g_log2 = util.JSON.stringify(g_xrgf_m),util.JSON.stringify(g_apgc2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body2.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgiseq
            #add-point:BEFORE FIELD xrgiseq name="input.b.page2.xrgiseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgiseq
            
            #add-point:AFTER FIELD xrgiseq name="input.a.page2.xrgiseq"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  g_xrgf_m.xrgfcomp IS NOT NULL AND g_xrgf_m.xrgfdocno IS NOT NULL AND g_xrgf_m.xrgf001 IS NOT NULL AND g_apgc2_d[g_detail_idx].xrgiseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xrgf_m.xrgfcomp != g_xrgfcomp_t OR g_xrgf_m.xrgfdocno != g_xrgfdocno_t OR g_xrgf_m.xrgf001 != g_xrgf001_t OR g_apgc2_d[g_detail_idx].xrgiseq != g_apgc2_d_t.xrgiseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrgi_t WHERE "||"xrgient = '" ||g_enterprise|| "' AND "||"xrgicomp = '"||g_xrgf_m.xrgfcomp ||"' AND "|| "xrgidocno = '"||g_xrgf_m.xrgfdocno ||"' AND "|| "xrgiseq = '"||g_xrgf_m.xrgf001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgiseq
            #add-point:ON CHANGE xrgiseq name="input.g.page2.xrgiseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgi002
            #add-point:BEFORE FIELD xrgi002 name="input.b.page2.xrgi002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgi002
            
            #add-point:AFTER FIELD xrgi002 name="input.a.page2.xrgi002"
            #160518-00037#5-----s
            IF NOT cl_null(g_apgc2_d[l_ac].xrgi002) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_apgc2_d[l_ac].xrgi002 != g_apgc2_d_t.xrgi002 OR g_apgc2_d_t.xrgi002 IS NULL )) THEN
                  CALL axrt530_xrgi002_chk(g_apgc2_d[l_ac].xrgi002,g_xrgf_m.xrgf006)RETURNING g_sub_success,g_errno
                  IF NOT g_sub_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_apgc2_d[l_ac].xrgi002 = g_apgc2_d_t.xrgi002
                     NEXT FIELD CURRENT
                  END IF
                  
                  CALL axrt530_xrgi002_carry(g_apgc2_d[l_ac].xrgi002,g_xrgf_m.xrgf006)RETURNING g_parr
                  
                  LET g_apgc2_d[l_ac].xrgi003 = g_parr[1].dat
                  LET g_apgc2_d[l_ac].xrgi100 = g_parr[2].chr
                  LET g_apgc2_d[l_ac].xrgi101 = g_parr[3].chr
                  LET g_apgc2_d[l_ac].xrgi103 = g_parr[4].chr
                  LET g_apgc2_d[l_ac].xrgi113 = g_parr[5].chr
                  DISPLAY BY NAME g_apgc2_d[l_ac].xrgi003,g_apgc2_d[l_ac].xrgi100,g_apgc2_d[l_ac].xrgi101,g_apgc2_d[l_ac].xrgi103,
                                  g_apgc2_d[l_ac].xrgi113
               END IF
            END IF
            #160518-00037#5-----e
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgi002
            #add-point:ON CHANGE xrgi002 name="input.g.page2.xrgi002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgi003
            #add-point:BEFORE FIELD xrgi003 name="input.b.page2.xrgi003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgi003
            
            #add-point:AFTER FIELD xrgi003 name="input.a.page2.xrgi003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgi003
            #add-point:ON CHANGE xrgi003 name="input.g.page2.xrgi003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgi100
            #add-point:BEFORE FIELD xrgi100 name="input.b.page2.xrgi100"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgi100
            
            #add-point:AFTER FIELD xrgi100 name="input.a.page2.xrgi100"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgi100
            #add-point:ON CHANGE xrgi100 name="input.g.page2.xrgi100"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgi101
            #add-point:BEFORE FIELD xrgi101 name="input.b.page2.xrgi101"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgi101
            
            #add-point:AFTER FIELD xrgi101 name="input.a.page2.xrgi101"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgi101
            #add-point:ON CHANGE xrgi101 name="input.g.page2.xrgi101"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgi103
            #add-point:BEFORE FIELD xrgi103 name="input.b.page2.xrgi103"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgi103
            
            #add-point:AFTER FIELD xrgi103 name="input.a.page2.xrgi103"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgi103
            #add-point:ON CHANGE xrgi103 name="input.g.page2.xrgi103"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrgi113
            #add-point:BEFORE FIELD xrgi113 name="input.b.page2.xrgi113"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrgi113
            
            #add-point:AFTER FIELD xrgi113 name="input.a.page2.xrgi113"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE xrgi113
            #add-point:ON CHANGE xrgi113 name="input.g.page2.xrgi113"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.xrgiseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgiseq
            #add-point:ON ACTION controlp INFIELD xrgiseq name="input.c.page2.xrgiseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xrgi002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgi002
            #add-point:ON ACTION controlp INFIELD xrgi002 name="input.c.page2.xrgi002"
            #160518-00037#5-----s
            CASE
               WHEN g_xrgf_m.xrgf006 = '1'
                  #IV
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
                  LET g_qryparam.reqry = FALSE
                  LET g_qryparam.default1 = g_apgc2_d[l_ac].xrgi002
                  LET g_qryparam.where = " xmdostus = 'Y' ",                
                                         " AND xmdodocno IN(",
                                                 "   SELECT xmdodocno FROM xmdo_t   ",
                                                 "     LEFT OUTER JOIN(SELECT xmdpent,xmdpdocno,SUM(xmdp025) IVSUM FROM xmdp_t GROUP BY xmdpent,xmdpdocno) ON xmdpent = xmdoent AND xmdpdocno = xmdodocno   ",
                                                 "     LEFT OUTER JOIN(SELECT xrgient,xrgi002,SUM(xrgi103) PAYSUM FROM xrgi_t,xrgf_t WHERE xrgfent = xrgient AND xrgfcomp = xrgicomp    ",
                                                 "                        AND xrgfdocno = xrgidocno AND xrgf001 = xrgi001 GROUP BY xrgient,xrgi002) ON xrgient = xmdoent AND xrgi002 = xmdodocno   ",
                                                 "    WHERE xmdoent = ",g_enterprise,"   ",
                                                 "      AND COALESCE(IVSUM,0) > COALESCE(PAYSUM,0)   ",            
                                                           ")",
                                         " AND xmdodocno IN (",
                                               " SELECT xmdpdocno FROM xmdp_t ",
                                               "  WHERE EXISTS (SELECT 1 FROM xrga_t,xrgb_t WHERE xrgaent = xrgbent AND xrgacomp = xrgbcomp AND xrgaent =",g_enterprise," ",
                                               "    AND xrgb001= xmdp003 AND xrgb002 = xmdp004 AND xrgbent = xmdpent AND xrgbdocno = '",g_xrgf_m.xrgf009,"' ) ",
                                                           ")"
                  CALL q_xmdodocno()
                  LET g_apgc2_d[l_ac].xrgi002 = g_qryparam.return1
                  DISPLAY BY NAME g_apgc2_d[l_ac].xrgi002
                  NEXT FIELD xrgi002                 
               WHEN g_xrgf_m.xrgf006 = '2'
                  #發票
                  #LET l_stdat = MDY(1,1,YEAR(g_isbf_m.isbfdocdt))
                  
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
                  LET g_qryparam.reqry = FALSE
                  LET g_qryparam.default1 = g_apgc2_d[l_ac].xrgi002
                  LET g_qryparam.where = "isat014 IN ('11') ",
                                         "   AND EXISTS(",
                                                        " SELECT 1 FROM isaf_t,isag_t,xmdl_t,xmdk_t,xrgb_t ",
                                                        "  WHERE isafent = isatent AND isafcomp = isatcomp AND isafdocno = isatdocno ",
                                                        "    AND isafstus = 'Y' AND isagent = isafent AND isagcomp = isafcomp AND isagdocno = isafdocno ",
                                                        "    AND isag001 = '11' AND isagent = xmdlent AND isag002 = xmdldocno AND isag003 = xmdlseq ",
                                                        "    AND xmdlent = xmdkent AND xmdldocno = xmdkdocno AND xmdkstus = 'S' ",
                                                        "    AND xmdlent = xrgbent AND xmdl003 = xrgb001 AND xmdl004 = xrgb002 AND xrgbdocno = '",g_xrgf_m.xrgf009,"' ",
                                         "   )"
                                         #" AND EXISTS (SELECT 1 FROM isaf_t WHERE isafent = isatent AND isafcomp = isatcomp ",
                                         #"                AND isafdocno = isatdocno AND isafstus = 'Y' AND isaf056 = '1' ",
                                         #"                AND isafdocdt BETWEEN '",l_stdat,"' AND '",g_isbf_m.isbfdocdt,"' ",   #160106-00005#4 add
                                         #") "
                  
                  CALL q_isat004()
                  LET g_apgc2_d[l_ac].xrgi002 = g_qryparam.return1
                  DISPLAY BY NAME g_apgc2_d[l_ac].xrgi002
                  NEXT FIELD xrgi002                       
            END CASE
            #160518-00037#5-----e
            #END add-point
 
 
         #Ctrlp:input.c.page2.xrgi003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgi003
            #add-point:ON ACTION controlp INFIELD xrgi003 name="input.c.page2.xrgi003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xrgi100
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgi100
            #add-point:ON ACTION controlp INFIELD xrgi100 name="input.c.page2.xrgi100"
 
            #END add-point
 
 
         #Ctrlp:input.c.page2.xrgi101
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgi101
            #add-point:ON ACTION controlp INFIELD xrgi101 name="input.c.page2.xrgi101"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xrgi103
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgi103
            #add-point:ON ACTION controlp INFIELD xrgi103 name="input.c.page2.xrgi103"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.xrgi113
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrgi113
            #add-point:ON ACTION controlp INFIELD xrgi113 name="input.c.page2.xrgi113"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row name="input.body2.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_apgc2_d[l_ac].* = g_apgc2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE axrt530_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL axrt530_unlock_b("xrgi_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2 name="input.body2.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_apgc2_d[li_reproduce_target].* = g_apgc2_d[li_reproduce].*
 
               LET g_apgc2_d[li_reproduce_target].xrgiseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_apgc2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_apgc2_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
 
 
 
{</section>}
 
{<section id="axrt530.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'2',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD xrgfcomp
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD apgcseq
               WHEN "s_detail2"
                  NEXT FIELD xrgiseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="axrt530.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axrt530_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_glaa005 LIKE glaa_t.glaa005    #160518-00037#5
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL axrt530_b_fill() #單身填充
      CALL axrt530_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL axrt530_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   CALL axrt530_get_comp_info()
   CALL axrt530_get_xrgfdocno_info('')
   #160518-00037#5-----s
   LET l_glaa005 = NULL
   SELECT glaa005 INTO l_glaa005 FROM glaa_t
    WHERE glaaent  = g_enterprise
      AND glaacomp = g_xrgf_m.xrgfcomp
      AND glaa014  = 'Y'
   CALL s_desc_get_nmail004_desc(l_glaa005,g_xrgf_m.xrgf013) RETURNING g_xrgf_m.xrgf013_desc
   DISPLAY BY NAME g_xrgf_m.xrgf013_desc
   #160518-00037#5-----e
   #end add-point
   
   #遮罩相關處理
   LET g_xrgf_m_mask_o.* =  g_xrgf_m.*
   CALL axrt530_xrgf_t_mask()
   LET g_xrgf_m_mask_n.* =  g_xrgf_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfcomp_desc,g_xrgf_m.xrgf002,g_xrgf_m.xrgf002_desc,g_xrgf_m.xrga006, 
       g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt,g_xrgf_m.xrgf009,g_xrgf_m.xrgf001,g_xrgf_m.xrgf003,g_xrgf_m.xrgf003_desc, 
       g_xrgf_m.xrga001,g_xrgf_m.xrgf010,g_xrgf_m.xrga025,g_xrgf_m.xrgfstus,g_xrgf_m.xrgfownid,g_xrgf_m.xrgfownid_desc, 
       g_xrgf_m.xrgfowndp,g_xrgf_m.xrgfowndp_desc,g_xrgf_m.xrgfcrtid,g_xrgf_m.xrgfcrtid_desc,g_xrgf_m.xrgfcrtdp, 
       g_xrgf_m.xrgfcrtdp_desc,g_xrgf_m.xrgfcrtdt,g_xrgf_m.xrgfmodid,g_xrgf_m.xrgfmodid_desc,g_xrgf_m.xrgfmoddt, 
       g_xrgf_m.xrgfcnfid,g_xrgf_m.xrgfcnfid_desc,g_xrgf_m.xrgfcnfdt,g_xrgf_m.xrga007,g_xrgf_m.xrga003, 
       g_xrgf_m.xrga011,g_xrgf_m.xrgf100,g_xrgf_m.xrga103,g_xrgf_m.xrgf007,g_xrgf_m.xrgf004,g_xrgf_m.xrgf004_desc, 
       g_xrgf_m.xrgf103,g_xrgf_m.xrgf011,g_xrgf_m.xrgf008,g_xrgf_m.xrgf012,g_xrgf_m.xrgf012_desc,g_xrgf_m.xrgf006, 
       g_xrgf_m.xrgf013,g_xrgf_m.xrgf013_desc,g_xrgf_m.xrgf104,g_xrgf_m.l_glaa001,g_xrgf_m.xrgf101,g_xrgf_m.xrgf113, 
       g_xrgf_m.xrgf005
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xrgf_m.xrgfstus 
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_apgc_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_apgc2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axrt530_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION axrt530_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION axrt530_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE xrgf_t.xrgfcomp 
   DEFINE l_oldno     LIKE xrgf_t.xrgfcomp 
   DEFINE l_newno02     LIKE xrgf_t.xrgfdocno 
   DEFINE l_oldno02     LIKE xrgf_t.xrgfdocno 
   DEFINE l_newno03     LIKE xrgf_t.xrgf001 
   DEFINE l_oldno03     LIKE xrgf_t.xrgf001 
 
   DEFINE l_master    RECORD LIKE xrgf_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE apgc_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE xrgi_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_xrgf_m.xrgfcomp IS NULL
   OR g_xrgf_m.xrgfdocno IS NULL
   OR g_xrgf_m.xrgf001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_xrgfcomp_t = g_xrgf_m.xrgfcomp
   LET g_xrgfdocno_t = g_xrgf_m.xrgfdocno
   LET g_xrgf001_t = g_xrgf_m.xrgf001
 
    
   LET g_xrgf_m.xrgfcomp = ""
   LET g_xrgf_m.xrgfdocno = ""
   LET g_xrgf_m.xrgf001 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_xrgf_m.xrgfownid = g_user
      LET g_xrgf_m.xrgfowndp = g_dept
      LET g_xrgf_m.xrgfcrtid = g_user
      LET g_xrgf_m.xrgfcrtdp = g_dept 
      LET g_xrgf_m.xrgfcrtdt = cl_get_current()
      LET g_xrgf_m.xrgfmodid = g_user
      LET g_xrgf_m.xrgfmoddt = cl_get_current()
      LET g_xrgf_m.xrgfstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   LET g_xrgf_m.xrgf003 = ''
   LET g_xrgf_m.xrgf004 = ''
   LET g_xrgf_m.xrgf005 = ''
   LET g_xrgf_m.xrgf101 = ''
   LET g_xrgf_m.xrgf103 = ''
   LET g_xrgf_m.xrgf113 = ''
   LET g_xrgf_m.xrga001 = ''
   LET g_xrgf_m.xrga011 = ''
   LET g_xrgf_m.xrga103 = ''
   #LET g_xrgf_m.xmdo051 = ''    #160518-00037#5 mark
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_xrgf_m.xrgfstus 
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
      LET g_xrgf_m.xrgfcomp_desc = ''
   DISPLAY BY NAME g_xrgf_m.xrgfcomp_desc
 
   
   CALL axrt530_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_xrgf_m.* TO NULL
      INITIALIZE g_apgc_d TO NULL
      INITIALIZE g_apgc2_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL axrt530_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL axrt530_set_act_visible()   
   CALL axrt530_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_xrgfcomp_t = g_xrgf_m.xrgfcomp
   LET g_xrgfdocno_t = g_xrgf_m.xrgfdocno
   LET g_xrgf001_t = g_xrgf_m.xrgf001
 
   
   #組合新增資料的條件
   LET g_add_browse = " xrgfent = " ||g_enterprise|| " AND",
                      " xrgfcomp = '", g_xrgf_m.xrgfcomp, "' "
                      ," AND xrgfdocno = '", g_xrgf_m.xrgfdocno, "' "
                      ," AND xrgf001 = '", g_xrgf_m.xrgf001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL axrt530_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL axrt530_idx_chk()
   
   LET g_data_owner = g_xrgf_m.xrgfownid      
   LET g_data_dept  = g_xrgf_m.xrgfowndp
   
   #功能已完成,通報訊息中心
   CALL axrt530_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="axrt530.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION axrt530_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE apgc_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE xrgi_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axrt530_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM apgc_t
    WHERE apgcent = g_enterprise AND apgccomp = g_xrgfcomp_t
     AND apgcdocno = g_xrgfdocno_t
     AND apgc900 = g_xrgf001_t
 
    INTO TEMP axrt530_detail
 
   #將key修正為調整後   
   UPDATE axrt530_detail 
      #更新key欄位
      SET apgccomp = g_xrgf_m.xrgfcomp
          , apgcdocno = g_xrgf_m.xrgfdocno
          , apgc900 = g_xrgf_m.xrgf001
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO apgc_t SELECT * FROM axrt530_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axrt530_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xrgi_t 
    WHERE xrgient = g_enterprise AND xrgicomp = g_xrgfcomp_t
      AND xrgidocno = g_xrgfdocno_t   
      AND xrgi001 = g_xrgf001_t   
 
    INTO TEMP axrt530_detail
 
   #將key修正為調整後   
   UPDATE axrt530_detail SET xrgicomp = g_xrgf_m.xrgfcomp
                                       , xrgidocno = g_xrgf_m.xrgfdocno
                                       , xrgi001 = g_xrgf_m.xrgf001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xrgi_t SELECT * FROM axrt530_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axrt530_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_xrgfcomp_t = g_xrgf_m.xrgfcomp
   LET g_xrgfdocno_t = g_xrgf_m.xrgfdocno
   LET g_xrgf001_t = g_xrgf_m.xrgf001
 
   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.delete" >}
#+ 資料刪除
PRIVATE FUNCTION axrt530_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE  l_ld    LIKE glaa_t.glaald     #160518-00037#5
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_xrgf_m.xrgfcomp IS NULL
   OR g_xrgf_m.xrgfdocno IS NULL
   OR g_xrgf_m.xrgf001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN axrt530_cl USING g_enterprise,g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axrt530_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE axrt530_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE axrt530_master_referesh USING g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001 INTO g_xrgf_m.xrgfcomp, 
       g_xrgf_m.xrgf002,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt,g_xrgf_m.xrgf009,g_xrgf_m.xrgf001,g_xrgf_m.xrgf003, 
       g_xrgf_m.xrgf010,g_xrgf_m.xrgfstus,g_xrgf_m.xrgfownid,g_xrgf_m.xrgfowndp,g_xrgf_m.xrgfcrtid,g_xrgf_m.xrgfcrtdp, 
       g_xrgf_m.xrgfcrtdt,g_xrgf_m.xrgfmodid,g_xrgf_m.xrgfmoddt,g_xrgf_m.xrgfcnfid,g_xrgf_m.xrgfcnfdt, 
       g_xrgf_m.xrgf100,g_xrgf_m.xrgf007,g_xrgf_m.xrgf004,g_xrgf_m.xrgf103,g_xrgf_m.xrgf011,g_xrgf_m.xrgf008, 
       g_xrgf_m.xrgf012,g_xrgf_m.xrgf006,g_xrgf_m.xrgf013,g_xrgf_m.xrgf104,g_xrgf_m.xrgf101,g_xrgf_m.xrgf113, 
       g_xrgf_m.xrgf005,g_xrgf_m.xrgfcomp_desc,g_xrgf_m.xrgf002_desc,g_xrgf_m.xrgf003_desc,g_xrgf_m.xrgfownid_desc, 
       g_xrgf_m.xrgfowndp_desc,g_xrgf_m.xrgfcrtid_desc,g_xrgf_m.xrgfcrtdp_desc,g_xrgf_m.xrgfmodid_desc, 
       g_xrgf_m.xrgfcnfid_desc,g_xrgf_m.xrgf004_desc,g_xrgf_m.xrgf012_desc,g_xrgf_m.xrgf013_desc
   
   
   #檢查是否允許此動作
   IF NOT axrt530_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_xrgf_m_mask_o.* =  g_xrgf_m.*
   CALL axrt530_xrgf_t_mask()
   LET g_xrgf_m_mask_n.* =  g_xrgf_m.*
   
   CALL axrt530_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   #160518-00037#5-----s   
   LET l_ld = NULL
   SELECT glaald INTO l_ld FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaacomp = g_xrgf_m.xrgfcomp
      AND glaa014 = 'Y'
   #160518-00037#5-----e
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL axrt530_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_xrgfcomp_t = g_xrgf_m.xrgfcomp
      LET g_xrgfdocno_t = g_xrgf_m.xrgfdocno
      LET g_xrgf001_t = g_xrgf_m.xrgf001
 
 
      DELETE FROM xrgf_t
       WHERE xrgfent = g_enterprise AND xrgfcomp = g_xrgf_m.xrgfcomp
         AND xrgfdocno = g_xrgf_m.xrgfdocno
         AND xrgf001 = g_xrgf_m.xrgf001
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      #160518-00037#5-----s
      IF NOT s_aooi200_fin_del_docno(l_ld,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #160518-00037#5-----e
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_xrgf_m.xrgfcomp,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
 
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM apgc_t
       WHERE apgcent = g_enterprise AND apgccomp = g_xrgf_m.xrgfcomp
         AND apgcdocno = g_xrgf_m.xrgfdocno
         AND apgc900 = g_xrgf_m.xrgf001
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "apgc_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      
      #end add-point
      DELETE FROM xrgi_t
       WHERE xrgient = g_enterprise AND
             xrgicomp = g_xrgf_m.xrgfcomp AND xrgidocno = g_xrgf_m.xrgfdocno AND xrgi001 = g_xrgf_m.xrgf001
      #add-point:單身刪除中 name="delete.body.m_delete2"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrgi_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE axrt530_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_apgc_d.clear() 
      CALL g_apgc2_d.clear()       
 
     
      CALL axrt530_ui_browser_refresh()  
      #CALL axrt530_ui_headershow()  
      #CALL axrt530_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL axrt530_browser_fill("")
         CALL axrt530_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE axrt530_cl
 
   #功能已完成,通報訊息中心
   CALL axrt530_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="axrt530.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION axrt530_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE l_no_use_var  LIKE type_t.chr1
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_apgc_d.clear()
   CALL g_apgc2_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF axrt530_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT apgcseq,apgcorga,apgc001,apgc014,apgc100,apgc101,apgc006,apgc007, 
             apgc008,apgc009,apgc010,apgc011,apgc103,apgc104,apgc105,apgc113,apgc114,apgc115,apgc015, 
             apgc016,apgc004,apgc013 ,t1.ooefl003 ,t2.oocql004 ,t3.nmajl003 ,t4.glacl004 FROM apgc_t", 
                
                     " INNER JOIN xrgf_t ON xrgfent = " ||g_enterprise|| " AND xrgfcomp = apgccomp ",
                     " AND xrgfdocno = apgcdocno ",
                     " AND xrgf001 = apgc900 ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=apgcorga AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent="||g_enterprise||" AND t2.oocql001='3117' AND t2.oocql002=apgc001 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN nmajl_t t3 ON t3.nmajlent="||g_enterprise||" AND t3.nmajl001=apgc015 AND t3.nmajl002='"||g_dlang||"' ",
               " LEFT JOIN glacl_t t4 ON t4.glaclent="||g_enterprise||" AND t4.glacl001='' AND t4.glacl002=apgc004 AND t4.glacl003='"||g_dlang||"' ",
 
                     " WHERE apgcent=? AND apgccomp=? AND apgcdocno=? AND apgc900=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY apgc_t.apgcseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axrt530_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR axrt530_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001
                                               
      FOREACH b_fill_cs INTO g_apgc_d[l_ac].apgcseq,g_apgc_d[l_ac].apgcorga,g_apgc_d[l_ac].apgc001,g_apgc_d[l_ac].apgc014, 
          g_apgc_d[l_ac].apgc100,g_apgc_d[l_ac].apgc101,g_apgc_d[l_ac].apgc006,g_apgc_d[l_ac].apgc007, 
          g_apgc_d[l_ac].apgc008,g_apgc_d[l_ac].apgc009,g_apgc_d[l_ac].apgc010,g_apgc_d[l_ac].apgc011, 
          g_apgc_d[l_ac].apgc103,g_apgc_d[l_ac].apgc104,g_apgc_d[l_ac].apgc105,g_apgc_d[l_ac].apgc113, 
          g_apgc_d[l_ac].apgc114,g_apgc_d[l_ac].apgc115,g_apgc_d[l_ac].apgc015,g_apgc_d[l_ac].apgc016, 
          g_apgc_d[l_ac].apgc004,g_apgc_d[l_ac].apgc013,g_apgc_d[l_ac].apgcorga_desc,g_apgc_d[l_ac].apgc001_desc, 
          g_apgc_d[l_ac].apgc015_desc,g_apgc_d[l_ac].apgc004_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         CALL s_tax_chk(g_xrgf_m.xrgfcomp,g_apgc_d[l_ac].apgc006) RETURNING g_sub_success,l_no_use_var,g_apgc_d[l_ac].oodb005,g_apgc_d[l_ac].oodb006,l_no_use_var
         LET g_apgc_d[l_ac].apgc004_desc  = s_desc_get_account_desc(g_glaald,g_apgc_d[l_ac].apgc004)  
         LET g_apgc_d[l_ac].apgc015_desc = s_desc_get_nmajl003_desc(g_apgc_d[l_ac].apgc015)
         LET g_apgc_d[l_ac].apgc016_desc = s_desc_get_nmail004_desc(g_glaa005,g_apgc_d[l_ac].apgc016)
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF axrt530_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xrgiseq,xrgi002,xrgi003,xrgi100,xrgi101,xrgi103,xrgi113  FROM xrgi_t", 
                
                     " INNER JOIN  xrgf_t ON xrgfent = " ||g_enterprise|| " AND xrgfcomp = xrgicomp ",
                     " AND xrgfdocno = xrgidocno ",
                     " AND xrgf001 = xrgi001 ",
 
                     "",
                     
                     
                     " WHERE xrgient=? AND xrgicomp=? AND xrgidocno=? AND xrgi001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xrgi_t.xrgiseq"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE axrt530_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR axrt530_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001
                                               
      FOREACH b_fill_cs2 INTO g_apgc2_d[l_ac].xrgiseq,g_apgc2_d[l_ac].xrgi002,g_apgc2_d[l_ac].xrgi003, 
          g_apgc2_d[l_ac].xrgi100,g_apgc2_d[l_ac].xrgi101,g_apgc2_d[l_ac].xrgi103,g_apgc2_d[l_ac].xrgi113 
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_apgc_d.deleteElement(g_apgc_d.getLength())
   CALL g_apgc2_d.deleteElement(g_apgc2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axrt530_pb
   FREE axrt530_pb2
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_apgc_d.getLength()
      LET g_apgc_d_mask_o[l_ac].* =  g_apgc_d[l_ac].*
      CALL axrt530_apgc_t_mask()
      LET g_apgc_d_mask_n[l_ac].* =  g_apgc_d[l_ac].*
   END FOR
   
   LET g_apgc2_d_mask_o.* =  g_apgc2_d.*
   FOR l_ac = 1 TO g_apgc2_d.getLength()
      LET g_apgc2_d_mask_o[l_ac].* =  g_apgc2_d[l_ac].*
      CALL axrt530_xrgi_t_mask()
      LET g_apgc2_d_mask_n[l_ac].* =  g_apgc2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="axrt530.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION axrt530_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM apgc_t
       WHERE apgcent = g_enterprise AND
         apgccomp = ps_keys_bak[1] AND apgcdocno = ps_keys_bak[2] AND apgc900 = ps_keys_bak[3] AND apgcseq = ps_keys_bak[4]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_apgc_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      
      #end add-point    
      DELETE FROM xrgi_t
       WHERE xrgient = g_enterprise AND
             xrgicomp = ps_keys_bak[1] AND xrgidocno = ps_keys_bak[2] AND xrgi001 = ps_keys_bak[3] AND xrgiseq = ps_keys_bak[4]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrgi_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_apgc2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION axrt530_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO apgc_t
                  (apgcent,
                   apgccomp,apgcdocno,apgc900,
                   apgcseq
                   ,apgcorga,apgc001,apgc014,apgc100,apgc101,apgc006,apgc007,apgc008,apgc009,apgc010,apgc011,apgc103,apgc104,apgc105,apgc113,apgc114,apgc115,apgc015,apgc016,apgc004,apgc013) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_apgc_d[g_detail_idx].apgcorga,g_apgc_d[g_detail_idx].apgc001,g_apgc_d[g_detail_idx].apgc014, 
                       g_apgc_d[g_detail_idx].apgc100,g_apgc_d[g_detail_idx].apgc101,g_apgc_d[g_detail_idx].apgc006, 
                       g_apgc_d[g_detail_idx].apgc007,g_apgc_d[g_detail_idx].apgc008,g_apgc_d[g_detail_idx].apgc009, 
                       g_apgc_d[g_detail_idx].apgc010,g_apgc_d[g_detail_idx].apgc011,g_apgc_d[g_detail_idx].apgc103, 
                       g_apgc_d[g_detail_idx].apgc104,g_apgc_d[g_detail_idx].apgc105,g_apgc_d[g_detail_idx].apgc113, 
                       g_apgc_d[g_detail_idx].apgc114,g_apgc_d[g_detail_idx].apgc115,g_apgc_d[g_detail_idx].apgc015, 
                       g_apgc_d[g_detail_idx].apgc016,g_apgc_d[g_detail_idx].apgc004,g_apgc_d[g_detail_idx].apgc013) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "apgc_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_apgc_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      
      #end add-point 
      INSERT INTO xrgi_t
                  (xrgient,
                   xrgicomp,xrgidocno,xrgi001,
                   xrgiseq
                   ,xrgi002,xrgi003,xrgi100,xrgi101,xrgi103,xrgi113) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_apgc2_d[g_detail_idx].xrgi002,g_apgc2_d[g_detail_idx].xrgi003,g_apgc2_d[g_detail_idx].xrgi100, 
                       g_apgc2_d[g_detail_idx].xrgi101,g_apgc2_d[g_detail_idx].xrgi103,g_apgc2_d[g_detail_idx].xrgi113) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrgi_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_apgc2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      CALL axrt530_xrgi_upd_xrgf()
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION axrt530_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "apgc_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL axrt530_apgc_t_mask_restore('restore_mask_o')
               
      UPDATE apgc_t 
         SET (apgccomp,apgcdocno,apgc900,
              apgcseq
              ,apgcorga,apgc001,apgc014,apgc100,apgc101,apgc006,apgc007,apgc008,apgc009,apgc010,apgc011,apgc103,apgc104,apgc105,apgc113,apgc114,apgc115,apgc015,apgc016,apgc004,apgc013) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_apgc_d[g_detail_idx].apgcorga,g_apgc_d[g_detail_idx].apgc001,g_apgc_d[g_detail_idx].apgc014, 
                  g_apgc_d[g_detail_idx].apgc100,g_apgc_d[g_detail_idx].apgc101,g_apgc_d[g_detail_idx].apgc006, 
                  g_apgc_d[g_detail_idx].apgc007,g_apgc_d[g_detail_idx].apgc008,g_apgc_d[g_detail_idx].apgc009, 
                  g_apgc_d[g_detail_idx].apgc010,g_apgc_d[g_detail_idx].apgc011,g_apgc_d[g_detail_idx].apgc103, 
                  g_apgc_d[g_detail_idx].apgc104,g_apgc_d[g_detail_idx].apgc105,g_apgc_d[g_detail_idx].apgc113, 
                  g_apgc_d[g_detail_idx].apgc114,g_apgc_d[g_detail_idx].apgc115,g_apgc_d[g_detail_idx].apgc015, 
                  g_apgc_d[g_detail_idx].apgc016,g_apgc_d[g_detail_idx].apgc004,g_apgc_d[g_detail_idx].apgc013)  
 
         WHERE apgcent = g_enterprise AND apgccomp = ps_keys_bak[1] AND apgcdocno = ps_keys_bak[2] AND apgc900 = ps_keys_bak[3] AND apgcseq = ps_keys_bak[4]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "apgc_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "apgc_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axrt530_apgc_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xrgi_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL axrt530_xrgi_t_mask_restore('restore_mask_o')
               
      UPDATE xrgi_t 
         SET (xrgicomp,xrgidocno,xrgi001,
              xrgiseq
              ,xrgi002,xrgi003,xrgi100,xrgi101,xrgi103,xrgi113) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_apgc2_d[g_detail_idx].xrgi002,g_apgc2_d[g_detail_idx].xrgi003,g_apgc2_d[g_detail_idx].xrgi100, 
                  g_apgc2_d[g_detail_idx].xrgi101,g_apgc2_d[g_detail_idx].xrgi103,g_apgc2_d[g_detail_idx].xrgi113)  
 
         WHERE xrgient = g_enterprise AND xrgicomp = ps_keys_bak[1] AND xrgidocno = ps_keys_bak[2] AND xrgi001 = ps_keys_bak[3] AND xrgiseq = ps_keys_bak[4]
      #add-point:update_b段修改中 name="update_b.m_update2"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xrgi_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xrgi_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL axrt530_xrgi_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      CALL axrt530_xrgi_upd_xrgf()
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION axrt530_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION axrt530_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION axrt530_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL axrt530_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "apgc_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axrt530_bcl USING g_enterprise,
                                       g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001,g_apgc_d[g_detail_idx].apgcseq  
                                               
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axrt530_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "xrgi_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axrt530_bcl2 USING g_enterprise,
                                             g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001,g_apgc2_d[g_detail_idx].xrgiseq 
 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "axrt530_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axrt530.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axrt530_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axrt530_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axrt530_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="axrt530.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION axrt530_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("xrgfdocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("xrgfcomp,xrgfdocno,xrgf001",TRUE)
      CALL cl_set_comp_entry("xrgfdocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   CALL cl_set_comp_entry("xrgf008,xrgf103,xrgf113",TRUE) 
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axrt530.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION axrt530_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("xrgfcomp,xrgfdocno,xrgf001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("xrgfdocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("xrgfdocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   CALL cl_set_comp_entry("xrgf001",FALSE)   #押汇次数由系统计算
   #160518-00037#5 mark-----s
   #IF g_xrgf_m.xrgf006 = 'Y' THEN
   #   CALL cl_set_comp_entry("xrgf008,xrgf103,xrgf113",FALSE) 
   #END IF
   #160518-00037#5 mark-----e
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="axrt530.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION axrt530_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="axrt530.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION axrt530_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="axrt530.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION axrt530_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION axrt530_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:2)
   IF g_xrgf_m.xrgfstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF



   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION axrt530_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION axrt530_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION axrt530_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " xrgfcomp = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xrgfdocno = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xrgf001 = '", g_argv[03], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "xrgf_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "apgc_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "xrgi_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="axrt530.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION axrt530_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_str_xrgf       STRING
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_xrgf_m.xrgfcomp IS NULL
      OR g_xrgf_m.xrgfdocno IS NULL      OR g_xrgf_m.xrgf001 IS NULL
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN axrt530_cl USING g_enterprise,g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001
   IF STATUS THEN
      CLOSE axrt530_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN axrt530_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE axrt530_master_referesh USING g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001 INTO g_xrgf_m.xrgfcomp, 
       g_xrgf_m.xrgf002,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt,g_xrgf_m.xrgf009,g_xrgf_m.xrgf001,g_xrgf_m.xrgf003, 
       g_xrgf_m.xrgf010,g_xrgf_m.xrgfstus,g_xrgf_m.xrgfownid,g_xrgf_m.xrgfowndp,g_xrgf_m.xrgfcrtid,g_xrgf_m.xrgfcrtdp, 
       g_xrgf_m.xrgfcrtdt,g_xrgf_m.xrgfmodid,g_xrgf_m.xrgfmoddt,g_xrgf_m.xrgfcnfid,g_xrgf_m.xrgfcnfdt, 
       g_xrgf_m.xrgf100,g_xrgf_m.xrgf007,g_xrgf_m.xrgf004,g_xrgf_m.xrgf103,g_xrgf_m.xrgf011,g_xrgf_m.xrgf008, 
       g_xrgf_m.xrgf012,g_xrgf_m.xrgf006,g_xrgf_m.xrgf013,g_xrgf_m.xrgf104,g_xrgf_m.xrgf101,g_xrgf_m.xrgf113, 
       g_xrgf_m.xrgf005,g_xrgf_m.xrgfcomp_desc,g_xrgf_m.xrgf002_desc,g_xrgf_m.xrgf003_desc,g_xrgf_m.xrgfownid_desc, 
       g_xrgf_m.xrgfowndp_desc,g_xrgf_m.xrgfcrtid_desc,g_xrgf_m.xrgfcrtdp_desc,g_xrgf_m.xrgfmodid_desc, 
       g_xrgf_m.xrgfcnfid_desc,g_xrgf_m.xrgf004_desc,g_xrgf_m.xrgf012_desc,g_xrgf_m.xrgf013_desc
   
 
   #檢查是否允許此動作
   IF NOT axrt530_action_chk() THEN
      CLOSE axrt530_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfcomp_desc,g_xrgf_m.xrgf002,g_xrgf_m.xrgf002_desc,g_xrgf_m.xrga006, 
       g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt,g_xrgf_m.xrgf009,g_xrgf_m.xrgf001,g_xrgf_m.xrgf003,g_xrgf_m.xrgf003_desc, 
       g_xrgf_m.xrga001,g_xrgf_m.xrgf010,g_xrgf_m.xrga025,g_xrgf_m.xrgfstus,g_xrgf_m.xrgfownid,g_xrgf_m.xrgfownid_desc, 
       g_xrgf_m.xrgfowndp,g_xrgf_m.xrgfowndp_desc,g_xrgf_m.xrgfcrtid,g_xrgf_m.xrgfcrtid_desc,g_xrgf_m.xrgfcrtdp, 
       g_xrgf_m.xrgfcrtdp_desc,g_xrgf_m.xrgfcrtdt,g_xrgf_m.xrgfmodid,g_xrgf_m.xrgfmodid_desc,g_xrgf_m.xrgfmoddt, 
       g_xrgf_m.xrgfcnfid,g_xrgf_m.xrgfcnfid_desc,g_xrgf_m.xrgfcnfdt,g_xrgf_m.xrga007,g_xrgf_m.xrga003, 
       g_xrgf_m.xrga011,g_xrgf_m.xrgf100,g_xrgf_m.xrga103,g_xrgf_m.xrgf007,g_xrgf_m.xrgf004,g_xrgf_m.xrgf004_desc, 
       g_xrgf_m.xrgf103,g_xrgf_m.xrgf011,g_xrgf_m.xrgf008,g_xrgf_m.xrgf012,g_xrgf_m.xrgf012_desc,g_xrgf_m.xrgf006, 
       g_xrgf_m.xrgf013,g_xrgf_m.xrgf013_desc,g_xrgf_m.xrgf104,g_xrgf_m.l_glaa001,g_xrgf_m.xrgf101,g_xrgf_m.xrgf113, 
       g_xrgf_m.xrgf005
 
   CASE g_xrgf_m.xrgfstus
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_xrgf_m.xrgfstus
            
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE g_xrgf_m.xrgfstus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE) 
          
         WHEN "X"
            CALL s_transaction_end('N','0')      #150401-00001#13
            RETURN

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid",FALSE)
      END CASE
      #end add-point
      
      
	  
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "Y" 
      AND lc_state <> "N"
      AND lc_state <> "X"
      ) OR 
      g_xrgf_m.xrgfstus = lc_state OR cl_null(lc_state) THEN
      CLOSE axrt530_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   #確認
   IF lc_state = 'Y' THEN
      IF g_xrgf_m.xrgfstus = 'N' THEN
         #160518-00037#5 mark-----s
         #IF g_xrgf_m.xrgf103 > 0 THEN
         #   CALL aapt590_02(g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno) RETURNING g_sub_success,l_str_xrgf
         #   IF NOT g_sub_success THEN
         #      CALL cl_err_collect_show()
         #      RETURN
         #   END IF
         #END IF
         #160518-00037#5 mark-----e
         CALL cl_err_collect_init()
         CALL s_axrt530_conf_chk(g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno) RETURNING g_sub_success
         IF NOT g_sub_success THEN
            CALL s_transaction_end('N','0')
            CALL cl_err_collect_show()
            RETURN
         ELSE
            IF NOT cl_ask_confirm('aim-00108') THEN   #是否執行確認？
               CALL s_transaction_end('N','0')
               CALL cl_err_collect_show()
               RETURN
            ELSE
               CALL s_transaction_begin()
               CALL s_axrt530_conf_upd(g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,l_str_xrgf) RETURNING g_sub_success
               IF NOT g_sub_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
                  CALL cl_err_collect_show()
               END IF
            END IF
         END IF
      END IF  
   END IF  
   #取消確認
   IF lc_state = 'N' THEN
      CALL cl_err_collect_init()
      CALL s_axrt530_unconf_chk(g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno) RETURNING g_sub_success
      IF NOT g_sub_success THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00110') THEN   #是否執行取消確認？
            CALL s_transaction_end('N','0')
            CALL cl_err_collect_show()
            RETURN
         ELSE
            CALL s_transaction_begin()
            CALL s_axrt530_unconf_upd(g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno) RETURNING g_sub_success
            IF NOT g_sub_success THEN
               CALL s_transaction_end('N','0')
               CALL cl_err_collect_show()
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
               CALL cl_err_collect_show()
            END IF
         END IF
      END IF
   END IF
   #作廢
   IF lc_state = 'X' THEN
      CALL cl_err_collect_init()
      CALL s_axrt530_void_chk(g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno) RETURNING g_sub_success
      IF NOT g_sub_success THEN
         CALL s_transaction_end('N','0')           #150401-00001#13
         CALL cl_err_collect_show()
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00109') THEN   #是否執行作廢？
            CALL s_transaction_end('N','0')        #150401-00001#13
            CALL cl_err_collect_show()
            RETURN
         ELSE
            CALL s_transaction_end('Y','0')
            CALL cl_err_collect_show()
         END IF
      END IF
   END IF  
   #end add-point
   
   LET g_xrgf_m.xrgfmodid = g_user
   LET g_xrgf_m.xrgfmoddt = cl_get_current()
   LET g_xrgf_m.xrgfstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE xrgf_t 
      SET (xrgfstus,xrgfmodid,xrgfmoddt) 
        = (g_xrgf_m.xrgfstus,g_xrgf_m.xrgfmodid,g_xrgf_m.xrgfmoddt)     
    WHERE xrgfent = g_enterprise AND xrgfcomp = g_xrgf_m.xrgfcomp
      AND xrgfdocno = g_xrgf_m.xrgfdocno      AND xrgf001 = g_xrgf_m.xrgf001
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE axrt530_master_referesh USING g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgf001 INTO g_xrgf_m.xrgfcomp, 
          g_xrgf_m.xrgf002,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt,g_xrgf_m.xrgf009,g_xrgf_m.xrgf001,g_xrgf_m.xrgf003, 
          g_xrgf_m.xrgf010,g_xrgf_m.xrgfstus,g_xrgf_m.xrgfownid,g_xrgf_m.xrgfowndp,g_xrgf_m.xrgfcrtid, 
          g_xrgf_m.xrgfcrtdp,g_xrgf_m.xrgfcrtdt,g_xrgf_m.xrgfmodid,g_xrgf_m.xrgfmoddt,g_xrgf_m.xrgfcnfid, 
          g_xrgf_m.xrgfcnfdt,g_xrgf_m.xrgf100,g_xrgf_m.xrgf007,g_xrgf_m.xrgf004,g_xrgf_m.xrgf103,g_xrgf_m.xrgf011, 
          g_xrgf_m.xrgf008,g_xrgf_m.xrgf012,g_xrgf_m.xrgf006,g_xrgf_m.xrgf013,g_xrgf_m.xrgf104,g_xrgf_m.xrgf101, 
          g_xrgf_m.xrgf113,g_xrgf_m.xrgf005,g_xrgf_m.xrgfcomp_desc,g_xrgf_m.xrgf002_desc,g_xrgf_m.xrgf003_desc, 
          g_xrgf_m.xrgfownid_desc,g_xrgf_m.xrgfowndp_desc,g_xrgf_m.xrgfcrtid_desc,g_xrgf_m.xrgfcrtdp_desc, 
          g_xrgf_m.xrgfmodid_desc,g_xrgf_m.xrgfcnfid_desc,g_xrgf_m.xrgf004_desc,g_xrgf_m.xrgf012_desc, 
          g_xrgf_m.xrgf013_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_xrgf_m.xrgfcomp,g_xrgf_m.xrgfcomp_desc,g_xrgf_m.xrgf002,g_xrgf_m.xrgf002_desc, 
          g_xrgf_m.xrga006,g_xrgf_m.xrgfdocno,g_xrgf_m.xrgfdocdt,g_xrgf_m.xrgf009,g_xrgf_m.xrgf001,g_xrgf_m.xrgf003, 
          g_xrgf_m.xrgf003_desc,g_xrgf_m.xrga001,g_xrgf_m.xrgf010,g_xrgf_m.xrga025,g_xrgf_m.xrgfstus, 
          g_xrgf_m.xrgfownid,g_xrgf_m.xrgfownid_desc,g_xrgf_m.xrgfowndp,g_xrgf_m.xrgfowndp_desc,g_xrgf_m.xrgfcrtid, 
          g_xrgf_m.xrgfcrtid_desc,g_xrgf_m.xrgfcrtdp,g_xrgf_m.xrgfcrtdp_desc,g_xrgf_m.xrgfcrtdt,g_xrgf_m.xrgfmodid, 
          g_xrgf_m.xrgfmodid_desc,g_xrgf_m.xrgfmoddt,g_xrgf_m.xrgfcnfid,g_xrgf_m.xrgfcnfid_desc,g_xrgf_m.xrgfcnfdt, 
          g_xrgf_m.xrga007,g_xrgf_m.xrga003,g_xrgf_m.xrga011,g_xrgf_m.xrgf100,g_xrgf_m.xrga103,g_xrgf_m.xrgf007, 
          g_xrgf_m.xrgf004,g_xrgf_m.xrgf004_desc,g_xrgf_m.xrgf103,g_xrgf_m.xrgf011,g_xrgf_m.xrgf008, 
          g_xrgf_m.xrgf012,g_xrgf_m.xrgf012_desc,g_xrgf_m.xrgf006,g_xrgf_m.xrgf013,g_xrgf_m.xrgf013_desc, 
          g_xrgf_m.xrgf104,g_xrgf_m.l_glaa001,g_xrgf_m.xrgf101,g_xrgf_m.xrgf113,g_xrgf_m.xrgf005
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE axrt530_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL axrt530_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axrt530.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION axrt530_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_apgc_d.getLength() THEN
         LET g_detail_idx = g_apgc_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_apgc_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_apgc_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_apgc2_d.getLength() THEN
         LET g_detail_idx = g_apgc2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_apgc2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_apgc2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION axrt530_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axrt530_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION axrt530_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="axrt530.status_show" >}
PRIVATE FUNCTION axrt530_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="axrt530.mask_functions" >}
&include "erp/axr/axrt530_mask.4gl"
 
{</section>}
 
{<section id="axrt530.signature" >}
   
 
{</section>}
 
{<section id="axrt530.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION axrt530_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_xrgf_m.xrgfcomp
   LET g_pk_array[1].column = 'xrgfcomp'
   LET g_pk_array[2].values = g_xrgf_m.xrgfdocno
   LET g_pk_array[2].column = 'xrgfdocno'
   LET g_pk_array[3].values = g_xrgf_m.xrgf001
   LET g_pk_array[3].column = 'xrgf001'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axrt530.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="axrt530.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION axrt530_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL axrt530_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_xrgf_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="axrt530.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION axrt530_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#45 add-S
   SELECT xrgfstus  INTO g_xrgf_m.xrgfstus
     FROM xrgf_t
    WHERE xrgfent = g_enterprise
      AND xrgfdocno = g_xrgf_m.xrgfdocno
      AND xrgfcomp = g_xrgf_m.xrgfcomp
      AND xrgf001 = g_xrgf_m.xrgf001

   IF (g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_xrgf_m.xrgfstus
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_xrgf_m.xrgfdocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL axrt530_set_act_visible()
        CALL axrt530_set_act_no_visible()
        CALL axrt530_show()
        RETURN FALSE
     END IF
   END IF
   #160818-00017#45 add-E
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="axrt530.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 法人资讯
# Memo...........:
# Date & Author..: 16/04/26 By 02097
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt530_get_comp_info()
DEFINE l_isai002        LIKE isai_t.isai002

   IF cl_null(g_xrgf_m.xrgfcomp) THEN RETURN END IF
   CALL s_fin_get_major_ld(g_xrgf_m.xrgfcomp) RETURNING g_glaald
   CALL s_ld_sel_glaa(g_glaald,'glaa001|glaa004|glaa005|glaa024')
        RETURNING g_sub_success,g_glaa001,g_glaa004,g_glaa005,g_glaa024
   #取得該法人的稅區
   CALL s_tax_get_ooef019(g_xrgf_m.xrgfcomp) RETURNING g_sub_success,g_ooef019
   
   CALL cl_set_comp_visible('apgc008',FALSE)
   SELECT isai002 INTO l_isai002
     FROM isai_t
    WHERE isaient = g_enterprise AND isai001 = g_ooef019
   IF l_isai002 = "2" THEN
      CALL cl_set_comp_visible('apgc008',TRUE)
   END IF
   
   
   
   
END FUNCTION

################################################################################
# Descriptions...: 收状单号
# Memo...........:
# Date & Author..: 16/04/26 By 02097
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt530_get_xrgfdocno_info(p_cmd)
DEFINE p_cmd         LIKE type_t.chr1
DEFINE l_xrgf003     LIKE xrgf_t.xrgf003
DEFINE l_xrgf004     LIKE xrgf_t.xrgf004
DEFINE l_xrgf100     LIKE xrgf_t.xrgf100
DEFINE l_xrga104     LIKE xrga_t.xrga104
DEFINE ls_js         STRING
DEFINE lc_param      RECORD
         type        LIKE type_t.chr1,
         apca004     LIKE apca_t.apca004
                 END RECORD
DEFINE l_no_use_var  LIKE type_t.chr1




              
   SELECT xrga001,xrga003,xrga004,
          xrga006,xrga007,
          xrga011,xrga022,
          xrga100,xrga103,xrga104
     INTO g_xrgf_m.xrga001,g_xrgf_m.xrga003,l_xrgf003,
          g_xrgf_m.xrga006,g_xrgf_m.xrga007,
          g_xrgf_m.xrga011,l_xrgf004       ,
          l_xrgf100       ,g_xrgf_m.xrga103,l_xrga104
     FROM xrga_t
    WHERE xrgaent = g_enterprise
      AND xrgacomp= g_xrgf_m.xrgfcomp 
      #AND xrgadocno = g_xrgf_m.xrgfdocno#160518-00037#5 mark
      AND xrgadocno = g_xrgf_m.xrgf009   #160518-00037#5 add
   
   IF p_cmd = 'i' THEN      
      LET g_xrgf_m.xrgf003 = l_xrgf003
      LET g_xrgf_m.xrgf004 = l_xrgf004
      LET g_xrgf_m.xrgf008 = g_xrgf_m.xrgfdocdt
      LET g_xrgf_m.xrgf100 = l_xrgf100
      
      #取汇率/#g_xrgf_m.xrgf101
      LET lc_param.type    = '1'
      LET lc_param.apca004 = g_xrgf_m.xrgf003
      LET ls_js = util.JSON.stringify(lc_param)
      CALL s_fin_get_curr_rate(g_xrgf_m.xrgfcomp,g_glaald,g_xrgf_m.xrgfdocdt,g_xrgf_m.xrgf100,ls_js)
           RETURNING g_xrgf_m.xrgf101,l_no_use_var,l_no_use_var
      #预设xrgf103
      LET g_xrgf_m.xrgf103 = g_xrgf_m.xrga103 - l_xrga104
      CALL s_curr_round_ld('1',g_glaald,g_xrgf_m.xrgf100,g_xrgf_m.xrgf103,2) RETURNING g_sub_success,g_errno,g_xrgf_m.xrgf103
      LET g_xrgf_m.xrgf113 = g_xrgf_m.xrgf103 * g_xrgf_m.xrgf101
      CALL s_curr_round_ld('1',g_glaald,g_xrgf_m.xrgf100,g_xrgf_m.xrgf113,2) RETURNING g_sub_success,g_errno,g_xrgf_m.xrgf113
   END IF
   CALL s_desc_get_trading_partner_abbr_desc(g_xrgf_m.xrgf003) RETURNING g_xrgf_m.xrgf003_desc
   CALL s_desc_get_nmabl003(g_xrgf_m.xrgf004) RETURNING g_xrgf_m.xrgf004_desc
   #160518-00037#5 mark-----s
   #IF NOT cl_null(g_xrgf_m.xrgf005) THEN
   #   SELECT xmdo051 INTO g_xrgf_m.xmdo051
   #     FROM xmdo_t
   #    WHERE xmdoent = g_enterprise AND xmdodocno = g_xrgf_m.xrgf005
   #   DISPLAY BY NAME g_xrgf_m.xmdo051
   #END IF
   #160518-00037#5 mark-----e
   
   DISPLAY BY NAME g_xrgf_m.xrga001,g_xrgf_m.xrga003,g_xrgf_m.xrgf003,g_xrgf_m.xrgf003_desc,
                   g_xrgf_m.xrga006,g_xrgf_m.xrga007,
                   g_xrgf_m.xrga011,g_xrgf_m.xrgf004,g_xrgf_m.xrgf004_desc,
                   g_xrgf_m.xrgf100,g_xrgf_m.xrgf101,g_xrgf_m.xrga103
                   
   #160518-00037#5-----s
   SELECT glaa001 INTO g_xrgf_m.l_glaa001 FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaacomp = g_xrgf_m.xrgfcomp
      AND glaa014 = 'Y'
   DISPLAY BY NAME g_xrgf_m.l_glaa001
   #160518-00037#5-----e
END FUNCTION
################################################################################
# Descriptions...: 检查单别
# Memo...........:
# Date & Author..: 16/04/29 By 02097
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt530_chk_slip(p_slip)
DEFINE p_slip        LIKE apgn_t.apgndocno
DEFINE r_success     LIKE type_t.num10
DEFINE r_errno       LIKE gzze_t.gzze001
DEFINE l_ap_slip     LIKE apgn_t.apgndocno
DEFINE l_chr         LIKE type_t.chr1
DEFINE l_com_0001    LIKE type_t.num5
DEFINE l_slip        STRING
DEFINE l_len         LIKE type_t.num5

   WHENEVER ERROR CONTINUE  
   LET r_success = TRUE
   
   CALL s_aooi200_fin_get_slip(p_slip) RETURNING g_sub_success,l_ap_slip
   CALL s_fin_get_doc_para(g_glaald,g_xrgf_m.xrgfcomp,l_ap_slip,'D-FIN-0030') RETURNING l_chr
   IF l_chr = 'N' THEN
      LET r_success = FALSE
      LET r_errno = 'aap-00334'
      RETURN r_success,r_errno
   END IF
   CALL cl_get_para(g_enterprise,'','E-COM-0001') RETURNING l_com_0001
   LET l_slip = l_ap_slip
   LET l_len  = l_slip.getLength()
   IF l_len <> l_com_0001 THEN
      LET r_success = FALSE
      LET r_errno = 'aoo-00292'
      RETURN r_success,r_errno
   END IF
   RETURN r_success,r_errno
   
END FUNCTION

################################################################################
# Descriptions...: 
# Memo...........:
# Date & Author..: 16/04/29 By 02097
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt530_calc_apgc_money(p_oodb005)
DEFINE p_oodb005     LIKE oodb_t.oodb005
DEFINE l_apgc103     LIKE apgc_t.apgc103     #計稅基礎
DEFINE l_case        LIKE type_t.chr1

   IF cl_null(g_apgc_d[l_ac].apgc006) OR cl_null(g_apgc_d[l_ac].apgc100) OR cl_null(g_apgc_d[l_ac].apgc101) THEN
      LET g_apgc_d[l_ac].apgc103 = 0
      LET g_apgc_d[l_ac].apgc104 = 0
      LET g_apgc_d[l_ac].apgc105 = 0
      LET g_apgc_d[l_ac].apgc113 = 0
      LET g_apgc_d[l_ac].apgc114 = 0
      LET g_apgc_d[l_ac].apgc115 = 0
      RETURN
   END IF
   IF NOT cl_null(g_apgc_d[l_ac].apgc006) AND cl_null(p_oodb005) THEN
      #重新取p_oodb005
   END IF
   IF cl_null(p_oodb005) THEN
      LET g_apgc_d[l_ac].apgc103 = 0
      LET g_apgc_d[l_ac].apgc104 = 0
      LET g_apgc_d[l_ac].apgc105 = 0
      LET g_apgc_d[l_ac].apgc113 = 0
      LET g_apgc_d[l_ac].apgc114 = 0
      LET g_apgc_d[l_ac].apgc115 = 0
      RETURN
   END IF
   LET l_case = 'N'
   CASE
      WHEN INFIELD(apgc006)
         LET l_case = 'Y'
            
      WHEN INFIELD(apgc103)
         IF p_oodb005 = 'N' THEN   #未稅的計價基礎 應重推金額
            LET l_case = 'Y'
         ELSE
            LET g_apgc_d[l_ac].apgc104 = g_apgc_d[l_ac].apgc105 - g_apgc_d[l_ac].apgc103
         END IF
         
      WHEN INFIELD(apgc104)
         IF p_oodb005 = 'N' THEN
            LET g_apgc_d[l_ac].apgc105 = g_apgc_d[l_ac].apgc103 + g_apgc_d[l_ac].apgc104
         ELSE
            LET g_apgc_d[l_ac].apgc103 = g_apgc_d[l_ac].apgc105 - g_apgc_d[l_ac].apgc104            
         END IF
         
      WHEN INFIELD(apgc105)
         IF p_oodb005 = 'N' THEN
            LET g_apgc_d[l_ac].apgc104 = g_apgc_d[l_ac].apgc105 - g_apgc_d[l_ac].apgc103
         ELSE
            LET l_case = 'Y'
         END IF
      
      WHEN INFIELD(apgc113)
         IF p_oodb005 = 'N' THEN
            LET g_apgc_d[l_ac].apgc115 = g_apgc_d[l_ac].apgc113 + g_apgc_d[l_ac].apgc114 
         ELSE
            LET g_apgc_d[l_ac].apgc114 = g_apgc_d[l_ac].apgc115 - g_apgc_d[l_ac].apgc113            
         END IF
         
      WHEN INFIELD(apgc114)
         IF p_oodb005 = 'N' THEN
            LET g_apgc_d[l_ac].apgc115 = g_apgc_d[l_ac].apgc113 + g_apgc_d[l_ac].apgc114
         ELSE
            LET g_apgc_d[l_ac].apgc113 = g_apgc_d[l_ac].apgc115 - g_apgc_d[l_ac].apgc114            
         END IF
         
      WHEN INFIELD(apgc115)
         IF p_oodb005 = 'N' THEN
            LET g_apgc_d[l_ac].apgc113 = g_apgc_d[l_ac].apgc115 - g_apgc_d[l_ac].apgc114        
         ELSE
            LET g_apgc_d[l_ac].apgc114 = g_apgc_d[l_ac].apgc115 - g_apgc_d[l_ac].apgc113 
         END IF
   END CASE         
   
   IF l_case = 'Y' THEN
      LET l_apgc103 = 0
      IF p_oodb005 = 'N' THEN                   #未稅
         LET l_apgc103 = g_apgc_d[l_ac].apgc103
      ELSE
         LET l_apgc103 = g_apgc_d[l_ac].apgc105
      END IF
      IF cl_null(l_apgc103) THEN LET l_apgc103 = 0 END IF
                      #營運據點/p_oodb002:稅別/p_money:計稅基礎/p_num:數量/p_curr:幣別/p_rate:匯率
      CALL s_tax_count(g_xrgf_m.xrgfcomp,g_apgc_d[l_ac].apgc006,l_apgc103,1,g_apgc_d[l_ac].apgc100,g_apgc_d[l_ac].apgc101)
           RETURNING g_apgc_d[l_ac].apgc103,g_apgc_d[l_ac].apgc104,g_apgc_d[l_ac].apgc105
                    ,g_apgc_d[l_ac].apgc113,g_apgc_d[l_ac].apgc114,g_apgc_d[l_ac].apgc115
   END IF
   
END FUNCTION

################################################################################
# Descriptions...: 
# Memo...........:
# Date & Author..: 16/04/29 By 02097
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt530_get_apgc_rate()
DEFINE l_sfin4012       LIKE type_t.chr2
DEFINE l_no_use_var     LIKE type_t.chr1
DEFINE ls_js            STRING
DEFINE lc_param         RECORD
         apca004        LIKE apca_t.apca004
                    END RECORD
   
   IF g_xrgf_m.xrgf100 = g_apgc_d[l_ac].apgc100 THEN  #若與主檔同幣別則帶主檔之匯率,else另取
      LET g_apgc_d[l_ac].apgc101 = g_xrgf_m.xrgf101
   ELSE      
      #有輸入交易帳戶時,取銀存支出匯率來源
      IF NOT cl_null(g_apgc_d[l_ac].apgc014) THEN
         CALL cl_get_para(g_enterprise,g_xrgf_m.xrgfcomp,'S-FIN-4012') RETURNING l_sfin4012
      ELSE
         LET l_sfin4012 = ''
      END IF
      
      IF l_sfin4012  = '23' THEN
         #銀行日平均匯率
         CALL s_anm_get_exrate(g_glaald,g_xrgf_m.xrgfcomp,g_apgc_d[l_ac].apgc014,g_apgc_d[l_ac].apgc100,g_glaa001,g_xrgf_m.xrgfdocdt) RETURNING g_apgc_d[l_ac].apgc101
      ELSE
         LET lc_param.apca004 = g_xrgf_m.xrgf003
         LET ls_js = util.JSON.stringify(lc_param)
         CALL s_fin_get_curr_rate(g_xrgf_m.xrgfcomp,g_glaald,g_xrgf_m.xrgfdocno,g_apgc_d[l_ac].apgc100,ls_js)
              RETURNING g_apgc_d[l_ac].apgc101,l_no_use_var,l_no_use_var
      END IF   
      
   END IF
   DISPLAY BY NAME g_xrgf_m.xrgf101
END FUNCTION

################################################################################
# Descriptions...: 發票/IV檢核
# Memo...........:
# Usage..........: CALL axrt530_xrgi002_chk(p_docno,p_type)
#                  RETURNING r_success,r_errno
# Input parameter: 
# Date & Author..: #160518-00037#5 160810 By albireo
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt530_xrgi002_chk(p_docno,p_type)
   DEFINE p_docno   LIKE xrgi_t.xrgi002
   DEFINE p_type    LIKE type_t.chr1
   DEFINE r_success LIKE type_t.num5
   DEFINE r_errno   LIKE gzze_t.gzze001
   DEFINE l_xmdostus LIKE xmdo_t.xmdostus
   DEFINE l_ivsum    LIKE type_t.num20_6
   DEFINE l_paysum   LIKE type_t.num20_6
   DEFINE l_count    LIKE type_t.num10
   LET r_success = TRUE
   LET r_errno = NULL
   CASE
      WHEN p_type = '1'
         #IV  
         #1.axmt620 存在並xmdostus='Y' 
         LET l_xmdostus = NULL
         SELECT xmdostus INTO l_xmdostus FROM xmdo_t
          WHERE xmdoent = g_enterprise
            AND xmdodocno = p_docno
         CASE
            WHEN SQLCA.SQLCODE = 100
               LET r_success = FALSE
               LET r_errno   = 'axr-01031'
            WHEN l_xmdostus <> 'Y'
               LET r_success = FALSE
               LET r_errno   = 'axr-01032'
         END CASE
         
         IF NOT r_success THEN
            RETURN r_success,r_errno
         END IF
         #2.金額需未被用完(xmdp025-有效的xrgi103)
         LET l_ivsum = NULL
         SELECT SUM(xmdp025) INTO l_ivsum FROM xmdp_t,xmdo_t
          WHERE xmdpent = g_enterprise
            AND xmdpdocno = p_docno
            AND xmdostus <> 'X'
            AND xmdoent = xmdpent
            ANd xmdodocno = xmdpdocno
         IF cl_null(l_ivsum)THEN LET l_ivsum = 0 END IF
         
         LET l_paysum = NULL
         SELECT SUM(xrgi103) INTO l_paysum FROM xrgi_t,xrgf_t
          WHERE xrgient = xrgfent
            AND xrgidocno = xrgfdocno
            AND xrgicomp = xrgfcomp
            AND xrgi001 = xrgf001
            AND xrgfstus <> 'X'
            AND xrgient = g_enterprise
            AND xrgi002 = p_docno
         IF cl_null(l_paysum)THEN LET l_paysum = 0 END IF
         
         IF (l_ivsum - l_paysum) <= 0 THEN
            LET r_success = FALSE
            LET r_errno   = 'axr-01033'         
         END IF
         
         IF NOT r_success THEN
            RETURN r_success,r_errno
         END IF
         
         #3.同張axrt530中不該出現相同發票
         LET l_count = NULL
         SELECT COUNT(*) INTO l_count FROM xrgi_t
          WHERE xrgient = g_enterprise
            AND xrgicomp = g_xrgf_m.xrgfcomp
            AND xrgidocno = g_xrgf_m.xrgfdocno
            AND xrgi001 = g_xrgf_m.xrgf001
            AND xrgi002 = p_docno
         IF cl_null(l_count)THEN LET l_count = 0 END IF
         
         IF l_count > 0 THEN
            LET r_success = FALSE
            LET r_errno   = 'axr-01034'             
         END IF
         
         IF NOT r_success THEN
            RETURN r_success,r_errno
         END IF         
      WHEN p_type = '2'
         #發票
         #1.訂單串出貨單串isat存在並isaf有效#2.isat狀態isat014=11發票開立
         LET l_count = NULL
         SELECT COUNT(*) INTO l_count FROM isat_t,isaf_t,isag_t,xmdl_t,xmdk_t,xrgb_t,xrga_t
          WHERE isatent = g_enterprise
            AND isat004 = p_docno
            AND isat014 = '11'
            AND isat025 NOT IN('12','22')
            AND isafent = isatent
            AND isafcomp = isatcomp
            AND isafdocno =isatdocno
            AND isafstus  = 'Y'
            AND isagent = isafent
            AND isagcomp = isafcomp
            AND isagdocno  = isafdocno
            AND isag001    = '11'    #出貨單
            AND isagent    = xmdlent
            AND isag002    = xmdldocno
            AND isag003    = xmdlseq
            AND xmdlent    = xmdkent
            AND xmdldocno  = xmdkdocno
            AND xmdkstus   = 'S'
            AND xmdlent    = xrgbent
            AND xmdl003    = xrgb001
            AND xmdl004    = xrgb002
            AND xrgbent    = xrgaent
            AND xrgbcomp   = xrgacomp
            AND xrgbdocno  = xrgadocno
            AND xrgastus = 'Y'
            AND xrgbdocno = g_xrgf_m.xrgf009
         IF cl_null(l_count)THEN LET l_count = 0 END IF
         IF l_count = 0 THEN
            LET r_success = FALSE
            LET r_errno   = 'axr-01035'             
         END IF
         
         IF NOT r_success THEN
            RETURN r_success,r_errno
         END IF             
         #3.isat105-有效的xrgi103
         LET l_ivsum = NULL
         SELECT isat105 INTO l_ivsum FROM isat_t
          WHERE isatent = g_enterprise
            AND isat004 = p_docno
            AND isat014 = '11'
            AND isat025 NOT IN ('12','22')  
         IF cl_null(l_ivsum)THEN LET l_ivsum = 0 END IF
         
         LET l_paysum = NULL
         SELECT SUM(xrgi103) INTO l_paysum FROM xrgi_t,xrgf_t
          WHERE xrgient = xrgfent
            AND xrgidocno = xrgfdocno
            AND xrgicomp = xrgfcomp
            AND xrgi001 = xrgf001
            AND xrgfstus <> 'X'
            AND xrgient = g_enterprise
            AND xrgi002 = p_docno
         IF cl_null(l_paysum)THEN LET l_paysum = 0 END IF
         
         IF (l_ivsum - l_paysum) <= 0 THEN
            LET r_success = FALSE
            LET r_errno   = 'axr-01036'         
         END IF
         
         IF NOT r_success THEN
            RETURN r_success,r_errno
         END IF         
         #4.同張axrt530不該出現相同發票號
         LET l_count = NULL
         SELECT COUNT(*) INTO l_count FROM xrgi_t
          WHERE xrgient = g_enterprise
            AND xrgicomp = g_xrgf_m.xrgfcomp
            AND xrgidocno = g_xrgf_m.xrgfdocno
            AND xrgi001 = g_xrgf_m.xrgf001
         IF cl_null(l_count)THEN LET l_count = 0 END IF
         
         IF l_count > 0 THEN
            LET r_success = FALSE
            LET r_errno   = 'axr-01034'             
         END IF
         
         IF NOT r_success THEN
            RETURN r_success,r_errno
         END IF       
   END CASE
   RETURN r_success,r_errno
END FUNCTION

################################################################################
# Descriptions...: 過欄位同步帶出發票資訊
# Memo...........:
# Usage..........: CALL axrt530_xrgi002_chk(p_docno,p_type)
#                  RETURNING r_success,r_errno
# Input parameter: 
# Date & Author..: #160518-00037#5 160810 By albireo
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt530_xrgi002_carry(p_docno,p_type)
   DEFINE r_arr   DYNAMIC ARRAY OF RECORD
                  chr     LIKE type_t.chr1000,
                  dat     LIKE type_t.dat
                  END RECORD
   DEFINE p_docno LIKE xrgi_t.xrgi002
   DEFINE p_type  LIKE type_t.chr10
   DEFINE l_103   LIKE type_t.num20_6
   #r_arr[1].dat = 發票日期(xmdodocdt/isat007)
   #r_arr[2].chr = 幣別(xmdo016/isat100)
   #r_arr[3].chr = 匯率(xmdo017/)
   #r_arr[4].chr = 原幣金額(SUM(xmdp025)/isat105)
   #r_arr[5].chr = 本幣金額(SUM(xmdp025)*匯率)/isat115)    

   CALL r_arr.clear()
   CASE
      WHEN p_type = '1'
         SELECT xmdodocdt,xmdo016,xmdo017 INTO r_arr[1].dat,r_arr[2].chr,r_arr[3].chr FROM xmdo_t
          WHERE xmdoent = g_enterprise
            AND xmdodocno = p_docno
         IF cl_null(r_arr[3].chr)THEN LET r_arr[3].chr = 1 END IF
         
         LET l_103 = NULL
         SELECT SUM(xmdp025) INTO l_103 FROM xmdp_t
          WHERE xmdpent = g_enterprise
            ANd xmdpdocno = p_docno
         IF cl_null(l_103)THEN LET l_103 = 0 END IF
         
         LET r_arr[4].chr = l_103
         LET r_arr[5].chr = l_103 * r_arr[3].chr
         #本幣取位s_curr_round_ld
         
      WHEN p_type = '2'
         SELECT isat007,isat100,isat101,isat105,isat115 INTO r_arr[1].dat,r_arr[2].chr,r_arr[3].chr,
                                                             r_arr[4].chr,r_arr[5].chr
           FROM isat_t
          WHERE isatent = g_enterprise
            AND isat004 = p_docno
            AND isat014 = '11'
         IF cl_null(r_arr[4].chr)THEN LET r_arr[4].chr = 0 END IF
         IF cl_null(r_arr[5].chr)THEN LET r_arr[5].chr = 0 END IF
         IF cl_null(r_arr[3].chr)THEN LET r_arr[3].chr = 1 END IF 
   END CASE
   
   RETURN r_arr
END FUNCTION

################################################################################
# Descriptions...: 回寫單頭IV原幣總合
# Memo...........:
# Usage..........: CALL axrt530_xrgi_upd_xrgf()
#                  
# Date & Author..: #160518-00037#5 160812 By albireo
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt530_xrgi_upd_xrgf()
   DEFINE l_count   LIKE type_t.num10
   DEFINE l_103sum  LIKE type_t.num20_6
   DEFINE l_113sum  LIKE type_t.num20_6
   LET l_count = NULL
   SELECT COUNT(*) INTO l_count FROM xrgi_t
    WHERE xrgient = g_enterprise
      AND xrgicomp = g_xrgf_m.xrgfcomp
      AND xrgidocno = g_xrgf_m.xrgfdocno
      AND xrgi001   = g_xrgf_m.xrgf001
      AND xrgi100   <> g_xrgf_m.xrgf100
   IF cl_null(l_count)THEN LET l_count = 0 END IF
   
   IF l_count > 0 THEN
      LET l_113sum = NULL
      SELECT SUM(xrgi113) INTO l_113sum FROM xrgi_t
       WHERE xrgient = g_enterprise
         AND xrgicomp = g_xrgf_m.xrgfcomp
         AND xrgidocno = g_xrgf_m.xrgfdocno
         AND xrgi001 = g_xrgf_m.xrgf001
      IF cl_null(l_113sum)THEN LET l_113sum = 0 END IF
      
      LET l_103sum = l_113sum / g_xrgf_m.xrgf101
      #s_curr_round_ld
      
      
   ELSE
      LET l_113sum = NULL
      LET l_103sum = NULL
      SELECT SUM(xrgi103),SUM(xrgi113) INTO l_103sum,l_113sum FROM xrgi_t
       WHERE xrgient = g_enterprise
         AND xrgicomp = g_xrgf_m.xrgfcomp
         AND xrgidocno = g_xrgf_m.xrgfdocno
         AND xrgi001 = g_xrgf_m.xrgf001
      IF cl_null(l_113sum)THEN LET l_113sum = 0 END IF
      IF cl_null(l_103sum)THEN LET l_103sum = 0 END IF
   END IF
   
   UPDATE xrgf_t SET xrgf104 = l_103sum 
    WHERE xrgfent = g_enterprise
      AND xrgfcomp = g_xrgf_m.xrgfcomp
      AND xrgfdocno = g_xrgf_m.xrgfdocno
      AND xrgf001   = g_xrgf_m.xrgf001
   
   LET g_xrgf_m.xrgf104 = l_103sum
   DISPLAY BY NAME g_xrgf_m.xrgf104
   
END FUNCTION

################################################################################
# Descriptions...: 依申請單來源帶入IV或發票單身
# Memo...........:
# Usage..........: CALL axrt530_iv_ins_xrgi()
#                  
# Date & Author..: #160518-00037#5 160812 By albireo
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt530_iv_ins_xrgi()
   DEFINE l_sql     STRING
   DEFINE l_xrgi RECORD  #押匯發票單身檔
       xrgient LIKE xrgi_t.xrgient, #企業代碼
       xrgicomp LIKE xrgi_t.xrgicomp, #法人
       xrgidocno LIKE xrgi_t.xrgidocno, #單號
       xrgiseq LIKE xrgi_t.xrgiseq, #項次
       xrgi002 LIKE xrgi_t.xrgi002, #發票號碼/INVOICE
       xrgi003 LIKE xrgi_t.xrgi003, #發票日期
       xrgi100 LIKE xrgi_t.xrgi100, #幣別
       xrgi101 LIKE xrgi_t.xrgi101, #匯率
       xrgi103 LIKE xrgi_t.xrgi103, #原幣金額
       xrgi113 LIKE xrgi_t.xrgi113, #本幣金額
       xrgiud001 LIKE xrgi_t.xrgiud001, #自定義欄位(文字)001
       xrgiud002 LIKE xrgi_t.xrgiud002, #自定義欄位(文字)002
       xrgiud003 LIKE xrgi_t.xrgiud003, #自定義欄位(文字)003
       xrgiud004 LIKE xrgi_t.xrgiud004, #自定義欄位(文字)004
       xrgiud005 LIKE xrgi_t.xrgiud005, #自定義欄位(文字)005
       xrgiud006 LIKE xrgi_t.xrgiud006, #自定義欄位(文字)006
       xrgiud007 LIKE xrgi_t.xrgiud007, #自定義欄位(文字)007
       xrgiud008 LIKE xrgi_t.xrgiud008, #自定義欄位(文字)008
       xrgiud009 LIKE xrgi_t.xrgiud009, #自定義欄位(文字)009
       xrgiud010 LIKE xrgi_t.xrgiud010, #自定義欄位(文字)010
       xrgiud011 LIKE xrgi_t.xrgiud011, #自定義欄位(數字)011
       xrgiud012 LIKE xrgi_t.xrgiud012, #自定義欄位(數字)012
       xrgiud013 LIKE xrgi_t.xrgiud013, #自定義欄位(數字)013
       xrgiud014 LIKE xrgi_t.xrgiud014, #自定義欄位(數字)014
       xrgiud015 LIKE xrgi_t.xrgiud015, #自定義欄位(數字)015
       xrgiud016 LIKE xrgi_t.xrgiud016, #自定義欄位(數字)016
       xrgiud017 LIKE xrgi_t.xrgiud017, #自定義欄位(數字)017
       xrgiud018 LIKE xrgi_t.xrgiud018, #自定義欄位(數字)018
       xrgiud019 LIKE xrgi_t.xrgiud019, #自定義欄位(數字)019
       xrgiud020 LIKE xrgi_t.xrgiud020, #自定義欄位(數字)020
       xrgiud021 LIKE xrgi_t.xrgiud021, #自定義欄位(日期時間)021
       xrgiud022 LIKE xrgi_t.xrgiud022, #自定義欄位(日期時間)022
       xrgiud023 LIKE xrgi_t.xrgiud023, #自定義欄位(日期時間)023
       xrgiud024 LIKE xrgi_t.xrgiud024, #自定義欄位(日期時間)024
       xrgiud025 LIKE xrgi_t.xrgiud025, #自定義欄位(日期時間)025
       xrgiud026 LIKE xrgi_t.xrgiud026, #自定義欄位(日期時間)026
       xrgiud027 LIKE xrgi_t.xrgiud027, #自定義欄位(日期時間)027
       xrgiud028 LIKE xrgi_t.xrgiud028, #自定義欄位(日期時間)028
       xrgiud029 LIKE xrgi_t.xrgiud029, #自定義欄位(日期時間)029
       xrgiud030 LIKE xrgi_t.xrgiud030, #自定義欄位(日期時間)030
       xrgi001 LIKE xrgi_t.xrgi001 #次數
   END RECORD
   DEFINE l_xrgi103pay    LIKE type_t.num20_6
   DEFINE l_xrgi113pay    LIKE type_t.num20_6
   DEFINE r_success       LIKE type_t.num5
   
   LET r_success = TRUE
   IF NOT cl_null(g_xrgf_m.xrgf006) AND NOT cl_null(g_xrgf_m.xrgf009)THEN
   ELSE
      RETURN r_success
   END IF
   
   DELETE FROM xrgi_t WHERE xrgient = g_enterprise AND xrgicomp = g_xrgf_m.xrgfcomp AND xrgidocno = g_xrgf_m.xrgfdocno AND xrgi001 = g_xrgf_m.xrgf001
   IF SQLCA.SQLCODE THEN 
      INITIALIZE g_errparam.* TO NULL
      LET g_errparam.code = ''
      LET g_errparam.extend = 'axrt530_ins_xrgi:DELETE xrgi'
      LET g_errparam.popup = TRUE
      CALL cl_err()
       
   END IF   
   
   
   #發票號+xrgf006附件類型取得已沖金額
   LET l_sql = "SELECT SUM(xrgi103),SUM(xrgi113) ",
               "  FROM xrgi_t ,xrgf_t ",
               " WHERE xrgient = xrgfent ",
               "   AND xrgicomp = xrgfcomp ",
               "   AND xrgidocno = xrgfdocno ",
               "   AND xrgi001   = xrgf001 ",
               "   AND xrgfstus <> 'X' ",
               "   AND xrgf006 = '",g_xrgf_m.xrgf006,"' ",
               "   AND xrgi001 = ? "
   PREPARE sel_xrgipayp FROM l_sql
   
   CASE
      WHEN g_xrgf_m.xrgf006 = '1'
         #IV
         #xmdo/xmdp   xrgb/xrga
         LET l_sql = "SELECT xmdodocno,xmdodocdt,xmdo016,xmdo017,SUM(xmdp025),0 ",
                     "  FROM xmdp_t,xmdo_t ",
                     " WHERE xmdpent = xmdoent AND xmdpdocno = xmdodocno ",
                     "   AND EXISTS (SELECT 1 FROM xrga_t,xrgb_t WHERE xrgaent = xrgbent AND xrgacomp = xrgbcomp AND xrgaent =",g_enterprise," ",
                     "                 AND xrgb001= xmdp003 AND xrgb002 = xmdp004 AND xrgbent = xmdpent AND xrgbdocno = '",g_xrgf_m.xrgf009,"' ) ",
                     "   AND xmdpent = ",g_enterprise," ",
                     " GROUP BY xmdodocno,xmdodocdt,xmdo016,xmdo017"
         PREPARE sel_xmdop1 FROM l_sql
         DECLARE sel_xmdoc1 CURSOR FOR sel_xmdop1
         FOREACH sel_xmdoc1 INTO l_xrgi.xrgi002,l_xrgi.xrgi003,l_xrgi.xrgi100,l_xrgi.xrgi101,l_xrgi.xrgi103,l_xrgi.xrgi113
            IF SQLCA.SQLCODE THEN EXIT FOREACH END IF
            LET l_xrgi.xrgient   = g_enterprise
            LET l_xrgi.xrgicomp  = g_xrgf_m.xrgfcomp
            LET l_xrgi.xrgidocno = g_xrgf_m.xrgfdocno
            LET l_xrgi.xrgi001   = g_xrgf_m.xrgf001
            LET l_xrgi103pay = NULL LET l_xrgi113pay = NULL
            EXECUTE sel_xrgipayp USING l_xrgi.xrgi002 INTO l_xrgi103pay,l_xrgi113pay
            IF cl_null(l_xrgi103pay)THEN LET l_xrgi103pay = 0 END IF
            IF cl_null(l_xrgi113pay)THEN LET l_xrgi113pay = 0 END IF
            
            LET l_xrgi.xrgi113 = l_xrgi.xrgi103 * l_xrgi.xrgi101          
            
            LET l_xrgi.xrgi103 = l_xrgi.xrgi103 - l_xrgi103pay
            LET l_xrgi.xrgi113 = l_xrgi.xrgi113 - l_xrgi113pay
            
            LET l_xrgi.xrgiseq = NULL
            SELECT MAX(xrgiseq)+1 INTO l_xrgi.xrgiseq FROM xrgi_t
             WHERE xrgient   = g_enterprise
               AND xrgicomp  = g_xrgf_m.xrgfcomp
               AND xrgidocno = g_xrgf_m.xrgfdocno
               ANd xrgi001   = g_xrgf_m.xrgf001
            IF cl_null(l_xrgi.xrgiseq)THEN LET l_xrgi.xrgiseq = 1 END IF
            
            IF l_xrgi.xrgi103 > 0 THEN
               INSERT INTO xrgi_t(xrgient,xrgicomp,xrgidocno,xrgiseq,xrgi002,xrgi003,
                                  xrgi100,xrgi101,xrgi103,xrgi113,xrgiud001,xrgiud002,
                                  xrgiud003,xrgiud004,xrgiud005,xrgiud006,xrgiud007,
                                  xrgiud008,xrgiud009,xrgiud010,xrgiud011,xrgiud012,
                                  xrgiud013,xrgiud014,xrgiud015,xrgiud016,xrgiud017,
                                  xrgiud018,xrgiud019,xrgiud020,xrgiud021,xrgiud022,
                                  xrgiud023,xrgiud024,xrgiud025,xrgiud026,xrgiud027,
                                  xrgiud028,xrgiud029,xrgiud030,xrgi001)
                VALUES(l_xrgi.xrgient,l_xrgi.xrgicomp,l_xrgi.xrgidocno,l_xrgi.xrgiseq,l_xrgi.xrgi002,l_xrgi.xrgi003,
                       l_xrgi.xrgi100,l_xrgi.xrgi101,l_xrgi.xrgi103,l_xrgi.xrgi113,l_xrgi.xrgiud001,l_xrgi.xrgiud002,
                       l_xrgi.xrgiud003,l_xrgi.xrgiud004,l_xrgi.xrgiud005,l_xrgi.xrgiud006,l_xrgi.xrgiud007,
                       l_xrgi.xrgiud008,l_xrgi.xrgiud009,l_xrgi.xrgiud010,l_xrgi.xrgiud011,l_xrgi.xrgiud012,
                       l_xrgi.xrgiud013,l_xrgi.xrgiud014,l_xrgi.xrgiud015,l_xrgi.xrgiud016,l_xrgi.xrgiud017,
                       l_xrgi.xrgiud018,l_xrgi.xrgiud019,l_xrgi.xrgiud020,l_xrgi.xrgiud021,l_xrgi.xrgiud022,
                       l_xrgi.xrgiud023,l_xrgi.xrgiud024,l_xrgi.xrgiud025,l_xrgi.xrgiud026,l_xrgi.xrgiud027,
                       l_xrgi.xrgiud028,l_xrgi.xrgiud029,l_xrgi.xrgiud030,l_xrgi.xrgi001)
               IF SQLCA.SQLCODE THEN 
                   INITIALIZE g_errparam.* TO NULL
                   LET g_errparam.code = ''
                   LET g_errparam.extend = 'axrt530_iv_ins_xrgi:INSERT xrgi1'
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   EXIT FOREACH
               END IF
            END IF
            
         END FOREACH
                     
      WHEN g_xrgf_m.xrgf006 = '2'
         #發票
         LET l_sql = "SELECT isat004,isat007,isat100,isat101,isat105,isat115 FROM isat_t ",
                     " WHERE isatent = ",g_enterprise,
                     "   AND isat014 = '11' ",
                     "   AND EXISTS(",
                                    " SELECT 1 FROM isaf_t,isag_t,xmdl_t,xmdk_t,xrgb_t ",
                                    "  WHERE isafent = isatent AND isafcomp = isatcomp AND isafdocno = isatdocno ",
                                    "    AND isafstus = 'Y' AND isagent = isafent AND isagcomp = isafcomp AND isagdocno = isafdocno ",
                                    "    AND isag001 = '11' AND isagent = xmdlent AND isag002 = xmdldocno AND isag003 = xmdlseq ",
                                    "    AND xmdlent = xmdkent AND xmdldocno = xmdkdocno AND xmdkstus = 'S' ",
                                    "    AND xmdlent = xrgbent AND xmdl003 = xrgb001 AND xmdl004 = xrgb002 AND xrgbdocno = '",g_xrgf_m.xrgf009,"' ",
                     "   )"
          PREPARE sel_isatp1 FROM l_sql
          DECLARE sel_isatc1 CURSOR FOR  sel_isatp1
          
          FOREACH sel_isatc1 INTO l_xrgi.xrgi002,l_xrgi.xrgi003,l_xrgi.xrgi100,l_xrgi.xrgi101,l_xrgi.xrgi103,l_xrgi.xrgi113
             IF SQLCA.SQLCODE THEN EXIT FOREACH END IF
             LET l_xrgi.xrgient   = g_enterprise
             LET l_xrgi.xrgicomp  = g_xrgf_m.xrgfcomp
             LET l_xrgi.xrgidocno = g_xrgf_m.xrgfdocno
             LET l_xrgi.xrgi001   = g_xrgf_m.xrgf001
             LET l_xrgi103pay = NULL LET l_xrgi113pay = NULL
             EXECUTE sel_xrgipayp USING l_xrgi.xrgi002 INTO l_xrgi103pay,l_xrgi113pay
             IF cl_null(l_xrgi103pay)THEN LET l_xrgi103pay = 0 END IF
             IF cl_null(l_xrgi113pay)THEN LET l_xrgi113pay = 0 END IF
             
             LET l_xrgi.xrgi103 = l_xrgi.xrgi103 - l_xrgi103pay
             LET l_xrgi.xrgi113 = l_xrgi.xrgi113 - l_xrgi113pay
             
             LET l_xrgi.xrgiseq = NULL
             SELECT MAX(xrgiseq)+1 INTO l_xrgi.xrgiseq FROM xrgi_t
              WHERE xrgient   = g_enterprise
                AND xrgicomp  = g_xrgf_m.xrgfcomp
                AND xrgidocno = g_xrgf_m.xrgfdocno
                ANd xrgi001   = g_xrgf_m.xrgf001
             IF cl_null(l_xrgi.xrgiseq)THEN LET l_xrgi.xrgiseq = 1 END IF
             
             IF l_xrgi.xrgi103 > 0 THEN
                INSERT INTO xrgi_t(xrgient,xrgicomp,xrgidocno,xrgiseq,xrgi002,xrgi003,
                                  xrgi100,xrgi101,xrgi103,xrgi113,xrgiud001,xrgiud002,
                                  xrgiud003,xrgiud004,xrgiud005,xrgiud006,xrgiud007,
                                  xrgiud008,xrgiud009,xrgiud010,xrgiud011,xrgiud012,
                                  xrgiud013,xrgiud014,xrgiud015,xrgiud016,xrgiud017,
                                  xrgiud018,xrgiud019,xrgiud020,xrgiud021,xrgiud022,
                                  xrgiud023,xrgiud024,xrgiud025,xrgiud026,xrgiud027,
                                  xrgiud028,xrgiud029,xrgiud030,xrgi001)
                VALUES(l_xrgi.xrgient,l_xrgi.xrgicomp,l_xrgi.xrgidocno,l_xrgi.xrgiseq,l_xrgi.xrgi002,l_xrgi.xrgi003,
                       l_xrgi.xrgi100,l_xrgi.xrgi101,l_xrgi.xrgi103,l_xrgi.xrgi113,l_xrgi.xrgiud001,l_xrgi.xrgiud002,
                       l_xrgi.xrgiud003,l_xrgi.xrgiud004,l_xrgi.xrgiud005,l_xrgi.xrgiud006,l_xrgi.xrgiud007,
                       l_xrgi.xrgiud008,l_xrgi.xrgiud009,l_xrgi.xrgiud010,l_xrgi.xrgiud011,l_xrgi.xrgiud012,
                       l_xrgi.xrgiud013,l_xrgi.xrgiud014,l_xrgi.xrgiud015,l_xrgi.xrgiud016,l_xrgi.xrgiud017,
                       l_xrgi.xrgiud018,l_xrgi.xrgiud019,l_xrgi.xrgiud020,l_xrgi.xrgiud021,l_xrgi.xrgiud022,
                       l_xrgi.xrgiud023,l_xrgi.xrgiud024,l_xrgi.xrgiud025,l_xrgi.xrgiud026,l_xrgi.xrgiud027,
                       l_xrgi.xrgiud028,l_xrgi.xrgiud029,l_xrgi.xrgiud030,l_xrgi.xrgi001)
                IF SQLCA.SQLCODE THEN 
                   INITIALIZE g_errparam.* TO NULL
                   LET g_errparam.code = ''
                   LET g_errparam.extend = 'axrt530_iv_ins_xrgi:INSERT xrgi2'
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   EXIT FOREACH
                END IF
             END IF                           
          END FOREACH
   END CASE
   CALL axrt530_xrgi_upd_xrgf()
   RETURN r_success
END FUNCTION

 
{</section>}
 
