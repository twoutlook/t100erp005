#該程式未解開Section, 採用最新樣板產出!
{<section id="axrq130_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:6(2016-08-05 14:43:47), PR版次:0006(2016-08-05 14:45:41)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000054
#+ Filename...: axrq130_x01
#+ Description: 出貨立帳匹配查詢
#+ Creator....: 02291(2015-05-25 16:11:05)
#+ Modifier...: 01727 -SD/PR- 01727
 
{</section>}
 
{<section id="axrq130_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:7)
#add-point:填寫註解說明

#end add-point
#add-point:填寫註解說明

#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
#150902-00001#2   2015/09/08 By apo   增加訂單單號/項次/發票號碼
#150924-00012#2   2015/10/05 By Jessy 增加一欄應付帳款單號在單身的最後一欄位,XG報表輸出亦須增加列印
#151019-00009#2   2015/10/21 By Jessy 增加暫估單號顯示,XG報表輸出亦須增加列印
#151102           2015/11/02 By Jessy 增加子件特性顯示,XG報表輸出亦須增加列印
#151203-00013#1   2015/12/03 By Jessy 成本分群之後加入【價格群組pmma091】及說明,xg同步增加
#160802-00036#1   2016/08/03 By 01727 axrq140时显示暂估栏位
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #condition:where 
       a1 STRING,                  #print_tmp 
       a2 LIKE type_t.chr1,         #type 
       a3 LIKE type_t.chr1,         #argv1 
       a4 LIKE type_t.chr2          #xrcald
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"

#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_tmp_table     STRING
#end add-point
 
{</section>}
 
{<section id="axrq130_x01.main" readonly="Y" >}
PUBLIC FUNCTION axrq130_x01(p_arg1,p_arg2,p_arg3,p_arg4,p_arg5)
DEFINE  p_arg1 STRING                  #tm.wc  condition:where 
DEFINE  p_arg2 STRING                  #tm.a1  print_tmp 
DEFINE  p_arg3 LIKE type_t.chr1         #tm.a2  type 
DEFINE  p_arg4 LIKE type_t.chr1         #tm.a3  argv1 
DEFINE  p_arg5 LIKE type_t.chr2         #tm.a4  xrcald
#add-point:init段define(客製用) name="component.define_customerization"

#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"

#end add-point
 
   LET tm.wc = p_arg1
   LET tm.a1 = p_arg2
   LET tm.a2 = p_arg3
   LET tm.a3 = p_arg4
   LET tm.a4 = p_arg5
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   LET g_tmp_table = tm.a1
#   IF tm.a3 = '2' THEN #axrq140
#      LET g_template='axrq130_x02'
#   ELSE
#      LET g_template='axrq130_x01'
#   END IF
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "axrq130_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL axrq130_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL axrq130_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL axrq130_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL axrq130_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL axrq130_x01_rep_data()
 
END FUNCTION
 
{</section>}
 
{<section id="axrq130_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION axrq130_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "l_xrcasite_desc.type_t.chr500,l_xrcald_desc.type_t.chr500,l_xmdksite.type_t.chr80,l_xmdk007.type_t.chr80,l_xmdk000.type_t.chr80,xmdkdocdt.xmdk_t.xmdkdocdt,xmdk001.xmdk_t.xmdk001,xmdldocno.xmdl_t.xmdldocno,xmdlseq.xmdl_t.xmdlseq,xmdk003.xmdk_t.xmdk003,l_xmdk003_desc.type_t.chr500,xmdk004.xmdk_t.xmdk004,l_xmdk004_desc.type_t.chr500,xmdl014.xmdl_t.xmdl014,l_xmdl014_desc.type_t.chr500,xmdl008.xmdl_t.xmdl008,l_imaal003.imaal_t.imaal003,l_imaal004.imaal_t.imaal004,l_xmdl007_desc.type_t.chr500,l_imag011.imag_t.imag011,l_imag011_desc.type_t.chr500,l_pmaa091.pmaa_t.pmaa091,l_pmaa091_desc.type_t.chr500,l_glcc003.glcc_t.glcc003,l_glcc003_desc.type_t.chr500,xmdl022.xmdl_t.xmdl022,xmdl038.xmdl_t.xmdl038,l_xmdl0381.type_t.num20_6,xmdl053.xmdl_t.xmdl053,xmdl047.xmdl_t.xmdl047,l_xmdl022dif.type_t.num20_6,xmdk016.xmdk_t.xmdk016,xmdl003.xmdl_t.xmdl003,xmdl004.xmdl_t.xmdl004,xmdl049.xmdl_t.xmdl049,xmdk017.xmdk_t.xmdk017,xmdl025.xmdl_t.xmdl025,xmdl026.xmdl_t.xmdl026,xmdl024.xmdl_t.xmdl024,l_xmdl0272.type_t.num20_6,l_xmdl0292.type_t.num20_6,l_xmdl0282.type_t.num20_6,xmdl027.xmdl_t.xmdl027,xmdl029.xmdl_t.xmdl029,xmdl028.xmdl_t.xmdl028,xrcb_t_xrcb103.xrcb_t.xrcb103,xrcb_t_xrcb104.xrcb_t.xrcb104,xrcb_t_xrcb105.xrcb_t.xrcb105,l_xrcf103.xrcf_t.xrcf103,l_xrcf104.xrcf_t.xrcf104,l_xrcf105.xrcf_t.xrcf105,l_xrcb103diff.type_t.num20_6,l_xrcb104diff.type_t.num26_10,l_xrcb105diff.type_t.num20_6,l_xmdl0271.type_t.num20_6,l_xmdl0291.type_t.num20_6,l_xmdl0281.type_t.num20_6,xrcb_t_xrcb113.xrcb_t.xrcb113,xrcb_t_xrcb114.xrcb_t.xrcb114,xrcb_t_xrcb115.xrcb_t.xrcb115,l_xrcadocno.xrca_t.xrcadocno,l_xrcad2.xrca_t.xrcadocno,l_argv1.type_t.chr1" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   
   #end add-point:create_tmp.after
END FUNCTION
 
{</section>}
 
{<section id="axrq130_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION axrq130_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"

#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"

#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
 
{</section>}
 
{<section id="axrq130_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axrq130_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"

#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"

#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   
   #end add-point
   LET g_select = " SELECT NULL,NULL,NULL,NULL,NULL,xmdkdocdt,xmdk001,xmdldocno,xmdlseq,xmdk003,NULL, 
       xmdk004,NULL,xmdl014,NULL,xmdl008,NULL,NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,xmdl022,xmdl038, 
       NULL,xmdl053,xmdl047,NULL,xmdk016,xmdl003,xmdl004,xmdl049,xmdk017,xmdl025,xmdl026,xmdl024,NULL, 
       NULL,NULL,xmdl027,xmdl029,xmdl028,xrcb_t.xrcb103,xrcb_t.xrcb104,xrcb_t.xrcb105,NULL,NULL,NULL, 
       NULL,NULL,NULL,NULL,NULL,NULL,xrcb_t.xrcb113,xrcb_t.xrcb114,xrcb_t.xrcb115,'','',NULL"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   
   #end add-point
    LET g_from = " FROM xmdk_t,xmdl_t,xrcb_t"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("xmdk_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   LET g_sql = " SELECT * FROM ", g_tmp_table CLIPPED," ORDER BY xmdk007,xmdk000,xmdkdocdt,xmdk001,xmdldocno"
   #end add-point
   PREPARE axrq130_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE axrq130_x01_curs CURSOR FOR axrq130_x01_prepare
 
END FUNCTION
 
{</section>}
 
{<section id="axrq130_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION axrq130_x01_ins_data()
DEFINE sr RECORD 
   l_xrcasite_desc LIKE type_t.chr500, 
   l_xrcald_desc LIKE type_t.chr500, 
   l_xmdksite LIKE type_t.chr80, 
   l_xmdk007 LIKE type_t.chr80, 
   l_xmdk000 LIKE type_t.chr80, 
   xmdkdocdt LIKE xmdk_t.xmdkdocdt, 
   xmdk001 LIKE xmdk_t.xmdk001, 
   xmdldocno LIKE xmdl_t.xmdldocno, 
   xmdlseq LIKE xmdl_t.xmdlseq, 
   xmdk003 LIKE xmdk_t.xmdk003, 
   l_xmdk003_desc LIKE type_t.chr500, 
   xmdk004 LIKE xmdk_t.xmdk004, 
   l_xmdk004_desc LIKE type_t.chr500, 
   xmdl014 LIKE xmdl_t.xmdl014, 
   l_xmdl014_desc LIKE type_t.chr500, 
   xmdl008 LIKE xmdl_t.xmdl008, 
   l_imaal003 LIKE imaal_t.imaal003, 
   l_imaal004 LIKE imaal_t.imaal004, 
   l_xmdl007_desc LIKE type_t.chr500, 
   l_imag011 LIKE imag_t.imag011, 
   l_imag011_desc LIKE type_t.chr500, 
   l_pmaa091 LIKE pmaa_t.pmaa091, 
   l_pmaa091_desc LIKE type_t.chr500, 
   l_glcc003 LIKE glcc_t.glcc003, 
   l_glcc003_desc LIKE type_t.chr500, 
   xmdl022 LIKE xmdl_t.xmdl022, 
   xmdl038 LIKE xmdl_t.xmdl038, 
   l_xmdl0381 LIKE type_t.num20_6, 
   xmdl053 LIKE xmdl_t.xmdl053, 
   xmdl047 LIKE xmdl_t.xmdl047, 
   l_xmdl022dif LIKE type_t.num20_6, 
   xmdk016 LIKE xmdk_t.xmdk016, 
   xmdl003 LIKE xmdl_t.xmdl003, 
   xmdl004 LIKE xmdl_t.xmdl004, 
   xmdl049 LIKE xmdl_t.xmdl049, 
   xmdk017 LIKE xmdk_t.xmdk017, 
   xmdl025 LIKE xmdl_t.xmdl025, 
   xmdl026 LIKE xmdl_t.xmdl026, 
   xmdl024 LIKE xmdl_t.xmdl024, 
   l_xmdl0272 LIKE type_t.num20_6, 
   l_xmdl0292 LIKE type_t.num20_6, 
   l_xmdl0282 LIKE type_t.num20_6, 
   xmdl027 LIKE xmdl_t.xmdl027, 
   xmdl029 LIKE xmdl_t.xmdl029, 
   xmdl028 LIKE xmdl_t.xmdl028, 
   xrcb_t_xrcb103 LIKE xrcb_t.xrcb103, 
   xrcb_t_xrcb104 LIKE xrcb_t.xrcb104, 
   xrcb_t_xrcb105 LIKE xrcb_t.xrcb105, 
   l_xrcf103 LIKE xrcf_t.xrcf103, 
   l_xrcf104 LIKE xrcf_t.xrcf104, 
   l_xrcf105 LIKE xrcf_t.xrcf105, 
   l_xrcb103diff LIKE type_t.num20_6, 
   l_xrcb104diff LIKE type_t.num26_10, 
   l_xrcb105diff LIKE type_t.num20_6, 
   l_xmdl0271 LIKE type_t.num20_6, 
   l_xmdl0291 LIKE type_t.num20_6, 
   l_xmdl0281 LIKE type_t.num20_6, 
   xrcb_t_xrcb113 LIKE xrcb_t.xrcb113, 
   xrcb_t_xrcb114 LIKE xrcb_t.xrcb114, 
   xrcb_t_xrcb115 LIKE xrcb_t.xrcb115, 
   l_xrcadocno LIKE xrca_t.xrcadocno, 
   l_xrcad2 LIKE xrca_t.xrcadocno, 
   l_argv1 LIKE type_t.chr1
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"

#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"

#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH axrq130_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       IF NOT cl_null(sr.l_xmdl007_desc) THEN 
          LET sr.l_xmdl007_desc = sr.l_xmdl007_desc,":",s_desc_gzcbl004_desc('2055',sr.l_xmdl007_desc) #151102
       END IF
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.l_xrcasite_desc,sr.l_xrcald_desc,sr.l_xmdksite,sr.l_xmdk007,sr.l_xmdk000,sr.xmdkdocdt,sr.xmdk001,sr.xmdldocno,sr.xmdlseq,sr.xmdk003,sr.l_xmdk003_desc,sr.xmdk004,sr.l_xmdk004_desc,sr.xmdl014,sr.l_xmdl014_desc,sr.xmdl008,sr.l_imaal003,sr.l_imaal004,sr.l_xmdl007_desc,sr.l_imag011,sr.l_imag011_desc,sr.l_pmaa091,sr.l_pmaa091_desc,sr.l_glcc003,sr.l_glcc003_desc,sr.xmdl022,sr.xmdl038,sr.l_xmdl0381,sr.xmdl053,sr.xmdl047,sr.l_xmdl022dif,sr.xmdk016,sr.xmdl003,sr.xmdl004,sr.xmdl049,sr.xmdk017,sr.xmdl025,sr.xmdl026,sr.xmdl024,sr.l_xmdl0272,sr.l_xmdl0292,sr.l_xmdl0282,sr.xmdl027,sr.xmdl029,sr.xmdl028,sr.xrcb_t_xrcb103,sr.xrcb_t_xrcb104,sr.xrcb_t_xrcb105,sr.l_xrcf103,sr.l_xrcf104,sr.l_xrcf105,sr.l_xrcb103diff,sr.l_xrcb104diff,sr.l_xrcb105diff,sr.l_xmdl0271,sr.l_xmdl0291,sr.l_xmdl0281,sr.xrcb_t_xrcb113,sr.xrcb_t_xrcb114,sr.xrcb_t_xrcb115,sr.l_xrcadocno,sr.l_xrcad2,sr.l_argv1
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "axrq130_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    LET g_xgrid.visible_column = NULL

    IF tm.a3 = '2' THEN #axrq140
       LET g_rep_code='axrq130_x02'
       LET g_xgrid.visible_column="l_xrcald_desc|xmdl038|xmdl053|l_xrcf103|l_xrcf104|l_xrcf105|xrcb_t_xrcb113|xrcb_t_xrcb114|xrcb_t_xrcb115"  #160802-00036#1 Mark
       LET g_xgrid.visible_column="l_xrcald_desc"  #160802-00036#1 Add
    ELSE
       LET g_rep_code='axrq130_x01'
    END IF
    
    IF tm.a2 = '2' THEN #已匹配
       IF NOT cl_null(g_xgrid.visible_column)THEN       
          LET g_xgrid.visible_column =g_xgrid.visible_column CLIPPED ,"|xmdl027|xmdl029|xmdl028|l_xmdl0271|l_xmdl0291|l_xmdl0281"
       ELSE
          LET g_xgrid.visible_column = "xmdl027|xmdl029|xmdl028|l_xmdl0271|l_xmdl0291|l_xmdl0281"
       END IF
    END IF
    #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="axrq130_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION axrq130_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"

#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"

#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    
    #end add-point:rep_data.after
END FUNCTION
 
{</section>}
 
{<section id="axrq130_x01.other_function" readonly="Y" >}

 
{</section>}
 
