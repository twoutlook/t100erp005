<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="axrq932_x01" std_prog="axrq932_x01" erpver="1.0" module="AXR" ver="1" env="s" zone="t10prd" booking="N" type="X" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="X" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="component.arg.prep" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_tmp_table = tm.a1]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_tmp_table     STRING]]>
  </point>
  <point name="ins_data.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[    LET g_xgrid.visible_column = NULL

    IF tm.a3 = 'N' THEN #是否顯示壞帳
       LET g_xgrid.visible_column ="l_xrea103_debt|l_xrea113_debt"
    END IF
    
    IF tm.a4 = 'N' THEN #原幣顯是否
       IF NOT cl_null(g_xgrid.visible_column)THEN       
          LET g_xgrid.visible_column =g_xgrid.visible_column CLIPPED ,"|xrea100|xrea103"
       ELSE
          LET g_xgrid.visible_column = "xrea100|xrea103"
       END IF
    END IF]]>
  </point>
  <point name="sel_prep.sql.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_sql = " SELECT * FROM ", g_tmp_table CLIPPED]]>
  </point>
  <section id="axrq932_x01.create_tmptable" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION axrq932_x01_create_tmptable()
 
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "l_xreasite.type_t.chr80,l_year.xrea_t.xrea001,l_mon.xrea_t.xrea002,l_xrad001.type_t.chr80,l_xrad004.type_t.chr80,l_dedtype.type_t.chr80,l_cre_desc.type_t.chr80,l_group_desc.type_t.chr80,xrea001.xrea_t.xrea001,xrea002.xrea_t.xrea002,xreald.xrea_t.xreald,l_xreald_desc.type_t.chr500,xrea009.xrea_t.xrea009,l_xrea009_desc.type_t.chr500,l_xrea004.type_t.chr500,xrea005.xrea_t.xrea005,xrea006.xrea_t.xrea006,xrea007.xrea_t.xrea007,xrea008.xrea_t.xrea008,l_apcc004.type_t.dat,l_day.type_t.chr500,l_day2.type_t.chr500,xrea100.xrea_t.xrea100,xrea103.xrea_t.xrea103,xrea113.xrea_t.xrea113,l_debt.type_t.num20_6,l_xrea103_debt.type_t.num20_6,l_xrea113_debt.type_t.num20_6" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION
]]>
  </section>
  <section id="axrq932_x01.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000008
#+ 
#+ Filename...: axrq932_x01
#+ Description: 應收帳齡明細分析
#+ Creator....: 01727(2015-04-01 18:12:09)
#+ Modifier...: 02291(2015-05-21 15:49:52) -SD/PR-
]]>
  </section>
  <section id="axrq932_x01.global" ver="2" status="" src="s" readonly="">
    <![CDATA[#報表 x01 樣板自動產生(Version:1)
 
IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #condition:where 
       a1 STRING,                  #print_tmp1 
       a3 LIKE type_t.chr1,         #check 
       a4 LIKE type_t.chr1          #curr
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
 
#add-point:自定義環境變數(Global Variable)
{<point name="global.variable"/>}
#end add-point
]]>
  </section>
  <section id="axrq932_x01.ins_data" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION axrq932_x01_ins_data()
DEFINE sr RECORD 
   l_xreasite LIKE type_t.chr80, 
   l_year LIKE xrea_t.xrea001, 
   l_mon LIKE xrea_t.xrea002, 
   l_xrad001 LIKE type_t.chr80, 
   l_xrad004 LIKE type_t.chr80, 
   l_dedtype LIKE type_t.chr80, 
   l_cre_desc LIKE type_t.chr80, 
   l_group_desc LIKE type_t.chr80, 
   xrea001 LIKE xrea_t.xrea001, 
   xrea002 LIKE xrea_t.xrea002, 
   xreald LIKE xrea_t.xreald, 
   l_xreald_desc LIKE type_t.chr500, 
   xrea009 LIKE xrea_t.xrea009, 
   l_xrea009_desc LIKE type_t.chr500, 
   l_xrea004 LIKE type_t.chr500, 
   xrea005 LIKE xrea_t.xrea005, 
   xrea006 LIKE xrea_t.xrea006, 
   xrea007 LIKE xrea_t.xrea007, 
   xrea008 LIKE xrea_t.xrea008, 
   l_apcc004 LIKE type_t.dat, 
   l_day LIKE type_t.chr500, 
   l_day2 LIKE type_t.chr500, 
   xrea100 LIKE xrea_t.xrea100, 
   xrea103 LIKE xrea_t.xrea103, 
   xrea113 LIKE xrea_t.xrea113, 
   l_debt LIKE type_t.num20_6, 
   l_xrea103_debt LIKE type_t.num20_6, 
   l_xrea113_debt LIKE type_t.num20_6
 END RECORD
#add-point:ins_data段define
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH axrq932_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.l_xreasite,sr.l_year,sr.l_mon,sr.l_xrad001,sr.l_xrad004,sr.l_dedtype,sr.l_cre_desc,sr.l_group_desc,sr.xrea001,sr.xrea002,sr.xreald,sr.l_xreald_desc,sr.xrea009,sr.l_xrea009_desc,sr.l_xrea004,sr.xrea005,sr.xrea006,sr.xrea007,sr.xrea008,sr.l_apcc004,sr.l_day,sr.l_day2,sr.xrea100,sr.xrea103,sr.xrea113,sr.l_debt,sr.l_xrea103_debt,sr.l_xrea113_debt
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "axrq932_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="axrq932_x01.ins_prep" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION axrq932_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段
         {<point name="insert_prep"/>}
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
]]>
  </section>
  <section id="axrq932_x01.main" ver="2" status="" src="s" readonly="">
    <![CDATA[PUBLIC FUNCTION axrq932_x01(p_arg1,p_arg2,p_arg3,p_arg4)
DEFINE  p_arg1 STRING                  #tm.wc  condition:where 
DEFINE  p_arg2 STRING                  #tm.a1  print_tmp1 
DEFINE  p_arg3 LIKE type_t.chr1         #tm.a3  check 
DEFINE  p_arg4 LIKE type_t.chr1         #tm.a4  curr
#add-point:init段define
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.a1 = p_arg2
   LET tm.a3 = p_arg3
   LET tm.a4 = p_arg4
 
   #add-point:報表元件參數準備
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "axrq932_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL axrq932_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL axrq932_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL axrq932_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL axrq932_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL axrq932_x01_rep_data()
 
END FUNCTION
]]>
  </section>
  <section id="axrq932_x01.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="axrq932_x01.rep_data" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION axrq932_x01_rep_data()
#add-point:rep_data.define
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION
]]>
  </section>
  <section id="axrq932_x01.sel_prep" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION axrq932_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,xrea001,xrea002,xreald,NULL,xrea009, 
       NULL,NULL,xrea005,xrea006,xrea007,xrea008,NULL,NULL,NULL,xrea100,xrea103,xrea113,NULL,NULL,NULL" 

 
   #add-point:sel_prep g_from
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM xrea_t"
 
   #add-point:sel_prep g_where
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("xrea_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE axrq932_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE axrq932_x01_curs CURSOR FOR axrq932_x01_prepare
 
END FUNCTION
]]>
  </section>
</add_points>
