<add_points prog="axrt300_12" std_prog="axrt300_12" erpver="1.0" module="AXR" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.axrt300_12_query" cite_std="N" status="d" ver="1" src="s" new="Y" order="4" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_query()
   {<Local define>}
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point

   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_xrcb_d.clear()

   LET g_qryparam.state = "c"

   #wc備份
   LET ls_wc = g_wc2

   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      CONSTRUCT g_wc2 ON xrcbdocno,xrcbld,xrcbseq,xrcb029,xrcb021,xrcb005,xrcb010,xrcb011,xrcblegl,xrcb012,
          xrcb015,xrcb016,xrcb113

         FROM s_detail1[1].xrcbdocno,s_detail1[1].xrcbld,s_detail1[1].xrcbseq,s_detail1[1].xrcb029,s_detail1[1].xrcb021,
             s_detail1[1].xrcb005,s_detail1[1].xrcb010,s_detail1[1].xrcb011,s_detail1[1].xrcblegl,s_detail1[1].xrcb012,
             s_detail1[1].xrcb015,s_detail1[1].xrcb016,s_detail1[1].xrcb113



         #---------------------<  Detail: page1  >---------------------
         #----<<xrcbdocno>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrcbdocno
            #add-point:BEFORE FIELD xrcbdocno
            {<point name="query.b.page1.xrcbdocno" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD xrcbdocno

            #add-point:AFTER FIELD xrcbdocno
            {<point name="query.a.page1.xrcbdocno" />}
            #END add-point


         #Ctrlp:query.c.page1.xrcbdocno
#         ON ACTION controlp INFIELD xrcbdocno
            #add-point:ON ACTION controlp INFIELD xrcbdocno
            {<point name="query.c.page1.xrcbdocno" />}
            #END add-point

         #----<<xrcbld>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrcbld
            #add-point:BEFORE FIELD xrcbld
            {<point name="query.b.page1.xrcbld" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD xrcbld

            #add-point:AFTER FIELD xrcbld
            {<point name="query.a.page1.xrcbld" />}
            #END add-point


         #Ctrlp:query.c.page1.xrcbld
#         ON ACTION controlp INFIELD xrcbld
            #add-point:ON ACTION controlp INFIELD xrcbld
            {<point name="query.c.page1.xrcbld" />}
            #END add-point

         #----<<xrcbseq>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrcbseq
            #add-point:BEFORE FIELD xrcbseq
            {<point name="query.b.page1.xrcbseq" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD xrcbseq

            #add-point:AFTER FIELD xrcbseq
            {<point name="query.a.page1.xrcbseq" />}
            #END add-point


         #Ctrlp:query.c.page1.xrcbseq
#         ON ACTION controlp INFIELD xrcbseq
            #add-point:ON ACTION controlp INFIELD xrcbseq
            {<point name="query.c.page1.xrcbseq" />}
            #END add-point

         #----<<xrcb029>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrcb029
            #add-point:BEFORE FIELD xrcb029
            {<point name="query.b.page1.xrcb029" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD xrcb029

            #add-point:AFTER FIELD xrcb029
            {<point name="query.a.page1.xrcb029" />}
            #END add-point


         #Ctrlp:query.c.page1.xrcb029
#         ON ACTION controlp INFIELD xrcb029
            #add-point:ON ACTION controlp INFIELD xrcb029
            {<point name="query.c.page1.xrcb029" />}
            #END add-point

         #----<<xrcb021>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrcb021
            #add-point:BEFORE FIELD xrcb021
            {<point name="query.b.page1.xrcb021" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD xrcb021

            #add-point:AFTER FIELD xrcb021
            {<point name="query.a.page1.xrcb021" />}
            #END add-point


         #Ctrlp:query.c.page1.xrcb021
#         ON ACTION controlp INFIELD xrcb021
            #add-point:ON ACTION controlp INFIELD xrcb021
            {<point name="query.c.page1.xrcb021" />}
            #END add-point

         #----<<xrcb005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrcb005
            #add-point:BEFORE FIELD xrcb005
            {<point name="query.b.page1.xrcb005" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD xrcb005

            #add-point:AFTER FIELD xrcb005
            {<point name="query.a.page1.xrcb005" />}
            #END add-point


         #Ctrlp:query.c.page1.xrcb005
#         ON ACTION controlp INFIELD xrcb005
            #add-point:ON ACTION controlp INFIELD xrcb005
            {<point name="query.c.page1.xrcb005" />}
            #END add-point

         #----<<xrcb010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrcb010
            #add-point:BEFORE FIELD xrcb010
            {<point name="query.b.page1.xrcb010" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD xrcb010

            #add-point:AFTER FIELD xrcb010
            {<point name="query.a.page1.xrcb010" />}
            #END add-point


         #Ctrlp:query.c.page1.xrcb010
#         ON ACTION controlp INFIELD xrcb010
            #add-point:ON ACTION controlp INFIELD xrcb010
            {<point name="query.c.page1.xrcb010" />}
            #END add-point

         #----<<xrcb011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrcb011
            #add-point:BEFORE FIELD xrcb011
            {<point name="query.b.page1.xrcb011" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD xrcb011

            #add-point:AFTER FIELD xrcb011
            {<point name="query.a.page1.xrcb011" />}
            #END add-point


         #Ctrlp:query.c.page1.xrcb011
#         ON ACTION controlp INFIELD xrcb011
            #add-point:ON ACTION controlp INFIELD xrcb011
            {<point name="query.c.page1.xrcb011" />}
            #END add-point

         #----<<xrcblegl>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrcblegl
            #add-point:BEFORE FIELD xrcblegl
            {<point name="query.b.page1.xrcblegl" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD xrcblegl

            #add-point:AFTER FIELD xrcblegl
            {<point name="query.a.page1.xrcblegl" />}
            #END add-point


         #Ctrlp:query.c.page1.xrcblegl
#         ON ACTION controlp INFIELD xrcblegl
            #add-point:ON ACTION controlp INFIELD xrcblegl
            {<point name="query.c.page1.xrcblegl" />}
            #END add-point

         #----<<xrcb012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrcb012
            #add-point:BEFORE FIELD xrcb012
            {<point name="query.b.page1.xrcb012" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD xrcb012

            #add-point:AFTER FIELD xrcb012
            {<point name="query.a.page1.xrcb012" />}
            #END add-point


         #Ctrlp:query.c.page1.xrcb012
#         ON ACTION controlp INFIELD xrcb012
            #add-point:ON ACTION controlp INFIELD xrcb012
            {<point name="query.c.page1.xrcb012" />}
            #END add-point

         #----<<xrcb015>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrcb015
            #add-point:BEFORE FIELD xrcb015
            {<point name="query.b.page1.xrcb015" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD xrcb015

            #add-point:AFTER FIELD xrcb015
            {<point name="query.a.page1.xrcb015" />}
            #END add-point


         #Ctrlp:query.c.page1.xrcb015
#         ON ACTION controlp INFIELD xrcb015
            #add-point:ON ACTION controlp INFIELD xrcb015
            {<point name="query.c.page1.xrcb015" />}
            #END add-point

         #----<<xrcb016>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrcb016
            #add-point:BEFORE FIELD xrcb016
            {<point name="query.b.page1.xrcb016" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD xrcb016

            #add-point:AFTER FIELD xrcb016
            {<point name="query.a.page1.xrcb016" />}
            #END add-point


         #Ctrlp:query.c.page1.xrcb016
#         ON ACTION controlp INFIELD xrcb016
            #add-point:ON ACTION controlp INFIELD xrcb016
            {<point name="query.c.page1.xrcb016" />}
            #END add-point

         #----<<xrcb113>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrcb113
            #add-point:BEFORE FIELD xrcb113
            {<point name="query.b.page1.xrcb113" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD xrcb113

            #add-point:AFTER FIELD xrcb113
            {<point name="query.a.page1.xrcb113" />}
            #END add-point


         #Ctrlp:query.c.page1.xrcb113
#         ON ACTION controlp INFIELD xrcb113
            #add-point:ON ACTION controlp INFIELD xrcb113
            {<point name="query.c.page1.xrcb113" />}
            #END add-point



         #---------------------<  Detail: page2  >---------------------




         BEFORE CONSTRUCT
#saki            CALL cl_qbe_init()
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point

         ON ACTION qbe_select
#saki            CALL cl_qbe_select()

         ON ACTION qbe_save
#saki            CALL cl_qbe_save()

      END CONSTRUCT

      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point

      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG

   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point

   #LET g_wc2 = g_wc2 CLIPPED, cl_get_extra_cond("", "")

   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF

   LET g_error_show = 1
   CALL axrt300_12_b_fill(g_wc2)

   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF

   LET INT_FLAG = FALSE

END FUNCTION]]>
</point>
  <point name="function.axrt300_12_insert" cite_std="N" status="d" ver="1" src="s" new="Y" order="4" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_insert()
   {<Local define>}
   DEFINE li_ac LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point

   #輸入前動作
   LET li_ac = l_ac
   LET l_ac = 1
   LET g_before_input_done = FALSE
   CALL axrt300_12_set_entry_b("a")

   CALL axrt300_12_set_no_entry_b("a")
   LET g_before_input_done = TRUE

   #append欄位






   #add-point:insert段before insert
   {<point name="insert.before_insert"/>}
   #end add-point

   #資料輸入
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      INPUT g_xrcb_d[1].* FROM s_detail1[1].*
         ATTRIBUTE(WITHOUT DEFAULTS)

         BEFORE INPUT

      END INPUT



      BEFORE DIALOG

   END DIALOG

   #輸入後動作
   IF INT_FLAG THEN
      CALL cl_err("",9001,0)
      LET INT_FLAG = 1
      RETURN
   END IF

   CALL s_transaction_begin()

   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point


   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point

END FUNCTION]]>
</point>
  <point name="function.axrt300_12_delete" cite_std="N" status="d" ver="1" src="s" new="Y" order="4" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_delete()
   DEFINE li_ac LIKE type_t.num5
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point

   IF NOT cl_ask_delete() THEN
      LET INT_FLAG = 1 #不刪除
   ELSE
      LET INT_FLAG = 0 #要刪除
   END IF

   LET li_ac = ARR_CURR()

   CALL s_transaction_begin()

   #add-point:delete段刪除前
   {<point name="delete.b_delete" mark="Y"/>}
   #end add-point
   DELETE FROM xrcb_t
         WHERE xrcbld = g_xrcb_d[li_ac].xrcbld
           AND xrcbdocno = g_xrcb_d[li_ac].xrcbdocno

           AND xrcbseq = g_xrcb_d[li_ac].xrcbseq


   #add-point:delete段刪除中
   {<point name="delete.m_delete"/>}
   #end add-point
   IF SQLCA.sqlcode THEN
      CALL cl_err("xrcb_t",SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
   #add-point:delete段刪除後
   {<point name="delete.a_delete"/>}
   #end add-point

END FUNCTION]]>
</point>
  <point name="function.axrt300_12_delete_b" cite_std="N" status="d" ver="1" src="s" new="Y" order="10" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_delete_b(ps_table,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point

   #判斷是否是同一群組的table
   LET ls_group = "xrcb_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN

      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point

      DELETE FROM xrcb_t
       WHERE xrcbent = g_enterprise AND
         xrcbld = ps_keys_bak[1] AND xrcbdocno = ps_keys_bak[2] AND xrcbseq = ps_keys_bak[3]

      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point

      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF

      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point

      RETURN
   END IF



END FUNCTION]]>
</point>
  <point name="function.axrt300_12_insert_b" cite_std="N" status="d" ver="1" src="s" new="Y" order="10" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point

   #判斷是否是同一群組的table
   LET ls_group = "xrcb_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN

      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point
      INSERT INTO xrcb_t
                  (xrcbent,
                   xrcbld,xrcbdocno,xrcbseq
                   ,xrcb029,xrcb021,xrcb005,xrcb010,xrcb011,xrcblegl,xrcb012,xrcb015,xrcb016,xrcb113)
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_xrcb_d[l_ac].xrcb029,g_xrcb_d[l_ac].xrcb021,g_xrcb_d[l_ac].xrcb005,g_xrcb_d[l_ac].xrcb010,
                       g_xrcb_d[l_ac].xrcb011,g_xrcb_d[l_ac].xrcblegl,g_xrcb_d[l_ac].xrcb012,g_xrcb_d[l_ac].xrcb015,
                       g_xrcb_d[l_ac].xrcb016,g_xrcb_d[l_ac].xrcb113)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("xrcb_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point
   #END IF



END FUNCTION]]>
</point>
  <point name="function.axrt300_12_update_b" cite_std="N" status="d" ver="1" src="s" new="Y" order="10" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point

   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR

   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF

   #判斷是否是同一群組的table
   LET ls_group = "xrcb_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "xrcb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point
      UPDATE xrcb_t
         SET (xrcbld,xrcbdocno,xrcbseq
              ,xrcb029,xrcb021,xrcb005,xrcb010,xrcb011,xrcblegl,xrcb012,xrcb015,xrcb016,xrcb113)
              =
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_xrcb_d[l_ac].xrcb029,g_xrcb_d[l_ac].xrcb021,g_xrcb_d[l_ac].xrcb005,g_xrcb_d[l_ac].xrcb010,
                  g_xrcb_d[l_ac].xrcb011,g_xrcb_d[l_ac].xrcblegl,g_xrcb_d[l_ac].xrcb012,g_xrcb_d[l_ac].xrcb015,
                  g_xrcb_d[l_ac].xrcb016,g_xrcb_d[l_ac].xrcb113)
         WHERE xrcbld = ps_keys_bak[1] AND xrcbdocno = ps_keys_bak[2] AND xrcbseq = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("xrcb_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("xrcb_t",SQLCA.sqlcode,1)
            CALL s_transaction_end('N','0')
         OTHERWISE

      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point
      RETURN
   END IF



END FUNCTION]]>
</point>
  <point name="function.axrt300_12_link_b" cite_std="N" status="d" ver="1" src="s" new="Y" order="12" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point

   LET ls_group = ""

   IF ls_group.getIndexOf(ps_table,1) THEN

   END IF



END FUNCTION]]>
</point>
  <point name="function.axrt300_12_modify_detail_chk" cite_std="N" status="d" ver="1" src="s" new="Y" order="12" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_modify_detail_chk(ps_record)
   {<Local define>}
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   {</Local define>}
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point

   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point

   CASE ps_record
      WHEN "s_detail1"
         LET ls_return = "xrcbdocno"
      WHEN "s_detail2"
         LET ls_return = "edit1"


      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE

   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point

   RETURN ls_return

END FUNCTION]]>
</point>
  <point name="function.axrt300_12" cite_std="N" status="d" ver="" src="" new="Y" order="19">
<![CDATA[
PUBLIC FUNCTION axrt300_12(--)
   )

   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log

   #作業初始化

   #LOCK CURSOR (identifier)

   LET g_forupd_sql = ""

   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)   #轉換不同資料庫語法
   DECLARE axrt300_12_cl CURSOR FROM g_forupd_sql     # LOCK CURSOR


   #畫面開啟 (identifier)
   OPEN WINDOW w_axrt300_12 WITH FORM cl_ap_formpath("axr","axrt300_12")

   #瀏覽頁簽資料初始化
   CALL cl_ui_init()

   #程式初始化
   CALL axrt300_12_init()

   #進入選單 Menu (="N")
   CALL axrt300_12_ui_dialog()

   #畫面關閉
   CLOSE WINDOW w_axrt300_12

   CLOSE axrt300_12_cl



   #add-point:離開前
   {<point name="main.exit" />}
   #end add-point

END FUNCTION]]>
</point>
  <point name="function.axrt300_12_b_fill" cite_std="N" status="d" ver="1" src="s" new="Y" order="3" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_b_fill(p_wc2)
   LET g_sql = "SELECT UNIQUE xrcbseq,xrcb029,'',xrcb021,'',xrcb005,xrcb010,'',xrcb011,'',xrcblegl,'',",
               "               xrcb012,'',xrcb015,'',xrcb016,'',xrcb113 FROM xrcb_t",
               " WHERE xrcbent= ? AND xrcbdocno = '",g_xrcbdocno,"' AND xrcbld = '",g_xrcbld,"'"
   LET g_sql = g_sql, " ORDER BY xrcbld,xrcbdocno,xrcbseq"

   PREPARE axrt300_12_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR axrt300_12_pb

   OPEN b_fill_curs USING g_enterprise

   CALL g_xrcb_d.clear()

   LET g_cnt = l_ac
   LET l_ac = 1
   ERROR "Searching!"

   FOREACH b_fill_curs INTO g_xrcb_d[l_ac].xrcbseq,  g_xrcb_d[l_ac].xrcb029,  g_xrcb_d[l_ac].xrcb029_t,g_xrcb_d[l_ac].xrcb021,
                            g_xrcb_d[l_ac].xrcb021_t,g_xrcb_d[l_ac].xrcb005,  g_xrcb_d[l_ac].xrcb010,  g_xrcb_d[l_ac].xrcb010_t,
                            g_xrcb_d[l_ac].xrcb011,  g_xrcb_d[l_ac].xrcb011_t,g_xrcb_d[l_ac].xrcblegl, g_xrcb_d[l_ac].xrcblegl_t,
                            g_xrcb_d[l_ac].xrcb012,  g_xrcb_d[l_ac].xrcb012_t,g_xrcb_d[l_ac].xrcb015,  g_xrcb_d[l_ac].xrcb015_t,
                            g_xrcb_d[l_ac].xrcb016,  g_xrcb_d[l_ac].xrcb016_t,g_xrcb_d[l_ac].xrcb113

      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      CALL axrt300_12_detail_show()

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF

   END FOREACH

   IF l_ac > g_max_rec AND g_error_show = 1 THEN
      CALL cl_err("xrcb_t",9035,1)
   END IF
   LET g_error_show = 0

   CALL g_xrcb_d.deleteElement(g_xrcb_d.getLength())

   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0

   CLOSE b_fill_curs
   FREE axrt300_12_pb



   LET g_sql = "SELECT UNIQUE xrceseq,xrce016,'',xrce018,'',xre019,'',xrcelegl,'',",
               "               xrce020,'',xrce022,'',xrce023,'',xrce119 FROM xrcb_t",
               " WHERE xrceent= ? AND xrcedocno = '",g_xrcbdocno,"' AND xrceld = '",g_xrcbld,"'"
   LET g_sql = g_sql, " ORDER BY xrceld,xrcedocno,xrceseq"

   PREPARE axrt300_12_pb2 FROM g_sql
   DECLARE b_fill_curs2 CURSOR FOR axrt300_12_pb2

   OPEN b_fill_curs2 USING g_enterprise

   CALL g_xrce_d.clear()

   LET g_cnt = l_ac
   LET l_ac = 1
   ERROR "Searching!"

   FOREACH b_fill_curs INTO g_xrce_d[l_ac].xrceseq,   g_xrce_d[l_ac].xrce016,g_xrce_d[l_ac].xrce016_t,g_xrce_d[l_ac].xrce018,
                            g_xrce_d[l_ac].xrce018_t, g_xrce_d[l_ac].xrce019,g_xrce_d[l_ac].xrce019_t,g_xrce_d[l_ac].xrcelegl,
                            g_xrce_d[l_ac].xrcelegl_t,g_xrce_d[l_ac].xrce020,g_xrce_d[l_ac].xrce020_t,g_xrce_d[l_ac].xrce022,
                            g_xrce_d[l_ac].xrce022_t, g_xrce_d[l_ac].xrce023,g_xrce_d[l_ac].xrce023_t,g_xrce_d[l_ac].xrce119

      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      CALL axrt300_12_detail_show()

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF

   END FOREACH

   IF l_ac > g_max_rec AND g_error_show = 1 THEN
      CALL cl_err("xrce_t",9035,1)
   END IF
   LET g_error_show = 0

   CALL g_xrce_d.deleteElement(g_xrce_d.getLength())

   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0

   CLOSE b_fill_curs2
   FREE axrt300_12_pb2

END FUNCTION]]>
</point>
  <point name="function.axrt300_12_b_fill" cite_std="N" status="d" ver="1" src="s" new="Y" order="3" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_b_fill(p_wc2)
   LET g_sql = "SELECT UNIQUE xrcbseq,xrcb029,'',xrcb021,'',xrcb005,xrcb010,'',xrcb011,'',xrcblegl,'',",
               "               xrcb012,'',xrcb015,'',xrcb016,'',xrcb113 FROM xrcb_t",
               " WHERE xrcbent= ? AND xrcbdocno = '",g_xrcbdocno,"' AND xrcbld = '",g_xrcbld,"'"
   LET g_sql = g_sql, " ORDER BY xrcbld,xrcbdocno,xrcbseq"

   PREPARE axrt300_12_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR axrt300_12_pb

   OPEN b_fill_curs USING g_enterprise

   CALL g_xrcb_d.clear()

   LET g_cnt = l_ac
   LET l_ac = 1
   ERROR "Searching!"

   FOREACH b_fill_curs INTO g_xrcb_d[l_ac].xrcbseq,  g_xrcb_d[l_ac].xrcb029,  g_xrcb_d[l_ac].xrcb029_t,g_xrcb_d[l_ac].xrcb021,
                            g_xrcb_d[l_ac].xrcb021_t,g_xrcb_d[l_ac].xrcb005,  g_xrcb_d[l_ac].xrcb010,  g_xrcb_d[l_ac].xrcb010_t,
                            g_xrcb_d[l_ac].xrcb011,  g_xrcb_d[l_ac].xrcb011_t,g_xrcb_d[l_ac].xrcblegl, g_xrcb_d[l_ac].xrcblegl_t,
                            g_xrcb_d[l_ac].xrcb012,  g_xrcb_d[l_ac].xrcb012_t,g_xrcb_d[l_ac].xrcb015,  g_xrcb_d[l_ac].xrcb015_t,
                            g_xrcb_d[l_ac].xrcb016,  g_xrcb_d[l_ac].xrcb016_t,g_xrcb_d[l_ac].xrcb113

      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      CALL axrt300_12_detail_show()

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF

   END FOREACH

   IF l_ac > g_max_rec AND g_error_show = 1 THEN
      CALL cl_err("xrcb_t",9035,1)
   END IF
   LET g_error_show = 0

   CALL g_xrcb_d.deleteElement(g_xrcb_d.getLength())

   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0

   CLOSE b_fill_curs
   FREE axrt300_12_pb



   LET g_sql = "SELECT UNIQUE xrceseq,xrce016,'',xrce018,'',xre019,'',xrcelegl,'',",
               "               xrce020,'',xrce022,'',xrce023,'',xrce119 FROM xrcb_t",
               " WHERE xrceent= ? AND xrcedocno = '",g_xrcbdocno,"' AND xrceld = '",g_xrcbld,"'"
   LET g_sql = g_sql, " ORDER BY xrceld,xrcedocno,xrceseq"

   PREPARE axrt300_12_pb2 FROM g_sql
   DECLARE b_fill_curs2 CURSOR FOR axrt300_12_pb2

   OPEN b_fill_curs2 USING g_enterprise

   CALL g_xrce_d.clear()

   LET g_cnt = l_ac
   LET l_ac = 1
   ERROR "Searching!"

   FOREACH b_fill_curs INTO g_xrce_d[l_ac].xrceseq,   g_xrce_d[l_ac].xrce016,g_xrce_d[l_ac].xrce016_t,g_xrce_d[l_ac].xrce018,
                            g_xrce_d[l_ac].xrce018_t, g_xrce_d[l_ac].xrce019,g_xrce_d[l_ac].xrce019_t,g_xrce_d[l_ac].xrcelegl,
                            g_xrce_d[l_ac].xrcelegl_t,g_xrce_d[l_ac].xrce020,g_xrce_d[l_ac].xrce020_t,g_xrce_d[l_ac].xrce022,
                            g_xrce_d[l_ac].xrce022_t, g_xrce_d[l_ac].xrce023,g_xrce_d[l_ac].xrce023_t,g_xrce_d[l_ac].xrce119

      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      CALL axrt300_12_detail_show()

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF

   END FOREACH

   IF l_ac > g_max_rec AND g_error_show = 1 THEN
      CALL cl_err("xrce_t",9035,1)
   END IF
   LET g_error_show = 0

   CALL g_xrce_d.deleteElement(g_xrce_d.getLength())

   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0

   CLOSE b_fill_curs2
   FREE axrt300_12_pb2

END FUNCTION]]>
</point>
  <point name="function.axrt300_12" cite_std="N" status="d" ver="" src="" new="Y" order="1">
<![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION axrt300_12()
   DEFINE p_ld      LIKE xrcb_t.xrcbld
   DEFINE p_docno   LIKE xrcb_t.xrcbdocno
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log

   #作業初始化

   LET g_xrcbld = p_ld
   LET g_xrcbdocno = p_docno

   SELECT * INTO g_glaa_t.* FROM glaa_t WHERE glaaent = g_enterprise
      AND glaald = p_ld

   #LOCK CURSOR (identifier)

   LET g_forupd_sql = ""

   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)   #轉換不同資料庫語法
   DECLARE axrt300_12_cl CURSOR FROM g_forupd_sql     # LOCK CURSOR


   #畫面開啟 (identifier)
   OPEN WINDOW w_axrt300_12 WITH FORM cl_ap_formpath("axr","axrt300_12")

   #瀏覽頁簽資料初始化
   CALL cl_ui_init()

   #程式初始化
   CALL axrt300_12_init()

   #進入選單 Menu (="N")
   CALL axrt300_12_ui_dialog()

   #畫面關閉
   CLOSE WINDOW w_axrt300_12

   CLOSE axrt300_12_cl
   
   LET g_action_choice = ''
   
END FUNCTION]]>
</point>
  <point name="input.a.page1.xrzzdocno" cite_std="N" status="" ver="1" src="s" new="N" order="0" cite_ver="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xrzz_d[g_detail_idx].xrzzdocno) AND NOT cl_null(g_xrzz_d[g_detail_idx].xrzzseq) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_xrzz_d[g_detail_idx].xrzzdocno != g_xrzz_d_t.xrzzdocno OR g_xrzz_d[g_detail_idx].xrzzseq != g_xrzz_d_t.xrzzseq))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrzz_t WHERE "||"xrzzent = '" ||g_enterprise|| "' AND "||"xrzzdocno = '"||g_xrzz_d[g_detail_idx].xrzzdocno ||"' AND "|| "xrzzseq = '"||g_xrzz_d[g_detail_idx].xrzzseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.xrzzseq" cite_std="N" status="" ver="1" src="s" new="N" order="0" cite_ver="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_xrzz_d[g_detail_idx].xrzzdocno) AND NOT cl_null(g_xrzz_d[g_detail_idx].xrzzseq) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_xrzz_d[g_detail_idx].xrzzdocno != g_xrzz_d_t.xrzzdocno OR g_xrzz_d[g_detail_idx].xrzzseq != g_xrzz_d_t.xrzzseq))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrzz_t WHERE "||"xrzzent = '" ||g_enterprise|| "' AND "||"xrzzdocno = '"||g_xrzz_d[g_detail_idx].xrzzdocno ||"' AND "|| "xrzzseq = '"||g_xrzz_d[g_detail_idx].xrzzseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.c.page1.xrzz001" cite_std="N" status="" ver="1" src="s" new="N" order="0" cite_ver="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xrzz_d[l_ac].xrzz001             #給予default值

            #給予arg

            CALL q_glac001()                                #呼叫開窗

            LET g_xrzz_d[l_ac].xrzz001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xrzz_d[l_ac].xrzz001 TO xrzz001              #顯示到畫面上

            NEXT FIELD xrzz001                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.xrzz002" cite_std="N" status="" ver="1" src="s" new="N" order="0" cite_ver="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xrzz_d[l_ac].xrzz002             #給予default值

            #給予arg

            CALL q_imca001()                                #呼叫開窗

            LET g_xrzz_d[l_ac].xrzz002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xrzz_d[l_ac].xrzz002 TO xrzz002              #顯示到畫面上

            NEXT FIELD xrzz002                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.xrzz003" cite_std="N" status="" ver="1" src="s" new="N" order="0" cite_ver="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xrzz_d[l_ac].xrzz003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            CALL q_ooeg001()                                #呼叫開窗

            LET g_xrzz_d[l_ac].xrzz003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xrzz_d[l_ac].xrzz003 TO xrzz003              #顯示到畫面上

            NEXT FIELD xrzz003                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.xrzz004" cite_std="N" status="" ver="1" src="s" new="N" order="0" cite_ver="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xrzz_d[l_ac].xrzz004             #給予default值

            #給予arg

            CALL q_ooef001()                                #呼叫開窗

            LET g_xrzz_d[l_ac].xrzz004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xrzz_d[l_ac].xrzz004 TO xrzz004              #顯示到畫面上

            NEXT FIELD xrzz004                          #返回原欄位

]]>
</point>
  <point name="function.axrt300_12_init" cite_std="N" status="u" ver="1" src="s" new="Y" order="2" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_init()
   LET g_error_show = 1

   CALL axrt300_12_default_search()

END FUNCTION]]>
</point>
  <point name="function.axrt300_12_ui_dialog" cite_std="N" status="u" ver="1" src="s" new="Y" order="4" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5

   LET g_action_choice = " "
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()

   CALL cl_set_act_visible("accept,cancel", FALSE)

   LET g_detail_idx = 1

   WHILE TRUE

      CALL axrt300_12_b_fill()

      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_xrcb_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)

            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac

               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont()

            #自訂ACTION(detail_show,page_1)


         END DISPLAY

          DISPLAY ARRAY g_xrce_d TO s_detail2.*
             ATTRIBUTES(COUNT=g_detail_cnt)
	    
             BEFORE DISPLAY
                CALL FGL_SET_ARR_CURR(g_detail_idx)
	    
             BEFORE ROW
                LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
                LET l_ac = g_detail_idx
                LET g_temp_idx = l_ac
                DISPLAY g_detail_idx TO FORMONLY.idx
                CALL cl_show_fld_cont()
	    
             #自訂ACTION(detail_show,page_2)
	    
	    
          END DISPLAY

         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL DIALOG.setSelectionMode("s_detail1", 1)

            NEXT FIELD CURRENT

         ON ACTION output

            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN

               EXIT DIALOG
            END IF

         ON ACTION modify

            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               CALL axrt300_12_modify()

               EXIT DIALOG
            END IF

         ON ACTION modify_detail

            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               CALL axrt300_12_modify()
               
               EXIT DIALOG
            END IF

         ON ACTION close
            LET INT_FLAG=FALSE
            LET g_action_choice="exit"
            EXIT DIALOG

         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG

         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG

      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF

   END WHILE

   CALL cl_set_act_visible("accept,cancel", TRUE)

END FUNCTION]]>
</point>
  <point name="function.axrt300_12_modify" cite_std="N" status="u" ver="1" src="s" new="Y" order="5" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   DEFINE  l_docdt                LIKE xrca_t.xrcadocdt

   LET g_action_choice = ""

   LET g_qryparam.state = "i"

   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")

   LET g_forupd_sql = "SELECT xrcbseq,xrcb029,'',xrcb021,'',xrcb005,xrcb010,'',xrcb011,'',xrcblegl,'',xrcb012,'',xrcb015,'',xrcb016,'',xrcb113",
                      "  FROM xrcb_t WHERE xrcbent=? AND xrcbld=? AND xrcbdocno=? AND xrcbseq=? FOR UPDATE"

   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE axrt300_12_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR

   LET g_forupd_sql = "SELECT xrceseq,xrce016,'',xrce018,'',xrce019,'',xrcelegl,'',xrce020,'',xrce022,'',xrce023,'',xrce119",
                      "  FROM xrce_t WHERE xrceent=? AND xrceld=? AND xrcedocno=? AND xrceseq=? FOR UPDATE"

   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE axrt300_12_bcl2 CURSOR FROM g_forupd_sql      # LOCK CURSOR

   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE

   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #Page1
      INPUT ARRAY g_xrcb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                  INSERT ROW = FALSE,
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)

         #自訂ACTION(detail_input,page_1)


         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN
              CALL FGL_SET_ARR_CURR(g_xrcb_d.getLength()+1)
              LET g_insert = 'N'
           END IF

            CALL axrt300_12_b_fill()
            LET g_detail_cnt = g_xrcb_d.getLength()

         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_xrcb_d.getLength() TO FORMONLY.cnt

            CALL s_transaction_begin()
            LET g_detail_cnt = g_xrcb_d.getLength()

            IF g_detail_cnt >= l_ac AND g_xrcb_d[l_ac].xrcbseq IS NOT NULL THEN
               LET l_cmd='u'
               LET g_xrcb_d_t.* = g_xrcb_d[l_ac].*  #BACKUP
               IF NOT axrt300_12_lock_b("xrcb_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axrt300_12_bcl INTO g_xrcb_d[l_ac].xrcbseq,  g_xrcb_d[l_ac].xrcb029,  g_xrcb_d[l_ac].xrcb029_t,g_xrcb_d[l_ac].xrcb021,
                                            g_xrcb_d[l_ac].xrcb021_t,g_xrcb_d[l_ac].xrcb005,  g_xrcb_d[l_ac].xrcb010,  g_xrcb_d[l_ac].xrcb010_t,
                                            g_xrcb_d[l_ac].xrcb011,  g_xrcb_d[l_ac].xrcb011_t,g_xrcb_d[l_ac].xrcblegl, g_xrcb_d[l_ac].xrcblegl_t,
                                            g_xrcb_d[l_ac].xrcb012,  g_xrcb_d[l_ac].xrcb012_t,g_xrcb_d[l_ac].xrcb015,  g_xrcb_d[l_ac].xrcb015_t,
                                            g_xrcb_d[l_ac].xrcb016,  g_xrcb_d[l_ac].xrcb016_t,g_xrcb_d[l_ac].xrcb113
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_xrcb_d_t.xrcbseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF

                  CALL axrt300_12_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF

         BEFORE INSERT

         AFTER INSERT

         BEFORE DELETE                            #是否取消單身

         AFTER DELETE

         #----<<xrcb029>>----
         BEFORE FIELD xrcb029_t

         AFTER FIELD xrcb029_t
            IF NOT cl_null(g_xrcb_d[l_ac].xrcb029_t) THEN
               IF g_xrcb_d[l_ac].xrcb029_t != g_xrcb_d_t.xrcb029_t OR g_xrcb_d_t.xrcb029_t IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_glaa_t.glaa004
                  LET g_chkparam.arg2 = g_xrcb_d[l_ac].xrcb029_t
                  IF NOT cl_chk_exist("v_glac002_4") THEN
                     LET g_xrcb_d[l_ac].xrcb029 = g_xrcb_d_t.xrcb029
                     CALL axrt300_12_ref('xrcb029_t')
                     NEXT FIELD CURRENT
                  END IF
                  LET g_xrcb_d[l_ac].xrcb029 = g_xrcb_d[l_ac].xrcb029_t
                  LET g_xrcb_d_t.xrcb029_t = g_xrcb_d[l_ac].xrcb029_t
               END IF
            END IF
            CALL axrt300_12_ref('xrcb029_t')

         #----<<xrcb021>>----
         BEFORE FIELD xrcb021_t

         AFTER FIELD xrcb021_t
            IF NOT cl_null(g_xrcb_d[l_ac].xrcb021_t) THEN
               IF g_xrcb_d[l_ac].xrcb021_t != g_xrcb_d_t.xrcb021_t OR g_xrcb_d_t.xrcb021_t IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_glaa_t.glaa004
                  LET g_chkparam.arg2 = g_xrcb_d[l_ac].xrcb021_t
                  IF NOT cl_chk_exist("v_glac002_4") THEN
                     LET g_xrcb_d[l_ac].xrcb021 = g_xrcb_d_t.xrcb021
                     CALL axrt300_12_ref('xrcb021_t')
                     NEXT FIELD CURRENT
                  END IF
                  LET g_xrcb_d[l_ac].xrcb021 = g_xrcb_d[l_ac].xrcb021_t
                  LET g_xrcb_d_t.xrcb021_t = g_xrcb_d[l_ac].xrcb021_t
               END IF
            END IF
            CALL axrt300_12_ref('xrcb021_t')

         #----<<xrcb010>>----
         BEFORE FIELD xrcb010_t

         AFTER FIELD xrcb010_t
            IF NOT cl_null(g_xrcb_d[l_ac].xrcb010_t) THEN
               IF g_xrcb_d[l_ac].xrcb010_t != g_xrcb_d_t.xrcb010_t OR g_xrcb_d_t.xrcb010_t IS NULL THEN
                  SELECT xrcadocdt INTO l_docdt FROM xrca_t WHERE xrcaent = g_enterprise
                     AND xrcadocno = g_xrcbdocno AND xrcald = g_xrcbld
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xrcb_d[l_ac].xrcb010_t
                  LET g_chkparam.arg2 = l_docdt
                  IF NOT cl_chk_exist("v_ooeg001") THEN
                     LET g_xrcb_d[l_ac].xrcb010 = g_xrcb_d_t.xrcb010
                     CALL axrt300_12_ref('xrcb010_t')
                     NEXT FIELD CURRENT
                  END IF
                  LET g_xrcb_d[l_ac].xrcb010 = g_xrcb_d[l_ac].xrcb010_t
                  LET g_xrcb_d_t.xrcb010_t = g_xrcb_d[l_ac].xrcb010_t
               END IF
            END IF
            CALL axrt300_12_ref('xrcb010_t')

         #----<<xrcb011>>----
         BEFORE FIELD xrcb011_t

         AFTER FIELD xrcb011_t
            IF NOT cl_null(g_xrcb_d[l_ac].xrcb011_t) THEN
               IF g_xrcb_d[l_ac].xrcb011_t != g_xrcb_d_t.xrcb011_t OR g_xrcb_d_t.xrcb011_t IS NULL THEN
                  SELECT xrcadocdt INTO l_docdt FROM xrca_t WHERE xrcaent = g_enterprise
                     AND xrcadocno = g_xrcbdocno AND xrcald = g_xrcbld
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xrcb_d[l_ac].xrcb011_t
                  LET g_chkparam.arg2 = l_docdt
                  IF NOT cl_chk_exist("v_ooeg001_4") THEN
                     LET g_xrcb_d[l_ac].xrcb011 = g_xrcb_d_t.xrcb011
                     CALL axrt300_12_ref('xrcb011_t')
                     NEXT FIELD CURRENT
                  END IF
                  LET g_xrcb_d[l_ac].xrcb011 = g_xrcb_d[l_ac].xrcb011_t
                  LET g_xrcb_d_t.xrcb011_t = g_xrcb_d[l_ac].xrcb011_t
               END IF
            END IF
            CALL axrt300_12_ref('xrcb011_t')

         #----<<xrcblegl>>----
         BEFORE FIELD xrcblegl_t

         AFTER FIELD xrcblegl_t
            IF NOT cl_null(g_xrcb_d[l_ac].xrcblegl_t) THEN
               IF g_xrcb_d[l_ac].xrcblegl_t != g_xrcb_d_t.xrcblegl_t OR g_xrcb_d_t.xrcblegl_t IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xrcb_d[l_ac].xrcblegl_t
                  LET g_chkparam.arg2 = ' '
                  IF NOT cl_chk_exist("v_ooef001_14") THEN
                     LET g_xrcb_d[l_ac].xrcblegl = g_xrcb_d_t.xrcblegl
                     CALL axrt300_12_ref('xrcblegl_t')
                     NEXT FIELD CURRENT
                  END IF
                  LET g_xrcb_d[l_ac].xrcblegl = g_xrcb_d[l_ac].xrcblegl_t
                  LET g_xrcb_d_t.xrcblegl_t = g_xrcb_d[l_ac].xrcblegl_t
               END IF
            END IF
            CALL axrt300_12_ref('xrcblegl_t')

         #----<<xrcb012>>----
         BEFORE FIELD xrcb012_t

         AFTER FIELD xrcb012_t
            IF NOT cl_null(g_xrcb_d[l_ac].xrcb012_t) THEN
               IF g_xrcb_d[l_ac].xrcb012_t != g_xrcb_d_t.xrcb012_t OR g_xrcb_d_t.xrcb012_t IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xrcb_d[l_ac].xrcb012_t
                  LET g_chkparam.arg2 = ' '
                  IF NOT cl_chk_exist("v_rtax001") THEN
                     LET g_xrcb_d[l_ac].xrcb012 = g_xrcb_d_t.xrcb012
                     CALL axrt300_12_ref('xrcb012_t')
                     NEXT FIELD CURRENT
                  END IF
                  LET g_xrcb_d[l_ac].xrcb012 = g_xrcb_d[l_ac].xrcb012_t
                  LET g_xrcb_d_t.xrcb012_t = g_xrcb_d[l_ac].xrcb012_t
               END IF
            END IF
            CALL axrt300_12_ref('xrcb012_t')

         #----<<xrcb015>>----
         BEFORE FIELD xrcb015_t

         AFTER FIELD xrcb015_t
            LET g_xrcb_d[l_ac].xrcb015 = g_xrcb_d[l_ac].xrcb015_t
            CALL axrt300_12_ref('xrcb015_t')

         #----<<xrcb016>>----
         BEFORE FIELD xrcb016_t

         AFTER FIELD xrcb016_t
            LET g_xrcb_d[l_ac].xrcb016 = g_xrcb_d[l_ac].xrcb016_t
            CALL axrt300_12_ref('xrcb016_t')

         #----<<xrcb113>>----
         BEFORE FIELD xrcb113

         AFTER FIELD xrcb113

         #---------------------<  Detail: page1  >---------------------
         #----<<xrcb029>>----
         #Ctrlp:input.c.page1.xrcb029
          ON ACTION controlp INFIELD xrcb029_t
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xrcb_d[l_ac].xrcb029       #給予default值

            CALL aglt310_04()                                      #呼叫開窗

            LET g_xrcb_d[l_ac].xrcb029 = g_qryparam.return1        #將開窗取得的值回傳到變數
            CALL axrt300_12_ref('xrcb029_t')
            
            LET g_xrcb_d_t.xrcb029_t = g_xrcb_d[l_ac].xrcb029_t

            NEXT FIELD xrcb029_t                                   #返回原欄位
            
         #----<<xrcb021>>----
         #Ctrlp:input.c.page1.xrcb021
          ON ACTION controlp INFIELD xrcb021_t
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xrcb_d[l_ac].xrcb021       #給予default值

            CALL aglt310_04()                                      #呼叫開窗

            LET g_xrcb_d[l_ac].xrcb021 = g_qryparam.return1        #將開窗取得的值回傳到變數
            CALL axrt300_12_ref('xrcb021_t')

            LET g_xrcb_d_t.xrcb021_t = g_xrcb_d[l_ac].xrcb021_t

            NEXT FIELD xrcb021_t                                   #返回原欄位
            
         #----<<xrcb010>>----
         #Ctrlp:input.c.page1.xrcb010
          ON ACTION controlp INFIELD xrcb010_t
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xrcb_d[l_ac].xrcb010       #給予default值

            SELECT xrcadocdt INTO l_docdt FROM xrca_t WHERE xrcaent = g_enterprise
               AND xrcadocno = g_xrcbdocno AND xrcald = g_xrcbld

            LET g_qryparam.arg1 = l_docdt                          #給予default值

            CALL q_ooeg001()                                       #呼叫開窗

            LET g_xrcb_d[l_ac].xrcb010 = g_qryparam.return1        #將開窗取得的值回傳到變數
            CALL axrt300_12_ref('xrcb010_t')

            LET g_xrcb_d_t.xrcb010_t = g_xrcb_d[l_ac].xrcb010_t

            NEXT FIELD xrcb010_t                                   #返回原欄位
            
         #----<<xrcb011>>----
         #Ctrlp:input.c.page1.xrcb011
         ON ACTION controlp INFIELD xrcb011_t
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xrcb_d[l_ac].xrcb011       #給予default值

            SELECT xrcadocdt INTO l_docdt FROM xrca_t WHERE xrcaent = g_enterprise
               AND xrcadocno = g_xrcbdocno AND xrcald = g_xrcbld

            LET g_qryparam.arg1 = l_docdt                          #給予default值

            CALL q_ooeg001_5()                                     #呼叫開窗

            LET g_xrcb_d[l_ac].xrcb011 = g_qryparam.return1        #將開窗取得的值回傳到變數
            CALL axrt300_12_ref('xrcb011_t')

            LET g_xrcb_d_t.xrcb011_t = g_xrcb_d[l_ac].xrcb011_t

            NEXT FIELD xrcb011_t                                   #返回原欄位
            
         #----<<xrcblegl>>----
         #Ctrlp:input.c.page1.xrcblegl
          ON ACTION controlp INFIELD xrcblegl_t
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xrcb_d[l_ac].xrcblegl     #給予default值

            CALL q_ooef001()                                      #呼叫開窗

            LET g_xrcb_d[l_ac].xrcblegl = g_qryparam.return1      #將開窗取得的值回傳到變數
            CALL axrt300_12_ref('xrcblegl_t')

            LET g_xrcb_d_t.xrcblegl_t = g_xrcb_d[l_ac].xrcblegl_t

            NEXT FIELD xrcblegl_t                                 #返回原欄位

         #----<<xrcb012>>----
         #Ctrlp:input.c.page1.xrcb012
          ON ACTION controlp INFIELD xrcb012_t
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xrcb_d[l_ac].xrcb012       #給予default值

            CALL q_rtax001()                                       #呼叫開窗

            LET g_xrcb_d[l_ac].xrcb012 = g_qryparam.return1        #將開窗取得的值回傳到變數
            CALL axrt300_12_ref('xrcb012_t')

            LET g_xrcb_d_t.xrcb012_t = g_xrcb_d[l_ac].xrcb012_t

            NEXT FIELD xrcb012_t                                   #返回原欄位

         #----<<xrcb015>>----
         #Ctrlp:input.c.page1.xrcb015
          ON ACTION controlp INFIELD xrcb015_t


         #----<<xrcb016>>----
         #Ctrlp:input.c.page1.xrcb016
          ON ACTION controlp INFIELD xrcb016_t

         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xrcb_d[l_ac].* = g_xrcb_d_t.*
               CLOSE axrt300_12_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_xrcb_d[l_ac].xrcbseq,-263,1)
               LET g_xrcb_d[l_ac].* = g_xrcb_d_t.*
            ELSE

               #寫入修改者/修改日期資訊(單身)

               UPDATE xrcb_t SET (xrcb029,xrcb021,xrcb010,xrcb011,xrcblegl,xrcb012,xrcb015,xrcb016)
                               = (g_xrcb_d[l_ac].xrcb029, g_xrcb_d[l_ac].xrcb021,g_xrcb_d[l_ac].xrcb010,g_xrcb_d[l_ac].xrcb011,
                                  g_xrcb_d[l_ac].xrcblegl,g_xrcb_d[l_ac].xrcb012,g_xrcb_d[l_ac].xrcb015,g_xrcb_d[l_ac].xrcb016)
                WHERE xrcbent = g_enterprise AND xrcbld = g_xrcbld #項次
                  AND xrcbdocno = g_xrcbdocno
                  AND xrcbseq = g_xrcb_d_t.xrcbseq

               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xrcb_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode         #其他錯誤
                     CALL cl_err("xrcb_t",SQLCA.sqlcode,1)
                     CALL s_transaction_end('N','0')
               END CASE
            END IF

         AFTER ROW
            CALL axrt300_12_unlock_b("xrcb_t")
            CALL s_transaction_end('Y','0')

         AFTER INPUT

         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_xrcb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xrcb_d.getLength()+1

      END INPUT

      #Page2
      INPUT ARRAY g_xrce_d FROM s_detail2.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                  INSERT ROW = FALSE,
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)

         #自訂ACTION(detail_input,page_1)

         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN
              CALL FGL_SET_ARR_CURR(g_xrce_d.getLength()+1)
              LET g_insert = 'N'
           END IF

            CALL axrt300_12_b_fill()
            LET g_detail_cnt = g_xrce_d.getLength()

         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_xrce_d.getLength() TO FORMONLY.cnt

            CALL s_transaction_begin()
            LET g_detail_cnt = g_xrce_d.getLength()

            IF g_detail_cnt >= l_ac AND g_xrce_d[l_ac].xrceseq IS NOT NULL THEN
               LET l_cmd='u'
               LET g_xrce_d_t.* = g_xrce_d[l_ac].*  #BACKUP
               IF NOT axrt300_12_lock_b("xrce_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axrt300_12_bcl2 INTO g_xrce_d[l_ac].xrceseq,   g_xrce_d[l_ac].xrce016,g_xrce_d[l_ac].xrce016_t,g_xrce_d[l_ac].xrce018,
                                             g_xrce_d[l_ac].xrce018_t, g_xrce_d[l_ac].xrce019,g_xrce_d[l_ac].xrce019_t,g_xrce_d[l_ac].xrcelegl,
                                             g_xrce_d[l_ac].xrcelegl_t,g_xrce_d[l_ac].xrce020,g_xrce_d[l_ac].xrce020_t,g_xrce_d[l_ac].xrce022,
                                             g_xrce_d[l_ac].xrce022_t, g_xrce_d[l_ac].xrce023,g_xrce_d[l_ac].xrce023_t,g_xrce_d[l_ac].xrce119
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_xrce_d_t.xrceseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF

                  CALL axrt300_12_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF

         BEFORE INSERT

         AFTER INSERT

         BEFORE DELETE                            #是否取消單身

         AFTER DELETE

         #----<<xrce016>>----
         BEFORE FIELD xrce016_t

         AFTER FIELD xrce016_t
            IF NOT cl_null(g_xrce_d[l_ac].xrce016_t) THEN
               IF g_xrce_d[l_ac].xrce016_t != g_xrce_d_t.xrce016_t OR g_xrce_d_t.xrce016_t IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_glaa_t.glaa004
                  LET g_chkparam.arg2 = g_xrce_d[l_ac].xrce016_t
                  IF NOT cl_chk_exist("v_glac002_4") THEN
                     LET g_xrce_d[l_ac].xrce016 = g_xrce_d_t.xrce016
                     CALL axrt300_12_ref('xrce016_t')
                     NEXT FIELD CURRENT
                  END IF
                  LET g_xrce_d[l_ac].xrce016 = g_xrce_d[l_ac].xrce016_t
                  LET g_xrce_d_t.xrce016_t = g_xrce_d[l_ac].xrce016_t
               END IF
            END IF
            CALL axrt300_12_ref('xrce016_t')

         #----<<xrce018>>----
         BEFORE FIELD xrce018_t

         AFTER FIELD xrce018_t
            IF NOT cl_null(g_xrce_d[l_ac].xrce018_t) THEN
               IF g_xrce_d[l_ac].xrce018_t != g_xrce_d_t.xrce018_t OR g_xrce_d_t.xrce018_t IS NULL THEN
                  SELECT xrcadocdt INTO l_docdt FROM xrca_t WHERE xrcaent = g_enterprise
                     AND xrcadocno = g_xrcbdocno AND xrcald = g_xrcbld
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xrce_d[l_ac].xrce018_t
                  LET g_chkparam.arg2 = l_docdt
                  IF NOT cl_chk_exist("v_ooeg001") THEN
                     LET g_xrce_d[l_ac].xrce018 = g_xrce_d_t.xrce018
                     CALL axrt300_12_ref('xrce018_t')
                     NEXT FIELD CURRENT
                  END IF
                  LET g_xrce_d[l_ac].xrce018 = g_xrce_d[l_ac].xrce018_t
                  LET g_xrce_d_t.xrce018_t = g_xrce_d[l_ac].xrce018_t
               END IF
            END IF
            CALL axrt300_12_ref('xrce018_t')

         #----<<xrce019>>----
         BEFORE FIELD xrce019_t

         AFTER FIELD xrce019_t
            IF NOT cl_null(g_xrce_d[l_ac].xrce019_t) THEN
               IF g_xrce_d[l_ac].xrce019_t != g_xrce_d_t.xrce019_t OR g_xrce_d_t.xrce019_t IS NULL THEN
                  SELECT xrcadocdt INTO l_docdt FROM xrca_t WHERE xrcaent = g_enterprise
                     AND xrcadocno = g_xrcbdocno AND xrcald = g_xrcbld
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xrce_d[l_ac].xrce019_t
                  LET g_chkparam.arg2 = l_docdt
                  IF NOT cl_chk_exist("v_ooeg001_4") THEN
                     LET g_xrce_d[l_ac].xrce019 = g_xrce_d_t.xrce019
                     CALL axrt300_12_ref('xrce019_t')
                     NEXT FIELD CURRENT
                  END IF
                  LET g_xrce_d[l_ac].xrce019 = g_xrce_d[l_ac].xrce019_t
                  LET g_xrce_d_t.xrce019_t = g_xrce_d[l_ac].xrce019_t
               END IF
            END IF
            CALL axrt300_12_ref('xrce019_t')

         #----<<xrcelegl>>----
         BEFORE FIELD xrcelegl_t

         AFTER FIELD xrcelegl_t
            IF NOT cl_null(g_xrce_d[l_ac].xrcelegl_t) THEN
               IF g_xrce_d[l_ac].xrcelegl_t != g_xrce_d_t.xrcelegl_t OR g_xrce_d_t.xrcelegl_t IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xrce_d[l_ac].xrcelegl_t
                  LET g_chkparam.arg2 = ' '
                  IF NOT cl_chk_exist("v_ooef001_14") THEN
                     LET g_xrce_d[l_ac].xrcelegl = g_xrce_d_t.xrcelegl
                     CALL axrt300_12_ref('xrcelegl_t')
                     NEXT FIELD CURRENT
                  END IF
                  LET g_xrce_d[l_ac].xrcelegl = g_xrce_d[l_ac].xrcelegl_t
                  LET g_xrce_d_t.xrcelegl_t = g_xrce_d[l_ac].xrcelegl_t
               END IF
            END IF
            CALL axrt300_12_ref('xrcelegl_t')

         #----<<xrce020>>----
         BEFORE FIELD xrce020_t

         AFTER FIELD xrce020_t
            IF NOT cl_null(g_xrce_d[l_ac].xrce020_t) THEN
               IF g_xrce_d[l_ac].xrce020_t != g_xrce_d_t.xrce020_t OR g_xrce_d_t.xrce020_t IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = "200"
                  LET g_chkparam.arg2 = g_xrce_d[l_ac].xrce020_t
                  IF NOT cl_chk_exist("v_oocq002_01") THEN
                     LET g_xrce_d[l_ac].xrce020 = g_xrce_d_t.xrce020
                     CALL axrt300_12_ref('xrce020_t')
                     NEXT FIELD CURRENT
                  END IF
                  LET g_xrce_d[l_ac].xrce020 = g_xrce_d[l_ac].xrce020_t
                  LET g_xrce_d_t.xrce020_t = g_xrce_d[l_ac].xrce020_t
               END IF
            END IF
            CALL axrt300_12_ref('xrce020_t')

         #----<<xrce022>>----
         BEFORE FIELD xrce022_t

         AFTER FIELD xrce022_t

         #----<<xrce023>>----
         BEFORE FIELD xrce023_t

         AFTER FIELD xrce023_t

         #---------------------<  Detail: page1  >---------------------
         #----<<xrce016>>----
         #Ctrlp:input.c.page1.xrce016
          ON ACTION controlp INFIELD xrce016_t
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xrce_d[l_ac].xrce016       #給予default值

            CALL aglt310_04()                                      #呼叫開窗

            LET g_xrce_d[l_ac].xrce016 = g_qryparam.return1        #將開窗取得的值回傳到變數
            CALL axrt300_12_ref('xrce016_t')
            
            LET g_xrce_d_t.xrce016_t = g_xrce_d[l_ac].xrce016_t

            NEXT FIELD xrce016_t                                   #返回原欄位
            
         #----<<xrce018>>----
         #Ctrlp:input.c.page1.xrce018
          ON ACTION controlp INFIELD xrce018_t
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xrce_d[l_ac].xrce018       #給予default值

            SELECT xrcadocdt INTO l_docdt FROM xrca_t WHERE xrcaent = g_enterprise
               AND xrcadocno = g_xrcbdocno AND xrcald = g_xrcbld

            LET g_qryparam.arg1 = l_docdt                          #給予default值

            CALL q_ooeg001()                                       #呼叫開窗

            LET g_xrce_d[l_ac].xrce018 = g_qryparam.return1        #將開窗取得的值回傳到變數
            CALL axrt300_12_ref('xrce018_t')

            LET g_xrce_d_t.xrce018_t = g_xrce_d[l_ac].xrce018_t

            NEXT FIELD xrce018_t                                   #返回原欄位
            
         #----<<xrce019>>----
         #Ctrlp:input.c.page1.xrce019
          ON ACTION controlp INFIELD xrce019_t
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xrce_d[l_ac].xrce019       #給予default值

            SELECT xrcadocdt INTO l_docdt FROM xrca_t WHERE xrcaent = g_enterprise
               AND xrcadocno = g_xrcbdocno AND xrcald = g_xrcbld

            LET g_qryparam.arg1 = l_docdt                          #給予default值

            CALL q_ooeg001_5()                                     #呼叫開窗

            LET g_xrce_d[l_ac].xrce019 = g_qryparam.return1        #將開窗取得的值回傳到變數
            CALL axrt300_12_ref('xrce019_t')

            LET g_xrce_d_t.xrce019_t = g_xrce_d[l_ac].xrce019_t

            NEXT FIELD xrce019_t                                   #返回原欄位

         #----<<xrcelegl>>----
         #Ctrlp:input.c.page1.xrcelegl
          ON ACTION controlp INFIELD xrcelegl_t
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xrce_d[l_ac].xrcelegl     #給予default值

            CALL q_ooef001()                                      #呼叫開窗

            LET g_xrce_d[l_ac].xrcelegl = g_qryparam.return1      #將開窗取得的值回傳到變數
            CALL axrt300_12_ref('xrcelegl_t')

            LET g_xrce_d_t.xrcelegl_t = g_xrce_d[l_ac].xrcelegl_t

            NEXT FIELD xrcelegl_t                                 #返回原欄位

         #----<<xrce020>>----
         #Ctrlp:input.c.page1.xrce020
          ON ACTION controlp INFIELD xrce020_t
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xrce_d[l_ac].xrce020      #給予default值

            #給予arg
            LET g_qryparam.arg1 = "200"

            CALL q_oocq002_5()                                    #呼叫開窗

            LET g_xrce_d[l_ac].xrce020 = g_qryparam.return1       #將開窗取得的值回傳到變數

            CALL axrt300_12_ref('xrce020_t')
      
            LET g_xrce_d_t.xrce020_t = g_xrce_d[l_ac].xrce020_t
            
            NEXT FIELD xrce020_t                                  #返回原欄位

         #----<<xrce022>>----
         #Ctrlp:input.c.page1.xrce022
          ON ACTION controlp INFIELD xrce022

         #----<<xrce023>>----
         #Ctrlp:input.c.page1.xrce023
          ON ACTION controlp INFIELD xrce023

         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xrce_d[l_ac].* = g_xrce_d_t.*
               CLOSE axrt300_12_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_xrce_d[l_ac].xrceseq,-263,1)
               LET g_xrce_d[l_ac].* = g_xrce_d_t.*
            ELSE

               #寫入修改者/修改日期資訊(單身)

               UPDATE xrce_t SET (xrce016,xrce018,xrce019,xrcelegl,xrce020,xrce022,xrce023)
                               = (g_xrce_d[l_ac].xrce016,g_xrce_d[l_ac].xrce018,g_xrce_d[l_ac].xrce019,g_xrce_d[l_ac].xrcelegl,
                                  g_xrce_d[l_ac].xrce020,g_xrce_d[l_ac].xrce022,g_xrce_d[l_ac].xrce023)
                WHERE xrceent = g_enterprise AND xrceld = g_xrcbld #項次
                  AND xrcedocno = g_xrcbdocno
                  AND xrceseq = g_xrce_d_t.xrceseq

               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xrce_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode         #其他錯誤
                     CALL cl_err("xrce_t",SQLCA.sqlcode,1)
                     CALL s_transaction_end('N','0')
               END CASE
            END IF

         AFTER ROW
            CALL axrt300_12_unlock_b("xrce_t")
            CALL s_transaction_end('Y','0')

         AFTER INPUT

         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_xrce_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xrce_d.getLength()+1

      END INPUT

      BEFORE DIALOG
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD xrcb029_t
            WHEN "s_detail2"
               NEXT FIELD xrce016_t
         END CASE

      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION controlr
         CALL cl_show_req_fields()

      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode())
              RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG

   END DIALOG

   CLOSE axrt300_12_bcl
   CLOSE axrt300_12_bcl2
   CALL s_transaction_end('Y','0')

END FUNCTION]]>
</point>
  <point name="function.axrt300_12_b_fill" cite_std="N" status="u" ver="1" src="s" new="Y" order="3" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_b_fill()
   LET g_sql = "SELECT UNIQUE xrcbseq,xrcb029,'',xrcb021,'',xrcb005,xrcb010,'',xrcb011,'',xrcblegl,'',",
               "               xrcb012,'',xrcb015,'',xrcb016,'',xrcb113 FROM xrcb_t",
               " WHERE xrcbent= ? AND xrcbdocno = '",g_xrcbdocno,"' AND xrcbld = '",g_xrcbld,"'"
   LET g_sql = g_sql, " ORDER BY xrcbld,xrcbdocno,xrcbseq"

   PREPARE axrt300_12_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR axrt300_12_pb

   OPEN b_fill_curs USING g_enterprise

   CALL g_xrcb_d.clear()

   LET g_cnt = l_ac
   LET l_ac = 1
   ERROR "Searching!"

   FOREACH b_fill_curs INTO g_xrcb_d[l_ac].xrcbseq,  g_xrcb_d[l_ac].xrcb029,  g_xrcb_d[l_ac].xrcb029_t,g_xrcb_d[l_ac].xrcb021,
                            g_xrcb_d[l_ac].xrcb021_t,g_xrcb_d[l_ac].xrcb005,  g_xrcb_d[l_ac].xrcb010,  g_xrcb_d[l_ac].xrcb010_t,
                            g_xrcb_d[l_ac].xrcb011,  g_xrcb_d[l_ac].xrcb011_t,g_xrcb_d[l_ac].xrcblegl, g_xrcb_d[l_ac].xrcblegl_t,
                            g_xrcb_d[l_ac].xrcb012,  g_xrcb_d[l_ac].xrcb012_t,g_xrcb_d[l_ac].xrcb015,  g_xrcb_d[l_ac].xrcb015_t,
                            g_xrcb_d[l_ac].xrcb016,  g_xrcb_d[l_ac].xrcb016_t,g_xrcb_d[l_ac].xrcb113

      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      CALL axrt300_12_detail_show()

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF

   END FOREACH

   IF l_ac > g_max_rec AND g_error_show = 1 THEN
      CALL cl_err("xrcb_t",9035,1)
   END IF
   LET g_error_show = 0

   CALL g_xrcb_d.deleteElement(g_xrcb_d.getLength())

   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0

   CLOSE b_fill_curs
   FREE axrt300_12_pb



   LET g_sql = "SELECT UNIQUE xrceseq,xrce016,'',xrce018,'',xrce019,'',xrcelegl,'',",
               "               xrce020,'',xrce022,'',xrce023,'',xrce119 FROM xrce_t",
               " WHERE xrceent= ? AND xrcedocno = '",g_xrcbdocno,"' AND xrceld = '",g_xrcbld,"'"
   LET g_sql = g_sql, " ORDER BY xrceld,xrcedocno,xrceseq"

   PREPARE axrt300_12_pb2 FROM g_sql
   DECLARE b_fill_curs2 CURSOR FOR axrt300_12_pb2

   OPEN b_fill_curs2 USING g_enterprise

   CALL g_xrce_d.clear()

   LET g_cnt = l_ac
   LET l_ac = 1
   ERROR "Searching!"

   FOREACH b_fill_curs2 INTO g_xrce_d[l_ac].xrceseq,   g_xrce_d[l_ac].xrce016,g_xrce_d[l_ac].xrce016_t,g_xrce_d[l_ac].xrce018,
                             g_xrce_d[l_ac].xrce018_t, g_xrce_d[l_ac].xrce019,g_xrce_d[l_ac].xrce019_t,g_xrce_d[l_ac].xrcelegl,
                             g_xrce_d[l_ac].xrcelegl_t,g_xrce_d[l_ac].xrce020,g_xrce_d[l_ac].xrce020_t,g_xrce_d[l_ac].xrce022,
                             g_xrce_d[l_ac].xrce022_t, g_xrce_d[l_ac].xrce023,g_xrce_d[l_ac].xrce023_t,g_xrce_d[l_ac].xrce119

      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      CALL axrt300_12_detail_show()

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF

   END FOREACH

   IF l_ac > g_max_rec AND g_error_show = 1 THEN
      CALL cl_err("xrce_t",9035,1)
   END IF
   LET g_error_show = 0

   CALL g_xrce_d.deleteElement(g_xrce_d.getLength())

   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0

   CLOSE b_fill_curs2
   FREE axrt300_12_pb2

END FUNCTION]]>
</point>
  <point name="function.axrt300_12_detail_show" cite_std="N" status="u" ver="1" src="s" new="Y" order="6" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_detail_show()
   
   CALL axrt300_12_ref('xrcb029_t')
   
   CALL axrt300_12_ref('xrcb021_t')
   
   CALL axrt300_12_ref('xrcb010_t')
   
   CALL axrt300_12_ref('xrcb011_t')
   
   CALL axrt300_12_ref('xrcblegl_t')
   
   CALL axrt300_12_ref('xrcb012_t')
   
   CALL axrt300_12_ref('xrcb015_t')
   
   CALL axrt300_12_ref('xrcb016_t')
   
   
   CALL axrt300_12_ref('xrce016_t')
   
   CALL axrt300_12_ref('xrce018_t')
   
   CALL axrt300_12_ref('xrce019_t')
   
   CALL axrt300_12_ref('xrcelegl_t')
   
   CALL axrt300_12_ref('xrce020_t')
   
   CALL axrt300_12_ref('xrce022_t')
   
   CALL axrt300_12_ref('xrce023_t')
END FUNCTION]]>
</point>
  <point name="function.axrt300_12_set_entry_b" cite_std="N" status="u" ver="1" src="s" new="Y" order="7" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1

END FUNCTION]]>
</point>
  <point name="function.axrt300_12_set_no_entry_b" cite_std="N" status="u" ver="1" src="s" new="Y" order="8" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1

END FUNCTION]]>
</point>
  <point name="function.axrt300_12_default_search" cite_std="N" status="u" ver="1" src="s" new="Y" order="9" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING

   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " xrcbld = '", g_argv[1], "' AND "
   END IF

   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xrcbdocno = ", g_argv[02], " AND "
   END IF

   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xrcbseq = ", g_argv[03], " AND "
   END IF



   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF

END FUNCTION]]>
</point>
  <point name="function.axrt300_12_lock_b" cite_std="N" status="u" ver="1" src="s" new="Y" order="10" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_lock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING

   LET ls_group = "xrcb_t"

   IF ps_table = 'xrcb_t' THEN
      OPEN axrt300_12_bcl USING g_enterprise,g_xrcbld,g_xrcbdocno,g_xrcb_d[g_detail_idx].xrcbseq

      IF SQLCA.sqlcode THEN
         CALL cl_err("axrt300_12_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF

   IF ps_table = 'xrce_t' THEN
      OPEN axrt300_12_bcl2 USING g_enterprise,g_xrcbld,g_xrcbdocno,g_xrce_d[g_detail_idx].xrceseq

      IF SQLCA.sqlcode THEN
         CALL cl_err("axrt300_12_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF

   RETURN TRUE

END FUNCTION]]>
</point>
  <point name="function.axrt300_12_unlock_b" cite_std="N" status="u" ver="1" src="s" new="Y" order="11" cite_ver="" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION axrt300_12_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING

   LET ls_group = ""

   CLOSE axrt300_12_bcl
   CLOSE axrt300_12_bcl2

END FUNCTION]]>
</point>
  <point name="global.variable" cite_std="N" status="u" ver="1" src="s" new="N" order="" cite_ver="" mark_hard="N">
<![CDATA[DEFINE g_xrcb_d          DYNAMIC ARRAY OF type_g_xrcb_d
DEFINE g_xrcb_d_t        type_g_xrcb_d
DEFINE g_xrce_d          DYNAMIC ARRAY OF type_g_xrce_d
DEFINE g_xrce_d_t        type_g_xrce_d



DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身

DEFINE g_wc_table           STRING
DEFINE g_glaa_t             RECORD LIKE glaa_t.*
DEFINE g_xrcbld             LIKE xrcb_t.xrcbld
DEFINE g_xrcbdocno          LIKE xrcb_t.xrcbdocno]]>
</point>
  <point name="input.a.page1.xrcbdocno" cite_std="N" status="" ver="1" src="s" new="N" order="" cite_ver="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.a.page1.xrcbld" cite_std="N" status="" ver="1" src="s" new="N" order="" cite_ver="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.a.page1.xrcbseq" cite_std="N" status="" ver="1" src="s" new="N" order="" cite_ver="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.a.page2.xrcbdocno" cite_std="N" status="" ver="1" src="s" new="N" order="" cite_ver="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  .xrceld IS NOT NULL AND .xrcedocno IS NOT NULL AND .xrceseq IS NOT NULL AND g_xrcb2_d[g_detail_idx].xrcbld IS NOT NULL AND g_xrcb2_d[g_detail_idx].xrcbdocno IS NOT NULL AND g_xrcb2_d[g_detail_idx].xrcbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (.xrceld != g_xrceld_t OR .xrcedocno != g_xrcedocno_t OR .xrceseq != g_xrceseq_t OR g_xrcb2_d[g_detail_idx].xrcbld != g_xrcb2_d_t.xrcbld OR g_xrcb2_d[g_detail_idx].xrcbdocno != g_xrcb2_d_t.xrcbdocno OR g_xrcb2_d[g_detail_idx].xrcbseq != g_xrcb2_d_t.xrcbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrce_t WHERE "||"xrceent = '" ||g_enterprise|| "' AND "||"xrcbld = '"||.xrceld ||"' AND "|| "xrcbdocno = '"||.xrcedocno ||"' AND "|| "xrcbseq = '"||.xrceseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.xrcbdocno_2" cite_std="N" status="" ver="1" src="s" new="N" order="" cite_ver="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xrcb2_d[g_detail_idx].xrcbld IS NOT NULL AND g_xrcb2_d[g_detail_idx].xrcbdocno IS NOT NULL AND g_xrcb2_d[g_detail_idx].xrcbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xrcb2_d[g_detail_idx].xrcbld != g_xrcb2_d_t.xrcbld OR g_xrcb2_d[g_detail_idx].xrcbdocno != g_xrcb2_d_t.xrcbdocno OR g_xrcb2_d[g_detail_idx].xrcbseq != g_xrcb2_d_t.xrcbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrcb_t WHERE "||"xrcbent = '" ||g_enterprise|| "' AND "||"xrcbld = '"||g_xrcb2_d[g_detail_idx].xrcbld ||"' AND "|| "xrcbdocno = '"||g_xrcb2_d[g_detail_idx].xrcbdocno ||"' AND "|| "xrcbseq = '"||g_xrcb2_d[g_detail_idx].xrcbseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.xrcbld" cite_std="N" status="" ver="1" src="s" new="N" order="" cite_ver="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  .xrceld IS NOT NULL AND .xrcedocno IS NOT NULL AND .xrceseq IS NOT NULL AND g_xrcb2_d[g_detail_idx].xrcbld IS NOT NULL AND g_xrcb2_d[g_detail_idx].xrcbdocno IS NOT NULL AND g_xrcb2_d[g_detail_idx].xrcbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (.xrceld != g_xrceld_t OR .xrcedocno != g_xrcedocno_t OR .xrceseq != g_xrceseq_t OR g_xrcb2_d[g_detail_idx].xrcbld != g_xrcb2_d_t.xrcbld OR g_xrcb2_d[g_detail_idx].xrcbdocno != g_xrcb2_d_t.xrcbdocno OR g_xrcb2_d[g_detail_idx].xrcbseq != g_xrcb2_d_t.xrcbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrce_t WHERE "||"xrceent = '" ||g_enterprise|| "' AND "||"xrcbld = '"||.xrceld ||"' AND "|| "xrcbdocno = '"||.xrcedocno ||"' AND "|| "xrcbseq = '"||.xrceseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.xrcbld_2" cite_std="N" status="" ver="1" src="s" new="N" order="" cite_ver="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xrcb2_d[g_detail_idx].xrcbld IS NOT NULL AND g_xrcb2_d[g_detail_idx].xrcbdocno IS NOT NULL AND g_xrcb2_d[g_detail_idx].xrcbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xrcb2_d[g_detail_idx].xrcbld != g_xrcb2_d_t.xrcbld OR g_xrcb2_d[g_detail_idx].xrcbdocno != g_xrcb2_d_t.xrcbdocno OR g_xrcb2_d[g_detail_idx].xrcbseq != g_xrcb2_d_t.xrcbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrcb_t WHERE "||"xrcbent = '" ||g_enterprise|| "' AND "||"xrcbld = '"||g_xrcb2_d[g_detail_idx].xrcbld ||"' AND "|| "xrcbdocno = '"||g_xrcb2_d[g_detail_idx].xrcbdocno ||"' AND "|| "xrcbseq = '"||g_xrcb2_d[g_detail_idx].xrcbseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.xrcbseq" cite_std="N" status="" ver="1" src="s" new="N" order="" cite_ver="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  .xrceld IS NOT NULL AND .xrcedocno IS NOT NULL AND .xrceseq IS NOT NULL AND g_xrcb2_d[g_detail_idx].xrcbld IS NOT NULL AND g_xrcb2_d[g_detail_idx].xrcbdocno IS NOT NULL AND g_xrcb2_d[g_detail_idx].xrcbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (.xrceld != g_xrceld_t OR .xrcedocno != g_xrcedocno_t OR .xrceseq != g_xrceseq_t OR g_xrcb2_d[g_detail_idx].xrcbld != g_xrcb2_d_t.xrcbld OR g_xrcb2_d[g_detail_idx].xrcbdocno != g_xrcb2_d_t.xrcbdocno OR g_xrcb2_d[g_detail_idx].xrcbseq != g_xrcb2_d_t.xrcbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrce_t WHERE "||"xrceent = '" ||g_enterprise|| "' AND "||"xrcbld = '"||.xrceld ||"' AND "|| "xrcbdocno = '"||.xrcedocno ||"' AND "|| "xrcbseq = '"||.xrceseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.xrcbseq_2" cite_std="N" status="" ver="1" src="s" new="N" order="" cite_ver="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xrcb2_d[g_detail_idx].xrcbld IS NOT NULL AND g_xrcb2_d[g_detail_idx].xrcbdocno IS NOT NULL AND g_xrcb2_d[g_detail_idx].xrcbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xrcb2_d[g_detail_idx].xrcbld != g_xrcb2_d_t.xrcbld OR g_xrcb2_d[g_detail_idx].xrcbdocno != g_xrcb2_d_t.xrcbdocno OR g_xrcb2_d[g_detail_idx].xrcbseq != g_xrcb2_d_t.xrcbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrcb_t WHERE "||"xrcbent = '" ||g_enterprise|| "' AND "||"xrcbld = '"||g_xrcb2_d[g_detail_idx].xrcbld ||"' AND "|| "xrcbdocno = '"||g_xrcb2_d[g_detail_idx].xrcbdocno ||"' AND "|| "xrcbseq = '"||g_xrcb2_d[g_detail_idx].xrcbseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.action" cite_std="N" status="" ver="1" src="s" new="N" order="" cite_ver="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" order="" cite_ver="" mark_hard="N">
<![CDATA[            IF l_flag = 'N' THEN RETURN END IF]]>
</point>
  <point name="input.c.page1.xrcb011" cite_std="N" status="" ver="1" src="s" new="N" order="" cite_ver="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xrcb_d[l_ac].xrcb011             #給予default值

            #給予arg

            CALL axrt300_11()                                #呼叫開窗

            LET g_xrcb_d[l_ac].xrcb011 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_xrcb_d[l_ac].xrcb011 TO xrcb011              #顯示到畫面上

            NEXT FIELD xrcb011                          #返回原欄位

]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" order="" cite_ver="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.get_var" cite_std="N" status="" ver="1" src="s" new="N" order="" cite_ver="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.pre_input" cite_std="N" status="" ver="1" src="s" new="N" order="" cite_ver="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="main.memo" cite_std="N" status="" ver="" src="" new="Y" order="">
<![CDATA[]]>
</point>
  <point name="main.import" cite_std="N" status="" ver="" src="" new="Y" order="">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="" new="Y" order="">
<![CDATA[]]>
</point>
  <point name="free_style.variable" cite_std="N" status="u" ver="" src="" new="Y" order="">
<![CDATA[ TYPE type_g_xrcb_d RECORD
   xrcbseq      LIKE xrcb_t.xrcbseq, 
   xrcb029      LIKE xrcb_t.xrcb029, 
   xrcb029_t    LIKE ooefl_t.ooefl003, 
   xrcb021      LIKE xrcb_t.xrcb021, 
   xrcb021_t    LIKE ooefl_t.ooefl003, 
   xrcb005      LIKE xrcb_t.xrcb005, 
   xrcb010      LIKE xrcb_t.xrcb010, 
   xrcb010_t    LIKE ooefl_t.ooefl003, 
   xrcb011      LIKE xrcb_t.xrcb011, 
   xrcb011_t    LIKE ooefl_t.ooefl003, 
   xrcblegl     LIKE xrcb_t.xrcblegl,
   xrcblegl_t   LIKE ooefl_t.ooefl003, 
   xrcb012      LIKE xrcb_t.xrcb012,  
   xrcb012_t    LIKE ooefl_t.ooefl003, 
   xrcb015      LIKE xrcb_t.xrcb015, 
   xrcb015_t    LIKE ooefl_t.ooefl003, 
   xrcb016      LIKE xrcb_t.xrcb016, 
   xrcb016_t    LIKE ooefl_t.ooefl003, 
   xrcb113      LIKE xrcb_t.xrcb113
       END RECORD
 TYPE type_g_xrce_d RECORD
   xrceseq      LIKE xrce_t.xrceseq,
   xrce016      LIKE xrce_t.xrce016,
   xrce016_t    LIKE ooefl_t.ooefl003, 
   xrce018      LIKE xrce_t.xrce018,
   xrce018_t    LIKE ooefl_t.ooefl003, 
   xrce019      LIKE xrce_t.xrce019,
   xrce019_t    LIKE ooefl_t.ooefl003, 
   xrcelegl     LIKE xrce_t.xrcelegl,
   xrcelegl_t   LIKE ooefl_t.ooefl003, 
   xrce020      LIKE xrce_t.xrce020,
   xrce020_t    LIKE ooefl_t.ooefl003, 
   xrce022      LIKE xrce_t.xrce022,
   xrce022_t    LIKE ooefl_t.ooefl003, 
   xrce023      LIKE xrce_t.xrce023,
   xrce023_t    LIKE ooefl_t.ooefl003, 
   xrce119      LIKE xrce_t.xrce119
       END RECORD
 
 
 ]]>
</point>
  <point name="free_style.function" cite_std="N" status="u" ver="" src="" new="Y" order="">
<![CDATA[]]>
</point>
  <point name="function.axrt300_12" cite_std="N" status="u" ver="" src="" new="Y" order="1">
<![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION axrt300_12(p_ld,p_docno)
   DEFINE p_ld      LIKE xrcb_t.xrcbld
   DEFINE p_docno   LIKE xrcb_t.xrcbdocno
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log

   #作業初始化

   LET g_xrcbld = p_ld
   LET g_xrcbdocno = p_docno

   SELECT * INTO g_glaa_t.* FROM glaa_t WHERE glaaent = g_enterprise
      AND glaald = p_ld

   #LOCK CURSOR (identifier)

   LET g_forupd_sql = ""

   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)   #轉換不同資料庫語法
   DECLARE axrt300_12_cl CURSOR FROM g_forupd_sql     # LOCK CURSOR


   #畫面開啟 (identifier)
   OPEN WINDOW w_axrt300_12 WITH FORM cl_ap_formpath("axr","axrt300_12")

   #瀏覽頁簽資料初始化
   CALL cl_ui_init()

   #程式初始化
   CALL axrt300_12_init()

   #進入選單 Menu (="N")
   CALL axrt300_12_ui_dialog()

   #畫面關閉
   CLOSE WINDOW w_axrt300_12

   CLOSE axrt300_12_cl
   
   LET g_action_choice = ''
   
END FUNCTION]]>
</point>
  <point name="function.axrt300_12_ref" cite_std="N" status="u" ver="" src="" new="Y" order="12">
<![CDATA[################################################################################
# Descriptions...: 刷新欄位說明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt300_12_ref(p_lab)
   DEFINE p_lab      LIKE type_t.chr20
   
   CASE
      WHEN p_lab = 'xrcb029_t'
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_xrcb_d[l_ac].xrcb029
         CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001='"||g_glaa_t.glaa004||"' AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_xrcb_d[l_ac].xrcb029_t = g_xrcb_d[l_ac].xrcb029,'(', g_rtn_fields[1] , ')'
         DISPLAY g_xrcb_d[l_ac].xrcb029_t TO s_detail1[l_ac].xrcb029_t
      WHEN p_lab = 'xrcb021_t'
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_xrcb_d[l_ac].xrcb021
         CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001='"||g_glaa_t.glaa004||"' AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_xrcb_d[l_ac].xrcb021_t = g_xrcb_d[l_ac].xrcb021,'(', g_rtn_fields[1] , ')'
         DISPLAY g_xrcb_d[l_ac].xrcb021_t TO s_detail1[l_ac].xrcb021_t
      WHEN p_lab = 'xrcb010_t'
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_xrcb_d[l_ac].xrcb010
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_xrcb_d[l_ac].xrcb010_t = g_xrcb_d[l_ac].xrcb010,'(', g_rtn_fields[1] , ')'
         DISPLAY g_xrcb_d[l_ac].xrcb010_t TO s_detail1[l_ac].xrcb010_t
      WHEN p_lab = 'xrcb011_t'
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_xrcb_d[l_ac].xrcb011
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_xrcb_d[l_ac].xrcb011_t = g_xrcb_d[l_ac].xrcb011,'(', g_rtn_fields[1] , ')'
         DISPLAY g_xrcb_d[l_ac].xrcb011_t TO s_detail1[l_ac].xrcb011_t
      WHEN p_lab = 'xrcblegl_t'
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_xrcb_d[l_ac].xrcblegl
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_xrcb_d[l_ac].xrcblegl_t = g_xrcb_d[l_ac].xrcblegl,'(', g_rtn_fields[1] , ')'
         DISPLAY g_xrcb_d[l_ac].xrcblegl_t TO s_detail1[l_ac].xrcblegl_t
      WHEN p_lab = 'xrcb012_t'
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_xrcb_d[l_ac].xrcb012
         CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_xrcb_d[l_ac].xrcb012_t = g_xrcb_d[l_ac].xrcb012,'(', g_rtn_fields[1] , ')'
         DISPLAY g_xrcb_d[l_ac].xrcb012_t TO s_detail1[l_ac].xrcb012_t
      WHEN p_lab = 'xrcb015_t'
         LET g_xrcb_d[l_ac].xrcb015_t = g_xrcb_d[l_ac].xrcb015,'(',')'
         DISPLAY g_xrcb_d[l_ac].xrcb015_t TO s_detail1[l_ac].xrcb015_t
      WHEN p_lab = 'xrcb016_t'
         LET g_xrcb_d[l_ac].xrcb016_t = g_xrcb_d[l_ac].xrcb016,'(',')'
         DISPLAY g_xrcb_d[l_ac].xrcb016_t TO s_detail1[l_ac].xrcb016_t

      WHEN p_lab = 'xrce016_t'
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_xrce_d[l_ac].xrce016
         CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001='"||g_glaa_t.glaa004||"' AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_xrce_d[l_ac].xrce016_t = g_xrce_d[l_ac].xrce016,'(', g_rtn_fields[1] , ')'
         DISPLAY g_xrce_d[l_ac].xrce016_t TO s_detail2[l_ac].xrce016_t
      WHEN p_lab = 'xrce018_t'
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_xrce_d[l_ac].xrce018
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_xrce_d[l_ac].xrce018_t = g_xrce_d[l_ac].xrce018,'(', g_rtn_fields[1] , ')'
         DISPLAY g_xrce_d[l_ac].xrce018_t TO s_detail2[l_ac].xrce018_t
      WHEN p_lab = 'xrce019_t'
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_xrce_d[l_ac].xrce019
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_xrce_d[l_ac].xrce019_t = g_xrce_d[l_ac].xrce019,'(', g_rtn_fields[1] , ')'
         DISPLAY g_xrce_d[l_ac].xrce019_t TO s_detail2[l_ac].xrce019_t
      WHEN p_lab = 'xrcelegl_t'
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_xrce_d[l_ac].xrcelegl
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_xrce_d[l_ac].xrcelegl_t = g_xrce_d[l_ac].xrcelegl,'(', g_rtn_fields[1] , ')'
         DISPLAY g_xrce_d[l_ac].xrcelegl_t TO s_detail2[l_ac].xrcelegl_t
      WHEN p_lab = 'xrce020_t'
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_xrce_d[l_ac].xrce020
         CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='200' AND oocql002=? AND oocql003='"||g_lang||"'","") RETURNING g_rtn_fields
         LET g_xrce_d[l_ac].xrce020_t = g_xrce_d[l_ac].xrce020,'(', g_rtn_fields[1] , ')'
         DISPLAY g_xrce_d[l_ac].xrce020_t TO s_detail2[l_ac].xrce020_t
      WHEN p_lab = 'xrce022_t'
         LET g_xrce_d[l_ac].xrce022_t = g_xrce_d[l_ac].xrce022,'(',')'
         DISPLAY g_xrce_d[l_ac].xrce022_t TO s_detail2[l_ac].xrce022_t
      WHEN p_lab = 'xrce023_t'
         LET g_xrce_d[l_ac].xrce023_t = g_xrce_d[l_ac].xrce023,'(',')'
         DISPLAY g_xrce_d[l_ac].xrce023_t TO s_detail2[l_ac].xrce023_t
   END CASE

END FUNCTION]]>
</point>
</add_points>