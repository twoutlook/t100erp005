<add_points prog="axrt920_02" std_prog="axrt920_02" erpver="1.0" module="AXR" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.axrt920_02" cite_std="N" status="d" ver="" src="s" new="Y" cite_ver="" order="1">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION axrt920_02()
   DEFINE p_xrebld        LIKE xreb_t.xrebld
   DEFINE p_xreb001       LIKE xreb_t.xreb001
   DEFINE p_xreb002       LIKE xreb_t.xreb002

   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
   
   LET g_wc2 = " xrebld = '",p_xrebld,"' AND xreb001 = '",p_xreb001,"' AND xreb002 = '",p_xreb002,"'"
   LET g_xrebld  = p_xrebld
   LET g_xreb001 = p_xreb001
   LET g_xreb002 = p_xreb002
   
   #畫面開啟 (identifier)
   OPEN WINDOW w_axrt920_02 WITH FORM cl_ap_formpath("axr","axrt920_02")
   
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   #程式初始化
   CALL axrt920_02_init()   
 
   #進入選單 Menu (="N")
   CALL axrt920_02_ui_dialog() 
 
   #畫面關閉
   CLOSE WINDOW w_axrt920_02

   LET g_action_choice = ""

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_init" cite_std="N" status="d" ver="" src="s" new="Y" cite_ver="" order="2">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_init()
   LET g_error_show = 1

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_query" cite_std="N" status="d" ver="" src="s" new="Y" cite_ver="" order="4">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_xreb_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON xreb001,xreb002,xreb005,xreb006,xreb007,xrebld,glab005,xreb116,xreb011,xreb012, 
          xreb010,xreb015,xreb018,xreb019 
 
         FROM s_detail1[1].xreb001,s_detail1[1].xreb002,s_detail1[1].xreb005,s_detail1[1].xreb006,s_detail1[1].xreb007, 
             s_detail1[1].xrebld,s_detail1[1].glab005,s_detail1[1].xreb116,s_detail1[1].xreb011,s_detail1[1].xreb012, 
             s_detail1[1].xreb010,s_detail1[1].xreb015,s_detail1[1].xreb018,s_detail1[1].xreb019 
      
         
      
         #---------------------<  Detail: page1  >---------------------
         #----<<xreb001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb001
            #add-point:BEFORE FIELD xreb001
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb001
            
            #add-point:AFTER FIELD xreb001
            
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb001
#         ON ACTION controlp INFIELD xreb001
            #add-point:ON ACTION controlp INFIELD xreb001
            
            #END add-point
 
         #----<<xreb002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb002
            #add-point:BEFORE FIELD xreb002
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb002
            
            #add-point:AFTER FIELD xreb002
            
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb002
#         ON ACTION controlp INFIELD xreb002
            #add-point:ON ACTION controlp INFIELD xreb002
            
            #END add-point
 
         #----<<xreb005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb005
            #add-point:BEFORE FIELD xreb005
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb005
            
            #add-point:AFTER FIELD xreb005
            
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb005
#         ON ACTION controlp INFIELD xreb005
            #add-point:ON ACTION controlp INFIELD xreb005
            
            #END add-point
 
         #----<<xreb006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb006
            #add-point:BEFORE FIELD xreb006
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb006
            
            #add-point:AFTER FIELD xreb006
            
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb006
#         ON ACTION controlp INFIELD xreb006
            #add-point:ON ACTION controlp INFIELD xreb006
            
            #END add-point
 
         #----<<xreb007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb007
            #add-point:BEFORE FIELD xreb007
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb007
            
            #add-point:AFTER FIELD xreb007
            
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb007
#         ON ACTION controlp INFIELD xreb007
            #add-point:ON ACTION controlp INFIELD xreb007
            
            #END add-point
 
         #----<<xrebld>>----
         #Ctrlp:construct.c.page1.xrebld
         ON ACTION controlp INFIELD xrebld
            #add-point:ON ACTION controlp INFIELD xrebld
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrebld  #顯示到畫面上
            NEXT FIELD xrebld                     #返回原欄位
    


            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xrebld
            #add-point:BEFORE FIELD xrebld
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xrebld
            
            #add-point:AFTER FIELD xrebld
            
            #END add-point
            
 
         #----<<xrebld_desc>>----
         #----<<glab005>>----
         #Ctrlp:construct.c.page1.glab005
         ON ACTION controlp INFIELD glab005
            #add-point:ON ACTION controlp INFIELD glab005
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_glac002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glab005  #顯示到畫面上
            NEXT FIELD glab005                     #返回原欄位
    


            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glab005
            #add-point:BEFORE FIELD glab005
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glab005
            
            #add-point:AFTER FIELD glab005
            
            #END add-point
            
 
         #----<<xreb116>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb116
            #add-point:BEFORE FIELD xreb116
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb116
            
            #add-point:AFTER FIELD xreb116
            
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb116
#         ON ACTION controlp INFIELD xreb116
            #add-point:ON ACTION controlp INFIELD xreb116
            
            #END add-point
 
         #----<<xreb011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb011
            #add-point:BEFORE FIELD xreb011
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb011
            
            #add-point:AFTER FIELD xreb011
            
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb011
#         ON ACTION controlp INFIELD xreb011
            #add-point:ON ACTION controlp INFIELD xreb011
            
            #END add-point
 
         #----<<xreb012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb012
            #add-point:BEFORE FIELD xreb012
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb012
            
            #add-point:AFTER FIELD xreb012
            
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb012
#         ON ACTION controlp INFIELD xreb012
            #add-point:ON ACTION controlp INFIELD xreb012
            
            #END add-point
 
         #----<<xreb010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb010
            #add-point:BEFORE FIELD xreb010
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb010
            
            #add-point:AFTER FIELD xreb010
            
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb010
#         ON ACTION controlp INFIELD xreb010
            #add-point:ON ACTION controlp INFIELD xreb010
            
            #END add-point
 
         #----<<xreb015>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb015
            #add-point:BEFORE FIELD xreb015
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb015
            
            #add-point:AFTER FIELD xreb015
            
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb015
#         ON ACTION controlp INFIELD xreb015
            #add-point:ON ACTION controlp INFIELD xreb015
            
            #END add-point
 
         #----<<xreb018>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb018
            #add-point:BEFORE FIELD xreb018
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb018
            
            #add-point:AFTER FIELD xreb018
            
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb018
#         ON ACTION controlp INFIELD xreb018
            #add-point:ON ACTION controlp INFIELD xreb018
            
            #END add-point
 
         #----<<xreb019>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb019
            #add-point:BEFORE FIELD xreb019
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb019
            
            #add-point:AFTER FIELD xreb019
            
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb019
#         ON ACTION controlp INFIELD xreb019
            #add-point:ON ACTION controlp INFIELD xreb019
            
            #END add-point
 
  
         
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
         
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL axrt920_02_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION]]>
</point>
  <point name="function.axrt920_02_insert" cite_std="N" status="d" ver="" src="s" new="Y" cite_ver="" order="5">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_insert()
   DEFINE li_ac LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   
   #end add-point 
   
   #輸入前動作  
   LET li_ac = l_ac 
   LET l_ac = 1   
   LET g_before_input_done = FALSE                                        
   CALL axrt920_02_set_entry_b("a")  
   
   CALL axrt920_02_set_no_entry_b("a")                                          
   LET g_before_input_done = TRUE                                            
   
   #append欄位         
      
 
 
   
   #add-point:insert段before insert
   
   #end add-point  
 
   #資料輸入
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM) 
      INPUT g_xreb_d[1].* FROM s_detail1[1].*
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         BEFORE INPUT
         
      END INPUT
      
 
      
      BEFORE DIALOG 
   
   END DIALOG
   
   #輸入後動作
   IF INT_FLAG THEN
      CALL cl_err("",9001,0)
      LET INT_FLAG = 1
      RETURN
   END IF
   
   CALL s_transaction_begin()                    

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_delete" cite_std="N" status="d" ver="" src="s" new="Y" cite_ver="" order="6">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_delete()
   DEFINE li_ac LIKE type_t.num5
   #add-point:delete段define
   
   #end add-point 
   
   IF NOT cl_ask_delete() THEN
      LET INT_FLAG = 1 #不刪除
   ELSE
      LET INT_FLAG = 0 #要刪除
   END IF
   
   LET li_ac = ARR_CURR()
   
   CALL s_transaction_begin()  
 
   #add-point:delete段刪除前
   
   #end add-point 
   DELETE FROM xreb_t 
         WHERE xrebld = g_xreb_d[li_ac].xrebld
           AND xreb001 = g_xreb_d[li_ac].xreb001
           AND xreb002 = g_xreb_d[li_ac].xreb002
           AND xreb005 = g_xreb_d[li_ac].xreb005
           AND xreb006 = g_xreb_d[li_ac].xreb006
           AND xreb007 = g_xreb_d[li_ac].xreb007
 
   #add-point:delete段刪除中
   
   #end add-point 
   IF SQLCA.sqlcode THEN
      CALL cl_err("xreb_t",SQLCA.sqlcode,1) 
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_detail_show" cite_std="N" status="d" ver="" src="s" new="Y" cite_ver="" order="5">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL axrt920_02_detail_show())
#                  RETURNING ---
# Input parameter: 
# Return code....: 
# Date & Author..: 2014/04/25 By zhangwei
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_detail_show()
   DEFINE l_glaa004         LIKE glaa_t.glaa004

   #匯差科目
   SELECT glaa004 INTO l_glaa004 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xrebld
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xreb_d[l_ac].glab005
   CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001 = '"||l_glaa004||"' AND glacl002 = ? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xreb_d[l_ac].glab005 = g_xreb_d[l_ac].glab005,'(', g_rtn_fields[1] , ')'

   #部門
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xreb_d[l_ac].xreb011
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xreb_d[l_ac].xreb011_e = g_xreb_d[l_ac].xreb011,'(', g_rtn_fields[1] , ')'

   #責任中心
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xreb_d[l_ac].xreb012
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xreb_d[l_ac].xreb012_e = g_xreb_d[l_ac].xreb012,'(', g_rtn_fields[1] , ')'

   #核算組織
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xreb_d[l_ac].xreb010
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xreb_d[l_ac].xreb010_e = g_xreb_d[l_ac].xreb010,'(', g_rtn_fields[1] , ')'

   #產品類別
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xreb_d[l_ac].xreb015
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xreb_d[l_ac].xreb015_e = g_xreb_d[l_ac].xreb015,'(', g_rtn_fields[1] , ')'

   #專案代號
   LET g_xreb_d[l_ac].xreb018_e = g_xreb_d[l_ac].xreb018,'( )'
   #WBS編號
   LET g_xreb_d[l_ac].xreb019_e = g_xreb_d[l_ac].xreb019,'( )'

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_set_entry_b" cite_std="N" status="d" ver="" src="s" new="Y" cite_ver="" order="7">
<![CDATA[
################################################################################
# Descriptions...: 開啟欄位
# Memo...........:
# Usage..........: CALL axrt920_02_set_entry_b(p_cmd)
#                  RETURNING ---
# Input parameter: p_cmd          狀態
# Date & Author..: 2014/04/25 By zhangwei
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_set_no_entry_b" cite_std="N" status="d" ver="" src="s" new="Y" cite_ver="" order="8">
<![CDATA[
################################################################################
# Descriptions...: 關閉欄位
# Memo...........:
# Usage..........: CALL axrt920_02_set_no_entry_b(p_cmd)
#                  RETURNING ---
# Input parameter: p_cmd          狀態
# Date & Author..: 2014/04/25 By zhangwei
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_default_search" cite_std="N" status="d" ver="" src="s" new="Y" cite_ver="" order="12">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define

   #end add-point

   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " xrebld = '", g_argv[1], "' AND "
   END IF

   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xreb001 = ", g_argv[02], " AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xreb002 = ", g_argv[03], " AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " xreb005 = ", g_argv[04], " AND "
   END IF
   IF NOT cl_null(g_argv[05]) THEN
      LET ls_wc = ls_wc, " xreb006 = ", g_argv[05], " AND "
   END IF
   IF NOT cl_null(g_argv[06]) THEN
      LET ls_wc = ls_wc, " xreb007 = ", g_argv[06], " AND "
   END IF


   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_delete_b" cite_std="N" status="d" ver="" src="s" new="Y" cite_ver="" order="13">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define

   #end add-point

   #判斷是否是同一群組的table
   LET ls_group = "xreb_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN

      #add-point:delete_b段刪除前

      #end add-point

      DELETE FROM xreb_t
       WHERE xrebent = g_enterprise AND
         xrebld = ps_keys_bak[1] AND xreb001 = ps_keys_bak[2] AND xreb002 = ps_keys_bak[3] AND xreb005 = ps_keys_bak[4] AND xreb006 = ps_keys_bak[5] AND xreb007 = ps_keys_bak[6]

      #add-point:delete_b段刪除中

      #end add-point

      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF

      #add-point:delete_b段刪除後

      #end add-point

      RETURN
   END IF

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_insert_b" cite_std="N" status="d" ver="" src="s" new="Y" cite_ver="" order="14">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define

   #end add-point

   #判斷是否是同一群組的table
   LET ls_group = "xreb_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN

      #add-point:insert_b段新增前

      #end add-point
      INSERT INTO xreb_t
                  (xrebent,
                   xrebld,xreb001,xreb002,xreb005,xreb006,xreb007
                   ,xreb116,xreb011,xreb012,xreb010,xreb015,xreb018,xreb019)
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6]
                   ,g_xreb_d[l_ac].xreb116,g_xreb_d[l_ac].xreb011,g_xreb_d[l_ac].xreb012,g_xreb_d[l_ac].xreb010,
                       g_xreb_d[l_ac].xreb015,g_xreb_d[l_ac].xreb018,g_xreb_d[l_ac].xreb019)
      #add-point:insert_b段新增中

      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("xreb_t",SQLCA.sqlcode,0)
      END IF

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_update_b" cite_std="N" status="d" ver="" src="s" new="Y" cite_ver="" order="15">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define

   #end add-point

   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR

   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF

   #判斷是否是同一群組的table
   LET ls_group = "xreb_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "xreb_t" THEN
      #add-point:update_b段修改前

      #end add-point
      UPDATE xreb_t
         SET (xrebld,xreb001,xreb002,xreb005,xreb006,xreb007
              ,xreb116,xreb011,xreb012,xreb010,xreb015,xreb018,xreb019)
              =
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6]
              ,g_xreb_d[l_ac].xreb116,g_xreb_d[l_ac].xreb011,g_xreb_d[l_ac].xreb012,g_xreb_d[l_ac].xreb010,
                  g_xreb_d[l_ac].xreb015,g_xreb_d[l_ac].xreb018,g_xreb_d[l_ac].xreb019)
         WHERE xrebld = ps_keys_bak[1] AND xreb001 = ps_keys_bak[2] AND xreb002 = ps_keys_bak[3] AND xreb005 = ps_keys_bak[4] AND xreb006 = ps_keys_bak[5] AND xreb007 = ps_keys_bak[6]
      #add-point:update_b段修改中

      #end add-point
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("xreb_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("xreb_t",SQLCA.sqlcode,1)
            CALL s_transaction_end('N','0')
         OTHERWISE

      END CASE
      #add-point:update_b段修改後

      #end add-point
      RETURN
   END IF

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_lock_b" cite_std="N" status="d" ver="" src="s" new="Y" cite_ver="" order="16">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_lock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define

   #end add-point

   #先刷新資料
   #CALL axrt920_02_b_fill(g_wc2)

   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "xreb_t"

   IF ls_group.getIndexOf(ps_table,1) THEN

      OPEN axrt920_02_bcl USING g_enterprise,
                                       g_xreb_d[g_detail_idx].xrebld,g_xreb_d[g_detail_idx].xreb001,
                                           g_xreb_d[g_detail_idx].xreb002,g_xreb_d[g_detail_idx].xreb005,
                                           g_xreb_d[g_detail_idx].xreb006,g_xreb_d[g_detail_idx].xreb007


      IF SQLCA.sqlcode THEN
         CALL cl_err("axrt920_02_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF

   END IF



   RETURN TRUE

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_unlock_b" cite_std="N" status="d" ver="" src="s" new="Y" cite_ver="" order="17">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define

   #end add-point

   LET ls_group = ""

   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE axrt920_02_bcl

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_link_b" cite_std="N" status="d" ver="" src="s" new="Y" cite_ver="" order="18">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define

   #end add-point

   LET ls_group = ""

   IF ls_group.getIndexOf(ps_table,1) THEN

   END IF

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_modify_detail_chk" cite_std="N" status="d" ver="" src="s" new="Y" cite_ver="" order="17">
<![CDATA[
################################################################################
# Descriptions...: 單身輸入判定
# Memo...........:
# Usage..........: CALL axrt920_02_modify_detail_chk(ps_record)
#                  RETURNING ls_return
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: ls_return      
# Date & Author..: 2014/04/25 By zhangwei
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING

   CASE ps_record
      WHEN "s_detail1"
         LET ls_return = "xreb001"
   END CASE

   RETURN ls_return

END FUNCTION]]>
</point>
  <point name="construct.c.page1.glab005" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_glac002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glab005  #顯示到畫面上
            NEXT FIELD glab005                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.xrebld" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrebld  #顯示到畫面上
            NEXT FIELD xrebld                     #返回原欄位
    

]]>
</point>
  <point name="detail_show.reference" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xreb_d[l_ac].xrebld
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xreb_d[l_ac].xrebld_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xreb_d[l_ac].xrebld_desc
]]>
</point>
  <point name="input.a.page1.glab005" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_xreb_d[l_ac].glab005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg2 = '參數2'
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_glac002_3") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.page1.xreb001" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xreb_d[g_detail_idx].xrebld IS NOT NULL AND g_xreb_d[g_detail_idx].xreb001 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb002 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb005 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb006 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xreb_d[g_detail_idx].xrebld != g_xreb_d_t.xrebld OR g_xreb_d[g_detail_idx].xreb001 != g_xreb_d_t.xreb001 OR g_xreb_d[g_detail_idx].xreb002 != g_xreb_d_t.xreb002 OR g_xreb_d[g_detail_idx].xreb005 != g_xreb_d_t.xreb005 OR g_xreb_d[g_detail_idx].xreb006 != g_xreb_d_t.xreb006 OR g_xreb_d[g_detail_idx].xreb007 != g_xreb_d_t.xreb007)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xreb_t WHERE "||"xrebent = '" ||g_enterprise|| "' AND "||"xrebld = '"||g_xreb_d[g_detail_idx].xrebld ||"' AND "|| "xreb001 = '"||g_xreb_d[g_detail_idx].xreb001 ||"' AND "|| "xreb002 = '"||g_xreb_d[g_detail_idx].xreb002 ||"' AND "|| "xreb005 = '"||g_xreb_d[g_detail_idx].xreb005 ||"' AND "|| "xreb006 = '"||g_xreb_d[g_detail_idx].xreb006 ||"' AND "|| "xreb007 = '"||g_xreb_d[g_detail_idx].xreb007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.xreb002" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xreb_d[g_detail_idx].xrebld IS NOT NULL AND g_xreb_d[g_detail_idx].xreb001 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb002 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb005 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb006 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xreb_d[g_detail_idx].xrebld != g_xreb_d_t.xrebld OR g_xreb_d[g_detail_idx].xreb001 != g_xreb_d_t.xreb001 OR g_xreb_d[g_detail_idx].xreb002 != g_xreb_d_t.xreb002 OR g_xreb_d[g_detail_idx].xreb005 != g_xreb_d_t.xreb005 OR g_xreb_d[g_detail_idx].xreb006 != g_xreb_d_t.xreb006 OR g_xreb_d[g_detail_idx].xreb007 != g_xreb_d_t.xreb007)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xreb_t WHERE "||"xrebent = '" ||g_enterprise|| "' AND "||"xrebld = '"||g_xreb_d[g_detail_idx].xrebld ||"' AND "|| "xreb001 = '"||g_xreb_d[g_detail_idx].xreb001 ||"' AND "|| "xreb002 = '"||g_xreb_d[g_detail_idx].xreb002 ||"' AND "|| "xreb005 = '"||g_xreb_d[g_detail_idx].xreb005 ||"' AND "|| "xreb006 = '"||g_xreb_d[g_detail_idx].xreb006 ||"' AND "|| "xreb007 = '"||g_xreb_d[g_detail_idx].xreb007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.xreb005" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xreb_d[g_detail_idx].xrebld IS NOT NULL AND g_xreb_d[g_detail_idx].xreb001 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb002 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb005 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb006 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xreb_d[g_detail_idx].xrebld != g_xreb_d_t.xrebld OR g_xreb_d[g_detail_idx].xreb001 != g_xreb_d_t.xreb001 OR g_xreb_d[g_detail_idx].xreb002 != g_xreb_d_t.xreb002 OR g_xreb_d[g_detail_idx].xreb005 != g_xreb_d_t.xreb005 OR g_xreb_d[g_detail_idx].xreb006 != g_xreb_d_t.xreb006 OR g_xreb_d[g_detail_idx].xreb007 != g_xreb_d_t.xreb007)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xreb_t WHERE "||"xrebent = '" ||g_enterprise|| "' AND "||"xrebld = '"||g_xreb_d[g_detail_idx].xrebld ||"' AND "|| "xreb001 = '"||g_xreb_d[g_detail_idx].xreb001 ||"' AND "|| "xreb002 = '"||g_xreb_d[g_detail_idx].xreb002 ||"' AND "|| "xreb005 = '"||g_xreb_d[g_detail_idx].xreb005 ||"' AND "|| "xreb006 = '"||g_xreb_d[g_detail_idx].xreb006 ||"' AND "|| "xreb007 = '"||g_xreb_d[g_detail_idx].xreb007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.xreb006" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xreb_d[g_detail_idx].xrebld IS NOT NULL AND g_xreb_d[g_detail_idx].xreb001 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb002 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb005 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb006 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xreb_d[g_detail_idx].xrebld != g_xreb_d_t.xrebld OR g_xreb_d[g_detail_idx].xreb001 != g_xreb_d_t.xreb001 OR g_xreb_d[g_detail_idx].xreb002 != g_xreb_d_t.xreb002 OR g_xreb_d[g_detail_idx].xreb005 != g_xreb_d_t.xreb005 OR g_xreb_d[g_detail_idx].xreb006 != g_xreb_d_t.xreb006 OR g_xreb_d[g_detail_idx].xreb007 != g_xreb_d_t.xreb007)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xreb_t WHERE "||"xrebent = '" ||g_enterprise|| "' AND "||"xrebld = '"||g_xreb_d[g_detail_idx].xrebld ||"' AND "|| "xreb001 = '"||g_xreb_d[g_detail_idx].xreb001 ||"' AND "|| "xreb002 = '"||g_xreb_d[g_detail_idx].xreb002 ||"' AND "|| "xreb005 = '"||g_xreb_d[g_detail_idx].xreb005 ||"' AND "|| "xreb006 = '"||g_xreb_d[g_detail_idx].xreb006 ||"' AND "|| "xreb007 = '"||g_xreb_d[g_detail_idx].xreb007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.xreb007" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_xreb_d[g_detail_idx].xrebld IS NOT NULL AND g_xreb_d[g_detail_idx].xreb001 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb002 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb005 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb006 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xreb_d[g_detail_idx].xrebld != g_xreb_d_t.xrebld OR g_xreb_d[g_detail_idx].xreb001 != g_xreb_d_t.xreb001 OR g_xreb_d[g_detail_idx].xreb002 != g_xreb_d_t.xreb002 OR g_xreb_d[g_detail_idx].xreb005 != g_xreb_d_t.xreb005 OR g_xreb_d[g_detail_idx].xreb006 != g_xreb_d_t.xreb006 OR g_xreb_d[g_detail_idx].xreb007 != g_xreb_d_t.xreb007)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xreb_t WHERE "||"xrebent = '" ||g_enterprise|| "' AND "||"xrebld = '"||g_xreb_d[g_detail_idx].xrebld ||"' AND "|| "xreb001 = '"||g_xreb_d[g_detail_idx].xreb001 ||"' AND "|| "xreb002 = '"||g_xreb_d[g_detail_idx].xreb002 ||"' AND "|| "xreb005 = '"||g_xreb_d[g_detail_idx].xreb005 ||"' AND "|| "xreb006 = '"||g_xreb_d[g_detail_idx].xreb006 ||"' AND "|| "xreb007 = '"||g_xreb_d[g_detail_idx].xreb007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.xrebld" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xreb_d[l_ac].xrebld
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xreb_d[l_ac].xrebld_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xreb_d[l_ac].xrebld_desc


            #此段落由子樣板a05產生
            IF  g_xreb_d[g_detail_idx].xrebld IS NOT NULL AND g_xreb_d[g_detail_idx].xreb001 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb002 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb005 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb006 IS NOT NULL AND g_xreb_d[g_detail_idx].xreb007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xreb_d[g_detail_idx].xrebld != g_xreb_d_t.xrebld OR g_xreb_d[g_detail_idx].xreb001 != g_xreb_d_t.xreb001 OR g_xreb_d[g_detail_idx].xreb002 != g_xreb_d_t.xreb002 OR g_xreb_d[g_detail_idx].xreb005 != g_xreb_d_t.xreb005 OR g_xreb_d[g_detail_idx].xreb006 != g_xreb_d_t.xreb006 OR g_xreb_d[g_detail_idx].xreb007 != g_xreb_d_t.xreb007)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xreb_t WHERE "||"xrebent = '" ||g_enterprise|| "' AND "||"xrebld = '"||g_xreb_d[g_detail_idx].xrebld ||"' AND "|| "xreb001 = '"||g_xreb_d[g_detail_idx].xreb001 ||"' AND "|| "xreb002 = '"||g_xreb_d[g_detail_idx].xreb002 ||"' AND "|| "xreb005 = '"||g_xreb_d[g_detail_idx].xreb005 ||"' AND "|| "xreb006 = '"||g_xreb_d[g_detail_idx].xreb006 ||"' AND "|| "xreb007 = '"||g_xreb_d[g_detail_idx].xreb007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.c.page1.glab005" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_xreb_d[l_ac].glab005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_glac002()                                #呼叫開窗

            LET g_xreb_d[l_ac].glab005 = g_qryparam.return1              

            DISPLAY g_xreb_d[l_ac].glab005 TO glab005              #

            NEXT FIELD glab005                          #返回原欄位

]]>
</point>
  <point name="main.memo" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.import" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="free_style.variable" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="">
<![CDATA[#單身 type 宣告
 TYPE type_g_xreb_d RECORD
   xreb011_k         LIKE xreb_t.xreb011, 
   xreb012_k         LIKE xreb_t.xreb012, 
   xreb010_k         LIKE xreb_t.xreb010, 
   xreb015_k         LIKE xreb_t.xreb015, 
   xreb018_k         LIKE xreb_t.xreb018, 
   xreb019_k         LIKE xreb_t.xreb019,
   glab005           LIKE type_t.chr500, 
   xreb116           LIKE type_t.chr500, 
   xreb011           LIKE type_t.chr500, 
   xreb011_e         LIKE type_t.chr500, 
   xreb012           LIKE type_t.chr500, 
   xreb012_e         LIKE type_t.chr500, 
   xreb010           LIKE type_t.chr500, 
   xreb010_e         LIKE type_t.chr500, 
   xreb015           LIKE type_t.chr500,
   xreb015_e         LIKE type_t.chr500, 
   xreb018           LIKE type_t.chr500, 
   xreb018_e         LIKE type_t.chr500, 
   xreb019           LIKE type_t.chr500, 
   xreb019_e         LIKE type_t.chr500
       END RECORD

#模組變數(Module Variables)
DEFINE g_xreb_d          DYNAMIC ARRAY OF type_g_xreb_d
DEFINE g_xreb_d_t        type_g_xreb_d

DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
DEFINE g_wc_table           STRING
DEFINE g_xrebld             LIKE xreb_t.xrebld
DEFINE g_xreb001            LIKE xreb_t.xreb001
DEFINE g_xreb002            LIKE xreb_t.xreb002]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="s" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="function.axrt920_02" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="" order="1">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION axrt920_02(p_xrebld,p_xreb001,p_xreb002)
   DEFINE p_xrebld        LIKE xreb_t.xrebld
   DEFINE p_xreb001       LIKE xreb_t.xreb001
   DEFINE p_xreb002       LIKE xreb_t.xreb002

   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
   
   LET g_wc2 = " xrebld = '",p_xrebld,"' AND xreb001 = '",p_xreb001,"' AND xreb002 = '",p_xreb002,"'"
   LET g_xrebld  = p_xrebld
   LET g_xreb001 = p_xreb001
   LET g_xreb002 = p_xreb002
   
   #畫面開啟 (identifier)
   OPEN WINDOW w_axrt920_02 WITH FORM cl_ap_formpath("axr","axrt920_02")
   
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   #程式初始化
   CALL axrt920_02_init()   
 
   #進入選單 Menu (="N")
   CALL axrt920_02_ui_dialog() 
 
   #畫面關閉
   CLOSE WINDOW w_axrt920_02

   LET g_action_choice = ""

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_init" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="" order="2">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_init()
   LET g_error_show = 1

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_ui_dialog" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="" order="3">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING

   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1

   WHILE TRUE
   
      CALL axrt920_02_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_xreb_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
      
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 

         END DISPLAY

         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            NEXT FIELD CURRENT

         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               EXIT DIALOG
            END IF

         ON ACTION modify
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL axrt920_02_modify()
               EXIT DIALOG
            END IF

         ON ACTION modify_detail
 
            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL axrt920_02_modify()
               EXIT DIALOG
            END IF

         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG

         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG

         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG

      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF

   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION]]>
</point>
  <point name="function.axrt920_02_modify" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="" order="4">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_modify()
   DEFINE l_cmd                  LIKE type_t.chr1
   DEFINE l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE l_count                LIKE type_t.num5
   DEFINE l_i                    LIKE type_t.num5
   DEFINE ls_return              STRING
   DEFINE l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE l_fields               DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE li_reproduce           LIKE type_t.num5
   DEFINE li_reproduce_target    LIKE type_t.num5
   DEFINE lb_reproduce           BOOLEAN
   DEFINE l_xrebld               LIKE xreb_t.xrebld
   DEFINE l_xreb001              LIKE xreb_t.xreb001
   DEFINE l_xreb002              LIKE xreb_t.xreb002

   LET g_action_choice = ""

   LET g_qryparam.state = "i"

   LET g_forupd_sql = "SELECT xrebld,xreb001,xreb002 FROM xreb_t 
                       WHERE xrebent=? AND xrebld=? AND xreb001=? AND xreb002=? FOR UPDATE"

   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE axrt920_02_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR

   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE

   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_xreb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = FALSE,DELETE ROW = FALSE,APPEND ROW = FALSE)

         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xreb_d.getLength()+1) 
              LET g_insert = 'N' 
            END IF 
            CALL axrt920_02_b_fill(g_wc2)
            LET g_detail_cnt = g_xreb_d.getLength()

         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_xreb_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_xreb_d.getLength()
            
            IF g_detail_cnt >= l_ac AND g_xreb_d[l_ac].glab005 IS NOT NULL THEN
               LET l_cmd='u'
               LET g_xreb_d_t.* = g_xreb_d[l_ac].*  #BACKUP
               OPEN axrt920_02_bcl USING g_enterprise,g_xrebld,g_xreb001,g_xreb002
            ELSE
               RETURN
            END IF
            
         BEFORE INSERT

         AFTER INSERT

         BEFORE DELETE                            #是否取消單身

         AFTER DELETE 

         #---------------------<  Detail: page1  >---------------------
         #----<<xrebld_desc>>----
         #----<<xreb011>>----
         BEFORE FIELD xreb011_e
            LET g_xreb_d[l_ac].xreb011_e = g_xreb_d[l_ac].xreb011
            DISPLAY g_xreb_d[l_ac].xreb011_e TO s_detail1.xreb011_e

         AFTER FIELD xreb011_e
            IF NOT cl_null(g_xreb_d[l_ac].xreb011_e) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_xreb_d[l_ac].xreb011_e
               LET g_chkparam.arg2 = ' '
               IF NOT cl_chk_exist("v_ooef001_14") THEN
                  LET g_xreb_d[l_ac].xreb011_e = g_xreb_d_t.xreb011
                  NEXT FIELD CURRENT
               END IF
               LET g_xreb_d[l_ac].xreb011 = g_xreb_d[l_ac].xreb011_e
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xreb_d[l_ac].xreb011_e
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xreb_d[l_ac].xreb011_e = g_xreb_d[l_ac].xreb011_e,'(', g_rtn_fields[1] , ')'

         #----<<xreb012>>----
         BEFORE FIELD xreb012_e
            LET g_xreb_d[l_ac].xreb012_e = g_xreb_d[l_ac].xreb012
            DISPLAY g_xreb_d[l_ac].xreb012_e TO s_detail1.xreb012_e

         AFTER FIELD xreb012_e
            IF NOT cl_null(g_xreb_d[l_ac].xreb012_e) THEN
               INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xreb_d[l_ac].xreb012_e
                  LET g_chkparam.arg2 = g_today
                  IF NOT cl_chk_exist("v_ooeg001_4") THEN
                  LET g_xreb_d[l_ac].xreb012_e = g_xreb_d_t.xreb012
                  NEXT FIELD CURRENT
               END IF
               LET g_xreb_d[l_ac].xreb012 = g_xreb_d[l_ac].xreb012_e
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xreb_d[l_ac].xreb012_e
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xreb_d[l_ac].xreb012_e = g_xreb_d[l_ac].xreb012_e,'(', g_rtn_fields[1] , ')'

         #----<<xreb010>>----
         BEFORE FIELD xreb010_e
            LET g_xreb_d[l_ac].xreb010_e = g_xreb_d[l_ac].xreb010
            DISPLAY g_xreb_d[l_ac].xreb010_e TO s_detail1.xreb010_e

         AFTER FIELD xreb010_e
            IF NOT cl_null(g_xreb_d[l_ac].xreb010_e) THEN 
               IF NOT ap_chk_isExist(g_xreb_d[l_ac].xreb010_e,"SELECT COUNT(*) FROM ooef_t WHERE "||"ooefent = '" ||g_enterprise|| "' AND "||"ooef001 = ? ",'aoo-00090',1) THEN 
                  LET g_xreb_d[l_ac].xreb010_e = g_xreb_d_t.xreb010
                  NEXT FIELD CURRENT
               END IF  
               IF NOT ap_chk_isExist(g_xreb_d[l_ac].xreb010_e,"SELECT COUNT(*) FROM ooef_t WHERE "||"ooefent = '" ||g_enterprise|| "' AND "||"ooef001 = ? AND ooefstus = 'Y' ",'aoo-00091',1) THEN 
                  LET g_xreb_d[l_ac].xreb010_e = g_xreb_d_t.xreb010
                  NEXT FIELD CURRENT
               END IF  
               LET g_xreb_d[l_ac].xreb010 = g_xreb_d[l_ac].xreb010_e               
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xreb_d[l_ac].xreb010
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xreb_d[l_ac].xreb010_e = g_xreb_d[l_ac].xreb010,'(', g_rtn_fields[1] , ')'

         #----<<xreb015>>----
         BEFORE FIELD xreb015_e
            LET g_xreb_d[l_ac].xreb015_e = g_xreb_d[l_ac].xreb015
            DISPLAY g_xreb_d[l_ac].xreb015_e TO s_detail1.xreb015_e

         AFTER FIELD xreb015_e
            IF NOT cl_null(g_xreb_d[l_ac].xreb015_e) THEN 
               IF NOT ap_chk_isExist(g_xreb_d[l_ac].xreb015_e,"SELECT COUNT(*) FROM rtax_t WHERE "||"rtaxent = '" ||g_enterprise|| "' AND "||"rtax001 = ? ",'aoo-00137',1) THEN 
                  LET g_xreb_d[l_ac].xreb015_e = g_xreb_d_t.xreb015
                  NEXT FIELD CURRENT
               END IF  
               IF NOT ap_chk_isExist(g_xreb_d[l_ac].xreb015_e,"SELECT COUNT(*) FROM rtax_t WHERE "||"rtaxent = '" ||g_enterprise|| "' AND "||"rtax001 = ? AND rtaxstus = 'Y' ",'art-00048',1) THEN 
                  LET g_xreb_d[l_ac].xreb015_e = g_xreb_d_t.xreb015
                  NEXT FIELD CURRENT
               END IF   
               LET g_xreb_d[l_ac].xreb015 = g_xreb_d[l_ac].xreb015_e                
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xreb_d[l_ac].xreb015_e
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xreb_d[l_ac].xreb015_e = g_xreb_d[l_ac].xreb015,'(', g_rtn_fields[1] , ')'

         #----<<xreb018>>----
         BEFORE FIELD xreb018_e
            LET g_xreb_d[l_ac].xreb018_e = g_xreb_d[l_ac].xreb018
            DISPLAY g_xreb_d[l_ac].xreb018_e TO s_detail1.xreb018_e

         AFTER FIELD xreb018_e
            LET g_xreb_d[l_ac].xreb018 = g_xreb_d[l_ac].xreb018_e
            LET g_xreb_d[l_ac].xreb018_e = g_xreb_d[l_ac].xreb018,'( )'

         #----<<xreb019>>----
         BEFORE FIELD xreb019_e
            LET g_xreb_d[l_ac].xreb019_e = g_xreb_d[l_ac].xreb019
            DISPLAY g_xreb_d[l_ac].xreb019_e TO s_detail1.xreb019_e

         AFTER FIELD xreb019_e
            LET g_xreb_d[l_ac].xreb019 = g_xreb_d[l_ac].xreb019_e
            LET g_xreb_d[l_ac].xreb019_e = g_xreb_d[l_ac].xreb019,'( )'

         ON ACTION controlp INFIELD xreb010_e
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xreb_d[l_ac].xreb010_e      #給予default值
            #給予arg
           #LET g_qryparam.arg1 = "" #
            CALL q_ooef001()                                        #呼叫開窗
            LET g_xreb_d[l_ac].xreb010 = g_qryparam.return1              
            DISPLAY g_xreb_d[l_ac].xreb010 TO xreb010_e
            NEXT FIELD xreb010_e                                    #返回原欄位

         ON ACTION controlp INFIELD xreb011_e
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xreb_d[l_ac].xreb011_e      #給予default值
            LET g_qryparam.where = " EXISTS (SELECT ooee001 FROM ooee_t WHERE ooee001 = ooef001 AND ooee002 = '2'  AND ooee003 = 'H' AND ooeeent = ooefent)"
            #給予arg
           #LET g_qryparam.arg1 = "" #
            CALL q_ooef001()                                        #呼叫開窗
            LET g_xreb_d[l_ac].xreb011 = g_qryparam.return1              
            DISPLAY g_xreb_d[l_ac].xreb011 TO s_detail1[l_ac].xreb011_e
            NEXT FIELD xreb011_e                                    #返回原欄位

         ON ACTION controlp INFIELD xreb012_e
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xreb_d[l_ac].xreb012_e      #給予default值
            #給予arg
           #LET g_qryparam.arg1 = "" #
            CALL q_ooeg001_2()                                      #呼叫開窗
            LET g_xreb_d[l_ac].xreb012 = g_qryparam.return1              
            DISPLAY g_xreb_d[l_ac].xreb012 TO s_detail1[l_ac].xreb012_e
            NEXT FIELD xreb012_e                                    #返回原欄位

         ON ACTION controlp INFIELD xreb015_e
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_xreb_d[l_ac].xreb015_e      #給予default值
            #給予arg
           #LET g_qryparam.arg1 = "" #
            CALL q_rtax001()                                        #呼叫開窗
            LET g_xreb_d[l_ac].xreb015 = g_qryparam.return1              
            DISPLAY g_xreb_d[l_ac].xreb015 TO s_detail1[l_ac].xreb015_e
            NEXT FIELD xreb015_e                                    #返回原欄位

         ON ACTION controlp INFIELD xreb018_e

         ON ACTION controlp INFIELD xreb019_e

         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xreb_d[l_ac].* = g_xreb_d_t.*
               CLOSE axrt920_02_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            CALL axrt920_02_update()

         AFTER ROW
            CALL s_transaction_end('Y','0')

         AFTER INPUT

         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xreb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xreb_d.getLength()+1
            
      END INPUT

      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD xreb011_e
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 

   CLOSE axrt920_02_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION]]>
</point>
  <point name="function.axrt920_02_b_fill" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="" order="6">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_b_fill(p_wc2)
   DEFINE p_wc2           STRING
   DEFINE l_8318_11       LIKE gzcb_t.gzcb002      #重評價匯兌收益科目
   DEFINE l_8318_12       LIKE gzcb_t.gzcb002      #重評價匯兌損失科目

   SELECT glab005 INTO l_8318_11 FROM glab_t WHERE glabent = g_enterprise
      AND glab002 = '8318'
      AND glab003 = '8318_11'

   SELECT glab005 INTO l_8318_12 FROM glab_t WHERE glabent = g_enterprise
      AND glab002 = '8318'
      AND glab003 = '8318_12'

   LET g_sql = "  SELECT xreb011,xreb012,xreb010,xreb015,xreb018,xreb019,'',SUM(xreb116),",
               "         xreb011,xreb012,xreb010,xreb015,xreb018,xreb019 FROM xreb_t ",
               "   WHERE xrebent= ? AND ", p_wc2,
               "GROUP BY xreb011,xreb012,xreb010,xreb015,xreb018,xreb019"

   PREPARE axrt920_02_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR axrt920_02_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_xreb_d.clear()

   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_xreb_d[l_ac].xreb011_k,g_xreb_d[l_ac].xreb012_k,g_xreb_d[l_ac].xreb010_k,
                            g_xreb_d[l_ac].xreb015_k,g_xreb_d[l_ac].xreb018_k,g_xreb_d[l_ac].xreb019_k,
                            g_xreb_d[l_ac].glab005,  g_xreb_d[l_ac].xreb116,  g_xreb_d[l_ac].xreb011,
                            g_xreb_d[l_ac].xreb012,  g_xreb_d[l_ac].xreb010,  g_xreb_d[l_ac].xreb015,
                            g_xreb_d[l_ac].xreb018,  g_xreb_d[l_ac].xreb019
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      IF g_xreb_d[l_ac].xreb116 > 0 THEN
         LET g_xreb_d[l_ac].glab005 = l_8318_11   #匯贏
      ELSE
         LET g_xreb_d[l_ac].glab005 = l_8318_12   #匯損
         LET g_xreb_d[l_ac].xreb116 = g_xreb_d[l_ac].xreb116 * -1
      END IF

      CALL axrt920_02_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec THEN
      IF g_error_show = 1 THEN
         CALL cl_err("xreb_t",9035,1)
      END IF
   END IF 
   LET g_error_show = 0

   CALL g_xreb_d.deleteElement(g_xreb_d.getLength())   
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_xreb_d.getLength()
 
   END FOR

   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE axrt920_02_pb

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_detail_show" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="" order="5">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL axrt920_02_detail_show())
#                  RETURNING ---
# Input parameter: 
# Return code....: 
# Date & Author..: 2014/04/25 By zhangwei
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_detail_show()
   DEFINE l_glaa004         LIKE glaa_t.glaa004

   #匯差科目
   SELECT glaa004 INTO l_glaa004 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xrebld
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xreb_d[l_ac].glab005
   CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001 = '"||l_glaa004||"' AND glacl002 = ? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xreb_d[l_ac].glab005 = g_xreb_d[l_ac].glab005,'(', g_rtn_fields[1] , ')'

   #部門
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xreb_d[l_ac].xreb011
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xreb_d[l_ac].xreb011_e = g_xreb_d[l_ac].xreb011,'(', g_rtn_fields[1] , ')'

   #責任中心
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xreb_d[l_ac].xreb012
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xreb_d[l_ac].xreb012_e = g_xreb_d[l_ac].xreb012,'(', g_rtn_fields[1] , ')'

   #核算組織
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xreb_d[l_ac].xreb010
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xreb_d[l_ac].xreb010_e = g_xreb_d[l_ac].xreb010,'(', g_rtn_fields[1] , ')'

   #產品類別
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_xreb_d[l_ac].xreb015
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_xreb_d[l_ac].xreb015_e = g_xreb_d[l_ac].xreb015,'(', g_rtn_fields[1] , ')'

   #專案代號
   LET g_xreb_d[l_ac].xreb018_e = g_xreb_d[l_ac].xreb018,'( )'
   #WBS編號
   LET g_xreb_d[l_ac].xreb019_e = g_xreb_d[l_ac].xreb019,'( )'

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_set_entry_b" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="" order="7">
<![CDATA[
################################################################################
# Descriptions...: 開啟欄位
# Memo...........:
# Usage..........: CALL axrt920_02_set_entry_b(p_cmd)
#                  RETURNING ---
# Input parameter: p_cmd          狀態
# Date & Author..: 2014/04/25 By zhangwei
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_set_no_entry_b" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="" order="8">
<![CDATA[
################################################################################
# Descriptions...: 關閉欄位
# Memo...........:
# Usage..........: CALL axrt920_02_set_no_entry_b(p_cmd)
#                  RETURNING ---
# Input parameter: p_cmd          狀態
# Date & Author..: 2014/04/25 By zhangwei
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1

END FUNCTION]]>
</point>
  <point name="function.axrt920_02_update" cite_std="N" status="u" ver="" src="s" new="Y" cite_ver="" order="9">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrt920_02_update()
   DEFINE l_sql           STRING
   DEFINE l_key1,l_key2   STRING
   DEFINE l_key3,l_key4   STRING
   DEFINE l_key5,l_key6   STRING

   IF g_xreb_d[l_ac].xreb010_k IS NULL THEN LET l_key1 = "IS NULL" ELSE LET l_key1 = "= '",g_xreb_d[l_ac].xreb010_k,"'" END IF
   IF g_xreb_d[l_ac].xreb011_k IS NULL THEN LET l_key2 = "IS NULL" ELSE LET l_key2 = "= '",g_xreb_d[l_ac].xreb011_k,"'" END IF
   IF g_xreb_d[l_ac].xreb012_k IS NULL THEN LET l_key3 = "IS NULL" ELSE LET l_key3 = "= '",g_xreb_d[l_ac].xreb012_k,"'" END IF
   IF g_xreb_d[l_ac].xreb015_k IS NULL THEN LET l_key4 = "IS NULL" ELSE LET l_key4 = "= '",g_xreb_d[l_ac].xreb015_k,"'" END IF
   IF g_xreb_d[l_ac].xreb018_k IS NULL THEN LET l_key5 = "IS NULL" ELSE LET l_key5 = "= '",g_xreb_d[l_ac].xreb018_k,"'" END IF
   IF g_xreb_d[l_ac].xreb019_k IS NULL THEN LET l_key6 = "IS NULL" ELSE LET l_key6 = "= '",g_xreb_d[l_ac].xreb019_k,"'" END IF

   LET l_sql = " UPDATE xreb_t SET xreb010 = '",g_xreb_d[l_ac].xreb010,"',",
               "                   xreb011 = '",g_xreb_d[l_ac].xreb011,"',",
               "                   xreb012 = '",g_xreb_d[l_ac].xreb012,"',",
               "                   xreb015 = '",g_xreb_d[l_ac].xreb015,"',",
               "                   xreb018 = '",g_xreb_d[l_ac].xreb018,"',",
               "                   xreb019 = '",g_xreb_d[l_ac].xreb019,"'",
               " WHERE xrebent = '",g_enterprise,"'",
               "   AND xrebld  = '",g_xrebld,"'",
               "   AND xreb001 = '",g_xreb001,"'",
               "   AND xreb002 = '",g_xreb002,"'",
               "   AND xreb010 ",l_key1,
               "   AND xreb011 ",l_key2,
               "   AND xreb012 ",l_key3,
               "   AND xreb015 ",l_key4,
               "   AND xreb018 ",l_key5,
               "   AND xreb019 ",l_key6
   PREPARE axrt920_02_update FROM l_sql
   EXECUTE axrt920_02_update

END FUNCTION]]>
</point>
  <section id="axrt920_02.b_fill" ver="3" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axrt920_02_b_fill(p_wc2)              #BODY FILL UP
   DEFINE p_wc2           STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE xreb001,xreb002,xreb005,xreb006,xreb007,xrebld,'','',xreb116,xreb011, 
       xreb012,xreb010,xreb015,xreb018,xreb019 FROM xreb_t",
               "",
               " WHERE xrebent= ? AND 1=1 AND ", p_wc2 
    
   LET g_sql = g_sql, #,cl_get_extra_cond('zzuser', 'zzgrup') 
                      " ORDER BY xreb_t.xrebld,xreb_t.xreb001,xreb_t.xreb002,xreb_t.xreb005,xreb_t.xreb006,xreb_t.xreb007"
  
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE axrt920_02_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR axrt920_02_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_xreb_d.clear()
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_xreb_d[l_ac].xreb001,g_xreb_d[l_ac].xreb002,g_xreb_d[l_ac].xreb005,g_xreb_d[l_ac].xreb006, 
       g_xreb_d[l_ac].xreb007,g_xreb_d[l_ac].xrebld,g_xreb_d[l_ac].xrebld_desc,g_xreb_d[l_ac].glab005, 
       g_xreb_d[l_ac].xreb116,g_xreb_d[l_ac].xreb011,g_xreb_d[l_ac].xreb012,g_xreb_d[l_ac].xreb010,g_xreb_d[l_ac].xreb015, 
       g_xreb_d[l_ac].xreb018,g_xreb_d[l_ac].xreb019
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL axrt920_02_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec THEN
      IF g_error_show = 1 THEN
         CALL cl_err("xreb_t",9035,1)
      END IF
   END IF 
   LET g_error_show = 0
   
 
  
   
   CALL g_xreb_d.deleteElement(g_xreb_d.getLength())   
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_xreb_d.getLength()
 
   END FOR
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE axrt920_02_pb
   
END FUNCTION
]]>
</section>
  <section id="axrt920_02.default_search" ver="1" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION axrt920_02_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " xrebld = '", g_argv[1], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " xreb001 = ", g_argv[02], " AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " xreb002 = ", g_argv[03], " AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " xreb005 = ", g_argv[04], " AND "
   END IF
   IF NOT cl_null(g_argv[05]) THEN
      LET ls_wc = ls_wc, " xreb006 = ", g_argv[05], " AND "
   END IF
   IF NOT cl_null(g_argv[06]) THEN
      LET ls_wc = ls_wc, " xreb007 = ", g_argv[06], " AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
</section>
  <section id="axrt920_02.delete" ver="1" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION axrt920_02_delete()
   DEFINE li_ac LIKE type_t.num5
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   IF NOT cl_ask_delete() THEN
      LET INT_FLAG = 1 #不刪除
   ELSE
      LET INT_FLAG = 0 #要刪除
   END IF
   
   LET li_ac = ARR_CURR()
   
   CALL s_transaction_begin()  
 
   #add-point:delete段刪除前
   {<point name="delete.b_delete" mark="Y"/>}
   #end add-point 
   DELETE FROM xreb_t 
         WHERE xrebld = g_xreb_d[li_ac].xrebld
           AND xreb001 = g_xreb_d[li_ac].xreb001
           AND xreb002 = g_xreb_d[li_ac].xreb002
           AND xreb005 = g_xreb_d[li_ac].xreb005
           AND xreb006 = g_xreb_d[li_ac].xreb006
           AND xreb007 = g_xreb_d[li_ac].xreb007
 
   #add-point:delete段刪除中
   {<point name="delete.m_delete"/>}
   #end add-point 
   IF SQLCA.sqlcode THEN
      CALL cl_err("xreb_t",SQLCA.sqlcode,1) 
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
   #add-point:delete段刪除後
   {<point name="delete.a_delete"/>}
   #end add-point 
   
END FUNCTION
]]>
</section>
  <section id="axrt920_02.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION axrt920_02_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "xreb_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM xreb_t
       WHERE xrebent = g_enterprise AND
         xrebld = ps_keys_bak[1] AND xreb001 = ps_keys_bak[2] AND xreb002 = ps_keys_bak[3] AND xreb005 = ps_keys_bak[4] AND xreb006 = ps_keys_bak[5] AND xreb007 = ps_keys_bak[6]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
</section>
  <section id="axrt920_02.description" ver="16" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000015
#+ 
#+ Filename...: axrt920_02
#+ Description: ...
#+ Creator....: 01727(2014/04/24)
#+ Modifier...: 01727(2014/04/24)
#+ Buildtype..: 應用 p00 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="axrt920_02.detail_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION axrt920_02_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="axrt920_02.free_style_variable" ver="1" status="" src="s">
<![CDATA[#add-point:free_style模組變數(Module Variable)
{<point name="free_style.variable"/>}
#end add-point
]]>
</section>
  <section id="axrt920_02.global" ver="7" status="" src="s">
<![CDATA[#add-point:註解編寫項目
{<point name="main.memo" />}
#end add-point
 
IMPORT os
#add-point:增加匯入項目
{<point name="main.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
]]>
</section>
  <section id="axrt920_02.global_variable" ver="1" status="" src="s">
<![CDATA[#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
]]>
</section>
  <section id="axrt920_02.init" ver="1" status="" src="s">
<![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION axrt920_02_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL axrt920_02_default_search()
   
END FUNCTION
]]>
</section>
  <section id="axrt920_02.insert" ver="1" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION axrt920_02_insert()
   DEFINE li_ac LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point 
   
   #輸入前動作  
   LET li_ac = l_ac 
   LET l_ac = 1   
   LET g_before_input_done = FALSE                                        
   CALL axrt920_02_set_entry_b("a")  
   
   CALL axrt920_02_set_no_entry_b("a")                                          
   LET g_before_input_done = TRUE                                            
   
   #append欄位         
      
 
 
   
   #add-point:insert段before insert
   {<point name="insert.before_insert"/>}
   #end add-point  
 
   #資料輸入
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM) 
      INPUT g_xreb_d[1].* FROM s_detail1[1].*
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         BEFORE INPUT
         
      END INPUT
      
 
      
      BEFORE DIALOG 
   
   END DIALOG
   
   #輸入後動作
   IF INT_FLAG THEN
      CALL cl_err("",9001,0)
      LET INT_FLAG = 1
      RETURN
   END IF
   
   CALL s_transaction_begin()                    
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="axrt920_02.insert_b" ver="1" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION axrt920_02_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "xreb_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO xreb_t
                  (xrebent,
                   xrebld,xreb001,xreb002,xreb005,xreb006,xreb007
                   ,xreb116,xreb011,xreb012,xreb010,xreb015,xreb018,xreb019) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6]
                   ,g_xreb_d[l_ac].xreb116,g_xreb_d[l_ac].xreb011,g_xreb_d[l_ac].xreb012,g_xreb_d[l_ac].xreb010, 
                       g_xreb_d[l_ac].xreb015,g_xreb_d[l_ac].xreb018,g_xreb_d[l_ac].xreb019)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("xreb_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
</section>
  <section id="axrt920_02.link_b" ver="1" status="" src="s">
<![CDATA[#+ 連動單身idx
PRIVATE FUNCTION axrt920_02_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
</section>
  <section id="axrt920_02.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION axrt920_02_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL axrt920_02_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "xreb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axrt920_02_bcl USING g_enterprise,
                                       g_xreb_d[g_detail_idx].xrebld,g_xreb_d[g_detail_idx].xreb001, 
                                           g_xreb_d[g_detail_idx].xreb002,g_xreb_d[g_detail_idx].xreb005, 
                                           g_xreb_d[g_detail_idx].xreb006,g_xreb_d[g_detail_idx].xreb007 

                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("axrt920_02_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="axrt920_02.main" ver="1" status="" src="s">
<![CDATA[#+ 此段落由子樣板a27產生
#+ 資料輸入
PUBLIC FUNCTION axrt920_02(--)
   #add-point:main段變數傳入
   {<point name="main.get_var"/>}
   #end add-point
   )
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" mark="Y"/>}
   #end add-point
   LET g_forupd_sql = ""
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)   #轉換不同資料庫語法
   DECLARE axrt920_02_cl CURSOR FROM g_forupd_sql     # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE ",
               " FROM ",
               " WHERE  "
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axrt920_02_master_referesh FROM g_sql
   
   #畫面開啟 (identifier)
   OPEN WINDOW w_axrt920_02 WITH FORM cl_ap_formpath("axr","axrt920_02")
   
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   #程式初始化
   CALL axrt920_02_init()   
 
   #進入選單 Menu (="N")
   CALL axrt920_02_ui_dialog() 
 
   #畫面關閉
   CLOSE WINDOW w_axrt920_02
 
   CLOSE axrt920_02_cl
   
   
 
   #add-point:離開前
   {<point name="main.exit" />}
   #end add-point
 
END FUNCTION
 
 
]]>
</section>
  <section id="axrt920_02.modify" ver="4" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION axrt920_02_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
 
   #add-point:modify段define_sql
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xreb001,xreb002,xreb005,xreb006,xreb007,xrebld,'','',xreb116,xreb011,xreb012, 
       xreb010,xreb015,xreb018,xreb019 FROM xreb_t WHERE xrebent=? AND xrebld=? AND xreb001=? AND xreb002=?  
       AND xreb005=? AND xreb006=? AND xreb007=? FOR UPDATE"
   #add-point:modify段define_sql
   {<point name="modify.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE axrt920_02_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
   
 
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_xreb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xreb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axrt920_02_b_fill(g_wc2)
            LET g_detail_cnt = g_xreb_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_xreb_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_xreb_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_xreb_d[l_ac].xrebld IS NOT NULL
               AND g_xreb_d[l_ac].xreb001 IS NOT NULL
               AND g_xreb_d[l_ac].xreb002 IS NOT NULL
               AND g_xreb_d[l_ac].xreb005 IS NOT NULL
               AND g_xreb_d[l_ac].xreb006 IS NOT NULL
               AND g_xreb_d[l_ac].xreb007 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xreb_d_t.* = g_xreb_d[l_ac].*  #BACKUP
               IF NOT axrt920_02_lock_b("xreb_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axrt920_02_bcl INTO g_xreb_d[l_ac].xreb001,g_xreb_d[l_ac].xreb002,g_xreb_d[l_ac].xreb005, 
                      g_xreb_d[l_ac].xreb006,g_xreb_d[l_ac].xreb007,g_xreb_d[l_ac].xrebld,g_xreb_d[l_ac].xrebld_desc, 
                      g_xreb_d[l_ac].glab005,g_xreb_d[l_ac].xreb116,g_xreb_d[l_ac].xreb011,g_xreb_d[l_ac].xreb012, 
                      g_xreb_d[l_ac].xreb010,g_xreb_d[l_ac].xreb015,g_xreb_d[l_ac].xreb018,g_xreb_d[l_ac].xreb019 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_xreb_d_t.xrebld,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axrt920_02_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xreb_d_t.* TO NULL
            INITIALIZE g_xreb_d[l_ac].* TO NULL 
            
            LET g_xreb_d_t.* = g_xreb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axrt920_02_set_entry_b("a")
            CALL axrt920_02_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xreb_d[li_reproduce_target].* = g_xreb_d[li_reproduce].*
 
               LET g_xreb_d[g_xreb_d.getLength()].xrebld = NULL
               LET g_xreb_d[g_xreb_d.getLength()].xreb001 = NULL
               LET g_xreb_d[g_xreb_d.getLength()].xreb002 = NULL
               LET g_xreb_d[g_xreb_d.getLength()].xreb005 = NULL
               LET g_xreb_d[g_xreb_d.getLength()].xreb006 = NULL
               LET g_xreb_d[g_xreb_d.getLength()].xreb007 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xreb_t 
             WHERE xrebent = g_enterprise AND xrebld = g_xreb_d[l_ac].xrebld
                                       AND xreb001 = g_xreb_d[l_ac].xreb001
                                       AND xreb002 = g_xreb_d[l_ac].xreb002
                                       AND xreb005 = g_xreb_d[l_ac].xreb005
                                       AND xreb006 = g_xreb_d[l_ac].xreb006
                                       AND xreb007 = g_xreb_d[l_ac].xreb007
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xreb_d[g_detail_idx].xrebld
               LET gs_keys[2] = g_xreb_d[g_detail_idx].xreb001
               LET gs_keys[3] = g_xreb_d[g_detail_idx].xreb002
               LET gs_keys[4] = g_xreb_d[g_detail_idx].xreb005
               LET gs_keys[5] = g_xreb_d[g_detail_idx].xreb006
               LET gs_keys[6] = g_xreb_d[g_detail_idx].xreb007
               CALL axrt920_02_insert_b('xreb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_xreb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("xreb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axrt920_02_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (xrebld = '", g_xreb_d[l_ac].xrebld, "' "
                                  ," AND xreb001 = '", g_xreb_d[l_ac].xreb001, "' "
                                  ," AND xreb002 = '", g_xreb_d[l_ac].xreb002, "' "
                                  ," AND xreb005 = '", g_xreb_d[l_ac].xreb005, "' "
                                  ," AND xreb006 = '", g_xreb_d[l_ac].xreb006, "' "
                                  ," AND xreb007 = '", g_xreb_d[l_ac].xreb007, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_xreb_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_xreb_d.deleteElement(l_ac)
               NEXT FIELD xrebld
            END IF
            IF g_xreb_d[l_ac].xrebld IS NOT NULL
               AND g_xreb_d_t.xreb001 IS NOT NULL
               AND g_xreb_d_t.xreb002 IS NOT NULL
               AND g_xreb_d_t.xreb005 IS NOT NULL
               AND g_xreb_d_t.xreb006 IS NOT NULL
               AND g_xreb_d_t.xreb007 IS NOT NULL
 
               THEN     
            
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM xreb_t
                WHERE xrebent = g_enterprise AND 
                      xrebld = g_xreb_d_t.xrebld
                      AND xreb001 = g_xreb_d_t.xreb001
                      AND xreb002 = g_xreb_d_t.xreb002
                      AND xreb005 = g_xreb_d_t.xreb005
                      AND xreb006 = g_xreb_d_t.xreb006
                      AND xreb007 = g_xreb_d_t.xreb007
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("xreb_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE axrt920_02_bcl
               LET l_count = g_xreb_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xreb_d[g_detail_idx].xrebld
               LET gs_keys[2] = g_xreb_d[g_detail_idx].xreb001
               LET gs_keys[3] = g_xreb_d[g_detail_idx].xreb002
               LET gs_keys[4] = g_xreb_d[g_detail_idx].xreb005
               LET gs_keys[5] = g_xreb_d[g_detail_idx].xreb006
               LET gs_keys[6] = g_xreb_d[g_detail_idx].xreb007
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL axrt920_02_delete_b('xreb_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<xreb001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb001
            #add-point:BEFORE FIELD xreb001
            {<point name="input.b.page1.xreb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb001
            
            #add-point:AFTER FIELD xreb001
            {<point name="input.a.page1.xreb001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xreb001
            #add-point:ON CHANGE xreb001
            {<point name="input.g.page1.xreb001" />}
            #END add-point
 
         #----<<xreb002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb002
            #add-point:BEFORE FIELD xreb002
            {<point name="input.b.page1.xreb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb002
            
            #add-point:AFTER FIELD xreb002
            {<point name="input.a.page1.xreb002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xreb002
            #add-point:ON CHANGE xreb002
            {<point name="input.g.page1.xreb002" />}
            #END add-point
 
         #----<<xreb005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb005
            #add-point:BEFORE FIELD xreb005
            {<point name="input.b.page1.xreb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb005
            
            #add-point:AFTER FIELD xreb005
            {<point name="input.a.page1.xreb005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xreb005
            #add-point:ON CHANGE xreb005
            {<point name="input.g.page1.xreb005" />}
            #END add-point
 
         #----<<xreb006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb006
            #add-point:BEFORE FIELD xreb006
            {<point name="input.b.page1.xreb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb006
            
            #add-point:AFTER FIELD xreb006
            {<point name="input.a.page1.xreb006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xreb006
            #add-point:ON CHANGE xreb006
            {<point name="input.g.page1.xreb006" />}
            #END add-point
 
         #----<<xreb007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb007
            #add-point:BEFORE FIELD xreb007
            {<point name="input.b.page1.xreb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb007
            
            #add-point:AFTER FIELD xreb007
            {<point name="input.a.page1.xreb007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xreb007
            #add-point:ON CHANGE xreb007
            {<point name="input.g.page1.xreb007" />}
            #END add-point
 
         #----<<xrebld>>----
         #此段落由子樣板a02產生
         AFTER FIELD xrebld
            
            #add-point:AFTER FIELD xrebld
            {<point name="input.a.page1.xrebld" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD xrebld
            #add-point:BEFORE FIELD xrebld
            {<point name="input.b.page1.xrebld" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE xrebld
            #add-point:ON CHANGE xrebld
            {<point name="input.g.page1.xrebld" />}
            #END add-point
 
         #----<<xrebld_desc>>----
         #----<<glab005>>----
         #此段落由子樣板a02產生
         AFTER FIELD glab005
            
            #add-point:AFTER FIELD glab005
            {<point name="input.a.page1.glab005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glab005
            #add-point:BEFORE FIELD glab005
            {<point name="input.b.page1.glab005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glab005
            #add-point:ON CHANGE glab005
            {<point name="input.g.page1.glab005" />}
            #END add-point
 
         #----<<xreb116>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb116
            #add-point:BEFORE FIELD xreb116
            {<point name="input.b.page1.xreb116" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb116
            
            #add-point:AFTER FIELD xreb116
            {<point name="input.a.page1.xreb116" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xreb116
            #add-point:ON CHANGE xreb116
            {<point name="input.g.page1.xreb116" />}
            #END add-point
 
         #----<<xreb011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb011
            #add-point:BEFORE FIELD xreb011
            {<point name="input.b.page1.xreb011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb011
            
            #add-point:AFTER FIELD xreb011
            {<point name="input.a.page1.xreb011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xreb011
            #add-point:ON CHANGE xreb011
            {<point name="input.g.page1.xreb011" />}
            #END add-point
 
         #----<<xreb012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb012
            #add-point:BEFORE FIELD xreb012
            {<point name="input.b.page1.xreb012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb012
            
            #add-point:AFTER FIELD xreb012
            {<point name="input.a.page1.xreb012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xreb012
            #add-point:ON CHANGE xreb012
            {<point name="input.g.page1.xreb012" />}
            #END add-point
 
         #----<<xreb010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb010
            #add-point:BEFORE FIELD xreb010
            {<point name="input.b.page1.xreb010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb010
            
            #add-point:AFTER FIELD xreb010
            {<point name="input.a.page1.xreb010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xreb010
            #add-point:ON CHANGE xreb010
            {<point name="input.g.page1.xreb010" />}
            #END add-point
 
         #----<<xreb015>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb015
            #add-point:BEFORE FIELD xreb015
            {<point name="input.b.page1.xreb015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb015
            
            #add-point:AFTER FIELD xreb015
            {<point name="input.a.page1.xreb015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xreb015
            #add-point:ON CHANGE xreb015
            {<point name="input.g.page1.xreb015" />}
            #END add-point
 
         #----<<xreb018>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb018
            #add-point:BEFORE FIELD xreb018
            {<point name="input.b.page1.xreb018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb018
            
            #add-point:AFTER FIELD xreb018
            {<point name="input.a.page1.xreb018" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xreb018
            #add-point:ON CHANGE xreb018
            {<point name="input.g.page1.xreb018" />}
            #END add-point
 
         #----<<xreb019>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb019
            #add-point:BEFORE FIELD xreb019
            {<point name="input.b.page1.xreb019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb019
            
            #add-point:AFTER FIELD xreb019
            {<point name="input.a.page1.xreb019" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xreb019
            #add-point:ON CHANGE xreb019
            {<point name="input.g.page1.xreb019" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<xreb001>>----
         #Ctrlp:input.c.page1.xreb001
         ON ACTION controlp INFIELD xreb001
            #add-point:ON ACTION controlp INFIELD xreb001
            {<point name="input.c.page1.xreb001" />}
            #END add-point
 
         #----<<xreb002>>----
         #Ctrlp:input.c.page1.xreb002
         ON ACTION controlp INFIELD xreb002
            #add-point:ON ACTION controlp INFIELD xreb002
            {<point name="input.c.page1.xreb002" />}
            #END add-point
 
         #----<<xreb005>>----
         #Ctrlp:input.c.page1.xreb005
         ON ACTION controlp INFIELD xreb005
            #add-point:ON ACTION controlp INFIELD xreb005
            {<point name="input.c.page1.xreb005" />}
            #END add-point
 
         #----<<xreb006>>----
         #Ctrlp:input.c.page1.xreb006
         ON ACTION controlp INFIELD xreb006
            #add-point:ON ACTION controlp INFIELD xreb006
            {<point name="input.c.page1.xreb006" />}
            #END add-point
 
         #----<<xreb007>>----
         #Ctrlp:input.c.page1.xreb007
         ON ACTION controlp INFIELD xreb007
            #add-point:ON ACTION controlp INFIELD xreb007
            {<point name="input.c.page1.xreb007" />}
            #END add-point
 
         #----<<xrebld>>----
         #Ctrlp:input.c.page1.xrebld
         ON ACTION controlp INFIELD xrebld
            #add-point:ON ACTION controlp INFIELD xrebld
            {<point name="input.c.page1.xrebld" />}
            #END add-point
 
         #----<<xrebld_desc>>----
         #----<<glab005>>----
         #Ctrlp:input.c.page1.glab005
         ON ACTION controlp INFIELD glab005
            #add-point:ON ACTION controlp INFIELD glab005
            {<point name="input.c.page1.glab005" />}
            #END add-point
 
         #----<<xreb116>>----
         #Ctrlp:input.c.page1.xreb116
         ON ACTION controlp INFIELD xreb116
            #add-point:ON ACTION controlp INFIELD xreb116
            {<point name="input.c.page1.xreb116" />}
            #END add-point
 
         #----<<xreb011>>----
         #Ctrlp:input.c.page1.xreb011
         ON ACTION controlp INFIELD xreb011
            #add-point:ON ACTION controlp INFIELD xreb011
            {<point name="input.c.page1.xreb011" />}
            #END add-point
 
         #----<<xreb012>>----
         #Ctrlp:input.c.page1.xreb012
         ON ACTION controlp INFIELD xreb012
            #add-point:ON ACTION controlp INFIELD xreb012
            {<point name="input.c.page1.xreb012" />}
            #END add-point
 
         #----<<xreb010>>----
         #Ctrlp:input.c.page1.xreb010
         ON ACTION controlp INFIELD xreb010
            #add-point:ON ACTION controlp INFIELD xreb010
            {<point name="input.c.page1.xreb010" />}
            #END add-point
 
         #----<<xreb015>>----
         #Ctrlp:input.c.page1.xreb015
         ON ACTION controlp INFIELD xreb015
            #add-point:ON ACTION controlp INFIELD xreb015
            {<point name="input.c.page1.xreb015" />}
            #END add-point
 
         #----<<xreb018>>----
         #Ctrlp:input.c.page1.xreb018
         ON ACTION controlp INFIELD xreb018
            #add-point:ON ACTION controlp INFIELD xreb018
            {<point name="input.c.page1.xreb018" />}
            #END add-point
 
         #----<<xreb019>>----
         #Ctrlp:input.c.page1.xreb019
         ON ACTION controlp INFIELD xreb019
            #add-point:ON ACTION controlp INFIELD xreb019
            {<point name="input.c.page1.xreb019" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xreb_d[l_ac].* = g_xreb_d_t.*
               CLOSE axrt920_02_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_xreb_d[l_ac].xrebld,-263,1)
               LET g_xreb_d[l_ac].* = g_xreb_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE xreb_t SET (xreb001,xreb002,xreb005,xreb006,xreb007,xrebld,xreb116,xreb011,xreb012, 
                   xreb010,xreb015,xreb018,xreb019) = (g_xreb_d[l_ac].xreb001,g_xreb_d[l_ac].xreb002, 
                   g_xreb_d[l_ac].xreb005,g_xreb_d[l_ac].xreb006,g_xreb_d[l_ac].xreb007,g_xreb_d[l_ac].xrebld, 
                   g_xreb_d[l_ac].xreb116,g_xreb_d[l_ac].xreb011,g_xreb_d[l_ac].xreb012,g_xreb_d[l_ac].xreb010, 
                   g_xreb_d[l_ac].xreb015,g_xreb_d[l_ac].xreb018,g_xreb_d[l_ac].xreb019)
                WHERE xrebent = g_enterprise AND
                  xrebld = g_xreb_d_t.xrebld #項次   
                  AND xreb001 = g_xreb_d_t.xreb001  
                  AND xreb002 = g_xreb_d_t.xreb002  
                  AND xreb005 = g_xreb_d_t.xreb005  
                  AND xreb006 = g_xreb_d_t.xreb006  
                  AND xreb007 = g_xreb_d_t.xreb007  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xreb_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("xreb_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_xreb_d[g_detail_idx].xrebld
               LET gs_keys_bak[1] = g_xreb_d_t.xrebld
               LET gs_keys[2] = g_xreb_d[g_detail_idx].xreb001
               LET gs_keys_bak[2] = g_xreb_d_t.xreb001
               LET gs_keys[3] = g_xreb_d[g_detail_idx].xreb002
               LET gs_keys_bak[3] = g_xreb_d_t.xreb002
               LET gs_keys[4] = g_xreb_d[g_detail_idx].xreb005
               LET gs_keys_bak[4] = g_xreb_d_t.xreb005
               LET gs_keys[5] = g_xreb_d[g_detail_idx].xreb006
               LET gs_keys_bak[5] = g_xreb_d_t.xreb006
               LET gs_keys[6] = g_xreb_d[g_detail_idx].xreb007
               LET gs_keys_bak[6] = g_xreb_d_t.xreb007
               CALL axrt920_02_update_b('xreb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL axrt920_02_unlock_b("xreb_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
             #add-point:單身after row
            {<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_xreb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xreb_d.getLength()+1
            
      END INPUT
      
 
      
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD xreb001
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE axrt920_02_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
</section>
  <section id="axrt920_02.modify_detail_chk" ver="3" status="" src="s">
<![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION axrt920_02_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "xreb001"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
</section>
  <section id="axrt920_02.other_dialog" ver="1" status="" src="s">
<![CDATA[{<point name="other.dialog"/>}
]]>
</section>
  <section id="axrt920_02.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="axrt920_02.query" ver="4" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axrt920_02_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_xreb_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON xreb001,xreb002,xreb005,xreb006,xreb007,xrebld,glab005,xreb116,xreb011,xreb012, 
          xreb010,xreb015,xreb018,xreb019 
 
         FROM s_detail1[1].xreb001,s_detail1[1].xreb002,s_detail1[1].xreb005,s_detail1[1].xreb006,s_detail1[1].xreb007, 
             s_detail1[1].xrebld,s_detail1[1].glab005,s_detail1[1].xreb116,s_detail1[1].xreb011,s_detail1[1].xreb012, 
             s_detail1[1].xreb010,s_detail1[1].xreb015,s_detail1[1].xreb018,s_detail1[1].xreb019 
      
         
      
         #---------------------<  Detail: page1  >---------------------
         #----<<xreb001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb001
            #add-point:BEFORE FIELD xreb001
            {<point name="query.b.page1.xreb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb001
            
            #add-point:AFTER FIELD xreb001
            {<point name="query.a.page1.xreb001" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb001
         ON ACTION controlp INFIELD xreb001
            #add-point:ON ACTION controlp INFIELD xreb001
            {<point name="query.c.page1.xreb001" />}
            #END add-point
 
         #----<<xreb002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb002
            #add-point:BEFORE FIELD xreb002
            {<point name="query.b.page1.xreb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb002
            
            #add-point:AFTER FIELD xreb002
            {<point name="query.a.page1.xreb002" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb002
         ON ACTION controlp INFIELD xreb002
            #add-point:ON ACTION controlp INFIELD xreb002
            {<point name="query.c.page1.xreb002" />}
            #END add-point
 
         #----<<xreb005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb005
            #add-point:BEFORE FIELD xreb005
            {<point name="query.b.page1.xreb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb005
            
            #add-point:AFTER FIELD xreb005
            {<point name="query.a.page1.xreb005" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb005
         ON ACTION controlp INFIELD xreb005
            #add-point:ON ACTION controlp INFIELD xreb005
            {<point name="query.c.page1.xreb005" />}
            #END add-point
 
         #----<<xreb006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb006
            #add-point:BEFORE FIELD xreb006
            {<point name="query.b.page1.xreb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb006
            
            #add-point:AFTER FIELD xreb006
            {<point name="query.a.page1.xreb006" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb006
         ON ACTION controlp INFIELD xreb006
            #add-point:ON ACTION controlp INFIELD xreb006
            {<point name="query.c.page1.xreb006" />}
            #END add-point
 
         #----<<xreb007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb007
            #add-point:BEFORE FIELD xreb007
            {<point name="query.b.page1.xreb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb007
            
            #add-point:AFTER FIELD xreb007
            {<point name="query.a.page1.xreb007" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb007
         ON ACTION controlp INFIELD xreb007
            #add-point:ON ACTION controlp INFIELD xreb007
            {<point name="query.c.page1.xreb007" />}
            #END add-point
 
         #----<<xrebld>>----
         #Ctrlp:construct.c.page1.xrebld
         ON ACTION controlp INFIELD xrebld
            #add-point:ON ACTION controlp INFIELD xrebld
            {<point name="construct.c.page1.xrebld" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD xrebld
            #add-point:BEFORE FIELD xrebld
            {<point name="query.b.page1.xrebld" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xrebld
            
            #add-point:AFTER FIELD xrebld
            {<point name="query.a.page1.xrebld" />}
            #END add-point
            
 
         #----<<xrebld_desc>>----
         #----<<glab005>>----
         #Ctrlp:construct.c.page1.glab005
         ON ACTION controlp INFIELD glab005
            #add-point:ON ACTION controlp INFIELD glab005
            {<point name="construct.c.page1.glab005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glab005
            #add-point:BEFORE FIELD glab005
            {<point name="query.b.page1.glab005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glab005
            
            #add-point:AFTER FIELD glab005
            {<point name="query.a.page1.glab005" />}
            #END add-point
            
 
         #----<<xreb116>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb116
            #add-point:BEFORE FIELD xreb116
            {<point name="query.b.page1.xreb116" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb116
            
            #add-point:AFTER FIELD xreb116
            {<point name="query.a.page1.xreb116" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb116
         ON ACTION controlp INFIELD xreb116
            #add-point:ON ACTION controlp INFIELD xreb116
            {<point name="query.c.page1.xreb116" />}
            #END add-point
 
         #----<<xreb011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb011
            #add-point:BEFORE FIELD xreb011
            {<point name="query.b.page1.xreb011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb011
            
            #add-point:AFTER FIELD xreb011
            {<point name="query.a.page1.xreb011" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb011
         ON ACTION controlp INFIELD xreb011
            #add-point:ON ACTION controlp INFIELD xreb011
            {<point name="query.c.page1.xreb011" />}
            #END add-point
 
         #----<<xreb012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb012
            #add-point:BEFORE FIELD xreb012
            {<point name="query.b.page1.xreb012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb012
            
            #add-point:AFTER FIELD xreb012
            {<point name="query.a.page1.xreb012" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb012
         ON ACTION controlp INFIELD xreb012
            #add-point:ON ACTION controlp INFIELD xreb012
            {<point name="query.c.page1.xreb012" />}
            #END add-point
 
         #----<<xreb010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb010
            #add-point:BEFORE FIELD xreb010
            {<point name="query.b.page1.xreb010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb010
            
            #add-point:AFTER FIELD xreb010
            {<point name="query.a.page1.xreb010" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb010
         ON ACTION controlp INFIELD xreb010
            #add-point:ON ACTION controlp INFIELD xreb010
            {<point name="query.c.page1.xreb010" />}
            #END add-point
 
         #----<<xreb015>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb015
            #add-point:BEFORE FIELD xreb015
            {<point name="query.b.page1.xreb015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb015
            
            #add-point:AFTER FIELD xreb015
            {<point name="query.a.page1.xreb015" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb015
         ON ACTION controlp INFIELD xreb015
            #add-point:ON ACTION controlp INFIELD xreb015
            {<point name="query.c.page1.xreb015" />}
            #END add-point
 
         #----<<xreb018>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb018
            #add-point:BEFORE FIELD xreb018
            {<point name="query.b.page1.xreb018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb018
            
            #add-point:AFTER FIELD xreb018
            {<point name="query.a.page1.xreb018" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb018
         ON ACTION controlp INFIELD xreb018
            #add-point:ON ACTION controlp INFIELD xreb018
            {<point name="query.c.page1.xreb018" />}
            #END add-point
 
         #----<<xreb019>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xreb019
            #add-point:BEFORE FIELD xreb019
            {<point name="query.b.page1.xreb019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xreb019
            
            #add-point:AFTER FIELD xreb019
            {<point name="query.a.page1.xreb019" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.xreb019
         ON ACTION controlp INFIELD xreb019
            #add-point:ON ACTION controlp INFIELD xreb019
            {<point name="query.c.page1.xreb019" />}
            #END add-point
 
  
         
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
         {<point name="query.before_dialog"/>}
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL axrt920_02_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
</section>
  <section id="axrt920_02.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION axrt920_02_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
</section>
  <section id="axrt920_02.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION axrt920_02_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
</section>
  <section id="axrt920_02.state_change" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="axrt920_02.ui_dialog" ver="2" status="" src="s">
<![CDATA[#+ 功能選單 
PRIVATE FUNCTION axrt920_02_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL axrt920_02_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_xreb_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
      
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row"/>}
               #end add-point                        
      
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
 
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
 
         ON ACTION modify
 
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL axrt920_02_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify_detail
 
            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL axrt920_02_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL axrt920_02_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
</section>
  <section id="axrt920_02.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axrt920_02_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE axrt920_02_bcl
   #END IF
   
 
 
END FUNCTION
]]>
</section>
  <section id="axrt920_02.update_b" ver="1" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION axrt920_02_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "xreb_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "xreb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE xreb_t 
         SET (xrebld,xreb001,xreb002,xreb005,xreb006,xreb007
              ,xreb116,xreb011,xreb012,xreb010,xreb015,xreb018,xreb019) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6]
              ,g_xreb_d[l_ac].xreb116,g_xreb_d[l_ac].xreb011,g_xreb_d[l_ac].xreb012,g_xreb_d[l_ac].xreb010, 
                  g_xreb_d[l_ac].xreb015,g_xreb_d[l_ac].xreb018,g_xreb_d[l_ac].xreb019) 
         WHERE xrebld = ps_keys_bak[1] AND xreb001 = ps_keys_bak[2] AND xreb002 = ps_keys_bak[3] AND xreb005 = ps_keys_bak[4] AND xreb006 = ps_keys_bak[5] AND xreb007 = ps_keys_bak[6]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("xreb_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("xreb_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
</section>
</add_points>