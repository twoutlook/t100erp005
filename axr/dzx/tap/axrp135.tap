<add_points prog="axrp135" std_prog="axrp135" erpver="1.0" module="AXR" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.axrp135_b_fill2" cite_std="N" status="d" ver="" src="s" new="Y" order="2">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrp135_b_fill2()
   DEFINE p_ac         LIKE type_t.num5
   DEFINE l_ooef019    LIKE ooef_t.ooef019
   DEFINE l_isafcomp   LIKE isaf_t.isafcomp
   DEFINE l_sql        STRING

   LET l_sql = "SELECT isaf010,isaf011,isafstus,isaf014,isaf100||' '||isaf103,   ",
               "       isaf104,isaf105,isaf008,isaf009,isaf016,isafdocno,isaf006,",
               "       isafcomp                                                  ",
               "  FROM isaf_t,isag_t,xrcb_t                                      ",
               " WHERE isafent   = isagent       AND isafent = '",g_enterprise,"'",
               "   AND isafdocno = isagdocno     AND isag002 = xrcb002           ",
               "   AND xrcbdocno = '",g_detail_d[p_ac].xrcadocno,"'              ",
               "   AND xrcbld    = '",g_xrca_m.xrcald,"'                         "

   PREPARE axrp135_isaf_prep FROM l_sql
   DECLARE axrp135_isaf_curs CURSOR FOR axrp135_isaf_prep

   LET l_ac1 = 1
   CALL g_isaf_d.clear()

   FOREACH axrp135_isaf_curs INTO g_isaf_d[l_ac1].*,l_isafcomp
      SELECT ooef019 INTO l_ooef019 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = l_isafcomp AND ooefstus = 'Y'

      IF NOT cl_null(g_isaf_d[l_ac1].isaf008) THEN
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = l_ooef019
         LET g_ref_fields[2] = g_isaf_d[l_ac1].isaf008
         CALL ap_ref_array2(g_ref_fields,"SELECT isacl004 FROM isacl_t WHERE isaclent='"||g_enterprise||"' AND isacl001=? AND isacl002 = ? AND isacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_isaf_d[l_ac1].isaf008 = g_isaf_d[l_ac1].isaf008,"(",g_rtn_fields[1],")"
      END IF

      IF NOT cl_null(g_isaf_d[l_ac1].isaf016) THEN
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = l_ooef019
         LET g_ref_fields[2] = g_isaf_d[l_ac1].isaf016
         CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001=? AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_isaf_d[l_ac1].isaf016 = g_isaf_d[l_ac1].isaf016,"(",g_rtn_fields[1],")"
      END IF


      IF NOT cl_null(g_isaf_d[l_ac1].isaf006) THEN
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_isaf_d[l_ac1].isaf006
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_isaf_d[l_ac1].isaf006 = g_isaf_d[l_ac1].isaf006,"(",g_rtn_fields[1],")"
      END IF

      LET l_ac1 = l_ac1 + 1
   END FOREACH

   CALL g_isaf_d.deleteElement(l_ac1)

END FUNCTION]]>
</point>
  <point name="function.axrp135_click_chk" cite_std="N" status="d" ver="" src="s" new="Y" order="4">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrp135_click_chk()
   DEFINE p_chr         LIKE type_t.chr1
   DEFINE li_idx        LIKE type_t.num5
   DEFINE l_count       LIKE type_t.num5
   DEFINE l_xrca038     LIKE xrca_t.xrca039
   DEFINE l_xrcc109     LIKE xrcc_t.xrcc109
   DEFINE l_xrcadocdt   LIKE xrca_t.xrcadocdt
   DEFINE l_str         STRING
   DEFINE l_sql         STRING

   #資料勾選前,可執可勾選否檢查
   #STEP1:已產生傳票者不可還原
   #STEP2:已有收款沖銷記錄者不可還原
   #STEP3:帳款單號,已存在其他預計沖銷記錄中不可還原
   #STEP4:立帳日期小於關帳日期不可還原
   #STEP5:對應的發票資料,皆尚無發票號碼者.
 　#      發票號碼空白或有發票號碼但已作廢者.任一筆發票已有正式發票號碼者,不可選取還原不可還原

   LET l_sql = "SELECT COUNT(doc) FROM (                                    ",
               "SELECT COUNT (DISTINCT xrcadocno) doc FROM xrca_t, xrce_t   ",
               " WHERE     xrcald    = xrceld      AND xrcaent   = xrceent  ",
               "       AND xrcadocno = xrcedocno   AND xrcadocno = xrcedocno",
               "       AND xrcastus <> 'X'         AND xrcadocno = ?        ",
               " UNION                                                      ",
               "SELECT COUNT (DISTINCT xrdadocno) doc FROM xrca_t,xrda_t,xrce_t",
               " WHERE     xrdaent   = xrcaent     AND xrdaent = xrceent    ",
               "       AND xrdadocno = xrcedocno   AND xrce003 = xrcadocno  ",
               "       AND xrdald    = xrcald      AND xrdald  = xrceld     ",
               "       AND xrdastus <> 'X'         AND xrcadocno = ?        "
   PREPARE axrp135_count_prep FROM l_sql

   IF p_chr = "0" THEN
      FOR li_idx = 1 TO g_detail_d.getLength()
         #STEP1
         SELECT xrca038 INTO l_xrca038 FROM xrca_t
          WHERE xrcaent = g_enterprise AND xrcald = g_xrca_m.xrcald AND xrcadocno = g_detail_d[li_idx].xrcadocno
         IF l_xrca038 IS NOT NULL THEN LET g_detail_d[li_idx].sel = "N" CONTINUE FOR END IF
         
         #STEP2
         SELECT SUM(xrcc109) INTO l_xrcc109 FROM xrcc_t
          WHERE xrccent = g_enterprise AND xrccld = g_xrca_m.xrcald AND xrccdocno = g_detail_d[li_idx].xrcadocno
         IF l_xrcc109 > 0 THEN LET g_detail_d[li_idx].sel = "N" CONTINUE FOR END IF
         
         #STEP3
         LET l_count = 0
         EXECUTE axrp135_count_prep INTO l_count USING g_detail_d[li_idx].xrcadocno
         IF l_count < 1 THEN LET g_detail_d[li_idx].sel = "N" CONTINUE FOR END IF
         
         #STEP4
         SELECT xrcadocdt INTO l_xrcadocdt FROM xrca_t
          WHERE xrcaent = g_enterprise AND xrcadocno = g_detail_d[li_idx].xrcadocno AND xrcald = g_xrca_m.xrcald
         IF l_xrcadocdt  < g_glaa.glaa013 THEN LET g_detail_d[li_idx].sel = "N" CONTINUE FOR END IF
         
         #STEP5
         LET l_count = 0
         SELECT COUNT (DISTINCT isafdocno) INTO l_count FROM xrcb_t, isag_t, isaf_t
          WHERE     xrcb002 = isag002     AND xrcb003 = isag003
                AND isafdocno = isagdocno AND isaf011 IS NOT NULL
                AND isafstus <> 'X'       AND xrcbdocno = g_detail_d[li_idx].xrcadocno
         IF l_count > 0 THEN LET g_detail_d[li_idx].sel = "N" CONTINUE FOR END IF

         LET g_detail_d[li_idx].sel = "Y"
      END FOR
   ELSE
      #STEP1
      SELECT xrca038 INTO l_xrca038 FROM xrca_t
       WHERE xrcaent = g_enterprise AND xrcald = g_xrca_m.xrcald AND xrcadocno = g_detail_d[li_idx].xrcadocno
      IF l_xrca038 IS NOT NULL THEN LET g_detail_d[li_idx].sel = "N" RETURN END IF
      
      #STEP2
      SELECT SUM(xrcc109) INTO l_xrcc109 FROM xrcc_t
       WHERE xrccent = g_enterprise AND xrccld = g_xrca_m.xrcald AND xrccdocno = g_detail_d[li_idx].xrcadocno
      IF l_xrcc109 > 0 THEN LET g_detail_d[li_idx].sel = "N" RETURN END IF
      
      #STEP3
      LET l_count = 0
      EXECUTE axrp135_count_prep INTO l_count USING g_detail_d[li_idx].xrcadocno
      IF l_count < 1 THEN LET g_detail_d[li_idx].sel = "N" RETURN END IF
      
      #STEP4
      SELECT xrcadocdt INTO l_xrcadocdt FROM xrca_t
       WHERE xrcaent = g_enterprise AND xrcadocno = g_detail_d[li_idx].xrcadocno AND xrcald = g_xrca_m.xrcald
      IF l_xrcadocdt  < g_glaa.glaa013 THEN LET g_detail_d[li_idx].sel = "N" RETURN END IF
      
      #STEP5
      LET l_count = 0
      SELECT COUNT (DISTINCT isafdocno) INTO l_count FROM xrcb_t, isag_t, isaf_t
       WHERE     xrcb002 = isag002     AND xrcb003 = isag003
             AND isafdocno = isagdocno AND isaf011 IS NOT NULL
             AND isafstus <> 'X'       AND xrcbdocno = g_detail_d[li_idx].xrcadocno
      IF l_count > 0 THEN LET g_detail_d[li_idx].sel = "N" RETURN END IF

      LET g_detail_d[li_idx].sel = "Y"
   END IF

END FUNCTION]]>
</point>
  <point name="function.axrp135_def" cite_std="N" status="u" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrp135_def()
   DEFINE l_sql         STRING
   DEFINE l_xrcasite    LIKE xrca_t.xrcasite
   DEFINE l_success     LIKE type_t.chr1
   DEFINE l_xrcacomp_desc   LIKE ooefl_t.ooefl004

   LET l_sql = " SELECT DISTINCT xrah002 FROM xrah_t ",
               "  WHERE xrah004 IN(SELECT ooag004 FROM ooag_t WHERE ooag001 = '",g_user,"' AND ooagstus = 'Y')",
               "    AND xrah007 ='Y'",
               "    AND xrahstus ='Y'",
               "    AND xrah001 = '1'",
               "  ORDER BY xrah002"
   PREPARE axrp340_def_prep FROM l_sql
   DECLARE axrp340_def_curs CURSOR FOR axrp340_def_prep

   #抓取員工所屬營運據點對應的所有帳務中心
   FOREACH axrp340_def_curs INTO l_xrcasite

      #根據帳務中心抓取對應法人的主帳套
      SELECT glaald,glaacomp INTO g_xrca_m.xrcald,g_xrca_m.xrcacomp FROM glaa_t,ooef_t
       WHERE glaacomp = ooef017
         AND glaa014  = 'Y'
         AND ooef001  = l_xrcasite

      IF cl_null(g_xrca_m.xrcald) THEN LET g_xrca_m.xrcald = Null CONTINUE FOREACH END IF

      #根據帳套檢查該員工是否有使用權限
	  CALL s_ld_chk_authorization(g_user,g_xrca_m.xrcald) RETURNING l_success
	  IF l_success = 'N' THEN
	     LET g_xrca_m.xrcald   = NULL
	     CONTINUE FOREACH
	  ELSE
	     EXIT FOREACH
      END IF
   END FOREACH

   CALL s_axrt300_xrca_ref('xrcald',g_xrca_m.xrcald,'','') RETURNING l_success,g_xrca_m.xrcald_desc
   CALL s_axrt300_xrca_ref('xrcasite',g_xrca_m.xrcacomp,'','') RETURNING l_success,l_xrcacomp_desc
   LET g_xrca_m.xrcacomp = g_xrca_m.xrcacomp,"(",l_xrcacomp_desc,")"
   SELECT * INTO g_glaa.* FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xrca_m.xrcald

   DISPLAY BY NAME g_xrca_m.xrcald,g_xrca_m.xrcald_desc,g_xrca_m.xrcacomp

END FUNCTION]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE l_success       LIKE type_t.chr1
   DEFINE l_desc          LIKE type_t.chr200]]>
</point>
  <point name="b_fill.foreach_into" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   g_detail_d[l_ac].*]]>
</point>
  <point name="b_fill.foreach_iside" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      IF cl_nuLL(g_detail_d[l_ac].xrca106) THEN LET g_detail_d[l_ac].xrca106 = 0 END IF

      IF NOT cl_null(g_detail_d[l_ac].xrca004) THEN
         CALL s_axrt300_xrca_ref('xrca004',g_detail_d[l_ac].xrca004,'','') RETURNING l_success,l_desc
         LET g_detail_d[l_ac].xrca004 = g_detail_d[l_ac].xrca004,"(",l_desc,")"
      END IF

      IF NOT cl_null(g_detail_d[l_ac].xrcasite) THEN
         CALL s_axrt300_xrca_ref('xrcasite',g_detail_d[l_ac].xrcasite,'','') RETURNING l_success,l_desc
         LET g_detail_d[l_ac].xrcasite = g_detail_d[l_ac].xrcasite,"(",l_desc,")"
      END IF

      IF NOT cl_null(g_detail_d[l_ac].xrca003) THEN
         CALL s_axrt300_xrca_ref('xrca003',g_detail_d[l_ac].xrca003,'','') RETURNING l_success,l_desc
         LET g_detail_d[l_ac].xrca003 = g_detail_d[l_ac].xrca003,"(",l_desc,")"
      END IF

      IF NOT cl_null(g_detail_d[l_ac].xrca014) THEN
         CALL s_axrt300_xrca_ref('xrca003',g_detail_d[l_ac].xrca014,'','') RETURNING l_success,l_desc
         LET g_detail_d[l_ac].xrca014 = g_detail_d[l_ac].xrca014,"(",l_desc,")"
      END IF

      IF NOT cl_null(g_detail_d[l_ac].xrcacrtid) THEN
         CALL s_axrt300_xrca_ref('xrca003',g_detail_d[l_ac].xrcacrtid,'','') RETURNING l_success,l_desc
         LET g_detail_d[l_ac].xrcacrtid = g_detail_d[l_ac].xrcacrtid,"(",l_desc,")"
      END IF

      IF NOT cl_null(g_detail_d[l_ac].xrcacnfid) THEN
         CALL s_axrt300_xrca_ref('xrca003',g_detail_d[l_ac].xrcacnfid,'','') RETURNING l_success,l_desc
         LET g_detail_d[l_ac].xrcacnfid = g_detail_d[l_ac].xrcacnfid,"(",l_desc,")"
      END IF
]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF cl_null(g_wc) THEN LET g_wc = " 1=1" END IF

   LET g_sql = "SELECT 'N',xrca004,xrca001,xrcadocno,xrcadocdt,xrcastus, ",
               "       xrca100 || ' ' || (xrca103 + xrca104) xrca100,    ",
               "       xrca106 + xrca107 xrca106,SUM (xrcc109),xrca038,  ",
               "       xrcasite,xrca003,xrca014,xrcacrtid,xrcacrtdt,     ",
               "       xrcacnfid,xrcacnfdt                               ",
               " FROM xrca_t, xrcc_t                                     ",
               "WHERE     xrcaent = xrccent AND xrcald = xrccld          ",
               "      AND xrcaent = ?       AND xrcadocno = xrccdocno    ",
               "      AND xrca017 <> '1'    AND xrcastus<>'X'            ",
               "      AND (xrca047 IS Null OR xrca047 = ' ')             ",
               "      AND ",g_wc CLIPPED ,
               "      AND xrcald = '",g_xrca_m.xrcald,"'                 ", 
               "GROUP BY xrca004,xrca001,xrcadocno,xrcadocdt,xrcastus,   ",
               "         xrca100 || ' ' || (xrca103 + xrca104),          ",
               "         xrca106 + xrca107,xrca038,xrcasite,xrca003,     ",
               "         xrca014,xrcacrtid,xrcacrtdt,xrcacnfid,xrcacnfdt ",
               "HAVING sum(xrcc108-xrcc109) <> 0                         "]]>
</point>
  <point name="global.argv" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[DEFINE g_rec_b       LIKE type_t.num5              #單身筆數
DEFINE g_detail_idx  LIKE type_t.num5
DEFINE g_rec_b1      LIKE type_t.num5
DEFINE l_ac1         LIKE type_t.num5]]>
</point>
  <point name="global.variable" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[        sel             LIKE type_t.chr1,
        xrca004         LIKE type_t.chr200,
        xrca001         LIKE xrca_t.xrca001,
        xrcadocno       LIKE xrca_t.xrcadocno,
        xrcadocdt       LIKE xrca_t.xrcadocdt,
        xrcastus        LIKE xrca_t.xrcastus,
        xrca100         LIKE type_t.chr200,
        xrca106         LIKE xrca_t.xrca106,
        xrcc109         LIKE xrcc_t.xrcc109,
        xrca038         LIKE xrca_t.xrca038,
        xrcasite        LIKE type_t.chr200,
        xrca003         LIKE type_t.chr200,
        xrca014         LIKE type_t.chr200,
        xrcacrtid       LIKE type_t.chr200,
        xrcacrtdt       LIKE xrca_t.xrcacrtdt,
        xrcacnfid       LIKE type_t.chr200,
        xrcacnfdt       LIKE xrca_t.xrcacnfdt
                     END RECORD

TYPE type_g_isaf_d   RECORD
        isaf010         LIKE isaf_t.isaf010,
        isaf011         LIKE isaf_t.isaf011,
        isafstus        LIKE isaf_t.isafstus,
        isaf014         LIKE isaf_t.isaf014,
        isaf103         LIKE type_t.chr200,
        isaf104         LIKE isaf_t.isaf104,
        isaf015         LIKE isaf_t.isaf015,
        isaf008         LIKE type_t.chr200,
        isaf009         LIKE isaf_t.isaf009,
        isaf016         LIKE type_t.chr200,
        isafdocno       LIKE isaf_t.isafdocno,
        isaf006        LIKE type_t.chr200
                     END RECORD
DEFINE g_isaf_d      DYNAMIC ARRAY OF type_g_isaf_d
TYPE type_g_xrca_m   RECORD
      xrcald            LIKE xrca_t.xrcald,
      xrcald_desc       LIKE glaal_t.glaal002,
      xrcacomp          LIKE type_t.chr200
                     END RECORD
DEFINE g_xrca_m      type_g_xrca_m
DEFINE g_glaa        RECORD LIKE glaa_t.*
DEFINE g_success     LIKE type_t.chr1
DEFINE g_totsuccess  LIKE type_t.chr1]]>
</point>
  <point name="init.init" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   CALL cl_set_combo_scc("b_xrca001",8302)
   CALL cl_set_combo_scc("b_xrcastus",13)
   CALL cl_set_combo_scc("b_isafstus",13)]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            NEXT FIELD xrcald]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE l_success         LIKE type_t.chr1
   DEFINE l_xrcacomp_desc   LIKE ooefl_t.ooefl004
   DEFINE l_ooag003         LIKE ooag_t.ooag003]]>
</point>
  <point name="ui_dialog.more_construct" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[         INPUT BY NAME g_xrca_m.xrcald ATTRIBUTE(WITHOUT DEFAULTS)
            BEFORE INPUT
               IF cl_null(g_xrca_m.xrcald) THEN
                  CALL axrp135_def()
               END IF

            AFTER FIELD xrcald
               LET g_xrca_m.xrcald_desc = ' '
               DISPLAY BY NAME g_xrca_m.xrcald_desc
               IF NOT cl_null(g_xrca_m.xrcald) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xrca_m.xrcald
                  LET g_chkparam.arg2 = ' '
                  IF NOT cl_chk_exist("v_glaald_3") THEN
                     LET g_xrca_m.xrcald = ' '
                     LET g_xrca_m.xrcacomp = ' '
                     CALL s_axrt300_xrca_ref('xrcald',g_xrca_m.xrcald,'','') RETURNING l_success,g_xrca_m.xrcald_desc
                     DISPLAY BY NAME g_xrca_m.xrcald,g_xrca_m.xrcald_desc,g_xrca_m.xrcacomp
                     NEXT FIELD CURRENT
                  END IF
               END IF
               SELECT glaacomp INTO g_xrca_m.xrcacomp FROM glaa_t WHERE glaaent = g_enterprise
                  AND glaald = g_xrca_m.xrcald
               CALL s_axrt300_xrca_ref('xrcald',g_xrca_m.xrcald,'','') RETURNING l_success,g_xrca_m.xrcald_desc
               CALL s_axrt300_xrca_ref('xrcasite',g_xrca_m.xrcacomp,'','') RETURNING l_success,l_xrcacomp_desc
               LET g_xrca_m.xrcacomp = g_xrca_m.xrcacomp,"(",l_xrcacomp_desc,")"
               DISPLAY BY NAME g_xrca_m.xrcald,g_xrca_m.xrcald_desc,g_xrca_m.xrcacomp
               SELECT * INTO g_glaa.* FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xrca_m.xrcald

            ON ACTION controlp INFIELD xrcald
               #開窗i段
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
			      LET g_qryparam.reqry = FALSE
               
               LET g_qryparam.default1 = g_xrca_m.xrcald             #給予default值
               
               #給予arg
               SELECT ooag003 INTO l_ooag003 FROM ooag_t WHERE ooagent = g_enterprise AND ooag001 = g_user
               LET g_qryparam.arg1 = g_user
               LET g_qryparam.arg2 = l_ooag003
               LET g_qryparam.where = "glaa014 = 'Y'"
               
               CALL q_authorised_ld()                                #呼叫開窗
               
               LET g_xrca_m.xrcald = g_qryparam.return1              #將開窗取得的值回傳到變數
               
               DISPLAY g_xrca_m.xrcald TO xrcald                     #顯示到畫面上
               CALL s_axrt300_xrca_ref('xrcald',g_xrca_m.xrcald,'','') RETURNING l_success,g_xrca_m.xrcald_desc
               SELECT glaacomp INTO g_xrca_m.xrcacomp FROM glaa_t WHERE glaaent = g_enterprise
                  AND glaald = g_xrca_m.xrcald
               CALL s_axrt300_xrca_ref('xrcasite',g_xrca_m.xrcacomp,'','') RETURNING l_success,l_xrcacomp_desc
               LET g_xrca_m.xrcacomp = g_xrca_m.xrcacomp,"(",l_xrcacomp_desc,")"
               DISPLAY BY NAME g_xrca_m.xrcald,g_xrca_m.xrcald_desc,g_xrca_m.xrcacomp
               
               NEXT FIELD xrcald                                     #返回原欄位

            AFTER INPUT
               CALL axrp135_b_fill()

         END INPUT]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[         DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               CALL axrp135_b_fill2(l_ac)
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               
         END DISPLAY

         DISPLAY ARRAY g_isaf_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b1) #page1  
    
            BEFORE ROW
               
         END DISPLAY]]>
</point>
  <point name="ui_dialog.more_input" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[         CONSTRUCT g_wc ON xrca004,xrcadocdt,xrcasite,xrca003,xrcadocno,xrcacrtid,xrcb002
                      FROM xrca004,xrcadocdt,xrcasite,xrca003,xrcadocno,xrcacrtid,xrcb002

            ON ACTION controlp INFIELD xrca004
               #開窗c段
	   		   INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
			      LET g_qryparam.reqry = FALSE
               CALL q_pmaa001_7()                         #呼叫開窗
               DISPLAY g_qryparam.return1 TO xrca004      #顯示到畫面上
               
               NEXT FIELD xrca004                         #返回原欄位

            ON ACTION controlp INFIELD xrcasite
               #開窗c段
	   		   INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
			      LET g_qryparam.reqry = FALSE
               CALL q_xrah002_1()                         #呼叫開窗
               DISPLAY g_qryparam.return1 TO xrcasite     #顯示到畫面上
               
               NEXT FIELD xrcasite                        #返回原欄位

            ON ACTION controlp INFIELD xrca003
               #開窗c段
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
			      LET g_qryparam.reqry = FALSE
               CALL q_ooag001()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO xrca003      #顯示到畫面上
               
               NEXT FIELD xrca003                         #返回原欄位

            ON ACTION controlp INFIELD xrcadocno
               #開窗c段
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
			      LET g_qryparam.reqry = FALSE
               CALL q_xrcadocno_5()                       #呼叫開窗
               DISPLAY g_qryparam.return1 TO xrcadocno    #顯示到畫面上
              
               NEXT FIELD xrcadocno                       #返回原欄位

            ON ACTION controlp INFIELD xrcacrtid
               #開窗c段
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
			      LET g_qryparam.reqry = FALSE
               CALL q_ooag001()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO xrcacrtid    #顯示到畫面上
               
               NEXT FIELD xrcacrtid                       #返回原欄位

            ON ACTION controlp INFIELD xrcb002
               #開窗c段
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
			      LET g_qryparam.reqry = FALSE
               CALL q_xrcb002_1()                         #呼叫開窗
               DISPLAY g_qryparam.return1 TO xrcb002      #顯示到畫面上
               
               NEXT FIELD xrcb002                         #返回原欄位

            AFTER CONSTRUCT
               CALL axrp135_b_fill()

         END CONSTRUCT]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.parameter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.background" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.onaction_selall" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[            CALL axrp135_click_chk(0)]]>
</point>
  <point name="ui_dialog.onaction_selnone" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.onaction_sel" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[            IF g_detail_d.getLength() > 0 THEN
            IF l_ac > 0 THEN
               CALL axrp135_click_chk(l_ac)
            ELSE
               CALL axrp135_click_chk(1)
            END IF
            END IF]]>
</point>
  <point name="ui_dialog.onaction_unsel" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_action" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[         ON ACTION batch_execute
            CALL axrp135_ar_rollback()
            CALL axrp135_b_fill()

         ON ACTION modify_detail
            IF g_detail_d[l_ac].sel = "Y" THEN
               LET g_detail_d[l_ac].sel = "N"
            ELSE
               CALL axrp135_click_chk(l_ac)
            END IF
]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.clear" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.other_table" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   CALL g_detail_d.deleteElement(l_ac)]]>
</point>
  <point name="b_fill.after_b_fill" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   CALL axrp135_b_fill2(1)]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.detail_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.detail_cnt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="function.axrp135_b_fill2" cite_std="N" status="u" ver="" src="s" new="Y" order="2">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrp135_b_fill2(p_ac)
   DEFINE p_ac         LIKE type_t.num5
   DEFINE l_ooef019    LIKE ooef_t.ooef019
   DEFINE l_isafcomp   LIKE isaf_t.isafcomp
   DEFINE l_sql        STRING

   LET l_sql = "SELECT isaf010,isaf011,isafstus,isaf014,isaf100||' '||isaf103,   ",
               "       isaf104,isaf105,isaf008,isaf009,isaf016,isafdocno,isaf006,",
               "       isafcomp                                                  ",
               "  FROM isaf_t,isag_t,xrcb_t                                      ",
               " WHERE isafent   = isagent       AND isafent = '",g_enterprise,"'",
               "   AND isafdocno = isagdocno     AND isag002 = xrcb002           ",
               "   AND xrcbdocno = '",g_detail_d[p_ac].xrcadocno,"'              ",
               "   AND xrcbld    = '",g_xrca_m.xrcald,"'                         "

   PREPARE axrp135_isaf_prep FROM l_sql
   DECLARE axrp135_isaf_curs CURSOR FOR axrp135_isaf_prep

   LET l_ac1 = 1
   CALL g_isaf_d.clear()

   FOREACH axrp135_isaf_curs INTO g_isaf_d[l_ac1].*,l_isafcomp
      SELECT ooef019 INTO l_ooef019 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = l_isafcomp AND ooefstus = 'Y'

      IF NOT cl_null(g_isaf_d[l_ac1].isaf008) THEN
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = l_ooef019
         LET g_ref_fields[2] = g_isaf_d[l_ac1].isaf008
         CALL ap_ref_array2(g_ref_fields,"SELECT isacl004 FROM isacl_t WHERE isaclent='"||g_enterprise||"' AND isacl001=? AND isacl002 = ? AND isacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_isaf_d[l_ac1].isaf008 = g_isaf_d[l_ac1].isaf008,"(",g_rtn_fields[1],")"
      END IF

      IF NOT cl_null(g_isaf_d[l_ac1].isaf016) THEN
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = l_ooef019
         LET g_ref_fields[2] = g_isaf_d[l_ac1].isaf016
         CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001=? AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_isaf_d[l_ac1].isaf016 = g_isaf_d[l_ac1].isaf016,"(",g_rtn_fields[1],")"
      END IF


      IF NOT cl_null(g_isaf_d[l_ac1].isaf006) THEN
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_isaf_d[l_ac1].isaf006
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_isaf_d[l_ac1].isaf006 = g_isaf_d[l_ac1].isaf006,"(",g_rtn_fields[1],")"
      END IF

      LET l_ac1 = l_ac1 + 1
   END FOREACH

   CALL g_isaf_d.deleteElement(l_ac1)

END FUNCTION]]>
</point>
  <point name="function.axrp135_ar_rollback" cite_std="N" status="u" ver="" src="s" new="Y" order="3">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrp135_ar_rollback()
   DEFINE l_xrcadocno   LIKE xrca_t.xrcadocno
   DEFINE l_xrca038     LIKE xrca_t.xrca038
   DEFINE l_xrca001     LIKE xrca_t.xrca001
   DEFINE l_xrca019     LIKE xrca_t.xrca019
   DEFINE l_xrcc109     LIKE xrcc_t.xrcc109
   DEFINE l_xrcastus    LIKE xrca_t.xrcastus
   DEFINE l_success     LIKE type_t.chr1
   DEFINE l_flag        LIKE type_t.chr1
   DEFINE l_count       LIKE type_t.num5
   DEFINE l_s           LIKE type_t.num5
   DEFINE l_xrcb        RECORD LIKE xrcb_t.*
   DEFINE l_xrce        RECORD LIKE xrce_t.*
   DEFINE l_str         STRING
   DEFINE l_sql         STRING
   DEFINE ls_wc1        STRING
   DEFINE ls_wc2        STRING
   DEFINE ls_wc3        STRING
   DEFINE ls_wc4        STRING

   #未查詢出資料時,直接返回
   LET l_count = g_detail_d.getLength()
   IF l_count < 1 THEN RETURN END IF

   #未選擇任何資料料時,直接返回
   LET l_flag = 'N'
   LET l_str = Null
   FOR l_count = 1 TO g_detail_d.getLength()
      IF g_detail_d[l_count].sel = 'Y' THEN
         LET l_flag = 'Y'
         IF cl_null(l_str) THEN
            LET l_str = "xrcadocno IN ('",g_detail_d[l_count].xrcadocno,"'"
         ELSE
            LET l_str = l_str,",'",g_detail_d[l_count].xrcadocno,"'"
         END IF
      END IF
   END FOR
   IF l_flag = 'N' THEN RETURN END IF
   LET l_str = l_str,")"

   #資料還原前,可執行性檢查
   #STEP1:有收款沖帳記錄及預計沖款者不可還原
   #STEP2:已產生傳票者不可還原
   #STEP3:對應的發票資料,皆尚無發票號碼者.
 　#      發票號碼空白或有發票號碼但已作廢者.任一筆發票已有正式發票號碼者,不可選取還原不可還原
   #STEP4:預收性質單據;必須檢核有無產生對應的"待抵"單據(21),須檢核該待抵單是否已有沖銷資料
   #         帳款性筫 = '11','12';檢核xrca019是否已有產生的待抵單號
   #         查核待抵單是否有沖銷記錄 sum(xrcc109) > 0
	#         檢核該單據是否有在其他單據上有預計沖銷記錄中(xrce_t)
   #      任一條件不符者,不可還原處理.
   #資料還原時,操作步驟
   #STEP1:取"帳款單身xrcb_t"資料
   #      1)依[來源作業]別,判斷應回寫的TABLE
   #      2)依[帳套別]判斷回寫的[己立帳數(金額)]欄位
   #      3)取"直接沖銷表xrce_t"資料
   #         1>依[沖銷類型]判斷應回寫的TABLE
   #         2>依[沖銷帳款單號]及[帳套別]回寫[己立帳數(金額)]欄位
   #※ 執行過程中,每筆單據之處理狀態應記入LOG,並於執行完成時,顯示執行結果.

   LET l_sql = "SELECT xrcadocno FROM xrca_t WHERE xrcaent = '",g_enterprise,"'",
               "   AND xrcald = '",g_xrca_m.xrcald,"'                          ",
               "   AND ",l_str CLIPPED
   PREPARE axrp135_xrca_prep FROM l_sql
   DECLARE axrp135_xrca_curs CURSOR FOR axrp135_xrca_prep

   LET l_sql = "SELECT COUNT(doc) FROM (                                    ",
               "SELECT xrcadocno doc FROM xrca_t, xrce_t                    ",
               " WHERE     xrcald    = xrceld      AND xrcaent   = xrceent  ",
               "       AND xrcadocno = xrcedocno   AND xrcadocno = xrcedocno",
               "       AND xrcastus <> 'X'         AND xrce003 = ?          ",
               " UNION                                                      ",
               "SELECT xrdadocno doc FROM xrca_t,xrda_t,xrce_t              ",
               " WHERE     xrdaent   = xrcaent     AND xrdaent = xrceent    ",
               "       AND xrdadocno = xrcedocno   AND xrce003 = xrcadocno  ",
               "       AND xrdald    = xrcald      AND xrdald  = xrceld     ",
               "       AND xrdastus <> 'X'         AND xrcadocno = ? )      "
   PREPARE axrp135_cnt_prep FROM l_sql

   LET l_sql = "SELECT * FROM xrcb_t WHERE xrcbent = '",g_enterprise,"' AND xrcbld = '",g_xrca_m.xrcald,"' AND xrcbdocno = ?"
   PREPARE axrp135_xrcb_prep FROM l_sql
   DECLARE axrp135_xrcb_curs CURSOR FOR axrp135_xrcb_prep

   LET l_sql = "SELECT * FROM xrce_t WHERE xrceent = '",g_enterprise,"' AND xrceld = '",g_xrca_m.xrcald,"' AND xrcedocno = ?"
   PREPARE axrp135_xrce_prep FROM l_sql
   DECLARE axrp135_xrce_curs CURSOR FOR axrp135_xrce_prep

   CALL s_axrt300_sel_ld(g_xrca_m.xrcald) RETURNING l_success,l_s

   CASE
      WHEN l_s = '1'
         LET ls_wc1 = " rtib031 = rtib031 - ? "   #artt600
         LET ls_wc2 = " stbe021 = stbe021 - ? "   #astt503
         LET ls_wc3 = " xmdb008 = xmdb008 - ? "   #axmt500
         LET ls_wc4 = " xmdl038 = xmdl038 - ? "   #axmt540/axmt600
      WHEN l_s = '2'
         LET ls_wc1 = " rtib032 = rtib032 - ? "
         LET ls_wc2 = " stbe022 = stbe022 - ? "
         LET ls_wc3 = " xmdb010 = xmdb010 - ? "
         LET ls_wc4 = " xmdl039 = xmdl039 - ? "
      WHEN l_s = '3'
         LET ls_wc1 = " rtib033 = rtib033 - ? "
         LET ls_wc2 = " stbe023 = stbe023 - ? "
         LET ls_wc3 = " xmdb014 = xmdb014 - ? "
         LET ls_wc4 = " xmdl040 = xmdl040 - ? "
   END CASE

   LET l_sql = "UPDATE rtib_t SET ",ls_wc1,
               " WHERE rtibdocno = ?  AND rtibseq = ?  ",
               "   AND rtibent   = '",g_enterprise,"'  "
   PREPARE axrp135_rtib_upd FROM l_sql

   LET l_sql = "UPDATE stbe_t SET ",ls_wc2,
               " WHERE stbedocno = ?  AND stbeseq = ?  ",
               "   AND stbeent   = '",g_enterprise,"'  "
   PREPARE axrp135_stbe_upd FROM l_sql

   LET l_sql = "UPDATE xmdb_t SET ",ls_wc3,
               " WHERE xmdbdocno = ?  AND xmdbseq = ?  ",
               "   AND xmdbent   = '",g_enterprise,"'  "
   PREPARE axrp135_xmdb_upd FROM l_sql

   LET l_sql = "UPDATE xmdl_t SET ",ls_wc3,
               " WHERE xmdldocno = ?  AND xmdlseq = ?  ",
               "   AND xmdlent   = '",g_enterprise,"'  "
   PREPARE axrp135_xmdl_upd FROM l_sql

   CASE
      WHEN l_s = '1'
         LET ls_wc1 = " nmbb008 = nmbb008 - ?,nmbb009 = nmbb009 - ?,nmbb014 = nmbb014 - ?,nmbb018 = nmbb018 - ?"
      WHEN l_s = '2'
         LET ls_wc1 = " nmbb020 = nmbb020 - ?,nmbb021 = nmbb021 - ?"
      WHEN l_s = '3'
         LET ls_wc1 = " nmbb023 = nmbb023 - ?,nmbb024 = nmbb024 - ?"
   END CASE

   LET l_sql = "UPDATE nmbb_t SET ",ls_wc1,
               " WHERE nmbbdocno = ?  AND nmbbseq = ?  ",
               "   AND nmbbent   = '",g_enterprise,"'  "
   PREPARE axrp135_nmbb_upd FROM l_sql

   #錯誤訊息匯總初始化
   CALL cl_showmsg_init()
   CALL s_transaction_begin()
   LET g_success = 'Y'
   LET g_totsuccess = 'Y'

   FOREACH axrp135_xrca_curs INTO l_xrcadocno
      #STEP1
      LET l_count = 0
      EXECUTE axrp135_cnt_prep INTO l_count USING l_xrcadocno
      IF l_count > 0 THEN
         CALL cl_errmsg('xrcadocno',l_xrcadocno,'','axr-00131',1)
         LET g_success = 'N'
      END IF

      #STEP2
      SELECT xrca038 INTO l_xrca038 FROM xrca_t
       WHERE xrcaent = g_enterprise AND xrcald = g_xrca_m.xrcald AND xrcadocno = l_xrcadocno
      IF l_xrca038 IS NOT NULL THEN
         CALL cl_errmsg('xrcadocno',l_xrcadocno,'','axr-00129',1)
         LET g_success = 'N'
      END IF

      #STEP3
      LET l_count = 0
      SELECT COUNT (DISTINCT isafdocno) INTO l_count FROM xrcb_t, isag_t, isaf_t
       WHERE     xrcb002 = isag002     AND xrcb003 = isag003
             AND isafdocno = isagdocno AND isaf011 IS NOT NULL
             AND isafstus <> 'X'       AND xrcbdocno = l_xrcadocno
      IF l_count > 0 THEN
         CALL cl_errmsg('xrcadocno',l_xrcadocno,'','axr-00133',1)
         LET g_success = 'N'
      END IF

      #STEP4
      SELECT xrca001,xrca019 INTO l_xrca001,l_xrca019 FROM xrca_t
       WHERE xrcaent = g_enterprise AND xrcald = g_xrca_m.xrcald AND xrcadocno = l_xrcadocno
      IF (l_xrca001 = '11' OR l_xrca001 = '12') AND NOT cl_null(l_xrca019) THEN
         SELECT SUM(xrcc109) INTO l_xrcc109 FROM xrcc_t
          WHERE xrccent = g_enterprise AND xrccld = g_xrca_m.xrcald AND xrccdocno = l_xrca019
         IF l_xrcc109 > 0 THEN
            CALL cl_errmsg('xrcadocno',l_xrcadocno,'','axr-00134',1)
            LET g_success = 'N'
         END IF

         IF g_success = 'Y' THEN
            LET l_count = 0
            EXECUTE axrp135_cnt_prep INTO l_count USING l_xrca019
            IF l_count < 1 THEN
               CALL cl_errmsg('xrcadocno',l_xrcadocno,'','axr-00134',1)
               LET g_success = 'N'
            END IF
         END IF
      END IF

      IF g_success = 'N' THEN
         LET g_success = 'Y'
         LET g_totsuccess = 'N'
         CONTINUE FOREACH
      END IF

      SELECT xrcastus INTO l_xrcastus FROM xrca_t
       WHERE xrcaent = g_enterprise AND xrcald = g_xrca_m.xrcald AND xrcadocno = l_xrcadocno

      #STEP1
      FOREACH axrp135_xrcb_curs INTO l_xrcb.*
         IF l_xrcastus = 'Y' THEN
            IF NOT cl_null(l_xrcb.xrcb001) AND NOT cl_null(l_xrcb.xrcb007) AND 
               NOT cl_null(l_xrcb.xrcb002) AND NOT cl_null(l_xrcb.xrcb003) THEN
               CASE
                  WHEN l_xrcb.xrcb001 = "artt600"
                     EXECUTE axrp135_rtib_upd USING l_xrcb.xrcb007,l_xrcb.xrcb002,l_xrcb.xrcb003
                     IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
                        LET l_str = l_xrcadocno,l_xrcb.xrcb002,l_xrcb.xrcb003
                        CALL cl_errmsg('xrcadocno,xrcb002,xrcb003',l_str,'','axr-00135',1)
                        LET g_success = 'N'
                     END IF
                  WHEN l_xrcb.xrcb001 = "astt503"
                     EXECUTE axrp135_stbe_upd USING l_xrcb.xrcb007,l_xrcb.xrcb002,l_xrcb.xrcb003
                     IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
                        LET l_str = l_xrcadocno,l_xrcb.xrcb002,l_xrcb.xrcb003
                        CALL cl_errmsg('xrcadocno,xrcb002,xrcb003',l_str,'','axr-00136',1)
                        LET g_success = 'N'
                     END IF
                  WHEN l_xrcb.xrcb001 = "axmt500"
                     EXECUTE axrp135_xmdb_upd USING l_xrcb.xrcb007,l_xrcb.xrcb002,l_xrcb.xrcb003
                     IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
                        LET l_str = l_xrcadocno,l_xrcb.xrcb002,l_xrcb.xrcb003
                        CALL cl_errmsg('xrcadocno,xrcb002,xrcb003',l_str,'','axr-00137',1)
                        LET g_success = 'N'
                     END IF
                  WHEN l_xrcb.xrcb001 = "axmt540"
                     EXECUTE axrp135_xmdl_upd USING l_xrcb.xrcb007,l_xrcb.xrcb002,l_xrcb.xrcb003
                     IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
                        LET l_str = l_xrcadocno,l_xrcb.xrcb002,l_xrcb.xrcb003
                        CALL cl_errmsg('xrcadocno,xrcb002,xrcb003',l_str,'','axr-00138',1)
                        LET g_success = 'N'
                     END IF
                  WHEN l_xrcb.xrcb001 = "axmt600"
                     EXECUTE axrp135_xmdl_upd USING l_xrcb.xrcb007,l_xrcb.xrcb002,l_xrcb.xrcb003
                     IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
                        LET l_str = l_xrcadocno,l_xrcb.xrcb002,l_xrcb.xrcb003
                        CALL cl_errmsg('xrcadocno,xrcb002,xrcb003',l_str,'','axr-00139',1)
                        LET g_success = 'N'
                     END IF
               END CASE
            END IF
         END IF
         DELETE FROM xrcb_t WHERE xrcbld = g_xrca_m.xrcald AND xrcbent = g_enterprise
            AND xrcbdocno = l_xrcadocno AND xrcbseq = l_xrcb.xrcbseq
         IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
            LET l_str = l_xrcadocno,l_xrcb.xrcbseq
            CALL cl_errmsg('xrcadocno,xrcbseq',l_str,SQLCA.SQLCODE,'axr-00140',1)
            LET g_success = 'N'
         END IF

         DELETE FROM xrcd_t WHERE xrcdld = g_xrca_m.xrcald AND xrcdent = g_enterprise
            AND xrcddocno = l_xrcadocno AND xrcdseq = l_xrcb.xrcbseq
         IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
            LET l_str = l_xrcb.xrcbld,l_xrcadocno,l_xrcb.xrcbseq
            CALL cl_errmsg('xrcdld,xrcddocno,xrcdseq',l_str,SQLCA.SQLCODE,'axr-00145',1)
            LET g_success = 'N'
         END IF

      END FOREACH

      #STEP2
      FOREACH axrp135_xrce_curs INTO l_xrce.*
         IF l_xrcastus = 'Y' THEN
            CASE
               WHEN l_xrce.xrce002 = "10"
                  IF l_s = '1' THEN
                     EXECUTE axrp135_nmbb_upd USING l_xrce.xrce109,l_xrce.xrce119,l_xrce.xrce129,
                                                    l_xrce.xrce139,l_xrce.xrce003,l_xrce.xrce004
                     IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
                        LET l_str = 'anmt310',l_xrcadocno,l_xrce.xrce003,l_xrce.xrce004
                        CALL cl_errmsg('gzza001,xrcadocno,xrce003,xrce004',l_str,SQLCA.SQLCODE,'axr-00141',1)
                        LET g_success = 'N'
                     END IF
                  ELSE
                     EXECUTE axrp135_nmbb_upd USING l_xrce.xrce109,l_xrce.xrce119,l_xrce.xrce003,l_xrce.xrce004
                     IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
                        LET l_str = 'anmt310',l_xrcadocno,l_xrce.xrce003,l_xrce.xrce004
                        CALL cl_errmsg('gzza001,xrcadocno,xrce003,xrce004',l_str,SQLCA.SQLCODE,'axr-00141',1)
                        LET g_success = 'N'
                     END IF
                  END IF
            END CASE
         END IF

         DELETE FROM xrce_t WHERE xrcedocno = l_xrcadocno AND xrceld = g_xrca_m.xrcald AND xrceent = g_enterprise
         IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
            LET l_str = l_xrcadocno,l_xrce.xrce003,l_xrce.xrce004
            CALL cl_errmsg('xrcadocno,xrce003,xrce004',l_str,SQLCA.SQLCODE,'axr-00142',1)
            LET g_success = 'N'
         END IF
      END FOREACH

      DELETE FROM xrcc_t WHERE xrccdocno = l_xrcadocno AND xrccld = g_xrca_m.xrcald AND xrccent = g_enterprise
      IF SQLCA.SQLCODE OR (SQLCA.SQLERRD[3] < 1 AND SQLCA.SQLCODE <> 100) THEN
         CALL cl_errmsg('xrccdocno',l_xrcadocno,SQLCA.SQLCODE,'axr-00143',1)
         LET g_success = 'N'
      END IF

      DELETE FROM xrca_t WHERE xrcadocno = l_xrcadocno AND xrcald = g_xrca_m.xrcald AND xrcaent = g_enterprise
      IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
         CALL cl_errmsg('xrccdocno',l_xrcadocno,SQLCA.SQLCODE,'axr-00144',1)
         LET g_success = 'N'
      END IF

      IF g_success = 'N' THEN
         LET g_totsuccess = 'N'
      END IF

   END FOREACH


   IF g_totsuccess = 'N' THEN
      CALL cl_err_showmsg()
      LET g_success    = 'Y'
      LET g_totsuccess = 'Y'
      CALL s_transaction_end('N','0')
      RETURN
   ELSE
      CALL s_transaction_end('Y','0')
   END IF

END FUNCTION]]>
</point>
  <point name="function.axrp135_click_chk" cite_std="N" status="u" ver="" src="s" new="Y" order="4">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrp135_click_chk(p_chr)
   DEFINE p_chr         LIKE type_t.num5
   DEFINE li_idx        LIKE type_t.num5
   DEFINE l_count       LIKE type_t.num5
   DEFINE l_xrca038     LIKE xrca_t.xrca038
   DEFINE l_xrcc109     LIKE xrcc_t.xrcc109
   DEFINE l_xrcadocdt   LIKE xrca_t.xrcadocdt
   DEFINE l_str         STRING
   DEFINE l_sql         STRING

   #資料勾選前,可執可勾選否檢查
   #STEP1:已產生傳票者不可還原
   #STEP2:已有收款沖銷記錄者不可還原
   #STEP3:帳款單號,已存在其他預計沖銷記錄中不可還原
   #STEP4:立帳日期小於關帳日期不可還原
   #STEP5:對應的發票資料,皆尚無發票號碼者.
 　#      發票號碼空白或有發票號碼但已作廢者.任一筆發票已有正式發票號碼者,不可選取還原不可還原

   LET l_sql = "SELECT COUNT(doc) FROM (                                    ",
               "SELECT DISTINCT xrcadocno doc FROM xrca_t, xrce_t           ",
               " WHERE     xrcald    = xrceld      AND xrcaent   = xrceent  ",
               "       AND xrcadocno = xrcedocno   AND xrcadocno = xrcedocno",
               "       AND xrcastus <> 'X'         AND xrce003   = ?        ",
               " UNION                                                      ",
               "SELECT DISTINCT xrdadocno doc FROM xrca_t,xrda_t,xrce_t     ",
               " WHERE     xrdaent   = xrcaent     AND xrdaent = xrceent    ",
               "       AND xrdadocno = xrcedocno   AND xrce003 = xrcadocno  ",
               "       AND xrdald    = xrcald      AND xrdald  = xrceld     ",
               "       AND xrdastus <> 'X'         AND xrcadocno = ?        "
   PREPARE axrp135_count_prep FROM l_sql

   WHILE TRUE
      IF p_chr = "0" THEN
         FOR li_idx = 1 TO g_detail_d.getLength()
            #STEP1
            SELECT xrca038 INTO l_xrca038 FROM xrca_t
             WHERE xrcaent = g_enterprise AND xrcald = g_xrca_m.xrcald AND xrcadocno = g_detail_d[li_idx].xrcadocno
            IF l_xrca038 IS NOT NULL THEN LET g_detail_d[li_idx].sel = "N" CONTINUE FOR END IF
            
            #STEP2
            SELECT SUM(xrcc109) INTO l_xrcc109 FROM xrcc_t
             WHERE xrccent = g_enterprise AND xrccld = g_xrca_m.xrcald AND xrccdocno = g_detail_d[li_idx].xrcadocno
            IF l_xrcc109 > 0 THEN LET g_detail_d[li_idx].sel = "N" CONTINUE FOR END IF
            
            #STEP3
            LET l_count = 0
            EXECUTE axrp135_count_prep INTO l_count USING g_detail_d[li_idx].xrcadocno
            IF l_count > 0 THEN LET g_detail_d[li_idx].sel = "N" CONTINUE FOR END IF
            
            #STEP4
            SELECT xrcadocdt INTO l_xrcadocdt FROM xrca_t
             WHERE xrcaent = g_enterprise AND xrcadocno = g_detail_d[li_idx].xrcadocno AND xrcald = g_xrca_m.xrcald
            IF l_xrcadocdt  < g_glaa.glaa013 THEN LET g_detail_d[li_idx].sel = "N" CONTINUE FOR END IF
            
            #STEP5
            LET l_count = 0
            SELECT COUNT (DISTINCT isafdocno) INTO l_count FROM xrcb_t, isag_t, isaf_t
             WHERE     xrcb002 = isag002     AND xrcb003 = isag003
                   AND isafdocno = isagdocno AND isaf011 IS NOT NULL
                   AND isafstus <> 'X'       AND xrcbdocno = g_detail_d[li_idx].xrcadocno
            IF l_count > 0 THEN LET g_detail_d[li_idx].sel = "N" CONTINUE FOR END IF
      
            LET g_detail_d[li_idx].sel = "Y"
         END FOR
         IF cl_null(g_detail_d[li_idx].xrcadocno) THEN
            CALL g_detail_d.deleteElement(li_idx)
         END IF
         EXIT WHILE
      ELSE
         LET li_idx = p_chr
         LET g_detail_d[li_idx].sel = "Y"
         LET g_errno = ' '
      
         #STEP1
         SELECT xrca038 INTO l_xrca038 FROM xrca_t
          WHERE xrcaent = g_enterprise AND xrcald = g_xrca_m.xrcald AND xrcadocno = g_detail_d[li_idx].xrcadocno
         IF l_xrca038 IS NOT NULL THEN LET g_detail_d[li_idx].sel = "N" LET g_errno = 'axr-00129' EXIT WHILE END IF
         
         #STEP2
         SELECT SUM(xrcc109) INTO l_xrcc109 FROM xrcc_t
          WHERE xrccent = g_enterprise AND xrccld = g_xrca_m.xrcald AND xrccdocno = g_detail_d[li_idx].xrcadocno
         IF l_xrcc109 > 0 THEN LET g_detail_d[li_idx].sel = "N" LET g_errno = 'axr-00130' EXIT WHILE END IF
         
         #STEP3
         LET l_count = 0
         EXECUTE axrp135_count_prep INTO l_count USING g_detail_d[li_idx].xrcadocno
         IF l_count > 0 THEN LET g_detail_d[li_idx].sel = "N" LET g_errno = 'axr-00131' EXIT WHILE END IF
         
         #STEP4
         SELECT xrcadocdt INTO l_xrcadocdt FROM xrca_t
          WHERE xrcaent = g_enterprise AND xrcadocno = g_detail_d[li_idx].xrcadocno AND xrcald = g_xrca_m.xrcald
         IF l_xrcadocdt  < g_glaa.glaa013 THEN LET g_detail_d[li_idx].sel = "N" LET g_errno = 'axr-00132' EXIT WHILE END IF
         
         #STEP5
         LET l_count = 0
         SELECT COUNT (DISTINCT isafdocno) INTO l_count FROM xrcb_t, isag_t, isaf_t
          WHERE     xrcb002 = isag002     AND xrcb003 = isag003
                AND isafdocno = isagdocno AND isaf011 IS NOT NULL
                AND isafstus <> 'X'       AND xrcbdocno = g_detail_d[li_idx].xrcadocno
         IF l_count > 0 THEN LET g_detail_d[li_idx].sel = "N" LET g_errno = 'axr-00133' EXIT WHILE END IF

         EXIT WHILE

      END IF

   END WHILE

   IF p_chr <> 0 THEN
      IF g_detail_d[li_idx].sel = "N"THEN
         CALL cl_err(g_detail_d[li_idx].xrcadocno,g_errno,1)
         DISPLAY g_detail_d[li_idx].sel TO s_detail1[li_idx].sel
      END IF
   END IF

END FUNCTION]]>
</point>
  <section id="axrp135.b_fill" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axrp135_b_fill()
 
   DEFINE ls_wc           STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   PREPARE axrp135_sel FROM g_sql
   DECLARE b_fill_curs CURSOR FOR axrp135_sel
   
   CALL g_detail_d.clear()
   #add-point:b_fill段其他頁簽清空
   {<point name="b_fill.clear"/>}
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs USING g_enterprise INTO 
   #add-point:b_fill段foreach_into
   {<point name="b_fill.foreach_into"/>}
   #end add-point
   
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充
      {<point name="b_fill.foreach_iside"/>}
      #end add-point
      
      CALL axrp135_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            CALL cl_err( "", 9035, 1 )
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.other_table"/>}
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE axrp135_sel
   
   LET l_ac = 1
   CALL axrp135_fetch()
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.after_b_fill"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="axrp135.description" ver="1" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000016
#+ 
#+ Filename...: axrp135
#+ Description: 應收立帳單批次還原作業
#+ Creator....: 01727(2014/06/10)
#+ Modifier...: 01727(2014/06/11)
#+ Buildtype..: 應用 p02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="axrp135.detail_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION axrp135_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段
   {<point name="detail_show.detail_show"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="axrp135.fetch" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION axrp135_fetch()
 
   DEFINE li_ac           LIKE type_t.num5
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   #add-point:單身填充後
   {<point name="fetch.after_fill" />}
   #end add-point 
   
   LET l_ac = li_ac
   
END FUNCTION
]]>
</section>
  <section id="axrp135.filter" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axrp135_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point    
 
   DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
      ON UPDATE
 
   END DISPLAY
 
   LET l_ac = 1
   LET g_detail_cnt = 1
   #add-point:filter段define
   {<point name="filter.detail_cnt"/>}
   #end add-point    
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
   
   CALL axrp135_b_fill()
   CALL axrp135_fetch()
   
END FUNCTION
]]>
</section>
  <section id="axrp135.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter欄位解析
PRIVATE FUNCTION axrp135_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="axrp135.filter_show" ver="1" status="" src="s">
<![CDATA[#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION axrp135_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axrp135_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="axrp135.global" ver="1" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc" 
 
#模組變數(Module Variables)
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              
DEFINE l_ac_d               LIKE type_t.num5              #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num5              #目前所在頁數
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num5
 
TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
TYPE type_g_detail_d RECORD
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="axrp135.init" ver="1" status="" src="s">
<![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION axrp135_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
 
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="axrp135.main" ver="1" status="" src="s">
<![CDATA[#+ 作業開始 
MAIN
   DEFINE ls_js  STRING
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axr","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_axrp135 WITH FORM cl_ap_formpath("axr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axrp135_init()   
 
      #進入選單 Menu (="N")
      CALL axrp135_ui_dialog() 
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_axrp135
   END IF 
   
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
</section>
  <section id="axrp135.other_function" ver="1" status="" src="s">
<![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
</section>
  <section id="axrp135.query" ver="1" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axrp135_query()
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define" />}
   #end add-point 
   
   #add-point:cs段after_construct
   {<point name="query.after_construct" />}
   #end add-point
        
   LET g_error_show = 1
   CALL axrp135_b_fill()
   LET l_ac = g_master_idx
   CALL axrp135_fetch()
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="axrp135.ui_dialog" ver="1" status="" src="s">
<![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION axrp135_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   LET g_detail_cnt = g_detail_d.getLength()
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
 
      CALL cl_dlg_query_bef_disp()  #相關查詢
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
 
         BEFORE DIALOG
            IF g_detail_d.getLength() > 0 THEN
               CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
            ELSE
               CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            END IF
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "Y"
            END FOR
            #add-point:ui_dialog段on action selall
            {<point name="ui_dialog.onaction_selall"/>}
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "N"
            END FOR
            #add-point:ui_dialog段on action selnone
            {<point name="ui_dialog.onaction_selnone"/>}
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "Y"
               END IF
            END FOR
            #add-point:ui_dialog段on action sel
            {<point name="ui_dialog.onaction_sel"/>}
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR
            #add-point:ui_dialog段on action unsel
            {<point name="ui_dialog.onaction_unsel"/>}
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL axrp135_filter()
            #add-point:ON ACTION filter
            {<point name="menu.filter" />}
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION accept
            CALL axrp135_query()
 
         # 條件清除
         ON ACTION qbeclear
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            CALL axrp135_b_fill()
            CALL axrp135_fetch()
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
</section>
</add_points>