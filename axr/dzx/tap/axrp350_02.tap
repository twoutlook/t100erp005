<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="axrp350_02" std_prog="axrp350_02" erpver="1.0" module="AXR" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="b_fill.fill" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_isaf_d[l_ac].isaf002
      CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_isaf_d[l_ac].isaf002_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_isaf_d[l_ac].isaf002_desc]]>
  </point>
  <point name="b_fill.sql_after" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_isafdocdt_type = '2' THEN 
      LET g_sql = "SELECT DISTINCT isag118,isafcomp,isaf002,'',isafdocno,isaf014,isaf010,isaf011,isaf103,isaf104,isaf105",
                  "  FROM isaf_t,isag_t ",
                  " WHERE isafent = isagent ",
                  "   AND isafcomp = isagcomp ",
                  "   AND isafdocno = isafdocno ",
                  "   AND isafent = ? ",
                  "   AND isag118 IN (",
                  "SELECT xrcadocno FROM xrca_t ",
                  " WHERE xrcaent = '",g_enterprise,"'",
                  "   AND xrcald = '",g_xrcald,"'",
                  "   AND xrca028 = '",g_isae009,"'",
                  "   AND xrcastus = 'Y' ",
                  "   AND xrca061 = '",g_isaf014,"'",
                  "   AND ",g_wc,")"
   ELSE
      LET g_sql = "SELECT DISTINCT isag118,isafcomp,isaf002,'',isafdocno,isaf014,isaf010,isaf011,isaf103,isaf104,isaf105",
                  "  FROM isaf_t,isag_t ",
                  " WHERE isafent = isagent ",
                  "   AND isafcomp = isagcomp ",
                  "   AND isafdocno = isafdocno ",
                  "   AND isafent = ? ",
                  "   AND isag118 IN (",
                  "SELECT xrcadocno FROM xrca_t ",
                  " WHERE xrcaent = '",g_enterprise,"'",
                  "   AND xrcald = '",g_xrcald,"'",
                  "   AND xrca028 = '",g_isae009,"'",
                  "   AND xrcastus = 'Y' ",
                  "   AND ",g_wc,")"
   END IF]]>
  </point>
  <point name="construct.c.page1.isaf002" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isaf002  #顯示到畫面上

            NEXT FIELD isaf002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.isafdocno" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_isafdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO isafdocno  #顯示到畫面上

            NEXT FIELD isafdocno                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.xrcadocno" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_xrcadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xrcadocno  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO xrca001 #帳款單性質 

            NEXT FIELD xrcadocno                     #返回原欄位

]]>
  </point>
  <point name="detail_show.reference" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   #INITIALIZE g_ref_fields TO NULL 
   #LET g_ref_fields[1] = g_isaf_d[l_ac].isafcomp
   #LET g_ref_fields[2] = g_isaf_d[l_ac].isafdocno
   #CALL ap_ref_array2(g_ref_fields," SELECT xrcadocno FROM xrca_t WHERE xrcaent = '"||g_enterprise||"' AND xrcald = ? AND xrcadocno = ? ","") RETURNING g_rtn_fields 
   #LET g_isaf_d[l_ac].xrcadocno = g_rtn_fields[1] 
   #DISPLAY BY NAME g_isaf_d[l_ac].xrcadocno]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_wc                 STRING
DEFINE g_isafdocdt_type     LIKE type_t.chr1
DEFINE g_isaf014            LIKE isaf_t.isaf014
DEFINE g_xrcald             LIKE xrca_t.xrcald
DEFINE g_isae009            LIKE isae_t.isae009
DEFINE g_ooef019            LIKE ooef_t.ooef019]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_isai002            LIKE isai_t.isai002]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   SELECT isai002 INTO l_isai002
     FROM isai_t
    WHERE isaient = g_enterprise
      AND isai001 = g_ooef019
     
   IF l_isai002 = '1' THEN 
      CALL cl_set_comp_visible('isaf010',FALSE)
   ELSE
      CALL cl_set_comp_visible('isaf010',TRUE)
   END IF]]>
  </point>
  <point name="input.a.page1.isaf002" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_isaf_d[l_ac].isaf002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_isaf_d[l_ac].isaf002

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_pmaa001_2") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
  </point>
  <point name="input.a.page1.isafcomp" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_isaf_d[g_detail_idx].isafcomp IS NOT NULL AND g_isaf_d[g_detail_idx].isafdocno IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_isaf_d[g_detail_idx].isafcomp != g_isaf_d_t.isafcomp OR g_isaf_d[g_detail_idx].isafdocno != g_isaf_d_t.isafdocno)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM isaf_t WHERE "||"isafent = '" ||g_enterprise|| "' AND "||"isafcomp = '"||g_isaf_d[g_detail_idx].isafcomp ||"' AND "|| "isafdocno = '"||g_isaf_d[g_detail_idx].isafdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.isafdocno" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_isaf_d[l_ac].isafdocno) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_isaf_d[l_ac].isafdocno
               LET g_chkparam.arg2 = '參數2'

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_ooba002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

            #此段落由子樣板a05產生

]]>
  </point>
  <point name="input.c.page1.isaf002" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_isaf_d[l_ac].isaf002             #給予default值

            #給予arg

            CALL q_pmaa001()                                #呼叫開窗

            LET g_isaf_d[l_ac].isaf002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_isaf_d[l_ac].isaf002 TO isaf002              #顯示到畫面上

            NEXT FIELD isaf002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.isafdocno" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_isaf_d[l_ac].isafdocno             #給予default值

            #給予arg

            CALL q_ooba002()                                #呼叫開窗

            LET g_isaf_d[l_ac].isafdocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_isaf_d[l_ac].isafdocno TO isafdocno              #顯示到畫面上

            NEXT FIELD isafdocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.xrcadocno" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_isaf_d[l_ac].xrcadocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.arg2 = "" #

            CALL q_ooba002_3()                                #呼叫開窗

            LET g_isaf_d[l_ac].xrcadocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_isaf_d[l_ac].xrcadocno TO xrcadocno              #顯示到畫面上

            NEXT FIELD xrcadocno                          #返回原欄位

]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE p_wc                 STRING
   DEFINE p_isafdocdt_type     LIKE type_t.chr1
   DEFINE p_isaf014            LIKE isaf_t.isaf014
   DEFINE p_xrcald             LIKE xrca_t.xrcald
   DEFINE p_isae009            LIKE isae_t.isae009
   DEFINE p_ooef019            LIKE ooef_t.ooef019
   DEFINE l_isai002            LIKE isai_t.isai002]]>
  </point>
  <point name="main.get_var" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   p_wc,p_isafdocdt_type,p_isaf014,p_xrcald,p_isae009,p_ooef019]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_isafdocdt_type = p_isafdocdt_type
   LET g_wc = p_wc
   LET g_isaf014 = p_isaf014
   LET g_xrcald = p_xrcald
   LET g_isae009 = p_isae009
   LET g_ooef019 = p_ooef019]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_isaf_d[l_ac].isafcomp
   LET g_ref_fields[2] = g_isaf_d[l_ac].isafdocno
   CALL ap_ref_array2(g_ref_fields," SELECT xrcadocno FROM xrca_t WHERE xrcaent = '"||g_enterprise||"' AND xrcald = ? AND xrcadocno = ? ","") RETURNING g_rtn_fields 
   LET g_isaf_d[l_ac].xrcadocno = g_rtn_fields[1] 
   DISPLAY BY NAME g_isaf_d[l_ac].xrcadocno]]>
  </point>
  <section id="axrp350_02.b_fill" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axrp350_02_b_fill(p_wc2)              #BODY FILL UP
   {<Local define>}
   DEFINE p_wc2           STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE '',isafcomp,isaf002,'',isafdocno,isaf014,isaf010,isaf011,isaf103,isaf104, 
       isaf105 FROM isaf_t",
               "",
               " WHERE isafent= ? AND 1=1 AND ", p_wc2
    
   LET g_sql = g_sql, " ORDER BY isaf_t.isafcomp,isaf_t.isafdocno"
  
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE axrp350_02_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR axrp350_02_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_isaf_d.clear()
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_isaf_d[l_ac].xrcadocno,g_isaf_d[l_ac].isafcomp,g_isaf_d[l_ac].isaf002, 
       g_isaf_d[l_ac].isaf002_desc,g_isaf_d[l_ac].isafdocno,g_isaf_d[l_ac].isaf014,g_isaf_d[l_ac].isaf010, 
       g_isaf_d[l_ac].isaf011,g_isaf_d[l_ac].isaf103,g_isaf_d[l_ac].isaf104,g_isaf_d[l_ac].isaf105
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL axrp350_02_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec AND g_error_show = 1 THEN
      CALL cl_err("isaf_t",9035,1)
   END IF 
   LET g_error_show = 0
   
 
  
   
   CALL g_isaf_d.deleteElement(g_isaf_d.getLength())   
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_isaf_d.getLength()
 
   END FOR
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE axrp350_02_pb
   
END FUNCTION
]]>
  </section>
  <section id="axrp350_02.default_search" ver="1" status="" src="s">
    <![CDATA[#+ 外部參數搜尋, 施工中
PRIVATE FUNCTION axrp350_02_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " isafcomp = '", g_argv[1], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " isafdocno = ", g_argv[02], " AND "
   END IF
 
 
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="axrp350_02.delete" ver="1" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION axrp350_02_delete()
   DEFINE li_ac LIKE type_t.num5
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   IF NOT cl_ask_delete() THEN
      LET INT_FLAG = 1 #不刪除
   ELSE
      LET INT_FLAG = 0 #要刪除
   END IF
   
   LET li_ac = ARR_CURR()
   
   CALL s_transaction_begin()  
 
   #add-point:delete段刪除前
   {<point name="delete.b_delete" mark="Y"/>}
   #end add-point 
   DELETE FROM isaf_t 
         WHERE isafcomp = g_isaf_d[li_ac].isafcomp
           AND isafdocno = g_isaf_d[li_ac].isafdocno
 
 
   #add-point:delete段刪除中
   {<point name="delete.m_delete"/>}
   #end add-point 
   IF SQLCA.sqlcode THEN
      CALL cl_err("isaf_t",SQLCA.sqlcode,1) 
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
   #add-point:delete段刪除後
   {<point name="delete.a_delete"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="axrp350_02.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION axrp350_02_delete_b(ps_table,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "isaf_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM isaf_t
       WHERE isafent = g_enterprise AND
         isafcomp = ps_keys_bak[1] AND isafdocno = ps_keys_bak[2]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="axrp350_02.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000040
#+ 
#+ Filename...: axrp350_02
#+ Description: ...
#+ Creator....: 02114(2014/02/17)
#+ Modifier...: 02114(2014/02/17)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="axrp350_02.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION axrp350_02_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="axrp350_02.global" ver="1" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_isaf_d RECORD
       xrcadocno LIKE type_t.chr20, 
   isafcomp LIKE isaf_t.isafcomp, 
   isaf002 LIKE isaf_t.isaf002, 
   isaf002_desc LIKE type_t.chr500, 
   isafdocno LIKE isaf_t.isafdocno, 
   isaf014 LIKE isaf_t.isaf014, 
   isaf010 LIKE isaf_t.isaf010, 
   isaf011 LIKE isaf_t.isaf011, 
   isaf103 LIKE isaf_t.isaf103, 
   isaf104 LIKE isaf_t.isaf104, 
   isaf105 LIKE isaf_t.isaf105
       END RECORD
 
 
#無單身append欄位定義
 
#模組變數(Module Variables)
DEFINE g_isaf_d          DYNAMIC ARRAY OF type_g_isaf_d
DEFINE g_isaf_d_t        type_g_isaf_d
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="axrp350_02.init" ver="1" status="" src="s">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION axrp350_02_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL axrp350_02_default_search()
   
END FUNCTION
]]>
  </section>
  <section id="axrp350_02.insert" ver="1" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION axrp350_02_insert()
   {<Local define>}
   DEFINE li_ac LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point 
   
   #輸入前動作  
   LET li_ac = l_ac 
   LET l_ac = 1   
   LET g_before_input_done = FALSE                                        
   CALL axrp350_02_set_entry_b("a")  
   
   CALL axrp350_02_set_no_entry_b("a")                                          
   LET g_before_input_done = TRUE                                            
   
   #append欄位         
      
 
 
   
   #add-point:insert段before insert
   {<point name="insert.before_insert"/>}
   #end add-point  
 
   #資料輸入
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM) 
      INPUT g_isaf_d[1].* FROM s_detail1[1].*
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         BEFORE INPUT
         
      END INPUT
      
 
      
      BEFORE DIALOG 
   
   END DIALOG
   
   #輸入後動作
   IF INT_FLAG THEN
      CALL cl_err("",9001,0)
      LET INT_FLAG = 1
      RETURN
   END IF
   
   CALL s_transaction_begin()                    
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="axrp350_02.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION axrp350_02_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "isaf_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO isaf_t
                  (isafent,
                   isafcomp,isafdocno
                   ,isaf002,isaf014,isaf010,isaf011,isaf103,isaf104,isaf105) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_isaf_d[l_ac].isaf002,g_isaf_d[l_ac].isaf014,g_isaf_d[l_ac].isaf010,g_isaf_d[l_ac].isaf011, 
                       g_isaf_d[l_ac].isaf103,g_isaf_d[l_ac].isaf104,g_isaf_d[l_ac].isaf105)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("isaf_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="axrp350_02.link_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動單身idx
PRIVATE FUNCTION axrp350_02_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="axrp350_02.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION axrp350_02_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL axrp350_02_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "isaf_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN axrp350_02_bcl USING g_enterprise,
                                       g_isaf_d[g_detail_idx].isafcomp,g_isaf_d[g_detail_idx].isafdocno 

                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("axrp350_02_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axrp350_02.main" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a27產生
#+ 資料輸入
PUBLIC FUNCTION axrp350_02(--)
   #add-point:main段變數傳入
   {<point name="main.get_var"/>}
   #end add-point
   )
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" mark="Y"/>}
   #end add-point
   LET g_forupd_sql = ""
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)   #轉換不同資料庫語法
   DECLARE axrp350_02_cl CURSOR FROM g_forupd_sql     # LOCK CURSOR
 
   
   #畫面開啟 (identifier)
   OPEN WINDOW w_axrp350_02 WITH FORM cl_ap_formpath("axr","axrp350_02")
   
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   #程式初始化
   CALL axrp350_02_init()   
 
   #進入選單 Menu (="N")
   CALL axrp350_02_ui_dialog() 
 
   #畫面關閉
   CLOSE WINDOW w_axrp350_02
 
   CLOSE axrp350_02_cl
   
   
 
   #add-point:離開前
   {<point name="main.exit" />}
   #end add-point
 
END FUNCTION
 
 
]]>
  </section>
  <section id="axrp350_02.modify" ver="1" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION axrp350_02_modify()
   {<Local define>}
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   {</Local define>}
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
 
   #add-point:modify段define_sql
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT '',isafcomp,isaf002,'',isafdocno,isaf014,isaf010,isaf011,isaf103,isaf104, 
       isaf105 FROM isaf_t WHERE isafent=? AND isafcomp=? AND isafdocno=? FOR UPDATE"
   #add-point:modify段define_sql
   {<point name="modify.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE axrp350_02_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
   
 
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_isaf_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = FALSE, 
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_isaf_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axrp350_02_b_fill(g_wc2)
            LET g_detail_cnt = g_isaf_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_isaf_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_isaf_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_isaf_d[l_ac].isafcomp IS NOT NULL
               AND g_isaf_d[l_ac].isafdocno IS NOT NULL
 
 
            THEN
               LET l_cmd='u'
               LET g_isaf_d_t.* = g_isaf_d[l_ac].*  #BACKUP
               IF NOT axrp350_02_lock_b("isaf_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axrp350_02_bcl INTO g_isaf_d[l_ac].xrcadocno,g_isaf_d[l_ac].isafcomp,g_isaf_d[l_ac].isaf002, 
                      g_isaf_d[l_ac].isaf002_desc,g_isaf_d[l_ac].isafdocno,g_isaf_d[l_ac].isaf014,g_isaf_d[l_ac].isaf010, 
                      g_isaf_d[l_ac].isaf011,g_isaf_d[l_ac].isaf103,g_isaf_d[l_ac].isaf104,g_isaf_d[l_ac].isaf105 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_isaf_d_t.isafcomp,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL axrp350_02_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_isaf_d_t.* TO NULL
            INITIALIZE g_isaf_d[l_ac].* TO NULL 
            
            LET g_isaf_d_t.* = g_isaf_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axrp350_02_set_entry_b("a")
            CALL axrp350_02_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_isaf_d[li_reproduce_target].* = g_isaf_d[li_reproduce].*
 
               LET g_isaf_d[g_isaf_d.getLength()].isafcomp = NULL
               LET g_isaf_d[g_isaf_d.getLength()].isafdocno = NULL
 
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM isaf_t 
             WHERE isafent = g_enterprise AND isafcomp = g_isaf_d[l_ac].isafcomp
                                       AND isafdocno = g_isaf_d[l_ac].isafdocno
 
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_isaf_d[g_detail_idx].isafcomp
               LET gs_keys[2] = g_isaf_d[g_detail_idx].isafdocno
               CALL axrp350_02_insert_b('isaf_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_isaf_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("isaf_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axrp350_02_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (isafcomp = '", g_isaf_d[l_ac].isafcomp, "' "
                                  ," AND isafdocno = '", g_isaf_d[l_ac].isafdocno, "' "
 
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_isaf_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_isaf_d.deleteElement(l_ac)
               NEXT FIELD isafcomp
            END IF
            IF g_isaf_d[l_ac].isafcomp IS NOT NULL
               AND g_isaf_d_t.isafdocno IS NOT NULL
 
 
               THEN     
            
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM isaf_t
                WHERE isafent = g_enterprise AND 
                      isafcomp = g_isaf_d_t.isafcomp
                      AND isafdocno = g_isaf_d_t.isafdocno
 
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("isaf_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE axrp350_02_bcl
               LET l_count = g_isaf_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_isaf_d[g_detail_idx].isafcomp
               LET gs_keys[2] = g_isaf_d[g_detail_idx].isafdocno
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL axrp350_02_delete_b('isaf_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<xrcadocno>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrcadocno
            #add-point:BEFORE FIELD xrcadocno
            {<point name="input.b.page1.xrcadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xrcadocno
            
            #add-point:AFTER FIELD xrcadocno
            {<point name="input.a.page1.xrcadocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xrcadocno
            #add-point:ON CHANGE xrcadocno
            {<point name="input.g.page1.xrcadocno" />}
            #END add-point
 
         #----<<isafcomp>>----
         #此段落由子樣板a01產生
         BEFORE FIELD isafcomp
            #add-point:BEFORE FIELD isafcomp
            {<point name="input.b.page1.isafcomp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isafcomp
            
            #add-point:AFTER FIELD isafcomp
            {<point name="input.a.page1.isafcomp" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE isafcomp
            #add-point:ON CHANGE isafcomp
            {<point name="input.g.page1.isafcomp" />}
            #END add-point
 
         #----<<isaf002>>----
         #此段落由子樣板a02產生
         AFTER FIELD isaf002
            
            #add-point:AFTER FIELD isaf002
            {<point name="input.a.page1.isaf002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD isaf002
            #add-point:BEFORE FIELD isaf002
            {<point name="input.b.page1.isaf002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE isaf002
            #add-point:ON CHANGE isaf002
            {<point name="input.g.page1.isaf002" />}
            #END add-point
 
         #----<<isafdocno>>----
         #此段落由子樣板a02產生
         AFTER FIELD isafdocno
            
            #add-point:AFTER FIELD isafdocno
            {<point name="input.a.page1.isafdocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD isafdocno
            #add-point:BEFORE FIELD isafdocno
            {<point name="input.b.page1.isafdocno" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE isafdocno
            #add-point:ON CHANGE isafdocno
            {<point name="input.g.page1.isafdocno" />}
            #END add-point
 
         #----<<isaf014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD isaf014
            #add-point:BEFORE FIELD isaf014
            {<point name="input.b.page1.isaf014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isaf014
            
            #add-point:AFTER FIELD isaf014
            {<point name="input.a.page1.isaf014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE isaf014
            #add-point:ON CHANGE isaf014
            {<point name="input.g.page1.isaf014" />}
            #END add-point
 
         #----<<isaf010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD isaf010
            #add-point:BEFORE FIELD isaf010
            {<point name="input.b.page1.isaf010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isaf010
            
            #add-point:AFTER FIELD isaf010
            {<point name="input.a.page1.isaf010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE isaf010
            #add-point:ON CHANGE isaf010
            {<point name="input.g.page1.isaf010" />}
            #END add-point
 
         #----<<isaf011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD isaf011
            #add-point:BEFORE FIELD isaf011
            {<point name="input.b.page1.isaf011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isaf011
            
            #add-point:AFTER FIELD isaf011
            {<point name="input.a.page1.isaf011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE isaf011
            #add-point:ON CHANGE isaf011
            {<point name="input.g.page1.isaf011" />}
            #END add-point
 
         #----<<isaf103>>----
         #此段落由子樣板a01產生
         BEFORE FIELD isaf103
            #add-point:BEFORE FIELD isaf103
            {<point name="input.b.page1.isaf103" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isaf103
            
            #add-point:AFTER FIELD isaf103
            {<point name="input.a.page1.isaf103" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE isaf103
            #add-point:ON CHANGE isaf103
            {<point name="input.g.page1.isaf103" />}
            #END add-point
 
         #----<<isaf104>>----
         #此段落由子樣板a01產生
         BEFORE FIELD isaf104
            #add-point:BEFORE FIELD isaf104
            {<point name="input.b.page1.isaf104" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isaf104
            
            #add-point:AFTER FIELD isaf104
            {<point name="input.a.page1.isaf104" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE isaf104
            #add-point:ON CHANGE isaf104
            {<point name="input.g.page1.isaf104" />}
            #END add-point
 
         #----<<isaf105>>----
         #此段落由子樣板a01產生
         BEFORE FIELD isaf105
            #add-point:BEFORE FIELD isaf105
            {<point name="input.b.page1.isaf105" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isaf105
            
            #add-point:AFTER FIELD isaf105
            {<point name="input.a.page1.isaf105" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE isaf105
            #add-point:ON CHANGE isaf105
            {<point name="input.g.page1.isaf105" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<xrcadocno>>----
         #Ctrlp:input.c.page1.xrcadocno
         ON ACTION controlp INFIELD xrcadocno
            #add-point:ON ACTION controlp INFIELD xrcadocno
            {<point name="input.c.page1.xrcadocno" />}
            #END add-point
 
         #----<<isafcomp>>----
         #Ctrlp:input.c.page1.isafcomp
         ON ACTION controlp INFIELD isafcomp
            #add-point:ON ACTION controlp INFIELD isafcomp
            {<point name="input.c.page1.isafcomp" />}
            #END add-point
 
         #----<<isaf002>>----
         #Ctrlp:input.c.page1.isaf002
         ON ACTION controlp INFIELD isaf002
            #add-point:ON ACTION controlp INFIELD isaf002
            {<point name="input.c.page1.isaf002" />}
            #END add-point
 
         #----<<isafdocno>>----
         #Ctrlp:input.c.page1.isafdocno
         ON ACTION controlp INFIELD isafdocno
            #add-point:ON ACTION controlp INFIELD isafdocno
            {<point name="input.c.page1.isafdocno" />}
            #END add-point
 
         #----<<isaf014>>----
         #Ctrlp:input.c.page1.isaf014
         ON ACTION controlp INFIELD isaf014
            #add-point:ON ACTION controlp INFIELD isaf014
            {<point name="input.c.page1.isaf014" />}
            #END add-point
 
         #----<<isaf010>>----
         #Ctrlp:input.c.page1.isaf010
         ON ACTION controlp INFIELD isaf010
            #add-point:ON ACTION controlp INFIELD isaf010
            {<point name="input.c.page1.isaf010" />}
            #END add-point
 
         #----<<isaf011>>----
         #Ctrlp:input.c.page1.isaf011
         ON ACTION controlp INFIELD isaf011
            #add-point:ON ACTION controlp INFIELD isaf011
            {<point name="input.c.page1.isaf011" />}
            #END add-point
 
         #----<<isaf103>>----
         #Ctrlp:input.c.page1.isaf103
         ON ACTION controlp INFIELD isaf103
            #add-point:ON ACTION controlp INFIELD isaf103
            {<point name="input.c.page1.isaf103" />}
            #END add-point
 
         #----<<isaf104>>----
         #Ctrlp:input.c.page1.isaf104
         ON ACTION controlp INFIELD isaf104
            #add-point:ON ACTION controlp INFIELD isaf104
            {<point name="input.c.page1.isaf104" />}
            #END add-point
 
         #----<<isaf105>>----
         #Ctrlp:input.c.page1.isaf105
         ON ACTION controlp INFIELD isaf105
            #add-point:ON ACTION controlp INFIELD isaf105
            {<point name="input.c.page1.isaf105" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_isaf_d[l_ac].* = g_isaf_d_t.*
               CLOSE axrp350_02_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_isaf_d[l_ac].isafcomp,-263,1)
               LET g_isaf_d[l_ac].* = g_isaf_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE isaf_t SET (isafcomp,isaf002,isafdocno,isaf014,isaf010,isaf011,isaf103,isaf104, 
                   isaf105) = (g_isaf_d[l_ac].isafcomp,g_isaf_d[l_ac].isaf002,g_isaf_d[l_ac].isafdocno, 
                   g_isaf_d[l_ac].isaf014,g_isaf_d[l_ac].isaf010,g_isaf_d[l_ac].isaf011,g_isaf_d[l_ac].isaf103, 
                   g_isaf_d[l_ac].isaf104,g_isaf_d[l_ac].isaf105)
                WHERE isafent = g_enterprise AND
                  isafcomp = g_isaf_d_t.isafcomp #項次   
                  AND isafdocno = g_isaf_d_t.isafdocno  
 
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("isaf_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("isaf_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_isaf_d[g_detail_idx].isafcomp
               LET gs_keys_bak[1] = g_isaf_d_t.isafcomp
               LET gs_keys[2] = g_isaf_d[g_detail_idx].isafdocno
               LET gs_keys_bak[2] = g_isaf_d_t.isafdocno
               CALL axrp350_02_update_b('isaf_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL axrp350_02_unlock_b("isaf_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
             #add-point:單身after row
            {<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_isaf_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_isaf_d.getLength()+1
            
      END INPUT
      
 
      
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD xrcadocno
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE axrp350_02_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
  </section>
  <section id="axrp350_02.modify_detail_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION axrp350_02_modify_detail_chk(ps_record)
   {<Local define>}
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   {</Local define>}
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "xrcadocno"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="axrp350_02.other_function" ver="1" status="" src="s">
    <![CDATA[   {<point name="other.dialog"/>}
{<point name="other.function"/>}
]]>
  </section>
  <section id="axrp350_02.query" ver="1" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axrp350_02_query()
   {<Local define>}
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_isaf_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON xrcadocno,isafcomp,isaf002,isafdocno,isaf014,isaf010,isaf011,isaf103,isaf104, 
          isaf105 
 
         FROM s_detail1[1].xrcadocno,s_detail1[1].isafcomp,s_detail1[1].isaf002,s_detail1[1].isafdocno, 
             s_detail1[1].isaf014,s_detail1[1].isaf010,s_detail1[1].isaf011,s_detail1[1].isaf103,s_detail1[1].isaf104, 
             s_detail1[1].isaf105 
      
         
      
         #---------------------<  Detail: page1  >---------------------
         #----<<xrcadocno>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrcadocno
            #add-point:BEFORE FIELD xrcadocno
            {<point name="query.b.page1.xrcadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xrcadocno
            
            #add-point:AFTER FIELD xrcadocno
            {<point name="query.a.page1.xrcadocno" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.xrcadocno
         ON ACTION controlp INFIELD xrcadocno
            #add-point:ON ACTION controlp INFIELD xrcadocno
            {<point name="query.c.page1.xrcadocno" />}
            #END add-point
 
         #----<<isafcomp>>----
         #此段落由子樣板a01產生
         BEFORE FIELD isafcomp
            #add-point:BEFORE FIELD isafcomp
            {<point name="query.b.page1.isafcomp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isafcomp
            
            #add-point:AFTER FIELD isafcomp
            {<point name="query.a.page1.isafcomp" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.isafcomp
         ON ACTION controlp INFIELD isafcomp
            #add-point:ON ACTION controlp INFIELD isafcomp
            {<point name="query.c.page1.isafcomp" />}
            #END add-point
 
         #----<<isaf002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD isaf002
            #add-point:BEFORE FIELD isaf002
            {<point name="query.b.page1.isaf002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isaf002
            
            #add-point:AFTER FIELD isaf002
            {<point name="query.a.page1.isaf002" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.isaf002
         ON ACTION controlp INFIELD isaf002
            #add-point:ON ACTION controlp INFIELD isaf002
            {<point name="query.c.page1.isaf002" />}
            #END add-point
 
         #----<<isafdocno>>----
         #Ctrlp:construct.c.page1.isafdocno
         ON ACTION controlp INFIELD isafdocno
            #add-point:ON ACTION controlp INFIELD isafdocno
            {<point name="construct.c.page1.isafdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD isafdocno
            #add-point:BEFORE FIELD isafdocno
            {<point name="query.b.page1.isafdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isafdocno
            
            #add-point:AFTER FIELD isafdocno
            {<point name="query.a.page1.isafdocno" />}
            #END add-point
            
 
         #----<<isaf014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD isaf014
            #add-point:BEFORE FIELD isaf014
            {<point name="query.b.page1.isaf014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isaf014
            
            #add-point:AFTER FIELD isaf014
            {<point name="query.a.page1.isaf014" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.isaf014
         ON ACTION controlp INFIELD isaf014
            #add-point:ON ACTION controlp INFIELD isaf014
            {<point name="query.c.page1.isaf014" />}
            #END add-point
 
         #----<<isaf010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD isaf010
            #add-point:BEFORE FIELD isaf010
            {<point name="query.b.page1.isaf010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isaf010
            
            #add-point:AFTER FIELD isaf010
            {<point name="query.a.page1.isaf010" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.isaf010
         ON ACTION controlp INFIELD isaf010
            #add-point:ON ACTION controlp INFIELD isaf010
            {<point name="query.c.page1.isaf010" />}
            #END add-point
 
         #----<<isaf011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD isaf011
            #add-point:BEFORE FIELD isaf011
            {<point name="query.b.page1.isaf011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isaf011
            
            #add-point:AFTER FIELD isaf011
            {<point name="query.a.page1.isaf011" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.isaf011
         ON ACTION controlp INFIELD isaf011
            #add-point:ON ACTION controlp INFIELD isaf011
            {<point name="query.c.page1.isaf011" />}
            #END add-point
 
         #----<<isaf103>>----
         #此段落由子樣板a01產生
         BEFORE FIELD isaf103
            #add-point:BEFORE FIELD isaf103
            {<point name="query.b.page1.isaf103" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isaf103
            
            #add-point:AFTER FIELD isaf103
            {<point name="query.a.page1.isaf103" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.isaf103
         ON ACTION controlp INFIELD isaf103
            #add-point:ON ACTION controlp INFIELD isaf103
            {<point name="query.c.page1.isaf103" />}
            #END add-point
 
         #----<<isaf104>>----
         #此段落由子樣板a01產生
         BEFORE FIELD isaf104
            #add-point:BEFORE FIELD isaf104
            {<point name="query.b.page1.isaf104" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isaf104
            
            #add-point:AFTER FIELD isaf104
            {<point name="query.a.page1.isaf104" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.isaf104
         ON ACTION controlp INFIELD isaf104
            #add-point:ON ACTION controlp INFIELD isaf104
            {<point name="query.c.page1.isaf104" />}
            #END add-point
 
         #----<<isaf105>>----
         #此段落由子樣板a01產生
         BEFORE FIELD isaf105
            #add-point:BEFORE FIELD isaf105
            {<point name="query.b.page1.isaf105" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD isaf105
            
            #add-point:AFTER FIELD isaf105
            {<point name="query.a.page1.isaf105" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.isaf105
         ON ACTION controlp INFIELD isaf105
            #add-point:ON ACTION controlp INFIELD isaf105
            {<point name="query.c.page1.isaf105" />}
            #END add-point
 
  
         
 
      
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_init()
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
         ON ACTION qbe_select
#saki            CALL cl_qbe_select()
      
         ON ACTION qbe_save
#saki            CALL cl_qbe_save()
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
   
   #LET g_wc2 = g_wc2 CLIPPED, cl_get_extra_cond("", "")
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL axrp350_02_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
  </section>
  <section id="axrp350_02.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION axrp350_02_set_entry_b(p_cmd)                                                  
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1         
   {</Local define>}
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
  </section>
  <section id="axrp350_02.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION axrp350_02_set_no_entry_b(p_cmd)                                               
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1           
   {</Local define>}
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
  </section>
  <section id="axrp350_02.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="axrp350_02.ui_dialog" ver="1" status="" src="s">
    <![CDATA[#+ 功能選單 
PRIVATE FUNCTION axrp350_02_ui_dialog()
   {<Local define>}
   DEFINE li_idx   LIKE type_t.num5
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL axrp350_02_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_isaf_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
      
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
 
      
         #add-point:ui_dialog段more_displayarray
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
 
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL axrp350_02_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
  <section id="axrp350_02.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axrp350_02_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE axrp350_02_bcl
   #END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="axrp350_02.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION axrp350_02_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "isaf_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "isaf_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE isaf_t 
         SET (isafcomp,isafdocno
              ,isaf002,isaf014,isaf010,isaf011,isaf103,isaf104,isaf105) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_isaf_d[l_ac].isaf002,g_isaf_d[l_ac].isaf014,g_isaf_d[l_ac].isaf010,g_isaf_d[l_ac].isaf011, 
                  g_isaf_d[l_ac].isaf103,g_isaf_d[l_ac].isaf104,g_isaf_d[l_ac].isaf105) 
         WHERE isafcomp = ps_keys_bak[1] AND isafdocno = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("isaf_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("isaf_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
