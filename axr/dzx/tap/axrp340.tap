<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="axrp340" std_prog="axrp340" erpver="1.0" module="AXR" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.page1.b_xrca004" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xrca004  #顯示到畫面上
            NEXT FIELD b_xrca004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.b_xrca100" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooai001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xrca100  #顯示到畫面上
            NEXT FIELD b_xrca100                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.b_xrcacnfid" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xrcacnfid  #顯示到畫面上
            NEXT FIELD b_xrcacnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.b_xrcacrtdp" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xrcacrtdp  #顯示到畫面上
            NEXT FIELD b_xrcacrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.b_xrcacrtid" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xrcacrtid  #顯示到畫面上
            NEXT FIELD b_xrcacrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.b_xrcadocno" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xrcadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xrcadocno  #顯示到畫面上
            NEXT FIELD b_xrcadocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.b_xrcald" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xrcald  #顯示到畫面上
            NEXT FIELD b_xrcald                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.b_xrcamodid" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xrcamodid  #顯示到畫面上
            NEXT FIELD b_xrcamodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.b_xrcaowndp" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xrcaowndp  #顯示到畫面上
            NEXT FIELD b_xrcaowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.b_xrcaownid" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xrcaownid  #顯示到畫面上
            NEXT FIELD b_xrcaownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.b_xrcapstid" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_xrcapstid  #顯示到畫面上
            NEXT FIELD b_xrcapstid                     #返回原欄位
    

]]>
  </point>
  <point name="detail_show.body.reference" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_xrca_d[l_ac].xrca004
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_xrca_d[l_ac].xrca004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_xrca_d[l_ac].xrca004_desc
]]>
  </point>
  <point name="input.a.page1.xrcadocno" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xrca_d[g_detail_idx].xrcald IS NOT NULL AND g_xrca_d[g_detail_idx].xrcadocno IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xrca_d[g_detail_idx].xrcald != g_xrca_d_t.xrcald OR g_xrca_d[g_detail_idx].xrcadocno != g_xrca_d_t.xrcadocno)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrca_t WHERE "||"xrcaent = '" ||g_enterprise|| "' AND "||"xrcald = '"||g_xrca_d[g_detail_idx].xrcald ||"' AND "|| "xrcadocno = '"||g_xrca_d[g_detail_idx].xrcadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.xrcald" order="0" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_xrca_d[g_detail_idx].xrcald IS NOT NULL AND g_xrca_d[g_detail_idx].xrcadocno IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_xrca_d[g_detail_idx].xrcald != g_xrca_d_t.xrcald OR g_xrca_d[g_detail_idx].xrcadocno != g_xrca_d_t.xrcadocno)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM xrca_t WHERE "||"xrcaent = '" ||g_enterprise|| "' AND "||"xrcald = '"||g_xrca_d[g_detail_idx].xrcald ||"' AND "|| "xrcadocno = '"||g_xrca_d[g_detail_idx].xrcadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="function.axrp340_def" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrp340_def()
   DEFINE l_sql         STRING
   DEFINE l_xrcasite    LIKE xrca_t.xrcasite
   DEFINE l_success     LIKE type_t.chr1

   LET l_sql = " SELECT DISTINCT xrah002 FROM xrah_t ",
               "  WHERE xrah004 IN(SELECT ooag004 FROM ooag_t WHERE ooag001 = '",g_user,"' AND ooagstus = 'Y')",
               "    AND xrah007 ='Y'",
               "    AND xrahstus ='Y'",
               "    AND xrah001 = '1'",
               "  ORDER BY xrah002"
   PREPARE axrp340_def_prep FROM l_sql
   DECLARE axrp340_def_curs CURSOR FOR axrp340_def_prep

   #抓取員工所屬營運據點對應的所有帳務中心
   FOREACH axrp340_def_curs INTO l_xrcasite

      #根據帳務中心抓取對應法人的主帳套
      SELECT glaald,glaacomp INTO g_xrca_m.xrcald,g_xrca_m.xrcacomp FROM glaa_t,ooef_t
       WHERE glaacomp = ooef017
         AND glaa014  = 'Y'
         AND ooef001  = l_xrcasite

      IF cl_null(g_xrca_m.xrcald) THEN LET g_xrca_m.xrcald = Null CONTINUE FOREACH END IF

      #根據帳套檢查該員工是否有使用權限
	  CALL s_ld_chk_authorization(g_user,g_xrca_m.xrcald) RETURNING l_success
	  IF l_success = 'N' THEN
	     LET g_xrca_m.xrcald   = NULL
	     CONTINUE FOREACH
	  ELSE
	     EXIT FOREACH
      END IF
   END FOREACH

   CALL s_axrt300_xrca_ref('xrcald',g_xrca_m.xrcald,'','') RETURNING l_success,g_xrca_m.xrcald_desc
   CALL s_axrt300_xrca_ref('xrcasite',g_xrca_m.xrcacomp,'','') RETURNING l_success,g_xrca_m.xrcacomp_desc

   DISPLAY BY NAME g_xrca_m.xrcald,g_xrca_m.xrcald_desc,g_xrca_m.xrcacomp,g_xrca_m.xrcacomp_desc

END FUNCTION]]>
  </point>
  <point name="function.axrp340_copy" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrp340_copy()
   DEFINE l_count         LIKE type_t.num5
   DEFINE i               LIKE type_t.num5
   DEFINE l_length        LIKE type_t.num5
   DEFINE l_scc40         LIKE type_t.chr2
   DEFINE l_success       LIKE type_t.chr1
   DEFINE l_rate          LIKE xrca_t.xrca103
   DEFINE l_rate1         LIKE xrca_t.xrca103
   DEFINE l_rate2         LIKE xrca_t.xrca103
   DEFINE l_rate3         LIKE xrca_t.xrca103
   DEFINE l_wc            STRING
   DEFINE l_xrca_t        RECORD LIKE xrca_t.*
   DEFINE l_xrcb_t        RECORD LIKE xrcb_t.*
   DEFINE l_xrcc_t        RECORD LIKE xrcc_t.*
   DEFINE l_xrcd_t        RECORD LIKE xrcd_t.*
   DEFINE l_8304_01       LIKE glab_t.glab005
   DEFINE l_8304_21       LIKE glab_t.glab005
   DEFINE l_flag          LIKE type_t.chr1
   DEFINE l_flag1         LIKE type_t.chr1
   DEFINE l_xrca113       LIKE xrca_t.xrca113
   DEFINE l_xrca114       LIKE xrca_t.xrca114
   DEFINE l_xrca118       LIKE xrca_t.xrca118
   DEFINE l_xrcb111       LIKE xrcb_t.xrcb111
   DEFINE l_xrcb113       LIKE xrcb_t.xrcb113
   DEFINE l_xrcb114       LIKE xrcb_t.xrcb114
   DEFINE l_xrcb116       LIKE xrcb_t.xrcb116
   DEFINE l_xrcb123       LIKE xrcb_t.xrcb123
   DEFINE l_xrcb124       LIKE xrcb_t.xrcb124
   DEFINE l_xrcb133       LIKE xrcb_t.xrcb133
   DEFINE l_xrcb134       LIKE xrcb_t.xrcb134
   DEFINE l_xrcd009       LIKE xrcd_t.xrcd009
   DEFINE l_xrcc113       LIKE xrcc_t.xrcc113
   DEFINE l_xrcc114       LIKE xrcc_t.xrcc114
   DEFINE l_xrcc123       LIKE xrcc_t.xrcc123
   DEFINE l_xrcc124       LIKE xrcc_t.xrcc124
   DEFINE l_xrcc133       LIKE xrcc_t.xrcc133
   DEFINE l_xrcc134       LIKE xrcc_t.xrcc134

   LET l_length = g_xrca_d.getLength()
   IF l_length < 1 THEN RETURN END IF

   LET l_count = 0
   SELECT COUNT(*) INTO l_count FROM glaa_t WHERE glaaent = g_enterprise
      AND glaald = g_xrcald
      AND glaacomp = (SELECT glaacomp FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xrca_m.xrcald)

   IF l_count <> 1 THEN
      CALL cl_err(g_xrcald,'agl-00236',1)
      RETURN
   END IF

   #STEP.依照邏輯將資料插入表中
   #     1.匯入xrca_t
   #     2.匯入xrcb_t
   #     3.匯入xrcd_t
   #     4.匯入xrcc_t

   SELECT * INTO g_glaa_t.* FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_xrcald

   LET l_wc = Null
   FOR i = 1 TO l_length
      IF g_xrca_d[i].sel = 'N' THEN CONTINUE FOR END IF
      IF cl_null(l_wc) THEN
         LET l_wc = "xrcadocno IN ('",g_xrca_d[i].xrcadocno,"'"
      ELSE
         LET l_wc = l_wc,",'",g_xrca_d[i].xrcadocno,"'"
      END IF
   END FOR
   LET l_wc = l_wc,")"

   LET g_sql = "SELECT CASE WHEN ROW_NUMBER () OVER (PARTITION BY xrcadocno ORDER BY xrccdocno,xrccseq,xrcc001) = 1 THEN 1 ELSE 0 END flag,         ",
               "       CASE WHEN ROW_NUMBER () OVER (PARTITION BY xrcbdocno,xrcbseq ORDER BY xrccdocno,xrccseq,xrcc001) = 1 THEN 1 ELSE 0 END flag1,",
               "       xrca_t.*,xrcb_t.*,xrcc_t.*,xrcd_t.*                                                                                          ",
               "    FROM xrca_t LEFT OUTER JOIN xrcb_t ON xrcaent = xrcbent AND xrcadocno = xrcbdocno AND xrcald = xrcbld                           ",
               "                LEFT OUTER JOIN xrcc_t ON xrcaent = xrccent AND xrcadocno = xrccdocno AND xrcald = xrccld                           ",
               "                LEFT OUTER JOIN xrcd_t ON xrcaent = xrcdent AND xrcadocno = xrcddocno                                               ",
               " WHERE     xrcbseq = xrccseq     AND xrcbseq = xrcdseq                                                                              ",
               "       AND xrcaent = '",g_enterprise,"' AND xrcald = '",g_xrca_m.xrcald,"' AND ",l_wc,
               "       ORDER BY xrccdocno,xrccseq,xrcc001                                                                                           "
   PREPARE axrp340_prep FROM g_sql
   DECLARE axrp340_copy CURSOR FOR axrp340_prep

   CALL s_transaction_begin()
   LET g_success = 'Y'

   FOREACH axrp340_copy INTO l_flag,l_flag1,l_xrca_t.*,l_xrcb_t.*,l_xrcc_t.*,l_xrcd_t.*
      IF l_flag = 1 THEN    #新一筆xrca_t的資料,需要做INS操作
         #本位幣匯率
         CALL s_axrt300_get_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrcald,l_xrca_t.xrcacomp,l_xrca_t.xrca100)
            RETURNING l_success,l_rate1,l_rate2,l_rate3

         SELECT glab005 INTO l_8304_01 FROM glab_t 
          WHERE glabld = g_xrcald
            AND glab002 = l_xrca_t.xrca007 # 帳款類別
            AND glab001 = '13'    # 應收帳務類型科目設定
            AND glab003 = '8304_01'
       
         SELECT glab005 INTO l_8304_21 FROM glab_t 
          WHERE glabld = g_xrcald
            AND glab002 = l_xrca_t.xrca007 # 帳款類別
            AND glab001 = '13'    # 應收帳務類型科目設定
            AND glab003 = '8304_21'

         CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa001,l_xrca_t.xrca103,l_rate1)
            RETURNING l_xrca113
         CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa001,l_xrca_t.xrca104,l_rate1)
            RETURNING l_xrca114
         CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa001,l_xrca_t.xrca108,l_rate1)
            RETURNING l_xrca118

         #xrca_t
         LET l_xrca_t.xrcastus = 'N'
         LET l_xrca_t.xrcald   = g_xrcald
         LET l_xrca_t.xrca035  = l_8304_01
         LET l_xrca_t.xrca036  = l_8304_21
         LET l_xrca_t.xrca037  = 'Y'
         LET l_xrca_t.xrca038  = Null
         LET l_xrca_t.xrca101  = l_rate1
         LET l_xrca_t.xrca106  = 0
         LET l_xrca_t.xrca107  = 0
         LET l_xrca_t.xrca113  = l_xrca113
         LET l_xrca_t.xrca114  = l_xrca114
         LET l_xrca_t.xrca116  = 0
         LET l_xrca_t.xrca117  = 0
         LET l_xrca_t.xrca118  = l_xrca118
         LET l_xrca_t.xrca120  = g_glaa_t.glaa016
         LET l_xrca_t.xrca121  = l_rate2
         LET l_xrca_t.xrca123  = 0
         LET l_xrca_t.xrca124  = 0
         LET l_xrca_t.xrca126  = 0
         LET l_xrca_t.xrca127  = 0
         LET l_xrca_t.xrca128  = 0
         LET l_xrca_t.xrca130  = g_glaa_t.glaa020
         LET l_xrca_t.xrca131  = l_rate3
         LET l_xrca_t.xrca133  = 0
         LET l_xrca_t.xrca134  = 0
         LET l_xrca_t.xrca136  = 0
         LET l_xrca_t.xrca137  = 0
         LET l_xrca_t.xrca138  = 0

         INSERT INTO xrca_t VALUES(l_xrca_t.*)
         IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
            LET g_success = 'N'
         END IF
         
      END IF

      IF l_flag1 = 1 THEN
         CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa001,l_xrcb_t.xrcb101,l_rate1)
            RETURNING l_xrcb111
         CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa001,l_xrcb_t.xrcb103,l_rate1)
            RETURNING l_xrcb113
         CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa001,l_xrcb_t.xrcb104,l_rate1)
            RETURNING l_xrcb114
         CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa001,l_xrcb_t.xrcb106,l_rate1)
            RETURNING l_xrcb116

         IF g_glaa_t.glaa015 = 'Y' THEN
            #計算本位幣二金額
            IF g_glaa_t.glaa017 = '1' THEN
               #换算基准:交易原幣
               CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa016,l_xrcb_t.xrcb103,l_rate2)
                  RETURNING l_xrcb123
               CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa016,l_xrcb_t.xrcb104,l_rate2)
                  RETURNING l_xrcb124
            ELSE
               #换算基准:帳簿幣別
               CALL axrp340_exrate(l_xrca_t.xrcadocdt,g_glaa_t.glaa001,g_glaa_t.glaa016,l_xrcb_t.xrcb113,l_rate2)
                  RETURNING l_xrcb123
               CALL axrp340_exrate(l_xrca_t.xrcadocdt,g_glaa_t.glaa001,g_glaa_t.glaa016,l_xrcb_t.xrcb114,l_rate2)
                  RETURNING l_xrcb124
            END IF
         END IF
         IF g_glaa_t.glaa019 = 'Y' THEN
            #計算本位幣三金額
            IF g_glaa_t.glaa021 = '1' THEN
               #换算基准:交易原幣
               CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa020,l_xrcb_t.xrcb103,l_rate3)
                  RETURNING l_xrcb133
               CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa020,l_xrcb_t.xrcb104,l_rate3)
                  RETURNING l_xrcb134
            ELSE
               #换算基准:帳簿幣別
               CALL axrp340_exrate(l_xrca_t.xrcadocdt,g_glaa_t.glaa001,g_glaa_t.glaa020,l_xrcb_t.xrcb113,l_rate3)
                  RETURNING l_xrcb133
               CALL axrp340_exrate(l_xrca_t.xrcadocdt,g_glaa_t.glaa001,g_glaa_t.glaa020,l_xrcb_t.xrcb114,l_rate3)
                  RETURNING l_xrcb134
            END IF
         END IF

         #xrcb_t
         LET l_xrcb_t.xrcbld  = g_xrcald
         LET l_xrcb_t.xrcb025 = NULL
         LET l_xrcb_t.xrcb026 = NULL
         LET l_xrcb_t.xrcb027 = NULL
         LET l_xrcb_t.xrcb028 = NULL
         LET l_xrcb_t.xrcb029 = l_8304_01
         LET l_xrcb_t.xrcb030 = 0
         LET l_xrcb_t.xrcb111 = l_xrcb111
         LET l_xrcb_t.xrcb113 = l_xrcb113
         LET l_xrcb_t.xrcb114 = l_xrcb114
         LET l_xrcb_t.xrcb115 = l_xrcb_t.xrcb113 + l_xrcb_t.xrcb114
         LET l_xrcb_t.xrcb116 = l_xrcb116
         LET l_xrcb_t.xrcb117 = 0
         LET l_xrcb_t.xrcb123 = l_xrcb123
         LET l_xrcb_t.xrcb124 = l_xrcb124
         LET l_xrcb_t.xrcb125 = l_xrcb_t.xrcb123 + l_xrcb_t.xrcb124
         LET l_xrcb_t.xrcb126 = 0
         LET l_xrcb_t.xrcb133 = l_xrcb133
         LET l_xrcb_t.xrcb134 = l_xrcb134
         LET l_xrcb_t.xrcb135 = l_xrcb_t.xrcb133 + l_xrcb_t.xrcb134
         LET l_xrcb_t.xrcb136 = 0

         INSERT INTO xrcb_t VALUES (l_xrcb_t.*)
         IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
            LET g_success = 'N'
         END IF
         
         UPDATE xrca_t SET xrca123 = xrca123 + l_xrcb_t.xrcb123,
                           xrca124 = xrca124 + l_xrcb_t.xrcb124,
                           xrca128 = xrca128 + l_xrcb_t.xrcb123 + l_xrcb_t.xrcb124,
                           xrca133 = xrca133 + l_xrcb_t.xrcb133,
                           xrca134 = xrca134 + l_xrcb_t.xrcb134,
                           xrca138 = xrca138 + l_xrcb_t.xrcb133 + l_xrcb_t.xrcb134
          WHERE xrcadocno = l_xrca_t.xrcadocno
            AND xrcald = g_xrcald
         IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
            LET g_success = 'N'
         END IF

         #xrcd_t

         SELECT glab005 INTO l_xrcd009 FROM glab_t
          WHERE glabld   = g_xrcald 
            AND glab001  = '14' 
            AND glab002 = '2'              #-銷項
            AND glab003 = l_xrcd_t.xrcd002 #--稅別
         
         IF cl_null(l_xrcd009) THEN
            SELECT glab005 INTO l_xrcd009 FROM glab_t 
             WHERE glabld = g_xrcald 
               AND glab001 ='12' 
               AND glab002  ='9711' 
               AND glab003 = '9711_91' 
         END IF

         LET l_xrcd_t.xrcdld  = g_xrcald
         LET l_xrcd_t.xrcd009 = l_xrcd009
         LET l_xrcd_t.xrcd101 = l_rate1
         LET l_xrcd_t.xrcd112 = l_xrcd_t.xrcd102 * l_rate1
         LET l_xrcd_t.XRCD113 = l_xrcb_t.xrcb113
         LET l_xrcd_t.XRCD114 = l_xrcb_t.xrcb114
         LET l_xrcd_t.XRCD115 = l_xrcb_t.xrcb115
         LET l_xrcd_t.XRCD116 = 0
         LET l_xrcd_t.xrcd117 = 0
         LET l_xrcd_t.xrcd118 = 0
         LET l_xrcd_t.xrcd121 = l_rate2
         LET l_xrcd_t.xrcd124 = l_xrcb_t.xrcb124
         LET l_xrcd_t.xrcd131 = l_rate3
         LET l_xrcd_t.xrcd134 = l_xrcb_t.xrcb134

         INSERT INTO xrcd_t VALUES (l_xrcd_t.*)
         IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
            LET g_success = 'N'
         END IF

      END IF

      #xrcc_t
      CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa001,l_xrcc_t.xrcc103,l_rate1)
         RETURNING l_xrcc113
      CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa001,l_xrcc_t.xrcc104,l_rate1)
         RETURNING l_xrcc114

      IF g_glaa_t.glaa015 = 'Y' THEN
         #計算本位幣二金額
         IF g_glaa_t.glaa017 = '1' THEN
            #换算基准:交易原幣
            CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa016,l_xrcc_t.xrcc103,l_rate2)
               RETURNING l_xrcc123
            CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa016,l_xrcc_t.xrcc104,l_rate2)
               RETURNING l_xrcc124
         ELSE
            #换算基准:帳簿幣別
            CALL axrp340_exrate(l_xrca_t.xrcadocdt,g_glaa_t.glaa001,g_glaa_t.glaa016,l_xrcc_t.xrcc113,l_rate2)
               RETURNING l_xrcc123
            CALL axrp340_exrate(l_xrca_t.xrcadocdt,g_glaa_t.glaa001,g_glaa_t.glaa016,l_xrcc_t.xrcc114,l_rate2)
               RETURNING l_xrcc124
         END IF
      END IF
      IF g_glaa_t.glaa019 = 'Y' THEN
         #計算本位幣三金額
         IF g_glaa_t.glaa021 = '1' THEN
            #换算基准:交易原幣
            CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa020,l_xrcc_t.xrcc103,l_rate3)
               RETURNING l_xrcc133
            CALL axrp340_exrate(l_xrca_t.xrcadocdt,l_xrca_t.xrca100,g_glaa_t.glaa020,l_xrcc_t.xrcc104,l_rate3)
               RETURNING l_xrcc134
         ELSE
            #换算基准:帳簿幣別
            CALL axrp340_exrate(l_xrca_t.xrcadocdt,g_glaa_t.glaa001,g_glaa_t.glaa020,l_xrcc_t.xrcc113,l_rate3)
               RETURNING l_xrcc133
            CALL axrp340_exrate(l_xrca_t.xrcadocdt,g_glaa_t.glaa001,g_glaa_t.glaa020,l_xrcc_t.xrcc114,l_rate3)
               RETURNING l_xrcc134
         END IF
      END IF

      LET l_xrcc_t.xrccld  = g_xrcald
      LET l_xrcc_t.xrcc101 = l_rate1
      LET l_xrcc_t.xrcc102 = 0
      LET l_xrcc_t.xrcc106 = 0
      LET l_xrcc_t.xrcc107 = 0
      LET l_xrcc_t.xrcc108 = l_xrcc_t.xrcc103 + l_xrcc_t.xrcc104
      LET l_xrcc_t.xrcc109 = 0
      LET l_xrcc_t.xrcc113 = l_xrcc113
      LET l_xrcc_t.xrcc114 = l_xrcc114
      LET l_xrcc_t.xrcc115 = l_xrcc_t.xrcc113 + l_xrcc_t.xrcc114
      LET l_xrcc_t.xrcc116 = 0
      LET l_xrcc_t.xrcc117 = 0
      LET l_xrcc_t.xrcc118 = l_xrcc_t.xrcc115
      LET l_xrcc_t.xrcc119 = 0
      LET l_xrcc_t.xrcc120 = g_glaa_t.glaa016
      LET l_xrcc_t.xrcc121 = l_rate2
      LET l_xrcc_t.xrcc122 = 0
      LET l_xrcc_t.xrcc123 = l_xrcc123
      LET l_xrcc_t.xrcc124 = l_xrcc124
      LET l_xrcc_t.xrcc125 = l_xrcc_t.xrcc123 + l_xrcc_t.xrcc124
      LET l_xrcc_t.xrcc126 = 0
      LET l_xrcc_t.xrcc127 = 0
      LET l_xrcc_t.xrcc128 = l_xrcc_t.xrcc125
      LET l_xrcc_t.xrcc129 = 0
      LET l_xrcc_t.xrcc130 = g_glaa_t.glaa020
      LET l_xrcc_t.xrcc131 = l_rate3
      LET l_xrcc_t.xrcc132 = 0
      LET l_xrcc_t.xrcc133 = l_xrcc133
      LET l_xrcc_t.xrcc134 = l_xrcc133
      LET l_xrcc_t.xrcc135 = l_xrcc_t.xrcc133 + l_xrcc_t.xrcc134
      LET l_xrcc_t.xrcc136 = 0
      LET l_xrcc_t.xrcc137 = 0
      LET l_xrcc_t.xrcc138 = l_xrcc_t.xrcc135
      LET l_xrcc_t.xrcc139 = 0

      INSERT INTO xrcc_t VALUES (l_xrcc_t.*)
      IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
         LET g_success = 'N'
      END IF

   END FOREACH

   IF g_success = 'Y' THEN
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF

END FUNCTION]]>
  </point>
  <point name="function.axrp340_exrate" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION axrp340_exrate(p_ooan004,p_ooan002,p_ooan003,p_amount,p_tmp)
   DEFINE p_ooan004      LIKE ooan_t.ooan004
   DEFINE p_ooan002      LIKE ooan_t.ooan002
   DEFINE p_ooan003      LIKE ooan_t.ooan003
   DEFINE p_tmp          LIKE ooan_t.ooan005
   DEFINE p_amount       LIKE ooan_t.ooan005
   DEFINE p_t          LIKE ooan_t.ooan005
   DEFINE l_ooef014      LIKE ooef_t.ooef014
   DEFINE l_ooaj004      LIKE ooaj_t.ooaj004
   DEFINE l_ooaj005      LIKE ooaj_t.ooaj005
   DEFINE l_ooan         RECORD LIKE ooan_t.*
   DEFINE l_conv         LIKE type_t.chr1
   DEFINE l_rate         LIKE ooan_t.ooan005
   DEFINE l_ooan001      LIKE ooan_t.ooan001

   SELECT ooef014 INTO l_ooef014 FROM ooef_t
    WHERE ooefent = g_enterprise AND ooef001 = g_glaa_t.glaacomp

   #1.取基础币种的金额精度--若有传入p_amount时,返回的是金额,非汇率
   CALL s_curr_sel_ooaj004(l_ooef014,p_ooan003)
        RETURNING l_ooaj004

   #2.取基础币种的汇率精度
   CALL s_curr_sel_ooaj005(l_ooef014,p_ooan003)
        RETURNING l_ooaj005

   #3.取汇率 & 汇率方向
   LET l_conv = '1'  #交易币种对基础币种
   SELECT ooan_t.* INTO l_ooan.*
     FROM ooan_t,ooam_t
    WHERE ooanent = g_enterprise
      AND ooan001 = g_glaa_t.glaa002   #汇率参照表号
      AND ooan002 = p_ooan002   #交易币种
      AND ooan003 = p_ooan003   #基础币种
      AND ooan004 = p_ooan004   #日期
      AND ooament = ooanent
      AND ooam001 = ooan001
      AND ooam003 = ooan003
      AND ooam004 = ooan004
      AND ooamstus = 'Y'
   IF SQLCA.sqlcode THEN
      #交易币种对基础币种的关系不存在时,反向查找
      SELECT ooan_t.* INTO l_ooan.*
        FROM ooan_t,ooam_t
       WHERE ooanent = g_enterprise
         AND ooan001 = g_glaa_t.glaa002   #汇率参照表号
         AND ooan002 = p_ooan003   #基础币种
         AND ooan003 = p_ooan002   #交易币种
         AND ooan004 = p_ooan004
         AND ooament = ooanent
         AND ooam001 = ooan001
         AND ooam003 = ooan003
         AND ooam004 = ooan004
         AND ooamstus = 'Y'
      IF NOT SQLCA.sqlcode THEN
         LET l_conv = '2'   #基础币种对交易币种
      END IF
   END IF

   #交易币种批量
   IF cl_null(l_ooan.ooan012) THEN LET l_ooan.ooan012 = 1 END IF
   
   #4.计算汇率
   #减少处理步骤,以便精确度降低
   IF l_conv = '1' THEN  #存在交易对基础币种的置换关系
      IF l_ooan.ooan013 = '1' OR cl_null(l_ooan.ooan013) THEN   #存在正向的汇率关系
         LET l_rate = p_tmp / l_ooan.ooan012 * p_amount
      ELSE               #若为反向时,要1除取得的汇率
         LET l_rate = 1 / p_tmp * l_ooan.ooan012 * p_amount
      END IF
   ELSE                  #存在基础对交易币种的转换关系
      IF l_ooan.ooan013 = '1' THEN
         LET l_rate = 1 / p_tmp * l_ooan.ooan012 * p_amount
      ELSE
         LET l_rate = p_tmp / l_ooan.ooan012 * p_amount
      END IF
   END IF

   #5.按精度进位小数取位
   IF p_amount > 1 THEN
      #传入的为金额,直接按ooaj004取位
      CALL s_num_round('1',l_rate,l_ooaj004) RETURNING l_rate
   ELSE
      #没有传入金额,根据汇率的精度进行取位
      CALL s_num_round('1',l_rate,l_ooaj005) RETURNING l_rate
   END IF

   RETURN l_rate

END FUNCTION]]>
  </point>
  <point name="b_fill.array_clear" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_xrca_d[l_ac].xrca004
      CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_xrca_d[l_ac].xrca004_desc = g_xrca_d[l_ac].xrca004,'(', g_rtn_fields[1] , ')']]>
  </point>
  <point name="b_fill.sql_after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_sql = "SELECT  UNIQUE xrcadocno,xrcadocdt,xrca004,'',xrca100,xrca103,xrca106,xrca104,xrca107,xrca108 FROM (        ",
               "  SELECT xrcadocno,xrcadocdt,xrca004,xrca100,xrca103,xrca106,xrca104,xrca107,xrca108,SUM (xrcb118 - xrcb117)",
               "    FROM xrca_t, xrcb_t                                                                                     ",
               "   WHERE     xrcaent = xrcbent                                                                              ",
               "         AND xrcadocno = xrcbdocno                                                                          ",
               "         AND xrcald = xrcbld                                                                                ",
               "         AND xrcaent= '",g_enterprise,"'                                                                    "
   IF NOT cl_null(g_xrca_m.xrcald) THEN
       LET g_sql = g_sql,
               "         AND xrcald = '",g_xrca_m.xrcald,"'                                                                 "
   END IF
   IF NOT cl_null(g_xrcald) THEN
       LET g_sql = g_sql,
               "         AND xrcadocno NOT IN                                                                               ",
               "                (SELECT xrcadocno FROM xrca_t WHERE xrcaent = '",g_enterprise,"'                            ",
               "                    AND xrcald IN                                                                           ",
               "                       (SELECT glaald FROM glaa_t                                                           ",
               "                         WHERE glaa014 = 'N' AND glaacomp = '",g_xrca_m.xrcacomp,"'))                       "
   END IF

   LET g_sql = g_sql,"   AND 1=1 AND ", ls_wc CLIPPED, 
               "GROUP BY xrcadocno,xrcadocdt,xrca004,xrca100,xrca103,xrca106,xrca104,xrca107,xrca108                        ",
               "HAVING SUM (xrcb118 - xrcb117) > 0 )                                                                        "]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[ TYPE type_g_xrca_m RECORD
       xrcald        LIKE xrca_t.xrcald,
       xrcald_desc   LIKE glaal_t.glaal002,
       xrcacomp      LIKE xrca_t.xrcacomp,
       xrcacomp_desc LIKE ooefl_t.ooefl003
       END RECORD

#模組變數(Module Variables)
DEFINE g_xrca_m            type_g_xrca_m
DEFINE g_xrcald            LIKE xrca_t.xrcald
DEFINE g_xrcald_desc       LIKE glaal_t.glaal002
DEFINE g_glaa_t            RECORD LIKE glaa_t.*
DEFINE g_success           LIKE type_t.chr1]]>
  </point>
  <point name="ui_dialog.bef_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF l_flag = 'Y' THEN
               CALL axrp340_b_fill()
               LET l_flag = 'N'
               NEXT FIELD xrcald
            END IF]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_flag = 'N']]>
  </point>
  <point name="ui_dialog.construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         CONSTRUCT g_wc ON xrca004,xrcadocdt,xrcadocno,xrca003 FROM xrca004,xrcadocdt,xrcadocno,xrca003

            ON ACTION controlp INFIELD xrca004
               #開窗c段
	   		   INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
			      LET g_qryparam.reqry = FALSE
               CALL q_pmaa001_7()                         #呼叫開窗
               DISPLAY g_qryparam.return1 TO xrca004      #顯示到畫面上
               
               NEXT FIELD xrca004                         #返回原欄位

            ON ACTION controlp INFIELD xrcadocno
               #開窗c段
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
			      LET g_qryparam.reqry = FALSE
               CALL q_xrcadocno_4()                       #呼叫開窗
               DISPLAY g_qryparam.return1 TO xrcadocno    #顯示到畫面上
              
               NEXT FIELD xrcadocno                       #返回原欄位

            ON ACTION controlp INFIELD xrca003
               #開窗c段
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
			      LET g_qryparam.reqry = FALSE
               CALL q_ooag001()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO xrca003      #顯示到畫面上
               
               NEXT FIELD xrca003                         #返回原欄位

            AFTER CONSTRUCT
               CALL axrp340_b_fill()

         END CONSTRUCT

         INPUT g_xrcald FROM s_xrcald ATTRIBUTE(WITHOUT DEFAULTS)

            AFTER FIELD s_xrcald
               IF NOT cl_null(g_xrcald) THEN
                  LET g_xrcald_desc = ' '
                  DISPLAY BY NAME g_xrcald_desc
                  IF NOT cl_null(g_xrcald) THEN
                     INITIALIZE g_chkparam.* TO NULL
                     LET g_chkparam.arg1 = g_xrcald
                     LET g_chkparam.arg2 = g_xrca_m.xrcacomp
                     IF NOT cl_chk_exist("v_glaald_4") THEN
                        LET g_xrcald = ' '
                        CALL s_axrt300_xrca_ref('xrcald',g_xrcald,'','') RETURNING l_success,g_xrcald_desc
                        DISPLAY BY NAME g_xrcald,g_xrcald_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  #人員對應帳套使用權限檢查
                  IF NOT cl_null(g_xrcald) THEN
                     CALL s_ld_chk_authorization(g_user,g_xrcald) RETURNING l_success
                     IF l_success = FALSE THEN
                        CALL cl_err(g_xrcald,'axr-00022',1)
                        LET g_xrcald = ' '
                        CALL s_axrt300_xrca_ref('xrcald',g_xrcald,'','') RETURNING l_success,g_xrcald_desc
                        DISPLAY BY NAME g_xrcald,g_xrcald_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  CALL s_axrt300_xrca_ref('xrcald',g_xrcald,'','') RETURNING l_success,g_xrcald_desc
                  DISPLAY BY NAME g_xrcald,g_xrcald_desc
               END IF

            ON ACTION controlp INFIELD s_xrcald
               #開窗i段
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
			      LET g_qryparam.reqry = FALSE
               
               LET g_qryparam.default1 = g_xrca_m.xrcald             #給予default值
               
               #給予arg
               SELECT ooag003 INTO l_ooag003 FROM ooag_t WHERE ooagent = g_enterprise AND ooag001 = g_user
               LET g_qryparam.arg1 = g_user
               LET g_qryparam.arg2 = l_ooag003
               LET g_qryparam.where = "glaacomp = '",g_xrca_m.xrcacomp,"' AND glaa008  ='Y' AND glaa023 = '1'"
               
               CALL q_authorised_ld()                                #呼叫開窗
               
               LET g_xrca_m.xrcald = g_qryparam.return1              #將開窗取得的值回傳到變數
               
               DISPLAY g_xrca_m.xrcald TO xrcald                     #顯示到畫面上
               CALL s_axrt300_xrca_ref('xrcald',g_xrca_m.xrcald,'','') RETURNING l_success,g_xrca_m.xrcald_desc
               
               NEXT FIELD xrcald                                     #返回原欄位

            AFTER INPUT
               CALL axrp340_b_fill()

         END INPUT]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_ooag003      LIKE ooag_t.ooag003
   DEFINE l_success      LIKE type_t.chr1
   DEFINE l_flag         LIKE type_t.chr1
   DEFINE l_length       LIKE type_t.num5]]>
  </point>
  <point name="ui_dialog.input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         INPUT BY NAME g_xrca_m.xrcald ATTRIBUTE(WITHOUT DEFAULTS)
            BEFORE INPUT
               IF cl_null(g_xrca_m.xrcald) THEN
                  CALL axrp340_def()
               END IF

            AFTER FIELD xrcald
               LET g_xrca_m.xrcald_desc = ' '
               LET g_xrca_m.xrcacomp_desc = ' '
               DISPLAY BY NAME g_xrca_m.xrcald_desc,g_xrca_m.xrcacomp_desc
               IF NOT cl_null(g_xrca_m.xrcald) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_xrca_m.xrcald
                  LET g_chkparam.arg2 = ' '
                  IF NOT cl_chk_exist("v_glaald_3") THEN
                     LET g_xrca_m.xrcald = ' '
                     LET g_xrca_m.xrcacomp = ' '
                     CALL s_axrt300_xrca_ref('xrcald',g_xrca_m.xrcald,'','') RETURNING l_success,g_xrca_m.xrcald_desc
                     DISPLAY BY NAME g_xrca_m.xrcald,g_xrca_m.xrcald_desc,g_xrca_m.xrcacomp,g_xrca_m.xrcacomp_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
               SELECT glaacomp INTO g_xrca_m.xrcacomp FROM glaa_t WHERE glaaent = g_enterprise
                  AND glaald = g_xrca_m.xrcald
               CALL s_axrt300_xrca_ref('xrcald',g_xrca_m.xrcald,'','') RETURNING l_success,g_xrca_m.xrcald_desc
               CALL s_axrt300_xrca_ref('xrcasite',g_xrca_m.xrcacomp,'','') RETURNING l_success,g_xrca_m.xrcacomp_desc
               DISPLAY BY NAME g_xrca_m.xrcald,g_xrca_m.xrcald_desc,g_xrca_m.xrcacomp,g_xrca_m.xrcacomp_desc

            ON ACTION controlp INFIELD xrcald
               #開窗i段
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
			      LET g_qryparam.reqry = FALSE
               
               LET g_qryparam.default1 = g_xrca_m.xrcald             #給予default值
               
               #給予arg
               SELECT ooag003 INTO l_ooag003 FROM ooag_t WHERE ooagent = g_enterprise AND ooag001 = g_user
               LET g_qryparam.arg1 = g_user
               LET g_qryparam.arg2 = l_ooag003
               LET g_qryparam.where = "glaa014 = 'Y'"
               
               CALL q_authorised_ld()                                #呼叫開窗
               
               LET g_xrca_m.xrcald = g_qryparam.return1              #將開窗取得的值回傳到變數
               
               DISPLAY g_xrca_m.xrcald TO xrcald                     #顯示到畫面上
               CALL s_axrt300_xrca_ref('xrcald',g_xrca_m.xrcald,'','') RETURNING l_success,g_xrca_m.xrcald_desc
               
               NEXT FIELD xrcald                                     #返回原欄位

            AFTER INPUT
               CALL axrp340_b_fill()

         END INPUT]]>
  </point>
  <point name="ui_dialog.onaction_sel" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="ui_dialog.onaction_selall" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="ui_dialog.onaction_selnone" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="ui_dialog.onaction_unsel" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
         ON ACTION batch_execute
            LET l_flag = 'Y'
            CALL axrp340_copy()
            ACCEPT DIALOG

         ON ACTION dbclick
            IF g_xrca_d[l_ac].sel = "Y" THEN
               LET g_xrca_d[l_ac].sel = "N"
            ELSE
               LET g_xrca_d[l_ac].sel = "Y"
            END IF
            DISPLAY g_xrca_d[l_ac].sel TO s_detail1[l_ac].sel]]>
  </point>
  <section id="axrp340.b_fill" ver="5" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axrp340_b_fill()
   {<Local define>}
   DEFINE ls_wc           STRING
   DEFINE l_pid           LIKE type_t.chr50
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
 
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
 
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter
 
   CALL g_xrca_d.clear()
 
   #add-point:陣列清空
   {<point name="b_fill.array_clear" />}
   #end add-point
 
   
 
   LET g_cnt = l_ac
   LET l_ac = 1
   ERROR "Searching!"
 
   # b_fill段sql組成及FOREACH撰寫
   #+ 此段落由子樣板qs04產生
   #+ b_fill段資料取得(包含sql組成及FOREACH段撰寫)
   LET g_sql = "SELECT  UNIQUE xrcadocno,xrcadocdt,xrca004,'',xrca100,xrca103,xrca106,xrca104,xrca107, 
       xrca108 FROM xrca_t",
 
 
               "",
               " WHERE xrcaent= ? AND 1=1 AND ", ls_wc
 
   LET g_sql = g_sql, " ORDER BY xrca_t.xrcald,xrca_t.xrcadocno"
 
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
 
   PREPARE axrp340_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR axrp340_pb
 
   FOREACH b_fill_curs INTO g_xrca_d[l_ac].xrcadocno,g_xrca_d[l_ac].xrcadocdt,g_xrca_d[l_ac].xrca004, 
       g_xrca_d[l_ac].xrca004_desc,g_xrca_d[l_ac].xrca100,g_xrca_d[l_ac].xrca103,g_xrca_d[l_ac].xrca106, 
       g_xrca_d[l_ac].xrca104,g_xrca_d[l_ac].xrca107,g_xrca_d[l_ac].xrca108
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
 
      LET g_xrca_d[l_ac].sel = "N"
 
      
 
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
 
      CALL axrp340_detail_show("'1'")
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            CALL cl_err( "", 9035, 1 )
         END IF
         EXIT FOREACH
      END IF
 
   END FOREACH
 
 
 
 
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   CALL g_xrca_d.deleteElement(g_xrca_d.getLength())
 
   #add-point:陣列長度調整
   {<point name="b_fill.array_deleteElement" />}
   #end add-point
 
   LET g_error_show = 0
 
   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
 
   #+ 此段落由子樣板qs06產生
   #+ b_fill段CURSOR釋放
   CLOSE b_fill_curs
   FREE axrp340_pb
 
 
 
 
   LET l_ac = 1
   CALL axrp340_b_fill2()
 
      CALL axrp340_filter_show('xrcadocno','b_xrcadocno')
   CALL axrp340_filter_show('xrcadocdt','b_xrcadocdt')
   CALL axrp340_filter_show('xrca004','b_xrca004')
   CALL axrp340_filter_show('xrca100','b_xrca100')
   CALL axrp340_filter_show('xrca103','b_xrca103')
   CALL axrp340_filter_show('xrca106','b_xrca106')
   CALL axrp340_filter_show('xrca104','b_xrca104')
   CALL axrp340_filter_show('xrca107','b_xrca107')
   CALL axrp340_filter_show('xrca108','b_xrca108')
 
 
END FUNCTION
]]>
  </section>
  <section id="axrp340.b_fill2" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION axrp340_b_fill2()
   {<Local define>}
   DEFINE li_ac           LIKE type_t.num5
   {</Local define>}
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
 
   LET li_ac = l_ac
 
   #單身組成
   #+ 此段落由子樣板qs07產生
   #+ b_fill2段table資料取得(包含sql組成及資料填充)
 
   #add-point:陣列清空
   {<point name="b_fill2.array_clear" />}
   #end add-point
 
 
 
 
   #add-point:陣列長度調整
   {<point name="b_fill2.array_deleteElement" />}
   #end add-point
 
 
 
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
 
   LET l_ac = li_ac
 
END FUNCTION
]]>
  </section>
  <section id="axrp340.cs" ver="1" status="" src="s">
    <![CDATA[#+ 組單頭CURSOR
PRIVATE FUNCTION axrp340_cs()
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point
 
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
 
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
 
   IF g_wc2 = " 1=1" THEN
      #add-point:cs段單頭sql組成(未下單身條件)
      {<point name="cs.sql_define_1"/>}
      #end add-point
   ELSE
      #add-point:cs段單頭sql組成(有下單身條件)
      {<point name="cs.sql_define_2"/>}
      #end add-point
   END IF
 
   PREPARE axrp340_pre FROM g_sql
   DECLARE axrp340_curs SCROLL CURSOR WITH HOLD FOR axrp340_pre
   OPEN axrp340_curs
 
   #add-point:cs段單頭總筆數計算
   {<point name="cs.head_total_row_count"/>}
   #end add-point
   PREPARE axrp340_precount FROM g_cnt_sql
   EXECUTE axrp340_precount INTO g_row_count
 
   IF SQLCA.SQLCODE THEN
      CALL cl_err('',SQLCA.SQLCODE,0)
   ELSE
      CALL axrp340_fetch("F")
   END IF
END FUNCTION
]]>
  </section>
  <section id="axrp340.delete" ver="1" status="" src="s">
    <![CDATA[#+ delete
PRIVATE FUNCTION axrp340_delete()
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point
 
   #add-point:delete段control
   {<point name="delete.control"/>}
   #end add-point 
END FUNCTION
]]>
  </section>
  <section id="axrp340.description" ver="46" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000056
#+ 
#+ Filename...: axrp340
#+ Description: 輔助帳套應收帳款資料複製作業
#+ Creator....: 01727(2014/05/07)
#+ Modifier...: 01727(2014/05/09)
#+ Buildtype..: 應用 q01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="axrp340.detail_show" ver="4" status="" src="s">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION axrp340_detail_show(ps_page)
   DEFINE ps_page   STRING
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
 
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      
 
      #add-point:show段單身reference
      {<point name="detail_show.body.reference"/>}
      #end add-point
   END IF
 
 
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="axrp340.fetch" ver="3" status="" src="s">
    <![CDATA[#+ 抓取單頭資料
PRIVATE FUNCTION axrp340_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point
 
   MESSAGE ""
 
   #FETCH段CURSOR移動
   #+ 此段落由子樣板qs18產生
   #add-point:fetch段CURSOR移動
   {<point name="fetch.cursor_action"/>}
   #end add-point
 
 
 
   IF SQLCA.sqlcode THEN
      # 清空右側畫面欄位值，但須保留左側qbe查詢條件
      INITIALIZE g_master.* TO NULL
      DISPLAY g_master.* TO b_xrcald,b_xrcald_desc,b_xrcacomp,b_xrcacomp_desc,b_xrca003,b_xrca003_desc 

      CALL g_detail.clear()
 
      #add-point:陣列清空
      {<point name="fetch.array_clear" />}
      #end add-point
      DISPLAY '' TO FORMONLY.h_index
      DISPLAY '' TO FORMONLY.h_count
      DISPLAY '' TO FORMONLY.idx
      DISPLAY '' TO FORMONLY.cnt
      CALL cl_err('','-100',1)
      RETURN
   ELSE
      CASE p_flag
         WHEN 'F' LET g_current_idx = 1
         WHEN 'P' LET g_current_idx = g_current_idx - 1
         WHEN 'N' LET g_current_idx = g_current_idx + 1
         WHEN 'L' LET g_current_idx = g_row_count
         WHEN '/' LET g_current_idx = g_jump
      END CASE
      DISPLAY g_current_idx TO FORMONLY.h_index
      DISPLAY g_row_count TO FORMONLY.h_count
      CALL cl_navigator_setting( g_current_idx, g_row_count )
   END IF
 
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
 
   #重新顯示
   CALL axrp340_show()
 
END FUNCTION
]]>
  </section>
  <section id="axrp340.filter" ver="2" status="" src="s">
    <![CDATA[#+ 此段落由子樣板qs13產生
#+ filter段相關程式段
#+ filter過濾功能
PRIVATE FUNCTION axrp340_filter()
   {<Local define>}
   {</Local define>}
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", TRUE)
 
   
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   #+ 此段落由子樣板qs08產生
   #+ filter段DIALOG段的組成
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON xrcadocno,xrcadocdt,xrca004,xrca100,xrca103,xrca106,xrca104,xrca107,xrca108 

                          FROM s_detail1[1].b_xrcadocno,s_detail1[1].b_xrcadocdt,s_detail1[1].b_xrca004, 
                              s_detail1[1].b_xrca100,s_detail1[1].b_xrca103,s_detail1[1].b_xrca106,s_detail1[1].b_xrca104, 
                              s_detail1[1].b_xrca107,s_detail1[1].b_xrca108
 
         BEFORE CONSTRUCT
            CALL cl_qbe_init()
                     DISPLAY axrp340_filter_parser('xrcadocno') TO s_detail1[1].b_xrcadocno
            DISPLAY axrp340_filter_parser('xrcadocdt') TO s_detail1[1].b_xrcadocdt
            DISPLAY axrp340_filter_parser('xrca004') TO s_detail1[1].b_xrca004
            DISPLAY axrp340_filter_parser('xrca100') TO s_detail1[1].b_xrca100
            DISPLAY axrp340_filter_parser('xrca103') TO s_detail1[1].b_xrca103
            DISPLAY axrp340_filter_parser('xrca106') TO s_detail1[1].b_xrca106
            DISPLAY axrp340_filter_parser('xrca104') TO s_detail1[1].b_xrca104
            DISPLAY axrp340_filter_parser('xrca107') TO s_detail1[1].b_xrca107
            DISPLAY axrp340_filter_parser('xrca108') TO s_detail1[1].b_xrca108
 
 
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
 
   END DIALOG
 
 
 
   
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
 
      CALL axrp340_filter_show('xrcadocno','b_xrcadocno')
   CALL axrp340_filter_show('xrcadocdt','b_xrcadocdt')
   CALL axrp340_filter_show('xrca004','b_xrca004')
   CALL axrp340_filter_show('xrca100','b_xrca100')
   CALL axrp340_filter_show('xrca103','b_xrca103')
   CALL axrp340_filter_show('xrca106','b_xrca106')
   CALL axrp340_filter_show('xrca104','b_xrca104')
   CALL axrp340_filter_show('xrca107','b_xrca107')
   CALL axrp340_filter_show('xrca108','b_xrca108')
 
   CALL axrp340_b_fill()
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", FALSE)
 
END FUNCTION
]]>
  </section>
  <section id="axrp340.filter_parser" ver="2" status="" src="s">
    <![CDATA[#+ 此段落由子樣板qs14產生
#+ filter pasara段
#+ filter欄位解析
PRIVATE FUNCTION axrp340_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="axrp340.filter_show" ver="2" status="" src="s">
    <![CDATA[#+ 此段落由子樣板qs15產生
#+ 標題欄位顯示搜尋條件
PRIVATE FUNCTION axrp340_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = axrp340_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="axrp340.global" ver="4" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_xrca_d RECORD
       sel            LIKE type_t.chr1,
       xrcadocno LIKE xrca_t.xrcadocno, 
   xrcadocdt LIKE xrca_t.xrcadocdt, 
   xrca004 LIKE xrca_t.xrca004, 
   xrca004_desc LIKE type_t.chr500, 
   xrca100 LIKE xrca_t.xrca100, 
   xrca103 LIKE xrca_t.xrca103, 
   xrca106 LIKE xrca_t.xrca106, 
   xrca104 LIKE xrca_t.xrca104, 
   xrca107 LIKE xrca_t.xrca107, 
   xrca108 LIKE xrca_t.xrca108
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_xrca_d            DYNAMIC ARRAY OF type_g_xrca_d
DEFINE g_xrca_d_t          type_g_xrca_d
 
 
 
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                 STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE l_ac                  LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_current_row         LIKE type_t.num5              #目前所在筆數
DEFINE g_current_idx         LIKE type_t.num5
DEFINE g_detail_cnt          LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_page                STRING                        #第幾頁
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_row_index           LIKE type_t.num10
DEFINE g_master_idx          LIKE type_t.num5
DEFINE g_detail_idx          LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_idx2         LIKE type_t.num5
DEFINE g_hyper_url           STRING                        #hyperlink的主要網址
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
 
DEFINE g_wc_filter_table           STRING
 
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="axrp340.init" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axrp340_init()
 
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1" 
   LET g_error_show  = 1
#  LET g_selcolor    = "#D0E7FD"
   
     
 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="axrp340.insert" ver="1" status="" src="s">
    <![CDATA[#+ insert
PRIVATE FUNCTION axrp340_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point
 
   #add-point:insert段control
   {<point name="insert.control"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="axrp340.main" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = ""
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE axrp340_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE ",
               " FROM ",
               " WHERE  "
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axrp340_master_referesh FROM g_sql
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_axrp340 WITH FORM cl_ap_formpath("axr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axrp340_init()   
 
      #進入選單 Menu (="N")
      CALL axrp340_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axrp340
      
   END IF 
   
   CLOSE axrp340_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="axrp340.modify" ver="1" status="" src="s">
    <![CDATA[#+ modify
PRIVATE FUNCTION axrp340_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
 
   #add-point:modify段control
   {<point name="modify.control"/>}
   #end add-point 
END FUNCTION
]]>
  </section>
  <section id="axrp340.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="axrp340.query" ver="1" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axrp340_query()
   {<Local define>}
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_xrca_d.clear()
   LET g_wc_filter = " 1=1"
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
   
   LET g_qryparam.state = "c"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   
   #wc備份
   LET ls_wc = g_wc
   LET g_master_idx = l_ac
 
   
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table ON xrcadocno,xrcald,xrcaownid,xrcaowndp,xrcacrtid,xrcacrtdp,xrcacrtdt,xrcamodid, 
          xrcamoddt,xrcacnfid,xrcacnfdt,xrcapstid,xrcapstdt
           FROM s_detail1[1].b_xrcadocno,s_detail1[1].b_xrcald,s_detail1[1].b_xrcaownid,s_detail1[1].b_xrcaowndp, 
               s_detail1[1].b_xrcacrtid,s_detail1[1].b_xrcacrtdp,s_detail1[1].b_xrcacrtdt,s_detail1[1].b_xrcamodid, 
               s_detail1[1].b_xrcamoddt,s_detail1[1].b_xrcacnfid,s_detail1[1].b_xrcacnfdt,s_detail1[1].b_xrcapstid, 
               s_detail1[1].b_xrcapstdt
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       #此段落由子樣板a11產生
         ##----<<xrcaownid>>----
         #ON ACTION controlp INFIELD xrcaownid
         #   CALL q_common('','xrcaownid',TRUE,FALSE,g_xrca_d[1].xrcaownid) RETURNING ls_return
         #   DISPLAY ls_return TO xrcaownid
         #   NEXT FIELD xrcaownid  
         #
         ##----<<xrcaowndp>>----
         #ON ACTION controlp INFIELD xrcaowndp
         #   CALL q_common('','xrcaowndp',TRUE,FALSE,g_xrca_d[1].xrcaowndp) RETURNING ls_return
         #   DISPLAY ls_return TO xrcaowndp
         #   NEXT FIELD xrcaowndp
         #
         ##----<<xrcacrtid>>----
         #ON ACTION controlp INFIELD xrcacrtid
         #   CALL q_common('','xrcacrtid',TRUE,FALSE,g_xrca_d[1].xrcacrtid) RETURNING ls_return
         #   DISPLAY ls_return TO xrcacrtid
         #   NEXT FIELD xrcacrtid
         #
         ##----<<xrcacrtdp>>----
         #ON ACTION controlp INFIELD xrcacrtdp
         #   CALL q_common('','xrcacrtdp',TRUE,FALSE,g_xrca_d[1].xrcacrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO xrcacrtdp
         #   NEXT FIELD xrcacrtdp
         #
         ##----<<xrcamodid>>----
         #ON ACTION controlp INFIELD xrcamodid
         #   CALL q_common('','xrcamodid',TRUE,FALSE,g_xrca_d[1].xrcamodid) RETURNING ls_return
         #   DISPLAY ls_return TO xrcamodid
         #   NEXT FIELD xrcamodid
         #
         ##----<<xrcacnfid>>----
         #ON ACTION controlp INFIELD xrcacnfid
         #   CALL q_common('','xrcacnfid',TRUE,FALSE,g_xrca_d[1].xrcacnfid) RETURNING ls_return
         #   DISPLAY ls_return TO xrcacnfid
         #   NEXT FIELD xrcacnfid
         #
         ##----<<xrcapstid>>----
         #ON ACTION controlp INFIELD xrcapstid
         #   CALL q_common('','xrcapstid',TRUE,FALSE,g_xrca_d[1].xrcapstid) RETURNING ls_return
         #   DISPLAY ls_return TO xrcapstid
         #   NEXT FIELD xrcapstid
         
         ##----<<xrcacrtdt>>----
         AFTER FIELD xrcacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xrcamoddt>>----
         AFTER FIELD xrcamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xrcacnfdt>>----
         AFTER FIELD xrcacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<xrcapstdt>>----
         AFTER FIELD xrcapstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
         
       #單身一般欄位開窗相關處理
                #----<<b_xrcadocno>>----
         #Ctrlp:construct.c.page1.b_xrcadocno
         ON ACTION controlp INFIELD b_xrcadocno
            #add-point:ON ACTION controlp INFIELD b_xrcadocno
            {<point name="construct.c.page1.b_xrcadocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_xrcadocno
            #add-point:BEFORE FIELD b_xrcadocno
            {<point name="construct.b.page1.b_xrcadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xrcadocno
            
            #add-point:AFTER FIELD b_xrcadocno
            {<point name="construct.a.page1.b_xrcadocno" />}
            #END add-point
            
 
         #----<<b_xrcald>>----
         #Ctrlp:construct.c.page1.b_xrcald
         ON ACTION controlp INFIELD b_xrcald
            #add-point:ON ACTION controlp INFIELD b_xrcald
            {<point name="construct.c.page1.b_xrcald" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_xrcald
            #add-point:BEFORE FIELD b_xrcald
            {<point name="construct.b.page1.b_xrcald" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xrcald
            
            #add-point:AFTER FIELD b_xrcald
            {<point name="construct.a.page1.b_xrcald" />}
            #END add-point
            
 
         #----<<b_xrcald_desc>>----
         #----<<b_xrcaownid>>----
         #Ctrlp:construct.c.page1.b_xrcaownid
         ON ACTION controlp INFIELD b_xrcaownid
            #add-point:ON ACTION controlp INFIELD b_xrcaownid
            {<point name="construct.c.page1.b_xrcaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_xrcaownid
            #add-point:BEFORE FIELD b_xrcaownid
            {<point name="construct.b.page1.b_xrcaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xrcaownid
            
            #add-point:AFTER FIELD b_xrcaownid
            {<point name="construct.a.page1.b_xrcaownid" />}
            #END add-point
            
 
         #----<<b_xrcaownid_desc>>----
         #----<<b_xrcaowndp>>----
         #Ctrlp:construct.c.page1.b_xrcaowndp
         ON ACTION controlp INFIELD b_xrcaowndp
            #add-point:ON ACTION controlp INFIELD b_xrcaowndp
            {<point name="construct.c.page1.b_xrcaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_xrcaowndp
            #add-point:BEFORE FIELD b_xrcaowndp
            {<point name="construct.b.page1.b_xrcaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xrcaowndp
            
            #add-point:AFTER FIELD b_xrcaowndp
            {<point name="construct.a.page1.b_xrcaowndp" />}
            #END add-point
            
 
         #----<<b_xrcaowndp_desc>>----
         #----<<b_xrcacrtid>>----
         #Ctrlp:construct.c.page1.b_xrcacrtid
         ON ACTION controlp INFIELD b_xrcacrtid
            #add-point:ON ACTION controlp INFIELD b_xrcacrtid
            {<point name="construct.c.page1.b_xrcacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_xrcacrtid
            #add-point:BEFORE FIELD b_xrcacrtid
            {<point name="construct.b.page1.b_xrcacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xrcacrtid
            
            #add-point:AFTER FIELD b_xrcacrtid
            {<point name="construct.a.page1.b_xrcacrtid" />}
            #END add-point
            
 
         #----<<b_xrcacrtid_desc>>----
         #----<<b_xrcacrtdp>>----
         #Ctrlp:construct.c.page1.b_xrcacrtdp
         ON ACTION controlp INFIELD b_xrcacrtdp
            #add-point:ON ACTION controlp INFIELD b_xrcacrtdp
            {<point name="construct.c.page1.b_xrcacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_xrcacrtdp
            #add-point:BEFORE FIELD b_xrcacrtdp
            {<point name="construct.b.page1.b_xrcacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xrcacrtdp
            
            #add-point:AFTER FIELD b_xrcacrtdp
            {<point name="construct.a.page1.b_xrcacrtdp" />}
            #END add-point
            
 
         #----<<b_xrcacrtdp_desc>>----
         #----<<b_xrcacrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xrcacrtdt
            #add-point:BEFORE FIELD b_xrcacrtdt
            {<point name="construct.b.page1.b_xrcacrtdt" />}
            #END add-point
 
         #----<<b_xrcamodid>>----
         #Ctrlp:construct.c.page1.b_xrcamodid
         ON ACTION controlp INFIELD b_xrcamodid
            #add-point:ON ACTION controlp INFIELD b_xrcamodid
            {<point name="construct.c.page1.b_xrcamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_xrcamodid
            #add-point:BEFORE FIELD b_xrcamodid
            {<point name="construct.b.page1.b_xrcamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xrcamodid
            
            #add-point:AFTER FIELD b_xrcamodid
            {<point name="construct.a.page1.b_xrcamodid" />}
            #END add-point
            
 
         #----<<b_xrcamodid_desc>>----
         #----<<b_xrcamoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xrcamoddt
            #add-point:BEFORE FIELD b_xrcamoddt
            {<point name="construct.b.page1.b_xrcamoddt" />}
            #END add-point
 
         #----<<b_xrcacnfid>>----
         #Ctrlp:construct.c.page1.b_xrcacnfid
         ON ACTION controlp INFIELD b_xrcacnfid
            #add-point:ON ACTION controlp INFIELD b_xrcacnfid
            {<point name="construct.c.page1.b_xrcacnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_xrcacnfid
            #add-point:BEFORE FIELD b_xrcacnfid
            {<point name="construct.b.page1.b_xrcacnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xrcacnfid
            
            #add-point:AFTER FIELD b_xrcacnfid
            {<point name="construct.a.page1.b_xrcacnfid" />}
            #END add-point
            
 
         #----<<b_xrcacnfid_desc>>----
         #----<<b_xrcacnfdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xrcacnfdt
            #add-point:BEFORE FIELD b_xrcacnfdt
            {<point name="construct.b.page1.b_xrcacnfdt" />}
            #END add-point
 
         #----<<b_xrcapstid>>----
         #Ctrlp:construct.c.page1.b_xrcapstid
         ON ACTION controlp INFIELD b_xrcapstid
            #add-point:ON ACTION controlp INFIELD b_xrcapstid
            {<point name="construct.c.page1.b_xrcapstid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_xrcapstid
            #add-point:BEFORE FIELD b_xrcapstid
            {<point name="construct.b.page1.b_xrcapstid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_xrcapstid
            
            #add-point:AFTER FIELD b_xrcapstid
            {<point name="construct.a.page1.b_xrcapstid" />}
            #END add-point
            
 
         #----<<b_xrcapstid_desc>>----
         #----<<b_xrcapstdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_xrcapstdt
            #add-point:BEFORE FIELD b_xrcapstdt
            {<point name="construct.b.page1.b_xrcapstdt" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc = ls_wc
   ELSE
      LET g_master_idx = 1
   END IF
   
   LET g_wc = g_wc_table 
 
 
        
   LET g_wc2 = " 1=1"
 
        
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
        
   LET g_error_show = 1
   CALL axrp340_b_fill()
   LET l_ac = g_master_idx
   CALL axrp340_fetch()
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
   
END FUNCTION
]]>
  </section>
  <section id="axrp340.reproduce" ver="1" status="" src="s">
    <![CDATA[#+ reproduce
PRIVATE FUNCTION axrp340_reproduce()
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #add-point:reproduce段control
   {<point name="reproduce.control"/>}
   #end add-point 
END FUNCTION
]]>
  </section>
  <section id="axrp340.show" ver="2" status="" src="s">
    <![CDATA[PRIVATE FUNCTION axrp340_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
 
   DISPLAY g_master.* TO b_xrcald,b_xrcald_desc,b_xrcacomp,b_xrcacomp_desc,b_xrca003,b_xrca003_desc
 
   #讀入ref值
   #add-point:show段單身reference
   {<point name="show.head.reference"/>}
   #end add-point
 
   CALL axrp340_b_fill()
   CALL axrp340_detail_show()
END FUNCTION
]]>
  </section>
  <section id="axrp340.ui_dialog" ver="5" status="" src="s">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION axrp340_ui_dialog() 
   {<Local define>}
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_result STRING
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   LET g_current_row = 0
   LET g_current_idx = 1
   LET g_action_choice = " "
   LET g_main_hidden = 1
   LET l_ac = 1
 
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   
   CALL axrp340_b_fill()
  
   WHILE li_exit = FALSE
 
      CALL cl_dlg_query_bef_disp()  #相關查詢
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:input段落
         {<point name="ui_dialog.input"/>}
         #end add-point
 
         #add-point:construct段落
         {<point name="ui_dialog.construct"/>}
         #end add-point
     
         DISPLAY ARRAY g_xrca_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_xrca_d.getLength() TO FORMONLY.h_count
               LET g_master_idx = l_ac
               CALL axrp340_b_fill2()
 
               #add-point:input段before row
               {<point name="input.body.before_row"/>}
               #end add-point
 
            
 
            #自訂ACTION(detail_show,page_1)
            
 
         END DISPLAY
 
 
 
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
      
         BEFORE DIALOG
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            #add-point:ui_dialog段before dialog
            {<point name="ui_dialog.bef_dialog"/>}
            #end add-point
 
         AFTER DIALOG
            #add-point:ui_dialog段 after dialog
            {<point name="ui_dialog.after_dialog"/>}
            #end add-point
            
         ON ACTION exit
            LET g_action_choice="exit"
            LET INT_FLAG = FALSE
            LET li_exit = TRUE
            EXIT DIALOG 
      
         ON ACTION close
            LET INT_FLAG=FALSE
            LET li_exit = TRUE
            EXIT DIALOG
 
         ON ACTION accept
            INITIALIZE g_wc_filter TO NULL
            IF cl_null(g_wc) THEN
               LET g_wc = " 1=1"
            END IF
 
 
         
            LET g_wc2 = " 1=1"
 
            #儲存WC資訊
            CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
            CALL axrp340_b_fill()
      
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
 
         ON ACTION qbeclear   # 條件清除
            CLEAR FORM
 
         ON ACTION datarefresh   # 重新整理
            CALL axrp340_b_fill()
 
         #+ 此段落由子樣板qs19產生
         #有關於sel欄位選取的action段落
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_xrca_d.getLength()
               LET g_xrca_d[li_idx].sel = "Y"
            END FOR
 
            #add-point:ui_dialog段on action selall
            {<point name="ui_dialog.onaction_selall"/>}
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_xrca_d.getLength()
               LET g_xrca_d[li_idx].sel = "N"
            END FOR
 
            #add-point:ui_dialog段on action selnone
            {<point name="ui_dialog.onaction_selnone"/>}
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_xrca_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_xrca_d[li_idx].sel = "Y"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action sel
            {<point name="ui_dialog.onaction_sel"/>}
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_xrca_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_xrca_d[li_idx].sel = "N"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action unsel
            {<point name="ui_dialog.onaction_unsel"/>}
            #end add-point
 
 
 
         #+ 此段落由子樣板qs16產生
         ON ACTION filter
            LET g_action_choice="filter"
            CALL axrp340_filter()
            #add-point:ON ACTION filter
            {<point name="menu.filter" />}
            #END add-point
            EXIT DIALOG
 
 
         
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
 
      END DIALOG 
   
   END WHILE
 
END FUNCTION
]]>
  </section>
</add_points>
