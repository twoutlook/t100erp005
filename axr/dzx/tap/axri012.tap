<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="axri012" std_prog="axri012" erpver="1.0" module="AXR" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.axri012_num_chk" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# #用于xrac004，xrac005，xrac006欄位錄入有效性檢查
# #p_min：最小值(必須錄入)
# #p_max：最大值(必須錄入)
# #p_num：傳入值（必須錄入）
# #axr-00001:0-12
# #axr-00002:-999~999
PRIVATE FUNCTION axri012_num_chk(p_num,p_min,p_max)
DEFINE p_num LIKE xrac_t.xrac005
   DEFINE p_min LIKE xrac_t.xrac005
   DEFINE p_max LIKE xrac_t.xrac005
   DEFINE r_success LIKE type_t.num5
   DEFINE l_errno LIKE type_t.chr20
   
   LET r_success = TRUE
   LET l_errno = ''

   IF NOT cl_null(p_min) AND NOT cl_null(p_max) AND NOT cl_null(p_num) THEN 
      #根據傳入的最大值為12或者999來判斷使用axr-00001還是axr-00002
      IF p_max = 12 THEN LET l_errno = 'axr-00001' END IF 
      IF p_max = 999 THEN LET l_errno = 'axr-00002' END IF 
      IF p_max = 99 THEN LET l_errno = 'axr-00005' END IF 
      IF p_max = 20 THEN LET l_errno = 'axr-00007' END IF  #請錄入0到20之間的數！
      IF NOT ap_chk_Range(p_num,p_min,1,p_max,1,l_errno,0) THEN
         LET r_success = FALSE
      END IF 
   END IF 
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axri012_oocq002_chk" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# #oocq002重複性檢查
PRIVATE FUNCTION axri012_oocq002_chk(p_oocq002,p_oocq002_t,p_cmd)
DEFINE p_oocq002 LIKE oocq_t.oocq002
   DEFINE p_oocq002_t LIKE oocq_t.oocq002
   DEFINE p_cmd LIKE type_t.chr1
   DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE
   IF NOT cl_null(p_oocq002) THEN 
      IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (p_oocq002 != g_oocq002_t ))) THEN 
         IF NOT ap_chk_notDup(p_oocq002,"SELECT COUNT(*) FROM oocq_t WHERE "||"oocqent = '" ||g_enterprise|| "' AND "||"oocq001 = '3114' AND "|| "oocq002 = '"||p_oocq002 ||"'",'std-00004',0) THEN 
            LET r_success = FALSE
         END IF
      END IF
   END IF
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axri012_set_format" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION axri012_set_format(ps_fields,ps_format)
   DEFINE   ps_fields           STRING,
            ps_format           STRING
   DEFINE   lst_fields          base.StringTokenizer,
            ls_field_name       STRING
   DEFINE   lnode_root          om.DomNode,
            llst_items          om.NodeList,
            li_i                LIKE type_t.num5,
            lnode_item          om.DomNode,
            ls_item_name        STRING,
            lnode_item_child    om.DomNode,
            ls_item_child_tag   STRING
   DEFINE   lwin_curr           ui.Window

   IF (ps_fields IS NULL) THEN
      RETURN
   ELSE
      LET ps_fields = ps_fields.toLowerCase()
   END IF

   LET lwin_curr = ui.Window.getCurrent()
   LET lnode_root = lwin_curr.getNode()

   LET llst_items = lnode_root.selectByPath("//Form//*")
   LET lst_fields = base.StringTokenizer.create(ps_fields, ",")
   WHILE lst_fields.hasMoreTokens()
      LET ls_field_name = lst_fields.nextToken()
      LET ls_field_name = ls_field_name.trim()

      FOR li_i = 1 TO llst_items.getLength()
         LET lnode_item = llst_items.item(li_i)
         LET ls_item_name = lnode_item.getAttribute("colName")

         IF (ls_item_name IS NULL) THEN
            LET ls_item_name = lnode_item.getAttribute("name")

            IF (ls_item_name IS NULL) THEN
               CONTINUE FOR
            END IF
         END IF

         IF (ls_item_name.equals(ls_field_name)) THEN
            LET lnode_item_child = lnode_item.getFirstChild()
            LET ls_item_child_tag = lnode_item_child.getTagName()
            IF (ls_item_child_tag.equals("Edit") OR
                ls_item_child_tag.equals("ButtonEdit") OR
                ls_item_child_tag.equals("Label") OR
                ls_item_child_tag.equals("DateEdit")) THEN

               CALL lnode_item_child.setAttribute("format", "")
               CALL lnode_item_child.setAttribute("format", ps_format)
            END IF

            EXIT FOR
         END IF
      END FOR
   END WHILE
END FUNCTION]]>
  </point>
  <point name="function.axri012_open_axri012_1" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# 開啟子作業---產生多賬期
# 0代表是點了按鈕，1代表是自動彈出提示
PRIVATE FUNCTION axri012_open_axri012_1(p_type)
DEFINE l_cnt LIKE type_t.num10 
   DEFINE p_type LIKE type_t.num5
   LET l_cnt = 0 
   IF NOT cl_null(g_oocq_m.oocq002) THEN 
      SELECT COUNT(*) INTO l_cnt FROM xrac_t
       WHERE xrac001 = '3114' 
         AND xrac002 = g_oocq_m.oocq002
      IF l_cnt = 0 THEN
         #CALL axri012_01(g_oocq_m.oocq002,g_oocq_m.oocq004) #20131008 mark
         CALL axri012_open_s01(g_oocq_m.oocq002,g_oocq_m.oocq004) #20131008 add
      ELSE 
         IF p_type = 0 THEN 
            CALL cl_err(g_oocq_m.oocq002,'axr-00006',0) 
         END IF 
      END IF 
   ELSE
      CALL cl_err('','-400',0)
   END IF
   CALL axri012_b_fill()
END FUNCTION]]>
  </point>
  <point name="function.axri012_oocq004_set" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# oocq004欄位屬性動態設定
PRIVATE FUNCTION axri012_oocq004_set()
DEFINE l_gzad004 LIKE gzad_t.gzad004
   
   LET l_gzad004 = 'Y'
   SELECT gzad004 INTO l_gzad004 FROM gzad_t WHERE gzad001 = '3114' AND gzad002 = '1'
   #如果oocq004打勾表示可以空白
   IF l_gzad004 = 'N' THEN
      CALL cl_set_comp_required('oocq004',TRUE)
   ELSE
      CALL cl_set_comp_required('oocq004',FALSE)
   END IF 
   CALL cl_set_combo_scc('oocq004','8314')
END FUNCTION]]>
  </point>
  <point name="function.axri012_xrac003_def" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# #對axrc003給默認值
PRIVATE FUNCTION axri012_xrac003_def(p_oocq002,p_xrac003,p_cmd)
DEFINE p_cmd LIKE type_t.chr1
   DEFINE p_xrac003 LIKE xrac_t.xrac003
   DEFINE p_oocq002 LIKE oocq_t.oocq002
   DEFINE r_return LIKE xrac_t.xrac003
   #如果p_xrac003為空
   #取xrac001 = '3114' and xrac002 = p_oocq002 的xrac003的最大值+1
   LET r_return = p_xrac003
   IF p_cmd = 'a' THEN
      SELECT MAX(xrac003) INTO r_return FROM xrac_t
       WHERE xrac001 = '3114'
         AND xrac002 = p_oocq002
	     AND xracent = g_enterprise
      IF cl_null(r_return) THEN LET r_return = 0 END IF 
      LET r_return = r_return +1
   END IF 
   
   RETURN r_return
END FUNCTION]]>
  </point>
  <point name="function.axri012_xrac003_chk" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# #單身key值重複報錯
PRIVATE FUNCTION axri012_xrac003_chk(p_oocq002,p_oocq002_t,p_xrac003,p_xrac003_t,p_cmd)
DEFINE p_oocq002 LIKE oocq_t.oocq002
   DEFINE p_oocq002_t LIKE oocq_t.oocq002
   DEFINE p_xrac003 LIKE xrac_t.xrac003
   DEFINE p_xrac003_t LIKE xrac_t.xrac003
   DEFINE p_cmd LIKE type_t.chr1
   DEFINE l_cmd LIKE type_t.chr1
   DEFINE r_success LIKE type_t.num5

   LET l_cmd = p_cmd
   LET r_success = TRUE
   
   IF NOT cl_null(p_oocq002) AND NOT cl_null(p_xrac003) THEN 
      IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (p_oocq002 != p_oocq002_t  OR p_xrac003 != p_xrac003_t))) THEN 
         IF NOT ap_chk_notDup(p_xrac003,"SELECT COUNT(*) FROM xrac_t WHERE "||"xracent = '" ||g_enterprise|| "' AND "||"xrac001 = '3114' AND "|| "xrac002 = '"||p_oocq002 ||"' AND "|| "xrac003 = '"||p_xrac003 ||"'",'std-00004',0) THEN 
            LET r_success = FALSE
         END IF
      END IF
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axri012_void_chk" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# #檢查是否在axri013中已經有使用,表是xrad_t
PRIVATE FUNCTION axri012_void_chk(p_oocq002)
DEFINE p_oocq002 LIKE oocq_t.oocq002
   DEFINE r_success LIKE type_t.num5
   DEFINE l_oocqstus LIKE oocq_t.oocqstus
   DEFINE l_count    LIKE type_t.num10
   #給予初始化
   LET r_success = TRUE
   LET l_oocqstus = ''
   #空值判斷
   IF NOT cl_null(p_oocq002) THEN 
      #獲取傳入參數的stus欄位值
      SELECT oocqstus INTO l_oocqstus FROM oocq_t
       WHERE oocqent = g_enterprise AND oocq001 = '3114' AND oocq002 = p_oocq002 
      IF l_oocqstus = 'Y' THEN 
         #axri013使用的xrai_t
         LET l_count = 0
         SELECT COUNT(*) INTO l_count FROM xrai_t
          WHERE xrai002 = p_oocq002
         IF l_count > 0 THEN
            IF NOT cl_ask_confirm('axr-00004') THEN
               LET r_success = FALSE
            END IF
         END IF 
      END IF
   END IF 
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axri012_xrac007_set" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# #xrac007欄位屬性動態設定
PRIVATE FUNCTION axri012_xrac007_set()
CALL cl_set_combo_scc('xrac007','8310')
END FUNCTION]]>
  </point>
  <point name="function.axri012_xrac008_title" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#單身xrac008欄位標題修改
PRIVATE FUNCTION axri012_xrac008_title(p_oocq001,p_oocq002)
   DEFINE p_oocq001 LIKE oocq_t.oocq001
   DEFINE p_oocq002 LIKE oocq_t.oocq002
   DEFINE l_xrac008 LIKE xrac_t.xrac008
   DEFINE l_pos     LIKE type_t.num10
   DEFINE l_dzeb003 LIKE dzeb_t.dzeb003
   DEFINE l_str     LIKE type_t.chr50
   
   LET l_xrac008 = 0
   LET l_str = ''
   LET l_dzeb003 = ''
   SELECT SUM(xrac008) INTO l_xrac008 FROM xrac_t
    WHERE xrac001 = p_oocq001 AND xrac002 = p_oocq002
      AND xracent = g_enterprise
   IF cl_null(l_xrac008) THEN LET l_xrac008 = 0 END IF 
   LET l_str = l_xrac008
   IF l_str = "0" THEN 
   ELSE
      CALL s_chr_get_index_of(l_xrac008,'.',1) RETURNING l_pos
      IF l_pos > 1 THEN
         LET l_str = l_str[1,l_pos+2]
      END IF
      SELECT dzeb003 INTO l_dzeb003 FROM dzeb_t WHERE dzeb001 = 'xrac_t' AND dzeb002 = 'xrac008'
      CALL cl_set_comp_att_text('xrac008',l_dzeb003||": "||l_str||"%")
   END IF
END FUNCTION]]>
  </point>
  <point name="function.axri012_xrac008_chk" order="11" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# 單身xrac008如果oocq004 = ‘1’ 時候完成錄入后需要判斷是否SUM（xrac008） =100
PRIVATE FUNCTION axri012_xrac008_chk(p_oocq002,p_oocq004)
DEFINE p_oocq002 LIKE oocq_t.oocq002
   DEFINE p_oocq004 LIKE oocq_t.oocq004
   DEFINE l_sum LIKE type_t.num20_6

   LET l_sum = 0
   IF p_oocq004 != '1' THEN RETURN END IF 
   SELECT sum(xrac008) INTO l_sum FROM xrac_t
    WHERE xrac001 = '3114'
      AND xrac002 = p_oocq002
   IF l_sum != 100 THEN 
      CALL cl_err(l_sum,'axr-00003',1)
   END IF
END FUNCTION]]>
  </point>
  <point name="function.axri012_open_s01" order="12" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION axri012_open_s01(p_oocq002,p_oocq004)
   DEFINE p_oocq002 LIKE oocq_t.oocq002
   DEFINE p_oocq004 LIKE oocq_t.oocq004
   
   OPEN WINDOW w_axri012_s01 WITH FORM cl_ap_formpath("axr","axri012_s01")
   CALL cl_set_combo_scc('oocq004','8314') 
   CALL cl_set_combo_scc('xrac007','8310')
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #輸入開始
      INPUT BY NAME g_xrac_s.xrac001,g_xrac_s.xrac002,g_xrac_s.xrac003,g_xrac_s.oocq004,g_xrac_s.xrac006,g_xrac_s.xrac005,g_xrac_s.xrac004,g_xrac_s.xrac007 ATTRIBUTE(WITHOUT DEFAULTS)
         
         BEFORE INPUT
            LET g_xrac_s.xrac001 = '3114'
            LET g_xrac_s.xrac002 = p_oocq002
            LET g_xrac_s.oocq004 = p_oocq004
            LET g_xrac_s.xrac003 = 0
            LET g_xrac_s.xrac004 = 0
            LET g_xrac_s.xrac005 = 0
            LET g_xrac_s.xrac006 = 0
            LET g_xrac_s.xrac007 = 10          

         AFTER FIELD xrac003
            IF NOT axri012_num_chk(g_xrac_s.xrac003,0,20) THEN
               LET g_xrac_s.xrac003 = 0 
               NEXT FIELD xrac003
            END IF         

         AFTER FIELD xrac006
            IF NOT axri012_num_chk(g_xrac_s.xrac006,-999,999) THEN
               LET g_xrac_s.xrac006 = 0 
               NEXT FIELD xrac006
            END IF         

         AFTER FIELD xrac005
            IF NOT axri012_num_chk(g_xrac_s.xrac005,-12,12) THEN
               LET g_xrac_s.xrac005 = 0 
               NEXT FIELD xrac005
            END IF         

         AFTER FIELD xrac004
            IF NOT axri012_num_chk(g_xrac_s.xrac004,0,99) THEN
               LET g_xrac_s.xrac004 = 0 
               NEXT FIELD xrac004
            END IF         
       
         AFTER INPUT
            CALL axri012_xrac('3114',p_oocq002,g_xrac_s.oocq004,g_xrac_s.xrac003,g_xrac_s.xrac004,
                                     g_xrac_s.xrac005,g_xrac_s.xrac006,g_xrac_s.xrac007)           
            
      END INPUT

      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG

   END DIALOG
 
   #畫面關閉
   CLOSE WINDOW w_axri012_s01 
   LET INT_FLAG = FALSE   
   
END FUNCTION]]>
  </point>
  <point name="function.axri012_xrac_ins" order="13" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION axri012_xrac_ins(p_xrac001,p_xrac002,p_xrac003,p_xrac004,p_xrac005,p_xrac006,p_xrac007,p_xrac008)
   DEFINE p_xrac001 LIKE xrac_t.xrac001
   DEFINE p_xrac002 LIKE xrac_t.xrac002
   DEFINE p_xrac003 LIKE xrac_t.xrac003
   DEFINE p_xrac004 LIKE xrac_t.xrac004
   DEFINE p_xrac005 LIKE xrac_t.xrac005
   DEFINE p_xrac006 LIKE xrac_t.xrac006
   DEFINE p_xrac007 LIKE xrac_t.xrac007
   DEFINE p_xrac008 LIKE xrac_t.xrac008
   
   DEFINE r_success LIKE type_t.chr1
   LET r_success = 'Y'
   INSERT INTO xrac_t(xracent,xrac001,xrac002,xrac003,xrac004,
                      xrac005,xrac006,xrac007,xrac008)
               VALUES(g_enterprise,p_xrac001,p_xrac002,p_xrac003,p_xrac004,
                      p_xrac005,p_xrac006,p_xrac007,p_xrac008)      
   IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
      CALL cl_err("ins xrac_t",SQLCA.sqlcode,1)
      LET r_success = 'N'
   END IF
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.axri012_xrac" order="14" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION axri012_xrac(p_xrac001,p_xrac002,p_oocq004,p_xrac003,p_xrac004,p_xrac005,p_xrac006,p_xrac007)
   DEFINE p_xrac001 LIKE xrac_t.xrac001
   DEFINE p_xrac002 LIKE xrac_t.xrac002
   DEFINE p_oocq004 LIKE oocq_t.oocq001
   DEFINE p_xrac003 LIKE xrac_t.xrac003
   DEFINE p_xrac004 LIKE xrac_t.xrac004
   DEFINE p_xrac005 LIKE xrac_t.xrac005
   DEFINE p_xrac006 LIKE xrac_t.xrac006
   DEFINE p_xrac007 LIKE xrac_t.xrac007
   DEFINE l_success LIKE type_t.chr1
   DEFINE l_xrac    RECORD LIKE xrac_t.*
   DEFINE l_cnt     LIKE type_t.num10   #用於判斷是否存在與xrac_t中
   DEFINE l_xrac008 LIKE xrac_t.xrac008 #用於累加xrac008的值
#初始化
   LET l_success = 'Y'
   INITIALIZE l_xrac.* TO NULL 
   LET l_cnt = 0
   LET l_xrac008 = 0
   
#由於axri012是使用的SCC：3114，故此處對第一個傳入的參數進行判斷
   #不等於的時候直接退出
   IF p_xrac001 != 3114 THEN RETURN END IF 
#判斷傳入值并給預設值
  #如果xrac001（應用分類），xrac002（應用分類碼），oocq004（金額設定），xrac003（產生期數）
  #為空，則RETURN
   IF cl_null(p_xrac001) OR cl_null(p_xrac002) OR cl_null(p_oocq004) OR cl_null(p_xrac003) THEN
      RETURN 
   END IF 
   LET l_xrac.xrac001 = p_xrac001
   LET l_xrac.xrac002 = p_xrac002
  #xrac004，xrac005，xrac006傳入值為空時初始化0
   IF cl_null(p_xrac004) THEN LET p_xrac004 = 0 END IF 
   IF cl_null(p_xrac005) THEN LET p_xrac005 = 0 END IF 
   IF cl_null(p_xrac006) THEN LET p_xrac006 = 0 END IF 
   LET l_xrac.xrac004 = p_xrac004
   LET l_xrac.xrac005 = p_xrac005
   LET l_xrac.xrac006 = p_xrac006
  #xrac003錄入值處理
   IF p_xrac003 = 0 THEN RETURN END IF  
  #xrac007給默認值10.現金類型
   LET l_xrac.xrac007 = p_xrac007
  #xrac008給默認值0
   IF p_oocq004 = '1' THEN
      LET l_xrac.xrac008 = s_num_round('1',(100/p_xrac003),1)
   ELSE
      LET l_xrac.xrac008 = 0 
   END IF 
   
  #xrac003給默認值
   LET l_xrac.xrac003 = 1
#判斷是否已經存在xrac_t的資料
   SELECT COUNT(*) INTO l_cnt FROM xrac_t
    WHERE xrac001 = p_xrac001
      AND xrac002 = p_xrac002

#啟用事務
   CALL s_transaction_begin()
   
   #開始插入操作
   WHILE TRUE
     #判斷要插入的xrac003與p_xrac003相等，且p_oocq004 = 1.比率分攤
     #或者要插入的xrac003大於p_xrac003
     #使用while外部的插入，否則xrac008均給與預設值0
      IF (l_xrac.xrac003 = p_xrac003 AND p_oocq004 = 1) OR l_xrac.xrac003 > p_xrac003 THEN
         EXIT WHILE
      END IF 

     #插入數據庫操作
      CALL axri012_xrac_ins(l_xrac.xrac001,l_xrac.xrac002,l_xrac.xrac003,
                               l_xrac.xrac004,l_xrac.xrac005,l_xrac.xrac006,
                               l_xrac.xrac007,l_xrac.xrac008)
           RETURNING l_success
      IF l_success = 'N' THEN EXIT WHILE END IF 
     #xrac003自動加1
      LET l_xrac.xrac003 = l_xrac.xrac003 + 1
     #xrac008累加
      LET l_xrac008 = l_xrac008 + l_xrac.xrac008
   END WHILE 
   
  #當p_oocq004 = '1',最後一筆資料由於xrac008的特殊性，直接在while外面插入數據庫中
   IF l_success = 'Y' AND p_oocq004 = '1'  THEN 
     #給xrac003 ,xrac008賦值
      LET l_xrac.xrac003 = p_xrac003
      LET l_xrac.xrac008 = 100 - l_xrac008
      CALL axri012_xrac_ins(l_xrac.xrac001,l_xrac.xrac002,l_xrac.xrac003,
                              l_xrac.xrac004,l_xrac.xrac005,l_xrac.xrac006,
                              l_xrac.xrac007,l_xrac.xrac008)
          RETURNING l_success 
   END IF
   
#結束事務
   CALL s_transaction_end(l_success,1)
END FUNCTION]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="b_fill.sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL axri012_xrac008_title(g_oocq_m.oocq001,g_oocq_m.oocq002)]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_wc = g_wc ," AND oocq001 = '3114' "
   LET l_wc = g_wc]]>
  </point>
  <point name="construct.a.page1.xrac008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.oocq002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '3114'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocq002  #顯示到畫面上

            NEXT FIELD oocq002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.oocqcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocqcrtdp  #顯示到畫面上

            NEXT FIELD oocqcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.oocqcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocqcrtid  #顯示到畫面上

            NEXT FIELD oocqcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.oocqmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocqmodid  #顯示到畫面上

            NEXT FIELD oocqmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.oocqowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocqowndp  #顯示到畫面上

            NEXT FIELD oocqowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.oocqownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO oocqownid  #顯示到畫面上

            NEXT FIELD oocqownid                     #返回原欄位

]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_oocq_m.oocqstus = 'Y' THEN
      CALL cl_set_act_visible("modify,delete,reproduce", TRUE)
   ELSE
      CALL cl_set_act_visible("modify,delete,reproduce", FALSE)
   END IF ]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[PRIVATE type type_g_xrac_s        RECORD
       xrac001 LIKE xrac_t.xrac001, 
   xrac002 LIKE xrac_t.xrac002, 
   xrac003 LIKE xrac_t.xrac003, 
   oocq004 LIKE oocq_t.oocq004, 
   xrac006 LIKE xrac_t.xrac006, 
   xrac005 LIKE xrac_t.xrac005, 
   xrac004 LIKE xrac_t.xrac004, 
   xrac007 LIKE xrac_t.xrac007
       END RECORD
DEFINE g_xrac_s        type_g_xrac_s]]>
  </point>
  <point name="input.a.oocq001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            


]]>
  </point>
  <point name="input.a.oocq002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF NOT axri012_oocq002_chk(g_oocq_m.oocq002,g_oocq_m_t.oocq001,p_cmd) THEN
               IF p_cmd = 'a' THEN 
                  LET g_oocq_m.oocq002 = ''
               ELSE
                  LET g_oocq_m.oocq002 = g_oocq_m_t.oocq002
               END IF 
               NEXT FIELD oocq002
            END IF 


]]>
  </point>
  <point name="input.a.oocq003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.oocq004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.oocqcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocq_m.oocqcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_oocq_m.oocqcrtdp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocq_m.oocqcrtdp_desc
]]>
  </point>
  <point name="input.a.oocqcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocq_m.oocqcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocq_m.oocqcrtid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocq_m.oocqcrtid_desc
]]>
  </point>
  <point name="input.a.oocqmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocq_m.oocqmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocq_m.oocqmodid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocq_m.oocqmodid_desc
]]>
  </point>
  <point name="input.a.oocqowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocq_m.oocqowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_oocq_m.oocqowndp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocq_m.oocqowndp_desc
]]>
  </point>
  <point name="input.a.oocqownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocq_m.oocqownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocq_m.oocqownid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocq_m.oocqownid_desc
]]>
  </point>
  <point name="input.a.page1.xrac003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT axri012_xrac003_chk(g_oocq_m.oocq002,g_oocq_m_t.oocq002,
                                   g_xrac_d[l_ac].xrac003,g_xrac_d_t.xrac003,l_cmd) THEN
               IF l_cmd = 'a' THEN
                  CALL axri012_xrac003_def(g_oocq_m.oocq002,g_xrac_d[l_ac].xrac003,l_cmd) 
                       RETURNING g_xrac_d[l_ac].xrac003 
               ELSE
                  LET g_xrac_d[l_ac].xrac003 = g_xrac_d_t.xrac003 
               END IF 
               NEXT FIELD xrac003
            END IF ]]>
  </point>
  <point name="input.a.page1.xrac004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT axri012_num_chk(g_xrac_d[l_ac].xrac004,0,99) THEN 
               IF p_cmd = 'a' THEN 
                  LET g_xrac_d[l_ac].xrac004 = 0
               ELSE
                  LET g_xrac_d[l_ac].xrac004 = g_xrac_d_t.xrac004
               END IF 
               NEXT FIELD xrac004
            END IF ]]>
  </point>
  <point name="input.a.page1.xrac005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT axri012_num_chk(g_xrac_d[l_ac].xrac005,-12,12) THEN 
               IF p_cmd = 'a' THEN 
                  LET g_xrac_d[l_ac].xrac005 = 0
               ELSE
                  LET g_xrac_d[l_ac].xrac005 = g_xrac_d_t.xrac005 
               END IF 
               NEXT FIELD xrac005
            END IF ]]>
  </point>
  <point name="input.a.page1.xrac006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT axri012_num_chk(g_xrac_d[l_ac].xrac006,-999,999) THEN 
               IF p_cmd = 'a' THEN 
                  LET g_xrac_d[l_ac].xrac006 = 0
               ELSE
                  LET g_xrac_d[l_ac].xrac006 = g_xrac_d_t.xrac006
               END IF 
               NEXT FIELD xrac006
            END IF ]]>
  </point>
  <point name="input.a.page1.xrac008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL axri012_set_format('xrac008',"##########&.##%")]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL axri012_set_format('xrac008',"##########&.##%")
   IF l_return_b = TRUE THEN
      CALL axri012_input('u')
   ELSE
      CALL axri012_xrac008_chk(g_oocq_m.oocq002,g_oocq_m.oocq004)
   END IF ]]>
  </point>
  <point name="input.b.page1.xrac003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.xrac008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL axri012_set_format('xrac008',"##########&.##")]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         IF p_cmd = 'a' THEN
            NEXT FIELD oocq002
         END IF]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_return_b = FALSE]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axri012_xrac008_title(g_oocq_m.oocq001,g_oocq_m.oocq002)]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_xrac_d[l_ac].xrac007 = '10'
            IF cl_null(g_xrac_d[l_ac].xrac003) THEN 
               CALL axri012_xrac003_def(g_oocq_m.oocq002,g_xrac_d[l_ac].xrac003,l_cmd) 
                  RETURNING g_xrac_d[l_ac].xrac003 
            END IF 
            CALL axri012_xrac008_title(g_oocq_m.oocq001,g_oocq_m.oocq002) 
            LET g_xrac_d[l_ac].xrac008 = 0]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_return_b       LIKE type_t.num5]]>
  </point>
  <point name="input.detail_input.page1.open_axri012_1" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axri012_open_axri012_1(0)
               LET l_return_b = TRUE
               EXIT DIALOG]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  CALL axri012_open_axri012_1(1)]]>
  </point>
  <point name="input.head.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axri012_open_axri012_1(1)]]>
  </point>
  <point name="input.master_input.open_axri012_1" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axri012_open_axri012_1(0)]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_oocq_m.oocq002)  THEN
                  CALL n_oocql('3114',g_oocq_m.oocq002)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = '3114'
                  LET g_ref_fields[2] = g_oocq_m.oocq002
                  CALL ap_ref_array2(g_ref_fields," SELECT oocql004 FROM oocql_t WHERE oocqlent = '"
                      ||g_enterprise||"' AND oocql001 = ? AND oocql002 = ? AND oocql003 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_oocq_m.oocql004= g_rtn_fields[1]

                  DISPLAY BY NAME g_oocq_m.oocql004
               END IF]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      #根據azzi650預設個默認值
      SELECT gzad014 INTO g_oocq_m.oocq004 FROM gzad_t
       WHERE gzad001 = '3114' AND gzad002 = '1' 
      LET g_oocq_m.oocqmodid = ''
      LET g_oocq_m.oocqmoddt = ''
      LET g_oocq_m.oocqstus = "Y"]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_argv[1] = '3114']]>
  </point>
  <point name="menu.detail_show.page1.open_axri012_1" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axri012_open_axri012_1(0)
]]>
  </point>
  <point name="menu.detail_show.page1_sub.azzi600" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        CALL cl_cmdrun("azzi600 8310")]]>
  </point>
  <point name="menu.open_aooi300" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL cl_cmdrun('aooi300 3114')]]>
  </point>
  <point name="menu.open_axri012_1" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL axri012_open_axri012_1(0)]]>
  </point>
  <point name="reproduce.a.oocq002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         IF NOT axri012_oocq002_chk(l_newno02,'','a') THEN
            LET l_newno02 = ''
            NEXT FIELD oocq002
         END IF ]]>
  </point>
  <point name="reproduce.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         LET l_newno = '3114']]>
  </point>
  <point name="reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_oocql   RECORD LIKE oocql_t.*]]>
  </point>
  <point name="reproduce.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   SELECT * INTO l_oocql.* FROM oocql_t
    WHERE oocqlent = g_enterprise AND oocql001 = '3114' AND oocql002 = g_oocq_m.oocq002
   
   LET l_oocql.oocql002 = l_master.oocq002 
   INSERT INTO oocql_t VALUES(l_oocql.*)
   IF SQLCA.sqlcode THEN
      CALL cl_err("oocql_t copy",SQLCA.sqlcode,1)
      ROLLBACK WORK
      RETURN
   END IF
   LET l_master.oocqstus = "Y"]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("oocqstus",FALSE)]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_oocq_m.oocq001
   LET g_ref_fields[2] = g_oocq_m.oocq002
   CALL ap_ref_array2(g_ref_fields," SELECT oocql004 FROM oocql_t WHERE oocqlent = '"||g_enterprise||"' AND oocql001 = ? AND oocql002 = ? AND oocql003 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_oocq_m.oocql004 = g_rtn_fields[1] 
   DISPLAY BY NAME g_oocq_m.oocql004
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocq_m.oocqmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocq_m.oocqmodid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocq_m.oocqmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocq_m.oocqownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocq_m.oocqownid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocq_m.oocqownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocq_m.oocqowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_oocq_m.oocqowndp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocq_m.oocqowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocq_m.oocqcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_oocq_m.oocqcrtid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocq_m.oocqcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oocq_m.oocqcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_oocq_m.oocqcrtdp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_oocq_m.oocqcrtdp_desc
]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF NOT axri012_void_chk(g_oocq_m.oocq002) THEN 
      RETURN 
   END IF ]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL axri012_oocq004_set()
   CALL axri012_xrac007_set()]]>
  </point>
  <section id="axri012.b_fill" ver="4" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION axri012_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_xrac_d.clear()    #g_xrac_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF axri012_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE xrac003,xrac004,xrac005,xrac006,xrac007,xrac008 FROM xrac_t",   
                  " INNER JOIN oocq_t ON oocq001 = xrac001 ",
                  " AND oocq002 = xrac002 ",
 
                  #"",
                  
                  "",
                  " WHERE xracent=? AND xrac001=? AND xrac002=?"
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY xrac_t.xrac003"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      PREPARE axri012_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR axri012_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_oocq_m.oocq001
                                               ,g_oocq_m.oocq002
 
                                               
      FOREACH b_fill_cs INTO g_xrac_d[l_ac].xrac003,g_xrac_d[l_ac].xrac004,g_xrac_d[l_ac].xrac005,g_xrac_d[l_ac].xrac006, 
          g_xrac_d[l_ac].xrac007,g_xrac_d[l_ac].xrac008
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_xrac_d.deleteElement(g_xrac_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE axri012_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="axri012.b_fill2" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION axri012_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL axri012_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="axri012.browser_fill" ver="4" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION axri012_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_oocq_m.* TO NULL
   CALL g_xrac_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "oocq001"
                        ,",oocq002"
 
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE oocq001 ",
                                    ",oocq002 ",
 
                        " FROM oocq_t ",
                              " ",
                              " LEFT JOIN xrac_t ON xracent = oocqent AND oocq001 = xrac001 AND oocq002 = xrac002 ",
 
 
                              " LEFT JOIN oocql_t ON oocq001 = oocql001 AND oocq002 = oocql002 AND oocql003 = '",g_lang,"' ", 
                              " ", 
                       " WHERE oocqent = '" ||g_enterprise|| "' AND xracent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("oocq_t")
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE oocq001 ",
                                    ",oocq002 ",
 
                        " FROM oocq_t ", 
                              " ",
                              " LEFT JOIN oocql_t ON oocq001 = oocql001 AND oocq002 = oocql002 AND oocql003 = '",g_lang,"' ",
                        "WHERE oocqent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("oocq_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
   
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P" OR
      ps_page_action = "N" OR
      ps_page_action = "L" THEN
      LET g_page_action = ps_page_action
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - 1
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + 1
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod 1) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - 1
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod 1) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - 1
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
         END IF
         
   END CASE
  
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照oocq001,oocq002 Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT oocqstus,oocq001,oocq002,DENSE_RANK() OVER(ORDER BY oocq001, 
          oocq002 ",g_order,") AS RANK ",
                        " FROM oocq_t ",
                              " ",
                              " LEFT JOIN xrac_t ON xracent = oocqent AND oocq001 = xrac001 AND oocq002 = xrac002 ",
 
 
                              " LEFT JOIN oocql_t ON oocq001 = oocql001 AND oocq002 = oocql002 AND oocql003 = '",g_lang,"' ",
                              " ",
                       " ",
                       " WHERE oocqent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2, cl_sql_add_filter("oocq_t")
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT oocqstus,oocq001,oocq002,DENSE_RANK() OVER(ORDER BY oocq001, 
          oocq002 ",g_order,") AS RANK ",
                       " FROM oocq_t ",
                            "  ",
                            "  LEFT JOIN oocql_t ON oocq001 = oocql001 AND oocq002 = oocql002 AND oocql003 = '",g_lang,"' ",
                       " WHERE oocqent = '" ||g_enterprise|| "' AND ", g_wc, cl_sql_add_filter("oocq_t")
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT oocqstus,oocq001,oocq002 FROM (",l_sql_rank,") WHERE ",
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
               
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
               
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_oocq001,g_browser[g_cnt].b_oocq002 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="axri012.browser_search" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION axri012_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY oocq001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL axri012_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axri012.construct" ver="4" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION axri012_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_oocq_m.* TO NULL
   CALL g_xrac_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON oocq002,oocq001,oocq003,oocql004,oocq004,oocqstus,oocqownid,oocqowndp, 
          oocqcrtid,oocqcrtdp,oocqcrtdt,oocqmodid,oocqmoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<oocqownid>>----
         #ON ACTION controlp INFIELD oocqownid
         #   CALL q_common('oocq_t','oocqownid',TRUE,FALSE,g_oocq_m.oocqownid) RETURNING ls_return
         #   DISPLAY ls_return TO oocqownid
         #   NEXT FIELD oocqownid  
         #
         ##----<<oocqowndp>>----
         #ON ACTION controlp INFIELD oocqowndp
         #   CALL q_common('oocq_t','oocqowndp',TRUE,FALSE,g_oocq_m.oocqowndp) RETURNING ls_return
         #   DISPLAY ls_return TO oocqowndp
         #   NEXT FIELD oocqowndp
         #
         ##----<<oocqcrtid>>----
         #ON ACTION controlp INFIELD oocqcrtid
         #   CALL q_common('oocq_t','oocqcrtid',TRUE,FALSE,g_oocq_m.oocqcrtid) RETURNING ls_return
         #   DISPLAY ls_return TO oocqcrtid
         #   NEXT FIELD oocqcrtid
         #
         ##----<<oocqcrtdp>>----
         #ON ACTION controlp INFIELD oocqcrtdp
         #   CALL q_common('oocq_t','oocqcrtdp',TRUE,FALSE,g_oocq_m.oocqcrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO oocqcrtdp
         #   NEXT FIELD oocqcrtdp
         #
         ##----<<oocqmodid>>----
         #ON ACTION controlp INFIELD oocqmodid
         #   CALL q_common('oocq_t','oocqmodid',TRUE,FALSE,g_oocq_m.oocqmodid) RETURNING ls_return
         #   DISPLAY ls_return TO oocqmodid
         #   NEXT FIELD oocqmodid
         #
         ##----<<oocqcnfid>>----
         ##ON ACTION controlp INFIELD oocqcnfid
         ##   CALL q_common('oocq_t','oocqcnfid',TRUE,FALSE,g_oocq_m.oocqcnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO oocqcnfid
         ##   NEXT FIELD oocqcnfid
         #
         ##----<<oocqpstid>>----
         ##ON ACTION controlp INFIELD oocqpstid
         ##   CALL q_common('oocq_t','oocqpstid',TRUE,FALSE,g_oocq_m.oocqpstid) RETURNING ls_return
         ##   DISPLAY ls_return TO oocqpstid
         ##   NEXT FIELD oocqpstid
         
         ##----<<oocqcrtdt>>----
         AFTER FIELD oocqcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<oocqmoddt>>----
         AFTER FIELD oocqmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<oocqcnfdt>>----
         #AFTER FIELD oocqcnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<oocqpstdt>>----
         #AFTER FIELD oocqpstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
         #---------------------------<  Master  >---------------------------
         #----<<oocq002>>----
         #Ctrlp:construct.c.oocq002
         ON ACTION controlp INFIELD oocq002
            #add-point:ON ACTION controlp INFIELD oocq002
            {<point name="construct.c.oocq002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocq002
            #add-point:BEFORE FIELD oocq002
            {<point name="construct.b.oocq002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocq002
            
            #add-point:AFTER FIELD oocq002
            {<point name="construct.a.oocq002" />}
            #END add-point
            
 
         #----<<oocq001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocq001
            #add-point:BEFORE FIELD oocq001
            {<point name="construct.b.oocq001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocq001
            
            #add-point:AFTER FIELD oocq001
            {<point name="construct.a.oocq001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.oocq001
         ON ACTION controlp INFIELD oocq001
            #add-point:ON ACTION controlp INFIELD oocq001
            {<point name="construct.c.oocq001" />}
            #END add-point
 
         #----<<oocq003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocq003
            #add-point:BEFORE FIELD oocq003
            {<point name="construct.b.oocq003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocq003
            
            #add-point:AFTER FIELD oocq003
            {<point name="construct.a.oocq003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.oocq003
         ON ACTION controlp INFIELD oocq003
            #add-point:ON ACTION controlp INFIELD oocq003
            {<point name="construct.c.oocq003" />}
            #END add-point
 
         #----<<oocql004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocql004
            #add-point:BEFORE FIELD oocql004
            {<point name="construct.b.oocql004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocql004
            
            #add-point:AFTER FIELD oocql004
            {<point name="construct.a.oocql004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.oocql004
         ON ACTION controlp INFIELD oocql004
            #add-point:ON ACTION controlp INFIELD oocql004
            {<point name="construct.c.oocql004" />}
            #END add-point
 
         #----<<oocq004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocq004
            #add-point:BEFORE FIELD oocq004
            {<point name="construct.b.oocq004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocq004
            
            #add-point:AFTER FIELD oocq004
            {<point name="construct.a.oocq004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.oocq004
         ON ACTION controlp INFIELD oocq004
            #add-point:ON ACTION controlp INFIELD oocq004
            {<point name="construct.c.oocq004" />}
            #END add-point
 
         #----<<oocqstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocqstus
            #add-point:BEFORE FIELD oocqstus
            {<point name="construct.b.oocqstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocqstus
            
            #add-point:AFTER FIELD oocqstus
            {<point name="construct.a.oocqstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.oocqstus
         ON ACTION controlp INFIELD oocqstus
            #add-point:ON ACTION controlp INFIELD oocqstus
            {<point name="construct.c.oocqstus" />}
            #END add-point
 
         #----<<oocqownid>>----
         #Ctrlp:construct.c.oocqownid
         ON ACTION controlp INFIELD oocqownid
            #add-point:ON ACTION controlp INFIELD oocqownid
            {<point name="construct.c.oocqownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocqownid
            #add-point:BEFORE FIELD oocqownid
            {<point name="construct.b.oocqownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocqownid
            
            #add-point:AFTER FIELD oocqownid
            {<point name="construct.a.oocqownid" />}
            #END add-point
            
 
         #----<<oocqownid_desc>>----
         #----<<oocqowndp>>----
         #Ctrlp:construct.c.oocqowndp
         ON ACTION controlp INFIELD oocqowndp
            #add-point:ON ACTION controlp INFIELD oocqowndp
            {<point name="construct.c.oocqowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocqowndp
            #add-point:BEFORE FIELD oocqowndp
            {<point name="construct.b.oocqowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocqowndp
            
            #add-point:AFTER FIELD oocqowndp
            {<point name="construct.a.oocqowndp" />}
            #END add-point
            
 
         #----<<oocqowndp_desc>>----
         #----<<oocqcrtid>>----
         #Ctrlp:construct.c.oocqcrtid
         ON ACTION controlp INFIELD oocqcrtid
            #add-point:ON ACTION controlp INFIELD oocqcrtid
            {<point name="construct.c.oocqcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocqcrtid
            #add-point:BEFORE FIELD oocqcrtid
            {<point name="construct.b.oocqcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocqcrtid
            
            #add-point:AFTER FIELD oocqcrtid
            {<point name="construct.a.oocqcrtid" />}
            #END add-point
            
 
         #----<<oocqcrtid_desc>>----
         #----<<oocqcrtdp>>----
         #Ctrlp:construct.c.oocqcrtdp
         ON ACTION controlp INFIELD oocqcrtdp
            #add-point:ON ACTION controlp INFIELD oocqcrtdp
            {<point name="construct.c.oocqcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocqcrtdp
            #add-point:BEFORE FIELD oocqcrtdp
            {<point name="construct.b.oocqcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocqcrtdp
            
            #add-point:AFTER FIELD oocqcrtdp
            {<point name="construct.a.oocqcrtdp" />}
            #END add-point
            
 
         #----<<oocqcrtdp_desc>>----
         #----<<oocqcrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocqcrtdt
            #add-point:BEFORE FIELD oocqcrtdt
            {<point name="construct.b.oocqcrtdt" />}
            #END add-point
 
         #----<<oocqmodid>>----
         #Ctrlp:construct.c.oocqmodid
         ON ACTION controlp INFIELD oocqmodid
            #add-point:ON ACTION controlp INFIELD oocqmodid
            {<point name="construct.c.oocqmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD oocqmodid
            #add-point:BEFORE FIELD oocqmodid
            {<point name="construct.b.oocqmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocqmodid
            
            #add-point:AFTER FIELD oocqmodid
            {<point name="construct.a.oocqmodid" />}
            #END add-point
            
 
         #----<<oocqmodid_desc>>----
         #----<<oocqmoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocqmoddt
            #add-point:BEFORE FIELD oocqmoddt
            {<point name="construct.b.oocqmoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON xrac003,xrac004,xrac005,xrac006,xrac007,xrac008
           FROM s_detail1[1].xrac003,s_detail1[1].xrac004,s_detail1[1].xrac005,s_detail1[1].xrac006, 
               s_detail1[1].xrac007,s_detail1[1].xrac008
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<xrac003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrac003
            #add-point:BEFORE FIELD xrac003
            {<point name="construct.b.page1.xrac003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xrac003
            
            #add-point:AFTER FIELD xrac003
            {<point name="construct.a.page1.xrac003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xrac003
         ON ACTION controlp INFIELD xrac003
            #add-point:ON ACTION controlp INFIELD xrac003
            {<point name="construct.c.page1.xrac003" />}
            #END add-point
 
         #----<<xrac004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrac004
            #add-point:BEFORE FIELD xrac004
            {<point name="construct.b.page1.xrac004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xrac004
            
            #add-point:AFTER FIELD xrac004
            {<point name="construct.a.page1.xrac004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xrac004
         ON ACTION controlp INFIELD xrac004
            #add-point:ON ACTION controlp INFIELD xrac004
            {<point name="construct.c.page1.xrac004" />}
            #END add-point
 
         #----<<xrac005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrac005
            #add-point:BEFORE FIELD xrac005
            {<point name="construct.b.page1.xrac005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xrac005
            
            #add-point:AFTER FIELD xrac005
            {<point name="construct.a.page1.xrac005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xrac005
         ON ACTION controlp INFIELD xrac005
            #add-point:ON ACTION controlp INFIELD xrac005
            {<point name="construct.c.page1.xrac005" />}
            #END add-point
 
         #----<<xrac006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrac006
            #add-point:BEFORE FIELD xrac006
            {<point name="construct.b.page1.xrac006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xrac006
            
            #add-point:AFTER FIELD xrac006
            {<point name="construct.a.page1.xrac006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xrac006
         ON ACTION controlp INFIELD xrac006
            #add-point:ON ACTION controlp INFIELD xrac006
            {<point name="construct.c.page1.xrac006" />}
            #END add-point
 
         #----<<xrac007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrac007
            #add-point:BEFORE FIELD xrac007
            {<point name="construct.b.page1.xrac007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xrac007
            
            #add-point:AFTER FIELD xrac007
            {<point name="construct.a.page1.xrac007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xrac007
         ON ACTION controlp INFIELD xrac007
            #add-point:ON ACTION controlp INFIELD xrac007
            {<point name="construct.c.page1.xrac007" />}
            #END add-point
 
         #----<<xrac008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrac008
            #add-point:BEFORE FIELD xrac008
            {<point name="construct.b.page1.xrac008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xrac008
            
            #add-point:AFTER FIELD xrac008
            {<point name="construct.a.page1.xrac008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.xrac008
         ON ACTION controlp INFIELD xrac008
            #add-point:ON ACTION controlp INFIELD xrac008
            {<point name="construct.c.page1.xrac008" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="axri012.default_search" ver="4" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION axri012_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " oocq001 = '", g_argv[1], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " oocq002 = '", g_argv[02], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="axri012.delete" ver="7" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION axri012_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_oocq_m.oocq001 IS NULL
   OR g_oocq_m.oocq002 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE axri012_master_referesh USING g_oocq_m.oocq001,g_oocq_m.oocq002 INTO g_oocq_m.oocq002,g_oocq_m.oocq001, 
       g_oocq_m.oocq003,g_oocq_m.oocq004,g_oocq_m.oocqstus,g_oocq_m.oocqownid,g_oocq_m.oocqowndp,g_oocq_m.oocqcrtid, 
       g_oocq_m.oocqcrtdp,g_oocq_m.oocqcrtdt,g_oocq_m.oocqmodid,g_oocq_m.oocqmoddt
   
   LET g_master_multi_table_t.oocql001 = g_oocq_m.oocq001
LET g_master_multi_table_t.oocql002 = g_oocq_m.oocq002
LET g_master_multi_table_t.oocql004 = g_oocq_m.oocql004
 
 
   CALL axri012_show()
   
   CALL s_transaction_begin()
 
   OPEN axri012_cl USING g_enterprise,g_oocq_m.oocq001
                                                       ,g_oocq_m.oocq002
 
   IF STATUS THEN
      CALL cl_err("OPEN axri012_cl:", STATUS, 1)
      CLOSE axri012_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH axri012_cl INTO g_oocq_m.oocq002,g_oocq_m.oocq001,g_oocq_m.oocq003,g_oocq_m.oocql004,g_oocq_m.oocq004, 
       g_oocq_m.oocqstus,g_oocq_m.oocqownid,g_oocq_m.oocqownid_desc,g_oocq_m.oocqowndp,g_oocq_m.oocqowndp_desc, 
       g_oocq_m.oocqcrtid,g_oocq_m.oocqcrtid_desc,g_oocq_m.oocqcrtdp,g_oocq_m.oocqcrtdp_desc,g_oocq_m.oocqcrtdt, 
       g_oocq_m.oocqmodid,g_oocq_m.oocqmodid_desc,g_oocq_m.oocqmoddt              #鎖住將被更改或取消的資料 

   IF SQLCA.sqlcode THEN
      CALL cl_err(g_oocq_m.oocq001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL axri012_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_oocq001_t = g_oocq_m.oocq001
      LET g_oocq002_t = g_oocq_m.oocq002
 
 
      DELETE FROM oocq_t
       WHERE oocqent = g_enterprise AND oocq001 = g_oocq_m.oocq001
         AND oocq002 = g_oocq_m.oocq002
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_oocq_m.oocq001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM xrac_t
       WHERE xracent = g_enterprise AND xrac001 = g_oocq_m.oocq001
         AND xrac002 = g_oocq_m.oocq002
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("xrac_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_xrac_d.clear() 
 
     
      #CALL axri012_ui_browser_refresh()  
      CALL axri012_ui_headershow()  
      CALL axri012_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL axri012_browser_fill("")
         CALL axri012_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL axri012_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.oocql001
   LET l_field_keys[01] = 'oocql001'
   LET l_var_keys_bak[02] = g_master_multi_table_t.oocql002
   LET l_field_keys[02] = 'oocql002'
   LET l_var_keys_bak[03] = g_dlang
   LET l_field_keys[03] = 'oocql003'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'oocql_t')
 
      
      #單身多語言刪除
      
 
 
  
 
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE axri012_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_oocq_m.oocq001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="axri012.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION axri012_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM xrac_t
       WHERE xracent = g_enterprise AND
         xrac001 = ps_keys_bak[1] AND xrac002 = ps_keys_bak[2] AND xrac003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axri012.description" ver="10" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000273
#+ 
#+ Filename...: axri012
#+ Description: 多帳期設定作業
#+ Creator....: 02299(2013/07/22)
#+ Modifier...: 02299(2013/07/29)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="axri012.detail_reproduce" ver="3" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION axri012_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE xrac_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE axri012_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE axri012_detail AS ",
                "SELECT * FROM xrac_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO axri012_detail SELECT * FROM xrac_t 
                                         WHERE xracent = g_enterprise AND xrac001 = g_oocq001_t
                                         AND xrac002 = g_oocq002_t
 
   
   #將key修正為調整後   
   UPDATE axri012_detail 
      #更新key欄位
      SET xrac001 = g_oocq_m.oocq001
          , xrac002 = g_oocq_m.oocq002
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO xrac_t SELECT * FROM axri012_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE axri012_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_oocq001_t = g_oocq_m.oocq001
   LET g_oocq002_t = g_oocq_m.oocq002
 
   
   DROP TABLE axri012_detail
   
END FUNCTION
]]>
  </section>
  <section id="axri012.detail_show" ver="3" status="" src="s">
    <![CDATA[#+ 單身reference detail_show
PRIVATE FUNCTION axri012_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axri012.fetch" ver="5" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION axri012_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   CALL axri012_browser_fill(p_flag)
   
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_oocq_m.oocq001 = g_browser[g_current_idx].b_oocq001
   LET g_oocq_m.oocq002 = g_browser[g_current_idx].b_oocq002
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE axri012_master_referesh USING g_oocq_m.oocq001,g_oocq_m.oocq002 INTO g_oocq_m.oocq002,g_oocq_m.oocq001, 
       g_oocq_m.oocq003,g_oocq_m.oocq004,g_oocq_m.oocqstus,g_oocq_m.oocqownid,g_oocq_m.oocqowndp,g_oocq_m.oocqcrtid, 
       g_oocq_m.oocqcrtdp,g_oocq_m.oocqcrtdt,g_oocq_m.oocqmodid,g_oocq_m.oocqmoddt
   IF SQLCA.sqlcode THEN
      CALL cl_err("oocq_t",SQLCA.sqlcode,1)
      INITIALIZE g_oocq_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
  
   #重新顯示   
   CALL axri012_show()
 
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="axri012.fill_chk" ver="3" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION axri012_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="axri012.filter" ver="1" status="" src="s">
    <![CDATA[PRIVATE FUNCTION axri012_filter()
 
 
 
 
 
 
 
 
      
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
 
 
   
 
 
 
END FUNCTION
]]>
  </section>
  <section id="axri012.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION axri012_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="axri012.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
]]>
  </section>
  <section id="axri012.global" ver="4" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
    
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_oocq_m        RECORD
       oocq002 LIKE oocq_t.oocq002, 
   oocq001 LIKE oocq_t.oocq001, 
   oocq003 LIKE oocq_t.oocq003, 
   oocql004 LIKE oocql_t.oocql004, 
   oocq004 LIKE oocq_t.oocq004, 
   oocqstus LIKE oocq_t.oocqstus, 
   oocqownid LIKE oocq_t.oocqownid, 
   oocqownid_desc LIKE type_t.chr80, 
   oocqowndp LIKE oocq_t.oocqowndp, 
   oocqowndp_desc LIKE type_t.chr80, 
   oocqcrtid LIKE oocq_t.oocqcrtid, 
   oocqcrtid_desc LIKE type_t.chr80, 
   oocqcrtdp LIKE oocq_t.oocqcrtdp, 
   oocqcrtdp_desc LIKE type_t.chr80, 
   oocqcrtdt DATETIME YEAR TO SECOND, 
   oocqmodid LIKE oocq_t.oocqmodid, 
   oocqmodid_desc LIKE type_t.chr80, 
   oocqmoddt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_xrac_d        RECORD
       xrac003 LIKE xrac_t.xrac003, 
   xrac004 LIKE xrac_t.xrac004, 
   xrac005 LIKE xrac_t.xrac005, 
   xrac006 LIKE xrac_t.xrac006, 
   xrac007 LIKE xrac_t.xrac007, 
   xrac008 LIKE xrac_t.xrac008
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_oocq_m          type_g_oocq_m
DEFINE g_oocq_m_t        type_g_oocq_m
 
   DEFINE g_oocq002_t LIKE oocq_t.oocq002
DEFINE g_oocq001_t LIKE oocq_t.oocq001
 
 
DEFINE g_xrac_d          DYNAMIC ARRAY OF type_g_xrac_d
DEFINE g_xrac_d_t        type_g_xrac_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_oocq001 LIKE oocq_t.oocq001,
      b_oocq002 LIKE oocq_t.oocq002
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_oocq001 LIKE oocq_t.oocq001,
      b_oocq002 LIKE oocq_t.oocq002
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      oocql001 LIKE oocql_t.oocql001,
      oocql002 LIKE oocql_t.oocql002,
      oocql004 LIKE oocql_t.oocql004
      END RECORD
#無單身append欄位定義
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="axri012.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION axri012_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_xrac_d.getLength() THEN
         LET g_detail_idx = g_xrac_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_xrac_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_xrac_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="axri012.init" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION axri012_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('oocqstus','17','N,Y')
 
      CALL cl_set_combo_scc('xrac007','8310') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL axri012_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="axri012.input" ver="5" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION axri012_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT xrac003,xrac004,xrac005,xrac006,xrac007,xrac008 FROM xrac_t WHERE xracent=?  
       AND xrac001=? AND xrac002=? AND xrac003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE axri012_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL axri012_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL axri012_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_oocq_m.oocq002,g_oocq_m.oocql004,g_oocq_m.oocq004,g_oocq_m.oocqstus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="axri012.input.body" ver="3" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_xrac_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_axri012_1
            LET g_action_choice="open_axri012_1"
            IF cl_auth_chk_act("open_axri012_1") THEN
               
               #add-point:ON ACTION open_axri012_1
               {<point name="input.detail_input.page1.open_axri012_1" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_xrac_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL axri012_b_fill()
            LET g_rec_b = g_xrac_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point              
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN axri012_cl USING g_enterprise,g_oocq_m.oocq001
                                                                ,g_oocq_m.oocq002
 
            IF STATUS THEN
               CALL cl_err("OPEN axri012_cl:", STATUS, 1)
               CLOSE axri012_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_xrac_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_xrac_d[l_ac].xrac003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_xrac_d_t.* = g_xrac_d[l_ac].*  #BACKUP
               CALL axri012_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL axri012_set_no_entry_b(l_cmd)
               IF NOT axri012_lock_b("xrac_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH axri012_bcl INTO g_xrac_d[l_ac].xrac003,g_xrac_d[l_ac].xrac004,g_xrac_d[l_ac].xrac005, 
                      g_xrac_d[l_ac].xrac006,g_xrac_d[l_ac].xrac007,g_xrac_d[l_ac].xrac008
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_xrac_d_t.xrac003,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL axri012_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_xrac_d[l_ac].* TO NULL 
                  LET g_xrac_d[l_ac].xrac004 = "0"
      LET g_xrac_d[l_ac].xrac005 = "0"
      LET g_xrac_d[l_ac].xrac006 = "0"
      LET g_xrac_d[l_ac].xrac007 = "10"
 
 
            LET g_xrac_d_t.* = g_xrac_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL axri012_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL axri012_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_xrac_d[li_reproduce_target].* = g_xrac_d[li_reproduce].*
 
               LET g_xrac_d[li_reproduce_target].xrac003 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM xrac_t 
             WHERE xracent = g_enterprise AND xrac001 = g_oocq_m.oocq001
               AND xrac002 = g_oocq_m.oocq002
 
               AND xrac003 = g_xrac_d[l_ac].xrac003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oocq_m.oocq001
               LET gs_keys[2] = g_oocq_m.oocq002
               LET gs_keys[3] = g_xrac_d[g_detail_idx].xrac003
               CALL axri012_insert_b('xrac_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_xrac_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("xrac_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL axri012_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_xrac_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_xrac_d.deleteElement(l_ac)
               NEXT FIELD xrac003
            END IF
         
            IF g_xrac_d[l_ac].xrac003 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM xrac_t
                WHERE xracent = g_enterprise AND xrac001 = g_oocq_m.oocq001 AND
                                          xrac002 = g_oocq_m.oocq002 AND
 
                      xrac003 = g_xrac_d_t.xrac003
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("xrac_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE axri012_bcl
               LET l_count = g_xrac_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oocq_m.oocq001
               LET gs_keys[2] = g_oocq_m.oocq002
               LET gs_keys[3] = g_xrac_d[g_detail_idx].xrac003
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL axri012_delete_b('xrac_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<xrac003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrac003
            #add-point:BEFORE FIELD xrac003
            {<point name="input.b.page1.xrac003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xrac003
            
            #add-point:AFTER FIELD xrac003
            {<point name="input.a.page1.xrac003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xrac003
            #add-point:ON CHANGE xrac003
            {<point name="input.g.page1.xrac003" />}
            #END add-point
 
         #----<<xrac004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrac004
            #add-point:BEFORE FIELD xrac004
            {<point name="input.b.page1.xrac004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xrac004
            
            #add-point:AFTER FIELD xrac004
            {<point name="input.a.page1.xrac004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xrac004
            #add-point:ON CHANGE xrac004
            {<point name="input.g.page1.xrac004" />}
            #END add-point
 
         #----<<xrac005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrac005
            #add-point:BEFORE FIELD xrac005
            {<point name="input.b.page1.xrac005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xrac005
            
            #add-point:AFTER FIELD xrac005
            {<point name="input.a.page1.xrac005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xrac005
            #add-point:ON CHANGE xrac005
            {<point name="input.g.page1.xrac005" />}
            #END add-point
 
         #----<<xrac006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrac006
            #add-point:BEFORE FIELD xrac006
            {<point name="input.b.page1.xrac006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xrac006
            
            #add-point:AFTER FIELD xrac006
            {<point name="input.a.page1.xrac006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xrac006
            #add-point:ON CHANGE xrac006
            {<point name="input.g.page1.xrac006" />}
            #END add-point
 
         #----<<xrac007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrac007
            #add-point:BEFORE FIELD xrac007
            {<point name="input.b.page1.xrac007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xrac007
            
            #add-point:AFTER FIELD xrac007
            {<point name="input.a.page1.xrac007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xrac007
            #add-point:ON CHANGE xrac007
            {<point name="input.g.page1.xrac007" />}
            #END add-point
 
         #----<<xrac008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD xrac008
            #add-point:BEFORE FIELD xrac008
            {<point name="input.b.page1.xrac008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD xrac008
            
            #add-point:AFTER FIELD xrac008
            {<point name="input.a.page1.xrac008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE xrac008
            #add-point:ON CHANGE xrac008
            {<point name="input.g.page1.xrac008" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<xrac003>>----
         #Ctrlp:input.c.page1.xrac003
         ON ACTION controlp INFIELD xrac003
            #add-point:ON ACTION controlp INFIELD xrac003
            {<point name="input.c.page1.xrac003" />}
            #END add-point
 
         #----<<xrac004>>----
         #Ctrlp:input.c.page1.xrac004
         ON ACTION controlp INFIELD xrac004
            #add-point:ON ACTION controlp INFIELD xrac004
            {<point name="input.c.page1.xrac004" />}
            #END add-point
 
         #----<<xrac005>>----
         #Ctrlp:input.c.page1.xrac005
         ON ACTION controlp INFIELD xrac005
            #add-point:ON ACTION controlp INFIELD xrac005
            {<point name="input.c.page1.xrac005" />}
            #END add-point
 
         #----<<xrac006>>----
         #Ctrlp:input.c.page1.xrac006
         ON ACTION controlp INFIELD xrac006
            #add-point:ON ACTION controlp INFIELD xrac006
            {<point name="input.c.page1.xrac006" />}
            #END add-point
 
         #----<<xrac007>>----
         #Ctrlp:input.c.page1.xrac007
         ON ACTION controlp INFIELD xrac007
            #add-point:ON ACTION controlp INFIELD xrac007
            {<point name="input.c.page1.xrac007" />}
            #END add-point
 
         #----<<xrac008>>----
         #Ctrlp:input.c.page1.xrac008
         ON ACTION controlp INFIELD xrac008
            #add-point:ON ACTION controlp INFIELD xrac008
            {<point name="input.c.page1.xrac008" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_xrac_d[l_ac].* = g_xrac_d_t.*
               CLOSE axri012_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_xrac_d[l_ac].xrac003,-263,1)
               LET g_xrac_d[l_ac].* = g_xrac_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE xrac_t SET (xrac001,xrac002,xrac003,xrac004,xrac005,xrac006,xrac007,xrac008) = (g_oocq_m.oocq001, 
                   g_oocq_m.oocq002,g_xrac_d[l_ac].xrac003,g_xrac_d[l_ac].xrac004,g_xrac_d[l_ac].xrac005, 
                   g_xrac_d[l_ac].xrac006,g_xrac_d[l_ac].xrac007,g_xrac_d[l_ac].xrac008)
                WHERE xracent = g_enterprise AND xrac001 = g_oocq_m.oocq001 
                  AND xrac002 = g_oocq_m.oocq002 
 
                  AND xrac003 = g_xrac_d_t.xrac003 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("xrac_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_xrac_d[l_ac].* = g_xrac_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("xrac_t",SQLCA.sqlcode,1)
                     LET g_xrac_d[l_ac].* = g_xrac_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_oocq_m.oocq001
               LET gs_keys_bak[1] = g_oocq001_t
               LET gs_keys[2] = g_oocq_m.oocq002
               LET gs_keys_bak[2] = g_oocq002_t
               LET gs_keys[3] = g_xrac_d[g_detail_idx].xrac003
               LET gs_keys_bak[3] = g_xrac_d_t.xrac003
               CALL axri012_update_b('xrac_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL axri012_unlock_b("xrac_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_xrac_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_xrac_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="axri012.input.head" ver="6" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_oocq_m.oocq002,g_oocq_m.oocql004,g_oocq_m.oocq004,g_oocq_m.oocqstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_axri012_1
            LET g_action_choice="open_axri012_1"
            IF cl_auth_chk_act("open_axri012_1") THEN
               
               #add-point:ON ACTION open_axri012_1
               {<point name="input.master_input.open_axri012_1" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF         
            LET g_master_multi_table_t.oocql001 = g_oocq_m.oocq001
LET g_master_multi_table_t.oocql002 = g_oocq_m.oocq002
LET g_master_multi_table_t.oocql004 = g_oocq_m.oocql004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.oocql001 = ''
LET g_master_multi_table_t.oocql002 = ''
LET g_master_multi_table_t.oocql004 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
         #---------------------------<  Master  >---------------------------
         #----<<oocq002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocq002
            #add-point:BEFORE FIELD oocq002
            {<point name="input.b.oocq002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocq002
            
            #add-point:AFTER FIELD oocq002
            {<point name="input.a.oocq002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocq002
            #add-point:ON CHANGE oocq002
            {<point name="input.g.oocq002" />}
            #END add-point
 
         #----<<oocq001>>----
         #----<<oocq003>>----
         #----<<oocql004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocql004
            #add-point:BEFORE FIELD oocql004
            {<point name="input.b.oocql004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocql004
            
            #add-point:AFTER FIELD oocql004
            {<point name="input.a.oocql004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocql004
            #add-point:ON CHANGE oocql004
            {<point name="input.g.oocql004" />}
            #END add-point
 
         #----<<oocq004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocq004
            #add-point:BEFORE FIELD oocq004
            {<point name="input.b.oocq004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocq004
            
            #add-point:AFTER FIELD oocq004
            {<point name="input.a.oocq004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocq004
            #add-point:ON CHANGE oocq004
            {<point name="input.g.oocq004" />}
            #END add-point
 
         #----<<oocqstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD oocqstus
            #add-point:BEFORE FIELD oocqstus
            {<point name="input.b.oocqstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oocqstus
            
            #add-point:AFTER FIELD oocqstus
            {<point name="input.a.oocqstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE oocqstus
            #add-point:ON CHANGE oocqstus
            {<point name="input.g.oocqstus" />}
            #END add-point
 
         #----<<oocqownid>>----
         #----<<oocqownid_desc>>----
         #----<<oocqowndp>>----
         #----<<oocqowndp_desc>>----
         #----<<oocqcrtid>>----
         #----<<oocqcrtid_desc>>----
         #----<<oocqcrtdp>>----
         #----<<oocqcrtdp_desc>>----
         #----<<oocqcrtdt>>----
         #----<<oocqmodid>>----
         #----<<oocqmodid_desc>>----
         #----<<oocqmoddt>>----
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<oocq002>>----
         #Ctrlp:input.c.oocq002
         ON ACTION controlp INFIELD oocq002
            #add-point:ON ACTION controlp INFIELD oocq002
            {<point name="input.c.oocq002" />}
            #END add-point
 
         #----<<oocq001>>----
         #----<<oocq003>>----
         #----<<oocql004>>----
         #Ctrlp:input.c.oocql004
         ON ACTION controlp INFIELD oocql004
            #add-point:ON ACTION controlp INFIELD oocql004
            {<point name="input.c.oocql004" />}
            #END add-point
 
         #----<<oocq004>>----
         #Ctrlp:input.c.oocq004
         ON ACTION controlp INFIELD oocq004
            #add-point:ON ACTION controlp INFIELD oocq004
            {<point name="input.c.oocq004" />}
            #END add-point
 
         #----<<oocqstus>>----
         #Ctrlp:input.c.oocqstus
         ON ACTION controlp INFIELD oocqstus
            #add-point:ON ACTION controlp INFIELD oocqstus
            {<point name="input.c.oocqstus" />}
            #END add-point
 
         #----<<oocqownid>>----
         #----<<oocqownid_desc>>----
         #----<<oocqowndp>>----
         #----<<oocqowndp_desc>>----
         #----<<oocqcrtid>>----
         #----<<oocqcrtid_desc>>----
         #----<<oocqcrtdp>>----
         #----<<oocqcrtdp_desc>>----
         #----<<oocqcrtdt>>----
         #----<<oocqmodid>>----
         #----<<oocqmodid_desc>>----
         #----<<oocqmoddt>>----
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_oocq_m.oocq001             
                            ,g_oocq_m.oocq002   
 
 
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                   
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO oocq_t (oocqent,oocq002,oocq001,oocq003,oocq004,oocqstus,oocqownid,oocqowndp, 
                   oocqcrtid,oocqcrtdp,oocqcrtdt)
               VALUES (g_enterprise,g_oocq_m.oocq002,g_oocq_m.oocq001,g_oocq_m.oocq003,g_oocq_m.oocq004, 
                   g_oocq_m.oocqstus,g_oocq_m.oocqownid,g_oocq_m.oocqowndp,g_oocq_m.oocqcrtid,g_oocq_m.oocqcrtdp, 
                   g_oocq_m.oocqcrtdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_oocq_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_oocq_m.oocq001 = g_master_multi_table_t.oocql001 AND
         g_oocq_m.oocq002 = g_master_multi_table_t.oocql002 AND
         g_oocq_m.oocql004 = g_master_multi_table_t.oocql004  THEN
         ELSE 
            LET l_var_keys[01] = g_oocq_m.oocq001
            LET l_field_keys[01] = 'oocql001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.oocql001
            LET l_var_keys[02] = g_oocq_m.oocq002
            LET l_field_keys[02] = 'oocql002'
            LET l_var_keys_bak[02] = g_master_multi_table_t.oocql002
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'oocql003'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_oocq_m.oocql004
            LET l_fields[01] = 'oocql004'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'oocqlent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'oocql_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL axri012_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE oocq_t SET (oocq002,oocq001,oocq003,oocq004,oocqstus,oocqownid,oocqowndp,oocqcrtid, 
                   oocqcrtdp,oocqcrtdt) = (g_oocq_m.oocq002,g_oocq_m.oocq001,g_oocq_m.oocq003,g_oocq_m.oocq004, 
                   g_oocq_m.oocqstus,g_oocq_m.oocqownid,g_oocq_m.oocqowndp,g_oocq_m.oocqcrtid,g_oocq_m.oocqcrtdp, 
                   g_oocq_m.oocqcrtdt)
                WHERE oocqent = g_enterprise AND oocq001 = g_oocq001_t
                  AND oocq002 = g_oocq002_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("oocq_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_oocq_m.oocq001 = g_master_multi_table_t.oocql001 AND
         g_oocq_m.oocq002 = g_master_multi_table_t.oocql002 AND
         g_oocq_m.oocql004 = g_master_multi_table_t.oocql004  THEN
         ELSE 
            LET l_var_keys[01] = g_oocq_m.oocq001
            LET l_field_keys[01] = 'oocql001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.oocql001
            LET l_var_keys[02] = g_oocq_m.oocq002
            LET l_field_keys[02] = 'oocql002'
            LET l_var_keys_bak[02] = g_master_multi_table_t.oocql002
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'oocql003'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_oocq_m.oocql004
            LET l_fields[01] = 'oocql004'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'oocqlent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'oocql_t')
         END IF 
 
               CALL s_transaction_end('Y','0')
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_oocq001_t = g_oocq_m.oocq001
            LET g_oocq002_t = g_oocq_m.oocq002
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="axri012.input.other" ver="3" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD oocq001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD xrac003
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="axri012.insert" ver="3" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION axri012_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_xrac_d.clear()   
 
 
   INITIALIZE g_oocq_m.* LIKE oocq_t.*             #DEFAULT 設定
   
   LET g_oocq001_t = NULL
   LET g_oocq002_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_oocq_m.oocqownid = g_user
      LET g_oocq_m.oocqowndp = g_dept
      LET g_oocq_m.oocqcrtid = g_user
      LET g_oocq_m.oocqcrtdp = g_dept 
      LET g_oocq_m.oocqcrtdt = cl_get_current()
      LET g_oocq_m.oocqmodid = ""
      LET g_oocq_m.oocqmoddt = ""
      LET g_oocq_m.oocqstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_oocq_m.oocq001 = "3114"
      LET g_oocq_m.oocq003 = "3114"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL axri012_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_oocq_m.* = g_oocq_m_t.*
         CALL axri012_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_xrac_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1    
 
   LET g_oocq001_t = g_oocq_m.oocq001
   LET g_oocq002_t = g_oocq_m.oocq002
 
   
   LET g_wc = g_wc,  
              " OR ( oocqent = '" ||g_enterprise|| "' AND",
              " oocq001 = '", g_oocq_m.oocq001 CLIPPED, "' "
              ," AND oocq002 = '", g_oocq_m.oocq002 CLIPPED, "' "
 
              , ") "
   
   CLOSE axri012_cl
   
END FUNCTION
]]>
  </section>
  <section id="axri012.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION axri012_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO xrac_t
                  (xracent,
                   xrac001,xrac002,
                   xrac003
                   ,xrac004,xrac005,xrac006,xrac007,xrac008) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_xrac_d[g_detail_idx].xrac004,g_xrac_d[g_detail_idx].xrac005,g_xrac_d[g_detail_idx].xrac006, 
                       g_xrac_d[g_detail_idx].xrac007,g_xrac_d[g_detail_idx].xrac008)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("xrac_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="axri012.lock_b" ver="3" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION axri012_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL axri012_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "xrac_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN axri012_bcl USING g_enterprise,
                                       g_oocq_m.oocq001,g_oocq_m.oocq002,g_xrac_d[g_detail_idx].xrac003  
                                               
      IF SQLCA.sqlcode THEN
         CALL cl_err("axri012_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="axri012.main" ver="6" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("axr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT oocq002,oocq001,oocq003,'',oocq004,oocqstus,oocqownid,'',oocqowndp,'', 
       oocqcrtid,'',oocqcrtdp,'',oocqcrtdt,oocqmodid,'',oocqmoddt FROM oocq_t WHERE oocqent= ? AND oocq001=?  
       AND oocq002=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE axri012_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE oocq002,oocq001,oocq003,oocq004,oocqstus,oocqownid,oocqowndp,oocqcrtid, 
       oocqcrtdp,oocqcrtdt,oocqmodid,oocqmoddt",
               " FROM oocq_t",
               " WHERE oocqent = '" ||g_enterprise|| "' AND oocq001 = ? AND oocq002 = ?"
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE axri012_master_referesh FROM g_sql
 
 
 
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_axri012 WITH FORM cl_ap_formpath("axr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL axri012_init()   
 
      #進入選單 Menu (="N")
      CALL axri012_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_axri012
      
   END IF 
   
   CLOSE axri012_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="axri012.modify" ver="6" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION axri012_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_oocq_m.oocq001 IS NULL
   OR g_oocq_m.oocq002 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE axri012_master_referesh USING g_oocq_m.oocq001,g_oocq_m.oocq002 INTO g_oocq_m.oocq002,g_oocq_m.oocq001, 
       g_oocq_m.oocq003,g_oocq_m.oocq004,g_oocq_m.oocqstus,g_oocq_m.oocqownid,g_oocq_m.oocqowndp,g_oocq_m.oocqcrtid, 
       g_oocq_m.oocqcrtdp,g_oocq_m.oocqcrtdt,g_oocq_m.oocqmodid,g_oocq_m.oocqmoddt
 
   ERROR ""
  
   LET g_oocq001_t = g_oocq_m.oocq001
   LET g_oocq002_t = g_oocq_m.oocq002
 
   CALL s_transaction_begin()
   
   OPEN axri012_cl USING g_enterprise,g_oocq_m.oocq001
                                                       ,g_oocq_m.oocq002
 
   IF STATUS THEN
      CALL cl_err("OPEN axri012_cl:", STATUS, 1)
      CLOSE axri012_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH axri012_cl INTO g_oocq_m.oocq002,g_oocq_m.oocq001,g_oocq_m.oocq003,g_oocq_m.oocql004,g_oocq_m.oocq004, 
       g_oocq_m.oocqstus,g_oocq_m.oocqownid,g_oocq_m.oocqownid_desc,g_oocq_m.oocqowndp,g_oocq_m.oocqowndp_desc, 
       g_oocq_m.oocqcrtid,g_oocq_m.oocqcrtid_desc,g_oocq_m.oocqcrtdp,g_oocq_m.oocqcrtdp_desc,g_oocq_m.oocqcrtdt, 
       g_oocq_m.oocqmodid,g_oocq_m.oocqmodid_desc,g_oocq_m.oocqmoddt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_oocq_m.oocq001,SQLCA.sqlcode,0)
      CLOSE axri012_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL axri012_show()
   WHILE TRUE
      LET g_oocq001_t = g_oocq_m.oocq001
      LET g_oocq002_t = g_oocq_m.oocq002
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_oocq_m.oocqmodid = g_user 
LET g_oocq_m.oocqmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL axri012_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_oocq_m.* = g_oocq_m_t.*
         CALL axri012_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
     
      #若有modid跟moddt則進行update
      UPDATE oocq_t SET (oocqmodid,oocqmoddt) = (g_oocq_m.oocqmodid,g_oocq_m.oocqmoddt)
       WHERE oocqent = g_enterprise AND oocq001 = g_oocq001_t
         AND oocq002 = g_oocq002_t
 
 
      #若單頭key欄位有變更
      IF g_oocq_m.oocq001 != g_oocq001_t 
      OR g_oocq_m.oocq002 != g_oocq002_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE xrac_t SET xrac001 = g_oocq_m.oocq001
                                      ,xrac002 = g_oocq_m.oocq002
 
          WHERE xracent = g_enterprise AND xrac001 = g_oocq001_t
            AND xrac002 = g_oocq002_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("xrac_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("xrac_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_oocq_m.oocq001,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE axri012_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_oocq_m.oocq001,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="axri012.other_dialog" ver="1" status="" src="s">
    <![CDATA[ 
]]>
  </section>
  <section id="axri012.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="axri012.query" ver="3" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION axri012_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_xrac_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL axri012_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL axri012_browser_fill("")
      CALL axri012_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL axri012_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL axri012_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="axri012.reproduce" ver="4" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION axri012_reproduce()
   DEFINE l_newno     LIKE oocq_t.oocq001 
   DEFINE l_oldno     LIKE oocq_t.oocq001 
   DEFINE l_newno02     LIKE oocq_t.oocq002 
   DEFINE l_oldno02     LIKE oocq_t.oocq002 
 
   DEFINE l_master    RECORD LIKE oocq_t.*
   DEFINE l_detail    RECORD LIKE xrac_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   
   IF g_oocq_m.oocq001 IS NULL
   OR g_oocq_m.oocq002 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_oocq001_t = g_oocq_m.oocq001
   LET g_oocq002_t = g_oocq_m.oocq002
 
    
   LET g_oocq_m.oocq001 = ""
   LET g_oocq_m.oocq002 = ""
 
    
   CALL axri012_set_entry('a')
   CALL axri012_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_oocq_m.oocqownid = g_user
      LET g_oocq_m.oocqowndp = g_dept
      LET g_oocq_m.oocqcrtid = g_user
      LET g_oocq_m.oocqcrtdp = g_dept 
      LET g_oocq_m.oocqcrtdt = cl_get_current()
      LET g_oocq_m.oocqmodid = ""
      LET g_oocq_m.oocqmoddt = ""
      LET g_oocq_m.oocqstus = "N"
 
 
  
   CALL s_transaction_begin()
 
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL axri012_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1    
 
   LET g_wc = g_wc,  
              " OR (",
              " oocq001 = '", g_oocq_m.oocq001 CLIPPED, "' "
              ," AND oocq002 = '", g_oocq_m.oocq002 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axri012.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION axri012_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("oocq001,oocq002",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="axri012.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION axri012_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="axri012.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION axri012_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("oocq001,oocq002",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="axri012.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION axri012_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="axri012.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION axri012_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_oocq_m.oocq001
   LET g_pk_array[1].column = 'oocq001'
   LET g_pk_array[2].values = g_oocq_m.oocq002
   LET g_pk_array[2].column = 'oocq002'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="axri012.show" ver="4" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION axri012_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_oocq_m_t.* = g_oocq_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL axri012_b_fill() #單身填充
      CALL axri012_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_oocq_m.oocqownid_desc = cl_get_username(g_oocq_m.oocqownid)
      #LET g_oocq_m.oocqowndp_desc = cl_get_deptname(g_oocq_m.oocqowndp)
      #LET g_oocq_m.oocqcrtid_desc = cl_get_username(g_oocq_m.oocqcrtid)
      #LET g_oocq_m.oocqcrtdp_desc = cl_get_deptname(g_oocq_m.oocqcrtdp)
      #LET g_oocq_m.oocqmodid_desc = cl_get_username(g_oocq_m.oocqmodid)
      ##LET g_oocq_m.oocqcnfid_desc = cl_get_deptname(g_oocq_m.oocqcnfid)
      ##LET g_oocq_m.oocqpstid_desc = cl_get_deptname(g_oocq_m.oocqpstid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL axri012_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_oocq_m.oocq002,g_oocq_m.oocq001,g_oocq_m.oocq003,g_oocq_m.oocql004,g_oocq_m.oocq004, 
       g_oocq_m.oocqstus,g_oocq_m.oocqownid,g_oocq_m.oocqownid_desc,g_oocq_m.oocqowndp,g_oocq_m.oocqowndp_desc, 
       g_oocq_m.oocqcrtid,g_oocq_m.oocqcrtid_desc,g_oocq_m.oocqcrtdp,g_oocq_m.oocqcrtdp_desc,g_oocq_m.oocqcrtdt, 
       g_oocq_m.oocqmodid,g_oocq_m.oocqmodid_desc,g_oocq_m.oocqmoddt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_oocq_m.oocqstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_xrac_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL axri012_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="axri012.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="axri012.state_change" ver="3" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION axri012_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_oocq_m.oocq001 IS NULL
      OR g_oocq_m.oocq002 IS NULL
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_oocq_m.oocqstus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE oocq_t SET oocqstus = lc_state 
    WHERE oocqent = g_enterprise AND oocq001 = g_oocq_m.oocq001
      AND oocq002 = g_oocq_m.oocq002
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
      LET g_oocq_m.oocqstus = lc_state
      DISPLAY BY NAME g_oocq_m.oocqstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="axri012.ui_browser_refresh" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION axri012_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_oocq001 = g_oocq_m.oocq001 
         AND g_browser[l_i].b_oocq002 = g_oocq_m.oocq002 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="axri012.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION axri012_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="axri012.ui_dialog" ver="6" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION axri012_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL axri012_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL axri012_browser_fill("")
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_oocq001 = g_oocq001_t
               AND g_browser[li_idx].b_oocq002 = g_oocq002_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
 
 
               
      
         
        
         DISPLAY ARRAY g_xrac_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL axri012_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL axri012_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
 
         #+ 此段落由子樣板a43產生
         ON ACTION detail_qrystr
               MENU "" ATTRIBUTE(STYLE="popup")
                                 #+ 此段落由子樣板a43產生
               ON ACTION azzi600
                  LET g_action_choice="azzi600"
                  IF cl_auth_chk_act("azzi600") THEN
                     
                     #add-point:ON ACTION azzi600
                     {<point name="menu.detail_show.page1_sub.azzi600" />}
                     #END add-point
                     EXIT DIALOG
                  END IF
 
 
               END MENU
 
 
               #add-point:ON ACTION detail_qrystr
               {<point name="menu.detail_show.page1.detail_qrystr" />}
               #END add-point
 
 
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL axri012_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL axri012_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL axri012_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
            
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD xrac003
            END IF
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL axri012_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL axri012_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL axri012_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL axri012_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         
         
         ON ACTION first
            CALL axri012_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axri012_idx_chk()
            
         ON ACTION previous
            CALL axri012_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axri012_idx_chk()
            
         ON ACTION jump
            CALL axri012_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axri012_idx_chk()
            
         ON ACTION next
            CALL axri012_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axri012_idx_chk()
            
         ON ACTION last
            CALL axri012_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL axri012_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL axri012_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL axri012_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL axri012_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL axri012_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_aooi300
            LET g_action_choice="open_aooi300"
            IF cl_auth_chk_act("open_aooi300") THEN
               
               #add-point:ON ACTION open_aooi300
               {<point name="menu.open_aooi300" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL axri012_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL axri012_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_axri012_1
            LET g_action_choice="open_axri012_1"
            IF cl_auth_chk_act("open_axri012_1") THEN
               
               #add-point:ON ACTION open_axri012_1
               {<point name="menu.open_axri012_1" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION prog_oocq002
            LET g_action_choice="prog_oocq002"
            IF cl_auth_chk_act("prog_oocq002") THEN
               
               #add-point:ON ACTION prog_oocq002
               {<point name="menu.prog_oocq002" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL axri012_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL axri012_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL axri012_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="axri012.ui_headershow" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION axri012_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_oocq_m.oocq001 = g_browser[g_current_idx].b_oocq001   
   LET g_oocq_m.oocq002 = g_browser[g_current_idx].b_oocq002   
 
   EXECUTE axri012_master_referesh USING g_oocq_m.oocq001,g_oocq_m.oocq002 INTO g_oocq_m.oocq002,g_oocq_m.oocq001, 
       g_oocq_m.oocq003,g_oocq_m.oocq004,g_oocq_m.oocqstus,g_oocq_m.oocqownid,g_oocq_m.oocqowndp,g_oocq_m.oocqcrtid, 
       g_oocq_m.oocqcrtdp,g_oocq_m.oocqcrtdt,g_oocq_m.oocqmodid,g_oocq_m.oocqmoddt
   CALL axri012_show()
   
END FUNCTION
]]>
  </section>
  <section id="axri012.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION axri012_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE axri012_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="axri012.update_b" ver="2" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION axri012_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xrac_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE xrac_t 
         SET (xrac001,xrac002,
              xrac003
              ,xrac004,xrac005,xrac006,xrac007,xrac008) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_xrac_d[g_detail_idx].xrac004,g_xrac_d[g_detail_idx].xrac005,g_xrac_d[g_detail_idx].xrac006, 
                  g_xrac_d[g_detail_idx].xrac007,g_xrac_d[g_detail_idx].xrac008) 
         WHERE xracent = g_enterprise AND xrac001 = ps_keys_bak[1] AND xrac002 = ps_keys_bak[2] AND xrac003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("xrac_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("xrac_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
