{<section id="axrr800_g01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:2(2016-10-08 09:47:39), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000020
#+ Filename...: axrr800_g01
#+ Description: ...
#+ Creator....: 02114(2016-07-02 10:50:21)
#+ Modifier...: 07900 -SD/PR-
{</section>}



{<section id="axrr800_g01.global" readonly="Y" >}
#報表 g01 樣板自動產生(Version:13)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
PRIVATE TYPE sr1_r RECORD
   xrda001 LIKE xrda_t.xrda001, 
   xrda003 LIKE xrda_t.xrda003, 
   xrda004 LIKE xrda_t.xrda004, 
   xrda005 LIKE xrda_t.xrda005, 
   xrda007 LIKE xrda_t.xrda007, 
   xrda008 LIKE xrda_t.xrda008, 
   xrda009 LIKE xrda_t.xrda009, 
   l_xrde016_desc LIKE type_t.chr80, 
   l_xrde006_desc LIKE type_t.chr80, 
   l_xrdald_desc LIKE type_t.chr80, 
   l_xrda004_desc LIKE type_t.chr80, 
   l_xrda005_desc LIKE type_t.chr80, 
   l_xrdasite_desc LIKE type_t.chr80, 
   l_xrda003_desc LIKE type_t.chr80, 
   l_xrdadocno_desc LIKE type_t.chr80, 
   xrda010 LIKE xrda_t.xrda010, 
   xrda014 LIKE xrda_t.xrda014, 
   xrda015 LIKE xrda_t.xrda015, 
   xrda016 LIKE xrda_t.xrda016, 
   xrda017 LIKE xrda_t.xrda017, 
   xrdacomp LIKE xrda_t.xrdacomp, 
   xrdadocdt LIKE xrda_t.xrdadocdt, 
   xrdadocno LIKE xrda_t.xrdadocno, 
   xrdaent LIKE xrda_t.xrdaent, 
   xrdald LIKE xrda_t.xrdald, 
   xrdasite LIKE xrda_t.xrdasite, 
   xrdastus LIKE xrda_t.xrdastus, 
   xrde001 LIKE xrde_t.xrde001, 
   xrde002 LIKE xrde_t.xrde002, 
   xrde003 LIKE xrde_t.xrde003, 
   xrde004 LIKE xrde_t.xrde004, 
   l_xrde003 LIKE type_t.chr80, 
   xrde007 LIKE xrde_t.xrde007, 
   l_xrde007 LIKE type_t.chr80, 
   xrde006 LIKE xrde_t.xrde006, 
   xrde008 LIKE xrde_t.xrde008, 
   l_xrde008_desc LIKE type_t.chr80, 
   xrde010 LIKE xrde_t.xrde010, 
   xrde011 LIKE xrde_t.xrde011, 
   xrde012 LIKE xrde_t.xrde012, 
   xrde013 LIKE xrde_t.xrde013, 
   xrde014 LIKE xrde_t.xrde014, 
   xrde015 LIKE xrde_t.xrde015, 
   xrde016 LIKE xrde_t.xrde016, 
   xrde017 LIKE xrde_t.xrde017, 
   xrde018 LIKE xrde_t.xrde018, 
   xrde019 LIKE xrde_t.xrde019, 
   xrde020 LIKE xrde_t.xrde020, 
   xrde022 LIKE xrde_t.xrde022, 
   xrde023 LIKE xrde_t.xrde023, 
   xrde035 LIKE xrde_t.xrde035, 
   xrde036 LIKE xrde_t.xrde036, 
   xrde039 LIKE xrde_t.xrde039, 
   xrde040 LIKE xrde_t.xrde040, 
   xrde042 LIKE xrde_t.xrde042, 
   xrde043 LIKE xrde_t.xrde043, 
   xrde044 LIKE xrde_t.xrde044, 
   xrde045 LIKE xrde_t.xrde045, 
   xrde046 LIKE xrde_t.xrde046, 
   xrde047 LIKE xrde_t.xrde047, 
   xrde048 LIKE xrde_t.xrde048, 
   xrde049 LIKE xrde_t.xrde049, 
   xrde050 LIKE xrde_t.xrde050, 
   xrde051 LIKE xrde_t.xrde051, 
   xrde100 LIKE xrde_t.xrde100, 
   xrde101 LIKE xrde_t.xrde101, 
   xrde109 LIKE xrde_t.xrde109, 
   xrde119 LIKE xrde_t.xrde119, 
   xrde120 LIKE xrde_t.xrde120, 
   xrde121 LIKE xrde_t.xrde121, 
   xrde129 LIKE xrde_t.xrde129, 
   xrde130 LIKE xrde_t.xrde130, 
   xrde131 LIKE xrde_t.xrde131, 
   xrde139 LIKE xrde_t.xrde139, 
   xrdecomp LIKE xrde_t.xrdecomp, 
   xrdeorga LIKE xrde_t.xrdeorga, 
   xrdeseq LIKE xrde_t.xrdeseq, 
   xrdesite LIKE xrde_t.xrdesite
END RECORD

PRIVATE TYPE sr2_r RECORD
   ooff013 LIKE ooff_t.ooff013
END RECORD


DEFINE tm RECORD
       wc STRING                   #where condition
       END RECORD
DEFINE sr DYNAMIC ARRAY OF sr1_r                   #宣告sr為sr1_t資料結構的動態陣列
DEFINE g_select        STRING
DEFINE g_from          STRING
DEFINE g_where         STRING
DEFINE g_order         STRING
DEFINE g_sql           STRING                         #report_select_prep,REPORT段使用
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
{</section>}
 
{<section id="axrr800_g01.main" readonly="Y" >}
PUBLIC FUNCTION axrr800_g01(p_arg1)
DEFINE  p_arg1 STRING                  #tm.wc  where condition
#add-point:init段define (客製用) name="component_name.define_customerization"
{<point name="component_name.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component_name.define"
{<point name="component_name.define"/>}
#end add-point
 
   LET tm.wc = p_arg1

   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   #報表元件代號
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'   
   
   LET g_rep_code = "axrr800_g01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #主報表select子句準備
   CALL axrr800_g01_sel_prep()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料存入array
   CALL axrr800_g01_ins_data()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料印出
   CALL axrr800_g01_rep_data()
 
END FUNCTION
{</section>}
 
{<section id="axrr800_g01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axrr800_g01_sel_prep()
   #add-point:sel_prep段define (客製用) name="sel_prep.define_customerization"
   {<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
   {<point name="sel_prep.define"/>}
   #end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
   
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT xrda001,xrda003,xrda004,xrda005,xrda007,xrda008,xrda009,'','','','','','','','',xrda010,xrda014,xrda015,xrda016,xrda017,xrdacomp,xrdadocdt,xrdadocno,xrdaent,xrdald,xrdasite,xrdastus,xrde001,xrde002,xrde003,xrde004,'',xrde007,NULL,xrde006,xrde008,NULL,xrde010,xrde011,xrde012,xrde013,xrde014,xrde015,xrde016,xrde017,xrde018,xrde019,xrde020,xrde022,xrde023,xrde035,xrde036,xrde039,xrde040,xrde042,xrde043,xrde044,xrde045,xrde046,xrde047,xrde048,xrde049,xrde050,xrde051,xrde100,xrde101,xrde109,xrde119,xrde120,xrde121,xrde129,xrde130,xrde131,xrde139,xrdecomp,xrdeorga,xrdeseq,xrdesite"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM  xrda_t  LEFT OUTER JOIN ( SELECT xrde_t.* FROM xrde_t  ) x  ON xrda_t.xrdaent = x.xrdeent AND xrda_t.xrdald = x.xrdeld AND xrda_t.xrdadocno = x.xrdedocno"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED 
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
    LET g_order = " ORDER BY xrdadocno,xrdeseq"
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("xrda_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED ," ",g_order CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段 
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE axrr800_g01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()   
      LET g_rep_success = 'N'    
   END IF
   DECLARE axrr800_g01_curs CURSOR FOR axrr800_g01_prepare
 
END FUNCTION
{</section>}
 
{<section id="axrr800_g01.ins_data" readonly="Y" >}
PRIVATE FUNCTION axrr800_g01_ins_data()
#主報表record(用於select子句)
   DEFINE sr_s RECORD 
   xrda001 LIKE xrda_t.xrda001, 
   xrda003 LIKE xrda_t.xrda003, 
   xrda004 LIKE xrda_t.xrda004, 
   xrda005 LIKE xrda_t.xrda005, 
   xrda007 LIKE xrda_t.xrda007, 
   xrda008 LIKE xrda_t.xrda008, 
   xrda009 LIKE xrda_t.xrda009, 
   l_xrde016_desc LIKE type_t.chr80, 
   l_xrde006_desc LIKE type_t.chr80, 
   l_xrdald_desc LIKE type_t.chr80, 
   l_xrda004_desc LIKE type_t.chr80, 
   l_xrda005_desc LIKE type_t.chr80, 
   l_xrdasite_desc LIKE type_t.chr80, 
   l_xrda003_desc LIKE type_t.chr80, 
   l_xrdadocno_desc LIKE type_t.chr80, 
   xrda010 LIKE xrda_t.xrda010, 
   xrda014 LIKE xrda_t.xrda014, 
   xrda015 LIKE xrda_t.xrda015, 
   xrda016 LIKE xrda_t.xrda016, 
   xrda017 LIKE xrda_t.xrda017, 
   xrdacomp LIKE xrda_t.xrdacomp, 
   xrdadocdt LIKE xrda_t.xrdadocdt, 
   xrdadocno LIKE xrda_t.xrdadocno, 
   xrdaent LIKE xrda_t.xrdaent, 
   xrdald LIKE xrda_t.xrdald, 
   xrdasite LIKE xrda_t.xrdasite, 
   xrdastus LIKE xrda_t.xrdastus, 
   xrde001 LIKE xrde_t.xrde001, 
   xrde002 LIKE xrde_t.xrde002, 
   xrde003 LIKE xrde_t.xrde003, 
   xrde004 LIKE xrde_t.xrde004, 
   l_xrde003 LIKE type_t.chr80, 
   xrde007 LIKE xrde_t.xrde007, 
   l_xrde007 LIKE type_t.chr80, 
   xrde006 LIKE xrde_t.xrde006, 
   xrde008 LIKE xrde_t.xrde008, 
   l_xrde008_desc LIKE type_t.chr80, 
   xrde010 LIKE xrde_t.xrde010, 
   xrde011 LIKE xrde_t.xrde011, 
   xrde012 LIKE xrde_t.xrde012, 
   xrde013 LIKE xrde_t.xrde013, 
   xrde014 LIKE xrde_t.xrde014, 
   xrde015 LIKE xrde_t.xrde015, 
   xrde016 LIKE xrde_t.xrde016, 
   xrde017 LIKE xrde_t.xrde017, 
   xrde018 LIKE xrde_t.xrde018, 
   xrde019 LIKE xrde_t.xrde019, 
   xrde020 LIKE xrde_t.xrde020, 
   xrde022 LIKE xrde_t.xrde022, 
   xrde023 LIKE xrde_t.xrde023, 
   xrde035 LIKE xrde_t.xrde035, 
   xrde036 LIKE xrde_t.xrde036, 
   xrde039 LIKE xrde_t.xrde039, 
   xrde040 LIKE xrde_t.xrde040, 
   xrde042 LIKE xrde_t.xrde042, 
   xrde043 LIKE xrde_t.xrde043, 
   xrde044 LIKE xrde_t.xrde044, 
   xrde045 LIKE xrde_t.xrde045, 
   xrde046 LIKE xrde_t.xrde046, 
   xrde047 LIKE xrde_t.xrde047, 
   xrde048 LIKE xrde_t.xrde048, 
   xrde049 LIKE xrde_t.xrde049, 
   xrde050 LIKE xrde_t.xrde050, 
   xrde051 LIKE xrde_t.xrde051, 
   xrde100 LIKE xrde_t.xrde100, 
   xrde101 LIKE xrde_t.xrde101, 
   xrde109 LIKE xrde_t.xrde109, 
   xrde119 LIKE xrde_t.xrde119, 
   xrde120 LIKE xrde_t.xrde120, 
   xrde121 LIKE xrde_t.xrde121, 
   xrde129 LIKE xrde_t.xrde129, 
   xrde130 LIKE xrde_t.xrde130, 
   xrde131 LIKE xrde_t.xrde131, 
   xrde139 LIKE xrde_t.xrde139, 
   xrdecomp LIKE xrde_t.xrdecomp, 
   xrdeorga LIKE xrde_t.xrdeorga, 
   xrdeseq LIKE xrde_t.xrdeseq, 
   xrdesite LIKE xrde_t.xrdesite
 END RECORD
   DEFINE l_cnt           LIKE type_t.num10
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point   
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    CALL sr.clear()                                  #rep sr
    LET l_cnt = 1
    FOREACH axrr800_g01_curs INTO sr_s.*
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()       
          LET g_rep_success = 'N'    
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before_arr name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #set rep array value
       LET sr[l_cnt].xrda001 = sr_s.xrda001
       LET sr[l_cnt].xrda003 = sr_s.xrda003
       LET sr[l_cnt].xrda004 = sr_s.xrda004
       LET sr[l_cnt].xrda005 = sr_s.xrda005
       LET sr[l_cnt].xrda007 = sr_s.xrda007
       LET sr[l_cnt].xrda008 = sr_s.xrda008
       LET sr[l_cnt].xrda009 = sr_s.xrda009
       LET sr[l_cnt].l_xrde016_desc = sr_s.l_xrde016_desc
       LET sr[l_cnt].l_xrde006_desc = sr_s.l_xrde006_desc
       LET sr[l_cnt].l_xrdald_desc = sr_s.l_xrdald_desc
       LET sr[l_cnt].l_xrda004_desc = sr_s.l_xrda004_desc
       LET sr[l_cnt].l_xrda005_desc = sr_s.l_xrda005_desc
       LET sr[l_cnt].l_xrdasite_desc = sr_s.l_xrdasite_desc
       LET sr[l_cnt].l_xrda003_desc = sr_s.l_xrda003_desc
       LET sr[l_cnt].l_xrdadocno_desc = sr_s.l_xrdadocno_desc
       LET sr[l_cnt].xrda010 = sr_s.xrda010
       LET sr[l_cnt].xrda014 = sr_s.xrda014
       LET sr[l_cnt].xrda015 = sr_s.xrda015
       LET sr[l_cnt].xrda016 = sr_s.xrda016
       LET sr[l_cnt].xrda017 = sr_s.xrda017
       LET sr[l_cnt].xrdacomp = sr_s.xrdacomp
       LET sr[l_cnt].xrdadocdt = sr_s.xrdadocdt
       LET sr[l_cnt].xrdadocno = sr_s.xrdadocno
       LET sr[l_cnt].xrdaent = sr_s.xrdaent
       LET sr[l_cnt].xrdald = sr_s.xrdald
       LET sr[l_cnt].xrdasite = sr_s.xrdasite
       LET sr[l_cnt].xrdastus = sr_s.xrdastus
       LET sr[l_cnt].xrde001 = sr_s.xrde001
       LET sr[l_cnt].xrde002 = sr_s.xrde002
       LET sr[l_cnt].xrde003 = sr_s.xrde003
       LET sr[l_cnt].xrde004 = sr_s.xrde004
       LET sr[l_cnt].l_xrde003 = sr_s.l_xrde003
       LET sr[l_cnt].xrde007 = sr_s.xrde007
       LET sr[l_cnt].l_xrde007 = sr_s.l_xrde007
       LET sr[l_cnt].xrde006 = sr_s.xrde006
       LET sr[l_cnt].xrde008 = sr_s.xrde008
       LET sr[l_cnt].l_xrde008_desc = sr_s.l_xrde008_desc
       LET sr[l_cnt].xrde010 = sr_s.xrde010
       LET sr[l_cnt].xrde011 = sr_s.xrde011
       LET sr[l_cnt].xrde012 = sr_s.xrde012
       LET sr[l_cnt].xrde013 = sr_s.xrde013
       LET sr[l_cnt].xrde014 = sr_s.xrde014
       LET sr[l_cnt].xrde015 = sr_s.xrde015
       LET sr[l_cnt].xrde016 = sr_s.xrde016
       LET sr[l_cnt].xrde017 = sr_s.xrde017
       LET sr[l_cnt].xrde018 = sr_s.xrde018
       LET sr[l_cnt].xrde019 = sr_s.xrde019
       LET sr[l_cnt].xrde020 = sr_s.xrde020
       LET sr[l_cnt].xrde022 = sr_s.xrde022
       LET sr[l_cnt].xrde023 = sr_s.xrde023
       LET sr[l_cnt].xrde035 = sr_s.xrde035
       LET sr[l_cnt].xrde036 = sr_s.xrde036
       LET sr[l_cnt].xrde039 = sr_s.xrde039
       LET sr[l_cnt].xrde040 = sr_s.xrde040
       LET sr[l_cnt].xrde042 = sr_s.xrde042
       LET sr[l_cnt].xrde043 = sr_s.xrde043
       LET sr[l_cnt].xrde044 = sr_s.xrde044
       LET sr[l_cnt].xrde045 = sr_s.xrde045
       LET sr[l_cnt].xrde046 = sr_s.xrde046
       LET sr[l_cnt].xrde047 = sr_s.xrde047
       LET sr[l_cnt].xrde048 = sr_s.xrde048
       LET sr[l_cnt].xrde049 = sr_s.xrde049
       LET sr[l_cnt].xrde050 = sr_s.xrde050
       LET sr[l_cnt].xrde051 = sr_s.xrde051
       LET sr[l_cnt].xrde100 = sr_s.xrde100
       LET sr[l_cnt].xrde101 = sr_s.xrde101
       LET sr[l_cnt].xrde109 = sr_s.xrde109
       LET sr[l_cnt].xrde119 = sr_s.xrde119
       LET sr[l_cnt].xrde120 = sr_s.xrde120
       LET sr[l_cnt].xrde121 = sr_s.xrde121
       LET sr[l_cnt].xrde129 = sr_s.xrde129
       LET sr[l_cnt].xrde130 = sr_s.xrde130
       LET sr[l_cnt].xrde131 = sr_s.xrde131
       LET sr[l_cnt].xrde139 = sr_s.xrde139
       LET sr[l_cnt].xrdecomp = sr_s.xrdecomp
       LET sr[l_cnt].xrdeorga = sr_s.xrdeorga
       LET sr[l_cnt].xrdeseq = sr_s.xrdeseq
       LET sr[l_cnt].xrdesite = sr_s.xrdesite

 
       #add-point:ins_data段after_arr name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       LET l_cnt = l_cnt + 1
    END FOREACH
    CALL sr.deleteElement(l_cnt)
 
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
END FUNCTION
{</section>}
 
{<section id="axrr800_g01.rep_data" readonly="Y" >}
PRIVATE FUNCTION axrr800_g01_rep_data()
   DEFINE HANDLER         om.SaxDocumentHandler
   DEFINE l_i             INTEGER
 
    #判斷是否有報表資料，若回彈出訊息視窗
    IF sr.getLength() = 0 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = "adz-00285"
       LET g_errparam.extend = NULL
       LET g_errparam.popup  = FALSE
       LET g_errparam.replace[1] = ''
       CALL cl_err()  
       RETURN 
    END IF
    WHILE TRUE   
       #add-point:rep_data段印前 name="rep_data.before"
       {<point name="rep_data.before"/>}
       #end add-point     
       LET handler = cl_gr_handler()
       IF handler IS NOT NULL THEN
          START REPORT axrr800_g01_rep TO XML HANDLER handler
          FOR l_i = 1 TO sr.getLength()
             OUTPUT TO REPORT axrr800_g01_rep(sr[l_i].*)
             #報表中斷列印時，顯示錯誤訊息
             IF fgl_report_getErrorStatus() THEN
                DISPLAY "FGL: STOPPING REPORT msg=\"",fgl_report_getErrorString(),"\""
                EXIT FOR
             END IF                  
          END FOR
          FINISH REPORT axrr800_g01_rep
       END IF
       #add-point:rep_data段印完 name="rep_data.after"
       {<point name="rep_data.after"/>}
       #end add-point       
       IF g_rep_flag = TRUE THEN
          LET g_rep_flag = FALSE
          EXIT WHILE
       END IF
    END WHILE
    #add-point:rep_data段離開while印完前 name="rep_data.end.before"
    {<point name="rep_data.end.before"/>}
    #end add-point
    CALL cl_gr_close_report()
    #add-point:rep_data段離開while印完後 name="rep_data.end.after"
    {<point name="rep_data.end.after"/>}
    #end add-point    
END FUNCTION
{</section>}
 
{<section id="axrr800_g01.rep" readonly="Y" >}
PRIVATE REPORT axrr800_g01_rep(sr1)
DEFINE sr1 sr1_r
DEFINE sr2 sr2_r
DEFINE l_subrep01_show  LIKE type_t.chr1,
       l_subrep02_show  LIKE type_t.chr1,
       l_subrep03_show  LIKE type_t.chr1,
       l_subrep04_show  LIKE type_t.chr1
DEFINE l_cnt           LIKE type_t.num10
DEFINE l_sub_sql       STRING
#add-point:rep段define  (客製用) name="rep.define_customerization"
{<point name="rep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:rep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep.define"
{<point name="rep.define"/>}
#end add-point
 
    #add-point:rep段ORDER_before name="rep.order.before"
    {<point name="rep.order.before" mark="Y"/>}
    #end add-point
    ORDER EXTERNAL BY sr1.xrdadocno,sr1.xrdeseq
    #add-point:rep段ORDER_after name="rep.order.after"
    {<point name="rep.order.after"/>}
    #end add-point
    
    FORMAT
       FIRST PAGE HEADER          
          PRINTX g_user,g_pdate,g_rep_code,g_company,g_ptime,g_user_name,g_date_fmt
          PRINTX tm.*
          PRINTX g_grNumFmt.*
          PRINTX g_rep_wcchp
 
          #讀取beforeGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:2)
        BEFORE GROUP OF sr1.xrdadocno
            #報表 d05 樣板自動產生(Version:6)
            CALL cl_gr_title_clear()  #清除title變數值 
            #add-point:rep.header  #公司資訊(不在公用變數內) name="rep.header"
            {<point name="rep.header"  mark="Y"/>}
            #end add-point:rep.header 
            LET g_rep_docno = sr1.xrdadocno
            CALL cl_gr_init_pageheader() #表頭資訊
            PRINTX g_grPageHeader.*
            PRINTX g_grPageFooter.*
            #add-point:rep.apr.signstr.before name="rep.apr.signstr.before"
            {<point name="rep.apr.signstr.before"  mark="Y"/>}              
            #end add-point:rep.apr.signstr.before   
            LET g_doc_key = 'xrdaent=' ,sr1.xrdaent,'{+}xrdald=' ,sr1.xrdald,'{+}xrdadocno=' ,sr1.xrdadocno         
            CALL cl_gr_init_apr(sr1.xrdadocno)
            #add-point:rep.apr.signstr name="rep.apr.signstr"
            {<point name="rep.apr.signstr"/>}              
            #end add-point:rep.apr.signstr
            PRINTX g_grSign.*



           #add-point:rep.b_group.xrdadocno.before name="rep.b_group.xrdadocno.before"
           {<point name="rep.b_group.xrdadocno.before"/>}
           #end add-point:

           #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub01.before name="rep.sub01.before"
           {<point name="rep.sub01.before"/>}
           #end add-point:rep.sub01.before

           #add-point:rep.sub01.sql name="rep.sub01.sql"
           {<point name="rep.sub01.sql" mark="Y"/>}
           #end add-point:rep.sub01.sql

           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='2' AND ooff004=0 AND ooffent = '", sr1.xrdaent CLIPPED ,"'", " AND  ooff003 = '", sr1.xrdadocno CLIPPED ,"'"

           #add-point:rep.sub01.afsql name="rep.sub01.afsql"
           {<point name="rep.sub01.afsql"/>}
           #end add-point:rep.sub01.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep01_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE axrr800_g01_repcur01_cnt_pre FROM l_sub_sql
           EXECUTE axrr800_g01_repcur01_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep01_show ="Y"
           END IF
           PRINTX l_subrep01_show
           START REPORT axrr800_g01_subrep01
           DECLARE axrr800_g01_repcur01 CURSOR FROM g_sql
           FOREACH axrr800_g01_repcur01 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "axrr800_g01_repcur01:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub01.foreach name="rep.sub01.foreach"
              {<point name="rep.sub01.foreach"/>}
              #end add-point:rep.sub01.foreach
              OUTPUT TO REPORT axrr800_g01_subrep01(sr2.*)
           END FOREACH
           FINISH REPORT axrr800_g01_subrep01
           #add-point:rep.sub01.after name="rep.sub01.after"
           {<point name="rep.sub01.after"/>}
           #end add-point:rep.sub01.after



           #add-point:rep.b_group.xrdadocno.after name="rep.b_group.xrdadocno.after"
           {<point name="rep.b_group.xrdadocno.after"/>}
           #end add-point:


        #報表 d01 樣板自動產生(Version:2)
        BEFORE GROUP OF sr1.xrdeseq

           #add-point:rep.b_group.xrdeseq.before name="rep.b_group.xrdeseq.before"
           {<point name="rep.b_group.xrdeseq.before"/>}
           #end add-point:


           #add-point:rep.b_group.xrdeseq.after name="rep.b_group.xrdeseq.after"
           {<point name="rep.b_group.xrdeseq.after"/>}
           #end add-point:



 
       ON EVERY ROW
          #add-point:rep.everyrow.before name="rep.everyrow.before"
          {<point name="rep.everyrow.before"/>}
          #end add-point:rep.everyrow.before
 
          #單身前備註
             #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub02.before name="rep.sub02.before"
           {<point name="rep.sub02.before"/>}
           #end add-point:rep.sub02.before

           #add-point:rep.sub02.sql name="rep.sub02.sql"
           {<point name="rep.sub02.sql" mark="Y"/>}
           #end add-point:rep.sub02.sql

           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='2' AND ooffent = '", sr1.xrdaent CLIPPED ,"'", " AND  ooff003 = '", sr1.xrdadocno CLIPPED ,"'", " AND  ooff004 = ", sr1.xrdeseq CLIPPED ,""

           #add-point:rep.sub02.afsql name="rep.sub02.afsql"
           {<point name="rep.sub02.afsql"/>}
           #end add-point:rep.sub02.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep02_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE axrr800_g01_repcur02_cnt_pre FROM l_sub_sql
           EXECUTE axrr800_g01_repcur02_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep02_show ="Y"
           END IF
           PRINTX l_subrep02_show
           START REPORT axrr800_g01_subrep02
           DECLARE axrr800_g01_repcur02 CURSOR FROM g_sql
           FOREACH axrr800_g01_repcur02 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "axrr800_g01_repcur02:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub02.foreach name="rep.sub02.foreach"
              {<point name="rep.sub02.foreach"/>}
              #end add-point:rep.sub02.foreach
              OUTPUT TO REPORT axrr800_g01_subrep02(sr2.*)
           END FOREACH
           FINISH REPORT axrr800_g01_subrep02
           #add-point:rep.sub02.after name="rep.sub02.after"
           {<point name="rep.sub02.after"/>}
           #end add-point:rep.sub02.after



          #add-point:rep.everyrow.beforerow name="rep.everyrow.beforerow"
          {<point name="rep.everyrow.beforerow"/>}
          #end add-point:rep.everyrow.beforerow
            
          PRINTX sr1.*
 
          #add-point:rep.everyrow.afterrow name="rep.everyrow.afterrow"
          {<point name="rep.everyrow.afterrow"/>}
          #end add-point:rep.everyrow.afterrow
 
          #單身後備註
             #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub03.before name="rep.sub03.before"
           {<point name="rep.sub03.before"/>}
           #end add-point:rep.sub03.before

           #add-point:rep.sub03.sql name="rep.sub03.sql"
           {<point name="rep.sub03.sql" mark="Y"/>}
           #end add-point:rep.sub03.sql

           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='1' AND ooffent = '", sr1.xrdaent CLIPPED ,"'", " AND  ooff003 = '", sr1.xrdadocno CLIPPED ,"'", " AND  ooff004 = ", sr1.xrdeseq CLIPPED ,""

           #add-point:rep.sub03.afsql name="rep.sub03.afsql"
           {<point name="rep.sub03.afsql"/>}
           #end add-point:rep.sub03.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep03_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE axrr800_g01_repcur03_cnt_pre FROM l_sub_sql
           EXECUTE axrr800_g01_repcur03_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep03_show ="Y"
           END IF
           PRINTX l_subrep03_show
           START REPORT axrr800_g01_subrep03
           DECLARE axrr800_g01_repcur03 CURSOR FROM g_sql
           FOREACH axrr800_g01_repcur03 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "axrr800_g01_repcur03:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub03.foreach name="rep.sub03.foreach"
              {<point name="rep.sub03.foreach"/>}
              #end add-point:rep.sub03.foreach
              OUTPUT TO REPORT axrr800_g01_subrep03(sr2.*)
           END FOREACH
           FINISH REPORT axrr800_g01_subrep03
           #add-point:rep.sub03.after name="rep.sub03.after"
           {<point name="rep.sub03.after"/>}
           #end add-point:rep.sub03.after



          #add-point:rep.everyrow.after name="rep.everyrow.after"
          {<point name="rep.everyrow.after"/>}
          #end add-point:rep.everyrow.after        
 
          #讀取afterGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:2)
        AFTER GROUP OF sr1.xrdadocno

           #add-point:rep.a_group.xrdadocno.before name="rep.a_group.xrdadocno.before"
           {<point name="rep.a_group.xrdadocno.before"/>}
           #end add-point:

           #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub04.before name="rep.sub04.before"
           {<point name="rep.sub04.before"/>}
           #end add-point:rep.sub04.before

           #add-point:rep.sub04.sql name="rep.sub04.sql"
           {<point name="rep.sub04.sql" mark="Y"/>}
           #end add-point:rep.sub04.sql

           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='1' AND ooff004=0 AND ooffent = '", sr1.xrdaent CLIPPED ,"'", " AND  ooff003 = '", sr1.xrdadocno CLIPPED ,"'"

           #add-point:rep.sub04.afsql name="rep.sub04.afsql"
           {<point name="rep.sub04.afsql"/>}
           #end add-point:rep.sub04.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep04_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE axrr800_g01_repcur04_cnt_pre FROM l_sub_sql
           EXECUTE axrr800_g01_repcur04_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep04_show ="Y"
           END IF
           PRINTX l_subrep04_show
           START REPORT axrr800_g01_subrep04
           DECLARE axrr800_g01_repcur04 CURSOR FROM g_sql
           FOREACH axrr800_g01_repcur04 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "axrr800_g01_repcur04:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub04.foreach name="rep.sub04.foreach"
              {<point name="rep.sub04.foreach"/>}
              #end add-point:rep.sub04.foreach
              OUTPUT TO REPORT axrr800_g01_subrep04(sr2.*)
           END FOREACH
           FINISH REPORT axrr800_g01_subrep04
           #add-point:rep.sub04.after name="rep.sub04.after"
           {<point name="rep.sub04.after"/>}
           #end add-point:rep.sub04.after



           #add-point:rep.a_group.xrdadocno.after name="rep.a_group.xrdadocno.after"
           {<point name="rep.a_group.xrdadocno.after"/>}
           #end add-point:


        #報表 d01 樣板自動產生(Version:2)
        AFTER GROUP OF sr1.xrdeseq

           #add-point:rep.a_group.xrdeseq.before name="rep.a_group.xrdeseq.before"
           {<point name="rep.a_group.xrdeseq.before"/>}
           #end add-point:


           #add-point:rep.a_group.xrdeseq.after name="rep.a_group.xrdeseq.after"
           {<point name="rep.a_group.xrdeseq.after"/>}
           #end add-point:



       ON LAST ROW
            #add-point:rep.lastrow.before name="rep.lastrow.before"  
            {<point name="rep.lastrow.before"/>}        
            #end add-point :rep.lastrow.before
 
            #add-point:rep.lastrow.after name="rep.lastrow.after"
            {<point name="rep.lastrow.after"/>}
            #end add-point :rep.lastrow.after
END REPORT
{</section>}
 
{<section id="axrr800_g01.subrep_str" readonly="Y" >}
#讀取子報表樣板
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT axrr800_g01_subrep01(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub01.define_customerization" 
{<point name="sub01.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sub01.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub01.define" 
{<point name="sub01.define"/>}
#end add-point:sub01.define

    #add-point:sub01.order.before name="sub01.order.before" 
    {<point name="sub01.order.before"/>}
    #end add-point:sub01.order.before



    FORMAT



       ON EVERY ROW
            #add-point:sub01.everyrow.before name="sub01.everyrow.before" 
            {<point name="sub01.everyrow.before"/>}              
            #end add-point:sub01.everyrow.before

            PRINTX sr2.*

            #add-point:sub01.everyrow.after name="sub01.everyrow.after" 
            {<point name="sub01.everyrow.after"/>}
            #end add-point:sub01.everyrow.after


END REPORT


#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT axrr800_g01_subrep02(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub02.define_customerization" 
{<point name="sub02.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sub02.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub02.define" 
{<point name="sub02.define"/>}
#end add-point:sub02.define

    #add-point:sub02.order.before name="sub02.order.before" 
    {<point name="sub02.order.before"/>}
    #end add-point:sub02.order.before



    FORMAT



       ON EVERY ROW
            #add-point:sub02.everyrow.before name="sub02.everyrow.before" 
            {<point name="sub02.everyrow.before"/>}              
            #end add-point:sub02.everyrow.before

            PRINTX sr2.*

            #add-point:sub02.everyrow.after name="sub02.everyrow.after" 
            {<point name="sub02.everyrow.after"/>}
            #end add-point:sub02.everyrow.after


END REPORT


#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT axrr800_g01_subrep03(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub03.define_customerization" 
{<point name="sub03.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sub03.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub03.define" 
{<point name="sub03.define"/>}
#end add-point:sub03.define

    #add-point:sub03.order.before name="sub03.order.before" 
    {<point name="sub03.order.before"/>}
    #end add-point:sub03.order.before



    FORMAT



       ON EVERY ROW
            #add-point:sub03.everyrow.before name="sub03.everyrow.before" 
            {<point name="sub03.everyrow.before"/>}              
            #end add-point:sub03.everyrow.before

            PRINTX sr2.*

            #add-point:sub03.everyrow.after name="sub03.everyrow.after" 
            {<point name="sub03.everyrow.after"/>}
            #end add-point:sub03.everyrow.after


END REPORT


#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT axrr800_g01_subrep04(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub04.define_customerization" 
{<point name="sub04.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sub04.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub04.define" 
{<point name="sub04.define"/>}
#end add-point:sub04.define

    #add-point:sub04.order.before name="sub04.order.before" 
    {<point name="sub04.order.before"/>}
    #end add-point:sub04.order.before



    FORMAT



       ON EVERY ROW
            #add-point:sub04.everyrow.before name="sub04.everyrow.before" 
            {<point name="sub04.everyrow.before"/>}              
            #end add-point:sub04.everyrow.before

            PRINTX sr2.*

            #add-point:sub04.everyrow.after name="sub04.everyrow.after" 
            {<point name="sub04.everyrow.after"/>}
            #end add-point:sub04.everyrow.after


END REPORT


 
{</section>}
 
{<section id="axrr800_g01.other_function" readonly="Y" >}
{<point name="other.function"/>}
{</section>}
 
{<section id="axrr800_g01.other_report" readonly="Y" >}
{<point name="other.report"/>}
{</section>}
