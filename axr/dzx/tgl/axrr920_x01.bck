#該程式未解開Section, 採用最新樣板產出!
{<section id="axrr920_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:3(2016-12-21 11:16:16), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000059
#+ Filename...: axrr920_x01
#+ Description: ...
#+ Creator....: 02291(2015-09-25 15:18:15)
#+ Modifier...: 08732 -SD/PR-

{</section>}

{<section id="axrr920_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:8)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #condition:where 
       a1 LIKE type_t.chr1,         #source 
       a2 LIKE type_t.chr1          #collect
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point

{</section>}

{<section id="axrr920_x01.main" readonly="Y" >}
PUBLIC FUNCTION axrr920_x01(p_arg1,p_arg2,p_arg3)
DEFINE  p_arg1 STRING                  #tm.wc  condition:where 
DEFINE  p_arg2 LIKE type_t.chr1         #tm.a1  source 
DEFINE  p_arg3 LIKE type_t.chr1         #tm.a2  collect
#add-point:init段define(客製用) name="component.define_customerization"
{<point name="component.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.a1 = p_arg2
   LET tm.a2 = p_arg3
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "axrr920_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL axrr920_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL axrr920_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL axrr920_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL axrr920_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL axrr920_x01_rep_data()
 
END FUNCTION

{</section>}

{<section id="axrr920_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION axrr920_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "xregdocdt.xreg_t.xregdocdt,xregdocno.xreg_t.xregdocno,l_xregld_desc.type_t.chr500,xreg001.xreg_t.xreg001,xreg002.xreg_t.xreg002,l_xreg004_desc.type_t.chr500,xrehseq.xreh_t.xrehseq,l_xreh009_desc.type_t.chr500,xreh005.xreh_t.xreh005,xreh006.xreh_t.xreh006,xreh007.xreh_t.xreh007,xreh008.xreh_t.xreh008,xreh100.xreh_t.xreh100,xreh102.xreh_t.xreh102,xreh101.xreh_t.xreh101,xreh103.xreh_t.xreh103,xreh113.xreh_t.xreh113,xreh114.xreh_t.xreh114,l_last_xreh115.xreh_t.xreh115,xreh115.xreh_t.xreh115,xreh116.xreh_t.xreh116,xreh019.xreh_t.xreh019,l_xreh019_desc.type_t.chr100,xreh034.xreh_t.xreh034,l_xreh034_desc.type_t.chr100" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION

{</section>}

{<section id="axrr920_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION axrr920_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"
{<point name="ins_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         {<point name="insert_prep"/>}
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION

{</section>}

{<section id="axrr920_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION axrr920_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"
{<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT xregdocdt,xregdocno,NULL,xreg001,xreg002,NULL,xrehseq,NULL,xreh005,xreh006, 
       xreh007,xreh008,xreh100,xreh102,xreh101,xreh103,xreh113,xreh114,NULL,xreh115,xreh116,xreh019, 
       NULL,xreh034,NULL"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM xreg_t,xreh_t"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("xreg_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE axrr920_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE axrr920_x01_curs CURSOR FOR axrr920_x01_prepare
 
END FUNCTION

{</section>}

{<section id="axrr920_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION axrr920_x01_ins_data()
DEFINE sr RECORD 
   xregdocdt LIKE xreg_t.xregdocdt, 
   xregdocno LIKE xreg_t.xregdocno, 
   l_xregld_desc LIKE type_t.chr500, 
   xreg001 LIKE xreg_t.xreg001, 
   xreg002 LIKE xreg_t.xreg002, 
   l_xreg004_desc LIKE type_t.chr500, 
   xrehseq LIKE xreh_t.xrehseq, 
   l_xreh009_desc LIKE type_t.chr500, 
   xreh005 LIKE xreh_t.xreh005, 
   xreh006 LIKE xreh_t.xreh006, 
   xreh007 LIKE xreh_t.xreh007, 
   xreh008 LIKE xreh_t.xreh008, 
   xreh100 LIKE xreh_t.xreh100, 
   xreh102 LIKE xreh_t.xreh102, 
   xreh101 LIKE xreh_t.xreh101, 
   xreh103 LIKE xreh_t.xreh103, 
   xreh113 LIKE xreh_t.xreh113, 
   xreh114 LIKE xreh_t.xreh114, 
   l_last_xreh115 LIKE xreh_t.xreh115, 
   xreh115 LIKE xreh_t.xreh115, 
   xreh116 LIKE xreh_t.xreh116, 
   xreh019 LIKE xreh_t.xreh019, 
   l_xreh019_desc LIKE type_t.chr100, 
   xreh034 LIKE xreh_t.xreh034, 
   l_xreh034_desc LIKE type_t.chr100
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH axrr920_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.xregdocdt,sr.xregdocno,sr.l_xregld_desc,sr.xreg001,sr.xreg002,sr.l_xreg004_desc,sr.xrehseq,sr.l_xreh009_desc,sr.xreh005,sr.xreh006,sr.xreh007,sr.xreh008,sr.xreh100,sr.xreh102,sr.xreh101,sr.xreh103,sr.xreh113,sr.xreh114,sr.l_last_xreh115,sr.xreh115,sr.xreh116,sr.xreh019,sr.l_xreh019_desc,sr.xreh034,sr.l_xreh034_desc
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "axrr920_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION

{</section>}

{<section id="axrr920_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION axrr920_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"
{<point name="rep_data.define_customerization" edit="c" mark="Y"/>}
#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION

{</section>}

{<section id="axrr920_x01.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

