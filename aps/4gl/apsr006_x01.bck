#該程式未解開Section, 採用最新樣板產出!
{<section id="apsr006_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:1(2014-12-18 13:55:54), PR版次:0001(2015-01-29 14:28:31)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000054
#+ Filename...: apsr006_x01
#+ Description: APS建議替代表
#+ Creator....: 05384(2014-11-18 15:36:20)
#+ Modifier...: 05384 -SD/PR- 05384
 
{</section>}
 
{<section id="apsr006_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:7)
#add-point:填寫註解說明

#end add-point
#add-point:填寫註解說明

#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING                   #where condition
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"

#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"

#end add-point
 
{</section>}
 
{<section id="apsr006_x01.main" readonly="Y" >}
PUBLIC FUNCTION apsr006_x01(p_arg1)
DEFINE  p_arg1 STRING                  #tm.wc  where condition
#add-point:init段define(客製用) name="component.define_customerization"

#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"

#end add-point
 
   LET tm.wc = p_arg1
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "apsr006_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL apsr006_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL apsr006_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL apsr006_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL apsr006_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL apsr006_x01_rep_data()
 
END FUNCTION
 
{</section>}
 
{<section id="apsr006_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION apsr006_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "psot003.psot_t.psot003,psot024.psot_t.psot024,l_psot024_desc.imaal_t.imaal003,l_psot024_desc_1.imaal_t.imaal004,psos005.psos_t.psos005,psos012.psos_t.psos012,psos011.psos_t.psos011,psot011.psot_t.psot011,psot020.psot_t.psot020,l_psot020_desc.imaal_t.imaal003,l_psot020_desc_1.imaal_t.imaal004,psot015.psot_t.psot015,l_psot015_desc.imaal_t.imaal003,l_psot015_desc_1.imaal_t.imaal004,psot012.psot_t.psot012,psos021.psos_t.psos021" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   
   #end add-point:create_tmp.after
END FUNCTION
 
{</section>}
 
{<section id="apsr006_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION apsr006_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"

#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"

#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
 
{</section>}
 
{<section id="apsr006_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION apsr006_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"

#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"

#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   LET g_select = " SELECT DISTINCT c.psosent,c.psossite,c.psos001,c.psos002,d.psot003,d.psot024,x.imaal003,x.imaal004,c.psos005,
       c.psos012,c.psos011,d.psot011,d.psot020,y.imaal003,y.imaal004,d.psot015,z.imaal003,z.imaal004,d.psot012,c.psos021"
#   #end add-point
#   LET g_select = " SELECT psosent,psossite,psos001,psos002,psot003,psot024,'','',psos005,psos012,psos011, 
#       psot011,psot020,'','',psot015,'','',psot012,psos021"
# 
#   #add-point:sel_prep g_from name="sel_prep.g_from"
   LET g_from = 
       " FROM psca_t a, ",
       "      (SELECT psosent,psossite,psos001,MAX(psos002) AS psos002 FROM psos_t GROUP BY psosent,psossite,psos001) b ,",
       "      psos_t c,psot_t  d ",
       "      LEFT JOIN imaal_t x ON x.imaalent = d.psotent AND x.imaal001 = d.psot024 AND x.imaal002 = '",g_dlang,"' ",
       "      LEFT JOIN imaal_t y ON y.imaalent = d.psotent AND y.imaal001 = d.psot020 AND y.imaal002 = '",g_dlang,"' ",
       "      LEFT JOIN imaal_t z ON z.imaalent = d.psotent AND z.imaal001 = d.psot015 AND z.imaal002 = '",g_dlang,"' "
#   #end add-point
#    LET g_from = " FROM psos_t,psot_t"
# 
#   #add-point:sel_prep g_where name="sel_prep.g_where"
   LET g_where = " WHERE " ,tm.wc CLIPPED ,
                   " AND a.pscaent = b.psosent AND a.pscasite = b.psossite AND a.psca001 =b.psos001 ",
                   " AND c.psosent = b.psosent AND c.psossite = b.psossite AND c.psos001 = b.psos001 ",
                   " AND c.psos002 = b.psos002 AND d.psotent = c.psosent AND d.psotsite = c.psossite ",
                   " AND d.psot001 = c.psos001 AND d.psot002 = c.psos002 AND d.psot003 = c.psos004 ",
                   " AND d.psot020 != d.psot015 "
#   #end add-point
#    LET g_where = " WHERE " ,tm.wc CLIPPED
# 
#   #add-point:sel_prep g_order name="sel_prep.g_order"
   
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("psos_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   
   #end add-point
   PREPARE apsr006_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE apsr006_x01_curs CURSOR FOR apsr006_x01_prepare
 
END FUNCTION
 
{</section>}
 
{<section id="apsr006_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION apsr006_x01_ins_data()
DEFINE sr RECORD 
   psosent LIKE psos_t.psosent, 
   psossite LIKE psos_t.psossite, 
   psos001 LIKE psos_t.psos001, 
   psos002 LIKE psos_t.psos002, 
   psot003 LIKE psot_t.psot003, 
   psot024 LIKE psot_t.psot024, 
   l_psot024_desc LIKE imaal_t.imaal003, 
   l_psot024_desc_1 LIKE imaal_t.imaal004, 
   psos005 LIKE psos_t.psos005, 
   psos012 LIKE psos_t.psos012, 
   psos011 LIKE psos_t.psos011, 
   psot011 LIKE psot_t.psot011, 
   psot020 LIKE psot_t.psot020, 
   l_psot020_desc LIKE imaal_t.imaal003, 
   l_psot020_desc_1 LIKE imaal_t.imaal004, 
   psot015 LIKE psot_t.psot015, 
   l_psot015_desc LIKE imaal_t.imaal003, 
   l_psot015_desc_1 LIKE imaal_t.imaal004, 
   psot012 LIKE psot_t.psot012, 
   psos021 LIKE psos_t.psos021
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"

#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"

#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH apsr006_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.psot003,sr.psot024,sr.l_psot024_desc,sr.l_psot024_desc_1,sr.psos005,sr.psos012,sr.psos011,sr.psot011,sr.psot020,sr.l_psot020_desc,sr.l_psot020_desc_1,sr.psot015,sr.l_psot015_desc,sr.l_psot015_desc_1,sr.psot012,sr.psos021
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "apsr006_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    
    #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="apsr006_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION apsr006_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"

#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"

#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    
    #end add-point:rep_data.after
END FUNCTION
 
{</section>}
 
{<section id="apsr006_x01.other_function" readonly="Y" >}

 
{</section>}
 
