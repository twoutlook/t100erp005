#該程式未解開Section, 採用最新樣板產出!
{<section id="apsp630.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0010(2016-05-31 14:38:13), PR版次:0010(2016-10-26 19:06:42)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000149
#+ Filename...: apsp630
#+ Description: APS工單變更整批調整作業
#+ Creator....: 01588(2014-05-21 18:37:24)
#+ Modifier...: 05384 -SD/PR- 04441
 
{</section>}
 
{<section id="apsp630.global" >}
#應用 p02 樣板自動產生(Version:19)
#add-point:填寫註解說明
#151209-00022#4   2015/12/18  by Sarah    增加二次篩選功能
#160318-00005#41  2016/04/01  by pengxin  修正azzi920重复定义之错误讯息
#160318-00025#50  2016/04/27  By 07673    將重複內容的錯誤訊息置換為公用錯誤訊息
#160414-00020#1   2016/05/31  By shiun    工單開工日sfka019請預設psos_t.psos012 
#160608-00013#3   2016/06/21  By ming     執行process時，先檢查有無新版本，有的話，跳出錯誤訊息「該APS版本：%1已有新一版本資料，請重新查詢後再進行處理」
#161024-00057#16  2016/10/26  By Whitney  刪除sfae_t、sfad_t、sfke_t、sfkd_t相關程式
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc" 
#add-point:增加匯入變數檔
#
##end add-point
 
#模組變數(Module Variables)
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10              
DEFINE l_ac_d               LIKE type_t.num10             #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num10             #目前所在頁數
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num10
 
TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
        psos001          LIKE psos_t.psos001,   #APS版本
        a1               LIKE type_t.chr1,      #顯示已發料資料
        b1               LIKE type_t.chr1,      #顯示已完工資料
        c1               LIKE type_t.chr1,      #顯示已變更資料
   #end add-point
        wc               STRING
                     END RECORD
 
TYPE type_g_detail_d RECORD
#add-point:自定義模組變數(Module Variable)  #注意要在add-point內寫入END RECORD
        sel                LIKE type_t.chr1,        #選擇
        sfaadocno          LIKE sfaa_t.sfaadocno,   #工單單號
        sfaa057            LIKE sfaa_t.sfaa057,     #委外型態
        sfaastus           LIKE sfaa_t.sfaastus,    #工單狀態
        sfaa010            LIKE sfaa_t.sfaa010,     #料件編號
        imaal003           LIKE imaal_t.imaal003,   #品名
        imaal004           LIKE imaal_t.imaal004,   #規格
        imaf013            LIKE imaf_t.imaf013,     #補給策略
        imaa009            LIKE imaa_t.imaa009,     #產品分類
        imaa009_desc       LIKE type_t.chr80,       #產品分類說明
        imae011            LIKE imae_t.imae011,     #生管分類
        imae011_desc       LIKE type_t.chr80,       #生管分類說明
        sfaa013            LIKE sfaa_t.sfaa013,     #單位
        sfaa013_desc       LIKE type_t.chr80,       #單位說明
        sfaa012            LIKE sfaa_t.sfaa012,     #原生產數量
        psos036            LIKE psos_t.psos036,     #建議生產量
        sfaa049            LIKE sfaa_t.sfaa049,     #已發料套數
        qty1               LIKE sfaa_t.sfaa050,     #已入庫數量
        sfaa020            LIKE sfaa_t.sfaa020,     #原完工日
        psos011            LIKE psos_t.psos011,     #建議完工日
        sfaa002            LIKE sfaa_t.sfaa002,     #生管員
        sfaa002_desc       LIKE type_t.chr80,       #生管員姓名
        imae012            LIKE imae_t.imae012,     #計畫員
        imae012_desc       LIKE type_t.chr80,       #計畫員姓名
        psos057            LIKE psos_t.psos057,     #已產生變更單
        psos058            LIKE psos_t.psos058,     #產生更工單變更單
        psos012            LIKE psos_t.psos012      #預計開工日
                           END RECORD
                         
TYPE type_g_detail2_d      RECORD
        sfacseq            LIKE sfac_t.sfacseq,     #項次
        sfac002            LIKE sfac_t.sfac002,     #類型
        sfac001            LIKE sfac_t.sfac001,     #料件編號
        sfac001_desc       LIKE imaal_t.imaal003,   #品名
        sfac001_desc_desc  LIKE imaal_t.imaal004,   #規格
        sfac006            LIKE sfac_t.sfac006,     #產品特徵
        sfac006_desc       LIKE type_t.chr500,      #特徵值說明
        sfac003            LIKE sfac_t.sfac003,     #原數量
        psox012            LIKE psox_t.psox012      #建議數量
                           END RECORD
   
DEFINE g_param             type_parameter
DEFINE g_detail_idx        LIKE type_t.num5
DEFINE g_detail2_idx       LIKE type_t.num5
DEFINE g_detail2_cnt       LIKE type_t.num5
DEFINE g_detail2_d         DYNAMIC ARRAY OF type_g_detail2_d 
DEFINE g_psos002           LIKE psos_t.psos002
DEFINE g_sfka900           LIKE sfka_t.sfka900
DEFINE g_change_qty        LIKE type_t.num5         #生產數量是否變更
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
DEFINE g_detail_cnt         LIKE type_t.num10              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
 
#add-point:傳入參數說明

#end add-point
 
{</section>}
 
{<section id="apsp630.main" >}
#+ 作業開始 
MAIN
   DEFINE ls_js  STRING
   #add-point:main段define
   
   #end add-point   
   #add-point:main段define
   
   #end add-point   
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aps","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apsp630 WITH FORM cl_ap_formpath("aps",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apsp630_init()   
 
      #進入選單 Menu (="N")
      CALL apsp630_ui_dialog() 
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_apsp630
   END IF 
   
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="apsp630.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION apsp630_init()
   #add-point:init段define
   
   #end add-point   
   #add-point:init段define
   
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
 
   #add-point:畫面資料初始化
   LET g_param.a1 = 'N'
   LET g_param.b1 = 'N'
   LET g_param.c1 = 'N'
   CALL cl_set_combo_scc_part('sfaastus','13','F,Y')
   CALL cl_set_combo_scc('b_sfaa057','4010')
   CALL cl_set_combo_scc_part('b_sfaastus','13','F,Y')
   CALL cl_set_combo_scc('b_imaf013','2022')
   CALL cl_set_combo_scc('b_sfac002','4019')
   LET g_detail_idx = 1
   LET g_bgjob = 'N'
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="apsp630.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION apsp630_ui_dialog()
   DEFINE li_idx   LIKE type_t.num10
   #add-point:ui_dialog段define
   DEFINE ls_result  STRING
   #end add-point 
   #add-point:ui_dialog段define
   
   #end add-point 
   
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   LET g_detail_cnt = g_detail_d.getLength()
   #add-point:ui_dialog段before dialog 
   
   #end add-point
   
   WHILE TRUE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_detail_d.clear()
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL apsp630_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct
         CONSTRUCT BY NAME g_param.wc ON sfaa002,imae012,psos012,psos011,imaa009,imae011,
                                         sfaastus,psos054
            
            AFTER FIELD psos012
               CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
               IF NOT cl_null(ls_result) THEN
                  IF NOT cl_chk_date_symbol(ls_result) THEN
                     LET ls_result = cl_add_date_extra_cond(ls_result)
                  END IF
               END IF
               CALL FGL_DIALOG_SETBUFFER(ls_result)
            
            AFTER FIELD psos011
               CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
               IF NOT cl_null(ls_result) THEN
                  IF NOT cl_chk_date_symbol(ls_result) THEN
                     LET ls_result = cl_add_date_extra_cond(ls_result)
                  END IF
               END IF
               CALL FGL_DIALOG_SETBUFFER(ls_result)
            
            ON ACTION controlp INFIELD sfaa002
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooag001()
               DISPLAY g_qryparam.return1 TO sfaa002
               NEXT FIELD sfaa002
            
            ON ACTION controlp INFIELD imae012
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooag001()
               DISPLAY g_qryparam.return1 TO imae012
               NEXT FIELD imae012
         
            ON ACTION controlp INFIELD imaa009
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_rtax001()
               DISPLAY g_qryparam.return1 TO imaa009
               NEXT FIELD imaa009
               
            ON ACTION controlp INFIELD imae011
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_imcf011()
               DISPLAY g_qryparam.return1 TO imae011
               NEXT FIELD imae011
               
            ON ACTION controlp INFIELD psos054
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_imaf001()
               DISPLAY g_qryparam.return1 TO psos054
               NEXT FIELD psos054
         END CONSTRUCT
         #end add-point
         #add-point:ui_dialog段input
         INPUT BY NAME g_param.psos001 ATTRIBUTE(WITHOUT DEFAULTS)
         
            AFTER FIELD psos001
               DISPLAY '' TO psos001_desc
               IF NOT cl_null(g_param.psos001) THEN
                  IF NOT apsp630_psos001_chk(g_param.psos001) THEN
                     LET g_param.psos001 = ''
                     DISPLAY BY NAME g_param.psos001
                     DISPLAY '' TO psos001_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL apsp630_psos001_ref()
         
            ON ACTION controlp INFIELD psos001
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_param.psos001
               LET g_qryparam.where = " pscasite = '",g_site,"'"
               CALL q_psca001()
               LET g_param.psos001 = g_qryparam.return1
               DISPLAY BY NAME g_param.psos001
               CALL apsp630_psos001_ref()
               NEXT FIELD psos001
         END INPUT
         
         INPUT BY NAME g_param.a1,g_param.b1,g_param.c1 ATTRIBUTE(WITHOUT DEFAULTS)
            BEFORE INPUT
            
         END INPUT
         
         INPUT ARRAY g_detail_d FROM s_detail1.*
            ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                    INSERT ROW = FALSE,
                    DELETE ROW = FALSE,
                    APPEND ROW = FALSE)
            BEFORE INPUT
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")

            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               CALL apsp630_fetch()
               
            ON CHANGE b_sel
               IF g_detail_d[g_detail_idx].psos057 = 'Y' THEN
                  IF g_detail_d[g_detail_idx].sel = 'Y' THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'aps-00103'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                     LET g_detail_d[g_detail_idx].sel = 'N'
                  END IF
               END IF
         END INPUT
         #end add-point
         #add-point:ui_dialog段自定義display array
         DISPLAY ARRAY g_detail2_d TO s_detail2.* ATTRIBUTES(COUNT=g_detail2_cnt)
            BEFORE ROW
               LET g_detail2_idx = DIALOG.getCurrentRow("s_detail2")

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail2_idx)
               LET g_detail2_idx = DIALOG.getCurrentRow("s_detail2")
         END DISPLAY
         
         #end add-point
 
         BEFORE DIALOG
            IF g_detail_d.getLength() > 0 THEN
               CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
            ELSE
               CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            END IF
            #add-point:ui_dialog段before_dialog2
            
            #end add-point
 
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            #add-point:ui_dialog段on action selall
            
            #end add-point            
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "Y"
               #add-point:ui_dialog段on action selall
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selall
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF g_detail_d[li_idx].psos057 = 'Y' THEN
                   LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "N"
               #add-point:ui_dialog段on action selnone
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selnone
            
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "Y"
               END IF
            END FOR
            #add-point:ui_dialog段on action sel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  IF g_detail_d[li_idx].psos057 = 'Y' THEN
                     LET g_detail_d[li_idx].sel = "N"
                  END IF
               END IF
            END FOR
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR
            #add-point:ui_dialog段on action unsel
            
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL apsp630_filter()
            #add-point:ON ACTION filter
            
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION accept
            #add-point:ui_dialog段accept之前
            
            #end add-point
            CALL apsp630_query()
             
         # 條件清除
         ON ACTION qbeclear
            #add-point:ui_dialog段
           #151209-00022#4 add -----(S)
            LET g_wc_filter = '1=1'
            CALL apsp630_b_fill()
           #151209-00022#4 add -----(E)
            #end add-point
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            #add-point:ui_dialog段datarefresh
            
            #end add-point
            CALL apsp630_b_fill()
 
         #add-point:ui_dialog段action
         ON ACTION batch_execute
            CALL apsp630_batch_execute()
            CALL apsp630_query()
            CONTINUE DIALOG
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
 
{</section>}
 
{<section id="apsp630.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION apsp630_query()
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   
   #end add-point 
   #add-point:query段define
   
   #end add-point 
    
   #add-point:cs段after_construct
   IF cl_null(g_param.psos001) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'aps-00102'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   #end add-point
        
   LET g_error_show = 1
   CALL apsp630_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END IF
   
   #add-point:cs段after_query
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="apsp630.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION apsp630_b_fill()
 
   DEFINE ls_wc           STRING
   #add-point:b_fill段define
   DEFINE l_success       LIKE type_t.num5
   #end add-point
   #add-point:b_fill段define
   
   #end add-point
 
   #add-point:b_fill段sql_before
   IF cl_null(g_param.wc) THEN
      LET g_param.wc = " 1=1"
   END IF
  
  #151209-00022#4 add -----(S)
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
  #151209-00022#4 add -----(E)
   
   LET g_psos002 = ''
   SELECT MAX(psos002) INTO g_psos002
     FROM psos_t
    WHERE psosent = g_enterprise
      AND psossite= g_site
      AND psos001 = g_param.psos001
      AND psos009 = '0'
      
   CALL apsp630_create_temptable()
        RETURNING l_success
   IF NOT l_success THEN
      RETURN
   END IF
   
   LET g_sql = "SELECT 'N',sfaadocno,sfaa057,sfaastus,sfaa010,imaal003,imaal004,imaf013,imaa009,'', ",
               "       imae011,'',sfaa013,oocal003,sfaa012,psos036,sfaa049,sfaa050+sfaa051,sfaa020, ",
               "       psos011,sfaa002,ooag011,imae012,'',psos057,psos058 ",
               "       ,psos012 ",   #add--160414-00020#1 By shiun
               "  FROM psos_t,sfaa_t ",
               "       LEFT JOIN imaal_t ON imaalent = sfaaent AND imaal001 = sfaa010 AND imaal002 = '",g_dlang,"'",
               "       LEFT JOIN imaa_t  ON imaaent = sfaaent AND imaa001 = sfaa010 ",
               "       LEFT JOIN imaf_t  ON imafent = sfaaent AND imafsite = sfaasite AND imaf001 = sfaa010 ",
               "       LEFT JOIN imae_t  ON imaeent = sfaaent AND imaesite = sfaasite AND imae001 = sfaa010 ",
               "       LEFT JOIN oocal_t ON oocalent = sfaaent AND oocal001 = sfaa013 AND oocal002 = '",g_dlang,"'",
               "       LEFT JOIN ooag_t  ON ooagent = sfaaent AND ooag001 = sfaa002 ",
               " WHERE psosent = ? ",
               "   AND sfaaent = psosent ",
               "   AND psossite='",g_site,"'",
               "   AND sfaasite= psossite ",
               "   AND sfaadocno = psos004 ",
               "   AND psos001 = '",g_param.psos001,"'",
               "   AND psos002 = '",g_psos002,"'",
               "   AND psos009 = 0 ",   #建議單據(is_new)
               "   AND sfaastus IN ('F','Y') ",
               "   AND ",g_param.wc CLIPPED,
               "   AND ",g_wc_filter CLIPPED,   #151209-00022#4 add
               "   AND (sfaa012 <> psos036 OR sfaa020 <> psos011) "   #151224-00028 by stellar add
   IF g_param.a1 = 'N' THEN
      LET g_sql = g_sql CLIPPED," AND sfaa045 IS NULL "
   END IF
   IF g_param.b1 = 'N' THEN
      LET g_sql = g_sql CLIPPED," AND sfaa046 IS NULL "
   END IF
   IF g_param.c1 = 'N' THEN
      LET g_sql = g_sql CLIPPED," AND (psos057 = 'N' OR psos057 IS NULL)"
   END IF
   LET g_sql = g_sql CLIPPED," ORDER BY sfaadocno "   
   #end add-point
 
   PREPARE apsp630_sel FROM g_sql
   DECLARE b_fill_curs CURSOR FOR apsp630_sel
   
   CALL g_detail_d.clear()
   #add-point:b_fill段其他頁簽清空
   CALL g_detail2_d.clear()
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs USING g_enterprise INTO 
   #add-point:b_fill段foreach_into
      g_detail_d[l_ac].sel,g_detail_d[l_ac].sfaadocno,g_detail_d[l_ac].sfaa057,
      g_detail_d[l_ac].sfaastus,g_detail_d[l_ac].sfaa010,g_detail_d[l_ac].imaal003,
      g_detail_d[l_ac].imaal004,g_detail_d[l_ac].imaf013,g_detail_d[l_ac].imaa009,
      g_detail_d[l_ac].imaa009_desc,g_detail_d[l_ac].imae011,g_detail_d[l_ac].imae011_desc,
      g_detail_d[l_ac].sfaa013,g_detail_d[l_ac].sfaa013_desc,g_detail_d[l_ac].sfaa012,
      g_detail_d[l_ac].psos036,g_detail_d[l_ac].sfaa049,g_detail_d[l_ac].qty1,
      g_detail_d[l_ac].sfaa020,g_detail_d[l_ac].psos011,g_detail_d[l_ac].sfaa002,
      g_detail_d[l_ac].sfaa002_desc,g_detail_d[l_ac].imae012,g_detail_d[l_ac].imae012_desc,
      g_detail_d[l_ac].psos057,g_detail_d[l_ac].psos058,g_detail_d[l_ac].psos012   #mod--160414-00020#1 By shiun  新增psos012
   #end add-point
   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充
      #抓取生產料號明細到temp table
      CALL apsp630_sel_date_into_temptable()
      #end add-point
      
      CALL apsp630_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   #add-point:b_fill段資料填充(其他單身)
   CALL g_detail_d.deleteElement(g_detail_d.getLength())
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE apsp630_sel
   
   LET l_ac = 1
   CALL apsp630_fetch()
   #add-point:b_fill段資料填充(其他單身)
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="apsp630.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION apsp630_fetch()
 
   DEFINE li_ac           LIKE type_t.num10
   #add-point:fetch段define
   DEFINE l_success       LIKE type_t.num5
   #end add-point
   #add-point:fetch段define
   
   #end add-point
   
   LET li_ac = l_ac 
   
   #add-point:單身填充後
   IF g_detail_idx > g_detail_cnt THEN
      LET g_detail_idx = g_detail_cnt
   END IF
   
   IF cl_null(g_detail_idx) OR g_detail_idx <= 0 THEN
      RETURN
   END IF

   DECLARE apsp630_fetch_cs CURSOR FOR
    SELECT sfacseq,sfac002,sfac001,imaal003,imaal004,sfac006,sfac003,psox012
      FROM apsp630_tmp
           LEFT OUTER JOIN imaal_t ON imaalent = g_enterprise AND imaal001 = sfac001 AND imaal002 = g_dlang
     WHERE sfacdocno = g_detail_d[g_detail_idx].sfaadocno
    ORDER BY sfacseq
     
   LET l_ac = 1
   CALL g_detail2_d.clear()
   FOREACH apsp630_fetch_cs INTO g_detail2_d[l_ac].sfacseq,g_detail2_d[l_ac].sfac002,g_detail2_d[l_ac].sfac001,
                                 g_detail2_d[l_ac].sfac001_desc,g_detail2_d[l_ac].sfac001_desc_desc,
                                 g_detail2_d[l_ac].sfac006,g_detail2_d[l_ac].sfac003,g_detail2_d[l_ac].psox012
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH apsp630_fetch_cs:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
      CALL s_feature_description(g_detail2_d[l_ac].sfac001,g_detail2_d[l_ac].sfac006)
           RETURNING l_success,g_detail2_d[l_ac].sfac006_desc
      
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ""
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
   END FOREACH
   
   LET g_detail2_cnt = l_ac - 1
   CALL g_detail2_d.deleteElement(g_detail2_d.getLength())
   
   #end add-point 
   
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="apsp630.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION apsp630_detail_show()
   #add-point:show段define
   
   #end add-point
   #add-point:show段define
   
   #end add-point
   
   #add-point:detail_show段
   #產品分類說明
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_detail_d[l_ac].imaa009
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_lang||"'",
        "") RETURNING g_rtn_fields
   LET g_detail_d[l_ac].imaa009_desc = '', g_rtn_fields[1] , ''
   
   #生管分類說明
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_detail_d[l_ac].imae011
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='204' AND oocql002=? AND oocql003='"||g_lang||"'",
        "") RETURNING g_rtn_fields
   LET g_detail_d[l_ac].imae011_desc = '', g_rtn_fields[1] , ''
   
   #計劃員全名
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_detail_d[l_ac].imae012
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ",
        "") RETURNING g_rtn_fields
   LET g_detail_d[l_ac].imae012_desc = '', g_rtn_fields[1] , ''
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="apsp630.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION apsp630_filter()
   #add-point:filter段define
{
   #end add-point    
   #add-point:filter段define
   
   #end add-point    
   
   DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
      ON UPDATE
 
   END DISPLAY
 
   LET l_ac = 1
   LET g_detail_cnt = 1
   #add-point:filter段define
}
  #151209-00022#4 add -----(S)
   CONSTRUCT g_wc_filter ON sfaadocno,sfaa057,sfaastus,sfaa010,
                            imaf013,imaa009,imae011,sfaa013,sfaa012,
                            psos036,sfaa049,sfaa020,psos011,sfaa002,
                            imae012
        FROM s_detail1[1].b_sfaadocno,s_detail1[1].b_sfaa057,s_detail1[1].b_sfaastus,s_detail1[1].b_sfaa010,
             s_detail1[1].b_imaf013,s_detail1[1].b_imaa009,s_detail1[1].b_imae011,s_detail1[1].b_sfaa013,s_detail1[1].b_sfaa012,
             s_detail1[1].b_psos036,s_detail1[1].b_sfaa049,s_detail1[1].b_sfaa020,s_detail1[1].b_psos011,s_detail1[1].b_sfaa002,
             s_detail1[1].b_imae012

      BEFORE CONSTRUCT      

      ON ACTION controlp INFIELD b_sfaadocno        #工單單號
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         LET g_qryparam.where = " sfaasite = '",g_site,"'"
         CALL q_sfaadocno_1()                       #呼叫開窗
         DISPLAY g_qryparam.return1 TO b_sfaadocno  #顯示到畫面上
         NEXT FIELD b_sfaadocno                     #返回原欄位

      ON ACTION controlp INFIELD b_sfaa010          #料件編號
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         CALL q_imaa001_9()                         #呼叫開窗
         DISPLAY g_qryparam.return1 TO b_sfaa010    #顯示到畫面上
         NEXT FIELD b_sfaa010                       #返回原欄位

      ON ACTION controlp INFIELD b_imaa009          #產品分類
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         CALL q_rtax001()                           #呼叫開窗
         DISPLAY g_qryparam.return1 TO b_imaa009    #顯示到畫面上
         NEXT FIELD b_imaa009                       #返回原欄位

      ON ACTION controlp INFIELD b_imae011          #生管分類
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         CALL q_imcf011()                           #呼叫開窗
         DISPLAY g_qryparam.return1 TO b_imae011    #顯示到畫面上
         NEXT FIELD b_imae011                       #返回原欄位

      ON ACTION controlp INFIELD b_sfaa013          #單位
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         CALL q_ooca001_1()                         #呼叫開窗
         DISPLAY g_qryparam.return1 TO b_sfaa013    #顯示到畫面上
         NEXT FIELD b_sfaa013                       #返回原欄位

      ON ACTION controlp INFIELD b_sfaa002          #生管員
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         CALL q_ooag001()                           #呼叫開窗
         DISPLAY g_qryparam.return1 TO b_sfaa002    #顯示到畫面上
         NEXT FIELD b_sfaa002                       #返回原欄位

      ON ACTION controlp INFIELD b_imae012          #計畫員
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         CALL q_ooag001()                           #呼叫開窗
         DISPLAY g_qryparam.return1 TO b_imae012    #顯示到畫面上
         NEXT FIELD b_imae012                       #返回原欄位
      
   END CONSTRUCT
  #151209-00022#4 add -----(E)
   #end add-point    
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
   
   CALL apsp630_b_fill()
   
END FUNCTION
 
{</section>}
 
{<section id="apsp630.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION apsp630_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   
   #end add-point    
   #add-point:filter段define
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="apsp630.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION apsp630_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = apsp630_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="apsp630.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

################################################################################
# Descriptions...: APS校驗
# Memo...........:
# Usage..........: CALL apsp630_psos001_chk(p_psos001)
#                  RETURNING r_success
# Input parameter: p_psos001      APS版本
#                : 
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 2014/05/23 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp630_psos001_chk(p_psos001)
DEFINE p_psos001         LIKE psos_t.psos001
DEFINE r_success         LIKE type_t.num5

   LET r_success = TRUE
   
   IF cl_null(p_psos001) THEN
      RETURN r_success
   END IF

   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = p_psos001
   LET g_errshow = TRUE   #160318-00025#50
   LET g_chkparam.err_str[1] = "aps-00074:sub-01302|apsi002|",cl_get_progname("apsi002",g_lang,"2"),"|:EXEPROGapsi002"    #160318-00025#50
   IF NOT cl_chk_exist("v_psca001") THEN
      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: APS版本說明
# Memo...........:
# Usage..........: CALL apsp630_psos001_ref()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 2014/05/23 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp630_psos001_ref()
DEFINE l_psos001_desc    LIKE type_t.chr80

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_param.psos001
   CALL ap_ref_array2(g_ref_fields,"SELECT pscal003 FROM pscal_t WHERE pscalent='"||g_enterprise||"' AND pscalsite='"||g_site||"' AND pscal001=? AND pscal002='"||g_lang||"'",
       "") RETURNING g_rtn_fields
   LET l_psos001_desc = '', g_rtn_fields[1] , ''
   DISPLAY l_psos001_desc TO psos001_desc
END FUNCTION

################################################################################
# Descriptions...: Create Temp Table
# Memo...........:
# Usage..........: CALL apsp630_create_temptable()
#                       RETURNING r_success
# Input parameter: 
#                : 
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 2014/05/23 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp630_create_temptable()
DEFINE r_success         LIKE type_t.num5

   LET r_success = TRUE
   
   DROP TABLE apsp630_tmp
   CREATE TEMP TABLE apsp630_tmp(
      sfacdocno      LIKE sfac_t.sfacdocno,
      sfacseq        LIKE sfac_t.sfacseq,
      sfac001        LIKE sfac_t.sfac001,
      sfac002        LIKE sfac_t.sfac002,
      sfac003        LIKE sfac_t.sfac003,
      sfac006        LIKE sfac_t.sfac006,
      psox012        LIKE psox_t.psox012)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'create apsp630_tmp'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 抓取psos_t及sfaa_t的所有資料
# Memo...........:
# Usage..........: CALL apsp630_sel_date_into_temptable()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 2014/05/23 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp630_sel_date_into_temptable()
DEFINE l_sfacseq         LIKE sfac_t.sfacseq
DEFINE l_sfac001         LIKE sfac_t.sfac001
DEFINE l_sfac002         LIKE sfac_t.sfac002
DEFINE l_sfac003         LIKE sfac_t.sfac003
DEFINE l_sfac006         LIKE sfac_t.sfac006
DEFINE l_psox012         LIKE psox_t.psox012
DEFINE l_cnt             LIKE type_t.num5

                      #項次、料件編號、類型、原數量、產品特徵
   LET g_sql = "SELECT sfacseq,sfac001,sfac002,sfac003,sfac006 ",
               "  FROM sfac_t ",
               " WHERE sfacent = ",g_enterprise,
               "   AND sfacdocno = '",g_detail_d[l_ac].sfaadocno,"'",
               " ORDER BY sfacseq "
   
   PREPARE apsp630_tmp_pre FROM g_sql
   DECLARE apsp630_tmp_cs CURSOR FOR apsp630_tmp_pre
   
   FOREACH apsp630_tmp_cs INTO l_sfacseq,l_sfac001,l_sfac002,l_sfac003,l_sfac006
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH apsp630_tmp_cs:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      LET l_psox012 = 0
      
      INSERT INTO apsp630_tmp(sfacdocno,sfacseq,sfac001,sfac002,sfac003,sfac006,psox012)
         VALUES(g_detail_d[l_ac].sfaadocno,l_sfacseq,l_sfac001,l_sfac002,l_sfac003,l_sfac006,l_psox012)
      IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'ins apsp630_tmp'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
   END FOREACH
      
                      #料號、產品特徵、類型、建議數量
   LET g_sql = "SELECT psox004,psox005,psox006,psox012 ",
               "  FROM psox_t ",
               " WHERE psoxent = ",g_enterprise,
               "   AND psox001 = '",g_param.psos001,"'",
               "   AND psox002 = '",g_psos002,"'",
               "   AND psox003 = '",g_detail_d[l_ac].sfaadocno,"'"
   
   PREPARE apsp630_tmp_pre1 FROM g_sql
   DECLARE apsp630_tmp_cs1 CURSOR FOR apsp630_tmp_pre1
   
   FOREACH apsp630_tmp_cs1 INTO l_sfac001,l_sfac006,l_sfac002,l_psox012
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH apsp630_tmp_cs1:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt FROM apsp630_tmp
       WHERE sfacdocno = g_detail_d[l_ac].sfaadocno
         AND sfac001 = l_sfac001
         AND sfac006 = l_sfac006
      IF cl_null(l_cnt) OR l_cnt <= 0 THEN
         LET l_sfacseq = 1
         SELECT MAX(sfacseq)+1 INTO l_sfacseq
           FROM apsp630_tmp
          WHERE sfacdocno = g_detail_d[l_ac].sfaadocno
         IF cl_null(l_sfacseq) THEN
            LET l_sfacseq = 1
         END IF
         
         LET l_sfac003 = 0
         
         INSERT INTO apsp630_tmp(sfacdocno,sfacseq,sfac001,sfac002,sfac003,sfac006,psox012)
            VALUES(g_detail_d[l_ac].sfaadocno,l_sfacseq,l_sfac001,l_sfac002,l_sfac003,l_sfac006,l_psox012)
         IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'ins apsp630_tmp'
            LET g_errparam.popup = TRUE
            CALL cl_err()
   
            EXIT FOREACH
         END IF
      ELSE
         UPDATE apsp630_tmp SET psox012 = l_psox012
          WHERE sfacdocno = g_detail_d[l_ac].sfaadocno
            AND sfac001 = l_sfac001
            AND sfac006 = l_sfac006
         IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'upd apsp630_tmp'
            LET g_errparam.popup = TRUE
            CALL cl_err()
   
            EXIT FOREACH
         END IF
      END IF
   END FOREACH
      
END FUNCTION

################################################################################
# Descriptions...: 批次作業
# Memo...........:
# Usage..........: CALL apsp630_batch_execute()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 2014/05/27 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp630_batch_execute()
DEFINE l_sel_cnt         LIKE type_t.num5
DEFINE l_tot_success     LIKE type_t.num5
DEFINE l_success         LIKE type_t.num5
DEFINE l_cnt             LIKE type_t.num5
DEFINE l_str             STRING
DEFINE ls_js             STRING
DEFINE lc_param          type_parameter
DEFINE la_param          RECORD
          prog           STRING,
          param          DYNAMIC ARRAY OF STRING
                         END RECORD 
   #160608-00013#3 20160621 add by ming -----(S) 
   DEFINE l_max_psos002  LIKE psos_t.psos002 
   #160608-00013#3 20160621 add by ming -----(E) 
                         
   #160608-00013#3 20160621 add by ming -----(S) 
   LET l_max_psos002 = '' 
   SELECT MAX(psos002) INTO l_max_psos002 
     FROM psos_t
    WHERE psosent  = g_enterprise
      AND psossite = g_site
      AND psos001  = g_param.psos001
      AND psos009  = '0'
      
   IF l_max_psos002 <> g_psos002 THEN 
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 'aps-00189' 
      LET g_errparam.popup  = TRUE 
      LET g_errparam.replace[1] = g_param.psos001 
      CALL cl_err() 
      
      RETURN 
   END IF 
   #160608-00013#3 20160621 add by ming -----(E) 
        
   LET l_sel_cnt = 0
   LET l_tot_success = TRUE
   LET l_success = TRUE
   LET l_str = ''
   CALL s_transaction_begin()
   CALL cl_err_collect_init()
   LET g_coll_title[1] = cl_getmsg('axc-00261',g_lang)
#   LET g_coll_title[2] = cl_getmsg('axm-00008',g_lang)      #160318-00005#41  mark
   LET g_coll_title[2] = cl_getmsg('anm-00225',g_lang)      #160318-00005#41  add
   
   FOR l_ac = 1 TO g_detail_d.getLength()
      IF g_detail_d[l_ac].sel = 'N' THEN
         CONTINUE FOR
      END IF
   
      IF NOT l_success THEN
         LET l_tot_success = FALSE
      END IF
      LET l_success = TRUE
      
      #累計選擇'Y'的筆數
      LET l_sel_cnt = l_sel_cnt + 1
      
      #針對選擇'Y'的資料做處理
      #檢查是否已有未確認的工單變更單
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt 
        FROM sfka_t
       WHERE sfkaent = g_enterprise
         AND sfkadocno = g_detail_d[l_ac].sfaadocno
         AND sfkastus = 'N'
      IF NOT cl_null(l_cnt) AND l_cnt > 0 THEN
         LET l_success = FALSE
         INITIALIZE g_errparam.* TO NULL
         LET g_errparam.code = 'asf-00294'
         LET g_errparam.extend = ''
         LET g_errparam.coll_vals[1] = g_detail_d[l_ac].sfaadocno
         CALL cl_err()
         CONTINUE FOR
      END IF
      
      #產生工單變更單
      CALL apsp630_asft800_gen()
           RETURNING l_success
      IF NOT l_success THEN
         CONTINUE FOR
      END IF
      
      #更新已轉單據='Y'、產生工單單號=sfaadocno
      UPDATE psos_t SET psos057 = 'Y',
                        psos058 = g_detail_d[l_ac].sfaadocno
       WHERE psosent = g_enterprise
         AND psossite= g_site
         AND psos001 = g_param.psos001
         AND psos002 = g_psos002
         AND psos004 = g_detail_d[l_ac].sfaadocno
      IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
         LET l_success = FALSE
         INITIALIZE g_errparam.* TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'upd psos_t'
         LET g_errparam.coll_vals[1] = g_detail_d[l_ac].sfaadocno
         CALL cl_err()
         CONTINUE FOR
      END IF
      
      IF cl_null(l_str) THEN
         LET l_str = " (sfkadocno = '",g_detail_d[l_ac].sfaadocno,"' AND sfka900 = ",g_sfka900,") "
      ELSE
         LET l_str = l_str," OR (sfkadocno = '",g_detail_d[l_ac].sfaadocno,"' AND sfka900 = ",g_sfka900,") "
      END IF
   END FOR
   
   IF cl_null(l_sel_cnt) OR l_sel_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'afa-00063'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CALL cl_err_collect_show()
   LET l_success = l_tot_success
   
   IF l_success THEN
      CALL s_transaction_end('Y','0')
      IF NOT cl_null(l_str) THEN
         LET la_param.prog = 'asft800'
         LET la_param.param[1] = ''
         LET la_param.param[2] = ''
         LET la_param.param[3] = l_str
         LET ls_js = util.JSON.stringify(la_param )
         CALL cl_cmdrun_wait(ls_js)
      END IF
   ELSE
      CALL s_transaction_end('N','0')
   END IF
   
   IF g_bgjob = 'N' THEN
      CALL cl_ask_confirm3("std-00012","")
   ELSE
   END IF
END FUNCTION

################################################################################
# Descriptions...: 產生工單變更單
# Memo...........:
# Usage..........: CALL apsp630_asft800_gen()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 2014/05/27 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp630_asft800_gen()
DEFINE r_success         LIKE type_t.num5
DEFINE l_sfka012         LIKE sfka_t.sfka012
DEFINE l_sfka013         LIKE sfka_t.sfka013

   LET r_success = TRUE
   LET g_change_qty = FALSE
 
   #產生工單變更單單頭資料
   CALL apsp630_asft800_gen_sfka()
        RETURNING r_success
   IF NOT r_success THEN 
      RETURN r_success
   END IF
   
   #產生工單變更單工單來源資料
   CALL apsp630_asft800_gen_sfkb()
        RETURNING r_success
   IF NOT r_success THEN
      RETURN r_success
   END IF
   
   #產生工單變更單聯產品資料
   CALL apsp630_asft800_gen_sfkc()
        RETURNING r_success
   IF NOT r_success THEN
      RETURN r_success
   END IF
   
   #產生工單變更單商品序號資料
   CALL apsp630_asft800_gen_sfkf()
        RETURNING r_success
   IF NOT r_success THEN
      RETURN r_success
   END IF
   
   #產生工單變更單備料檔資料
   CALL apsp630_asft800_gen_sfkg()
        RETURNING r_success
   IF NOT r_success THEN
      RETURN r_success
   END IF
   
   #因生產數量改變，呼叫應用元件重新產生備料檔
   IF g_change_qty THEN
      LET l_sfka012 = 0
      SELECT sfka012,sfka013 INTO l_sfka012,l_sfka013
        FROM sfka_t
       WHERE sfkaent = g_enterprise
         AND sfkadocno = g_detail_d[l_ac].sfaadocno
         AND sfka900 = g_sfka900
      CALL s_asft800_upd_qty(g_detail_d[l_ac].sfaadocno,g_sfka900,l_sfka012,l_sfka013)
           RETURNING r_success
      IF NOT r_success THEN
         RETURN r_success
      END IF
   END IF
     
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 產生工單變更單單頭資料
# Memo...........:
# Usage..........: CALL apsp630_asft800_gen_sfka()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 2014/05/27 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp630_asft800_gen_sfka()
DEFINE r_success         LIKE type_t.num5
DEFINE l_sfaa            RECORD LIKE sfaa_t.*
DEFINE l_sfka            RECORD LIKE sfka_t.*
DEFINE l_current         DATETIME YEAR TO SECOND  #日期時間

   LET r_success = TRUE

   SELECT * INTO l_sfaa.* FROM sfaa_t 
    WHERE sfaaent = g_enterprise
      AND sfaadocno = g_detail_d[l_ac].sfaadocno
   
   LET l_sfka.sfkaent = g_enterprise
   LET l_sfka.sfkasite = g_site
   LET l_sfka.sfkadocno = l_sfaa.sfaadocno
   LET l_sfka.sfkadocdt = l_sfaa.sfaadocdt
   LET l_sfka.sfka001 = l_sfaa.sfaa001 + 1   #版本 = 目前[T:工單單頭檔].[C:版本]加1
   SELECT MAX(sfka900)+1 INTO l_sfka.sfka900 
     FROM sfka_t
    WHERE sfkaent = g_enterprise
      AND sfkadocno = l_sfka.sfkadocno
   IF cl_null(l_sfka.sfka900) THEN
      LET l_sfka.sfka900 = 1
   END IF
   LET g_sfka900 = l_sfka.sfka900
   LET l_sfka.sfka901 = 'N'
   LET l_sfka.sfka002 = l_sfaa.sfaa002
   LET l_sfka.sfka003 = l_sfaa.sfaa003
   LET l_sfka.sfka004 = l_sfaa.sfaa004
   LET l_sfka.sfka005 = l_sfaa.sfaa005
   LET l_sfka.sfka006 = l_sfaa.sfaa006
   LET l_sfka.sfka007 = l_sfaa.sfaa007
   LET l_sfka.sfka008 = l_sfaa.sfaa008
   LET l_sfka.sfka009 = l_sfaa.sfaa009
   LET l_sfka.sfka010 = l_sfaa.sfaa010
   LET l_sfka.sfka011 = l_sfaa.sfaa011
   #生產數量=畫面上的建議生產數量
   LET l_sfka.sfka012 = g_detail_d[l_ac].psos036
   IF l_sfaa.sfaa012 <> l_sfka.sfka012 THEN
      LET l_sfka.sfka901 = 'Y'
      
      CALL s_asft800_ins_sfkh(l_sfka.sfkadocno,0,0,g_sfka900,'sfaa012','1',l_sfaa.sfaa012,l_sfka.sfka012,'')
           RETURNING r_success
      IF NOT r_success THEN
         RETURN r_success
      END IF
      
      LET g_change_qty = TRUE
   END IF
   
   LET l_sfka.sfka013 = l_sfaa.sfaa013
   LET l_sfka.sfka014 = l_sfaa.sfaa014
   LET l_sfka.sfka015 = l_sfaa.sfaa015
   LET l_sfka.sfka016 = l_sfaa.sfaa016
   LET l_sfka.sfka017 = l_sfaa.sfaa017
   LET l_sfka.sfka018 = l_sfaa.sfaa018
   #mod--160414-00020#1 By shiun--(S)
#   LET l_sfka.sfka019 = l_sfaa.sfaa019
   LET l_sfka.sfka019 = g_detail_d[l_ac].psos012
   IF l_sfaa.sfaa019 <> l_sfka.sfka019 THEN
      LET l_sfka.sfka901 = 'Y'
      
      CALL s_asft800_ins_sfkh(l_sfka.sfkadocno,0,0,g_sfka900,'sfaa019','1',l_sfaa.sfaa019,l_sfka.sfka019,'')
           RETURNING r_success
      IF NOT r_success THEN
         RETURN r_success
      END IF
      
      LET g_change_qty = TRUE
   END IF
   #mod--160414-00020#1 By shiun--(E)
   #預計完工日=畫面上的建議完工日
   LET l_sfka.sfka020 = g_detail_d[l_ac].psos011
   IF l_sfaa.sfaa020 <> l_sfka.sfka020 THEN
      LET l_sfka.sfka901 = 'Y'
      CALL s_asft800_ins_sfkh(l_sfka.sfkadocno,0,0,g_sfka900,'sfaa020','1',l_sfaa.sfaa020,l_sfka.sfka020,'')
           RETURNING r_success
      IF NOT r_success THEN
         RETURN r_success
      END IF
   END IF
   
   LET l_sfka.sfka021 = l_sfaa.sfaa021
   LET l_sfka.sfka022 = l_sfaa.sfaa022
   LET l_sfka.sfka023 = l_sfaa.sfaa023
   LET l_sfka.sfka024 = l_sfaa.sfaa024
   LET l_sfka.sfka025 = l_sfaa.sfaa025
   LET l_sfka.sfka026 = l_sfaa.sfaa026
   LET l_sfka.sfka027 = l_sfaa.sfaa027
   LET l_sfka.sfka028 = l_sfaa.sfaa028
   LET l_sfka.sfka029 = l_sfaa.sfaa029
   LET l_sfka.sfka030 = l_sfaa.sfaa030
   LET l_sfka.sfka031 = l_sfaa.sfaa031
   LET l_sfka.sfka032 = l_sfaa.sfaa032
   LET l_sfka.sfka033 = l_sfaa.sfaa033
   LET l_sfka.sfka034 = l_sfaa.sfaa034
   LET l_sfka.sfka035 = l_sfaa.sfaa035
   LET l_sfka.sfka036 = l_sfaa.sfaa036
   LET l_sfka.sfka037 = l_sfaa.sfaa037
   LET l_sfka.sfka038 = l_sfaa.sfaa038
   LET l_sfka.sfka039 = l_sfaa.sfaa039
   LET l_sfka.sfka040 = l_sfaa.sfaa040
   LET l_sfka.sfka041 = l_sfaa.sfaa041
   LET l_sfka.sfka042 = l_sfaa.sfaa042
   LET l_sfka.sfka043 = l_sfaa.sfaa043
   LET l_sfka.sfka044 = l_sfaa.sfaa044
   LET l_sfka.sfka045 = l_sfaa.sfaa045
   LET l_sfka.sfka046 = l_sfaa.sfaa046
   LET l_sfka.sfka047 = l_sfaa.sfaa047
   LET l_sfka.sfka048 = l_sfaa.sfaa048
   LET l_sfka.sfka049 = l_sfaa.sfaa049
   LET l_sfka.sfka050 = l_sfaa.sfaa050
   LET l_sfka.sfka051 = l_sfaa.sfaa051
   LET l_sfka.sfka052 = l_sfaa.sfaa052
   LET l_sfka.sfka053 = l_sfaa.sfaa053
   LET l_sfka.sfka054 = l_sfaa.sfaa054
   LET l_sfka.sfka055 = l_sfaa.sfaa055
   LET l_sfka.sfka056 = l_sfaa.sfaa056
   LET l_sfka.sfka057 = l_sfaa.sfaa057
   LET l_sfka.sfka058 = l_sfaa.sfaa058
   LET l_sfka.sfka059 = l_sfaa.sfaa059
   LET l_sfka.sfka060 = l_sfaa.sfaa060
   LET l_sfka.sfka061 = l_sfaa.sfaa061
   LET l_sfka.sfka062 = l_sfaa.sfaa062
   LET l_sfka.sfka063 = l_sfaa.sfaa063
   LET l_sfka.sfka064 = l_sfaa.sfaa064
   LET l_sfka.sfka065 = l_sfaa.sfaa065
   LET l_sfka.sfka902 = g_today
   LET l_sfka.sfkaownid =  g_user
   LET l_sfka.sfkaowndp =  g_dept
   LET l_sfka.sfkacrtid =  g_user
   LET l_sfka.sfkacrtdp =  g_dept 
   LET l_sfka.sfkacrtdt =  ""
   LET l_sfka.sfkamodid =  g_user
   LET l_sfka.sfkamoddt =  ""
   LET l_sfka.sfkacnfid =  ""
   LET l_sfka.sfkacnfdt =  ""
   LET l_sfka.sfkapstid =  ""
   LET l_sfka.sfkapstdt =  ""
   LET l_sfka.sfkastus  =  "N"
   LET l_sfka.sfkaacti  =  "N"
   
   LET l_current = cl_get_current()

   INSERT INTO sfka_t
      (sfkaent,sfkasite,sfkadocno,sfka900,sfka901,sfka902,
       sfka001,sfka002,sfka003,sfka004,sfka005,sfka006,sfka007,sfka008,sfka009,sfka010,
       sfka011,sfka012,sfka013,sfka014,sfka015,sfka016,sfka017,sfka018,sfka019,sfka020,
       sfka021,sfka022,sfka023,sfka024,sfka025,sfka026,sfka027,sfka028,sfka029,sfka030,
       sfka031,sfka032,sfka033,sfka034,sfka035,sfka036,sfka037,sfka038,sfka039,sfka040,
       sfka041,sfka042,sfka043,sfka044,sfka045,sfka046,sfka047,sfka048,sfka049,sfka050,
       sfka051,sfka052,sfka053,sfka054,sfka055,sfka056,sfka057,sfka058,sfka059,sfka060,
       sfka061,sfka062,sfka063,sfka064,sfka065,
       sfkadocdt,sfkastus,sfkaacti,
       sfkaownid,sfkaowndp,sfkacrtid,sfkacrtdp,sfkacrtdt,sfkamodid,sfkamoddt,
       sfkacnfid,sfkacnfdt,sfkapstid,sfkapstdt)
      VALUES
      (l_sfka.sfkaent,l_sfka.sfkasite,l_sfka.sfkadocno,l_sfka.sfka900,l_sfka.sfka901,l_sfka.sfka902,
       l_sfka.sfka001,l_sfka.sfka002,l_sfka.sfka003,l_sfka.sfka004,l_sfka.sfka005,
       l_sfka.sfka006,l_sfka.sfka007,l_sfka.sfka008,l_sfka.sfka009,l_sfka.sfka010,
       l_sfka.sfka011,l_sfka.sfka012,l_sfka.sfka013,l_sfka.sfka014,l_sfka.sfka015,
       l_sfka.sfka016,l_sfka.sfka017,l_sfka.sfka018,l_sfka.sfka019,l_sfka.sfka020,
       l_sfka.sfka021,l_sfka.sfka022,l_sfka.sfka023,l_sfka.sfka024,l_sfka.sfka025,
       l_sfka.sfka026,l_sfka.sfka027,l_sfka.sfka028,l_sfka.sfka029,l_sfka.sfka030,
       l_sfka.sfka031,l_sfka.sfka032,l_sfka.sfka033,l_sfka.sfka034,l_sfka.sfka035,
       l_sfka.sfka036,l_sfka.sfka037,l_sfka.sfka038,l_sfka.sfka039,l_sfka.sfka040,
       l_sfka.sfka041,l_sfka.sfka042,l_sfka.sfka043,l_sfka.sfka044,l_sfka.sfka045,
       l_sfka.sfka046,l_sfka.sfka047,l_sfka.sfka048,l_sfka.sfka049,l_sfka.sfka050,
       l_sfka.sfka051,l_sfka.sfka052,l_sfka.sfka053,l_sfka.sfka054,l_sfka.sfka055,
       l_sfka.sfka056,l_sfka.sfka057,l_sfka.sfka058,l_sfka.sfka059,l_sfka.sfka060,
       l_sfka.sfka061,l_sfka.sfka062,l_sfka.sfka063,l_sfka.sfka064,l_sfka.sfka065,
       l_sfka.sfkadocdt,l_sfka.sfkastus,l_sfka.sfkaacti,
       l_sfka.sfkaownid,l_sfka.sfkaowndp,l_sfka.sfkacrtid,l_sfka.sfkacrtdp,l_current,
       l_sfka.sfkamodid,l_current,
       l_sfka.sfkacnfid,l_sfka.sfkacnfdt,l_sfka.sfkapstid,l_sfka.sfkapstdt)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam.* TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins sfka_t'
      LET g_errparam.coll_vals[1] = l_sfka.sfkadocno
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 產生工單變更單工單來源資料
# Memo...........:
# Usage..........: CALL apsp630_asft800_gen_sfkb()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 2014/05/27 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp630_asft800_gen_sfkb()
DEFINE r_success              LIKE type_t.num5
DEFINE l_sfab                 RECORD LIKE sfab_t.*
DEFINE l_sfkb                 RECORD LIKE sfkb_t.*
DEFINE l_msg                  LIKE type_t.chr100

   LET r_success = TRUE
   
   DECLARE asft800_gen_sfkb_cs CURSOR FOR 
    SELECT * FROM sfab_t
     WHERE sfabent = g_enterprise 
       AND sfabdocno = g_detail_d[l_ac].sfaadocno
       
   FOREACH asft800_gen_sfkb_cs INTO l_sfab.*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
      LET l_sfkb.sfkbent = g_enterprise 
      LET l_sfkb.sfkbsite = g_site
      LET l_sfkb.sfkbdocno = l_sfab.sfabdocno
      LET l_sfkb.sfkbseq = l_sfab.sfabseq
      LET l_sfkb.sfkb001 = l_sfab.sfab001
      LET l_sfkb.sfkb002 = l_sfab.sfab002
      LET l_sfkb.sfkb003 = l_sfab.sfab003
      LET l_sfkb.sfkb004 = l_sfab.sfab004
      LET l_sfkb.sfkb005 = l_sfab.sfab005
      LET l_sfkb.sfkb006 = l_sfab.sfab006
      LET l_sfkb.sfkb007 = l_sfab.sfab007
      LET l_sfkb.sfkb900 = g_sfka900
      LET l_sfkb.sfkb901 = '1'
      
      INSERT INTO sfkb_t 
         (sfkbent,sfkbsite,sfkbdocno,sfkb900,sfkb901,sfkbseq,
          sfkb001,sfkb002,sfkb003,sfkb004,sfkb005,sfkb006,sfkb007)
         VALUES
         (l_sfkb.sfkbent,l_sfkb.sfkbsite,l_sfkb.sfkbdocno,l_sfkb.sfkb900,l_sfkb.sfkb901,
          l_sfkb.sfkbseq,
          l_sfkb.sfkb001,l_sfkb.sfkb002,l_sfkb.sfkb003,l_sfkb.sfkb004,l_sfkb.sfkb005,
          l_sfkb.sfkb006,l_sfkb.sfkb007)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam.* TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'ins sfkb_t'
         LET g_errparam.coll_vals[1] = l_sfkb.sfkbdocno
         LET g_errparam.coll_vals[2] = l_sfkb.sfkbseq
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      INITIALIZE l_sfab.* TO NULL   
   END FOREACH
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 產生工單變更單生產料號明細資料
# Memo...........:
# Usage..........: CALL apsp630_asft800_gen_sfkc()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 2014/05/27 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp630_asft800_gen_sfkc()
DEFINE r_success         LIKE type_t.num5
DEFINE l_tmp             type_g_detail2_d
DEFINE l_sfac            RECORD LIKE sfac_t.*
DEFINE l_sfkc            RECORD LIKE sfkc_t.*
DEFINE l_msg             LIKE type_t.chr100

   LET r_success = TRUE

   DECLARE asft800_gen_sfkc_cs CURSOR FOR 
    SELECT sfacseq,sfac001,sfac002,sfac003,sfac006,psox012
      FROM apsp630_tmp
     WHERE sfacdocno = g_detail_d[l_ac].sfaadocno
       
   FOREACH asft800_gen_sfkc_cs INTO l_tmp.sfacseq,l_tmp.sfac001,l_tmp.sfac002,l_tmp.sfac003,
                                    l_tmp.sfac006,l_tmp.psox012
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH asft800_gen_sfkc_cs:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
      INITIALIZE l_sfkc.* TO NULL
      LET l_sfkc.sfkcent = g_enterprise 
      LET l_sfkc.sfkcsite = g_site
      LET l_sfkc.sfkcdocno = g_detail_d[l_ac].sfaadocno
      LET l_sfkc.sfkcseq = l_tmp.sfacseq
      LET l_sfkc.sfkc001 = l_tmp.sfac001
      LET l_sfkc.sfkc002 = l_tmp.sfac002
      LET l_sfkc.sfkc003 = l_tmp.psox012
      LET l_sfkc.sfkc006 = l_tmp.sfac006
      
      INITIALIZE l_sfac.* TO NULL
      SELECT sfac004,sfac005 
        INTO l_sfac.sfac004,l_sfac.sfac005
        FROM sfac_t
       WHERE sfacent = g_enterprise
         AND sfacdocno = g_detail_d[l_ac].sfaadocno
         AND sfacseq = l_tmp.sfacseq
      IF STATUS = 100 THEN
         LET l_sfkc.sfkc901 = '3'
         
         CALL s_asft800_ins_sfkh(l_sfkc.sfkcdocno,l_sfkc.sfkcseq,0,g_sfka900,'sfac003','5',l_tmp.sfac003,l_sfkc.sfkc003,'')
              RETURNING r_success
         IF NOT r_success THEN
            RETURN r_success
         END IF
         
         SELECT imae081 INTO l_sfac.sfac004 FROM imae_t
          WHERE imaeent = g_enterprise
            AND imaesite= g_site
            AND imae001 = l_tmp.sfac001
         IF cl_null(l_sfac.sfac004) THEN
            SELECT imaa006 INTO l_sfac.sfac004 FROM imaa_t
             WHERE imaaent = g_enterprise
               AND imaa001 = l_tmp.sfac001
         END IF
         
         LET l_sfac.sfac005 = 0
      ELSE
         IF l_tmp.sfac003 = l_tmp.psox012 THEN
            LET l_sfkc.sfkc901 = '1'
         ELSE
            LET l_sfkc.sfkc901 = '2'
            
            CALL s_asft800_ins_sfkh(l_sfkc.sfkcdocno,l_sfkc.sfkcseq,0,g_sfka900,'sfac003','4',l_tmp.sfac003,l_sfkc.sfkc003,'')
                 RETURNING r_success
            IF NOT r_success THEN
               RETURN r_success
            END IF
         END IF
      END IF
      
      LET l_sfkc.sfkc004 = l_sfac.sfac004
      LET l_sfkc.sfkc005 = l_sfac.sfac005
      
      LET l_sfkc.sfkc900 = g_sfka900
      
      INSERT INTO sfkc_t
         (sfkcent,sfkcsite,sfkcdocno,sfkc900,sfkc901,sfkcseq,
          sfkc001,sfkc002,sfkc003,sfkc004,sfkc005,sfkc006)
         VALUES
         (l_sfkc.sfkcent,l_sfkc.sfkcsite,l_sfkc.sfkcdocno,l_sfkc.sfkc900,l_sfkc.sfkc901,
          l_sfkc.sfkcseq,
          l_sfkc.sfkc001,l_sfkc.sfkc002,l_sfkc.sfkc003,l_sfkc.sfkc004,l_sfkc.sfkc005,
          l_sfkc.sfkc006)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam.* TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'ins sfkc_t'
         LET g_errparam.coll_vals[1] = l_sfkc.sfkcdocno
         LET g_errparam.coll_vals[2] = l_sfkc.sfkcseq
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      INITIALIZE l_sfac.* TO NULL 
   END FOREACH

   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 產生工單變更單商品序號資料
# Memo...........:
# Usage..........: CALL apsp630_asft800_gen_sfkf()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 2014/05/28 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp630_asft800_gen_sfkf()
DEFINE r_success         LIKE type_t.num5
DEFINE l_sfaf            RECORD LIKE sfaf_t.*
DEFINE l_sfkf            RECORD LIKE sfkf_t.*
DEFINE l_msg             LIKE type_t.chr100

   LET r_success = TRUE

   DECLARE asft800_gen_sfkf_cs CURSOR FOR 
    SELECT * FROM sfaf_t 
     WHERE sfafent = g_enterprise 
       AND sfafdocno = g_detail_d[l_ac].sfaadocno
       
   FOREACH asft800_gen_sfkf_cs INTO l_sfaf.*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
      LET l_sfkf.sfkfent = g_enterprise 
      LET l_sfkf.sfkfsite = g_site
      LET l_sfkf.sfkfdocno = l_sfaf.sfafdocno
      LET l_sfkf.sfkfseq = l_sfaf.sfafseq
      LET l_sfkf.sfkf001 = l_sfaf.sfaf001
      LET l_sfkf.sfkf900 = g_sfka900
      LET l_sfkf.sfkf901 = '1'
      
      INSERT INTO sfkf_t 
         (sfkfent,sfkfsite,sfkfdocno,sfkf900,sfkf901,sfkfseq,
          sfkf001)
         VALUES
         (l_sfkf.sfkfent,l_sfkf.sfkfsite,l_sfkf.sfkfdocno,l_sfkf.sfkf900,l_sfkf.sfkf901,
          l_sfkf.sfkfseq,
          l_sfkf.sfkf001)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam.* TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'ins sfkf_t'
         LET g_errparam.coll_vals[1] = l_sfkf.sfkfdocno
         LET g_errparam.coll_vals[2] = l_sfkf.sfkfseq
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      INITIALIZE l_sfaf.* TO NULL   #清空数组
   END FOREACH
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 產生工單變更單備料檔資料
# Memo...........:
# Usage..........: CALL apsp630_asft800_gen_sfkg()
#                  RETURNING r_success
# Input parameter: 
#                : 
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 2014/05/28 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp630_asft800_gen_sfkg()
DEFINE r_success         LIKE type_t.num5
DEFINE l_sfba            RECORD LIKE sfba_t.*
DEFINE l_sfkg            RECORD LIKE sfkg_t.*
DEFINE l_msg             LIKE type_t.chr100

   LET r_success = TRUE

   DECLARE asft800_gen_sfkg_cs CURSOR FOR 
    SELECT * FROM sfba_t 
     WHERE sfbaent = g_enterprise 
       AND sfbadocno = g_detail_d[l_ac].sfaadocno
       
   FOREACH asft800_gen_sfkg_cs INTO l_sfba.*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
      LET l_sfkg.sfkgent = g_enterprise 
      LET l_sfkg.sfkgsite = g_site
      LET l_sfkg.sfkgdocno = l_sfba.sfbadocno
      LET l_sfkg.sfkgseq = l_sfba.sfbaseq
      LET l_sfkg.sfkgseq1 = l_sfba.sfbaseq1
      LET l_sfkg.sfkg001 = l_sfba.sfba001
      LET l_sfkg.sfkg002 = l_sfba.sfba002
      LET l_sfkg.sfkg003 = l_sfba.sfba003
      LET l_sfkg.sfkg004 = l_sfba.sfba004
      LET l_sfkg.sfkg005 = l_sfba.sfba005
      LET l_sfkg.sfkg006 = l_sfba.sfba006
      LET l_sfkg.sfkg007 = l_sfba.sfba007
      LET l_sfkg.sfkg008 = l_sfba.sfba008
      LET l_sfkg.sfkg009 = l_sfba.sfba009
      LET l_sfkg.sfkg010 = l_sfba.sfba010
      LET l_sfkg.sfkg011 = l_sfba.sfba011
      LET l_sfkg.sfkg012 = l_sfba.sfba012
      LET l_sfkg.sfkg013 = l_sfba.sfba013
      LET l_sfkg.sfkg014 = l_sfba.sfba014
      LET l_sfkg.sfkg015 = l_sfba.sfba015
      LET l_sfkg.sfkg016 = l_sfba.sfba016
      LET l_sfkg.sfkg017 = l_sfba.sfba017
      LET l_sfkg.sfkg018 = l_sfba.sfba018
      LET l_sfkg.sfkg019 = l_sfba.sfba019
      LET l_sfkg.sfkg020 = l_sfba.sfba020
      LET l_sfkg.sfkg021 = l_sfba.sfba021
      LET l_sfkg.sfkg022 = l_sfba.sfba022
      LET l_sfkg.sfkg023 = l_sfba.sfba023
      LET l_sfkg.sfkg024 = l_sfba.sfba024
      LET l_sfkg.sfkg025 = l_sfba.sfba025
      LET l_sfkg.sfkg026 = l_sfba.sfba026
      LET l_sfkg.sfkg027 = l_sfba.sfba027
      LET l_sfkg.sfkg028 = l_sfba.sfba028
      LET l_sfkg.sfkg900 = g_sfka900
      LET l_sfkg.sfkg901 = '1'
      
      INSERT INTO sfkg_t
         (sfkgent,sfkgsite,sfkgdocno,sfkg900,sfkg901,sfkgseq,sfkgseq1,
          sfkg001,sfkg002,sfkg003,sfkg004,sfkg005,sfkg006,sfkg007,sfkg008,sfkg009,sfkg010,
          sfkg011,sfkg012,sfkg013,sfkg014,sfkg015,sfkg016,sfkg017,sfkg018,sfkg019,sfkg020,
          sfkg021,sfkg022,sfkg023,sfkg024,sfkg025,sfkg026,sfkg027,sfkg028)
         VALUES
         (l_sfkg.sfkgent,l_sfkg.sfkgsite,l_sfkg.sfkgdocno,l_sfkg.sfkg900,l_sfkg.sfkg901,
          l_sfkg.sfkgseq,l_sfkg.sfkgseq1,
          l_sfkg.sfkg001,l_sfkg.sfkg002,l_sfkg.sfkg003,l_sfkg.sfkg004,l_sfkg.sfkg005,
          l_sfkg.sfkg006,l_sfkg.sfkg007,l_sfkg.sfkg008,l_sfkg.sfkg009,l_sfkg.sfkg010,
          l_sfkg.sfkg011,l_sfkg.sfkg012,l_sfkg.sfkg013,l_sfkg.sfkg014,l_sfkg.sfkg015,
          l_sfkg.sfkg016,l_sfkg.sfkg017,l_sfkg.sfkg018,l_sfkg.sfkg019,l_sfkg.sfkg020,
          l_sfkg.sfkg021,l_sfkg.sfkg022,l_sfkg.sfkg023,l_sfkg.sfkg024,l_sfkg.sfkg025,
          l_sfkg.sfkg026,l_sfkg.sfkg027,l_sfkg.sfkg028)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam.* TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'ins sfkg_t'
         LET g_errparam.coll_vals[1] = l_sfkg.sfkgdocno
         LET g_errparam.coll_vals[2] = l_sfkg.sfkgseq
         CALL cl_err()
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      INITIALIZE l_sfba.* TO NULL   #清空数组
   END FOREACH
   
   RETURN r_success
END FUNCTION

#end add-point
 
{</section>}
 
