<add_points prog="apsp550" std_prog="apsp550" erpver="1.0" module="APS" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.apsp550_psca001_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apsp550_psca001_ref(p_psca001)
   DEFINE p_psca001     LIKE psca_t.psca001
   DEFINE l_psea001_desc    LIKE pscal_t.pscal003

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_psca001
   CALL ap_ref_array2(g_ref_fields,
                      "SELECT pscal003 FROM pscal_t WHERE pscalent='"||g_enterprise||"' AND pscalsite='"||g_site||"' AND pscal001=? AND pscal002='"||g_lang||"'",
                      "")  
       RETURNING g_rtn_fields
   LET l_psea001_desc = '', g_rtn_fields[1] , ''
   DISPLAY l_psea001_desc TO psea001_desc
END FUNCTION]]>
</point>
  <point name="function.apsp550_psca001_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 檢查aps版本是否存在apsi002
# Memo...........:
# Usage..........: CALL apsp550_psca001_chk(p_psca001)
#                  RETURNING r_success
# Input parameter: p_psca001：aps版本
# Return code....: r_success：true/false
# Date & Author..: 2014/06/23 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp550_psca001_chk(p_psca001)
   DEFINE p_psca001         LIKE psca_t.psca001
   DEFINE r_success         LIKE type_t.num5
   
   LET r_success = TRUE
   
   IF cl_null(p_psca001) THEN
      RETURN r_success
   END IF
   
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = p_psca001
   IF NOT cl_chk_exist("v_psca001") THEN
      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.apsp550_psea001_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 檢查aps版本是否存在psea_t之中
# Memo...........:
# Usage..........: CALL apsp550_psea001_chk(p_psea001)
#                  RETURNING r_success
# Input parameter: p_psea001：aps版本
# Return code....: r_success：true/false
# Date & Author..: 2014/06/23 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp550_psea001_chk(p_psea001)
   DEFINE p_psea001     LIKE psea_t.psea001
   DEFINE r_success     LIKE type_t.num5

   LET r_success = TRUE
   IF cl_null(p_psea001) THEN
      RETURN r_success
   END IF

   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = p_psea001

   IF NOT cl_chk_exist("v_psea001") THEN
      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.apsp550_open_browser" cite_std="N" status="u" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 執行aps手調器
# Memo...........:
# Usage..........: CALL apsp550_open_browser(p_pseaent,p_pseasite,p_psea001,p_psea002,p_type)
# Input parameter: p_pseaent：企業編號
#                : p_pseasite：營運據點 
#                : p_psea001：aps版本 
#                : p_psea002：執行日期(儲存版本) 
#                : p_type： 
# Date & Author..: 2014/06/23 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp550_open_browser(p_pseaent,p_pseasite,p_psea001,p_psea002,p_type)
   DEFINE p_pseaent  LIKE psea_t.pseaent
   DEFINE p_pseasite LIKE psea_t.pseasite
   DEFINE p_psea001  LIKE psea_t.psea001
   DEFINE p_psea002  LIKE psea_t.psea002
   DEFINE p_type     LIKE type_t.chr1

   DEFINE l_url        STRING,
          l_aps_path   STRING,
          res          STRING
   DEFINE l_lang_type  LIKE type_t.chr10

   CALL ui.Interface.frontCall( "standard", "getenv","DCIMCP_Client", [l_aps_path] )
   IF cl_null(l_aps_path) THEN
       CALL apsp550_get_reg_path() RETURNING l_aps_path
       DISPLAY "USE Old APSBrowser==> patch:",l_aps_path
   ELSE
       DISPLAY "USE New APSBrowser==> patch:",l_aps_path
   END IF 
   
   CASE g_lang
       WHEN '0'
            LET l_lang_type = 'CHT'  #繁體
       WHEN '1'
            LET l_lang_type = 'ENG'  #英文
       WHEN '2'
            LET l_lang_type = 'CHS'  #簡體
       WHEN '4'
            LET l_lang_type = 'VIET' #越南
       WHEN '5'
            LET l_lang_type = 'THAI' #泰文
       OTHERWISE
            LET l_lang_type = 'CHT'  #繁體
   END CASE 
   
   IF NOT cl_null(l_aps_path) THEN
     #啟動APS CP手調器
     LET l_url = l_aps_path ,"/APSBrowser "," -C ",p_pseaent," -F ",p_pseasite," -A ",p_psea001," -V ",p_psea002," -U ",g_user," -P ",p_type, " -L ",l_lang_type," -S 1 " 
     #-S TIPTOP不需要登入APS, 所以登入選項一律設定 1
     #-L 語系為根據TIPTOP當下的語系別來傳入,預設 CHT                       
     DISPLAY l_url
     CALL ui.Interface.frontCall("standard","shellexec", [l_url], [res])
   END IF
END FUNCTION]]>
</point>
  <point name="function.apsp550_get_reg_path" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 取得aps手調器運行路徑
# Memo...........:
# Usage..........: CALL apsp550_get_reg_path()
#                  RETURNING l_result
# Return code....: l_result：路徑
# Date & Author..: 2014/06/23 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp550_get_reg_path()
   DEFINE l_source  STRING
   DEFINE l_ch       base.Channel
   DEFINE l_buf      STRING
   DEFINE l_i        INT
   DEFINE l_file     STRING
   DEFINE l_str      STRING
   DEFINE l_cmd      STRING
   DEFINE l_url      STRING,
          l_result   STRING,
          res        LIKE type_t.num10


   LET l_source= "c:\\aps.reg"
   LET l_url = "Cmd.exe /c \"reg query \"HKEY_LOCAL_MACHINE\\SOFTWARE\\DCI\\APS\" > ",l_source,"\" "
   DISPLAY l_url
   CALL ui.Interface.frontCall("standard","shellexec", [l_url], [res])

   IF res THEN 
      SLEEP 1
   ELSE

   END IF 
   
   LET l_file = fgl_getenv("TEMPDIR"), "/", fgl_getpid() USING '<<<<<<<<<<', ".LOG"
   CALL FGL_GETFILE(l_source, l_file)
   IF STATUS THEN
        DISPLAY "Cannot upload file "
      RETURN FALSE
   ELSE
      IF os.Path.chrwx(l_file CLIPPED,438) THEN END IF   
   END IF

   LET l_ch = base.Channel.CREATE()
   CALL l_ch.openFile(l_file, "r")
   CALL l_ch.setDelimiter(NULL)
   LET l_i = 1
   WHILE l_ch.READ(l_buf)

        LET l_str = l_buf CLIPPED
        IF ( l_str.getIndexOf("Client",1)>0 ) THEN
           CALL apsp550_parseToken(l_str) RETURNING l_result
        END IF

   END WHILE 
   
   CALL l_ch.CLOSE()
   RUN "rm -f " || l_file
   RETURN l_result
END FUNCTION]]>
</point>
  <point name="function.apsp550_parseToken" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 字串切割
# Memo...........:
# Usage..........: CALL apsp550_parseToken(p_str)
#                  RETURNING l_result
# Input parameter: p_str：要處理的字串
# Return code....: l_result：處理完的路徑字串
# Date & Author..: 2014/06/23 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp550_parseToken(p_str)
   DEFINE p_str      STRING
   DEFINE l_result   STRING
   DEFINE l_i        INT

   LET l_i = p_str.getIndexOf("REG_SZ",1)
   LET l_result= p_str.substring(l_i+7 ,p_str.getLength())

   RETURN l_result.trim()
END FUNCTION]]>
</point>
  <point name="global.parameter" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   psea001               LIKE psea_t.psea001,       #APS版本]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_psea001         LIKE psea_t.psea001           #APS版本 
DEFINE g_ref_fields      DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars        DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields      DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列]]>
</point>
  <point name="process.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_psea002   LIKE psea_t.psea002     #執行日期時間 ]]>
</point>
  <point name="process.pre_process" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_psea001 = lc_param.psea001 ]]>
</point>
  <point name="process.process" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET l_psea002 = ''
   SELECT MAX(psea002) INTO l_psea002
     FROM psea_t
    WHERE pseaent = g_enterprise
      AND pseasite = g_site
      AND psea001 = g_psea001
      AND psea003 = 'aps-00026'             #規畫完成  

   CALL apsp550_open_browser(g_enterprise,g_site,g_psea001,l_psea002,'1')]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   INITIALIZE lc_param.* TO NULL]]>
</point>
  <point name="ui_dialog.more_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         INPUT lc_param.psea001 FROM psea001 ATTRIBUTE(WITHOUT DEFAULTS)
            BEFORE INPUT

            AFTER FIELD psea001
               CALL apsp550_psca001_ref(lc_param.psea001)
               IF NOT cl_null(lc_param.psea001) THEN
                  IF NOT apsp550_psca001_chk(lc_param.psea001) THEN
                     NEXT FIELD CURRENT
                  END IF

                  IF NOT apsp550_psea001_chk(lc_param.psea001) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF 
               
            ON ACTION controlp INFIELD psea001
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = lc_param.psea001
               LET g_qryparam.WHERE = " pscasite = '",g_site,"'"
               CALL q_psca001()
               LET lc_param.psea001 = g_qryparam.return1
               DISPLAY lc_param.psea001 TO psea001

               CALL apsp550_psca001_ref(lc_param.psea001)

               NEXT FIELD psea001

         END INPUT]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.background" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.qbe_select" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.qbeclear" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.exit_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="transfer.argv.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.count_progress" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.foreground_finish" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.background_finish" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="apsp550.description" ver="1" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000003
#+ 
#+ Filename...: apsp550
#+ Description: APS手調器
#+ Creator....: 03079(2014/06/23)
#+ Modifier...: 03079(2014/06/23)
#+ Buildtype..: 應用 p01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="apsp550.global" ver="1" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="apsp550.init" ver="1" status="" src="s">
<![CDATA[#+ 初始化作業
PRIVATE FUNCTION apsp550_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="apsp550.main" ver="2" status="" src="s">
<![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aps","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL apsp550_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apsp550 WITH FORM cl_ap_formpath("aps",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL apsp550_init()
 
      #進入選單 Menu (="N")
      CALL apsp550_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_apsp550
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
</section>
  <section id="apsp550.other_function" ver="1" status="" src="s">
<![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
</section>
  <section id="apsp550.process" ver="1" status="" src="s">
<![CDATA[#+ 資料處理
PRIVATE FUNCTION apsp550_process(ls_js)
   DEFINE ls_js       STRING
   DEFINE lc_param    type_parameter
   DEFINE li_stus     LIKE type_t.num5
   DEFINE li_count    LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql      STRING             #主SQL
   #add-point:process段define
   {<point name="process.define"/>}
   #end add-point
 
   CALL util.JSON.parse(ls_js,lc_param)
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE apsp550_process_cs CURSOR FROM ls_sql
#  FOREACH apsp550_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
   END IF
END FUNCTION
]]>
</section>
  <section id="apsp550.transfer_argv" ver="1" status="" src="s">
<![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION apsp550_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog     STRING,
             param    DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
 
   CALL util.JSON.parse(ls_js,la_param)
 
   LET la_cmdrun.prog = g_prog
   #add-point:transfer.argv段define
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
</section>
  <section id="apsp550.ui_dialog" ver="1" status="" src="s">
<![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION apsp550_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num5
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET lc_param.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後
               {<point name="ui_dialog.qbe_select"/>}
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION batch_execute
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE lc_param.* TO NULL
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         LET g_jobid = cl_schedule_get_jobid(g_prog)
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL apsp550_process(ls_js)
            WHEN g_schedule.gzpa003 = "1"
                 CALL cl_schedule_update_data(g_jobid)
                 LET ls_js = apsp550_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid)
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid)
         END CASE    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
         INITIALIZE lc_param.*  TO NULL 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
</section>
</add_points>