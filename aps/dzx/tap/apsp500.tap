<add_points prog="apsp500" std_prog="apsp500" erpver="1.0" module="APS" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.apsp500_order" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 抓取訂單資料，新增到APS需求單據供給法則檔(pseb_t)
# Memo...........:
# Usage..........: CALL apsp500_order(p_psce002)
#                  RETURNING r_success
# Input parameter: p_psce002      供給法則編號
#                :
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 2014/04/02 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp500_order(p_psce002)
DEFINE p_psce002         LIKE psce_t.psce002
DEFINE r_success         LIKE type_t.num5
DEFINE l_condition       STRING
DEFINE l_sql             STRING
DEFINE l_xmdadocno       LIKE xmda_t.xmdadocno
DEFINE L_xmddseq         LIKE xmdd_t.xmddseq
DEFINE l_xmddseq1        LIKE xmdd_t.xmddseq1
DEFINE l_xmddseq2        LIKE xmdd_t.xmddseq2

   LET r_success = TRUE
   
   #供給法則的需求條件
   CALL apsp500_condition(p_psce002,'1')
        RETURNING r_success,l_condition
   IF NOT r_success OR cl_null(l_condition) THEN
      RETURN r_success
   END IF
   
   LET l_sql = "SELECT xmdadocno,xmddseq,xmddseq1,xmddseq2 ",
               "  FROM xmda_t,xmdc_t,xmdd_t ",
               " WHERE xmdaent = xmdcent ",
               "   AND xmdaent = xmddent ",
               "   AND xmdadocno = xmdcdocno ",
               "   AND xmdadocno = xmdddocno ",
               "   AND xmdcseq = xmddseq ",
               "   AND xmdaent = ",g_enterprise,
               "   AND xmdcunit = '",g_site,"'",
               "   AND xmdastus = 'Y' ",
               "   AND xmdd017 <> '5' ",
               "   AND xmdd006 - xmdd014 + xmdd015 > 0 ",
               "   AND xmda019 = 'Y' "
               
   LET l_sql = l_sql CLIPPED,l_condition CLIPPED
               
   PREPARE apsp500_order_pre FROM l_sql
   DECLARE apsp500_order_cs CURSOR FOR apsp500_order_pre
   
   FOREACH apsp500_order_cs INTO l_xmdadocno,l_xmddseq,l_xmddseq1,l_xmddseq2
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH order_cs",SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      #新增到APS需求單據供給法則檔
      CALL apsp500_pseb_ins(l_xmdadocno,l_xmddseq,l_xmddseq1,l_xmddseq2,p_psce002)
           RETURNING r_success
      IF NOT r_success THEN
         EXIT FOREACH
      END IF
   END FOREACH
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.apsp500_psca001_ref" cite_std="N" status="u" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 抓取APS版本的說明
# Memo...........:
# Usage..........: CALL apsp500_psca001_ref(p_psca001)
#                  
# Input parameter: p_psca001      APS版本
#                : 
# Return code....: 
#                : 
# Date & Author..: 2014/04/01 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp500_psca001_ref(p_psca001)
DEFINE p_psca001         LIKE psca_t.psca001
DEFINE l_psca001_desc    LIKE pscal_t.pscal003

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_psca001
   CALL ap_ref_array2(g_ref_fields,"SELECT pscal003 FROM pscal_t WHERE pscalent='"||g_enterprise||"' AND pscalsite='"||g_site||"' AND pscal001=? AND pscal002='"||g_lang||"'",
       "") RETURNING g_rtn_fields
   LET l_psca001_desc = '', g_rtn_fields[1] , ''
   DISPLAY l_psca001_desc TO psca001_desc
END FUNCTION]]>
</point>
  <point name="function.apsp500_psca001_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 檢查APS版本是否存在
# Memo...........:
# Usage..........: CALL apsp500_psca001_chk(p_psca001)
#                  RETURNING r_success
# Input parameter: p_psca001      APS版本
#                : 
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 2014/04/01 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp500_psca001_chk(p_psca001)
DEFINE p_psca001         LIKE psca_t.psca001
DEFINE r_success         LIKE type_t.num5

   LET r_success = TRUE
   
   IF cl_null(p_psca001) THEN
      RETURN r_success
   END IF
   
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = p_psca001
   IF NOT cl_chk_exist("v_psca001") THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.apsp500_forecast" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 抓取銷售預測資料，新增到APS需求單據供給法則檔(pseb_t)
# Memo...........:
# Usage..........: CALL apsp500_forecast(p_psce002)
#                  RETURNING r_success
# Input parameter: p_psce002      供給法則編號
#                : 
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 2014/04/02 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp500_forecast(p_psce002)
DEFINE p_psce002         LIKE psce_t.psce002
DEFINE r_success         LIKE type_t.num5
DEFINE l_condition       STRING
DEFINE l_sql             STRING
DEFINE l_psbbdocno       LIKE psbb_t.psbbdocno
DEFINE l_psbbseq         LIKE psbb_t.psbbseq
DEFINE l_psbbseq1        LIKE psbb_t.psbbseq1
DEFINE l_psbbseq2        LIKE psbb_t.psbbseq2

   LET r_success = TRUE
   
   #供給法則的需求條件
   CALL apsp500_condition(p_psce002,'2')
        RETURNING r_success,l_condition
   IF NOT r_success OR cl_null(l_condition) THEN
      RETURN r_success
   END IF
   
   LET l_sql = "SELECT psbbdocno,psbbseq,psbbseq1,psbbseq2 ",
               "  FROM psba_t,psbb_t,xmig_t ",
               " WHERE psbaent = psbbent ",
               "   AND psba001 = psbb001 ",
               "   AND psbaent = xmigent ",
               "   AND psba007 = xmig001 ",
               "   AND psbbsite= xmigsite",
               "   AND psbb002 = '2' ",
               "   AND psbb003 = xmig006 ",
               "   AND psbb004 = xmig007 ",
               "   AND psbb005 = xmig018 ",
               "   AND psbb008 = xmig008 ",
               "   AND psbb009 = xmig005 ",
               "   AND psbb010 = xmig004 ",
               "   AND psbb011 = xmig009 ",
               "   AND xmigent = ",g_enterprise,
               "   AND xmigsite= '",g_site,"'",
               "   AND xmig002 = (SELECT MAX(xmig002) FROM xmig_t,psba_t,psbb_t ",
               "                   WHERE psbaent = psbbent ",
               "                     AND psba001 = psbb001 ",
               "                     AND psba007 = xmig001 ",
               "                     AND psbaent = xmigent ",
               "                     AND psbbsite= xmigsite",
               "                     AND psbbent = ",g_enterprise,
               "                     AND psbbsite= '",g_site,"')"
               
   LET l_sql = l_sql CLIPPED,l_condition CLIPPED
               
   PREPARE apsp500_forecast_pre FROM l_sql
   DECLARE apsp500_forecast_cs CURSOR FOR apsp500_forecast_pre
   
   FOREACH apsp500_forecast_cs INTO l_psbbdocno,l_psbbseq,l_psbbseq1,l_psbbseq2
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH forecast_cs",SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      #新增到APS需求單據供給法則檔
      CALL apsp500_pseb_ins(l_psbbdocno,l_psbbseq,l_psbbseq1,l_psbbseq2,p_psce002)
           RETURNING r_success
      IF NOT r_success THEN
         EXIT FOREACH
      END IF
   END FOREACH
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.apsp500_condition" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 依來源類型，將供給法則的需要條件組成SQL的條件
# Memo...........:
# Usage..........: CALL apsp500_condition(p_psdb001,p_psdb002)
#                  RETURNING r_success,r_condition
# Input parameter: p_psdb001      供給法則編號
#                : p_psdb002      需求來源
# Return code....: r_success      TRUE/FALSE
#                : r_condition    SQL條件
# Date & Author..: 2014/04/02 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp500_condition(p_psdb001,p_psdb002)
DEFINE p_psdb001         LIKE psdb_t.psdb001
DEFINE p_psdb002         LIKE psdb_t.psdb002
DEFINE r_success         LIKE type_t.num5
DEFINE r_condition       STRING
DEFINE l_psdb004         LIKE psdb_t.psdb004
DEFINE l_psdb005         LIKE psdb_t.psdb005
DEFINE l_psdb006         LIKE psdb_t.psdb006
DEFINE l_psdb007         LIKE psdb_t.psdb007
DEFINE l_len             LIKE type_t.num5

   LET r_success = TRUE
   LET r_condition = ''
   
   DECLARE apsp500_condition_cs CURSOR FOR
    SELECT psdb004,psdb005,psdb006,psdb007
      FROM psdb_t
     WHERE psdbent = g_enterprise
       AND psdbsite= g_site
       AND psdb001 = p_psdb001
       AND psdb002 = p_psdb002
     ORDER BY psdbseq
     
   FOREACH apsp500_condition_cs INTO l_psdb004,l_psdb005,l_psdb006,l_psdb007
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH condition_cs",SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      IF NOT cl_null(l_psdb005) AND NOT cl_null(l_psdb006) THEN
         LET l_len = l_psdb006 - l_psdb005 + 1
         LET r_condition = r_condition CLIPPED,
                           " AND SUBSTR(",l_psdb004,",",l_psdb005,",",l_len,") = '",l_psdb007,"'"
      ELSE
         LET r_condition = r_condition CLIPPED,
                           " AND ",l_psdb004," = '",l_psdb007,"'"
      END IF
   END FOREACH
   
   RETURN r_success,r_condition
END FUNCTION]]>
</point>
  <point name="function.apsp500_independent_demand" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 抓取獨立需求資料，新增到APS需求單據供給法則檔(pseb_t)
# Memo...........:
# Usage..........: CALL apsp500_independent_demand(p_psce002)
#                  RETURNING r_success
# Input parameter: p_psce002      供給法則編號
#                : 
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 2014/04/02 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp500_independent_demand(p_psce002)
DEFINE p_psce002         LIKE psce_t.psce002
DEFINE r_success         LIKE type_t.num5
DEFINE l_condition       STRING
DEFINE l_sql             STRING
DEFINE l_psaadocno       LIKE psaa_t.psaadocno
DEFINE l_psabseq         LIKE psab_t.psabseq

   LET r_success = TRUE
   
   #供給法則的需求條件
   CALL apsp500_condition(p_psce002,'3')
        RETURNING r_success,l_condition
   IF NOT r_success OR cl_null(l_condition) THEN
      RETURN r_success
   END IF
   
   LET l_sql = "SELECT psaadocno,psabseq ",
               "  FROM psaa_t,psab_t ",
               " WHERE psaaent = psabent ",
               "   AND psaadocno = psabdocno ",
               "   AND psaaent = ",g_enterprise,
               "   AND psaasite= '",g_site,"'",
               "   AND psaastus= 'Y' ",
               "   AND psab008 = 'N' ",
               "   AND psab005 - psab006 > 0 "
               
   LET l_sql = l_sql CLIPPED,l_condition CLIPPED
               
   PREPARE apsp500_independent_demand_pre FROM l_sql
   DECLARE apsp500_independent_demand_cs CURSOR FOR apsp500_independent_demand_pre
   
   FOREACH apsp500_independent_demand_cs INTO l_psaadocno,l_psabseq
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH independent_demand_cs",SQLCA.sqlcode,1)
         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      #新增到APS需求單據供給法則檔
      CALL apsp500_pseb_ins(l_psaadocno,l_psabseq,0,0,p_psce002)
           RETURNING r_success
      IF NOT r_success THEN
         EXIT FOREACH
      END IF
   END FOREACH
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.apsp500_pseb_ins" cite_std="N" status="" ver="1" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 新增資料到APS需求單據供給法則檔
# Memo...........:
# Usage..........: CALL apsp500_pseb_ins(p_docno,p_seq,p_seq1,p_seq2,p_pseb007)
#                  RETURNING r_success
# Input parameter: p_docno        單據編號
#                : p_seq          項次
#                : p_seq1         項序
#                : p_seq2         分批序
#                : p_pseb007      供給法則編號
# Return code....: r_success      TRUE/FALSE
#                : 
# Date & Author..: 2014/04/02 By stellar0130
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp500_pseb_ins(p_docno,p_seq,p_seq1,p_seq2,p_pseb007)
DEFINE p_docno           LIKE pseb_t.pseb003
DEFINE p_seq             LIKE pseb_t.pseb004
DEFINE p_seq1            LIKE pseb_t.pseb005
DEFINE p_seq2            LIKE pseb_t.pseb006
DEFINE p_pseb007         LIKE pseb_t.pseb007
DEFINE r_success         LIKE type_t.num5
DEFINE l_cnt             LIKE type_t.num5

   LET r_success = TRUE
   
   #檢查該資料是否已存在於pseb_t內，若有，則不做新增
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt 
     FROM pseb_t
    WHERE psebent = g_enterprise
      AND psebsite= g_site
      AND pseb001 = g_psca001
      AND pseb002 = g_datetime
      AND pseb003 = p_docno
      AND pseb004 = p_seq
      AND pseb005 = p_seq1
      AND pseb006 = p_seq2
   IF NOT cl_null(l_cnt) AND l_cnt > 0 THEN
      RETURN r_success
   END IF
   
   #新增pseb_t
   INSERT INTO pseb_t (psebent,psebsite,pseb001,pseb002,pseb003,pseb004,pseb005,pseb006,pseb007)
      VALUES (g_enterprise,g_site,g_psca001,g_datetime,p_docno,p_seq,p_seq1,p_seq2,p_pseb007)
   IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
      CALL cl_err("ins pseb_t",SQLCA.sqlcode,1)
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="global.parameter" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   psca001               LIKE psca_t.psca001,
   base_date             LIKE psea_t.psea002,]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[DEFINE g_ref_fields      DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars        DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields      DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_psca001         LIKE psca_t.psca001
DEFINE g_psca002         LIKE psca_t.psca002
DEFINE g_datetime        LIKE psea_t.psea002]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF cl_null(g_bgjob) THEN
      LET g_bgjob = 'N'
   END IF
   LET g_errshow = 1]]>
</point>
  <point name="process.count_progress" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      IF g_psca002 = '1' THEN
         LET li_count = 9 + (l_ac * 3)
      ELSE
         LET li_count = 22 + (l_ac * 3)
      END IF
      CALL cl_progress_bar_no_window(li_count)]]>
</point>
  <point name="process.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE l_success   LIKE type_t.num5
   DEFINE l_psce      DYNAMIC ARRAY OF RECORD
            psce002   LIKE psce_t.psce002,
            psce003   LIKE psce_t.psce003
                      END RECORD
   DEFINE l_ac        LIKE type_t.num5
   DEFINE l_msg       STRING]]>
</point>
  <point name="process.foreground_finish" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      IF NOT l_success THEN
         RETURN
      END IF]]>
</point>
  <point name="process.pre_process" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   LET g_psca001 = lc_param.psca001
   LET g_datetime = lc_param.base_date
   LET l_success = TRUE
   
   #抓取計算模式
   SELECT psca002 INTO g_psca002 
     FROM psca_t
    WHERE pscaent = g_enterprise
      AND pscasite= g_site
      AND psca001 = g_psca001
   
   #抓取供給法則
   LET ls_sql = "SELECT psce002,psce003 ",
                "  FROM psce_t ",
                " WHERE psceent = ",g_enterprise,
                "   AND pscesite='",g_site,"'",
                "   AND psce001 ='",g_psca001,"'",
                " ORDER BY psce003 "
   DECLARE apsp500_process_cs CURSOR FROM ls_sql
   
   LET l_ac = 1
   FOREACH apsp500_process_cs INTO l_psce[l_ac].psce002,l_psce[l_ac].psce003
      IF SQLCA.sqlcode THEN
         CALL cl_errmsg("FOREACH apsp500_process_cs","","",SQLCA.sqlcode,1)
         LET l_success = FALSE
         EXIT FOREACH
      END IF
      
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec AND g_error_show = 1 THEN
         CALL cl_err( '', 9035, 1)
         EXIT FOREACH
      END IF
   END FOREACH
   LET l_ac = l_ac -1
   CALL l_psce.deleteElement(l_psce.getLength())
   IF NOT l_success THEN
      RETURN
   END IF]]>
</point>
  <point name="process.process" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   CALL s_transaction_begin()
   
   FOR l_ac = 1 TO l_psce.getLength()
      IF cl_null(l_psce[l_ac].psce002) THEN
         CONTINUE FOR
      END IF
      
      #需求條件中來源為訂單
      IF g_bgjob <> "Y" THEN
         LET l_msg = cl_getmsg_parm('aps-00088',g_dlang,l_psce[l_ac].psce002)
         CALL cl_progress_no_window_ing(l_msg)
      END IF
      CALL apsp500_order(l_psce[l_ac].psce002)
           RETURNING l_success
      IF NOT l_success THEN
         EXIT FOR
      END IF
      
      #需求條件中來源為銷售預測
      IF g_bgjob <> "Y" THEN
         LET l_msg = cl_getmsg_parm('aps-00089',g_dlang,l_psce[l_ac].psce002)
         CALL cl_progress_no_window_ing(l_msg)
      END IF
      CALL apsp500_forecast(l_psce[l_ac].psce002)
           RETURNING l_success
      IF NOT l_success THEN
         EXIT FOR
      END IF
      
      #需求條件中來源為獨立需求
      IF g_bgjob <> "Y" THEN
         LET l_msg = cl_getmsg_parm('aps-00090',g_dlang,l_psce[l_ac].psce002)
         CALL cl_progress_no_window_ing(l_msg)
      END IF
      CALL apsp500_independent_demand(l_psce[l_ac].psce002)
           RETURNING l_success
      IF NOT l_success THEN
         EXIT FOR
      END IF
   END FOR
   
   IF l_success THEN
      CALL s_transaction_end('Y','0')
      CALL s_apsp500_aps(g_psca002,g_psca001,g_datetime,'')
           RETURNING l_success
   ELSE
      CALL s_transaction_end('N','0')
   END IF]]>
</point>
  <point name="transfer.argv.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   LET la_cmdrun.param[1] = la_param.psca001
   LET la_cmdrun.param[1] = la_param.base_date]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE l_datetime1  DATETIME YEAR TO SECOND
   DEFINE l_str        STRING
   DEFINE l_str1       STRING
   DEFINE l_max_days   LIKE type_t.num5
]]>
</point>
  <point name="ui_dialog.more_input" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[         INPUT lc_param.psca001,lc_param.base_date FROM psca001,base_date
               ATTRIBUTE(WITHOUT DEFAULTS)
            BEFORE INPUT
               LET lc_param.base_date = g_today
               LET l_datetime1 = cl_get_current()
               LET lc_param.base_date = cl_replace_str(l_datetime1,':','')
               LET lc_param.base_date = cl_replace_str(lc_param.base_date,' ','')
               LET lc_param.base_date = cl_replace_str(lc_param.base_date,'-','')
               
            AFTER FIELD psca001
               CALL apsp500_psca001_ref(lc_param.psca001) 
               IF NOT cl_null(lc_param.psca001) THEN
                  IF NOT apsp500_psca001_chk(lc_param.psca001) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
            BEFORE FIELD base_date
               CALL cl_err('','aps-00087',0)
               
            AFTER FIELD base_date
               IF NOT cl_null(lc_param.base_date) THEN
                  IF NOT s_num_isnum(lc_param.base_date) THEN
                     CALL cl_err(lc_param.base_date,'anm-00005',1)
                     NEXT FIELD CURRENT
                  END IF
                  IF LENGTH(lc_param.base_date) <> 14 THEN
                     CALL cl_err(lc_param.base_date,'sub-00262',1)
                     NEXT FIELD CURRENT
                  END IF
                  LET l_str = lc_param.base_date
                  LET l_str1 = l_str.subString(1,4)
                  IF l_str1 < 1900 OR l_str1 > 2100 THEN
                     CALL cl_err(lc_param.base_date,'sub-00262',1)
                     NEXT FIELD CURRENT
                  END IF
                  LET l_str1 = l_str.subString(5,6)
                  IF l_str1 < 1 OR l_str1 > 12 THEN
                     CALL cl_err(lc_param.base_date,'sub-00262',1)
                     NEXT FIELD CURRENT
                  END IF
                  LET l_str1 = l_str.subString(7,8)
                  LET l_max_days = s_date_get_max_day(l_str.subString(1,4),l_str.subString(5,6))
                  IF l_str1 < 0 OR l_str1 > l_max_days THEN
                     CALL cl_err(lc_param.base_date,'sub-00262',1)
                     NEXT FIELD CURRENT
                  END IF
                  LET l_str1 = l_str.subString(9,10)
                  IF l_str1 < 0 OR l_str1 > 24 THEN
                     CALL cl_err(lc_param.base_date,'sub-00262',1)
                     NEXT FIELD CURRENT
                  END IF
                  LET l_str1 = l_str.subString(11,12)
                  IF l_str1 < 0 OR l_str1 > 60 THEN
                     CALL cl_err(lc_param.base_date,'sub-00262',1)
                     NEXT FIELD CURRENT
                  END IF
                  LET l_str1 = l_str.subString(13,14)
                  IF l_str1 < 0 OR l_str1 > 60 THEN
                     CALL cl_err(lc_param.base_date,'sub-00262',1)
                     NEXT FIELD CURRENT
                  END IF
               END IF
            
            ON ACTION controlp INFIELD psca001
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = lc_param.psca001
               LET g_qryparam.where = " pscasite = '",g_site,"'"
               CALL q_psca001()
               LET lc_param.psca001 = g_qryparam.return1
               DISPLAY lc_param.psca001 TO psca001
               
               CALL apsp500_psca001_ref(lc_param.psca001)
               
               NEXT FIELD psca001
         END INPUT]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.background" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[
   INITIALIZE lc_param.* TO NULL
   LET lc_param.base_date = g_today
   LET l_datetime1 = cl_get_current()
   LET lc_param.base_date = cl_replace_str(l_datetime1,':','')
   LET lc_param.base_date = cl_replace_str(lc_param.base_date,' ','')
   LET lc_param.base_date = cl_replace_str(lc_param.base_date,'-','')]]>
</point>
  <point name="ui_dialog.more_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.qbe_select" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.exit_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.background_finish" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="apsp500.description" ver="39" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000041
#+ 
#+ Filename...: apsp500
#+ Description: APS計算作業
#+ Creator....: 01588(2014/04/01)
#+ Modifier...: 01588(2014/04/11)
#+ Buildtype..: 應用 p01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="apsp500.global" ver="1" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="apsp500.init" ver="1" status="" src="s">
<![CDATA[#+ 初始化作業
PRIVATE FUNCTION apsp500_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="apsp500.main" ver="2" status="" src="s">
<![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aps","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL apsp500_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apsp500 WITH FORM cl_ap_formpath("aps",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL apsp500_init()
 
      #進入選單 Menu (="N")
      CALL apsp500_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_apsp500
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
</section>
  <section id="apsp500.other_function" ver="1" status="" src="s">
<![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
</section>
  <section id="apsp500.process" ver="1" status="" src="s">
<![CDATA[#+ 資料處理
PRIVATE FUNCTION apsp500_process(ls_js)
   DEFINE ls_js       STRING
   DEFINE lc_param    type_parameter
   DEFINE li_stus     LIKE type_t.num5
   DEFINE li_count    LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql      STRING             #主SQL
   #add-point:process段define
   {<point name="process.define"/>}
   #end add-point
 
   CALL util.JSON.parse(ls_js,lc_param)
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE apsp500_process_cs CURSOR FROM ls_sql
#  FOREACH apsp500_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm("std-00012") RETURNING li_stus
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
   END IF
END FUNCTION
]]>
</section>
  <section id="apsp500.transfer_argv" ver="1" status="" src="s">
<![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION apsp500_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog     STRING,
             param    DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
 
   CALL util.JSON.parse(ls_js,la_param)
 
   LET la_cmdrun.prog = g_prog
   #add-point:transfer.argv段define
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
</section>
  <section id="apsp500.ui_dialog" ver="4" status="" src="s">
<![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION apsp500_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num5
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET lc_param.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後
               {<point name="ui_dialog.qbe_select"/>}
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION batch_execute
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE lc_param.*  TO NULL
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION CLOSE 
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         LET g_jobid = g_prog,TODAY USING "yyyymmdd",CURRENT HOUR TO SECOND 
         LET g_jobid = cl_schedule_trim_colon(g_jobid)
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL apsp500_process(ls_js)
            WHEN g_schedule.gzpa003 = "1"
                 CALL cl_schedule_update_data(g_jobid)
                 LET ls_js = apsp500_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid)
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid)
         END CASE    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
         INITIALIZE lc_param.*  TO NULL 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
</section>
</add_points>