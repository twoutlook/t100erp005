<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="apst300" std_prog="apst300" erpver="1.0" module="APS" ver="3" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.apst300_psaa001_desc" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apst300_psaa001_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_psaa_m.psaa001
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_psaa_m.psaa001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_psaa_m.psaa001_desc
END FUNCTION]]>
  </point>
  <point name="function.apst300_psaa002_desc" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apst300_psaa002_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_psaa_m.psaa002
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_psaa_m.psaa002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_psaa_m.psaa002_desc
END FUNCTION]]>
  </point>
  <point name="function.apst300_psab001_desc" order="3" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apst300_psab001_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_psab_d[l_ac].psab001
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_psab_d[l_ac].psab001_desc = '', g_rtn_fields[1] , ''
   LET g_psab_d[l_ac].psab001_desc_desc = '', g_rtn_fields[2] , '' 
   DISPLAY BY NAME g_psab_d[l_ac].psab001_desc,g_psab_d[l_ac].psab001_desc_desc
END FUNCTION]]>
  </point>
  <point name="function.apst300_single_closed" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apst300_single_closed()
DEFINE l_cnt  LIKE type_t.num5   
   
   IF cl_null(l_ac) OR l_ac = 0 THEN 
      RETURN
   END IF
   IF g_psab_d[l_ac].psab008 = 'Y' THEN 
      CALL cl_err(g_psab_d[l_ac].psab008,'aps-00040',1)
      RETURN
   END IF
   UPDATE psab_t 
      SET psab008 = 'Y' 
    WHERE psabent = g_enterprise
      AND psabdocno = g_psaa_m.psaadocno
      AND psabseq = g_psab_d[l_ac].psabseq
   
   IF g_psaa_m.psaastus = 'Y' THEN
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt
        FROM psab_t
       WHERE psabent = g_enterprise
         AND psabdocno = g_psaa_m.psaadocno
         AND psab008 <> 'Y'
      IF l_cnt = 0 THEN 
         UPDATE psaa_t 
            SET psaastus = 'C' 
          WHERE psaaent = g_enterprise
            AND psaadocno = g_psaa_m.psaadocno
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.apst300_single_unclosed" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apst300_single_unclosed()
DEFINE l_cnt  LIKE type_t.num5

   IF cl_null(l_ac) OR l_ac = 0 THEN 
      RETURN
   END IF
   IF g_psab_d[l_ac].psab008 = 'N' THEN 
      CALL cl_err(g_psab_d[l_ac].psab008,'aps-00041',1)
      RETURN
   END IF   
   UPDATE psab_t 
      SET psab008 = 'N' 
    WHERE psabent = g_enterprise
      AND psabdocno = g_psaa_m.psaadocno
      AND psabseq = g_psab_d[l_ac].psabseq
   
   IF g_psaa_m.psaastus = 'C' THEN    
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt
        FROM psab_t
       WHERE psabent = g_enterprise
         AND psabdocno = g_psaa_m.psaadocno
         AND psab008 <> 'Y'
      IF l_cnt > 0 THEN 
         UPDATE psaa_t 
            SET psaastus = 'Y' 
          WHERE psaaent = g_enterprise
            AND psaadocno = g_psaa_m.psaadocno
      END IF
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.apst300_imaa005_exists" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apst300_imaa005_exists()
DEFINE l_imaa005  LIKE imaa_t.imaa005
   IF NOT cl_null(g_psab_d[l_ac].psab001) THEN
      SELECT imaa005 INTO l_imaa005 FROM imaa_t
       WHERE imaaent = g_enterprise AND imaa001 =  g_psab_d[l_ac].psab001
      IF cl_null(l_imaa005) THEN
         RETURN FALSE
      END IF
   ELSE
      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.apst300_psab001_ref" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apst300_psab001_ref()
   LET g_psab_d[l_ac].psab002 = ''
   LET g_psab_d[l_ac].psab004 = ''
   SELECT imaf053 INTO g_psab_d[l_ac].psab004 
     FROM imaf_t
    WHERE imafent = g_enterprise
      AND imafsite = g_psaa_m.psaasite
      AND imaf001 =  g_psab_d[l_ac].psab001
    
END FUNCTION]]>
  </point>
  <point name="b_fill.body.fill_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             LET g_psab_d[l_ac].net = g_psab_d[l_ac].psab005 - g_psab_d[l_ac].psab006                     ]]>
  </point>
  <point name="b_fill.sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="b_fill2.after_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="b_fill2.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="browser_fill.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="browser_fill.before_count" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="browser_fill.before_prepare" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="browser_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="browser_fill.open" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="browser_fill.other_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              CALL s_aooi200_get_slip_desc(g_browser[g_cnt].b_psaadocno) RETURNING g_browser[g_cnt].b_psaadocno_desc
      DISPLAY BY NAME g_browser[g_cnt].b_psaadocno_desc]]>
  </point>
  <point name="browser_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="construct.a.page1.net" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.page1.psab001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.page1.psab002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.page1.psab003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.page1.psab004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.page1.psab005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.page1.psab006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.page1.psab007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.page1.psab008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.page1.psab009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.page1.psabseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.page1.psabsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.psaa001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.psaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.psaa003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.psaacnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.psaacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.psaacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.psaadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.psaadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.psaamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.psaaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.psaaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.psaapstid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.a.psaasite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.a.psaastus" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.page1.net" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.page1.psab001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.page1.psab002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.page1.psab003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.page1.psab004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.page1.psab005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.page1.psab006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.page1.psab007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.page1.psab008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.page1.psab009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.page1.psabseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.page1.psabsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.psaa001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.psaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.psaa003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.psaacnfdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.psaacnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.psaacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.psaacrtdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.psaacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.psaadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.psaadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.psaamoddt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.psaamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.psaaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.psaaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.psaapstdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.psaapstid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="construct.b.psaasite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.b.psaastus" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.c.page1.net" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.c.page1.psab001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_psaa_m.psaasite 
            CALL q_imaf001_7()                            #呼叫開窗
            DISPLAY g_qryparam.return1 TO psab001  #顯示到畫面上

            NEXT FIELD psab001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.psab002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.c.page1.psab003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.c.page1.psab004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psab004  #顯示到畫面上

            NEXT FIELD psab004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.psab005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.c.page1.psab006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.c.page1.psab007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.c.page1.psab008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.c.page1.psab009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.c.page1.psabseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.c.page1.psabsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.c.psaa001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psaa001  #顯示到畫面上

            NEXT FIELD psaa001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.psaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psaa002  #顯示到畫面上

            NEXT FIELD psaa002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.psaa003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.c.psaacnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psaacnfid  #顯示到畫面上

            NEXT FIELD psaacnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.psaacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psaacrtdp  #顯示到畫面上

            NEXT FIELD psaacrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.psaacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psaacrtid  #顯示到畫面上

            NEXT FIELD psaacrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.psaadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.c.psaadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_psaadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psaadocno  #顯示到畫面上

            NEXT FIELD psaadocno                     #返回原欄位                                                                                    ]]>
  </point>
  <point name="construct.c.psaamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psaamodid  #顯示到畫面上

            NEXT FIELD psaamodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.psaaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psaaowndp  #顯示到畫面上

            NEXT FIELD psaaowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.psaaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psaaownid  #顯示到畫面上

            NEXT FIELD psaaownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.psaapstid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psaapstid  #顯示到畫面上

            NEXT FIELD psaapstid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.psaasite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="construct.c.psaastus" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="cs.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="cs.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                               ]]>
  </point>
  <point name="cs.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="cs.body.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="cs.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="cs.head.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="default_search.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="default_search.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="default_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="delete.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="delete.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="delete.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="delete.head.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="delete.head.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="delete_b.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="delete_b.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="delete_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="delete_b.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="delete_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="detail_reproduce.body.table1.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="detail_reproduce.body.table1.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="detail_reproduce.body.table1.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="detail_reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="detail_show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="detail_show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="detail_show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("modify,modify_detail,delete,con_qty,single_closed,single_unclosed",TRUE)
   CASE g_psaa_m.psaastus 
      WHEN 'Y'  
         CALL cl_set_act_visible("modify,modify_detail,delete",FALSE)
      WHEN 'C' 
         CALL cl_set_act_visible("modify,modify_detail,delete,con_qty",FALSE)
      WHEN 'N'  
         CALL cl_set_act_visible("con_qty,single_closed,single_unclosed",FALSE)
      WHEN 'X'  
         CALL cl_set_act_visible("modify,modify_detail,delete,con_qty,single_closed,single_unclosed",FALSE)
   END CASE      ]]>
  </point>
  <point name="fetch.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="fetch.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="fill_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="fill_chk.other_chk" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="filter.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="filter.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                               ]]>
  </point>
  <point name="filter.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="filter_parser.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_ooef        RECORD LIKE ooef_t.*
DEFINE g_qty         LIKE type_t.chr1
DEFINE g_psab_d_o    type_g_psab_d]]>
  </point>
  <point name="idx_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="idx_chk.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="input.a.page1.net" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.a.page1.psab001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL apst300_psab001_desc()                                                                        
            IF NOT cl_null(g_psab_d[l_ac].psab001) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_psaa_m.psaasite
               LET g_chkparam.arg2 = g_psab_d[l_ac].psab001
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imaf001_3") THEN
                  #檢查成功時後續處理
                  IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_psab_d[l_ac].psab001 <> g_psab_d_o.psab001 OR g_psab_d_o.psab001 IS NULL)) THEN 
                     CALL apst300_psab001_ref()
                  END IF   
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF
            CALL apst300_set_entry_b(l_cmd)
            CALL apst300_set_no_entry_b(l_cmd)            
            LET g_psab_d_o.psab001 = g_psab_d[l_ac].psab001                                          
]]>
  </point>
  <point name="input.a.page1.psab002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF cl_null(g_psab_d[l_ac].psab002) THEN 
               LET g_psab_d[l_ac].psab002 = ' '
            END IF]]>
  </point>
  <point name="input.a.page1.psab003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.a.page1.psab004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    
            IF NOT cl_null(g_psab_d[l_ac].psab004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_psab_d[l_ac].psab004

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
  </point>
  <point name="input.a.page1.psab005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    
            IF NOT cl_null(g_psab_d[l_ac].psab005) THEN
               IF g_psab_d[l_ac].psab005 < g_psab_d[l_ac].psab006 THEN 
                  CALL cl_err(g_psab_d[l_ac].psab006,'aps-00042',1)
                  LET g_psab_d[l_ac].psab005 = g_psab_d_t.psab005 
                  NEXT FIELD CURRENT
               END IF
               LET g_psab_d[l_ac].net = g_psab_d[l_ac].psab005 - g_psab_d[l_ac].psab006
            END IF             

]]>
  </point>
  <point name="input.a.page1.psab006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    
            IF NOT cl_null(g_psab_d[l_ac].psab006) THEN
               IF g_psab_d[l_ac].psab006 > g_psab_d[l_ac].psab005 THEN 
                  CALL cl_err(g_psab_d[l_ac].psab006,'aps-00039',1)
                  LET g_psab_d[l_ac].psab006 = g_psab_d_t.psab006 
                  NEXT FIELD CURRENT
               END IF
               LET g_psab_d[l_ac].net = g_psab_d[l_ac].psab005 - g_psab_d[l_ac].psab006
            END IF 
]]>
  </point>
  <point name="input.a.page1.psab007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.a.page1.psab008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.a.page1.psab009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.a.page1.psabseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a05產生
            IF  g_psaa_m.psaadocno IS NOT NULL AND g_psab_d[g_detail_idx].psabseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_psaa_m.psaadocno != g_psaadocno_t OR g_psab_d[g_detail_idx].psabseq != g_psab_d_t.psabseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM psab_t WHERE "||"psabent = '" ||g_enterprise|| "' AND "||"psabdocno = '"||g_psaa_m.psaadocno ||"' AND "|| "psabseq = '"||g_psab_d[g_detail_idx].psabseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.psabsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.a.psaa001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    
            CALL apst300_psaa001_desc()
            IF NOT cl_null(g_psaa_m.psaa001) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_psaa_m.psaa001

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_psaa_m.psaa001 = g_psaa_m_t.psaa001
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
  </point>
  <point name="input.a.psaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    
            CALL apst300_psaa002_desc()
            IF NOT cl_null(g_psaa_m.psaa002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_psaa_m.psaa002
               LET g_chkparam.arg2 = g_psaa_m.psaadocdt

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_psaa_m.psaa002 = g_psaa_m_t.psaa002
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
  </point>
  <point name="input.a.psaa003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.a.psaadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    IF cl_null(g_psaa_m.psaadocdt) THEN 
               NEXT FIELD CURRENT
            END IF]]>
  </point>
  <point name="input.a.psaadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                
            CALL s_aooi200_get_slip_desc(g_psaa_m.psaadocno) RETURNING g_psaa_m.psaadocno_desc
            DISPLAY BY NAME g_psaa_m.psaadocno_desc            
            
            #此段落由子樣板a05產生
            IF NOT cl_null(g_psaa_m.psaadocno) THEN
               IF NOT s_aooi200_chk_slip(g_psaa_m.psaasite,'',g_psaa_m.psaadocno,'apst300') THEN
                  LET g_psaa_m.psaadocno = g_psaa_m_t.psaadocno
                  NEXT FIELD CURRENT
               END IF             
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_psaa_m.psaadocno != g_psaadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM psaa_t WHERE "||"psaaent = '" ||g_enterprise|| "' AND "||"psaadocno = '"||g_psaa_m.psaadocno ||"'",'std-00004',0) THEN 
                     LET g_psaa_m.psaadocno = g_psaa_m_t.psaadocno
                     NEXT FIELD CURRENT
                  END IF
               END IF
               NEXT FIELD psaadocdt
            ELSE   
               NEXT FIELD CURRENT   
            END IF
]]>
  </point>
  <point name="input.a.psaasite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.a.psaastus" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="input.after_set_entry" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="input.b.page1.net" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.b.page1.psab001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL apst300_psab001_desc()                                                                          ]]>
  </point>
  <point name="input.b.page1.psab002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF apst300_imaa005_exists() THEN 
               IF cl_null(g_psab_d[l_ac].psab002) THEN
                  CALL aimm200_02(g_psab_d[l_ac].psab001) RETURNING g_psab_d[l_ac].psab002
                  IF cl_null(g_psab_d[l_ac].psab002) THEN
                     LET g_psab_d[l_ac].psab002 = ' '
                  END IF
                  DISPLAY BY NAME g_psab_d[l_ac].psab002
               END IF
            END IF                                                                                   ]]>
  </point>
  <point name="input.b.page1.psab003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.b.page1.psab004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.b.page1.psab005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.b.page1.psab006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.b.page1.psab007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.b.page1.psab008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.b.page1.psab009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.b.page1.psabseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            IF cl_null(g_psab_d[l_ac].psabseq) THEN
               SELECT MAX(psabseq) INTO g_psab_d[l_ac].psabseq
                 FROM psab_t
                WHERE psabent = g_enterprise 
                  AND psabdocno = g_psaa_m.psaadocno
               IF cl_null(g_psab_d[l_ac].psabseq) THEN
                  LET g_psab_d[l_ac].psabseq = 1
               ELSE
                  LET g_psab_d[l_ac].psabseq = g_psab_d[l_ac].psabseq +1
               END IF
            END IF                                    ]]>
  </point>
  <point name="input.b.page1.psabsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.b.psaa001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    CALL apst300_psaa001_desc()]]>
  </point>
  <point name="input.b.psaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    CALL apst300_psaa002_desc()]]>
  </point>
  <point name="input.b.psaa003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.b.psaadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.b.psaadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    CALL s_aooi200_get_slip_desc(g_psaa_m.psaadocno) RETURNING g_psaa_m.psaadocno_desc
            DISPLAY BY NAME g_psaa_m.psaadocno_desc             ]]>
  </point>
  <point name="input.b.psaasite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.b.psaastus" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         IF g_qty = 'Y' THEN    
            CALL FGL_SET_ARR_CURR(l_ac)
         END IF            ]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_qty = '1' THEN 
      LET l_allow_insert = FALSE
      LET l_allow_delete = FALSE     
   END IF
   LET g_errshow = 1]]>
  </point>
  <point name="input.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                                              ]]>
  </point>
  <point name="input.body.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="input.body.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.body.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.body.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="input.body.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="input.body.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF l_cmd = 'a' THEN
               IF cl_null(g_psab_d[l_ac].psabseq) THEN
                  SELECT MAX(psabseq) INTO g_psab_d[l_ac].psabseq
                    FROM psab_t
                   WHERE psabent = g_enterprise 
                     AND psabdocno = g_psaa_m.psaadocno
                  IF cl_null(g_psab_d[l_ac].psabseq) THEN
                     LET g_psab_d[l_ac].psabseq = 1
                  ELSE
                     LET g_psab_d[l_ac].psabseq = g_psab_d[l_ac].psabseq +1
                  END IF
               END IF
            END IF
            LET g_psab_d_o.* = g_psab_d[l_ac].*  ]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_psab_d_o.* = g_psab_d[l_ac].*
            IF g_qty = '1' THEN
               IF g_psab_d[l_ac].psab008 = 'Y' THEN
                  IF g_rec_b = l_ac THEN 
                     LET l_i = 1
                  ELSE
                     LET l_i = l_ac + 1
                  END IF
                  CALL FGL_SET_ARR_CURR(l_i)              
               END IF
            END IF            ]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_psab_d[l_ac].psabsite = g_site 
            LET g_psab_d[l_ac].psab002 = ' '            ]]>
  </point>
  <point name="input.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="input.c.page1.net" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.c.page1.psab001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_psab_d[l_ac].psab001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_psaa_m.psaasite 
            CALL q_imaf001_7()                                #呼叫開窗

            LET g_psab_d[l_ac].psab001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_psab_d[l_ac].psab001 TO psab001              #顯示到畫面上

            NEXT FIELD psab001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.psab002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_psab_d[l_ac].psab002             #給予default值
            LET l_psab002_t = g_psab_d[l_ac].psab002
            #給予arg

            CALL aimm200_02(g_psab_d[l_ac].psab001) RETURNING g_qryparam.return1                             #呼叫開窗

            LET g_psab_d[l_ac].psab002 = g_qryparam.return1              #將開窗取得的值回傳到變數
            IF cl_null(g_psab_d[l_ac].psab002) THEN
               LET g_psab_d[l_ac].psab002 = l_psab002_t
            END IF
            DISPLAY g_psab_d[l_ac].psab002 TO psab002              #顯示到畫面上                                  ]]>
  </point>
  <point name="input.c.page1.psab003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.c.page1.psab004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_psab_d[l_ac].psab004             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_psab_d[l_ac].psab004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_psab_d[l_ac].psab004 TO psab004              #顯示到畫面上

            NEXT FIELD psab004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.psab005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.c.page1.psab006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.c.page1.psab007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.c.page1.psab008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.c.page1.psab009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.c.page1.psabseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.c.page1.psabsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.c.psaa001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_psaa_m.psaa001             #給予default值

            #給予arg

            CALL q_ooag001()                                #呼叫開窗

            LET g_psaa_m.psaa001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_psaa_m.psaa001 TO psaa001              #顯示到畫面上

            NEXT FIELD psaa001                          #返回原欄位

]]>
  </point>
  <point name="input.c.psaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_psaa_m.psaa002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_psaa_m.psaadocdt

            CALL q_ooeg001()                                #呼叫開窗

            LET g_psaa_m.psaa002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_psaa_m.psaa002 TO psaa002              #顯示到畫面上

            NEXT FIELD psaa002                          #返回原欄位

]]>
  </point>
  <point name="input.c.psaa003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.c.psaadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                   ]]>
  </point>
  <point name="input.c.psaadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                                        #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_psaa_m.psaadocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef.ooef004 #
            LET g_qryparam.arg2 = "apst300" #

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_psaa_m.psaadocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_psaa_m.psaadocno TO psaadocno              #顯示到畫面上

            NEXT FIELD psaadocno                          #返回原欄位                         ]]>
  </point>
  <point name="input.c.psaasite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.c.psaastus" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.d.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_psab002_t            LIKE psab_t.psab002  ]]>
  </point>
  <point name="input.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="input.g.page1.net" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.page1.psab001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.page1.psab002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.page1.psab003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.page1.psab004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.page1.psab005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.page1.psab006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.page1.psab007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.page1.psab008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.page1.psab009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.page1.psabseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.page1.psabsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.psaa001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.psaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.psaa003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.psaadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.psaadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.psaasite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.g.psaastus" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="input.head.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         
               CALL s_aooi200_gen_docno(g_psaa_m.psaasite,g_psaa_m.psaadocno,g_psaa_m.psaadocdt,g_prog)
               RETURNING g_success,g_psaa_m.psaadocno
               IF g_success  = 0  THEN
                  CALL cl_err(g_psaa_m.psaadocno,'apm-00003',1)
                  NEXT FIELD psaadocno
               ELSE
                  CALL apst300_set_entry('u') 
                  CALL apst300_set_no_entry('u')                  
               END IF 
               DISPLAY BY NAME g_psaa_m.psaadocno               ]]>
  </point>
  <point name="input.head.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="input.head.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="input.head.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.more_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="input.other_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="insert.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    LET g_psaa_m.psaadocdt = cl_get_current()
      LET g_psaa_m.psaastus = "N"      
      LET g_psaa_m.psaa001 = g_user
      LET g_psaa_m.psaa002 = g_dept
      LET g_psaa_m.psaasite = g_site
      CALL apst300_psaa001_desc()
      CALL apst300_psaa002_desc()
      LET g_psaa_m_t.* = g_psaa_m.*]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="insert_b.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="insert_b.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="insert_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="insert_b.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="insert_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="lock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="lock_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="main.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="main.before_close" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="main.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  SELECT * INTO g_ooef.* FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site      ]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="main.servicecall" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="menu.con_qty" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               LET g_qty = '1'
               CALL apst300_modify()
               LET g_qty = '0']]>
  </point>
  <point name="menu.default.insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="menu.delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="menu.insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="menu.modify" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="menu.modify_detail" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="menu.output" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="menu.query" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="menu.reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="menu.single_closed" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              CALL apst300_single_closed()]]>
  </point>
  <point name="menu.single_unclosed" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              CALL apst300_single_unclosed()]]>
  </point>
  <point name="modify.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="modify.body.a_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                               ]]>
  </point>
  <point name="modify.body.b_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                               ]]>
  </point>
  <point name="modify.body.m_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                               ]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="query.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="query.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="reproduce.after_reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_psaa_m.psaacnfid = ""
   LET g_psaa_m.psaacnfdt = ""   
   LET g_psaa_m.psaastus ='N'
   DISPLAY BY NAME g_psaa_m.*
   LET g_psaa_m_t.* =  g_psaa_m.*    ]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("psaa001,psaa002,psaa003",TRUE)
                  ]]>
  </point>
  <point name="set_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL cl_set_comp_entry("psaadocdt",TRUE)]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("psabseq,psab001,psab002,psab003,psab004,psab005,psab007,psab009",TRUE)
                   ]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      IF g_qty = '1' THEN 
      CALL cl_set_comp_entry("psaa001,psaa002,psaa003",FALSE)
   END IF  ]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL cl_set_comp_entry("psaadocdt",FALSE)]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_qty = '1' THEN 
      CALL cl_set_comp_entry("psabseq,psab001,psab002,psab003,psab004,psab005,psab007,psab009",FALSE)
   END IF 
   IF NOT apst300_imaa005_exists() THEN
      CALL cl_set_comp_entry("psab002",FALSE)
      LET g_psab_d[l_ac].psab002 = ' '
   END IF   ]]>
  </point>
  <point name="show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="show.body.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              
      LET g_psab_d[l_ac].net = g_psab_d[l_ac].psab005 - g_psab_d[l_ac].psab006       
#      CALL apst300_psab001_desc()
]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="show.head.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     
            CALL s_aooi200_get_slip_desc(g_psaa_m.psaadocno) RETURNING g_psaa_m.psaadocno_desc
            DISPLAY BY NAME g_psaa_m.psaadocno_desc
#            CALL apst300_psaa001_desc()
#            CALL apst300_psaa002_desc()
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_psaa_m.psaaownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_psaa_m.psaaownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_psaa_m.psaaownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_psaa_m.psaaowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_psaa_m.psaaowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_psaa_m.psaaowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_psaa_m.psaacrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_psaa_m.psaacrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_psaa_m.psaacrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_psaa_m.psaacrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_psaa_m.psaacrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_psaa_m.psaacrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_psaa_m.psaamodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_psaa_m.psaamodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_psaa_m.psaamodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_psaa_m.psaacnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_psaa_m.psaacnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_psaa_m.psaacnfid_desc
]]>
  </point>
  <point name="show.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         CALL s_transaction_end('Y','0')            ]]>
  </point>
  <point name="statechange.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL s_transaction_begin()
   IF lc_state = "C" THEN 
      UPDATE psab_t 
         SET psab008 = 'Y' 
       WHERE psabent = g_enterprise
         AND psabdocno = g_psaa_m.psaadocno
      IF SQLCA.sqlcode <> 0 THEN 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
   ELSE    
      UPDATE psab_t 
         SET psab008 = 'N' 
       WHERE psabent = g_enterprise
         AND psabdocno = g_psaa_m.psaadocno
      IF SQLCA.sqlcode <> 0 THEN 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
   END IF
   IF lc_state = "Y" THEN 
      LET g_psaa_m.psaacnfid = g_user
      LET g_psaa_m.psaacnfdt = cl_get_current()
      UPDATE psaa_t 
         SET psaacnfid = g_psaa_m.psaacnfid,
             psaacnfdt = g_psaa_m.psaacnfdt         
       WHERE psaaent = g_enterprise
         AND psaadocno = g_psaa_m.psaadocno
      IF SQLCA.sqlcode <> 0 THEN 
         CALL s_transaction_end('N','0')
         RETURN
      END IF        
   END IF
   IF lc_state = "N" THEN 
      LET g_psaa_m.psaacnfid = ''
      LET g_psaa_m.psaacnfdt = ''
      UPDATE psaa_t 
         SET psaacnfid = g_psaa_m.psaacnfid,
             psaacnfdt = g_psaa_m.psaacnfdt         
       WHERE psaaent = g_enterprise
         AND psaadocno = g_psaa_m.psaadocno
      IF SQLCA.sqlcode <> 0 THEN 
         CALL s_transaction_end('N','0')
         RETURN
      END IF        
   END IF   ]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_psaa_m.psaastus = 'X' THEN 
      CALL cl_err(g_psaa_m.psaastus,'sub-00229',1)
      RETURN
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     CASE g_psaa_m.psaastus
            WHEN "N"
               HIDE OPTION "open"
               HIDE OPTION "closed"
            WHEN "X"
               HIDE OPTION "invalid"
               HIDE OPTION "confirmed"
               HIDE OPTION "closed"
               HIDE OPTION "open"
            WHEN "Y"
               HIDE OPTION "confirmed"
               HIDE OPTION "invalid"
            WHEN "C"
               HIDE OPTION "closed"
               HIDE OPTION "open"
               HIDE OPTION "invalid"
            
         END CASE                              ]]>
  </point>
  <point name="statechange.closed" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                               ]]>
  </point>
  <point name="statechange.confirmed" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                               ]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="statechange.invalid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                               ]]>
  </point>
  <point name="statechange.more_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="statechange.open" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                               ]]>
  </point>
  <point name="ui_browser_refresh.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="ui_detailshow.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="ui_detailshow.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="ui_detailshow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="ui_dialog.action_default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                               ]]>
  </point>
  <point name="ui_dialog.page1.action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="ui_dialog.page1.before_display" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="ui_dialog.page1.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                                         ]]>
  </point>
  <point name="ui_headershow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="unlock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="unlock_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="update_b.after_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="update_b.before_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="update_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="update_b.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                          ]]>
  </point>
  <point name="update_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <section id="apst300.b_fill" ver="6" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION apst300_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_psab_d.clear()    #g_psab_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF apst300_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE psabseq,psab001,psab002,psab003,psab004,psab005,psab006,psab007,psab008, 
          psab009,psabsite ,t1.imaal003 ,t2.imaal004 FROM psab_t",   
                  " INNER JOIN psaa_t ON psaadocno = psabdocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=psab001 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=psab001 AND t2.imaal002='"||g_dlang||"' ",
 
                  " WHERE psabent=? AND psabdocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY psab_t.psabseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE apst300_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR apst300_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_psaa_m.psaadocno
                                               
      FOREACH b_fill_cs INTO g_psab_d[l_ac].psabseq,g_psab_d[l_ac].psab001,g_psab_d[l_ac].psab002,g_psab_d[l_ac].psab003, 
          g_psab_d[l_ac].psab004,g_psab_d[l_ac].psab005,g_psab_d[l_ac].psab006,g_psab_d[l_ac].psab007, 
          g_psab_d[l_ac].psab008,g_psab_d[l_ac].psab009,g_psab_d[l_ac].psabsite,g_psab_d[l_ac].psab001_desc, 
          g_psab_d[l_ac].psab001_desc_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_psab_d.deleteElement(g_psab_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE apst300_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="apst300.b_fill2" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION apst300_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL apst300_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="apst300.browser_fill" ver="11" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION apst300_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_psaa_m.* TO NULL
   CALL g_psab_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "psaadocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE psaadocno ",
                      " FROM psaa_t ",
                      " ",
                      " LEFT JOIN psab_t ON psabent = psaaent AND psaadocno = psabdocno ",
 
 
                      " ", 
                      " ", 
                      " WHERE psaaent = '" ||g_enterprise|| "' AND psabent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("psaa_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE psaadocno ",
                      " FROM psaa_t ", 
                      "  ",
                      "  ",
                      " WHERE psaaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("psaa_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照psaadocno,'',psaadocdt,psaa001,'',psaa002,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT psaastus,psaadocno,'',psaadocdt,psaa001,'',psaa002,'',t1.oofa011 ,t2.ooefl003 ", 

               " FROM psaa_t ",
               "  ",
               "  LEFT JOIN psab_t ON psabent = psaaent AND psaadocno = psabdocno ",
 
 
               "  ",
               "  ",
                              " LEFT JOIN oofa_t t1 ON t1.oofaent='"||g_enterprise||"' AND t1.oofa002='2' AND t1.oofa003=psaa001  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=psaa002 AND t2.ooefl002='"||g_lang||"' ",
 
               " WHERE psaaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("psaa_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_psaadocno,g_browser[g_cnt].b_psaadocno_desc, 
       g_browser[g_cnt].b_psaadocdt,g_browser[g_cnt].b_psaa001,g_browser[g_cnt].b_psaa001_desc,g_browser[g_cnt].b_psaa002, 
       g_browser[g_cnt].b_psaa002_desc,g_browser[g_cnt].b_psaa001_desc,g_browser[g_cnt].b_psaa002_desc 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "C"
            LET g_browser[g_cnt].b_statepic = "stus/16/closed.png"
         WHEN "J"
            LET g_browser[g_cnt].b_statepic = "stus/16/reconciliate.png"
         WHEN "K"
            LET g_browser[g_cnt].b_statepic = "stus/16/unreconciliate.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="apst300.browser_search" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION apst300_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY psaadocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL apst300_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="apst300.construct" ver="11" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION apst300_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_psaa_m.* TO NULL
   CALL g_psab_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON psaadocno,psaadocno_desc,psaadocdt,psaasite,psaa001,psaa002,psaa003, 
          psaastus,psaaownid,psaaowndp,psaacrtid,psaacrtdp,psaacrtdt,psaamodid,psaamoddt,psaacnfid,psaacnfdt 

 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<psaacrtdt>>----
         AFTER FIELD psaacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<psaamoddt>>----
         AFTER FIELD psaamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<psaacnfdt>>----
         AFTER FIELD psaacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<psaapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.psaadocno
         ON ACTION controlp INFIELD psaadocno
            #add-point:ON ACTION controlp INFIELD psaadocno
            {<point name="construct.c.psaadocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaadocno
            #add-point:BEFORE FIELD psaadocno
            {<point name="construct.b.psaadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaadocno
            
            #add-point:AFTER FIELD psaadocno
            {<point name="construct.a.psaadocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaadocno_desc
            #add-point:BEFORE FIELD psaadocno_desc
            {<point name="construct.b.psaadocno_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaadocno_desc
            
            #add-point:AFTER FIELD psaadocno_desc
            {<point name="construct.a.psaadocno_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psaadocno_desc
         ON ACTION controlp INFIELD psaadocno_desc
            #add-point:ON ACTION controlp INFIELD psaadocno_desc
            {<point name="construct.c.psaadocno_desc" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaadocdt
            #add-point:BEFORE FIELD psaadocdt
            {<point name="construct.b.psaadocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaadocdt
            
            #add-point:AFTER FIELD psaadocdt
            {<point name="construct.a.psaadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psaadocdt
         ON ACTION controlp INFIELD psaadocdt
            #add-point:ON ACTION controlp INFIELD psaadocdt
            {<point name="construct.c.psaadocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaasite
            #add-point:BEFORE FIELD psaasite
            {<point name="construct.b.psaasite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaasite
            
            #add-point:AFTER FIELD psaasite
            {<point name="construct.a.psaasite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psaasite
         ON ACTION controlp INFIELD psaasite
            #add-point:ON ACTION controlp INFIELD psaasite
            {<point name="construct.c.psaasite" />}
            #END add-point
 
         #Ctrlp:construct.c.psaa001
         ON ACTION controlp INFIELD psaa001
            #add-point:ON ACTION controlp INFIELD psaa001
            {<point name="construct.c.psaa001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaa001
            #add-point:BEFORE FIELD psaa001
            {<point name="construct.b.psaa001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaa001
            
            #add-point:AFTER FIELD psaa001
            {<point name="construct.a.psaa001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psaa002
         ON ACTION controlp INFIELD psaa002
            #add-point:ON ACTION controlp INFIELD psaa002
            {<point name="construct.c.psaa002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaa002
            #add-point:BEFORE FIELD psaa002
            {<point name="construct.b.psaa002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaa002
            
            #add-point:AFTER FIELD psaa002
            {<point name="construct.a.psaa002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaa003
            #add-point:BEFORE FIELD psaa003
            {<point name="construct.b.psaa003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaa003
            
            #add-point:AFTER FIELD psaa003
            {<point name="construct.a.psaa003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psaa003
         ON ACTION controlp INFIELD psaa003
            #add-point:ON ACTION controlp INFIELD psaa003
            {<point name="construct.c.psaa003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaastus
            #add-point:BEFORE FIELD psaastus
            {<point name="construct.b.psaastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaastus
            
            #add-point:AFTER FIELD psaastus
            {<point name="construct.a.psaastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psaastus
         ON ACTION controlp INFIELD psaastus
            #add-point:ON ACTION controlp INFIELD psaastus
            {<point name="construct.c.psaastus" />}
            #END add-point
 
         #Ctrlp:construct.c.psaaownid
         ON ACTION controlp INFIELD psaaownid
            #add-point:ON ACTION controlp INFIELD psaaownid
            {<point name="construct.c.psaaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaaownid
            #add-point:BEFORE FIELD psaaownid
            {<point name="construct.b.psaaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaaownid
            
            #add-point:AFTER FIELD psaaownid
            {<point name="construct.a.psaaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psaaowndp
         ON ACTION controlp INFIELD psaaowndp
            #add-point:ON ACTION controlp INFIELD psaaowndp
            {<point name="construct.c.psaaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaaowndp
            #add-point:BEFORE FIELD psaaowndp
            {<point name="construct.b.psaaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaaowndp
            
            #add-point:AFTER FIELD psaaowndp
            {<point name="construct.a.psaaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psaacrtid
         ON ACTION controlp INFIELD psaacrtid
            #add-point:ON ACTION controlp INFIELD psaacrtid
            {<point name="construct.c.psaacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaacrtid
            #add-point:BEFORE FIELD psaacrtid
            {<point name="construct.b.psaacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaacrtid
            
            #add-point:AFTER FIELD psaacrtid
            {<point name="construct.a.psaacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psaacrtdp
         ON ACTION controlp INFIELD psaacrtdp
            #add-point:ON ACTION controlp INFIELD psaacrtdp
            {<point name="construct.c.psaacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaacrtdp
            #add-point:BEFORE FIELD psaacrtdp
            {<point name="construct.b.psaacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaacrtdp
            
            #add-point:AFTER FIELD psaacrtdp
            {<point name="construct.a.psaacrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaacrtdt
            #add-point:BEFORE FIELD psaacrtdt
            {<point name="construct.b.psaacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.psaamodid
         ON ACTION controlp INFIELD psaamodid
            #add-point:ON ACTION controlp INFIELD psaamodid
            {<point name="construct.c.psaamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaamodid
            #add-point:BEFORE FIELD psaamodid
            {<point name="construct.b.psaamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaamodid
            
            #add-point:AFTER FIELD psaamodid
            {<point name="construct.a.psaamodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaamoddt
            #add-point:BEFORE FIELD psaamoddt
            {<point name="construct.b.psaamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.psaacnfid
         ON ACTION controlp INFIELD psaacnfid
            #add-point:ON ACTION controlp INFIELD psaacnfid
            {<point name="construct.c.psaacnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaacnfid
            #add-point:BEFORE FIELD psaacnfid
            {<point name="construct.b.psaacnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaacnfid
            
            #add-point:AFTER FIELD psaacnfid
            {<point name="construct.a.psaacnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaacnfdt
            #add-point:BEFORE FIELD psaacnfdt
            {<point name="construct.b.psaacnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON psabseq,psab001,psab002,psab003,psab004,psab005,psab006,psab007,psab008, 
          psab009,psabsite
           FROM s_detail1[1].psabseq,s_detail1[1].psab001,s_detail1[1].psab002,s_detail1[1].psab003, 
               s_detail1[1].psab004,s_detail1[1].psab005,s_detail1[1].psab006,s_detail1[1].psab007,s_detail1[1].psab008, 
               s_detail1[1].psab009,s_detail1[1].psabsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD psabseq
            #add-point:BEFORE FIELD psabseq
            {<point name="construct.b.page1.psabseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psabseq
            
            #add-point:AFTER FIELD psabseq
            {<point name="construct.a.page1.psabseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.psabseq
         ON ACTION controlp INFIELD psabseq
            #add-point:ON ACTION controlp INFIELD psabseq
            {<point name="construct.c.page1.psabseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.psab001
         ON ACTION controlp INFIELD psab001
            #add-point:ON ACTION controlp INFIELD psab001
            {<point name="construct.c.page1.psab001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab001
            #add-point:BEFORE FIELD psab001
            {<point name="construct.b.page1.psab001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab001
            
            #add-point:AFTER FIELD psab001
            {<point name="construct.a.page1.psab001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.psab002
         ON ACTION controlp INFIELD psab002
            #add-point:ON ACTION controlp INFIELD psab002
            {<point name="construct.c.page1.psab002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab002
            #add-point:BEFORE FIELD psab002
            {<point name="construct.b.page1.psab002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab002
            
            #add-point:AFTER FIELD psab002
            {<point name="construct.a.page1.psab002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab003
            #add-point:BEFORE FIELD psab003
            {<point name="construct.b.page1.psab003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab003
            
            #add-point:AFTER FIELD psab003
            {<point name="construct.a.page1.psab003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.psab003
         ON ACTION controlp INFIELD psab003
            #add-point:ON ACTION controlp INFIELD psab003
            {<point name="construct.c.page1.psab003" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.psab004
         ON ACTION controlp INFIELD psab004
            #add-point:ON ACTION controlp INFIELD psab004
            {<point name="construct.c.page1.psab004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab004
            #add-point:BEFORE FIELD psab004
            {<point name="construct.b.page1.psab004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab004
            
            #add-point:AFTER FIELD psab004
            {<point name="construct.a.page1.psab004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab005
            #add-point:BEFORE FIELD psab005
            {<point name="construct.b.page1.psab005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab005
            
            #add-point:AFTER FIELD psab005
            {<point name="construct.a.page1.psab005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.psab005
         ON ACTION controlp INFIELD psab005
            #add-point:ON ACTION controlp INFIELD psab005
            {<point name="construct.c.page1.psab005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab006
            #add-point:BEFORE FIELD psab006
            {<point name="construct.b.page1.psab006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab006
            
            #add-point:AFTER FIELD psab006
            {<point name="construct.a.page1.psab006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.psab006
         ON ACTION controlp INFIELD psab006
            #add-point:ON ACTION controlp INFIELD psab006
            {<point name="construct.c.page1.psab006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab007
            #add-point:BEFORE FIELD psab007
            {<point name="construct.b.page1.psab007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab007
            
            #add-point:AFTER FIELD psab007
            {<point name="construct.a.page1.psab007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.psab007
         ON ACTION controlp INFIELD psab007
            #add-point:ON ACTION controlp INFIELD psab007
            {<point name="construct.c.page1.psab007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab008
            #add-point:BEFORE FIELD psab008
            {<point name="construct.b.page1.psab008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab008
            
            #add-point:AFTER FIELD psab008
            {<point name="construct.a.page1.psab008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.psab008
         ON ACTION controlp INFIELD psab008
            #add-point:ON ACTION controlp INFIELD psab008
            {<point name="construct.c.page1.psab008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab009
            #add-point:BEFORE FIELD psab009
            {<point name="construct.b.page1.psab009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab009
            
            #add-point:AFTER FIELD psab009
            {<point name="construct.a.page1.psab009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.psab009
         ON ACTION controlp INFIELD psab009
            #add-point:ON ACTION controlp INFIELD psab009
            {<point name="construct.c.page1.psab009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psabsite
            #add-point:BEFORE FIELD psabsite
            {<point name="construct.b.page1.psabsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psabsite
            
            #add-point:AFTER FIELD psabsite
            {<point name="construct.a.page1.psabsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.psabsite
         ON ACTION controlp INFIELD psabsite
            #add-point:ON ACTION controlp INFIELD psabsite
            {<point name="construct.c.page1.psabsite" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="apst300.default_search" ver="4" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION apst300_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " psaadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="apst300.delete" ver="8" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION apst300_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_psaa_m.psaadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE apst300_master_referesh USING g_psaa_m.psaadocno INTO g_psaa_m.psaadocno,g_psaa_m.psaadocdt, 
       g_psaa_m.psaasite,g_psaa_m.psaa001,g_psaa_m.psaa002,g_psaa_m.psaa003,g_psaa_m.psaastus,g_psaa_m.psaaownid, 
       g_psaa_m.psaaowndp,g_psaa_m.psaacrtid,g_psaa_m.psaacrtdp,g_psaa_m.psaacrtdt,g_psaa_m.psaamodid, 
       g_psaa_m.psaamoddt,g_psaa_m.psaacnfid,g_psaa_m.psaacnfdt,g_psaa_m.psaa001_desc,g_psaa_m.psaa002_desc, 
       g_psaa_m.psaaownid_desc,g_psaa_m.psaaowndp_desc,g_psaa_m.psaacrtid_desc,g_psaa_m.psaacrtdp_desc, 
       g_psaa_m.psaamodid_desc,g_psaa_m.psaacnfid_desc
   
   
 
   CALL apst300_show()
   
   CALL s_transaction_begin()
 
   OPEN apst300_cl USING g_enterprise,g_psaa_m.psaadocno
   IF STATUS THEN
      CALL cl_err("OPEN apst300_cl:", STATUS, 1)
      CLOSE apst300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apst300_master_referesh USING g_psaa_m.psaadocno INTO g_psaa_m.psaadocno,g_psaa_m.psaadocdt, 
       g_psaa_m.psaasite,g_psaa_m.psaa001,g_psaa_m.psaa002,g_psaa_m.psaa003,g_psaa_m.psaastus,g_psaa_m.psaaownid, 
       g_psaa_m.psaaowndp,g_psaa_m.psaacrtid,g_psaa_m.psaacrtdp,g_psaa_m.psaacrtdt,g_psaa_m.psaamodid, 
       g_psaa_m.psaamoddt,g_psaa_m.psaacnfid,g_psaa_m.psaacnfdt,g_psaa_m.psaa001_desc,g_psaa_m.psaa002_desc, 
       g_psaa_m.psaaownid_desc,g_psaa_m.psaaowndp_desc,g_psaa_m.psaacrtid_desc,g_psaa_m.psaacrtdp_desc, 
       g_psaa_m.psaamodid_desc,g_psaa_m.psaacnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_psaa_m.psaadocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL apst300_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_psaadocno_t = g_psaa_m.psaadocno
 
 
      DELETE FROM psaa_t
       WHERE psaaent = g_enterprise AND psaadocno = g_psaa_m.psaadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_psaa_m.psaadocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM psab_t
       WHERE psabent = g_enterprise AND psabdocno = g_psaa_m.psaadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("psab_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_psab_d.clear() 
 
     
      #CALL apst300_ui_browser_refresh()  
      CALL apst300_ui_headershow()  
      CALL apst300_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL apst300_browser_fill("")
         CALL apst300_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL apst300_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE apst300_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_psaa_m.psaadocno,'D')
    
END FUNCTION
]]>
  </section>
  <section id="apst300.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION apst300_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM psab_t
       WHERE psabent = g_enterprise AND
         psabdocno = ps_keys_bak[1] AND psabseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="apst300.description" ver="109" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000114
#+ 
#+ Filename...: apst300
#+ Description: 獨立需求維護作業
#+ Creator....: 02295(2014/03/05)
#+ Modifier...: 02295(2014/06/30)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="apst300.detail_reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION apst300_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE psab_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE apst300_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE apst300_detail AS ",
                "SELECT * FROM psab_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apst300_detail SELECT * FROM psab_t 
                                         WHERE psabent = g_enterprise AND psabdocno = g_psaadocno_t
 
   
   #將key修正為調整後   
   UPDATE apst300_detail 
      #更新key欄位
      SET psabdocno = g_psaa_m.psaadocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO psab_t SELECT * FROM apst300_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE apst300_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_psaadocno_t = g_psaa_m.psaadocno
 
   
   DROP TABLE apst300_detail
   
END FUNCTION
]]>
  </section>
  <section id="apst300.detail_show" ver="4" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION apst300_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="apst300.fetch" ver="6" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION apst300_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_psaa_m.psaadocno = g_browser[g_current_idx].b_psaadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE apst300_master_referesh USING g_psaa_m.psaadocno INTO g_psaa_m.psaadocno,g_psaa_m.psaadocdt, 
       g_psaa_m.psaasite,g_psaa_m.psaa001,g_psaa_m.psaa002,g_psaa_m.psaa003,g_psaa_m.psaastus,g_psaa_m.psaaownid, 
       g_psaa_m.psaaowndp,g_psaa_m.psaacrtid,g_psaa_m.psaacrtdp,g_psaa_m.psaacrtdt,g_psaa_m.psaamodid, 
       g_psaa_m.psaamoddt,g_psaa_m.psaacnfid,g_psaa_m.psaacnfdt,g_psaa_m.psaa001_desc,g_psaa_m.psaa002_desc, 
       g_psaa_m.psaaownid_desc,g_psaa_m.psaaowndp_desc,g_psaa_m.psaacrtid_desc,g_psaa_m.psaacrtdp_desc, 
       g_psaa_m.psaamodid_desc,g_psaa_m.psaacnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("psaa_t",SQLCA.sqlcode,1)
      INITIALIZE g_psaa_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL apst300_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="apst300.fill_chk" ver="4" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION apst300_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="apst300.filter" ver="4" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION apst300_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON psaadocno,psaadocdt,psaa001,psaa002
                          FROM s_browse[1].b_psaadocno,s_browse[1].b_psaadocdt,s_browse[1].b_psaa001, 
                              s_browse[1].b_psaa002
 
         BEFORE CONSTRUCT
               DISPLAY apst300_filter_parser('psaadocno') TO s_browse[1].b_psaadocno
            DISPLAY apst300_filter_parser('psaadocdt') TO s_browse[1].b_psaadocdt
            DISPLAY apst300_filter_parser('psaa001') TO s_browse[1].b_psaa001
            DISPLAY apst300_filter_parser('psaa002') TO s_browse[1].b_psaa002
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL apst300_filter_show('psaadocno')
   CALL apst300_filter_show('psaadocdt')
   CALL apst300_filter_show('psaa001')
   CALL apst300_filter_show('psaa002')
 
END FUNCTION
]]>
  </section>
  <section id="apst300.filter_parser" ver="2" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION apst300_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="apst300.filter_show" ver="2" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION apst300_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = apst300_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="apst300.global" ver="11" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_psaa_m        RECORD
       psaadocno LIKE psaa_t.psaadocno, 
   psaadocno_desc LIKE type_t.chr80, 
   psaadocdt LIKE psaa_t.psaadocdt, 
   psaasite LIKE psaa_t.psaasite, 
   psaa001 LIKE psaa_t.psaa001, 
   psaa001_desc LIKE type_t.chr80, 
   psaa002 LIKE psaa_t.psaa002, 
   psaa002_desc LIKE type_t.chr80, 
   psaa003 LIKE psaa_t.psaa003, 
   psaastus LIKE psaa_t.psaastus, 
   psaaownid LIKE psaa_t.psaaownid, 
   psaaownid_desc LIKE type_t.chr80, 
   psaaowndp LIKE psaa_t.psaaowndp, 
   psaaowndp_desc LIKE type_t.chr80, 
   psaacrtid LIKE psaa_t.psaacrtid, 
   psaacrtid_desc LIKE type_t.chr80, 
   psaacrtdp LIKE psaa_t.psaacrtdp, 
   psaacrtdp_desc LIKE type_t.chr80, 
   psaacrtdt DATETIME YEAR TO SECOND, 
   psaamodid LIKE psaa_t.psaamodid, 
   psaamodid_desc LIKE type_t.chr80, 
   psaamoddt DATETIME YEAR TO SECOND, 
   psaacnfid LIKE psaa_t.psaacnfid, 
   psaacnfid_desc LIKE type_t.chr80, 
   psaacnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_psab_d        RECORD
       psabseq LIKE psab_t.psabseq, 
   psab001 LIKE psab_t.psab001, 
   psab001_desc LIKE type_t.chr500, 
   psab001_desc_desc LIKE type_t.chr500, 
   psab002 LIKE psab_t.psab002, 
   psab003 LIKE psab_t.psab003, 
   psab004 LIKE psab_t.psab004, 
   psab005 LIKE psab_t.psab005, 
   psab006 LIKE psab_t.psab006, 
   net LIKE type_t.chr80, 
   psab007 LIKE psab_t.psab007, 
   psab008 LIKE psab_t.psab008, 
   psab009 LIKE psab_t.psab009, 
   psabsite LIKE psab_t.psabsite
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_psaa_m          type_g_psaa_m
DEFINE g_psaa_m_t        type_g_psaa_m
 
   DEFINE g_psaadocno_t LIKE psaa_t.psaadocno
 
 
DEFINE g_psab_d          DYNAMIC ARRAY OF type_g_psab_d
DEFINE g_psab_d_t        type_g_psab_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_psaadocno LIKE psaa_t.psaadocno,
   b_psaadocno_desc LIKE type_t.chr80,
      b_psaadocdt LIKE psaa_t.psaadocdt,
      b_psaa001 LIKE psaa_t.psaa001,
   b_psaa001_desc LIKE type_t.chr80,
      b_psaa002 LIKE psaa_t.psaa002,
   b_psaa002_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_psaadocno LIKE psaa_t.psaadocno,
   b_psaadocno_desc LIKE type_t.chr80,
      b_psaadocdt LIKE psaa_t.psaadocdt,
      b_psaa001 LIKE psaa_t.psaa001,
   b_psaa001_desc LIKE type_t.chr80,
      b_psaa002 LIKE psaa_t.psaa002,
   b_psaa002_desc LIKE type_t.chr80
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="apst300.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION apst300_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_psab_d.getLength() THEN
         LET g_detail_idx = g_psab_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_psab_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_psab_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="apst300.init" ver="4" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION apst300_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('psaastus','13','N,X,Y,C,J,K')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL apst300_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="apst300.input" ver="6" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION apst300_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT psabseq,psab001,psab002,psab003,psab004,psab005,psab006,psab007,psab008, 
       psab009,psabsite FROM psab_t WHERE psabent=? AND psabdocno=? AND psabseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apst300_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL apst300_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL apst300_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_psaa_m.psaadocno,g_psaa_m.psaadocdt,g_psaa_m.psaasite,g_psaa_m.psaa001,g_psaa_m.psaa002, 
       g_psaa_m.psaa003,g_psaa_m.psaastus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="apst300.input.body" ver="9" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_psab_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_psab_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL apst300_b_fill()
            LET g_rec_b = g_psab_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN apst300_cl USING g_enterprise,g_psaa_m.psaadocno
            IF STATUS THEN
               CALL cl_err("OPEN apst300_cl:", STATUS, 1)
               CLOSE apst300_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_psab_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_psab_d[l_ac].psabseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_psab_d_t.* = g_psab_d[l_ac].*  #BACKUP
               CALL apst300_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL apst300_set_no_entry_b(l_cmd)
               IF NOT apst300_lock_b("psab_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apst300_bcl INTO g_psab_d[l_ac].psabseq,g_psab_d[l_ac].psab001,g_psab_d[l_ac].psab002, 
                      g_psab_d[l_ac].psab003,g_psab_d[l_ac].psab004,g_psab_d[l_ac].psab005,g_psab_d[l_ac].psab006, 
                      g_psab_d[l_ac].psab007,g_psab_d[l_ac].psab008,g_psab_d[l_ac].psab009,g_psab_d[l_ac].psabsite 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_psab_d_t.psabseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL apst300_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_psab_d[l_ac].* TO NULL 
                  LET g_psab_d[l_ac].psab006 = "0"
      LET g_psab_d[l_ac].psab008 = "N"
      LET g_psab_d[l_ac].psab009 = "N"
 
            LET g_psab_d_t.* = g_psab_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apst300_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL apst300_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_psab_d[li_reproduce_target].* = g_psab_d[li_reproduce].*
 
               LET g_psab_d[li_reproduce_target].psabseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM psab_t 
             WHERE psabent = g_enterprise AND psabdocno = g_psaa_m.psaadocno
 
               AND psabseq = g_psab_d[l_ac].psabseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_psaa_m.psaadocno
               LET gs_keys[2] = g_psab_d[g_detail_idx].psabseq
               CALL apst300_insert_b('psab_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_psab_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("psab_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apst300_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_psab_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_psab_d.deleteElement(l_ac)
               NEXT FIELD psabseq
            END IF
         
            IF g_psab_d[l_ac].psabseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM psab_t
                WHERE psabent = g_enterprise AND psabdocno = g_psaa_m.psaadocno AND
 
                      psabseq = g_psab_d_t.psabseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("psab_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE apst300_bcl
               LET l_count = g_psab_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_psaa_m.psaadocno
               LET gs_keys[2] = g_psab_d[g_detail_idx].psabseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL apst300_delete_b('psab_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD psabseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_psab_d[l_ac].psabseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD psabseq
            END IF
 
 
            #add-point:AFTER FIELD psabseq
            {<point name="input.a.page1.psabseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psabseq
            #add-point:BEFORE FIELD psabseq
            {<point name="input.b.page1.psabseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE psabseq
            #add-point:ON CHANGE psabseq
            {<point name="input.g.page1.psabseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab001
            
            #add-point:AFTER FIELD psab001
            {<point name="input.a.page1.psab001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab001
            #add-point:BEFORE FIELD psab001
            {<point name="input.b.page1.psab001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE psab001
            #add-point:ON CHANGE psab001
            {<point name="input.g.page1.psab001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab002
            #add-point:BEFORE FIELD psab002
            {<point name="input.b.page1.psab002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab002
            
            #add-point:AFTER FIELD psab002
            {<point name="input.a.page1.psab002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psab002
            #add-point:ON CHANGE psab002
            {<point name="input.g.page1.psab002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab003
            #add-point:BEFORE FIELD psab003
            {<point name="input.b.page1.psab003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab003
            
            #add-point:AFTER FIELD psab003
            {<point name="input.a.page1.psab003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psab003
            #add-point:ON CHANGE psab003
            {<point name="input.g.page1.psab003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab004
            
            #add-point:AFTER FIELD psab004
            {<point name="input.a.page1.psab004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab004
            #add-point:BEFORE FIELD psab004
            {<point name="input.b.page1.psab004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE psab004
            #add-point:ON CHANGE psab004
            {<point name="input.g.page1.psab004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab005
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_psab_d[l_ac].psab005,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD psab005
            END IF
 
 
            #add-point:AFTER FIELD psab005
            {<point name="input.a.page1.psab005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab005
            #add-point:BEFORE FIELD psab005
            {<point name="input.b.page1.psab005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE psab005
            #add-point:ON CHANGE psab005
            {<point name="input.g.page1.psab005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab006
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_psab_d[l_ac].psab006,"0","1","","","azz-00079",1) THEN
               NEXT FIELD psab006
            END IF
 
 
            #add-point:AFTER FIELD psab006
            {<point name="input.a.page1.psab006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab006
            #add-point:BEFORE FIELD psab006
            {<point name="input.b.page1.psab006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE psab006
            #add-point:ON CHANGE psab006
            {<point name="input.g.page1.psab006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab007
            #add-point:BEFORE FIELD psab007
            {<point name="input.b.page1.psab007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab007
            
            #add-point:AFTER FIELD psab007
            {<point name="input.a.page1.psab007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psab007
            #add-point:ON CHANGE psab007
            {<point name="input.g.page1.psab007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab008
            #add-point:BEFORE FIELD psab008
            {<point name="input.b.page1.psab008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab008
            
            #add-point:AFTER FIELD psab008
            {<point name="input.a.page1.psab008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psab008
            #add-point:ON CHANGE psab008
            {<point name="input.g.page1.psab008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psab009
            #add-point:BEFORE FIELD psab009
            {<point name="input.b.page1.psab009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psab009
            
            #add-point:AFTER FIELD psab009
            {<point name="input.a.page1.psab009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psab009
            #add-point:ON CHANGE psab009
            {<point name="input.g.page1.psab009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psabsite
            #add-point:BEFORE FIELD psabsite
            {<point name="input.b.page1.psabsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psabsite
            
            #add-point:AFTER FIELD psabsite
            {<point name="input.a.page1.psabsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psabsite
            #add-point:ON CHANGE psabsite
            {<point name="input.g.page1.psabsite" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.psabseq
         ON ACTION controlp INFIELD psabseq
            #add-point:ON ACTION controlp INFIELD psabseq
            {<point name="input.c.page1.psabseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.psab001
         ON ACTION controlp INFIELD psab001
            #add-point:ON ACTION controlp INFIELD psab001
            {<point name="input.c.page1.psab001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.psab002
         ON ACTION controlp INFIELD psab002
            #add-point:ON ACTION controlp INFIELD psab002
            {<point name="input.c.page1.psab002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.psab003
         ON ACTION controlp INFIELD psab003
            #add-point:ON ACTION controlp INFIELD psab003
            {<point name="input.c.page1.psab003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.psab004
         ON ACTION controlp INFIELD psab004
            #add-point:ON ACTION controlp INFIELD psab004
            {<point name="input.c.page1.psab004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.psab005
         ON ACTION controlp INFIELD psab005
            #add-point:ON ACTION controlp INFIELD psab005
            {<point name="input.c.page1.psab005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.psab006
         ON ACTION controlp INFIELD psab006
            #add-point:ON ACTION controlp INFIELD psab006
            {<point name="input.c.page1.psab006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.psab007
         ON ACTION controlp INFIELD psab007
            #add-point:ON ACTION controlp INFIELD psab007
            {<point name="input.c.page1.psab007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.psab008
         ON ACTION controlp INFIELD psab008
            #add-point:ON ACTION controlp INFIELD psab008
            {<point name="input.c.page1.psab008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.psab009
         ON ACTION controlp INFIELD psab009
            #add-point:ON ACTION controlp INFIELD psab009
            {<point name="input.c.page1.psab009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.psabsite
         ON ACTION controlp INFIELD psabsite
            #add-point:ON ACTION controlp INFIELD psabsite
            {<point name="input.c.page1.psabsite" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_psab_d[l_ac].* = g_psab_d_t.*
               CLOSE apst300_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_psab_d[l_ac].psabseq,-263,1)
               LET g_psab_d[l_ac].* = g_psab_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE psab_t SET (psabdocno,psabseq,psab001,psab002,psab003,psab004,psab005,psab006, 
                   psab007,psab008,psab009,psabsite) = (g_psaa_m.psaadocno,g_psab_d[l_ac].psabseq,g_psab_d[l_ac].psab001, 
                   g_psab_d[l_ac].psab002,g_psab_d[l_ac].psab003,g_psab_d[l_ac].psab004,g_psab_d[l_ac].psab005, 
                   g_psab_d[l_ac].psab006,g_psab_d[l_ac].psab007,g_psab_d[l_ac].psab008,g_psab_d[l_ac].psab009, 
                   g_psab_d[l_ac].psabsite)
                WHERE psabent = g_enterprise AND psabdocno = g_psaa_m.psaadocno 
 
                  AND psabseq = g_psab_d_t.psabseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("psab_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_psab_d[l_ac].* = g_psab_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("psab_t",SQLCA.sqlcode,1)
                     LET g_psab_d[l_ac].* = g_psab_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_psaa_m.psaadocno
               LET gs_keys_bak[1] = g_psaadocno_t
               LET gs_keys[2] = g_psab_d[g_detail_idx].psabseq
               LET gs_keys_bak[2] = g_psab_d_t.psabseq
               CALL apst300_update_b('psab_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_psaa_m),util.JSON.stringify(g_psab_d_t)
               LET g_log2 = util.JSON.stringify(g_psaa_m),util.JSON.stringify(g_psab_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL apst300_unlock_b("psab_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_psab_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_psab_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="apst300.input.head" ver="5" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_psaa_m.psaadocno,g_psaa_m.psaadocdt,g_psaa_m.psaasite,g_psaa_m.psaa001,g_psaa_m.psaa002, 
          g_psaa_m.psaa003,g_psaa_m.psaastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD psaadocno
            
            #add-point:AFTER FIELD psaadocno
            {<point name="input.a.psaadocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaadocno
            #add-point:BEFORE FIELD psaadocno
            {<point name="input.b.psaadocno" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE psaadocno
            #add-point:ON CHANGE psaadocno
            {<point name="input.g.psaadocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaadocdt
            #add-point:BEFORE FIELD psaadocdt
            {<point name="input.b.psaadocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaadocdt
            
            #add-point:AFTER FIELD psaadocdt
            {<point name="input.a.psaadocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psaadocdt
            #add-point:ON CHANGE psaadocdt
            {<point name="input.g.psaadocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaasite
            #add-point:BEFORE FIELD psaasite
            {<point name="input.b.psaasite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaasite
            
            #add-point:AFTER FIELD psaasite
            {<point name="input.a.psaasite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psaasite
            #add-point:ON CHANGE psaasite
            {<point name="input.g.psaasite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaa001
            
            #add-point:AFTER FIELD psaa001
            {<point name="input.a.psaa001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaa001
            #add-point:BEFORE FIELD psaa001
            {<point name="input.b.psaa001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE psaa001
            #add-point:ON CHANGE psaa001
            {<point name="input.g.psaa001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaa002
            
            #add-point:AFTER FIELD psaa002
            {<point name="input.a.psaa002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaa002
            #add-point:BEFORE FIELD psaa002
            {<point name="input.b.psaa002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE psaa002
            #add-point:ON CHANGE psaa002
            {<point name="input.g.psaa002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaa003
            #add-point:BEFORE FIELD psaa003
            {<point name="input.b.psaa003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaa003
            
            #add-point:AFTER FIELD psaa003
            {<point name="input.a.psaa003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psaa003
            #add-point:ON CHANGE psaa003
            {<point name="input.g.psaa003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psaastus
            #add-point:BEFORE FIELD psaastus
            {<point name="input.b.psaastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psaastus
            
            #add-point:AFTER FIELD psaastus
            {<point name="input.a.psaastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psaastus
            #add-point:ON CHANGE psaastus
            {<point name="input.g.psaastus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.psaadocno
         ON ACTION controlp INFIELD psaadocno
            #add-point:ON ACTION controlp INFIELD psaadocno
            {<point name="input.c.psaadocno" />}
            #END add-point
 
         #Ctrlp:input.c.psaadocdt
         ON ACTION controlp INFIELD psaadocdt
            #add-point:ON ACTION controlp INFIELD psaadocdt
            {<point name="input.c.psaadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.psaasite
         ON ACTION controlp INFIELD psaasite
            #add-point:ON ACTION controlp INFIELD psaasite
            {<point name="input.c.psaasite" />}
            #END add-point
 
         #Ctrlp:input.c.psaa001
         ON ACTION controlp INFIELD psaa001
            #add-point:ON ACTION controlp INFIELD psaa001
            {<point name="input.c.psaa001" />}
            #END add-point
 
         #Ctrlp:input.c.psaa002
         ON ACTION controlp INFIELD psaa002
            #add-point:ON ACTION controlp INFIELD psaa002
            {<point name="input.c.psaa002" />}
            #END add-point
 
         #Ctrlp:input.c.psaa003
         ON ACTION controlp INFIELD psaa003
            #add-point:ON ACTION controlp INFIELD psaa003
            {<point name="input.c.psaa003" />}
            #END add-point
 
         #Ctrlp:input.c.psaastus
         ON ACTION controlp INFIELD psaastus
            #add-point:ON ACTION controlp INFIELD psaastus
            {<point name="input.c.psaastus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_psaa_m.psaadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO psaa_t (psaaent,psaadocno,psaadocdt,psaasite,psaa001,psaa002,psaa003,psaastus, 
                   psaaownid,psaaowndp,psaacrtid,psaacrtdp,psaacrtdt,psaacnfid,psaacnfdt)
               VALUES (g_enterprise,g_psaa_m.psaadocno,g_psaa_m.psaadocdt,g_psaa_m.psaasite,g_psaa_m.psaa001, 
                   g_psaa_m.psaa002,g_psaa_m.psaa003,g_psaa_m.psaastus,g_psaa_m.psaaownid,g_psaa_m.psaaowndp, 
                   g_psaa_m.psaacrtid,g_psaa_m.psaacrtdp,g_psaa_m.psaacrtdt,g_psaa_m.psaacnfid,g_psaa_m.psaacnfdt)  

               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_psaa_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL apst300_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE psaa_t SET (psaadocno,psaadocdt,psaasite,psaa001,psaa002,psaa003,psaastus,psaaownid, 
                   psaaowndp,psaacrtid,psaacrtdp,psaacrtdt,psaacnfid,psaacnfdt) = (g_psaa_m.psaadocno, 
                   g_psaa_m.psaadocdt,g_psaa_m.psaasite,g_psaa_m.psaa001,g_psaa_m.psaa002,g_psaa_m.psaa003, 
                   g_psaa_m.psaastus,g_psaa_m.psaaownid,g_psaa_m.psaaowndp,g_psaa_m.psaacrtid,g_psaa_m.psaacrtdp, 
                   g_psaa_m.psaacrtdt,g_psaa_m.psaacnfid,g_psaa_m.psaacnfdt)
                WHERE psaaent = g_enterprise AND psaadocno = g_psaadocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("psaa_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_psaa_m_t)
               LET g_log2 = util.JSON.stringify(g_psaa_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_psaadocno_t = g_psaa_m.psaadocno
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="apst300.input.other" ver="2" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD psaadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD psabseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="apst300.insert" ver="3" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION apst300_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_psab_d.clear()   
 
 
   INITIALIZE g_psaa_m.* LIKE psaa_t.*             #DEFAULT 設定
   
   LET g_psaadocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_psaa_m.psaaownid = g_user
      LET g_psaa_m.psaaowndp = g_dept
      LET g_psaa_m.psaacrtid = g_user
      LET g_psaa_m.psaacrtdp = g_dept 
      LET g_psaa_m.psaacrtdt = cl_get_current()
      LET g_psaa_m.psaamodid = ""
      LET g_psaa_m.psaamoddt = ""
      LET g_psaa_m.psaastus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL apst300_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_psaa_m.* = g_psaa_m_t.*
         CALL apst300_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_psab_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_psaadocno_t = g_psaa_m.psaadocno
 
   
   LET g_wc = g_wc,  
              " OR ( psaaent = '" ||g_enterprise|| "' AND",
              " psaadocno = '", g_psaa_m.psaadocno CLIPPED, "' "
 
              , ") "
   
   CLOSE apst300_cl
   
END FUNCTION
]]>
  </section>
  <section id="apst300.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION apst300_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO psab_t
                  (psabent,
                   psabdocno,
                   psabseq
                   ,psab001,psab002,psab003,psab004,psab005,psab006,psab007,psab008,psab009,psabsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_psab_d[g_detail_idx].psab001,g_psab_d[g_detail_idx].psab002,g_psab_d[g_detail_idx].psab003, 
                       g_psab_d[g_detail_idx].psab004,g_psab_d[g_detail_idx].psab005,g_psab_d[g_detail_idx].psab006, 
                       g_psab_d[g_detail_idx].psab007,g_psab_d[g_detail_idx].psab008,g_psab_d[g_detail_idx].psab009, 
                       g_psab_d[g_detail_idx].psabsite)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("psab_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="apst300.lock_b" ver="3" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION apst300_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL apst300_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "psab_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN apst300_bcl USING g_enterprise,
                                       g_psaa_m.psaadocno,g_psab_d[g_detail_idx].psabseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("apst300_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="apst300.main" ver="12" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aps","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT psaadocno,'',psaadocdt,psaasite,psaa001,'',psaa002,'',psaa003,psaastus, 
       psaaownid,'',psaaowndp,'',psaacrtid,'',psaacrtdp,'',psaacrtdt,psaamodid,'',psaamoddt,psaacnfid, 
       '',psaacnfdt", 
                      " FROM psaa_t",
                      " WHERE psaaent= ? AND psaadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apst300_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE psaadocno,psaadocdt,psaasite,psaa001,psaa002,psaa003,psaastus,psaaownid, 
       psaaowndp,psaacrtid,psaacrtdp,psaacrtdt,psaamodid,psaamoddt,psaacnfid,psaacnfdt,t1.oofa011 ,t2.ooefl003 , 
       t3.oofa011 ,t4.ooefl003 ,t5.oofa011 ,t6.ooefl003 ,t7.oofa011 ,t8.oofa011",
               " FROM psaa_t",
                              " LEFT JOIN oofa_t t1 ON t1.oofaent='"||g_enterprise||"' AND t1.oofa002='2' AND t1.oofa003=psaa001  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=psaa002 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=psaaownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=psaaowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t5 ON t5.oofaent='"||g_enterprise||"' AND t5.oofa002='2' AND t5.oofa003=psaacrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=psaacrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t7 ON t7.oofaent='"||g_enterprise||"' AND t7.oofa002='2' AND t7.oofa003=psaamodid  ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=psaacnfid  ",
 
               " WHERE psaaent = '" ||g_enterprise|| "' AND psaadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE apst300_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apst300 WITH FORM cl_ap_formpath("aps",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apst300_init()   
 
      #進入選單 Menu (="N")
      CALL apst300_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_apst300
      
   END IF 
   
   CLOSE apst300_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="apst300.modify" ver="8" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION apst300_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_psaa_m.psaadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE apst300_master_referesh USING g_psaa_m.psaadocno INTO g_psaa_m.psaadocno,g_psaa_m.psaadocdt, 
       g_psaa_m.psaasite,g_psaa_m.psaa001,g_psaa_m.psaa002,g_psaa_m.psaa003,g_psaa_m.psaastus,g_psaa_m.psaaownid, 
       g_psaa_m.psaaowndp,g_psaa_m.psaacrtid,g_psaa_m.psaacrtdp,g_psaa_m.psaacrtdt,g_psaa_m.psaamodid, 
       g_psaa_m.psaamoddt,g_psaa_m.psaacnfid,g_psaa_m.psaacnfdt,g_psaa_m.psaa001_desc,g_psaa_m.psaa002_desc, 
       g_psaa_m.psaaownid_desc,g_psaa_m.psaaowndp_desc,g_psaa_m.psaacrtid_desc,g_psaa_m.psaacrtdp_desc, 
       g_psaa_m.psaamodid_desc,g_psaa_m.psaacnfid_desc
 
   ERROR ""
  
   LET g_psaadocno_t = g_psaa_m.psaadocno
 
   CALL s_transaction_begin()
   
   OPEN apst300_cl USING g_enterprise,g_psaa_m.psaadocno
   IF STATUS THEN
      CALL cl_err("OPEN apst300_cl:", STATUS, 1)
      CLOSE apst300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apst300_master_referesh USING g_psaa_m.psaadocno INTO g_psaa_m.psaadocno,g_psaa_m.psaadocdt, 
       g_psaa_m.psaasite,g_psaa_m.psaa001,g_psaa_m.psaa002,g_psaa_m.psaa003,g_psaa_m.psaastus,g_psaa_m.psaaownid, 
       g_psaa_m.psaaowndp,g_psaa_m.psaacrtid,g_psaa_m.psaacrtdp,g_psaa_m.psaacrtdt,g_psaa_m.psaamodid, 
       g_psaa_m.psaamoddt,g_psaa_m.psaacnfid,g_psaa_m.psaacnfdt,g_psaa_m.psaa001_desc,g_psaa_m.psaa002_desc, 
       g_psaa_m.psaaownid_desc,g_psaa_m.psaaowndp_desc,g_psaa_m.psaacrtid_desc,g_psaa_m.psaacrtdp_desc, 
       g_psaa_m.psaamodid_desc,g_psaa_m.psaacnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_psaa_m.psaadocno,SQLCA.sqlcode,0)
      CLOSE apst300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL apst300_show()
   WHILE TRUE
      LET g_psaadocno_t = g_psaa_m.psaadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_psaa_m.psaamodid = g_user 
LET g_psaa_m.psaamoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL apst300_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_psaa_m.* = g_psaa_m_t.*
         CALL apst300_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE psaa_t SET (psaamodid,psaamoddt) = (g_psaa_m.psaamodid,g_psaa_m.psaamoddt)
       WHERE psaaent = g_enterprise AND psaadocno = g_psaadocno_t
 
                  
      #若單頭key欄位有變更
      IF g_psaa_m.psaadocno != g_psaadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE psab_t SET psabdocno = g_psaa_m.psaadocno
 
          WHERE psabent = g_enterprise AND psabdocno = g_psaadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("psab_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("psab_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_psaa_m.psaadocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE apst300_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_psaa_m.psaadocno,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="apst300.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="apst300.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="apst300.query" ver="4" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION apst300_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_psab_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL apst300_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL apst300_browser_fill("")
      CALL apst300_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL apst300_filter_show('psaadocno')
   CALL apst300_filter_show('psaadocdt')
   CALL apst300_filter_show('psaa001')
   CALL apst300_filter_show('psaa002')
   CALL apst300_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL apst300_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="apst300.reproduce" ver="4" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION apst300_reproduce()
   DEFINE l_newno     LIKE psaa_t.psaadocno 
   DEFINE l_oldno     LIKE psaa_t.psaadocno 
 
   DEFINE l_master    RECORD LIKE psaa_t.*
   DEFINE l_detail    RECORD LIKE psab_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_psaa_m.psaadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_psaadocno_t = g_psaa_m.psaadocno
 
    
   LET g_psaa_m.psaadocno = ""
 
    
   CALL apst300_set_entry('a')
   CALL apst300_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_psaa_m.psaaownid = g_user
      LET g_psaa_m.psaaowndp = g_dept
      LET g_psaa_m.psaacrtid = g_user
      LET g_psaa_m.psaacrtdp = g_dept 
      LET g_psaa_m.psaacrtdt = cl_get_current()
      LET g_psaa_m.psaamodid = ""
      LET g_psaa_m.psaamoddt = ""
      LET g_psaa_m.psaastus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL apst300_input("r")
   
      LET g_psaa_m.psaadocno_desc = ''
   DISPLAY BY NAME g_psaa_m.psaadocno_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " psaadocno = '", g_psaa_m.psaadocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="apst300.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION apst300_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("psaadocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="apst300.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION apst300_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="apst300.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION apst300_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("psaadocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="apst300.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION apst300_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="apst300.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION apst300_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_psaa_m.psaadocno
   LET g_pk_array[1].column = 'psaadocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="apst300.show" ver="7" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION apst300_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_psaa_m_t.* = g_psaa_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL apst300_b_fill() #單身填充
      CALL apst300_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_psaa_m.psaaownid_desc = cl_get_username(g_psaa_m.psaaownid)
      #LET g_psaa_m.psaaowndp_desc = cl_get_deptname(g_psaa_m.psaaowndp)
      #LET g_psaa_m.psaacrtid_desc = cl_get_username(g_psaa_m.psaacrtid)
      #LET g_psaa_m.psaacrtdp_desc = cl_get_deptname(g_psaa_m.psaacrtdp)
      #LET g_psaa_m.psaamodid_desc = cl_get_username(g_psaa_m.psaamodid)
      #LET g_psaa_m.psaacnfid_desc = cl_get_deptname(g_psaa_m.psaacnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL apst300_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_psaa_m.psaadocno,g_psaa_m.psaadocno_desc,g_psaa_m.psaadocdt,g_psaa_m.psaasite,g_psaa_m.psaa001, 
       g_psaa_m.psaa001_desc,g_psaa_m.psaa002,g_psaa_m.psaa002_desc,g_psaa_m.psaa003,g_psaa_m.psaastus, 
       g_psaa_m.psaaownid,g_psaa_m.psaaownid_desc,g_psaa_m.psaaowndp,g_psaa_m.psaaowndp_desc,g_psaa_m.psaacrtid, 
       g_psaa_m.psaacrtid_desc,g_psaa_m.psaacrtdp,g_psaa_m.psaacrtdp_desc,g_psaa_m.psaacrtdt,g_psaa_m.psaamodid, 
       g_psaa_m.psaamodid_desc,g_psaa_m.psaamoddt,g_psaa_m.psaacnfid,g_psaa_m.psaacnfid_desc,g_psaa_m.psaacnfdt 

   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_psaa_m.psaastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "J"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/reconciliate.png")
         WHEN "K"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unreconciliate.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_psab_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL apst300_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="apst300.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="apst300.state_change" ver="5" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION apst300_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_psaa_m.psaadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_psaa_m.psaastus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "C"
               HIDE OPTION "closed"
            WHEN "J"
               HIDE OPTION "reconciliate"
            WHEN "K"
               HIDE OPTION "unreconciliate"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION closed
         LET lc_state = "C"
         #add-point:action控制
         {<point name="statechange.closed"/>}
         #end add-point
         EXIT MENU
      ON ACTION reconciliate
         LET lc_state = "J"
         #add-point:action控制
         {<point name="statechange.reconciliate"/>}
         #end add-point
         EXIT MENU
      ON ACTION unreconciliate
         LET lc_state = "K"
         #add-point:action控制
         {<point name="statechange.unreconciliate"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      AND lc_state <> "C"
      AND lc_state <> "J"
      AND lc_state <> "K"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE psaa_t SET psaastus = lc_state 
    WHERE psaaent = g_enterprise AND psaadocno = g_psaa_m.psaadocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "J"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/reconciliate.png")
         WHEN "K"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unreconciliate.png")
         
      END CASE
      LET g_psaa_m.psaastus = lc_state
      DISPLAY BY NAME g_psaa_m.psaastus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="apst300.ui_browser_refresh" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION apst300_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_psaadocno = g_psaa_m.psaadocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="apst300.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION apst300_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="apst300.ui_dialog" ver="34" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION apst300_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL apst300_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL apst300_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_psaadocno = g_psaadocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL apst300_fetch('') # reload data
               LET l_ac = 1
               CALL apst300_ui_detailshow() #Setting the current row 
      
               CALL apst300_idx_chk()
               #NEXT FIELD psabseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_psab_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL apst300_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL apst300_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL apst300_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL apst300_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL apst300_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL apst300_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL apst300_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL apst300_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL apst300_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL apst300_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL apst300_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apst300_idx_chk()
            
         ON ACTION previous
            CALL apst300_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apst300_idx_chk()
            
         ON ACTION jump
            CALL apst300_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apst300_idx_chk()
            
         ON ACTION next
            CALL apst300_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apst300_idx_chk()
            
         ON ACTION last
            CALL apst300_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apst300_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD psabseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL apst300_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL apst300_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION single_closed
            LET g_action_choice="single_closed"
            IF cl_auth_chk_act("single_closed") THEN
               
               #add-point:ON ACTION single_closed
               {<point name="menu.single_closed" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL apst300_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL apst300_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL apst300_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL apst300_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION single_unclosed
            LET g_action_choice="single_unclosed"
            IF cl_auth_chk_act("single_unclosed") THEN
               
               #add-point:ON ACTION single_unclosed
               {<point name="menu.single_unclosed" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION con_qty
            LET g_action_choice="con_qty"
            IF cl_auth_chk_act("con_qty") THEN
               
               #add-point:ON ACTION con_qty
               {<point name="menu.con_qty" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL apst300_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL apst300_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL apst300_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_psaa_m.psaadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="apst300.ui_headershow" ver="5" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION apst300_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_psaa_m.psaadocno = g_browser[g_current_idx].b_psaadocno   
 
   EXECUTE apst300_master_referesh USING g_psaa_m.psaadocno INTO g_psaa_m.psaadocno,g_psaa_m.psaadocdt, 
       g_psaa_m.psaasite,g_psaa_m.psaa001,g_psaa_m.psaa002,g_psaa_m.psaa003,g_psaa_m.psaastus,g_psaa_m.psaaownid, 
       g_psaa_m.psaaowndp,g_psaa_m.psaacrtid,g_psaa_m.psaacrtdp,g_psaa_m.psaacrtdt,g_psaa_m.psaamodid, 
       g_psaa_m.psaamoddt,g_psaa_m.psaacnfid,g_psaa_m.psaacnfdt,g_psaa_m.psaa001_desc,g_psaa_m.psaa002_desc, 
       g_psaa_m.psaaownid_desc,g_psaa_m.psaaowndp_desc,g_psaa_m.psaacrtid_desc,g_psaa_m.psaacrtdp_desc, 
       g_psaa_m.psaamodid_desc,g_psaa_m.psaacnfid_desc
   CALL apst300_show()
   
END FUNCTION
]]>
  </section>
  <section id="apst300.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION apst300_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apst300_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="apst300.update_b" ver="2" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION apst300_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "psab_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE psab_t 
         SET (psabdocno,
              psabseq
              ,psab001,psab002,psab003,psab004,psab005,psab006,psab007,psab008,psab009,psabsite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_psab_d[g_detail_idx].psab001,g_psab_d[g_detail_idx].psab002,g_psab_d[g_detail_idx].psab003, 
                  g_psab_d[g_detail_idx].psab004,g_psab_d[g_detail_idx].psab005,g_psab_d[g_detail_idx].psab006, 
                  g_psab_d[g_detail_idx].psab007,g_psab_d[g_detail_idx].psab008,g_psab_d[g_detail_idx].psab009, 
                  g_psab_d[g_detail_idx].psabsite) 
         WHERE psabent = g_enterprise AND psabdocno = ps_keys_bak[1] AND psabseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("psab_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("psab_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
