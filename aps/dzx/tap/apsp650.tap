<add_points prog="apsp650" std_prog="apsp650" erpver="1.0" module="APS" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="W" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="function.apsp650_ins_pmde" cite_std="N" status="d" ver="" src="s" new="Y" order="4">
<![CDATA[
################################################################################
# Descriptions...: 請購變更歷程檔
# Memo...........:
# Usage..........: CALL apsp650_ins_pmde(p_pmdc900,p_pmde002,p_pmde003,p_pmde004,p_pmde005)
# Input parameter: p_pmdc900   變更序
#                : p_pmde002   變更欄位
#                : p_pmde003   變更類型
#                : p_pmde004   變更前內容
#                : p_pmde005   變更後內容
# Return code....: TRUE OR FALSE
# Date & Author..: 140708 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp650_ins_pmde()
DEFINE p_pmdc900   LIKE pmdc_t.pmdc900   #變更序
DEFINE p_pmde002   LIKE pmde_t.pmde002   #變更欄位
DEFINE p_pmde003   LIKE pmde_t.pmde003   #變更類型
DEFINE p_pmde004   LIKE pmde_t.pmde004   #變更前內容
DEFINE p_pmde005   LIKE pmde_t.pmde005   #變更後內容
DEFINE l_pmde006   LIKE pmde_t.pmde006   #最後變更時間
DEFINE r_success   LIKE type_t.num5

   LET r_success = TRUE
   
   LET l_pmde006 = cl_get_current()
   
   DELETE FROM pmde_t
    WHERE pmdeent = g_enterprise
      AND pmdedocno = g_detail_d[l_ac].pmdbdocno
      AND pmde001 = p_pmdc900
      AND pmdeseq = g_detail_d[l_ac].pmdbdocno
      AND pmde002 = p_pmde002
   
   INSERT INTO pmde_t (pmdeent,pmdesite,pmdedocno,pmdeseq,pmde001,pmde002,pmde003,pmde004,pmde005,pmde006,pmde007,pmdeownid,pmdeowndp,pmdecrtid,pmdecrtdp,pmdecrtdt)
     VALUES (g_enterprise,g_site,g_detail_d[l_ac].pmdbdocno,g_detail_d[l_ac].pmdbdocno,p_pmdc900,p_pmde002,p_pmde003,p_pmde004,p_pmde005,l_pmde006,'',g_user,g_dept,g_user,g_dept,l_pmde006)       
   IF SQLCA.sqlcode THEN
      CALL cl_err("pmde_t",SQLCA.sqlcode,1)  
      LET r_success = FALSE
      RETURN r_success
   END IF
   RETURN r_success

END FUNCTION]]>
</point>
  <point name="function.apsp650_batch_execute" cite_std="N" status="u" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 轉變更
# Memo...........:
# Usage..........: CALL apsp650_batch_execute()
# Input parameter: no
# Return code....: no
# Date & Author..: 140512 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp650_batch_execute()
   DEFINE ls_js          STRING
   DEFINE lc_param       type_parameter
   DEFINE li_stus        LIKE type_t.num5
   DEFINE li_count       LIKE type_t.num10  #progressbar計量
   DEFINE li_sql         STRING             #主SQL
   DEFINE l_cnt          LIKE type_t.num5
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_tot_success  LIKE type_t.num5
   DEFINE l_msg          STRING
   DEFINE l_pmdc         RECORD LIKE pmdc_t.*  #請購變更單單頭頭檔
   DEFINE l_pmdd         RECORD LIKE pmdd_t.*  #請購變更單明細檔
   DEFINE l_pmdbdocno   LIKE pmdb_t.pmdbdocno
   DEFINE l_rate        LIKE ooan_t.ooan005
   DEFINE l_money       LIKE xrcd_t.xrcd113
   DEFINE l_pmdd008     LIKE pmdd_t.pmdd008
   DEFINE l_pmdd010     LIKE pmdd_t.pmdd010
   DEFINE l_pmdd020     LIKE pmdd_t.pmdd020
   DEFINE l_pmdd021     LIKE pmdd_t.pmdd021
   DEFINE l_xrcd104     LIKE xrcd_t.xrcd104
   DEFINE l_xrcd113     LIKE xrcd_t.xrcd113
   DEFINE l_xrcd114     LIKE xrcd_t.xrcd114
   DEFINE l_xrcd115     LIKE xrcd_t.xrcd115
 
   CALL util.JSON.parse(ls_js,lc_param)
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
   
   END IF

   CALL s_transaction_begin()
   CALL cl_showmsg_init()
   LET l_success = TRUE
   LET l_tot_success = TRUE
   
   LET l_pmdbdocno = ''
   DECLARE apsp650_cur CURSOR FOR
      SELECT DISTINCT pmdbdocno FROM apsp650_tmp
   FOREACH apsp650_cur INTO l_pmdbdocno
   
      IF NOT l_success THEN
         LET l_tot_success = FALSE
      END IF
      LET l_success = TRUE

      INITIALIZE l_pmdc.* TO NULL

      LET l_pmdc.pmdcownid = g_user
      LET l_pmdc.pmdcowndp = g_dept
      LET l_pmdc.pmdccrtid = g_user
      LET l_pmdc.pmdccrtdp = g_dept 
      LET l_pmdc.pmdccrtdt = cl_get_current()
      LET l_pmdc.pmdcmodid = ""
      LET l_pmdc.pmdcmoddt = ""
      LET l_pmdc.pmdcstus = "N"
      LET l_pmdc.pmdcacti = "N"
      LET l_pmdc.pmdcsite = g_site
      LET l_pmdc.pmdcent = g_enterprise
      LET l_pmdc.pmdcdocno = l_pmdbdocno
      LET l_pmdc.pmdc900 = "0"
      LET l_pmdc.pmdc004 = "N"
      LET l_pmdc.pmdc012 = "N"
      LET l_pmdc.pmdc020 = "Y"
      LET l_pmdc.pmdc901 = 'N'   #單頭變更類型      
      LET l_pmdc.pmdc902 = g_today
         
      #版本 = 目前[T:請購單單頭檔].[C:版本]加1
      SELECT MAX(pmda001)+1 INTO l_pmdc.pmdc001
        FROM pmda_t
       WHERE pmdaent = g_enterprise
         AND pmdadocno = l_pmdc.pmdcdocno
      
      #[C:變更序] = [T:請購變更單單頭檔].[C:變更序]在加1
      SELECT MAX(pmdc900)+1 INTO l_pmdc.pmdc900
        FROM pmdc_t
       WHERE pmdcent = g_enterprise
         AND pmdcdocno = l_pmdc.pmdcdocno
      IF cl_null(l_pmdc.pmdc900) OR l_pmdc.pmdc900 = 0 THEN
         LET l_pmdc.pmdc900 = 1
      END IF
         
      SELECT UNIQUE pmdadocdt,pmda002,pmda003,pmda004,pmda010,pmda011,pmda012,pmda005,pmda007,pmda021,
                    pmda020,pmda006,pmda022
        INTO l_pmdc.pmdcdocdt,l_pmdc.pmdc002,l_pmdc.pmdc003,l_pmdc.pmdc004,l_pmdc.pmdc010,
             l_pmdc.pmdc011,  l_pmdc.pmdc012,l_pmdc.pmdc005,l_pmdc.pmdc007,l_pmdc.pmdc021,
             l_pmdc.pmdc020,  l_pmdc.pmdc006,l_pmdc.pmdc022
      FROM pmda_t
      WHERE pmdaent = g_enterprise
        AND pmdadocno = l_pmdc.pmdcdocno
        
      INSERT INTO pmdc_t VALUES(l_pmdc.*)
      IF SQLCA.sqlcode THEN
         CALL cl_errmsg('pmdcdocno',l_pmdbdocno,'ins pmdc_t',SQLCA.sqlcode,1)
         LET l_success = FALSE
         CONTINUE FOREACH
      END IF

      INITIALIZE l_pmdd.* TO NULL
      DECLARE apsp650_pmdd_cur CURSOR FOR
         SELECT pmdb001,pmdb002,pmdb003,pmdb004,pmdb005,pmdb007,pmdb006,pmdb009,pmdb008,pmdb011,
                pmdb010,pmdb030,pmdb048,pmdb031,pmdb050,pmdb032,pmdb033,pmdb049,pmdb012,pmdb014,
                pmdb015,pmdb016,pmdb017,pmdb018,pmdb019,pmdb020,pmdb021,pmdb034,pmdb035,pmdb036,
                pmdb037,pmdb038,pmdb039,pmdb040,pmdb041,pmdb042,pmdb043,pmdb044,pmdb045,pmdb046,pmdbseq
           FROM pmdb_t
          WHERE pmdbent = g_enterprise
            AND pmdbdocno = l_pmdc.pmdcdocno
      FOREACH apsp650_pmdd_cur INTO l_pmdd.pmdd001,l_pmdd.pmdd002,l_pmdd.pmdd003,l_pmdd.pmdd004,l_pmdd.pmdd005,
                                    l_pmdd.pmdd007,l_pmdd.pmdd006,l_pmdd.pmdd009,l_pmdd.pmdd008,l_pmdd.pmdd011,
                                    l_pmdd.pmdd010,l_pmdd.pmdd030,l_pmdd.pmdd048,l_pmdd.pmdd031,l_pmdd.pmdd050,
                                    l_pmdd.pmdd032,l_pmdd.pmdd033,l_pmdd.pmdd049,l_pmdd.pmdd012,l_pmdd.pmdd014,
                                    l_pmdd.pmdd015,l_pmdd.pmdd016,l_pmdd.pmdd017,l_pmdd.pmdd018,l_pmdd.pmdd019,
                                    l_pmdd.pmdd020,l_pmdd.pmdd021,l_pmdd.pmdd034,l_pmdd.pmdd035,l_pmdd.pmdd036,
                                    l_pmdd.pmdd037,l_pmdd.pmdd038,l_pmdd.pmdd039,l_pmdd.pmdd040,l_pmdd.pmdd041,
                                    l_pmdd.pmdd042,l_pmdd.pmdd043,l_pmdd.pmdd044,l_pmdd.pmdd045,l_pmdd.pmdd046,l_pmdd.pmddseq
	      LET l_pmdd.pmddent = l_pmdc.pmdcent
	      LET l_pmdd.pmddsite = l_pmdc.pmdcsite
	      LET l_pmdd.pmdddocno = l_pmdc.pmdcdocno
         LET l_pmdd.pmdd900 = l_pmdc.pmdc900
         LET l_pmdd.pmdd901 = '1'   #單身變更類型
                
         #若原請購單上該項次的[C:行狀態]的值為2、3、4時，
         #則將單身的pmdd901(單身變更類型)預設值"4:單身已經結案"，且pmdd032(單身結案否)的值預設為Y
         IF l_pmdd.pmdd032 MATCHES '[234]' THEN
            LET l_pmdd.pmdd901 = '4'   #單身變更類型
            LET l_pmdd.pmdd032 = 'Y'
         END IF
         
         INSERT INTO pmdd_t VALUES(l_pmdd.*)
         IF SQLCA.sqlcode THEN
            CALL cl_errmsg('pmdcdocno',l_pmdbdocno,'ins pmdd_t',SQLCA.sqlcode,1)
            LET l_success = FALSE
            CONTINUE FOREACH
         END IF
      END FOREACH

      FOR l_ac = 1 TO g_detail_d.getLength()
         IF g_detail_d[l_ac].sel = 'N' OR g_detail_d[l_ac].pmdbdocno <> l_pmdbdocno THEN
            CONTINUE FOR
         END IF
         
         INITIALIZE l_pmdd.* TO NULL
         SELECT pmdd004,pmdd006,pmdd007,pmdd008,pmdd009,pmdd010,pmdd011,pmdd019,pmdd020,pmdd021,pmdd030
           INTO l_pmdd.pmdd004,l_pmdd.pmdd006,l_pmdd.pmdd007,l_pmdd.pmdd008,l_pmdd.pmdd009,
                l_pmdd.pmdd010,l_pmdd.pmdd011,l_pmdd.pmdd019,l_pmdd.pmdd020,l_pmdd.pmdd021,l_pmdd.pmdd030
           FROM pmdd_t
          WHERE pmddent = g_enterprise
            AND pmdddocno = g_detail_d[l_ac].pmdbdocno
            AND pmddseq = g_detail_d[l_ac].pmdbseq
            
         IF l_pmdd.pmdd030 <> g_detail_d[l_ac].pspc045 THEN
            IF NOT apsp650_ins_pmde(l_pmdc.pmdc900,'pmdd030','1',l_pmdd.pmdd030,g_detail_d[l_ac].pspc045) THEN
               LET l_success = FALSE
               EXIT FOR
            END IF
         END IF

         LET l_pmdd008 = l_pmdd.pmdd008
         LET l_pmdd010 = l_pmdd.pmdd010
         LET l_pmdd020 = l_pmdd.pmdd020
         LET l_pmdd021 = l_pmdd.pmdd021
         IF l_pmdd.pmdd006 <> g_detail_d[l_ac].pspc034 THEN
            IF NOT apsp650_ins_pmde(l_pmdc.pmdc900,'pmdd006','1',l_pmdd.pmdd006,g_detail_d[l_ac].pspc034) THEN
               LET l_success = FALSE
               EXIT FOR
            END IF
            IF NOT cl_null(l_pmdd.pmdd009) THEN
               CALL s_aooi250_convert_qty(l_pmdd.pmdd004,l_pmdd.pmdd007,l_pmdd.pmdd009,g_detail_d[l_ac].pspc034) RETURNING l_success,l_pmdd008
               IF NOT apsp650_ins_pmde(l_pmdc.pmdc900,'pmdd008','1',l_pmdd.pmdd008,l_pmdd008) THEN
                  LET l_success = FALSE
                  EXIT FOR
               END IF
            END IF
            IF NOT cl_null(l_pmdd.pmdd011) THEN
               CALL s_aooi250_convert_qty(l_pmdd.pmdd004,l_pmdd.pmdd007,l_pmdd.pmdd011,g_detail_d[l_ac].pspc034) RETURNING l_success,l_pmdd010
               IF NOT apsp650_ins_pmde(l_pmdc.pmdc900,'pmdd010','1',l_pmdd.pmdd010,l_pmdd010) THEN
                  LET l_success = FALSE
                  EXIT FOR
               END IF
               LET l_money = l_pmdd.pmdd019 * l_pmdd010
               IF NOT cl_null(l_pmdc.pmdc005) THEN
                  CALL s_aooi160_get_exrate('1',g_site,g_today,l_pmdc.pmdc005,g_ooef016,0,'11') RETURNING l_rate
                  IF NOT cl_null(l_pmdc.pmdc010) AND NOT cl_null(l_money) AND NOT cl_null(l_pmdd010) AND NOT cl_null(l_pmdc.pmdc005) AND NOT cl_null(l_rate) THEN
                     CALL s_tax_count(g_site,l_pmdc.pmdc010,l_money,l_pmdd010,l_pmdc.pmdc005,l_rate)
                          RETURNING l_pmdd020,l_xrcd104,l_pmdd021,l_xrcd113,l_xrcd114,l_xrcd115
                     IF NOT apsp650_ins_pmde(l_pmdc.pmdc900,'pmdd020','1',l_pmdd.pmdd020,l_pmdd020) THEN
                        LET l_success = FALSE
                        EXIT FOR
                     END IF
                     IF NOT apsp650_ins_pmde(l_pmdc.pmdc900,'pmdd021','1',l_pmdd.pmdd021,l_pmdd021) THEN
                        LET l_success = FALSE
                        EXIT FOR
                     END IF
                  END IF
               END IF
            END IF
         END IF

         UPDATE pmdd_t
            SET pmdd006 = g_detail_d[l_ac].pspc034,
                pmdd008 = l_pmdd008,
                pmdd010 = l_pmdd010,
                pmdd020 = l_pmdd020,
                pmdd021 = l_pmdd021,
                pmdd030 = g_detail_d[l_ac].pspc045
          WHERE pmddent = g_enterprise
            AND pmdddocno = g_detail_d[l_ac].pmdbdocno
            AND pmddseq = g_detail_d[l_ac].pmdbseq
         IF SQLCA.sqlcode THEN
            CALL cl_errmsg('pmdcdocno',g_detail_d[l_ac].pmdbdocno,'upd pmdd_t',SQLCA.sqlcode,1)
            LET l_success = FALSE
            EXIT FOR
         END IF
         UPDATE pspc_t SET pspc054 = 'Y',
                           pspc055 = g_detail_d[l_ac].pmdbdocno,
                           pspc056 = g_detail_d[l_ac].pmdbseq
          WHERE pspcent = g_enterprise
            AND pspcsite = g_site
            AND pspc001 = g_detail_d[l_ac].pspc001
            AND pspc002 = g_detail_d[l_ac].pspc002
            AND pspc004 = g_detail_d[l_ac].pspc004
         IF SQLCA.sqlcode THEN
            CALL cl_errmsg('pmeedocno',g_detail_d[l_ac].pmdbdocno,'upd pspc_t',SQLCA.sqlcode,1)
            LET l_success = FALSE
            EXIT FOR
         END IF
      END FOR

      LET l_pmdbdocno = ''
   END FOREACH   

   CALL cl_showmsg()
   LET l_success = l_tot_success
   
   IF l_success THEN
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      CALL cl_ask_confirm("std-00012") RETURNING li_stus
   ELSE
      #背景作業完成處理
   END IF

END FUNCTION]]>
</point>
  <point name="function.apsp650_create_tmp" cite_std="N" status="u" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: create tmpe table
# Memo...........:
# Usage..........: CALL apsp650_create_tmp()
# Input parameter: no
# Return code....: no
# Date & Author..: 140512 By whiteny
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp650_create_tmp()
   DROP TABLE apsp650_tmp 
   CREATE TEMP TABLE apsp650_tmp( 
       pmdbdocno         LIKE pmdb_t.pmdbdocno  
   )
END FUNCTION]]>
</point>
  <point name="b_fill.clear" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_success       LIKE type_t.num5
   DEFINE l_imaa006       LIKE imaa_t.imaa006
   DEFINE l_pmdb007       LIKE pmdb_t.pmdb007
   DEFINE ls_tmp          STRING
   DEFINE l_n             LIKE type_t.num5
   DEFINE l_n1            LIKE type_t.num5
   DEFINE l_pspc002       LIKE pspc_t.pspc002
   DEFINE l_doclen        LIKE ooaa_t.ooaa002
   DEFINE l_imaf174       LIKE imaf_t.imaf174
]]>
</point>
  <point name="b_fill.foreach_into" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[       g_detail_d[l_ac].sel,g_detail_d[l_ac].pmdbdocno,g_detail_d[l_ac].pmdbseq,
       g_detail_d[l_ac].pspc050,g_detail_d[l_ac].pspc050_desc,g_detail_d[l_ac].pspc050_desc_desc,
       g_detail_d[l_ac].pspc051,g_detail_d[l_ac].imaa009,g_detail_d[l_ac].imaa009_desc,g_detail_d[l_ac].imaf141,
       g_detail_d[l_ac].imaf141_desc,g_detail_d[l_ac].imaa006,g_detail_d[l_ac].imaa006_desc,g_detail_d[l_ac].pmdb006,
       g_detail_d[l_ac].pspc034,g_detail_d[l_ac].pmdb049,g_detail_d[l_ac].pmdb030,g_detail_d[l_ac].pspc045,
       g_detail_d[l_ac].imaf142,g_detail_d[l_ac].imaf142_desc,g_detail_d[l_ac].imae012,g_detail_d[l_ac].imae012_desc,
       g_detail_d[l_ac].pspc054,g_detail_d[l_ac].pspc055,g_detail_d[l_ac].pspc056,g_detail_d[l_ac].pspc001,
       g_detail_d[l_ac].pspc002,g_detail_d[l_ac].pspc004]]>
</point>
  <point name="b_fill.foreach_iside" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
      #LET ls_tmp = g_detail_d[l_ac].pspc004
      #LET g_detail_d[l_ac].pmdbdocno = ls_tmp.subString(1,ls_tmp.getIndexOf('-',1)-1)
      #LET l_n = ls_tmp.getIndexOf('-',1)+1
      #LET l_n1 = ls_tmp.getLength()
      #LET g_detail_d[l_ac].pmdbseq = ls_tmp.subString(l_n,l_n1)

      #輸入的請購單號需存在[T:請購單單頭當]中，且單據狀態為(Y:已確認)，且不能結案
      LET l_n = ''
      SELECT COUNT(*) INTO l_n
        FROM pmda_t
       WHERE pmdaent = g_enterprise
         AND pmdasite = g_site
         AND pmdadocno = g_detail_d[l_ac].pmdbdocno
         AND pmdastus = 'Y'
      IF cl_null(l_n) OR l_n = 0 THEN
         CONTINUE FOREACH
      END IF

      #同一張請購單不能同時有兩張以上未確認的變更單存在
      LET l_n = ''
      SELECT COUNT(pmdcdocno) INTO l_n
        FROM pmdc_t
       WHERE pmdcent = g_enterprise
         AND pmdcdocno = g_detail_d[l_ac].pmdbdocno
         AND pmdcstus = 'N'
      if cl_null(l_n) then let l_n = 0 end if
      IF l_n > 0 THEN
         CONTINUE FOREACH
      END IF

      #建議到庫日與原預計到庫日不同，或是建議量與原採購量不時的資料才顯示
      IF g_detail_d[l_ac].pmdb030 = g_detail_d[l_ac].pspc045 AND 
         g_detail_d[l_ac].pmdb006 = g_detail_d[l_ac].pspc034 THEN
         CONTINUE FOREACH
      END IF

      LET l_imaa006 = ''
      SELECT imaa006 INTO l_imaa006
        FROM imaa_t
       WHERE imaaent = g_enterprise
         AND imaa001 = g_detail_d[l_ac].pspc050

      LET l_pmdb007 = ''
      SELECT pmdb007 INTO l_pmdb007
        FROM pmdb_t
       WHERE pmdbent = g_enterprise
         AND pmdbsite = g_site
         AND pmdbdocno = g_detail_d[l_ac].pmdbdocno
         AND pmdbseq = g_detail_d[l_ac].pmdbseq
         
      CALL s_aooi250_convert_qty(g_detail_d[l_ac].pspc050,g_detail_d[l_ac].imaa006,l_imaa006,g_detail_d[l_ac].pspc034)
           RETURNING l_success,g_detail_d[l_ac].pspc034
      CALL s_aooi250_convert_qty(g_detail_d[l_ac].pspc050,l_pmdb007,l_imaa006,g_detail_d[l_ac].pmdb006)
           RETURNING l_success,g_detail_d[l_ac].pmdb006
      CALL s_aooi250_convert_qty(g_detail_d[l_ac].pspc050,l_pmdb007,l_imaa006,g_detail_d[l_ac].pmdb049)
           RETURNING l_success,g_detail_d[l_ac].pmdb049
      LET g_detail_d[l_ac].imaa006 = l_imaa006

      LET l_imaf174 = ''
      SELECT (imaf171+imaf172+imaf173+imaf174) INTO l_imaf174
        FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite = g_site
         AND imaf001 = g_detail_d[l_ac].pspc050
      CALL s_date_get_work_date(g_site,g_ooef008,g_ooef009,g_detail_d[l_ac].pspc045,0,l_imaf174)
           RETURNING g_detail_d[l_ac].pspc045

]]>
</point>
  <point name="b_fill.other_table" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL g_detail_d.deleteElement(g_detail_d.getLength())]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET ls_wc = ""
   IF NOT cl_null(tm.pspc001) THEN
      LET ls_wc = ls_wc CLIPPED," AND pspc001 = '",tm.pspc001,"' "
   END IF

   IF tm.chk = 'N' THEN
      LET ls_wc = ls_wc CLIPPED," AND (pspc054 = 'N' OR pspc054 IS NULL) "
   END IF
   
   IF cl_null(tm.wc1) THEN
      LET tm.wc1 = '1=1'
   END IF

   LET l_pspc002 = ''
   SELECT MAX(pspc002) INTO l_pspc002 FROM pspc_t
    WHERE pspcent = g_enterprise AND pspcsite = g_site AND pspc001 = tm.pspc001

   #取得單據流水號總長度(aoos010)
   LET l_doclen = cl_get_para(g_enterprise,g_site,'E-COM-0005')

   LET g_sql = " SELECT 'N',pmdbdocno,pmdbseq,pspc050,'','',pspc051,",
               "        imaa009,'',imaf141,'',pspc014,'',pmdb006,pspc034,pmdb049,pmdb030,pspc045, ",
               "        imaf142,'',imae012,'',pspc054,pspc055,pspc056,pspc001,pspc002,pspc004 ",
               "   FROM pmdb_t,pspc_t ",
               "        LEFT OUTER JOIN imae_t ON imaeent = '",g_enterprise,"' AND imaesite = '",g_site,"' AND imae001 = pspc050 ",
               "        LEFT OUTER JOIN imaf_t ON imafent = '",g_enterprise,"' AND imafsite = '",g_site,"' AND imaf001 = pspc050 ",
               "        LEFT OUTER JOIN imaa_t ON imaaent = '",g_enterprise,"' AND imaa001 = pspc050 ",
               "  WHERE pmdbent = '",g_enterprise,"' ",
               "    AND pmdbdocno = SUBSTR(pspc004,1,",l_doclen,") ",
               "    AND pmdbseq= SUBSTR(pspc004,",l_doclen,"+2,LENGTH(pspc004)-",l_doclen,"-1) ",
               "    AND INSTR(pspc004,'-',",l_doclen,"+2,1) = 0 ",
               "    AND pspcent = ? AND pspcsite = '",g_site,"' AND pspc002 = '",l_pspc002,"' AND pspc007 = '0' ",ls_wc,
               "    AND ",tm.wc1 CLIPPED,  
               "  ORDER BY pspc004 "
]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="detail_show.detail_show" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
      #料號說明
      CALL s_desc_get_item_desc(g_detail_d[l_ac].pspc050) RETURNING g_detail_d[l_ac].pspc050_desc,g_detail_d[l_ac].pspc050_desc_desc

      #產品分類
      CALL s_desc_get_rtaxl003_desc(g_detail_d[l_ac].imaa009) RETURNING g_detail_d[l_ac].imaa009_desc

      #採購分類
      CALL s_desc_get_acc_desc('203',g_detail_d[l_ac].imaf141) RETURNING g_detail_d[l_ac].imaf141_desc

      #單位
      CALL s_desc_get_unit_desc(g_detail_d[l_ac].imaa006) RETURNING g_detail_d[l_ac].imaa006_desc

      #採購員
      CALL s_desc_get_person_desc(g_detail_d[l_ac].imaf142) RETURNING g_detail_d[l_ac].imaf142_desc

      #計畫員
      CALL s_desc_get_person_desc(g_detail_d[l_ac].imae012) RETURNING g_detail_d[l_ac].imae012_desc
]]>
</point>
  <point name="fetch.after_fill" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL g_detail2_d.clear()

   LET g_sql = " SELECT UNIQUE pspa004,pspa005,pspa006,pspa009,'' ",    
               "   FROM pspa_t ",
               "  WHERE pspaent=? AND pspasite=? AND pspa001=? AND pspa002=? AND pspa012=? AND pspa013=? ",
               "  ORDER BY pspa004 "
 
   PREPARE apsp600_sel2 FROM g_sql
   DECLARE b_fill_curs2 CURSOR FOR apsp600_sel2
   
   OPEN b_fill_curs2 USING g_enterprise,g_site,g_detail_d[g_detail_idx].pspc001,g_detail_d[g_detail_idx].pspc002,
                           g_detail_d[g_detail_idx].pspc050,g_detail_d[g_detail_idx].pspc051
 
   LET l_ac = 1
   FOREACH b_fill_curs2 INTO g_detail2_d[l_ac].pspa004,g_detail2_d[l_ac].pspa005,
                             g_detail2_d[l_ac].pspa006,g_detail2_d[l_ac].pspa009,
                             g_detail2_d[l_ac].count
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF

      IF l_ac = 1 THEN
         LET g_detail2_d[l_ac].count = g_detail2_d[l_ac].pspa009
      ELSE
         LET g_detail2_d[l_ac].count = g_detail2_d[l_ac-1].count + g_detail2_d[l_ac].pspa009
      END IF

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         CALL cl_err( "", 9035, 1 )
         EXIT FOREACH
      END IF
      
   END FOREACH
 
 
   CALL g_detail2_d.deleteElement(g_detail2_d.getLength())   
]]>
</point>
  <point name="filter.detail_cnt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_detail2_cnt = 1]]>
</point>
  <point name="global.argv" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_detail_idx         LIKE type_t.num5
DEFINE g_detail2_idx        LIKE type_t.num5
DEFINE l_allow_insert       LIKE type_t.num5              #可新增否 
DEFINE l_allow_delete       LIKE type_t.num5              #可刪除否
DEFINE g_detail2_cnt         LIKE type_t.num5             #單身2
DEFINE g_ooef008            LIKE ooef_t.ooef008
DEFINE g_ooef009            LIKE ooef_t.ooef009
DEFINE g_ooef016            LIKE ooef_t.ooef016
]]>
</point>
  <point name="global.variable" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[       sel               LIKE type_t.chr1,      #選擇
       pmdbdocno         LIKE pmdb_t.pmdbdocno, #請購單號
       pmdbseq           LIKE pmdb_t.pmdbseq,   #項次
       pspc050           LIKE pspc_t.pspc050,   #料件編號
       pspc050_desc      LIKE type_t.chr80,     #品名
       pspc050_desc_desc LIKE type_t.chr80,     #規格
       pspc051           LIKE pspc_t.pspc051,   #產品特徵
       imaa009           LIKE imaa_t.imaa009,   #產品分類
       imaa009_desc      LIKE type_t.chr80,     #說明
       imaf141           LIKE imaf_t.imaf141,   #採購分類
       imaf141_desc      LIKE type_t.chr80,     #說明
       imaa006           LIKE imaa_t.imaa006,   #單位
       imaa006_desc      LIKE type_t.chr80,     #說明
       pmdb006           LIKE pmdb_t.pmdb006,   #原請購量
       pspc034           LIKE pspc_t.pspc034,   #建議請購量
       pmdb049           LIKE pmdb_t.pmdb049,   #已入庫量
       pmdb030           LIKE pmdb_t.pmdb030,   #原到廠日
       pspc045           LIKE pspc_t.pspc045,   #建議到廠日
       imaf142           LIKE imaf_t.imaf142,   #採購員
       imaf142_desc      LIKE type_t.chr80,     #全名
       imae012           LIKE imae_t.imae012,   #計畫員
       imae012_desc      LIKE type_t.chr80,     #全名
       pspc054           LIKE pspc_t.pspc054,   #已產生單據
       pspc055           LIKE pspc_t.pspc055,   #產生單號
       pspc056           LIKE pspc_t.pspc056,   #項次
       pspc001           LIKE pspc_t.pspc001,   #APS版本
       pspc002           LIKE pspc_t.pspc002,   #執行日期時間
       pspc004           LIKE pspc_t.pspc004    #APS虛擬單號
                     END RECORD
TYPE type_g_detail2_d RECORD
       pspa004           LIKE pspa_t.pspa004,   #供需日期
       pspa005           LIKE pspa_t.pspa005,   #類別
       pspa006           LIKE pspa_t.pspa006,   #單號
       pspa009           LIKE pspa_t.pspa009,   #供需數量
       count             LIKE pspa_t.pspa009    #預計結存
                     END RECORD
DEFINE g_detail_d_t    type_g_detail_d
DEFINE g_detail2_d     DYNAMIC ARRAY OF type_g_detail2_d
DEFINE g_detail2_d_t   type_g_detail2_d
DEFINE tm            RECORD
       wc1               STRING,                #QBE
       pspc001           LIKE pspc_t.pspc001,   #APS版本
       chk               LIKE type_t.chr1       #顯示已變更資料
                     END RECORD]]>
</point>
  <point name="init.init" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF cl_null(g_bgjob) THEN
      LET g_bgjob = 'N'
   END IF
   LET g_errshow = 1
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   CALL cl_set_combo_scc('b_pspa005','5440')
   LET tm.chk  = 'N'
   LET g_detail_idx  = 1
   LET g_detail2_idx = 1
   
   LET g_ooef008 = ''
   LET g_ooef009 = ''
   LET g_ooef016 = ''
   SELECT ooef008,ooef009,ooef016 INTO g_ooef008,g_ooef009,g_ooef016
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site
]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_detail2_cnt = g_detail2_d.getLength()]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE ls_return  STRING
   DEFINE ls_result  STRING
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_flag     LIKE type_t.num5
   DEFINE l_cnt      LIKE type_t.num5
   DEFINE l_imaa009  LIKE imaa_t.imaa009
   DEFINE l_imaf141  LIKE imaf_t.imaf141
   DEFINE l_imaf142  LIKE imaf_t.imaf142
   DEFINE l_imae012  LIKE imae_t.imae012]]>
</point>
  <point name="ui_dialog.more_action" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ON ACTION batch_execute
            CALL apsp650_create_tmp()
            LET l_cnt = 0
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF g_detail_d[li_idx].sel = 'Y' THEN
                  LET l_cnt = l_cnt + 1
                  INSERT INTO apsp650_tmp VALUES(g_detail_d[li_idx].pmdbdocno)
               END IF
            END FOR
            IF l_cnt = 0 THEN
               CALL cl_ask_pressanykey('-400')
            ELSE
               CALL apsp650_batch_execute()
               CALL apsp650_query()
            END IF
]]>
</point>
  <point name="ui_dialog.more_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         CONSTRUCT BY NAME tm.wc1 ON imae012,imaf142,pmdb030,pspc045,imaa009,imaf141,pspc050
	   
            BEFORE CONSTRUCT

            AFTER FIELD pmdb030                  #原到庫日
               CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
               IF NOT cl_null(ls_result) THEN
                  IF NOT cl_chk_date_symbol(ls_result) THEN
                     LET ls_result = cl_add_date_extra_cond(ls_result)
                  END IF
               END IF
               CALL FGL_DIALOG_SETBUFFER(ls_result)

            AFTER FIELD pspc045                  #建議到庫日期
               CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
               IF NOT cl_null(ls_result) THEN
                  IF NOT cl_chk_date_symbol(ls_result) THEN
                     LET ls_result = cl_add_date_extra_cond(ls_result)
                  END IF
               END IF
               CALL FGL_DIALOG_SETBUFFER(ls_result)

            ON ACTION controlp INFIELD imae012   #計畫員
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooag001()
               DISPLAY g_qryparam.return1 TO imae012
               NEXT FIELD imae012

            ON ACTION controlp INFIELD imaf142   #採購員
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooag001()
               DISPLAY g_qryparam.return1 TO imaf142
               NEXT FIELD imaf142

            ON ACTION controlp INFIELD imaa009   #產品分類
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_rtax001()
               DISPLAY g_qryparam.return1 TO imaa009
               NEXT FIELD imaa009

            ON ACTION controlp INFIELD imaf141   #採購分類
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_imce141()
               DISPLAY g_qryparam.return1 TO imaf141
               NEXT FIELD imaf141

            ON ACTION controlp INFIELD pspc050   #料件編號
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_imaf001()
               DISPLAY g_qryparam.return1 TO pspc050
               NEXT FIELD pspc050

         END CONSTRUCT
]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         DISPLAY ARRAY g_detail2_d TO s_detail2.* ATTRIBUTES(COUNT=g_detail2_cnt)
            BEFORE ROW
               LET g_detail2_idx = DIALOG.getCurrentRow("s_detail2")
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail2_idx)
               LET g_detail2_idx = DIALOG.getCurrentRow("s_detail2")
         END DISPLAY
]]>
</point>
  <point name="ui_dialog.more_input" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         INPUT BY NAME tm.pspc001,tm.chk
            ATTRIBUTE(WITHOUT DEFAULTS)
         
            BEFORE INPUT

            AFTER FIELD pspc001
               IF cl_null(tm.pspc001) THEN
                  CALL cl_err(tm.pspc001,'aoo-00052',0)
                  NEXT FIELD CURRENT
               ELSE
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = tm.pspc001
                  IF NOT cl_chk_exist("v_psca001") THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL apsp650_pspc001_ref()

            ON ACTION controlp INFIELD pspc001   #APS版本
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = tm.pspc001
               LET g_qryparam.where = "pscasite = '",g_site,"'"
               CALL q_psca001()
               LET tm.pspc001 = g_qryparam.return1
               DISPLAY tm.pspc001 TO pspc001
               CALL apsp650_pspc001_ref()
               NEXT FIELD pspc001

            AFTER INPUT
               IF INT_FLAG THEN
                  EXIT DIALOG
               END IF

         END INPUT

         INPUT ARRAY g_detail_d FROM s_detail1.*
            ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                    INSERT ROW = FALSE,
                    DELETE ROW = FALSE,
                    APPEND ROW = FALSE)
            
            BEFORE INPUT
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               CALL apsp650_fetch()
            
            ON CHANGE b_sel
               IF g_detail_d[g_detail_idx].sel = 'Y' THEN
                  IF g_detail_d[g_detail_idx].pspc054 = 'Y' THEN
                     CALL cl_ask_pressanykey('aps-00109')
                     LET g_detail_d[g_detail_idx].sel = 'N'
                  END IF
                  IF g_detail_d[g_detail_idx].pspc034 < g_detail_d[g_detail_idx].pmdb006 - g_detail_d[g_detail_idx].pmdb049 THEN
                     CALL cl_ask_pressanykey('aps-00100')
                     LET g_detail_d[g_detail_idx].sel = 'N'
                  END IF
               END IF
               
 
            AFTER ROW
 
            AFTER INPUT
 
         END INPUT
]]>
</point>
  <point name="ui_dialog.onaction_sel" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            FOR li_idx = 1 TO g_detail_d.getLength()
               IF g_detail_d[li_idx].pspc054 = 'Y' THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
               IF g_detail_d[li_idx].pspc034 < g_detail_d[li_idx].pmdb006 - g_detail_d[li_idx].pmdb049 THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR]]>
</point>
  <point name="ui_dialog.onaction_selall" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            FOR li_idx = 1 TO g_detail_d.getLength()
               IF g_detail_d[li_idx].pspc054 = 'Y' THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
               IF g_detail_d[li_idx].pspc034 < g_detail_d[li_idx].pmdb006 - g_detail_d[li_idx].pmdb049 THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.parameter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.background" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.onaction_selnone" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.onaction_unsel" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.after_b_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="function.apsp650_pspc001_ref" cite_std="N" status="u" ver="" src="s" new="Y" order="3">
<![CDATA[
################################################################################
# Descriptions...: APS版本说明
# Memo...........:
# Usage..........: CALL apsp650_pspc001_ref()
# Input parameter: no
# Return code....: no
# Date & Author..: 140702 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp650_pspc001_ref()
   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = tm.pspc001
   CALL ap_ref_array2(g_ref_fields,"SELECT pscal003 FROM pscal_t WHERE pscalent='"||g_enterprise||"' AND pscalsite='"||g_site||"' AND pscal001=? AND pscal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   DISPLAY g_rtn_fields[1] TO pspc001_desc
END FUNCTION]]>
</point>
  <point name="function.apsp650_ins_pmde" cite_std="N" status="u" ver="" src="s" new="Y" order="4">
<![CDATA[
################################################################################
# Descriptions...: 請購變更歷程檔
# Memo...........:
# Usage..........: CALL apsp650_ins_pmde(p_pmdc900,p_pmde002,p_pmde003,p_pmde004,p_pmde005)
# Input parameter: p_pmdc900   變更序
#                : p_pmde002   變更欄位
#                : p_pmde003   變更類型
#                : p_pmde004   變更前內容
#                : p_pmde005   變更後內容
# Return code....: TRUE OR FALSE
# Date & Author..: 140708 By whitney
# Modify.........:
################################################################################
PRIVATE FUNCTION apsp650_ins_pmde(p_pmdc900,p_pmde002,p_pmde003,p_pmde004,p_pmde005)
DEFINE p_pmdc900   LIKE pmdc_t.pmdc900   #變更序
DEFINE p_pmde002   LIKE pmde_t.pmde002   #變更欄位
DEFINE p_pmde003   LIKE pmde_t.pmde003   #變更類型
DEFINE p_pmde004   LIKE pmde_t.pmde004   #變更前內容
DEFINE p_pmde005   LIKE pmde_t.pmde005   #變更後內容
DEFINE l_pmde006   LIKE pmde_t.pmde006   #最後變更時間
DEFINE r_success   LIKE type_t.num5

   LET r_success = TRUE
   
   LET l_pmde006 = cl_get_current()
   
   DELETE FROM pmde_t
    WHERE pmdeent = g_enterprise
      AND pmdedocno = g_detail_d[l_ac].pmdbdocno
      AND pmde001 = p_pmdc900
      AND pmdeseq = g_detail_d[l_ac].pmdbseq
      AND pmde002 = p_pmde002
   
   INSERT INTO pmde_t (pmdeent,pmdesite,pmdedocno,pmdeseq,pmde001,pmde002,pmde003,pmde004,pmde005,pmde006,pmde007,pmdeownid,pmdeowndp,pmdecrtid,pmdecrtdp,pmdecrtdt)
     VALUES (g_enterprise,g_site,g_detail_d[l_ac].pmdbdocno,g_detail_d[l_ac].pmdbseq,p_pmdc900,p_pmde002,p_pmde003,p_pmde004,p_pmde005,l_pmde006,'',g_user,g_dept,g_user,g_dept,l_pmde006)       
   IF SQLCA.sqlcode THEN
      CALL cl_err("pmde_t",SQLCA.sqlcode,1)  
      LET r_success = FALSE
      RETURN r_success
   END IF
   RETURN r_success

END FUNCTION]]>
</point>
  <section id="apsp650.b_fill" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION apsp650_b_fill()
 
   DEFINE ls_wc           STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   PREPARE apsp650_sel FROM g_sql
   DECLARE b_fill_curs CURSOR FOR apsp650_sel
   
   CALL g_detail_d.clear()
   #add-point:b_fill段其他頁簽清空
   {<point name="b_fill.clear"/>}
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs USING g_enterprise INTO 
   #add-point:b_fill段foreach_into
   {<point name="b_fill.foreach_into"/>}
   #end add-point
   
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充
      {<point name="b_fill.foreach_iside"/>}
      #end add-point
      
      CALL apsp650_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            CALL cl_err( "", 9035, 1 )
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.other_table"/>}
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE apsp650_sel
   
   LET l_ac = 1
   CALL apsp650_fetch()
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.after_b_fill"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="apsp650.description" ver="49" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000030
#+ 
#+ Filename...: apsp650
#+ Description: 請購變更整批調整作業
#+ Creator....: 04441(2014/05/27)
#+ Modifier...: 04441(2014/07/02)
#+ Buildtype..: 應用 p02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="apsp650.detail_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION apsp650_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段
   {<point name="detail_show.detail_show"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="apsp650.fetch" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION apsp650_fetch()
 
   DEFINE li_ac           LIKE type_t.num5
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   #add-point:單身填充後
   {<point name="fetch.after_fill" />}
   #end add-point 
   
   LET l_ac = li_ac
   
END FUNCTION
]]>
</section>
  <section id="apsp650.filter" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION apsp650_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point    
 
   DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
      ON UPDATE
 
   END DISPLAY
 
   LET l_ac = 1
   LET g_detail_cnt = 1
   #add-point:filter段define
   {<point name="filter.detail_cnt"/>}
   #end add-point    
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
   
   CALL apsp650_b_fill()
   CALL apsp650_fetch()
   
END FUNCTION
]]>
</section>
  <section id="apsp650.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter欄位解析
PRIVATE FUNCTION apsp650_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="apsp650.filter_show" ver="1" status="" src="s">
<![CDATA[#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION apsp650_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = apsp650_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="apsp650.global" ver="1" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc" 
 
#模組變數(Module Variables)
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              
DEFINE l_ac_d               LIKE type_t.num5              #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num5              #目前所在頁數
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num5
 
TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
TYPE type_g_detail_d RECORD
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="apsp650.init" ver="1" status="" src="s">
<![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION apsp650_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
 
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="apsp650.main" ver="1" status="" src="s">
<![CDATA[#+ 作業開始 
MAIN
   DEFINE ls_js  STRING
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aps","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apsp650 WITH FORM cl_ap_formpath("aps",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apsp650_init()   
 
      #進入選單 Menu (="N")
      CALL apsp650_ui_dialog() 
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_apsp650
   END IF 
   
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
</section>
  <section id="apsp650.other_function" ver="1" status="" src="s">
<![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
</section>
  <section id="apsp650.query" ver="1" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION apsp650_query()
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define" />}
   #end add-point 
   
   #add-point:cs段after_construct
   {<point name="query.after_construct" />}
   #end add-point
        
   LET g_error_show = 1
   CALL apsp650_b_fill()
   LET l_ac = g_master_idx
   CALL apsp650_fetch()
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="apsp650.ui_dialog" ver="1" status="" src="s">
<![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION apsp650_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   LET g_detail_cnt = g_detail_d.getLength()
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
 
      CALL cl_dlg_query_bef_disp()  #相關查詢
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
 
         BEFORE DIALOG
            IF g_detail_d.getLength() > 0 THEN
               CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
            ELSE
               CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            END IF
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "Y"
            END FOR
            #add-point:ui_dialog段on action selall
            {<point name="ui_dialog.onaction_selall"/>}
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "N"
            END FOR
            #add-point:ui_dialog段on action selnone
            {<point name="ui_dialog.onaction_selnone"/>}
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "Y"
               END IF
            END FOR
            #add-point:ui_dialog段on action sel
            {<point name="ui_dialog.onaction_sel"/>}
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR
            #add-point:ui_dialog段on action unsel
            {<point name="ui_dialog.onaction_unsel"/>}
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL apsp650_filter()
            #add-point:ON ACTION filter
            {<point name="menu.filter" />}
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION accept
            CALL apsp650_query()
 
         # 條件清除
         ON ACTION qbeclear
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            CALL apsp650_b_fill()
            CALL apsp650_fetch()
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
</section>
</add_points>