<add_points prog="apsr003" std_prog="apsr003" erpver="1.0" module="APS" ver="1" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="R" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="construct.c.aps01" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_psoz001()()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO aps01  #顯示到畫面上
            NEXT FIELD aps01                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.aps02" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_psoz001()()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO aps02  #顯示到畫面上
            NEXT FIELD aps02                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.psoq004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_psoq004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psoq004  #顯示到畫面上
            NEXT FIELD psoq004                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.psoq005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_psoq005()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psoq005  #顯示到畫面上
            NEXT FIELD psoq005                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.psoq007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_psoq007()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psoq007  #顯示到畫面上
            NEXT FIELD psoq007                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.psoq009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_psoq009()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psoq009  #顯示到畫面上
            NEXT FIELD psoq009                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.psoq036" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_psoq036()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psoq036  #顯示到畫面上
            NEXT FIELD psoq036                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.v_aps01" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_psoz001()()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO v_aps01  #顯示到畫面上
            NEXT FIELD v_aps01                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.v_aps02" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_psoz001()()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO v_aps02  #顯示到畫面上
            NEXT FIELD v_aps02                     #返回原欄位
    

]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_master.chk01 = 'N'   ]]>
</point>
  <point name="input.c.aps01" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ### A### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            CALL q_psoq001()
            LET g_master.aps01 = g_qryparam.return1
            DISPLAY g_master.aps01  TO aps01
            NEXT FIELD aps01
            ### A### end ###
]]>
</point>
  <point name="input.c.aps02" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE                 
            CALL q_psoq001()
            LET  g_master.aps02 = g_qryparam.return1
            DISPLAY g_master.aps02 TO aps02
            NEXT FIELD aps02]]>
</point>
  <point name="process.pre_process" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF cl_null(g_wc) THEN
      LET g_wc=" 1=1 "
   END IF
   LET g_wc = g_wc CLIPPED ,"  AND a.psoqent = ",g_enterprise," AND a.psoqsite = '",g_site,"' "
   CALL apsr003_x01(g_wc,g_master.aps01,g_master.aps02)]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_aps01   LIKE type_t.chr10
   DEFINE l_aps02   LIKE type_t.chr10
   DEFINE l_psoq004 LIKE psoq_t.psoq004
   DEFINE l_psoq009 LIKE psoq_t.psoq009
   DEFINE l_psoq036 LIKE psoq_t.psoq036
   DEFINE l_psoq005 LIKE psoq_t.psoq005
   DEFINE l_psoq007 LIKE psoq_t.psoq007]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.parameter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.background" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.aps01" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.aps01" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.aps01" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.aps02" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.aps02" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.aps02" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.chk01" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.chk01" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.chk01" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.chk01" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.m.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.psoq004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.psoq004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.psoq009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.psoq009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.psoq036" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.psoq036" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.psoq005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.psoq005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.psoq007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.psoq007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.other" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[                 #psoq004,psoq009,psoq036,psoq005,psoq007
         AFTER CONSTRUCT
            LET l_psoq004 = GET_FLDBUF(psoq004)
            LET l_psoq009 = GET_FLDBUF(psoq009)
            LET l_psoq036 = GET_FLDBUF(psoq036)
            LET l_psoq005 = GET_FLDBUF(psoq005)
            LET l_psoq007 = GET_FLDBUF(psoq007)
          

            CONSTRUCT g_wc ON a.psoq004,a.psoq009,a.psoq036,a.psoq005,a.psoq007
                 FROM psoq004,psoq009,psoq036,psoq005,psoq007

               BEFORE CONSTRUCT
                  CALL cl_qbe_init()
                  DISPLAY l_psoq004 TO psoq004
                  DISPLAY l_psoq009 TO psoq009
                  DISPLAY l_psoq036 TO psoq036
                  DISPLAY l_psoq005 TO psoq005
                  DISPLAY l_psoq007 TO psoq007
                  EXIT CONSTRUCT
            END CONSTRUCT
            
]]>
</point>
  <point name="ui_dialog.more_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.qbe_select" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.qbeclear" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.exit_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.after_schedule" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="transfer.argv.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.count_progress" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.process" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.foreground_finish" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.background_finish" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="apsr003.description" ver="1" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000033
#+ 
#+ Filename...: apsr003
#+ Description: APS訂單版本比較表
#+ Creator....: 05231(2014/07/08)
#+ Modifier...: 05231(2014/07/08)
#+ Buildtype..: 應用 r01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="apsr003.global" ver="3" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       psoq004 LIKE psoq_t.psoq004, 
   psoq009 LIKE psoq_t.psoq009, 
   psoq036 LIKE psoq_t.psoq036, 
   psoq005 LIKE psoq_t.psoq005, 
   psoq007 LIKE psoq_t.psoq007, 
   aps01 LIKE type_t.chr80, 
   aps02 LIKE type_t.chr80, 
   chk01 LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="apsr003.init" ver="1" status="" src="s">
<![CDATA[#+ 初始化作業
PRIVATE FUNCTION apsr003_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="apsr003.main" ver="1" status="" src="s">
<![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point 
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aps","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL apsr003_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apsr003 WITH FORM cl_ap_formpath("aps",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL apsr003_init()
 
      #進入選單 Menu (="N")
      CALL apsr003_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_apsr003
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
</section>
  <section id="apsr003.other_function" ver="1" status="" src="s">
<![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
</section>
  <section id="apsr003.process" ver="1" status="" src="s">
<![CDATA[#+ 資料處理
PRIVATE FUNCTION apsr003_process(ls_js)
   DEFINE ls_js       STRING
   DEFINE lc_param    type_parameter
   DEFINE li_stus     LIKE type_t.num5
   DEFINE li_count    LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql      STRING             #主SQL
   #add-point:process段define
   {<point name="process.define"/>}
   #end add-point
 
   CALL util.JSON.parse(ls_js,lc_param)
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE apsr003_process_cs CURSOR FROM ls_sql
#  FOREACH apsr003_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
   END IF
END FUNCTION
]]>
</section>
  <section id="apsr003.transfer_argv" ver="1" status="" src="s">
<![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION apsr003_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog     STRING,
             param    DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
 
   CALL util.JSON.parse(ls_js,la_param)
 
   LET la_cmdrun.prog = g_prog
   #add-point:transfer.argv段define
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
</section>
  <section id="apsr003.ui_dialog" ver="4" status="" src="s">
<![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION apsr003_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num5
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      {<point name="ui_dialog.before_dialog2"/>}
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #+ 此段落由子樣板a57產生
         INPUT BY NAME g_master.aps01,g_master.aps02,g_master.chk01 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前
               {<point name="input.m.before_input"/>}
               #end add-point
         
                     #此段落由子樣板a01產生
         BEFORE FIELD aps01
            #add-point:BEFORE FIELD aps01
            {<point name="input.b.aps01" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD aps01
            
            #add-point:AFTER FIELD aps01
            {<point name="input.a.aps01" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE aps01
            #add-point:ON CHANGE aps01
            {<point name="input.g.aps01" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD aps02
            #add-point:BEFORE FIELD aps02
            {<point name="input.b.aps02" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD aps02
            
            #add-point:AFTER FIELD aps02
            {<point name="input.a.aps02" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE aps02
            #add-point:ON CHANGE aps02
            {<point name="input.g.aps02" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD chk01
            #add-point:BEFORE FIELD chk01
            {<point name="input.b.chk01" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD chk01
            
            #add-point:AFTER FIELD chk01
            {<point name="input.a.chk01" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE chk01
            #add-point:ON CHANGE chk01
            {<point name="input.g.chk01" />}
            #END add-point
 
 
                     #Ctrlp:input.c.aps01
         ON ACTION controlp INFIELD aps01
            #add-point:ON ACTION controlp INFIELD aps01
            {<point name="input.c.aps01" />}
            #END add-point
 
         #Ctrlp:input.c.aps02
         ON ACTION controlp INFIELD aps02
            #add-point:ON ACTION controlp INFIELD aps02
            {<point name="input.c.aps02" />}
            #END add-point
 
         #Ctrlp:input.c.chk01
         ON ACTION controlp INFIELD chk01
            #add-point:ON ACTION controlp INFIELD chk01
            {<point name="input.c.chk01" />}
            #END add-point
 
 
               
            AFTER INPUT
               #add-point:資料輸入後
               {<point name="input.m.after_input"/>}
               #end add-point
               
            #add-point:其他管控(on row change, etc...)
            {<point name="input.other"/>}
            #end add-point
               
         END INPUT
 
 
         
         #+ 此段落由子樣板a57產生
         CONSTRUCT BY NAME g_master.wc ON psoq004,psoq009,psoq036,psoq005,psoq007
         
            BEFORE CONSTRUCT
               #add-point:cs段before_construct
               {<point name="cs.head.before_construct"/>}
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.psoq004
         ON ACTION controlp INFIELD psoq004
            #add-point:ON ACTION controlp INFIELD psoq004
            {<point name="construct.c.psoq004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psoq004
            #add-point:BEFORE FIELD psoq004
            {<point name="construct.b.psoq004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psoq004
            
            #add-point:AFTER FIELD psoq004
            {<point name="construct.a.psoq004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psoq009
         ON ACTION controlp INFIELD psoq009
            #add-point:ON ACTION controlp INFIELD psoq009
            {<point name="construct.c.psoq009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psoq009
            #add-point:BEFORE FIELD psoq009
            {<point name="construct.b.psoq009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psoq009
            
            #add-point:AFTER FIELD psoq009
            {<point name="construct.a.psoq009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psoq036
         ON ACTION controlp INFIELD psoq036
            #add-point:ON ACTION controlp INFIELD psoq036
            {<point name="construct.c.psoq036" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psoq036
            #add-point:BEFORE FIELD psoq036
            {<point name="construct.b.psoq036" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psoq036
            
            #add-point:AFTER FIELD psoq036
            {<point name="construct.a.psoq036" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psoq005
         ON ACTION controlp INFIELD psoq005
            #add-point:ON ACTION controlp INFIELD psoq005
            {<point name="construct.c.psoq005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psoq005
            #add-point:BEFORE FIELD psoq005
            {<point name="construct.b.psoq005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psoq005
            
            #add-point:AFTER FIELD psoq005
            {<point name="construct.a.psoq005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psoq007
         ON ACTION controlp INFIELD psoq007
            #add-point:ON ACTION controlp INFIELD psoq007
            {<point name="construct.c.psoq007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psoq007
            #add-point:BEFORE FIELD psoq007
            {<point name="construct.b.psoq007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psoq007
            
            #add-point:AFTER FIELD psoq007
            {<point name="construct.a.psoq007" />}
            #END add-point
            
 
 
            
            #add-point:其他管控
            {<point name="cs.other"/>}
            #end add-point
            
         END CONSTRUCT
 
 
      
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET lc_param.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後
               {<point name="ui_dialog.qbe_select"/>}
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION output
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE lc_param.* TO NULL
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         LET g_jobid = cl_schedule_get_jobid(g_prog)
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL apsr003_process(ls_js)
            WHEN g_schedule.gzpa003 = "1"
            #    CALL cl_schedule_update_data(g_jobid,ls_js)
                 LET ls_js = apsr003_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         {<point name="process.after_schedule"/>}
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
</section>
</add_points>