<add_points prog="apsi003" std_prog="apsi003" erpver="1.0" module="APS" ver="3" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="function.apsi003_psdb003_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apsi003_psdb003_chk()
   
   LET g_errno = ''
   
   IF NOT cl_null(g_psdb_d[l_ac].psdb003) THEN
      CASE g_psdb_d[l_ac].psdb002
         WHEN '1'   #訂單
            IF g_psdb_d[l_ac].psdb003 <> 'xmda_t' AND
               g_psdb_d[l_ac].psdb003 <> 'xmdc_t' AND
               g_psdb_d[l_ac].psdb003 <> 'xmdd_t' THEN
               LET g_errno = 'aps-00075'
            END IF
         WHEN '2'   #銷售預測
            IF g_psdb_d[l_ac].psdb003 <> 'xmig_t' THEN
               LET g_errno = 'aps-00076'
            END IF
         WHEN '3'   #獨立需求
            IF g_psdb_d[l_ac].psdb003 <> 'psab_t' THEN
               LET g_errno = 'aps-00077'
            END IF
      END CASE
   END IF

END FUNCTION]]>
</point>
  <point name="function.apsi003_psdc003_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apsi003_psdc003_chk()
   LET g_errno = ''
   
   IF NOT cl_null(g_psdb2_d[l_ac].psdc003) THEN
      CASE g_psdb2_d[l_ac].psdc002
         WHEN '1'   #庫存
            IF g_psdb2_d[l_ac].psdc003 <> 'inag_t' AND
               g_psdb2_d[l_ac].psdc003 <> 'inaa_t' THEN
               LET g_errno = 'aps-00078'
            END IF
         WHEN '2'   #工單
            IF g_psdb2_d[l_ac].psdc003 <> 'pmda_t' AND
               g_psdb2_d[l_ac].psdc003 <> 'pmdb_t' THEN
               LET g_errno = 'aps-00079'
            END IF
         WHEN '3'   #請購單
            IF g_psdb2_d[l_ac].psdc003 <> 'pmdl_t' AND
               g_psdb2_d[l_ac].psdc003 <> 'pmdn_t' AND
               g_psdb2_d[l_ac].psdc003 <> 'pmdo_t' AND
               g_psdb2_d[l_ac].psdc003 <> 'pmdp_t' THEN
               LET g_errno = 'aps-00080'
            END IF
         WHEN '4'   #採購單
            IF g_psdb2_d[l_ac].psdc003 <> 'sfaa_t' THEN
               LET g_errno = 'aps-00081'
            END IF
      END CASE
   END IF
   
END FUNCTION]]>
</point>
  <point name="function.apsi003_psdb004_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apsi003_psdb004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_psdb_d[l_ac].psdb004
   CALL ap_ref_array2(g_ref_fields,"SELECT dzebl003 FROM dzebl_t WHERE dzebl001=? AND dzebl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_psdb_d[l_ac].psdb004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_psdb_d[l_ac].psdb004_desc
END FUNCTION]]>
</point>
  <point name="function.apsi003_psdc004_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apsi003_psdc004_ref()
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_psdb2_d[l_ac].psdc004
   CALL ap_ref_array2(g_ref_fields,"SELECT dzebl003 FROM dzebl_t WHERE dzebl001=? AND dzebl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_psdb2_d[l_ac].psdc004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_psdb2_d[l_ac].psdc004_desc
END FUNCTION]]>
</point>
  <point name="function.apsi003_psdb004_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apsi003_psdb004_chk()
   DEFINE r_success    LIKE type_t.num5
   
   LET r_success = TRUE

   IF NOT cl_null(g_psdb_d[l_ac].psdb003) AND
      NOT cl_null(g_psdb_d[l_ac].psdb004) THEN
      
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL

      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_psdb_d[l_ac].psdb003
      LET g_chkparam.arg2 = g_psdb_d[l_ac].psdb004

      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_dzeb002") THEN
         LET r_success = FALSE
      END IF
   END IF   
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.apsi003_psdc004_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apsi003_psdc004_chk()
   DEFINE r_success    LIKE type_t.num5
   
   LET r_success = TRUE

   IF NOT cl_null(g_psdb2_d[l_ac].psdc003) AND
      NOT cl_null(g_psdb2_d[l_ac].psdc004) THEN
      
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL

      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_psdb2_d[l_ac].psdc003
      LET g_chkparam.arg2 = g_psdb2_d[l_ac].psdc004

      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_dzeb002") THEN
         LET r_success = FALSE
      END IF
   END IF   
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.apsi003_set_required_b" cite_std="N" status="" ver="1" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apsi003_set_required_b(p_cmd)
   DEFINE p_cmd     LIKE type_t.chr1

   IF NOT cl_null(g_psdb_d[l_ac].psdb005) THEN
      CALL cl_set_comp_required("psdb006",TRUE)
   END IF
   
   IF NOT cl_null(g_psdb_d[l_ac].psdb006) THEN
      CALL cl_set_comp_required("psdb005",TRUE)
   END IF

   IF NOT cl_null(g_psdb2_d[l_ac].psdc005) THEN
      CALL cl_set_comp_required("psdc006",TRUE)
   END IF
   
   IF NOT cl_null(g_psdb2_d[l_ac].psdc006) THEN
      CALL cl_set_comp_required("psdc005",TRUE)
   END IF

END FUNCTION]]>
</point>
  <point name="function.apsi003_set_no_required_b" cite_std="N" status="" ver="1" src="s" new="Y" order="8" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apsi003_set_no_required_b(p_cmd)
   DEFINE p_cmd     LIKE type_t.chr1
   
   CALL cl_set_comp_required("psdb005",FALSE)
   CALL cl_set_comp_required("psdb006",FALSE)
   CALL cl_set_comp_required("psdc005",FALSE)
   CALL cl_set_comp_required("psdc006",FALSE)
END FUNCTION]]>
</point>
  <point name="function.apsi003_psdb007_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="9" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apsi003_psdb007_chk()
   DEFINE l_length   LIKE type_t.num5
   DEFINE l_length1  LIKE type_t.num5
   DEFINE r_success  LIKE type_t.num5

  #LET g_errno = ''
   LET l_length = ''
   LET l_length1 = ''
   LET r_success = TRUE

   IF NOT cl_null(g_psdb_d[l_ac].psdb007)THEN
      LET l_length = LENGTH(g_psdb_d[l_ac].psdb007)
      
      IF NOT cl_null(g_psdb_d[l_ac].psdb005) AND     #有輸入起始、截止碼
         NOT cl_null(g_psdb_d[l_ac].psdb006) THEN         
         LET l_length1 = g_psdb_d[l_ac].psdb006 - g_psdb_d[l_ac].psdb005 + 1      
         
         IF l_length1 <> l_length THEN
           #LET g_errno = 'aps-00083'
           CALL cl_err_msg(g_psdb_d[l_ac].psdb007,'aps-00083',l_length ||'|'|| g_psdb_d[l_ac].psdb005 ||'|'|| g_psdb_d[l_ac].psdb006,1)
           LET r_success = FALSE
           RETURN r_success
         END IF
      ELSE
         CALL apsi003_get_length(g_psdb_d[l_ac].psdb003,g_psdb_d[l_ac].psdb004)RETURNING l_length1              
         IF l_length1 < l_length AND NOT cl_null(l_length1) THEN
           #LET g_errno = 'aps-00084'
           CALL cl_err_msg(g_psdb_d[l_ac].psdb007,'aps-00084',l_length ||'|'|| l_length1,1)
           LET r_success = FALSE
           RETURN r_success
         END IF
      END IF      
   END IF
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.apsi003_psdc007_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="10" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apsi003_psdc007_chk()
   DEFINE l_length   LIKE type_t.num5
   DEFINE l_length1  LIKE type_t.num5
   DEFINE r_success  LIKE type_t.num5

   LET g_errno = ''
   LET l_length = ''
   LET l_length1 = ''
   LET r_success = TRUE

   IF NOT cl_null(g_psdb2_d[l_ac].psdc007) THEN
      LET l_length = LENGTH(g_psdb2_d[l_ac].psdc007)
      
      IF NOT cl_null(g_psdb2_d[l_ac].psdc005) AND     #有輸入起始、截止碼
         NOT cl_null(g_psdb2_d[l_ac].psdc006) THEN         
         LET l_length1 = g_psdb2_d[l_ac].psdc006 - g_psdb2_d[l_ac].psdc005 + 1      
         
         IF l_length1 <> l_length THEN
           #LET g_errno = 'aps-00083'
            CALL cl_err_msg(g_psdb2_d[l_ac].psdc007,'aps-00083',l_length ||'|'|| g_psdb2_d[l_ac].psdc005 ||'|'|| g_psdb2_d[l_ac].psdc006,1)
            LET r_success = FALSE
            RETURN r_success
         END IF
      ELSE
         CALL apsi003_get_length(g_psdb2_d[l_ac].psdc003,g_psdb2_d[l_ac].psdc004) RETURNING l_length1              
         IF l_length1 < l_length AND NOT cl_null(l_length1) THEN
           #LET g_errno = 'aps-00084'
            CALL cl_err_msg(g_psdb2_d[l_ac].psdc007,'aps-00084',l_length ||'|'|| l_length1,1)
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
                                                          
                         
#         IF l_gztd003 = 'date' THEN      #日期格式
#            SELECT TO_DATE(g_psdb2_d[l_ac].psdc007,'YY/MM/DD')
#              INTO g_psdb2_d[l_ac].psdc007
#              FROM dual
#              
#            IF SQLCA.sqlcode THEN
#               LET g_errno = '-1218'
#               RETURN
#            END IF         
            
   END IF     
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.apsi003_get_length" cite_std="N" status="" ver="1" src="s" new="Y" order="11" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apsi003_get_length(p_table,p_fields)
   DEFINE p_table    LIKE dzep_t.dzep001
   DEFINE p_fields   LIKE dzep_t.dzep002
   DEFINE l_gztd003  LIKE gztd_t.gztd003   
   DEFINE l_gztd008  LIKE gztd_t.gztd008
   DEFINE r_length   LIKE type_t.num5
   DEFINE l_data     STRING
   DEFINE l_sub      STRING
      
   LET l_gztd003 = ''
   LET l_gztd008 = ''
   LET r_length = ''

   IF NOT cl_null(p_table) AND
      NOT cl_null(p_fields) THEN
      
      SELECT gztd003,gztd008 INTO l_gztd003,l_gztd008
        FROM dzeb_t,gztd_t
       WHERE gztd001 = dzeb006
         AND dzeb001 = p_table
         AND dzeb002 = p_fields                  
         
      IF l_gztd003 = 'date' THEN      #日期格式
         LET r_length = 10
      ELSE
         IF NOT cl_null(l_gztd008) THEN
            LET l_data = l_gztd008
            LET l_sub = l_data.getIndexOf(",",1)
            
            IF l_sub > 0 THEN
               LET r_length = l_data.subString(1,l_sub)
            ELSE
               LET r_length = l_gztd008
            END IF  
         END IF            
      END IF    
   END IF 

   RETURN r_length
END FUNCTION]]>
</point>
  <point name="function.apsi003_psdc005_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="12" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apsi003_psdc005_chk()
   DEFINE l_length     LIKE type_t.num5
   DEFINE r_success    LIKE type_t.num5
   
   LET g_errno = ''
   LET l_length = ''
   LET r_success = TRUE
   
   IF NOT cl_null(g_psdb2_d[l_ac].psdc005) AND
      NOT cl_null(g_psdb2_d[l_ac].psdc006) THEN      
      IF g_psdb2_d[l_ac].psdc005 > g_psdb2_d[l_ac].psdc006 THEN
        #LET g_errno = 'aps-00082'
         CALL cl_err_msg(g_psdb2_d[l_ac].psdc005,'aps-00082',g_psdb2_d[l_ac].psdc005 ||'|'|| g_psdb2_d[l_ac].psdc006,1)
         LET r_success = FALSE
         RETURN r_success
      END IF      
   END IF
   
   IF NOT cl_null(g_psdb2_d[l_ac].psdc003) AND
      NOT cl_null(g_psdb2_d[l_ac].psdc004) THEN  
      CALL apsi003_get_length(g_psdb2_d[l_ac].psdc003,g_psdb2_d[l_ac].psdc004)RETURNING l_length
      IF l_length < g_psdb2_d[l_ac].psdc005 THEN
        #LET g_errno = 'aps-00084'
         CALL cl_err_msg(g_psdb2_d[l_ac].psdc005,'aps-00084',g_psdb2_d[l_ac].psdc005 ||'|'|| l_length,1)
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.apsi003_psdc006_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="13" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apsi003_psdc006_chk()
   DEFINE l_length     LIKE type_t.num5
   DEFINE r_success    LIKE type_t.num5
   
   LET g_errno = ''
   LET l_length = ''
   LET r_success = TRUE
   
   IF NOT cl_null(g_psdb2_d[l_ac].psdc005) AND
      NOT cl_null(g_psdb2_d[l_ac].psdc006) THEN      
      IF g_psdb2_d[l_ac].psdc005 > g_psdb2_d[l_ac].psdc006 THEN
        #LET g_errno = 'aps-00082'
         CALL cl_err_msg(g_psdb2_d[l_ac].psdc006,'aps-00082',g_psdb2_d[l_ac].psdc005 ||'|'|| g_psdb2_d[l_ac].psdc006,1)
         LET r_success = FALSE
         RETURN r_success
      END IF      
   END IF
      
   IF NOT cl_null(g_psdb2_d[l_ac].psdc003) AND
      NOT cl_null(g_psdb2_d[l_ac].psdc004) THEN  
      CALL apsi003_get_length(g_psdb2_d[l_ac].psdc003,g_psdb2_d[l_ac].psdc004)RETURNING l_length
      IF l_length < g_psdb2_d[l_ac].psdc006 THEN
        #LET g_errno = 'aps-00084'
         CALL cl_err_msg(g_psdb2_d[l_ac].psdc006,'aps-00084',g_psdb2_d[l_ac].psdc006 ||'|'|| l_length,1)
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.apsi003_psdb005_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="14" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apsi003_psdb005_chk()
   DEFINE l_length     LIKE type_t.num5
   DEFINE r_success    LIKE type_t.num5
   
   #LET g_errno = ''
   LET l_length = ''
   LET r_success = TRUE

   IF NOT cl_null(g_psdb_d[l_ac].psdb005) AND
      NOT cl_null(g_psdb_d[l_ac].psdb006) THEN      
      IF g_psdb_d[l_ac].psdb005 > g_psdb_d[l_ac].psdb006 THEN
         #LET g_errno = 'aps-00082'
         CALL cl_err_msg(g_psdb_d[l_ac].psdb005,'aps-00082',g_psdb_d[l_ac].psdb005 ||'|'|| g_psdb_d[l_ac].psdb006,1)
         LET r_success = FALSE         
         RETURN r_success
      END IF
   END IF 
   
   IF NOT cl_null(g_psdb_d[l_ac].psdb003) AND
      NOT cl_null(g_psdb_d[l_ac].psdb004) THEN  
      CALL apsi003_get_length(g_psdb_d[l_ac].psdb003,g_psdb_d[l_ac].psdb004)RETURNING l_length
      IF l_length < g_psdb_d[l_ac].psdb005 THEN
         #LET g_errno = 'aps-00084'
         CALL cl_err_msg(g_psdb_d[l_ac].psdb005,'aps-00084',g_psdb_d[l_ac].psdb005 ||'|'|| l_length,1)    
         LET r_success = FALSE         
         RETURN r_success            
      END IF
   END IF
    
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.apsi003_psdb006_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="15" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apsi003_psdb006_chk()
   DEFINE l_length     LIKE type_t.num5
   DEFINE r_success    LIKE type_t.num5
   
  #LET g_errno = ''
   LET l_length = ''
   LET r_success = TRUE

   IF NOT cl_null(g_psdb_d[l_ac].psdb005) AND
      NOT cl_null(g_psdb_d[l_ac].psdb006) THEN      
      IF g_psdb_d[l_ac].psdb005 > g_psdb_d[l_ac].psdb006 THEN
        #LET g_errno = 'aps-00082'
         CALL cl_err_msg(g_psdb_d[l_ac].psdb006,'aps-00082',g_psdb_d[l_ac].psdb005 ||'|'|| g_psdb_d[l_ac].psdb006,1)
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF 
   
   IF NOT cl_null(g_psdb_d[l_ac].psdb003) AND
      NOT cl_null(g_psdb_d[l_ac].psdb004) THEN  
      CALL apsi003_get_length(g_psdb_d[l_ac].psdb003,g_psdb_d[l_ac].psdb004)RETURNING l_length
      IF l_length < g_psdb_d[l_ac].psdb006 THEN
        #LET g_errno = 'aps-00084'           
         CALL cl_err_msg(g_psdb_d[l_ac].psdb006,'aps-00084',g_psdb_d[l_ac].psdb006 ||'|'|| l_length,1)
         LET r_success = FALSE
         RETURN r_success           
      END IF
   END IF
  
   
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="construct.c.page1.psdb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dzeb002_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psdb004  #顯示到畫面上
            NEXT FIELD psdb004                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.psdc004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dzeb002_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psdc004  #顯示到畫面上
            NEXT FIELD psdc004                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.psda001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_psda001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psda001  #顯示到畫面上
            NEXT FIELD psda001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.psdacnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psdacnfid  #顯示到畫面上
            NEXT FIELD psdacnfid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.psdacrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psdacrtdp  #顯示到畫面上
            NEXT FIELD psdacrtdp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.psdacrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psdacrtid  #顯示到畫面上
            NEXT FIELD psdacrtid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.psdamodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psdamodid  #顯示到畫面上
            NEXT FIELD psdamodid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.psdaowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psdaowndp  #顯示到畫面上
            NEXT FIELD psdaowndp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.psdaownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO psdaownid  #顯示到畫面上
            NEXT FIELD psdaownid                     #返回原欄位
    

]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   
   CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)
   IF g_psda_m.psdastus = 'N' THEN
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF]]>
</point>
  <point name="input.a.page1.psdb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            CALL apsi003_psdb003_chk()
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_psdb_d[l_ac].psdb003,g_errno,1)
               NEXT FIELD psdb003
            END IF
]]>
</point>
  <point name="input.a.page1.psdb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            CALL apsi003_psdb003_chk()
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_psdb_d[l_ac].psdb003,g_errno,1)
               LET g_psdb_d[l_ac].psdb003 = g_psdb_d_t.psdb003
               NEXT FIELD CURRENT
            END IF
                                  
            IF NOT apsi003_psdb004_chk() THEN
               NEXT FIELD psdb004
            END IF]]>
</point>
  <point name="input.a.page1.psdb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            
            CALL apsi003_psdb004_ref()
            IF NOT apsi003_psdb004_chk() THEN
               LET g_psdb_d[l_ac].psdb004 = g_psdb_d_t.psdb004
               CALL apsi003_psdb004_ref()
               NEXT FIELD CURRENT
            END IF
            
            IF NOT apsi003_psdb005_chk() THEN
               NEXT FIELD psdb005
            END IF
            
            IF NOT apsi003_psdb006_chk() THEN
               NEXT FIELD psdb006
            END IF
            
            IF NOT apsi003_psdb007_chk() THEN
               NEXT FIELD psdb007
            END IF]]>
</point>
  <point name="input.a.page1.psdb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            IF NOT apsi003_psdb005_chk() THEN
               LET g_psdb_d[l_ac].psdb005 = g_psdb_d_t.psdb005
               NEXT FIELD CURRENT
            END IF
            
            IF NOT apsi003_psdb006_chk() THEN
               NEXT FIELD psdb006
            END IF

            IF NOT apsi003_psdb007_chk() THEN
               NEXT FIELD psdb007
            END IF

            CALL apsi003_set_no_required_b(l_cmd)
            CALL apsi003_set_required_b(l_cmd)]]>
</point>
  <point name="input.a.page1.psdb006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            IF NOT apsi003_psdb006_chk() THEN
               LET g_psdb_d[l_ac].psdb006 = g_psdb_d_t.psdb006
               NEXT FIELD CURRENT
            END IF
            
            IF NOT apsi003_psdb007_chk() THEN
               NEXT FIELD psdb007
            END IF
            
            CALL apsi003_set_no_required_b(l_cmd)
            CALL apsi003_set_required_b(l_cmd)]]>
</point>
  <point name="input.a.page1.psdb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            IF NOT apsi003_psdb007_chk() THEN
               LET g_psdb_d[l_ac].psdb007 = g_psdb_d_t.psdb007
               NEXT FIELD CURRENT
            END IF
                        ]]>
</point>
  <point name="input.a.page1.psdbseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_psda_m.psda001 IS NOT NULL AND g_psdb_d[g_detail_idx].psdbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_psda_m.psda001 != g_psda001_t OR g_psdb_d[g_detail_idx].psdbseq != g_psdb_d_t.psdbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM psdb_t WHERE "||"psdbent = '" ||g_enterprise|| "' AND psdbsite = '" ||g_site|| "' AND "||"psdb001 = '"||g_psda_m.psda001 ||"' AND "|| "psdbseq = '"||g_psdb_d[g_detail_idx].psdbseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.psdc002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            CALL apsi003_psdc003_chk()
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_psdb2_d[l_ac].psdc003,g_errno,1)
               NEXT FIELD psdc003
            END IF]]>
</point>
  <point name="input.a.page2.psdc003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            CALL apsi003_psdc003_chk()
            IF NOT cl_null(g_errno) THEN
               CALL cl_err(g_psdb2_d[l_ac].psdc003,g_errno,1)
               LET g_psdb2_d[l_ac].psdc003 = g_psdb2_d_t.psdc003
               NEXT FIELD CURRENT
            END IF
            
            IF NOT apsi003_psdc004_chk() THEN                
               NEXT FIELD psdc004
            END IF]]>
</point>
  <point name="input.a.page2.psdc004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            
            CALL apsi003_psdc004_ref()            
            IF NOT apsi003_psdc004_chk() THEN
               LET g_psdb2_d[l_ac].psdc004 = g_psdb2_d_t.psdc004
               CALL apsi003_psdc004_ref()   
               NEXT FIELD CURRENT
            END IF
            
            IF NOT apsi003_psdc005_chk() THEN
               NEXT FIELD psdc005
            END IF
            
            IF NOT apsi003_psdc006_chk() THEN
               NEXT FIELD psdc006
            END IF

            IF NOT apsi003_psdc007_chk() THEN
               NEXT FIELD psdc007
            END IF]]>
</point>
  <point name="input.a.page2.psdc005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            IF NOT apsi003_psdc005_chk() THEN
               LET g_psdb2_d[l_ac].psdc005 = g_psdb2_d_t.psdc005
               NEXT FIELD CURRENT
            END IF
            
            IF NOT apsi003_psdc006_chk() THEN
               NEXT FIELD psdc006
            END IF

            IF NOT apsi003_psdc007_chk() THEN
               NEXT FIELD psdc007
            END IF

            CALL apsi003_set_no_required_b(l_cmd)
            CALL apsi003_set_required_b(l_cmd)]]>
</point>
  <point name="input.a.page2.psdc006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            IF NOT apsi003_psdc006_chk() THEN
               LET g_psdb2_d[l_ac].psdc006 = g_psdb2_d_t.psdc006
               NEXT FIELD CURRENT
            END IF

            IF NOT apsi003_psdc007_chk() THEN
               NEXT FIELD psdc007
            END IF

            CALL apsi003_set_no_required_b(l_cmd)
            CALL apsi003_set_required_b(l_cmd)]]>
</point>
  <point name="input.a.page2.psdc007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            IF NOT apsi003_psdc007_chk() THEN
               LET g_psdb2_d[l_ac].psdc007 = g_psdb2_d_t.psdc007
               NEXT FIELD CURRENT
            END IF]]>
</point>
  <point name="input.a.page2.psdcseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_psda_m.psda001 IS NOT NULL AND g_psdb2_d[g_detail_idx].psdcseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_psda_m.psda001 != g_psda001_t OR g_psdb2_d[g_detail_idx].psdcseq != g_psdb2_d_t.psdcseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM psdc_t WHERE "||"psdcent = '" ||g_enterprise|| "' AND psdcsite = '" ||g_site|| "' AND "||"psdc001 = '"||g_psda_m.psda001 ||"' AND "|| "psdcseq = '"||g_psdb2_d[g_detail_idx].psdcseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.psda001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_psda_m.psda001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_psda_m.psda001 != g_psda001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM psda_t WHERE "||"psdaent = '" ||g_enterprise|| "' AND psdasite = '" ||g_site|| "' AND "||"psda001 = '"||g_psda_m.psda001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.b.page1.psdb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[    ]]>
</point>
  <point name="input.b.page1.psdb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            
            IF NOT cl_null(g_psdb_d[l_ac].psdb005) OR
               NOT cl_null(g_psdb_d[l_ac].psdb006) THEN
               
               IF cl_null(g_psdb_d[l_ac].psdb005) THEN
                  CALL cl_err('','aps-00086',1)
                  NEXT FIELD psdb005
               END IF
               
               IF cl_null(g_psdb_d[l_ac].psdb006) THEN
                  CALL cl_err('','aps-00085',1)
                  NEXT FIELD psdb006
               END IF               
            END IF]]>
</point>
  <point name="input.b.page2.psdc006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.b.page2.psdc007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            IF NOT cl_null(g_psdb2_d[l_ac].psdc005) OR
               NOT cl_null(g_psdb2_d[l_ac].psdc006) THEN
               
               IF cl_null(g_psdb2_d[l_ac].psdc005) THEN
                  CALL cl_err('','aps-00086',1)
                  NEXT FIELD psdc005
               END IF
               
               IF cl_null(g_psdb2_d[l_ac].psdc006) THEN
                  CALL cl_err('','aps-00085',1)
                  NEXT FIELD psdc006
               END IF               
            END IF]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
               CALL apsi003_set_no_required_b(l_cmd)
               CALL apsi003_set_required_b(l_cmd)]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         
            IF cl_null(g_psdb_d[l_ac].psdbseq) THEN
               SELECT MAX(psdbseq)+1 INTO g_psdb_d[l_ac].psdbseq
                 FROM psdb_t
                WHERE psdbent = g_enterprise
                  AND psdbsite = g_site
                  AND psdb001 = g_psda_m.psda001
                  
               IF cl_null(g_psdb_d[l_ac].psdbseq) THEN
                  LET g_psdb_d[l_ac].psdbseq = 1
               END IF
            END IF]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            CALL apsi003_set_no_required_b(l_cmd)
            CALL apsi003_set_required_b(l_cmd)]]>
</point>
  <point name="input.body2.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
               CALL apsi003_set_no_required_b(l_cmd)
               CALL apsi003_set_required_b(l_cmd)]]>
</point>
  <point name="input.body2.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            
            IF cl_null(g_psdb2_d[l_ac].psdcseq) THEN
               SELECT MAX(psdcseq)+1 INTO g_psdb2_d[l_ac].psdcseq
                 FROM psdc_t
                WHERE psdcent = g_enterprise
                  AND psdcsite = g_site
                  AND psdc001 = g_psda_m.psda001
                  
               IF cl_null(g_psdb2_d[l_ac].psdcseq) THEN
                  LET g_psdb2_d[l_ac].psdcseq = 1
               END IF
            END IF]]>
</point>
  <point name="input.body2.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.body2.insert.after_set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            CALL apsi003_set_no_required_b(l_cmd)
            CALL apsi003_set_required_b(l_cmd)]]>
</point>
  <point name="input.c.page1.psdb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_psdb_d[l_ac].psdb004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_psdb_d[l_ac].psdb003

            
            CALL q_dzeb002_7()                                #呼叫開窗

            LET g_psdb_d[l_ac].psdb004 = g_qryparam.return1              

            DISPLAY g_psdb_d[l_ac].psdb004 TO psdb004              #

            CALL apsi003_psdb004_ref()
            NEXT FIELD psdb004                          #返回原欄位

]]>
</point>
  <point name="input.c.page2.psdc004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_psdb2_d[l_ac].psdc004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_psdb2_d[l_ac].psdc003

            
            CALL q_dzeb002_7()                                #呼叫開窗

            LET g_psdb2_d[l_ac].psdc004 = g_qryparam.return1              

            DISPLAY g_psdb2_d[l_ac].psdc004 TO psdc004              #

            CALL apsi003_psdc004_ref()
            NEXT FIELD psdc004                          #返回原欄位

]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
      LET g_psda_m.psdastus = "Y"]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
   LET g_errshow = 1]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
   LET g_psda_m.psdastus = 'Y']]>
</point>
  <point name="show.body.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="show.body2.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="show.head.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_psda_m.psda001
   CALL ap_ref_array2(g_ref_fields," SELECT psdal003,psdal004 FROM psdal_t WHERE psdalent = '"||g_enterprise||"' AND psdal001 = ? AND psdal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_psda_m.psdal003 = g_rtn_fields[1] 
   LET g_psda_m.psdal004 = g_rtn_fields[2] 
   DISPLAY g_psda_m.psdal003,g_psda_m.psdal004 TO psdal003,psdal004
]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.psda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.psda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.psdal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.psdal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.psdal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.psdal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.psdal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.psdal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.psdastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.psdastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.psdastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.psdaownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.psdaownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.psdaowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.psdaowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.psdacrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.psdacrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.psdacrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.psdacrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.psdacrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.psdamodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.psdamodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.psdamoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.psdbseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.psdbseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.psdbseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.psdb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.psdb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.psdb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.psdb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.psdb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.psdb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.psdb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.psdb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.psdb005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.psdb005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.psdb005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.psdb006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.psdb006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.psdb006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.psdb007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.psdb007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.psdb007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body2.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.psdcseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.psdcseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.psdcseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.psdc002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.psdc002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.psdc002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.psdc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.psdc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.psdc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.psdc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.psdc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.psdc005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.psdc005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.psdc005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.psdc006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.psdc006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.psdc006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.psdc007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.psdc007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.psdc007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.master_input.update_item" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.psda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.psda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.psdal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.psdal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.psdal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.psdal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.psdal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.psdal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.psdastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.psdastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.psdastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.psda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.psdal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.psdal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.psdastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.psdbseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.psdbseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.psdb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.psdb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.psdb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.psdb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.psdb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.psdb005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.psdb005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.psdb006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.psdb006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.psdb007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.psdbseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.psdb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.psdb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.psdb005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.psdb006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.psdb007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page2.psdcseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page2.psdcseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page2.psdc002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page2.psdc002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page2.psdc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page2.psdc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page2.psdc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page2.psdc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page2.psdc005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page2.psdc005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page2.psdc006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page2.psdc007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page2.psdcseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page2.psdc002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page2.psdc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page2.psdc005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page2.psdc006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page2.psdc007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table2.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table2.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table2.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.lang.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body2.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.inactive" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.active" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="apsi003.b_fill" ver="8" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION apsi003_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_psdb_d.clear()    #g_psdb_d 單頭及單身 
   CALL g_psdb2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF apsi003_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE psdbseq,psdb002,psdb003,psdb004,psdb005,psdb006,psdb007 ,t1.dzebl003 FROM psdb_t", 
             
                  " INNER JOIN psda_t ON psda001 = psdb001 ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN dzebl_t t1 ON t1.dzebl001=psdb004 AND t1.dzebl002='"||g_dlang||"' ",
 
                  " WHERE psdbent=? AND psdbsite=? AND psdb001=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY psdb_t.psdbseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE apsi003_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR apsi003_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise, g_site,g_psda_m.psda001
                                               
      FOREACH b_fill_cs INTO g_psdb_d[l_ac].psdbseq,g_psdb_d[l_ac].psdb002,g_psdb_d[l_ac].psdb003,g_psdb_d[l_ac].psdb004, 
          g_psdb_d[l_ac].psdb005,g_psdb_d[l_ac].psdb006,g_psdb_d[l_ac].psdb007,g_psdb_d[l_ac].psdb004_desc 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF apsi003_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE psdcseq,psdc002,psdc003,psdc004,psdc005,psdc006,psdc007 ,t2.dzebl003 FROM psdc_t", 
             
                  " INNER JOIN psda_t ON psda001 = psdc001 ",
 
                  "",
                  
                                 " LEFT JOIN dzebl_t t2 ON t2.dzebl001=psdc004 AND t2.dzebl002='"||g_dlang||"' ",
 
                  " WHERE psdcent=? AND psdcsite=? AND psdc001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY psdc_t.psdcseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE apsi003_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR apsi003_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise, g_site,g_psda_m.psda001
                                               
      FOREACH b_fill_cs2 INTO g_psdb2_d[l_ac].psdcseq,g_psdb2_d[l_ac].psdc002,g_psdb2_d[l_ac].psdc003, 
          g_psdb2_d[l_ac].psdc004,g_psdb2_d[l_ac].psdc005,g_psdb2_d[l_ac].psdc006,g_psdb2_d[l_ac].psdc007, 
          g_psdb2_d[l_ac].psdc004_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_psdb_d.deleteElement(g_psdb_d.getLength())
   CALL g_psdb2_d.deleteElement(g_psdb2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE apsi003_pb
   FREE apsi003_pb2
 
 
   
END FUNCTION
]]>
</section>
  <section id="apsi003.b_fill2" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION apsi003_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL apsi003_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="apsi003.browser_fill" ver="15" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION apsi003_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_psda_m.* TO NULL
   CALL g_psdb_d.clear()        
   CALL g_psdb2_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "psda001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE psda001 ",
                      " FROM psda_t ",
                      " ",
                      " LEFT JOIN psdb_t ON psdbent = psdaent AND psdbsite = psdasite AND psda001 = psdb001 ",
                      " LEFT JOIN psdc_t ON psdcent = psdaent AND psdcsite = psdasite AND psda001 = psdc001", 
 
 
 
                      " LEFT JOIN psdal_t ON psda001 = psdal001 AND psdal002 = '",g_lang,"' ", 
                      " ", 
                      " WHERE psdaent = '" ||g_enterprise|| "' AND psdasite = '" ||g_site|| "' AND psdbent = '" ||g_enterprise|| "' AND psdbsite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("psda_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE psda001 ",
                      " FROM psda_t ", 
                      "  ",
                      "  LEFT JOIN psdal_t ON psda001 = psdal001 AND psdal002 = '",g_lang,"' ",
                      " WHERE psdaent = '" ||g_enterprise|| "' AND psdasite = '" ||g_site|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("psda_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照psda001,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT psdastus,psda001,'',t1.psdal003 ",
               " FROM psda_t ",
               "  ",
               "  LEFT JOIN psdb_t ON psdbent = psdaent AND psdbsite = psdasite AND psda001 = psdb001 ",
               "  LEFT JOIN psdc_t ON psdcent = psdaent AND psdcsite = psdasite AND psda001 = psdc001",
 
 
 
               "  LEFT JOIN psdal_t ON psda001 = psdal001 AND psdal002 = '",g_lang,"' ",
               "  ",
                              " LEFT JOIN psdal_t t1 ON t1.psdalent='"||g_enterprise||"' AND t1.psdal001=psda001 AND t1.psdal002='"||g_lang||"' ",
 
               " WHERE psdaent = '" ||g_enterprise|| "' AND psdasite = '" ||g_site|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("psda_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_psda001,g_browser[g_cnt].b_psda001_desc, 
       g_browser[g_cnt].b_psda001_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="apsi003.browser_search" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION apsi003_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY psda001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL apsi003_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="apsi003.construct" ver="9" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION apsi003_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_psda_m.* TO NULL
   CALL g_psdb_d.clear()        
   CALL g_psdb2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON psda001,psdal003,psdal004,psdastus,psdaownid,psdaowndp,psdacrtid,psdacrtdp, 
          psdacrtdt,psdamodid,psdamoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<psdacrtdt>>----
         AFTER FIELD psdacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<psdamoddt>>----
         AFTER FIELD psdamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<psdacnfdt>>----
         
         #----<<psdapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.psda001
         ON ACTION controlp INFIELD psda001
            #add-point:ON ACTION controlp INFIELD psda001
            {<point name="construct.c.psda001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psda001
            #add-point:BEFORE FIELD psda001
            {<point name="construct.b.psda001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psda001
            
            #add-point:AFTER FIELD psda001
            {<point name="construct.a.psda001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdal003
            #add-point:BEFORE FIELD psdal003
            {<point name="construct.b.psdal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdal003
            
            #add-point:AFTER FIELD psdal003
            {<point name="construct.a.psdal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psdal003
         ON ACTION controlp INFIELD psdal003
            #add-point:ON ACTION controlp INFIELD psdal003
            {<point name="construct.c.psdal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdal004
            #add-point:BEFORE FIELD psdal004
            {<point name="construct.b.psdal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdal004
            
            #add-point:AFTER FIELD psdal004
            {<point name="construct.a.psdal004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psdal004
         ON ACTION controlp INFIELD psdal004
            #add-point:ON ACTION controlp INFIELD psdal004
            {<point name="construct.c.psdal004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdastus
            #add-point:BEFORE FIELD psdastus
            {<point name="construct.b.psdastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdastus
            
            #add-point:AFTER FIELD psdastus
            {<point name="construct.a.psdastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psdastus
         ON ACTION controlp INFIELD psdastus
            #add-point:ON ACTION controlp INFIELD psdastus
            {<point name="construct.c.psdastus" />}
            #END add-point
 
         #Ctrlp:construct.c.psdaownid
         ON ACTION controlp INFIELD psdaownid
            #add-point:ON ACTION controlp INFIELD psdaownid
            {<point name="construct.c.psdaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdaownid
            #add-point:BEFORE FIELD psdaownid
            {<point name="construct.b.psdaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdaownid
            
            #add-point:AFTER FIELD psdaownid
            {<point name="construct.a.psdaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psdaowndp
         ON ACTION controlp INFIELD psdaowndp
            #add-point:ON ACTION controlp INFIELD psdaowndp
            {<point name="construct.c.psdaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdaowndp
            #add-point:BEFORE FIELD psdaowndp
            {<point name="construct.b.psdaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdaowndp
            
            #add-point:AFTER FIELD psdaowndp
            {<point name="construct.a.psdaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psdacrtid
         ON ACTION controlp INFIELD psdacrtid
            #add-point:ON ACTION controlp INFIELD psdacrtid
            {<point name="construct.c.psdacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdacrtid
            #add-point:BEFORE FIELD psdacrtid
            {<point name="construct.b.psdacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdacrtid
            
            #add-point:AFTER FIELD psdacrtid
            {<point name="construct.a.psdacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.psdacrtdp
         ON ACTION controlp INFIELD psdacrtdp
            #add-point:ON ACTION controlp INFIELD psdacrtdp
            {<point name="construct.c.psdacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdacrtdp
            #add-point:BEFORE FIELD psdacrtdp
            {<point name="construct.b.psdacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdacrtdp
            
            #add-point:AFTER FIELD psdacrtdp
            {<point name="construct.a.psdacrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdacrtdt
            #add-point:BEFORE FIELD psdacrtdt
            {<point name="construct.b.psdacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.psdamodid
         ON ACTION controlp INFIELD psdamodid
            #add-point:ON ACTION controlp INFIELD psdamodid
            {<point name="construct.c.psdamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdamodid
            #add-point:BEFORE FIELD psdamodid
            {<point name="construct.b.psdamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdamodid
            
            #add-point:AFTER FIELD psdamodid
            {<point name="construct.a.psdamodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdamoddt
            #add-point:BEFORE FIELD psdamoddt
            {<point name="construct.b.psdamoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON psdbseq,psdb002,psdb003,psdb004,psdb005,psdb006,psdb007
           FROM s_detail1[1].psdbseq,s_detail1[1].psdb002,s_detail1[1].psdb003,s_detail1[1].psdb004, 
               s_detail1[1].psdb005,s_detail1[1].psdb006,s_detail1[1].psdb007
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD psdbseq
            #add-point:BEFORE FIELD psdbseq
            {<point name="construct.b.page1.psdbseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdbseq
            
            #add-point:AFTER FIELD psdbseq
            {<point name="construct.a.page1.psdbseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.psdbseq
         ON ACTION controlp INFIELD psdbseq
            #add-point:ON ACTION controlp INFIELD psdbseq
            {<point name="construct.c.page1.psdbseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdb002
            #add-point:BEFORE FIELD psdb002
            {<point name="construct.b.page1.psdb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdb002
            
            #add-point:AFTER FIELD psdb002
            {<point name="construct.a.page1.psdb002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.psdb002
         ON ACTION controlp INFIELD psdb002
            #add-point:ON ACTION controlp INFIELD psdb002
            {<point name="construct.c.page1.psdb002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdb003
            #add-point:BEFORE FIELD psdb003
            {<point name="construct.b.page1.psdb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdb003
            
            #add-point:AFTER FIELD psdb003
            {<point name="construct.a.page1.psdb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.psdb003
         ON ACTION controlp INFIELD psdb003
            #add-point:ON ACTION controlp INFIELD psdb003
            {<point name="construct.c.page1.psdb003" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.psdb004
         ON ACTION controlp INFIELD psdb004
            #add-point:ON ACTION controlp INFIELD psdb004
            {<point name="construct.c.page1.psdb004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdb004
            #add-point:BEFORE FIELD psdb004
            {<point name="construct.b.page1.psdb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdb004
            
            #add-point:AFTER FIELD psdb004
            {<point name="construct.a.page1.psdb004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdb005
            #add-point:BEFORE FIELD psdb005
            {<point name="construct.b.page1.psdb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdb005
            
            #add-point:AFTER FIELD psdb005
            {<point name="construct.a.page1.psdb005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.psdb005
         ON ACTION controlp INFIELD psdb005
            #add-point:ON ACTION controlp INFIELD psdb005
            {<point name="construct.c.page1.psdb005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdb006
            #add-point:BEFORE FIELD psdb006
            {<point name="construct.b.page1.psdb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdb006
            
            #add-point:AFTER FIELD psdb006
            {<point name="construct.a.page1.psdb006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.psdb006
         ON ACTION controlp INFIELD psdb006
            #add-point:ON ACTION controlp INFIELD psdb006
            {<point name="construct.c.page1.psdb006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdb007
            #add-point:BEFORE FIELD psdb007
            {<point name="construct.b.page1.psdb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdb007
            
            #add-point:AFTER FIELD psdb007
            {<point name="construct.a.page1.psdb007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.psdb007
         ON ACTION controlp INFIELD psdb007
            #add-point:ON ACTION controlp INFIELD psdb007
            {<point name="construct.c.page1.psdb007" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON psdcseq,psdc002,psdc003,psdc004,psdc005,psdc006,psdc007
           FROM s_detail2[1].psdcseq,s_detail2[1].psdc002,s_detail2[1].psdc003,s_detail2[1].psdc004, 
               s_detail2[1].psdc005,s_detail2[1].psdc006,s_detail2[1].psdc007
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD psdcseq
            #add-point:BEFORE FIELD psdcseq
            {<point name="construct.b.page2.psdcseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdcseq
            
            #add-point:AFTER FIELD psdcseq
            {<point name="construct.a.page2.psdcseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.psdcseq
         ON ACTION controlp INFIELD psdcseq
            #add-point:ON ACTION controlp INFIELD psdcseq
            {<point name="construct.c.page2.psdcseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdc002
            #add-point:BEFORE FIELD psdc002
            {<point name="construct.b.page2.psdc002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdc002
            
            #add-point:AFTER FIELD psdc002
            {<point name="construct.a.page2.psdc002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.psdc002
         ON ACTION controlp INFIELD psdc002
            #add-point:ON ACTION controlp INFIELD psdc002
            {<point name="construct.c.page2.psdc002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdc003
            #add-point:BEFORE FIELD psdc003
            {<point name="construct.b.page2.psdc003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdc003
            
            #add-point:AFTER FIELD psdc003
            {<point name="construct.a.page2.psdc003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.psdc003
         ON ACTION controlp INFIELD psdc003
            #add-point:ON ACTION controlp INFIELD psdc003
            {<point name="construct.c.page2.psdc003" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.psdc004
         ON ACTION controlp INFIELD psdc004
            #add-point:ON ACTION controlp INFIELD psdc004
            {<point name="construct.c.page2.psdc004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdc004
            #add-point:BEFORE FIELD psdc004
            {<point name="construct.b.page2.psdc004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdc004
            
            #add-point:AFTER FIELD psdc004
            {<point name="construct.a.page2.psdc004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdc005
            #add-point:BEFORE FIELD psdc005
            {<point name="construct.b.page2.psdc005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdc005
            
            #add-point:AFTER FIELD psdc005
            {<point name="construct.a.page2.psdc005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.psdc005
         ON ACTION controlp INFIELD psdc005
            #add-point:ON ACTION controlp INFIELD psdc005
            {<point name="construct.c.page2.psdc005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdc006
            #add-point:BEFORE FIELD psdc006
            {<point name="construct.b.page2.psdc006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdc006
            
            #add-point:AFTER FIELD psdc006
            {<point name="construct.a.page2.psdc006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.psdc006
         ON ACTION controlp INFIELD psdc006
            #add-point:ON ACTION controlp INFIELD psdc006
            {<point name="construct.c.page2.psdc006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdc007
            #add-point:BEFORE FIELD psdc007
            {<point name="construct.b.page2.psdc007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdc007
            
            #add-point:AFTER FIELD psdc007
            {<point name="construct.a.page2.psdc007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.psdc007
         ON ACTION controlp INFIELD psdc007
            #add-point:ON ACTION controlp INFIELD psdc007
            {<point name="construct.c.page2.psdc007" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="apsi003.default_search" ver="2" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION apsi003_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " psda001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="apsi003.delete" ver="11" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION apsi003_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_psda_m.psda001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE apsi003_master_referesh USING g_psda_m.psda001 INTO g_psda_m.psda001,g_psda_m.psdastus,g_psda_m.psdaownid, 
       g_psda_m.psdaowndp,g_psda_m.psdacrtid,g_psda_m.psdacrtdp,g_psda_m.psdacrtdt,g_psda_m.psdamodid, 
       g_psda_m.psdamoddt,g_psda_m.psdaownid_desc,g_psda_m.psdaowndp_desc,g_psda_m.psdacrtid_desc,g_psda_m.psdacrtdp_desc, 
       g_psda_m.psdamodid_desc
   
   LET g_master_multi_table_t.psdal001 = g_psda_m.psda001
LET g_master_multi_table_t.psdal003 = g_psda_m.psdal003
LET g_master_multi_table_t.psdal004 = g_psda_m.psdal004
 
 
   CALL apsi003_show()
   
   CALL s_transaction_begin()
 
   OPEN apsi003_cl USING g_enterprise, g_site,g_psda_m.psda001
   IF STATUS THEN
      CALL cl_err("OPEN apsi003_cl:", STATUS, 1)
      CLOSE apsi003_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apsi003_master_referesh USING g_psda_m.psda001 INTO g_psda_m.psda001,g_psda_m.psdastus,g_psda_m.psdaownid, 
       g_psda_m.psdaowndp,g_psda_m.psdacrtid,g_psda_m.psdacrtdp,g_psda_m.psdacrtdt,g_psda_m.psdamodid, 
       g_psda_m.psdamoddt,g_psda_m.psdaownid_desc,g_psda_m.psdaowndp_desc,g_psda_m.psdacrtid_desc,g_psda_m.psdacrtdp_desc, 
       g_psda_m.psdamodid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_psda_m.psda001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL apsi003_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_psda001_t = g_psda_m.psda001
 
 
      DELETE FROM psda_t
       WHERE psdaent = g_enterprise AND psdasite = g_site AND psda001 = g_psda_m.psda001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_psda_m.psda001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM psdb_t
       WHERE psdbent = g_enterprise AND psdbsite = g_site AND psdb001 = g_psda_m.psda001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("psdb_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM psdc_t
       WHERE psdcent = g_enterprise AND psdcsite = g_site AND
             psdc001 = g_psda_m.psda001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("psdc_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_psdb_d.clear() 
      CALL g_psdb2_d.clear()       
 
     
      #CALL apsi003_ui_browser_refresh()  
      CALL apsi003_ui_headershow()  
      CALL apsi003_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL apsi003_browser_fill("")
         CALL apsi003_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL apsi003_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.psdal001
   LET l_field_keys[01] = 'psdal001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'psdal002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'psdal_t')
 
      
      #單身多語言刪除
      
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE apsi003_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_psda_m.psda001,'D')
    
END FUNCTION
]]>
</section>
  <section id="apsi003.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION apsi003_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM psdb_t
       WHERE psdbent = g_enterprise AND psdbsite = g_site AND
         psdb001 = ps_keys_bak[1] AND psdbseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM psdc_t
       WHERE psdcent = g_enterprise AND psdcsite = g_site AND
         psdc001 = ps_keys_bak[1] AND psdcseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("psdc_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="apsi003.description" ver="92" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000106
#+ 
#+ Filename...: apsi003
#+ Description: APS供需限制條件設定作業
#+ Creator....: 04543(2014/03/31)
#+ Modifier...: 04543(2014/06/30)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="apsi003.detail_reproduce" ver="2" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION apsi003_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE psdb_t.*
   DEFINE l_detail2    RECORD LIKE psdc_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE apsi003_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE apsi003_detail AS ",
                "SELECT * FROM psdb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apsi003_detail SELECT * FROM psdb_t 
                                         WHERE psdbent = g_enterprise AND psdbsite = g_site AND psdb001 = g_psda001_t
 
   
   #將key修正為調整後   
   UPDATE apsi003_detail 
      #更新key欄位
      SET psdb001 = g_psda_m.psda001
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO psdb_t SELECT * FROM apsi003_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE apsi003_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE apsi003_detail AS ",
      "SELECT * FROM psdc_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apsi003_detail SELECT * FROM psdc_t
                                         WHERE psdcent = g_enterprise AND psdcsite = g_site AND psdc001 = g_psda001_t
 
 
   #將key修正為調整後   
   UPDATE apsi003_detail SET psdc001 = g_psda_m.psda001
 
  
   #將資料塞回原table   
   INSERT INTO psdc_t SELECT * FROM apsi003_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE apsi003_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_psda001_t = g_psda_m.psda001
 
   
   DROP TABLE apsi003_detail
   
END FUNCTION
]]>
</section>
  <section id="apsi003.detail_show" ver="2" status="" src="s">
<![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION apsi003_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="apsi003.fetch" ver="5" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION apsi003_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_psda_m.psda001 = g_browser[g_current_idx].b_psda001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE apsi003_master_referesh USING g_psda_m.psda001 INTO g_psda_m.psda001,g_psda_m.psdastus,g_psda_m.psdaownid, 
       g_psda_m.psdaowndp,g_psda_m.psdacrtid,g_psda_m.psdacrtdp,g_psda_m.psdacrtdt,g_psda_m.psdamodid, 
       g_psda_m.psdamoddt,g_psda_m.psdaownid_desc,g_psda_m.psdaowndp_desc,g_psda_m.psdacrtid_desc,g_psda_m.psdacrtdp_desc, 
       g_psda_m.psdamodid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("psda_t",SQLCA.sqlcode,1)
      INITIALIZE g_psda_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL apsi003_show()
 
   
 
END FUNCTION
]]>
</section>
  <section id="apsi003.fill_chk" ver="3" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION apsi003_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="apsi003.filter" ver="3" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION apsi003_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON psda001
                          FROM s_browse[1].b_psda001
 
         BEFORE CONSTRUCT
               DISPLAY apsi003_filter_parser('psda001') TO s_browse[1].b_psda001
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL apsi003_filter_show('psda001')
 
END FUNCTION
]]>
</section>
  <section id="apsi003.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION apsi003_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="apsi003.filter_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION apsi003_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = apsi003_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="apsi003.global" ver="18" status="" src="s">
<![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_psda_m        RECORD
       psda001 LIKE psda_t.psda001, 
   psdal003 LIKE psdal_t.psdal003, 
   psdal004 LIKE psdal_t.psdal004, 
   psdastus LIKE psda_t.psdastus, 
   psdaownid LIKE psda_t.psdaownid, 
   psdaownid_desc LIKE type_t.chr80, 
   psdaowndp LIKE psda_t.psdaowndp, 
   psdaowndp_desc LIKE type_t.chr80, 
   psdacrtid LIKE psda_t.psdacrtid, 
   psdacrtid_desc LIKE type_t.chr80, 
   psdacrtdp LIKE psda_t.psdacrtdp, 
   psdacrtdp_desc LIKE type_t.chr80, 
   psdacrtdt DATETIME YEAR TO SECOND, 
   psdamodid LIKE psda_t.psdamodid, 
   psdamodid_desc LIKE type_t.chr80, 
   psdamoddt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_psdb_d        RECORD
       psdbseq LIKE psdb_t.psdbseq, 
   psdb002 LIKE psdb_t.psdb002, 
   psdb003 LIKE psdb_t.psdb003, 
   psdb004 LIKE psdb_t.psdb004, 
   psdb004_desc LIKE type_t.chr500, 
   psdb005 LIKE psdb_t.psdb005, 
   psdb006 LIKE psdb_t.psdb006, 
   psdb007 LIKE psdb_t.psdb007
       END RECORD
PRIVATE TYPE type_g_psdb2_d RECORD
       psdcseq LIKE psdc_t.psdcseq, 
   psdc002 LIKE psdc_t.psdc002, 
   psdc003 LIKE psdc_t.psdc003, 
   psdc004 LIKE psdc_t.psdc004, 
   psdc004_desc LIKE type_t.chr500, 
   psdc005 LIKE psdc_t.psdc005, 
   psdc006 LIKE psdc_t.psdc006, 
   psdc007 LIKE psdc_t.psdc007
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_psda_m          type_g_psda_m
DEFINE g_psda_m_t        type_g_psda_m
 
   DEFINE g_psda001_t LIKE psda_t.psda001
 
 
DEFINE g_psdb_d          DYNAMIC ARRAY OF type_g_psdb_d
DEFINE g_psdb_d_t        type_g_psdb_d
DEFINE g_psdb2_d   DYNAMIC ARRAY OF type_g_psdb2_d
DEFINE g_psdb2_d_t type_g_psdb2_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_psda001 LIKE psda_t.psda001,
   b_psda001_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_psda001 LIKE psda_t.psda001,
   b_psda001_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      psdal001 LIKE psdal_t.psdal001,
      psdal003 LIKE psdal_t.psdal003,
      psdal004 LIKE psdal_t.psdal004
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="apsi003.idx_chk" ver="2" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION apsi003_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_psdb_d.getLength() THEN
         LET g_detail_idx = g_psdb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_psdb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_psdb_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_psdb2_d.getLength() THEN
         LET g_detail_idx = g_psdb2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_psdb2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_psdb2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="apsi003.init" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION apsi003_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('psdastus','17','N,Y')
 
      CALL cl_set_combo_scc('psdb002','5428') 
   CALL cl_set_combo_scc('psdb003','5429') 
   CALL cl_set_combo_scc('psdc002','5430') 
   CALL cl_set_combo_scc('psdc003','5431') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL apsi003_default_search()
    
END FUNCTION
]]>
</section>
  <section id="apsi003.input" ver="7" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION apsi003_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT psdbseq,psdb002,psdb003,psdb004,psdb005,psdb006,psdb007 FROM psdb_t WHERE  
       psdbent=? AND psdbsite=? AND psdb001=? AND psdbseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apsi003_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT psdcseq,psdc002,psdc003,psdc004,psdc005,psdc006,psdc007 FROM psdc_t WHERE  
       psdcent=? AND psdcsite=? AND psdc001=? AND psdcseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apsi003_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL apsi003_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL apsi003_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_psda_m.psda001,g_psda_m.psdal003,g_psda_m.psdal004,g_psda_m.psdastus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="apsi003.input.body" ver="12" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_psdb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_psdb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL apsi003_b_fill()
            LET g_rec_b = g_psdb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN apsi003_cl USING g_enterprise, g_site,g_psda_m.psda001
            IF STATUS THEN
               CALL cl_err("OPEN apsi003_cl:", STATUS, 1)
               CLOSE apsi003_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_psdb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_psdb_d[l_ac].psdbseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_psdb_d_t.* = g_psdb_d[l_ac].*  #BACKUP
               CALL apsi003_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL apsi003_set_no_entry_b(l_cmd)
               IF NOT apsi003_lock_b("psdb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apsi003_bcl INTO g_psdb_d[l_ac].psdbseq,g_psdb_d[l_ac].psdb002,g_psdb_d[l_ac].psdb003, 
                      g_psdb_d[l_ac].psdb004,g_psdb_d[l_ac].psdb005,g_psdb_d[l_ac].psdb006,g_psdb_d[l_ac].psdb007 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_psdb_d_t.psdbseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL apsi003_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_psdb_d[l_ac].* TO NULL 
            
            LET g_psdb_d_t.* = g_psdb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apsi003_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL apsi003_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_psdb_d[li_reproduce_target].* = g_psdb_d[li_reproduce].*
 
               LET g_psdb_d[li_reproduce_target].psdbseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM psdb_t 
             WHERE psdbent = g_enterprise AND psdbsite = g_site AND psdb001 = g_psda_m.psda001
 
               AND psdbseq = g_psdb_d[l_ac].psdbseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_psda_m.psda001
               LET gs_keys[2] = g_psdb_d[g_detail_idx].psdbseq
               CALL apsi003_insert_b('psdb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_psdb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("psdb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apsi003_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_psdb_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_psdb_d.deleteElement(l_ac)
               NEXT FIELD psdbseq
            END IF
         
            IF g_psdb_d[l_ac].psdbseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM psdb_t
                WHERE psdbent = g_enterprise AND psdbsite = g_site AND psdb001 = g_psda_m.psda001 AND
 
                      psdbseq = g_psdb_d_t.psdbseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("psdb_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE apsi003_bcl
               LET l_count = g_psdb_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_psda_m.psda001
               LET gs_keys[2] = g_psdb_d[g_detail_idx].psdbseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL apsi003_delete_b('psdb_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD psdbseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_psdb_d[l_ac].psdbseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD psdbseq
            END IF
 
 
            #add-point:AFTER FIELD psdbseq
            {<point name="input.a.page1.psdbseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdbseq
            #add-point:BEFORE FIELD psdbseq
            {<point name="input.b.page1.psdbseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE psdbseq
            #add-point:ON CHANGE psdbseq
            {<point name="input.g.page1.psdbseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdb002
            #add-point:BEFORE FIELD psdb002
            {<point name="input.b.page1.psdb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdb002
            
            #add-point:AFTER FIELD psdb002
            {<point name="input.a.page1.psdb002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psdb002
            #add-point:ON CHANGE psdb002
            {<point name="input.g.page1.psdb002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdb003
            #add-point:BEFORE FIELD psdb003
            {<point name="input.b.page1.psdb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdb003
            
            #add-point:AFTER FIELD psdb003
            {<point name="input.a.page1.psdb003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psdb003
            #add-point:ON CHANGE psdb003
            {<point name="input.g.page1.psdb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdb004
            
            #add-point:AFTER FIELD psdb004
            {<point name="input.a.page1.psdb004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdb004
            #add-point:BEFORE FIELD psdb004
            {<point name="input.b.page1.psdb004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE psdb004
            #add-point:ON CHANGE psdb004
            {<point name="input.g.page1.psdb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdb005
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_psdb_d[l_ac].psdb005,"0","0","","","azz-00079",1) THEN
               NEXT FIELD psdb005
            END IF
 
 
            #add-point:AFTER FIELD psdb005
            {<point name="input.a.page1.psdb005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdb005
            #add-point:BEFORE FIELD psdb005
            {<point name="input.b.page1.psdb005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE psdb005
            #add-point:ON CHANGE psdb005
            {<point name="input.g.page1.psdb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdb006
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_psdb_d[l_ac].psdb006,"0","0","","","azz-00079",1) THEN
               NEXT FIELD psdb006
            END IF
 
 
            #add-point:AFTER FIELD psdb006
            {<point name="input.a.page1.psdb006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdb006
            #add-point:BEFORE FIELD psdb006
            {<point name="input.b.page1.psdb006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE psdb006
            #add-point:ON CHANGE psdb006
            {<point name="input.g.page1.psdb006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdb007
            #add-point:BEFORE FIELD psdb007
            {<point name="input.b.page1.psdb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdb007
            
            #add-point:AFTER FIELD psdb007
            {<point name="input.a.page1.psdb007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psdb007
            #add-point:ON CHANGE psdb007
            {<point name="input.g.page1.psdb007" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.psdbseq
         ON ACTION controlp INFIELD psdbseq
            #add-point:ON ACTION controlp INFIELD psdbseq
            {<point name="input.c.page1.psdbseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.psdb002
         ON ACTION controlp INFIELD psdb002
            #add-point:ON ACTION controlp INFIELD psdb002
            {<point name="input.c.page1.psdb002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.psdb003
         ON ACTION controlp INFIELD psdb003
            #add-point:ON ACTION controlp INFIELD psdb003
            {<point name="input.c.page1.psdb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.psdb004
         ON ACTION controlp INFIELD psdb004
            #add-point:ON ACTION controlp INFIELD psdb004
            {<point name="input.c.page1.psdb004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.psdb005
         ON ACTION controlp INFIELD psdb005
            #add-point:ON ACTION controlp INFIELD psdb005
            {<point name="input.c.page1.psdb005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.psdb006
         ON ACTION controlp INFIELD psdb006
            #add-point:ON ACTION controlp INFIELD psdb006
            {<point name="input.c.page1.psdb006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.psdb007
         ON ACTION controlp INFIELD psdb007
            #add-point:ON ACTION controlp INFIELD psdb007
            {<point name="input.c.page1.psdb007" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_psdb_d[l_ac].* = g_psdb_d_t.*
               CLOSE apsi003_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_psdb_d[l_ac].psdbseq,-263,1)
               LET g_psdb_d[l_ac].* = g_psdb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE psdb_t SET (psdb001,psdbseq,psdb002,psdb003,psdb004,psdb005,psdb006,psdb007) = (g_psda_m.psda001, 
                   g_psdb_d[l_ac].psdbseq,g_psdb_d[l_ac].psdb002,g_psdb_d[l_ac].psdb003,g_psdb_d[l_ac].psdb004, 
                   g_psdb_d[l_ac].psdb005,g_psdb_d[l_ac].psdb006,g_psdb_d[l_ac].psdb007)
                WHERE psdbent = g_enterprise AND psdbsite = g_site AND psdb001 = g_psda_m.psda001 
 
                  AND psdbseq = g_psdb_d_t.psdbseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("psdb_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_psdb_d[l_ac].* = g_psdb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("psdb_t",SQLCA.sqlcode,1)
                     LET g_psdb_d[l_ac].* = g_psdb_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_psda_m.psda001
               LET gs_keys_bak[1] = g_psda001_t
               LET gs_keys[2] = g_psdb_d[g_detail_idx].psdbseq
               LET gs_keys_bak[2] = g_psdb_d_t.psdbseq
               CALL apsi003_update_b('psdb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_psda_m),util.JSON.stringify(g_psdb_d_t)
               LET g_log2 = util.JSON.stringify(g_psda_m),util.JSON.stringify(g_psdb_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL apsi003_unlock_b("psdb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_psdb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_psdb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_psdb2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_psdb2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL apsi003_b_fill()
            LET g_rec_b = g_psdb2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_psdb2_d[l_ac].* TO NULL 
            
            LET g_psdb2_d_t.* = g_psdb2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apsi003_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL apsi003_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_psdb2_d[li_reproduce_target].* = g_psdb2_d[li_reproduce].*
 
               LET g_psdb2_d[li_reproduce_target].psdcseq = NULL
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN apsi003_cl USING g_enterprise, g_site,g_psda_m.psda001
            IF STATUS THEN
               CALL cl_err("OPEN apsi003_cl:", STATUS, 1)
               CLOSE apsi003_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_psdb2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_psdb2_d[l_ac].psdcseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_psdb2_d_t.* = g_psdb2_d[l_ac].*  #BACKUP
               CALL apsi003_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL apsi003_set_no_entry_b(l_cmd)
               IF NOT apsi003_lock_b("psdc_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apsi003_bcl2 INTO g_psdb2_d[l_ac].psdcseq,g_psdb2_d[l_ac].psdc002,g_psdb2_d[l_ac].psdc003, 
                      g_psdb2_d[l_ac].psdc004,g_psdb2_d[l_ac].psdc005,g_psdb2_d[l_ac].psdc006,g_psdb2_d[l_ac].psdc007 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL apsi003_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_psdb2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_psdb2_d.deleteElement(l_ac)
               NEXT FIELD psdcseq
            END IF
         
            IF g_psdb2_d[l_ac].psdcseq IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM psdc_t
                WHERE psdcent = g_enterprise AND psdcsite = g_site AND psdc001 = g_psda_m.psda001 AND
                      psdcseq = g_psdb2_d_t.psdcseq
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("psdb_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE apsi003_bcl
               LET l_count = g_psdb_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_psda_m.psda001
               LET gs_keys[2] = g_psdb2_d[g_detail_idx].psdcseq
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL apsi003_delete_b('psdc_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM psdc_t 
             WHERE psdcent = g_enterprise AND psdcsite = g_site AND psdc001 = g_psda_m.psda001
               AND psdcseq = g_psdb2_d[l_ac].psdcseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_psda_m.psda001
               LET gs_keys[2] = g_psdb2_d[g_detail_idx].psdcseq
               CALL apsi003_insert_b('psdc_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_psdb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("psdc_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apsi003_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_psdb2_d[l_ac].* = g_psdb2_d_t.*
               CLOSE apsi003_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_psdb2_d[l_ac].* = g_psdb2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE psdc_t SET (psdc001,psdcseq,psdc002,psdc003,psdc004,psdc005,psdc006,psdc007) = (g_psda_m.psda001, 
                   g_psdb2_d[l_ac].psdcseq,g_psdb2_d[l_ac].psdc002,g_psdb2_d[l_ac].psdc003,g_psdb2_d[l_ac].psdc004, 
                   g_psdb2_d[l_ac].psdc005,g_psdb2_d[l_ac].psdc006,g_psdb2_d[l_ac].psdc007) #自訂欄位頁簽 

                WHERE psdcent = g_enterprise AND psdcsite = g_site AND psdc001 = g_psda_m.psda001
                  AND psdcseq = g_psdb2_d_t.psdcseq #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("psdc_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_psdb2_d[l_ac].* = g_psdb2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("psdc_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_psdb2_d[l_ac].* = g_psdb2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_psda_m.psda001
               LET gs_keys_bak[1] = g_psda001_t
               LET gs_keys[2] = g_psdb2_d[g_detail_idx].psdcseq
               LET gs_keys_bak[2] = g_psdb2_d_t.psdcseq
               CALL apsi003_update_b('psdc_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_psda_m),util.JSON.stringify(g_psdb2_d_t)
               LET g_log2 = util.JSON.stringify(g_psda_m),util.JSON.stringify(g_psdb2_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a02產生
         AFTER FIELD psdcseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_psdb2_d[l_ac].psdcseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD psdcseq
            END IF
 
 
            #add-point:AFTER FIELD psdcseq
            {<point name="input.a.page2.psdcseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdcseq
            #add-point:BEFORE FIELD psdcseq
            {<point name="input.b.page2.psdcseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE psdcseq
            #add-point:ON CHANGE psdcseq
            {<point name="input.g.page2.psdcseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdc002
            #add-point:BEFORE FIELD psdc002
            {<point name="input.b.page2.psdc002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdc002
            
            #add-point:AFTER FIELD psdc002
            {<point name="input.a.page2.psdc002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psdc002
            #add-point:ON CHANGE psdc002
            {<point name="input.g.page2.psdc002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdc003
            #add-point:BEFORE FIELD psdc003
            {<point name="input.b.page2.psdc003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdc003
            
            #add-point:AFTER FIELD psdc003
            {<point name="input.a.page2.psdc003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psdc003
            #add-point:ON CHANGE psdc003
            {<point name="input.g.page2.psdc003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdc004
            
            #add-point:AFTER FIELD psdc004
            {<point name="input.a.page2.psdc004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdc004
            #add-point:BEFORE FIELD psdc004
            {<point name="input.b.page2.psdc004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE psdc004
            #add-point:ON CHANGE psdc004
            {<point name="input.g.page2.psdc004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdc005
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_psdb2_d[l_ac].psdc005,"0","0","","","azz-00079",1) THEN
               NEXT FIELD psdc005
            END IF
 
 
            #add-point:AFTER FIELD psdc005
            {<point name="input.a.page2.psdc005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdc005
            #add-point:BEFORE FIELD psdc005
            {<point name="input.b.page2.psdc005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE psdc005
            #add-point:ON CHANGE psdc005
            {<point name="input.g.page2.psdc005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdc006
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_psdb2_d[l_ac].psdc006,"0","0","","","azz-00079",1) THEN
               NEXT FIELD psdc006
            END IF
 
 
            #add-point:AFTER FIELD psdc006
            {<point name="input.a.page2.psdc006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdc006
            #add-point:BEFORE FIELD psdc006
            {<point name="input.b.page2.psdc006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE psdc006
            #add-point:ON CHANGE psdc006
            {<point name="input.g.page2.psdc006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdc007
            #add-point:BEFORE FIELD psdc007
            {<point name="input.b.page2.psdc007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdc007
            
            #add-point:AFTER FIELD psdc007
            {<point name="input.a.page2.psdc007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psdc007
            #add-point:ON CHANGE psdc007
            {<point name="input.g.page2.psdc007" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.psdcseq
         ON ACTION controlp INFIELD psdcseq
            #add-point:ON ACTION controlp INFIELD psdcseq
            {<point name="input.c.page2.psdcseq" />}
            #END add-point
 
         #Ctrlp:input.c.page2.psdc002
         ON ACTION controlp INFIELD psdc002
            #add-point:ON ACTION controlp INFIELD psdc002
            {<point name="input.c.page2.psdc002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.psdc003
         ON ACTION controlp INFIELD psdc003
            #add-point:ON ACTION controlp INFIELD psdc003
            {<point name="input.c.page2.psdc003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.psdc004
         ON ACTION controlp INFIELD psdc004
            #add-point:ON ACTION controlp INFIELD psdc004
            {<point name="input.c.page2.psdc004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.psdc005
         ON ACTION controlp INFIELD psdc005
            #add-point:ON ACTION controlp INFIELD psdc005
            {<point name="input.c.page2.psdc005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.psdc006
         ON ACTION controlp INFIELD psdc006
            #add-point:ON ACTION controlp INFIELD psdc006
            {<point name="input.c.page2.psdc006" />}
            #END add-point
 
         #Ctrlp:input.c.page2.psdc007
         ON ACTION controlp INFIELD psdc007
            #add-point:ON ACTION controlp INFIELD psdc007
            {<point name="input.c.page2.psdc007" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_psdb2_d[l_ac].* = g_psdb2_d_t.*
               END IF
               CLOSE apsi003_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL apsi003_unlock_b("psdc_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_psdb2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_psdb2_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="apsi003.input.head" ver="10" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_psda_m.psda001,g_psda_m.psdal003,g_psda_m.psdal004,g_psda_m.psdastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.psdal001 = g_psda_m.psda001
LET g_master_multi_table_t.psdal003 = g_psda_m.psdal003
LET g_master_multi_table_t.psdal004 = g_psda_m.psdal004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.psdal001 = ''
LET g_master_multi_table_t.psdal003 = ''
LET g_master_multi_table_t.psdal004 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD psda001
            #add-point:BEFORE FIELD psda001
            {<point name="input.b.psda001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psda001
            
            #add-point:AFTER FIELD psda001
            {<point name="input.a.psda001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psda001
            #add-point:ON CHANGE psda001
            {<point name="input.g.psda001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdal003
            #add-point:BEFORE FIELD psdal003
            {<point name="input.b.psdal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdal003
            
            #add-point:AFTER FIELD psdal003
            {<point name="input.a.psdal003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psdal003
            #add-point:ON CHANGE psdal003
            {<point name="input.g.psdal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdal004
            #add-point:BEFORE FIELD psdal004
            {<point name="input.b.psdal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdal004
            
            #add-point:AFTER FIELD psdal004
            {<point name="input.a.psdal004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psdal004
            #add-point:ON CHANGE psdal004
            {<point name="input.g.psdal004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD psdastus
            #add-point:BEFORE FIELD psdastus
            {<point name="input.b.psdastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD psdastus
            
            #add-point:AFTER FIELD psdastus
            {<point name="input.a.psdastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE psdastus
            #add-point:ON CHANGE psdastus
            {<point name="input.g.psdastus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.psda001
         ON ACTION controlp INFIELD psda001
            #add-point:ON ACTION controlp INFIELD psda001
            {<point name="input.c.psda001" />}
            #END add-point
 
         #Ctrlp:input.c.psdal003
         ON ACTION controlp INFIELD psdal003
            #add-point:ON ACTION controlp INFIELD psdal003
            {<point name="input.c.psdal003" />}
            #END add-point
 
         #Ctrlp:input.c.psdal004
         ON ACTION controlp INFIELD psdal004
            #add-point:ON ACTION controlp INFIELD psdal004
            {<point name="input.c.psdal004" />}
            #END add-point
 
         #Ctrlp:input.c.psdastus
         ON ACTION controlp INFIELD psdastus
            #add-point:ON ACTION controlp INFIELD psdastus
            {<point name="input.c.psdastus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_psda_m.psda001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO psda_t (psdaent, psdasite,psda001,psdastus,psdaownid,psdaowndp,psdacrtid, 
                   psdacrtdp,psdacrtdt)
               VALUES (g_enterprise, g_site,g_psda_m.psda001,g_psda_m.psdastus,g_psda_m.psdaownid,g_psda_m.psdaowndp, 
                   g_psda_m.psdacrtid,g_psda_m.psdacrtdp,g_psda_m.psdacrtdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_psda_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_psda_m.psda001 = g_master_multi_table_t.psdal001 AND
         g_psda_m.psdal003 = g_master_multi_table_t.psdal003 AND 
         g_psda_m.psdal004 = g_master_multi_table_t.psdal004  THEN
         ELSE 
            LET l_var_keys[01] = g_psda_m.psda001
            LET l_field_keys[01] = 'psdal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.psdal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'psdal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_psda_m.psdal003
            LET l_fields[01] = 'psdal003'
            LET l_vars[02] = g_psda_m.psdal004
            LET l_fields[02] = 'psdal004'
            LET l_vars[03] = g_site 
            LET l_fields[03] = 'psdalsite'
            LET l_vars[04] = g_enterprise 
            LET l_fields[04] = 'psdalent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'psdal_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL apsi003_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE psda_t SET (psda001,psdastus,psdaownid,psdaowndp,psdacrtid,psdacrtdp,psdacrtdt) = (g_psda_m.psda001, 
                   g_psda_m.psdastus,g_psda_m.psdaownid,g_psda_m.psdaowndp,g_psda_m.psdacrtid,g_psda_m.psdacrtdp, 
                   g_psda_m.psdacrtdt)
                WHERE psdaent = g_enterprise AND psdasite = g_site AND psda001 = g_psda001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("psda_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_psda_m.psda001 = g_master_multi_table_t.psdal001 AND
         g_psda_m.psdal003 = g_master_multi_table_t.psdal003 AND 
         g_psda_m.psdal004 = g_master_multi_table_t.psdal004  THEN
         ELSE 
            LET l_var_keys[01] = g_psda_m.psda001
            LET l_field_keys[01] = 'psdal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.psdal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'psdal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_psda_m.psdal003
            LET l_fields[01] = 'psdal003'
            LET l_vars[02] = g_psda_m.psdal004
            LET l_fields[02] = 'psdal004'
            LET l_vars[03] = g_site 
            LET l_fields[03] = 'psdalsite'
            LET l_vars[04] = g_enterprise 
            LET l_fields[04] = 'psdalent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'psdal_t')
         END IF 
 
               
               LET g_log1 = util.JSON.stringify(g_psda_m_t)
               LET g_log2 = util.JSON.stringify(g_psda_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_psda001_t = g_psda_m.psda001
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="apsi003.input.other" ver="3" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD psda001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD psdbseq
               WHEN "s_detail2"
                  NEXT FIELD psdcseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="apsi003.insert" ver="4" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION apsi003_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_psdb_d.clear()   
   CALL g_psdb2_d.clear()  
 
 
   INITIALIZE g_psda_m.* LIKE psda_t.*             #DEFAULT 設定
   
   LET g_psda001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_psda_m.psdaownid = g_user
      LET g_psda_m.psdaowndp = g_dept
      LET g_psda_m.psdacrtid = g_user
      LET g_psda_m.psdacrtdp = g_dept 
      LET g_psda_m.psdacrtdt = cl_get_current()
      LET g_psda_m.psdamodid = ""
      LET g_psda_m.psdamoddt = ""
      LET g_psda_m.psdastus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL apsi003_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_psda_m.* = g_psda_m_t.*
         CALL apsi003_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_psdb_d.clear()
      CALL g_psdb2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_psda001_t = g_psda_m.psda001
 
   
   LET g_wc = g_wc,  
              " OR ( psdaent = '" ||g_enterprise|| "' AND psdasite = '" ||g_site|| "' AND",
              " psda001 = '", g_psda_m.psda001 CLIPPED, "' "
 
              , ") "
   
   CLOSE apsi003_cl
   
END FUNCTION
]]>
</section>
  <section id="apsi003.insert_b" ver="2" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION apsi003_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO psdb_t
                  (psdbent, psdbsite,
                   psdb001,
                   psdbseq
                   ,psdb002,psdb003,psdb004,psdb005,psdb006,psdb007) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2]
                   ,g_psdb_d[g_detail_idx].psdb002,g_psdb_d[g_detail_idx].psdb003,g_psdb_d[g_detail_idx].psdb004, 
                       g_psdb_d[g_detail_idx].psdb005,g_psdb_d[g_detail_idx].psdb006,g_psdb_d[g_detail_idx].psdb007) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("psdb_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO psdc_t
                  (psdcent, psdcsite,
                   psdc001,
                   psdcseq
                   ,psdc002,psdc003,psdc004,psdc005,psdc006,psdc007) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2]
                   ,g_psdb2_d[g_detail_idx].psdc002,g_psdb2_d[g_detail_idx].psdc003,g_psdb2_d[g_detail_idx].psdc004, 
                       g_psdb2_d[g_detail_idx].psdc005,g_psdb2_d[g_detail_idx].psdc006,g_psdb2_d[g_detail_idx].psdc007) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("psdc_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="apsi003.lock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION apsi003_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL apsi003_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "psdb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN apsi003_bcl USING g_enterprise, g_site,
                                       g_psda_m.psda001,g_psdb_d[g_detail_idx].psdbseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("apsi003_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "psdc_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN apsi003_bcl2 USING g_enterprise, g_site,
                                             g_psda_m.psda001,g_psdb2_d[g_detail_idx].psdcseq
      IF SQLCA.sqlcode THEN
         CALL cl_err("apsi003_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="apsi003.main" ver="7" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aps","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT psda001,'','',psdastus,psdaownid,'',psdaowndp,'',psdacrtid,'',psdacrtdp, 
       '',psdacrtdt,psdamodid,'',psdamoddt", 
                      " FROM psda_t",
                      " WHERE psdaent= ? AND psdasite= ? AND psda001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apsi003_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE psda001,psdastus,psdaownid,psdaowndp,psdacrtid,psdacrtdp,psdacrtdt,psdamodid, 
       psdamoddt,t1.oofa011 ,t2.ooefl003 ,t3.oofa011 ,t4.ooefl003 ,t5.oofa011",
               " FROM psda_t",
                              " LEFT JOIN oofa_t t1 ON t1.oofaent='"||g_enterprise||"' AND t1.oofa002='2' AND t1.oofa003=psdaownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=psdaowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=psdacrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=psdacrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t5 ON t5.oofaent='"||g_enterprise||"' AND t5.oofa002='2' AND t5.oofa003=psdamodid  ",
 
               " WHERE psdaent = '" ||g_enterprise|| "' AND psdasite = '" ||g_site|| "' AND psda001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE apsi003_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apsi003 WITH FORM cl_ap_formpath("aps",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apsi003_init()   
 
      #進入選單 Menu (="N")
      CALL apsi003_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_apsi003
      
   END IF 
   
   CLOSE apsi003_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="apsi003.modify" ver="8" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION apsi003_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_psda_m.psda001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE apsi003_master_referesh USING g_psda_m.psda001 INTO g_psda_m.psda001,g_psda_m.psdastus,g_psda_m.psdaownid, 
       g_psda_m.psdaowndp,g_psda_m.psdacrtid,g_psda_m.psdacrtdp,g_psda_m.psdacrtdt,g_psda_m.psdamodid, 
       g_psda_m.psdamoddt,g_psda_m.psdaownid_desc,g_psda_m.psdaowndp_desc,g_psda_m.psdacrtid_desc,g_psda_m.psdacrtdp_desc, 
       g_psda_m.psdamodid_desc
 
   ERROR ""
  
   LET g_psda001_t = g_psda_m.psda001
 
   CALL s_transaction_begin()
   
   OPEN apsi003_cl USING g_enterprise, g_site,g_psda_m.psda001
   IF STATUS THEN
      CALL cl_err("OPEN apsi003_cl:", STATUS, 1)
      CLOSE apsi003_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apsi003_master_referesh USING g_psda_m.psda001 INTO g_psda_m.psda001,g_psda_m.psdastus,g_psda_m.psdaownid, 
       g_psda_m.psdaowndp,g_psda_m.psdacrtid,g_psda_m.psdacrtdp,g_psda_m.psdacrtdt,g_psda_m.psdamodid, 
       g_psda_m.psdamoddt,g_psda_m.psdaownid_desc,g_psda_m.psdaowndp_desc,g_psda_m.psdacrtid_desc,g_psda_m.psdacrtdp_desc, 
       g_psda_m.psdamodid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_psda_m.psda001,SQLCA.sqlcode,0)
      CLOSE apsi003_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL apsi003_show()
   WHILE TRUE
      LET g_psda001_t = g_psda_m.psda001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_psda_m.psdamodid = g_user 
LET g_psda_m.psdamoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL apsi003_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_psda_m.* = g_psda_m_t.*
         CALL apsi003_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE psda_t SET (psdamodid,psdamoddt) = (g_psda_m.psdamodid,g_psda_m.psdamoddt)
       WHERE psdaent = g_enterprise AND psdasite = g_site AND psda001 = g_psda001_t
 
                  
      #若單頭key欄位有變更
      IF g_psda_m.psda001 != g_psda001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE psdb_t SET psdb001 = g_psda_m.psda001
 
          WHERE psdbent = g_enterprise AND psdbsite = g_site AND psdb001 = g_psda001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("psdb_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("psdb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE psdc_t
            SET psdc001 = g_psda_m.psda001
 
          WHERE psdcent = g_enterprise AND psdcsite = g_site AND
                psdc001 = g_psda001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("psdc_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("psdc_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_psda_m.psda001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE apsi003_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_psda_m.psda001,'U')
 
END FUNCTION   
]]>
</section>
  <section id="apsi003.other_dialog" ver="2" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="apsi003.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="apsi003.query" ver="3" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION apsi003_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_psdb_d.clear()
   CALL g_psdb2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL apsi003_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL apsi003_browser_fill("")
      CALL apsi003_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL apsi003_filter_show('psda001')
   CALL apsi003_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL apsi003_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="apsi003.reproduce" ver="3" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION apsi003_reproduce()
   DEFINE l_newno     LIKE psda_t.psda001 
   DEFINE l_oldno     LIKE psda_t.psda001 
 
   DEFINE l_master    RECORD LIKE psda_t.*
   DEFINE l_detail    RECORD LIKE psdb_t.*
   DEFINE l_detail2    RECORD LIKE psdc_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_psda_m.psda001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_psda001_t = g_psda_m.psda001
 
    
   LET g_psda_m.psda001 = ""
 
    
   CALL apsi003_set_entry('a')
   CALL apsi003_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_psda_m.psdaownid = g_user
      LET g_psda_m.psdaowndp = g_dept
      LET g_psda_m.psdacrtid = g_user
      LET g_psda_m.psdacrtdp = g_dept 
      LET g_psda_m.psdacrtdt = cl_get_current()
      LET g_psda_m.psdamodid = ""
      LET g_psda_m.psdamoddt = ""
      LET g_psda_m.psdastus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL apsi003_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " psda001 = '", g_psda_m.psda001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="apsi003.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION apsi003_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("psda001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="apsi003.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION apsi003_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="apsi003.set_no_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION apsi003_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("psda001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="apsi003.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION apsi003_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="apsi003.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION apsi003_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_psda_m.psda001
   LET g_pk_array[1].column = 'psda001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="apsi003.show" ver="7" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION apsi003_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_psda_m_t.* = g_psda_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL apsi003_b_fill() #單身填充
      CALL apsi003_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_psda_m.psdaownid_desc = cl_get_username(g_psda_m.psdaownid)
      #LET g_psda_m.psdaowndp_desc = cl_get_deptname(g_psda_m.psdaowndp)
      #LET g_psda_m.psdacrtid_desc = cl_get_username(g_psda_m.psdacrtid)
      #LET g_psda_m.psdacrtdp_desc = cl_get_deptname(g_psda_m.psdacrtdp)
      #LET g_psda_m.psdamodid_desc = cl_get_username(g_psda_m.psdamodid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL apsi003_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_psda_m.psda001,g_psda_m.psdal003,g_psda_m.psdal004,g_psda_m.psdastus,g_psda_m.psdaownid, 
       g_psda_m.psdaownid_desc,g_psda_m.psdaowndp,g_psda_m.psdaowndp_desc,g_psda_m.psdacrtid,g_psda_m.psdacrtid_desc, 
       g_psda_m.psdacrtdp,g_psda_m.psdacrtdp_desc,g_psda_m.psdacrtdt,g_psda_m.psdamodid,g_psda_m.psdamodid_desc, 
       g_psda_m.psdamoddt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_psda_m.psdastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_psdb_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_psdb2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL apsi003_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="apsi003.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="apsi003.state_change" ver="2" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION apsi003_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_psda_m.psda001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_psda_m.psdastus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE psda_t SET psdastus = lc_state 
    WHERE psdaent = g_enterprise AND psdasite = g_site AND psda001 = g_psda_m.psda001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
      LET g_psda_m.psdastus = lc_state
      DISPLAY BY NAME g_psda_m.psdastus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="apsi003.ui_browser_refresh" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION apsi003_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_psda001 = g_psda_m.psda001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="apsi003.ui_detailshow" ver="2" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION apsi003_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="apsi003.ui_dialog" ver="19" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION apsi003_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL apsi003_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL apsi003_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_psda001 = g_psda001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL apsi003_fetch('') # reload data
               LET l_ac = 1
               CALL apsi003_ui_detailshow() #Setting the current row 
      
               CALL apsi003_idx_chk()
               #NEXT FIELD psdbseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_psdb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL apsi003_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL apsi003_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_psdb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL apsi003_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL apsi003_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL apsi003_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL apsi003_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL apsi003_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL apsi003_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL apsi003_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL apsi003_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL apsi003_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL apsi003_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL apsi003_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apsi003_idx_chk()
            
         ON ACTION previous
            CALL apsi003_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apsi003_idx_chk()
            
         ON ACTION jump
            CALL apsi003_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apsi003_idx_chk()
            
         ON ACTION next
            CALL apsi003_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apsi003_idx_chk()
            
         ON ACTION last
            CALL apsi003_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apsi003_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD psdbseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL apsi003_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL apsi003_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL apsi003_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL apsi003_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL apsi003_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL apsi003_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL apsi003_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL apsi003_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL apsi003_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="apsi003.ui_headershow" ver="4" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION apsi003_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_psda_m.psda001 = g_browser[g_current_idx].b_psda001   
 
   EXECUTE apsi003_master_referesh USING g_psda_m.psda001 INTO g_psda_m.psda001,g_psda_m.psdastus,g_psda_m.psdaownid, 
       g_psda_m.psdaowndp,g_psda_m.psdacrtid,g_psda_m.psdacrtdp,g_psda_m.psdacrtdt,g_psda_m.psdamodid, 
       g_psda_m.psdamoddt,g_psda_m.psdaownid_desc,g_psda_m.psdaowndp_desc,g_psda_m.psdacrtid_desc,g_psda_m.psdacrtdp_desc, 
       g_psda_m.psdamodid_desc
   CALL apsi003_show()
   
END FUNCTION
]]>
</section>
  <section id="apsi003.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION apsi003_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apsi003_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apsi003_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="apsi003.update_b" ver="2" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION apsi003_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "psdb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE psdb_t 
         SET (psdb001,
              psdbseq
              ,psdb002,psdb003,psdb004,psdb005,psdb006,psdb007) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_psdb_d[g_detail_idx].psdb002,g_psdb_d[g_detail_idx].psdb003,g_psdb_d[g_detail_idx].psdb004, 
                  g_psdb_d[g_detail_idx].psdb005,g_psdb_d[g_detail_idx].psdb006,g_psdb_d[g_detail_idx].psdb007)  

         WHERE psdbent = g_enterprise AND psdbsite = g_site AND psdb001 = ps_keys_bak[1] AND psdbseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("psdb_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("psdb_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "psdc_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE psdc_t 
         SET (psdc001,
              psdcseq
              ,psdc002,psdc003,psdc004,psdc005,psdc006,psdc007) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_psdb2_d[g_detail_idx].psdc002,g_psdb2_d[g_detail_idx].psdc003,g_psdb2_d[g_detail_idx].psdc004, 
                  g_psdb2_d[g_detail_idx].psdc005,g_psdb2_d[g_detail_idx].psdc006,g_psdb2_d[g_detail_idx].psdc007)  

         WHERE psdcent = g_enterprise AND psdcsite = g_site AND psdc001 = ps_keys_bak[1] AND psdcseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("psdc_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("psdc_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>