<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aecr001_g01" std_prog="aecr001_g01" erpver="1.0" module="AEC" ver="3" env="s" zone="t10prd" booking="Y" type="G" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="G" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.aecr001_g01_desc" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aecr001_g01_desc(p_type,p_num,p_target)
   DEFINE p_type    LIKE type_t.chr10
   DEFINE p_num    LIKE type_t.num5
   DEFINE p_target LIKE type_t.chr10
   DEFINE r_desc   LIKE type_t.chr500
  
   CASE p_type
      WHEN '1'
         SELECT gzcbl004 INTO r_desc
           FROM gzcbl_t
          WHERE gzcbl001 = p_num
            AND gzcbl002 = p_target
            AND gzcbl003 = g_dlang
      WHEN '2'            
         SELECT oocql004 INTO r_desc
           FROM oocql_t
          WHERE oocql001 = p_num
            AND oocql002 = p_target
            AND oocql003 = g_dlang
            AND oocqlent = g_enterprise
   END CASE
   
   RETURN r_desc 
END FUNCTION]]>
  </point>
  <point name="report.aecr001_g01_subrep05" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE REPORT aecr001_g01_subrep05(sr3)
DEFINE sr3          sr3_r
DEFINE sr4          sr4_r
DEFINE l_cnt           LIKE type_t.num5
DEFINE l_sub_sql       STRING

DEFINE l_subrep06_show  LIKE type_t.chr1


   ORDER EXTERNAL BY sr3.ecbc004
   FORMAT
           
        ON EVERY ROW

            PRINTX sr3.*
            LET l_subrep06_show = "N"
            LET g_sql = "SELECT UNIQUE ecbd005,ecbd006,ecbd007,ecbd008",
                      " FROM ecbd_t ",
#                      "LEFT OUTER JOIN ecbd_t ON ecbc_t.ecbc001 = ecbd_t.ecbd001 AND ecbc002 = ecbd002 AND ecbc003 = ecbd003 AND ecbc004 = ecbd004
#                                                              AND ecbcent = ecbdent AND ecbcsite = ecbdsite",
                      " WHERE ecbd003 = '",sr3.ecbc003 ," ' AND ecbd001 = '",sr3.ecbc001 ,"' AND ecbdent = '",sr3.ecbcent,"' AND ecbd002 = '",sr3.ecbc002,"' ",
                      " AND ecbd004 = '",sr3.ecbc004,"' AND ecbdsite = '",sr3.ecbcsite,"' "
            LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
            PREPARE aecr001_g01_repcur06_cnt_pre FROM l_sub_sql
            EXECUTE aecr001_g01_repcur06_cnt_pre INTO l_cnt
            IF l_cnt > 0 AND tm.print = 'Y'THEN 
               LET l_subrep06_show ="Y"
            ELSE 
               LET l_subrep06_show = "N"
            END IF
            PRINTX l_subrep06_show
            START REPORT aecr001_g01_subrep06

            DECLARE aecr001_g01_repcur06 CURSOR FROM g_sql
            FOREACH aecr001_g01_repcur06 INTO sr4.*
             
               OUTPUT TO REPORT aecr001_g01_subrep06(sr4.*)
   
            END FOREACH
            FINISH REPORT aecr001_g01_subrep06
            
END REPORT]]>
  </point>
  <point name="report.aecr001_g01_subrep06" order="2" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE REPORT aecr001_g01_subrep06(sr4)
DEFINE sr4          sr4_r
   FORMAT
        FIRST PAGE HEADER
            PRINTX g_grNumFmt.*
        
        ON EVERY ROW

            PRINTX sr4.*
END REPORT]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[ TYPE sr3_r RECORD
   ecbc004 LIKE ecbc_t.ecbc004,
   imaal_t_imaal003 LIKE imaal_t.imaal003,
   imaal_t_imaal004 LIKE imaal_t.imaal004,
   ecbc005 LIKE ecbc_t.ecbc005,
   ecbc006 LIKE ecbc_t.ecbc006,
   l_ecbc007_ecbc008 LIKE type_t.chr30,
   ecbc009 LIKE ecbc_t.ecbc009,
   ecbc010 LIKE ecbc_t.ecbc010,
   l_ecbc010_desc    LIKE type_t.chr30,
   ecbc003 LIKE ecbc_t.ecbc003,
   ecbcent LIKE ecbc_t.ecbcent,
   ecbcsite    LIKE ecbc_t.ecbcsite,
   ecbc001  LIKE ecbc_t.ecbc001,
   ecbc002  LIKE ecbc_t.ecbc002
END RECORD
 TYPE sr4_r RECORD
   ecbd005 LIKE ecbd_t.ecbd005,
   ecbd006 LIKE ecbd_t.ecbd006,
   ecbd007 LIKE ecbd_t.ecbd007,
   ecbd008 LIKE ecbd_t.ecbd008
END RECORD]]>
  </point>
  <point name="ins_data.foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[       IF NOT cl_null(sr_s.ecbb004) THEN
         CALL aecr001_g01_desc('2','221',sr_s.ecbb004) RETURNING sr_s.l_ecbb004_ecbb005
         IF NOT cl_null(sr_s.l_ecbb004_ecbb005) THEN
            LET sr_s.l_ecbb004_ecbb005 = sr_s.ecbb004 ,":",sr_s.l_ecbb004_ecbb005
         ELSE 
            LET sr_s.l_ecbb004_ecbb005 = sr_s.ecbb004
         END IF
         IF NOT cl_null(sr_s.ecbb005) THEN
            LET sr_s.l_ecbb004_ecbb005 = sr_s.l_ecbb004_ecbb005 ,"/",sr_s.ecbb005
         END IF
       END IF
       IF NOT cl_null(sr_s.ecbb004) THEN
         CALL aecr001_g01_desc('2','221',sr_s.ecbb008) RETURNING sr_s.l_ecbb008_ecbb009
         IF NOT cl_null(sr_s.l_ecbb008_ecbb009) THEN
            LET sr_s.l_ecbb008_ecbb009 = sr_s.ecbb008 ,":",sr_s.l_ecbb008_ecbb009
         ELSE
            LET sr_s.l_ecbb008_ecbb009 = sr_s.ecbb008 
         END IF
         IF NOT cl_null(sr_s.ecbb009) THEN
            LET sr_s.l_ecbb008_ecbb009 = sr_s.l_ecbb008_ecbb009 ,"/",sr_s.ecbb009
         END IF
       END IF
       IF NOT cl_null(sr_s.ecbb010) THEN
         CALL aecr001_g01_desc('2','221',sr_s.ecbb010) RETURNING sr_s.l_ecbb010_ecbb011
         IF NOT cl_null(sr_s.l_ecbb010_ecbb011) THEN
            LET sr_s.l_ecbb010_ecbb011 = sr_s.ecbb010 ,":",sr_s.l_ecbb010_ecbb011
         ELSE
            LET sr_s.l_ecbb010_ecbb011 = sr_s.ecbb010 
         END IF
         IF NOT cl_null(sr_s.ecbb011) THEN
            LET sr_s.l_ecbb010_ecbb011 = sr_s.l_ecbb010_ecbb011 ,"/",sr_s.ecbb011
         END IF
       END IF
       IF NOT cl_null(sr_s.ecbb014) THEN
         LET sr_s.l_ecbb014_desc = sr_s.ecbb014,".",sr_s.l_ecbb014_desc
       END IF
       IF sr_s.l_ecbb012_desc = ':' THEN
         LET sr_s.l_ecbb012_desc = sr_s.ecbb012
       END IF
       
       ]]>
  </point>
  <point name="rep.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE l_pr             LIKE type_t.chr1
DEFINE sr3 sr3_r
DEFINE l_subrep05_show  LIKE type_t.chr1
DEFINE sr4 sr4_r
DEFINE l_subrep06_show  LIKE type_t.chr1]]>
  </point>
  <point name="rep.everyrow.afterrow" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#          LET l_pr = tm.print
          LET l_subrep05_show = "N"
          LET g_sql = "SELECT UNIQUE ecbc004,imaal003,imaal004,ecbc005,ecbc006,(trim(ecbc007)||'/'||trim(ecbc008)),ecbc009,ecbc010,NULL,ecbc003,ecbcent,ecbcsite,ecbc001,ecbc002",
                      " FROM ecbc_t ",
#                      "LEFT OUTER JOIN ecbd_t ON ecbc_t.ecbc001 = ecbd_t.ecbd001 AND ecbc002 = ecbd002 AND ecbc003 = ecbd003 AND ecbc004 = ecbd004
#                                                              AND ecbcent = ecbdent AND ecbcsite = ecbdsite",
                      "             LEFT OUTER JOIN imaal_t ON ecbc005 = imaal001 AND ecbcent = imaalent AND imaal002 = '",g_dlang,"' " ,                                                             
                      " WHERE ecbc003 = '",sr1.ecbb003 ," ' AND ecbc001 = '",sr1.ecba001 ,"' AND ecbcent = '",sr1.ecbaent,"' AND ecbc002 = '",sr1.ecba002,"' ",
                      " ORDER BY ecbc004 "
          LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
          PREPARE aecr001_g01_repcur05_cnt_pre FROM l_sub_sql
          EXECUTE aecr001_g01_repcur05_cnt_pre INTO l_cnt
          IF l_cnt > 0 AND tm.print = 'Y'THEN 
            LET l_subrep05_show ="Y"
          ELSE 
            LET l_subrep05_show = "N"
          END IF
          PRINTX l_subrep05_show
          START REPORT aecr001_g01_subrep05
#          LET g_sql = "SELECT UNIQUE ecbc004,ecbc005,ecbc006,(trim(ecbc007)||'/'||trim(ecbc008)),ecbc009,ecbc010,ecbd005,ecbd006
#                       ecbd007,ecbd008",
#                      " FROM ecbc_t LEFT OUTER JOIN ecbd_t ON ecbc_t.ecbc001 = ecbd_t.ecbd001 AND ecbc002 = ecbd002 AND ecbc003 = ecbd003 AND ecbc004 = ecbd004
#                                                              AND ecbcent = ecbdent AND ecbcsite = ecbdsite",
#                      " WHERE ecbc003 = '",sr1.ecbb003 ," ' AND ecbc001 = '",sr1.ecba001 ,"' AND ecbcent = '",sr1.ecbaent,"' AND ecbc002 = '",sr1.ecba002,"' ",
#                      " ORDER BY ecbc004 "
          DECLARE aecr001_g01_repcur05 CURSOR FROM g_sql
          FOREACH aecr001_g01_repcur05 INTO sr3.*
             IF NOT cl_null(sr3.ecbc010) THEN
               CALL aecr001_g01_desc('1','1108',sr3.ecbc010) RETURNING sr3.l_ecbc010_desc
               LET sr3.l_ecbc010_desc = sr3.ecbc010,".",sr3.l_ecbc010_desc
             END IF
 

             
            OUTPUT TO REPORT aecr001_g01_subrep05(sr3.*)

          END FOREACH
          FINISH REPORT aecr001_g01_subrep05
          


#          LET tm.print = l_pr]]>
  </point>
  <point name="rep.order.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="sel_prep.g_from" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="Y">
    <![CDATA[   LET g_from = " FROM ecba_t LEFT OUTER JOIN ecbb_t ON ecba_t.ecba001 = ecbb_t.ecbb001 AND ecbb002 = ecba002 AND ecbbent = ecbaent AND ecbbsite = ecbasite
                              LEFT OUTER JOIN ecbc_t ON ecba_t.ecba001 = ecbc_t.ecbc001 AND ecba002 = ecbc002 AND ecbb003 = ecbc003 AND ecbaent = ecbcent AND ecbasite = ecbcsite
                              LEFT OUTER JOIN ecbd_t ON ecba_t.ecba001 = ecbd_t.ecbd001 AND ecba002 = ecbd002 AND ecbc003 = ecbd003 AND ecbc004 = ecbd004 AND ecbaent = ecbdent AND ecbasite = ecbdsite
                              LEFT OUTER JOIN ecaa_t ON ecbb012 = ecaa001 AND ecbbent = ecaaent AND ecbbsite = ecaasite
                              LEFT OUTER JOIN imaa_t ON ecba_t.ecba001 = imaa_t.imaa001 AND ecbaent = imaaent
                              LEFT OUTER JOIN pmaal_t ON ecbb_t.ecbb014 = pmaal_t.pmaal001 AND ecbbent = pmaalent AND pmaal002 = '",g_dlang,"' 
                              LEFT OUTER JOIN imaal_t ON ecba_t.ecba001 = imaal_t.imaal001 AND ecbaent = imaalent AND imaal002 = '",g_dlang,"' "]]>
  </point>
  <point name="sel_prep.g_order" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="Y">
    <![CDATA[    LET g_order = " ORDER BY ecba001,ecba002,ecbb003"
]]>
  </point>
  <point name="sel_prep.g_select" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="Y">
    <![CDATA[   LET g_select = " SELECT UNIQUE ecba001,ecba002,ecba003,ecbb003,NULL,NULL,NULL, ecbb012,ecbb030,(trim(ecbb031)||'/'||trim(ecbb032)),ecbb021,
      (trim(ecbb022)||'/'||trim(ecbb023)), ecbb024,ecbb025,ecbb026,ecbb027,ecbb013,ecbb015,ecbb016,ecbb017,
      ecbb018,ecbb019,ecbb020,ecbb014,ecbaent,ecbb004,ecbb005,ecbb008,ecbb009,ecbb010,ecbb011,pmaal_t.pmaal004,imaa_t.imaa005,imaal_t.imaal003,imaal_t.imaal004,(trim(ecba_t.ecba001)||'.'||trim(ecba_t.ecba002)),(trim(ecbb_t.ecbb012)||':'||trim(ecaa_t.ecaa002)),ecbasite "
 ]]>
  </point>
  <section id="aecr001_g01.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000053
#+ 
#+ Filename...: aecr001_g01
#+ Description: 製程資料表
#+ Creator....: 05423(2014-08-07 11:16:27)
#+ Modifier...: 05423(2015-05-05 10:32:22) -SD/PR-
]]>
  </section>
  <section id="aecr001_g01.global" ver="7" status="" src="s" readonly="">
    <![CDATA[#報表 g01 樣板自動產生(Version:1)
 
IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
PRIVATE TYPE sr1_r RECORD
   ecba001 LIKE ecba_t.ecba001, 
   ecba002 LIKE ecba_t.ecba002, 
   ecba003 LIKE ecba_t.ecba003, 
   ecbb003 LIKE ecbb_t.ecbb003, 
   l_ecbb004_ecbb005 LIKE type_t.chr30, 
   l_ecbb008_ecbb009 LIKE type_t.chr30, 
   l_ecbb010_ecbb011 LIKE type_t.chr30, 
   ecbb012 LIKE ecbb_t.ecbb012, 
   ecbb030 LIKE ecbb_t.ecbb030, 
   l_ecbb031_ecbb032 LIKE type_t.chr30, 
   ecbb021 LIKE ecbb_t.ecbb021, 
   l_ecbb022_ecbb023 LIKE type_t.chr30, 
   ecbb024 LIKE ecbb_t.ecbb024, 
   ecbb025 LIKE ecbb_t.ecbb025, 
   ecbb026 LIKE ecbb_t.ecbb026, 
   ecbb027 LIKE ecbb_t.ecbb027, 
   ecbb013 LIKE ecbb_t.ecbb013, 
   ecbb015 LIKE ecbb_t.ecbb015, 
   ecbb016 LIKE ecbb_t.ecbb016, 
   ecbb017 LIKE ecbb_t.ecbb017, 
   ecbb018 LIKE ecbb_t.ecbb018, 
   ecbb019 LIKE ecbb_t.ecbb019, 
   ecbb020 LIKE ecbb_t.ecbb020, 
   ecbb014 LIKE ecbb_t.ecbb014, 
   ecbaent LIKE ecba_t.ecbaent, 
   ecbb004 LIKE ecbb_t.ecbb004, 
   ecbb005 LIKE ecbb_t.ecbb005, 
   ecbb008 LIKE ecbb_t.ecbb008, 
   ecbb009 LIKE ecbb_t.ecbb009, 
   ecbb010 LIKE ecbb_t.ecbb010, 
   ecbb011 LIKE ecbb_t.ecbb011, 
   l_ecbb014_desc LIKE type_t.chr30, 
   l_imaa005_desc LIKE type_t.chr30, 
   l_imaal003 LIKE type_t.chr30, 
   l_imaal004 LIKE type_t.chr30, 
   l_order LIKE type_t.chr50, 
   l_ecbb012_desc LIKE type_t.chr80, 
   ecbasite LIKE ecba_t.ecbasite
END RECORD
 
PRIVATE TYPE sr2_r RECORD
   ooff013 LIKE ooff_t.ooff013
END RECORD
 
 
DEFINE tm RECORD
       wc STRING,                  #where condition 
       print STRING                   #print subrep
       END RECORD
DEFINE sr DYNAMIC ARRAY OF sr1_r                   #宣告sr為sr1_t資料結構的動態陣列
DEFINE g_select        STRING
DEFINE g_from          STRING
DEFINE g_where         STRING
DEFINE g_order         STRING
DEFINE g_sql           STRING                         #report_select_prep,REPORT段使用
 
#add-point:自定義環境變數(Global Variable)
{<point name="global.variable"/>}
#end add-point
]]>
  </section>
  <section id="aecr001_g01.ins_data" ver="6" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aecr001_g01_ins_data()
#主報表record(用於select子句)
   DEFINE sr_s RECORD 
   ecba001 LIKE ecba_t.ecba001, 
   ecba002 LIKE ecba_t.ecba002, 
   ecba003 LIKE ecba_t.ecba003, 
   ecbb003 LIKE ecbb_t.ecbb003, 
   l_ecbb004_ecbb005 LIKE type_t.chr30, 
   l_ecbb008_ecbb009 LIKE type_t.chr30, 
   l_ecbb010_ecbb011 LIKE type_t.chr30, 
   ecbb012 LIKE ecbb_t.ecbb012, 
   ecbb030 LIKE ecbb_t.ecbb030, 
   l_ecbb031_ecbb032 LIKE type_t.chr30, 
   ecbb021 LIKE ecbb_t.ecbb021, 
   l_ecbb022_ecbb023 LIKE type_t.chr30, 
   ecbb024 LIKE ecbb_t.ecbb024, 
   ecbb025 LIKE ecbb_t.ecbb025, 
   ecbb026 LIKE ecbb_t.ecbb026, 
   ecbb027 LIKE ecbb_t.ecbb027, 
   ecbb013 LIKE ecbb_t.ecbb013, 
   ecbb015 LIKE ecbb_t.ecbb015, 
   ecbb016 LIKE ecbb_t.ecbb016, 
   ecbb017 LIKE ecbb_t.ecbb017, 
   ecbb018 LIKE ecbb_t.ecbb018, 
   ecbb019 LIKE ecbb_t.ecbb019, 
   ecbb020 LIKE ecbb_t.ecbb020, 
   ecbb014 LIKE ecbb_t.ecbb014, 
   ecbaent LIKE ecba_t.ecbaent, 
   ecbb004 LIKE ecbb_t.ecbb004, 
   ecbb005 LIKE ecbb_t.ecbb005, 
   ecbb008 LIKE ecbb_t.ecbb008, 
   ecbb009 LIKE ecbb_t.ecbb009, 
   ecbb010 LIKE ecbb_t.ecbb010, 
   ecbb011 LIKE ecbb_t.ecbb011, 
   l_ecbb014_desc LIKE type_t.chr30, 
   l_imaa005_desc LIKE type_t.chr30, 
   l_imaal003 LIKE type_t.chr30, 
   l_imaal004 LIKE type_t.chr30, 
   l_order LIKE type_t.chr50, 
   l_ecbb012_desc LIKE type_t.chr80, 
   ecbasite LIKE ecba_t.ecbasite
 END RECORD
   DEFINE l_cnt           INTEGER
#add-point:ins_data段define
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before
    {<point name="ins_data.before"/>}
    #end add-point
 
    CALL sr.clear()                                  #rep sr
    LET l_cnt = 1
    FOREACH aecr001_g01_curs INTO sr_s.*
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()       
          LET g_rep_success = 'N'    
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before_arr
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #set rep array value
       LET sr[l_cnt].ecba001 = sr_s.ecba001
       LET sr[l_cnt].ecba002 = sr_s.ecba002
       LET sr[l_cnt].ecba003 = sr_s.ecba003
       LET sr[l_cnt].ecbb003 = sr_s.ecbb003
       LET sr[l_cnt].l_ecbb004_ecbb005 = sr_s.l_ecbb004_ecbb005
       LET sr[l_cnt].l_ecbb008_ecbb009 = sr_s.l_ecbb008_ecbb009
       LET sr[l_cnt].l_ecbb010_ecbb011 = sr_s.l_ecbb010_ecbb011
       LET sr[l_cnt].ecbb012 = sr_s.ecbb012
       LET sr[l_cnt].ecbb030 = sr_s.ecbb030
       LET sr[l_cnt].l_ecbb031_ecbb032 = sr_s.l_ecbb031_ecbb032
       LET sr[l_cnt].ecbb021 = sr_s.ecbb021
       LET sr[l_cnt].l_ecbb022_ecbb023 = sr_s.l_ecbb022_ecbb023
       LET sr[l_cnt].ecbb024 = sr_s.ecbb024
       LET sr[l_cnt].ecbb025 = sr_s.ecbb025
       LET sr[l_cnt].ecbb026 = sr_s.ecbb026
       LET sr[l_cnt].ecbb027 = sr_s.ecbb027
       LET sr[l_cnt].ecbb013 = sr_s.ecbb013
       LET sr[l_cnt].ecbb015 = sr_s.ecbb015
       LET sr[l_cnt].ecbb016 = sr_s.ecbb016
       LET sr[l_cnt].ecbb017 = sr_s.ecbb017
       LET sr[l_cnt].ecbb018 = sr_s.ecbb018
       LET sr[l_cnt].ecbb019 = sr_s.ecbb019
       LET sr[l_cnt].ecbb020 = sr_s.ecbb020
       LET sr[l_cnt].ecbb014 = sr_s.ecbb014
       LET sr[l_cnt].ecbaent = sr_s.ecbaent
       LET sr[l_cnt].ecbb004 = sr_s.ecbb004
       LET sr[l_cnt].ecbb005 = sr_s.ecbb005
       LET sr[l_cnt].ecbb008 = sr_s.ecbb008
       LET sr[l_cnt].ecbb009 = sr_s.ecbb009
       LET sr[l_cnt].ecbb010 = sr_s.ecbb010
       LET sr[l_cnt].ecbb011 = sr_s.ecbb011
       LET sr[l_cnt].l_ecbb014_desc = sr_s.l_ecbb014_desc
       LET sr[l_cnt].l_imaa005_desc = sr_s.l_imaa005_desc
       LET sr[l_cnt].l_imaal003 = sr_s.l_imaal003
       LET sr[l_cnt].l_imaal004 = sr_s.l_imaal004
       LET sr[l_cnt].l_order = sr_s.l_order
       LET sr[l_cnt].l_ecbb012_desc = sr_s.l_ecbb012_desc
       LET sr[l_cnt].ecbasite = sr_s.ecbasite
 
 
       #add-point:ins_data段after_arr
       {<point name="ins_data.after.save"/>}
       #end add-point
       LET l_cnt = l_cnt + 1
    END FOREACH
    CALL sr.deleteElement(l_cnt)
 
    #add-point:ins_data段after
    {<point name="ins_data.after"/>}
    #end add-point
END FUNCTION
]]>
  </section>
  <section id="aecr001_g01.main" ver="1" status="" src="s" readonly="">
    <![CDATA[PUBLIC FUNCTION aecr001_g01(p_arg1,p_arg2)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 STRING                  #tm.print  print subrep
#add-point:init段define
{<point name="component_name.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.print = p_arg2
 
   #add-point:報表元件參數準備
   {<point name="component.arg.prep" />}
   #end add-point
   #報表元件代號
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'   
   
   LET g_rep_code = "aecr001_g01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #主報表select子句準備
   CALL aecr001_g01_sel_prep()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料存入array
   CALL aecr001_g01_ins_data()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料印出
   CALL aecr001_g01_rep_data()
 
END FUNCTION
]]>
  </section>
  <section id="aecr001_g01.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aecr001_g01.other_report" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.report"/>}
]]>
  </section>
  <section id="aecr001_g01.rep" ver="16" status="" src="s" readonly="">
    <![CDATA[PRIVATE REPORT aecr001_g01_rep(sr1)
DEFINE sr1 sr1_r
DEFINE sr2 sr2_r
DEFINE l_subrep01_show  LIKE type_t.chr1,
       l_subrep02_show  LIKE type_t.chr1,
       l_subrep03_show  LIKE type_t.chr1,
       l_subrep04_show  LIKE type_t.chr1
DEFINE l_cnt           LIKE type_t.num5
DEFINE l_sub_sql       STRING
#add-point:rep段define
{<point name="rep.define"/>}
#end add-point
 
    #add-point:rep段ORDER_before
    {<point name="rep.order.before" mark="Y"/>}
    #end add-point
    ORDER EXTERNAL BY sr1.l_order,sr1.ecbb003
    #add-point:rep段ORDER_after
    {<point name="rep.order.after"/>}
    #end add-point
    
    FORMAT
       FIRST PAGE HEADER          
          PRINTX g_user,g_pdate,g_rep_code,g_company,g_ptime,g_user_name,g_date_fmt
          PRINTX tm.*
          PRINTX g_grNumFmt.*
 
          #讀取beforeGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:1)
        BEFORE GROUP OF sr1.l_order
            #報表 d05 樣板自動產生(Version:5)
            CALL cl_gr_title_clear()  #清除title變數值 
            #add-point:rep.header  #公司資訊(不在公用變數內)
            {<point name="rep.header"  mark="Y"/>}
            #end add-point:rep.header 
            LET g_rep_docno = sr1.l_order
            CALL cl_gr_init_pageheader() #表頭資訊
            PRINTX g_grPageHeader.*
            PRINTX g_grPageFooter.*
            #add-point:rep.apr.signstr.before
            {<point name="rep.apr.signstr.before"  mark="Y"/>}              
            #end add-point:rep.apr.signstr.before   
            LET g_doc_key = 'ecbaent=' ,sr1.ecbaent,'{+}ecbasite=' ,sr1.ecbasite,'{+}ecba001=' ,sr1.ecba001,'{+}ecba002=' ,sr1.ecba002         
            CALL cl_gr_init_apr(sr1.l_order)
            #add-point:rep.apr.signstr
            {<point name="rep.apr.signstr"/>}              
            #end add-point:rep.apr.signstr
            PRINTX g_grSign.*
 
 
 
           #add-point:rep.b_group.l_order.before
           {<point name="rep.b_group.l_order.before"/>}
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub01.before
           {<point name="rep.sub01.before"/>}
           #end add-point:rep.sub01.before
 
           #add-point:rep.sub01.sql
           {<point name="rep.sub01.sql" mark="Y"/>}
           #end add-point:rep.sub01.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='2' AND ooffent = '", 
                sr1.ecbaent CLIPPED ,"'", " AND  ooff002 = '", sr1.l_order CLIPPED ,"'"
 
           #add-point:rep.sub01.afsql
           {<point name="rep.sub01.afsql"/>}
           #end add-point:rep.sub01.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep01_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE aecr001_g01_repcur01_cnt_pre FROM l_sub_sql
           EXECUTE aecr001_g01_repcur01_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep01_show ="Y"
           END IF
           PRINTX l_subrep01_show
           START REPORT aecr001_g01_subrep01
           DECLARE aecr001_g01_repcur01 CURSOR FROM g_sql
           FOREACH aecr001_g01_repcur01 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "aecr001_g01_repcur01:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub01.foreach
              {<point name="rep.sub01.foreach"/>}
              #end add-point:rep.sub01.foreach
              OUTPUT TO REPORT aecr001_g01_subrep01(sr2.*)
           END FOREACH
           FINISH REPORT aecr001_g01_subrep01
           #add-point:rep.sub01.after
           {<point name="rep.sub01.after"/>}
           #end add-point:rep.sub01.after
 
 
 
           #add-point:rep.b_group.l_order.after
           {<point name="rep.b_group.l_order.after"/>}
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:1)
        BEFORE GROUP OF sr1.ecbb003
 
           #add-point:rep.b_group.ecbb003.before
           {<point name="rep.b_group.ecbb003.before"/>}
           #end add-point:
 
 
           #add-point:rep.b_group.ecbb003.after
           {<point name="rep.b_group.ecbb003.after"/>}
           #end add-point:
 
 
 
 
       ON EVERY ROW
          #add-point:rep.everyrow.before
          {<point name="rep.everyrow.before"/>}
          #end add-point:rep.everyrow.before
 
          #單身前備註
             #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub02.before
           {<point name="rep.sub02.before"/>}
           #end add-point:rep.sub02.before
 
           #add-point:rep.sub02.sql
           {<point name="rep.sub02.sql" mark="Y"/>}
           #end add-point:rep.sub02.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='2' AND ooffent = '", 
                sr1.ecbaent CLIPPED ,"'", " AND  ooff002 = '", sr1.l_order CLIPPED ,"'", " AND  ooff003 = '", 
                sr1.ecbb003 CLIPPED ,"'"
 
           #add-point:rep.sub02.afsql
           {<point name="rep.sub02.afsql"/>}
           #end add-point:rep.sub02.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep02_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE aecr001_g01_repcur02_cnt_pre FROM l_sub_sql
           EXECUTE aecr001_g01_repcur02_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep02_show ="Y"
           END IF
           PRINTX l_subrep02_show
           START REPORT aecr001_g01_subrep02
           DECLARE aecr001_g01_repcur02 CURSOR FROM g_sql
           FOREACH aecr001_g01_repcur02 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "aecr001_g01_repcur02:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub02.foreach
              {<point name="rep.sub02.foreach"/>}
              #end add-point:rep.sub02.foreach
              OUTPUT TO REPORT aecr001_g01_subrep02(sr2.*)
           END FOREACH
           FINISH REPORT aecr001_g01_subrep02
           #add-point:rep.sub02.after
           {<point name="rep.sub02.after"/>}
           #end add-point:rep.sub02.after
 
 
 
          #add-point:rep.everyrow.beforerow
          {<point name="rep.everyrow.beforerow"/>}
          #end add-point:rep.everyrow.beforerow
            
          PRINTX sr1.*
 
          #add-point:rep.everyrow.afterrow
          {<point name="rep.everyrow.afterrow"/>}
          #end add-point:rep.everyrow.afterrow
 
          #單身後備註
             #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub03.before
           {<point name="rep.sub03.before"/>}
           #end add-point:rep.sub03.before
 
           #add-point:rep.sub03.sql
           {<point name="rep.sub03.sql" mark="Y"/>}
           #end add-point:rep.sub03.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='1' AND ooffent = '", 
                sr1.ecbaent CLIPPED ,"'", " AND  ooff002 = '", sr1.l_order CLIPPED ,"'", " AND  ooff003 = '", 
                sr1.ecbb003 CLIPPED ,"'"
 
           #add-point:rep.sub03.afsql
           {<point name="rep.sub03.afsql"/>}
           #end add-point:rep.sub03.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep03_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE aecr001_g01_repcur03_cnt_pre FROM l_sub_sql
           EXECUTE aecr001_g01_repcur03_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep03_show ="Y"
           END IF
           PRINTX l_subrep03_show
           START REPORT aecr001_g01_subrep03
           DECLARE aecr001_g01_repcur03 CURSOR FROM g_sql
           FOREACH aecr001_g01_repcur03 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "aecr001_g01_repcur03:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub03.foreach
              {<point name="rep.sub03.foreach"/>}
              #end add-point:rep.sub03.foreach
              OUTPUT TO REPORT aecr001_g01_subrep03(sr2.*)
           END FOREACH
           FINISH REPORT aecr001_g01_subrep03
           #add-point:rep.sub03.after
           {<point name="rep.sub03.after"/>}
           #end add-point:rep.sub03.after
 
 
 
          #add-point:rep.everyrow.after
          {<point name="rep.everyrow.after"/>}
          #end add-point:rep.everyrow.after        
 
          #讀取afterGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:1)
        AFTER GROUP OF sr1.l_order
 
           #add-point:rep.a_group.l_order.before
           {<point name="rep.a_group.l_order.before"/>}
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub04.before
           {<point name="rep.sub04.before"/>}
           #end add-point:rep.sub04.before
 
           #add-point:rep.sub04.sql
           {<point name="rep.sub04.sql" mark="Y"/>}
           #end add-point:rep.sub04.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='1' AND ooffent = '", 
                sr1.ecbaent CLIPPED ,"'", " AND  ooff002 = '", sr1.l_order CLIPPED ,"'"
 
           #add-point:rep.sub04.afsql
           {<point name="rep.sub04.afsql"/>}
           #end add-point:rep.sub04.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep04_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE aecr001_g01_repcur04_cnt_pre FROM l_sub_sql
           EXECUTE aecr001_g01_repcur04_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep04_show ="Y"
           END IF
           PRINTX l_subrep04_show
           START REPORT aecr001_g01_subrep04
           DECLARE aecr001_g01_repcur04 CURSOR FROM g_sql
           FOREACH aecr001_g01_repcur04 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "aecr001_g01_repcur04:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub04.foreach
              {<point name="rep.sub04.foreach"/>}
              #end add-point:rep.sub04.foreach
              OUTPUT TO REPORT aecr001_g01_subrep04(sr2.*)
           END FOREACH
           FINISH REPORT aecr001_g01_subrep04
           #add-point:rep.sub04.after
           {<point name="rep.sub04.after"/>}
           #end add-point:rep.sub04.after
 
 
 
           #add-point:rep.a_group.l_order.after
           {<point name="rep.a_group.l_order.after"/>}
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:1)
        AFTER GROUP OF sr1.ecbb003
 
           #add-point:rep.a_group.ecbb003.before
           {<point name="rep.a_group.ecbb003.before"/>}
           #end add-point:
 
 
           #add-point:rep.a_group.ecbb003.after
           {<point name="rep.a_group.ecbb003.after"/>}
           #end add-point:
 
 
 
       ON LAST ROW
            #add-point:rep.lastrow.before  
            {<point name="rep.lastrow.before"/>}        
            #edn add point :rep.lastrow.before
 
            #add-point:rep.lastrow.after
            {<point name="rep.lastrow.after"/>}
            #edn add point :rep.lastrow.after
END REPORT
]]>
  </section>
  <section id="aecr001_g01.rep_data" ver="2" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aecr001_g01_rep_data()
   DEFINE HANDLER         om.SaxDocumentHandler
   DEFINE l_i             INTEGER
 
    #判斷是否有報表資料，若回彈出訊息視窗
    IF sr.getLength() = 0 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = "adz-00285"
       LET g_errparam.extend = NULL
       LET g_errparam.popup  = FALSE
       LET g_errparam.replace[1] = ''
       CALL cl_err()  
       RETURN 
    END IF
    WHILE TRUE               
       LET handler = cl_gr_handler()
       IF handler IS NOT NULL THEN
          START REPORT aecr001_g01_rep TO XML HANDLER handler
          FOR l_i = 1 TO sr.getLength()
             OUTPUT TO REPORT aecr001_g01_rep(sr[l_i].*)
          END FOR
          FINISH REPORT aecr001_g01_rep
       END IF
       IF INT_FLAG = TRUE THEN
          LET INT_FLAG = FALSE
          EXIT WHILE
       END IF
    END WHILE
    CALL cl_gr_close_report()
END FUNCTION
]]>
  </section>
  <section id="aecr001_g01.sel_prep" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION aecr001_g01_sel_prep()
   #add-point:sel_prep段define
   {<point name="sel_prep.define"/>}
   #end add-point
 
   #add-point:sel_prep before
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
   
   #add-point:sel_prep g_select
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT ecba001,ecba002,ecba003,ecbb003,(trim(ecbb004)||'/'||trim(ecbb005)),(trim(ecbb008)||'/'||trim(ecbb009)), 
       (trim(ecbb010)||'/'||trim(ecbb011)),ecbb012,ecbb030,(trim(ecbb031)||'/'||trim(ecbb032)),ecbb021, 
       (trim(ecbb022)||'/'||trim(ecbb023)),ecbb024,ecbb025,ecbb026,ecbb027,ecbb013,ecbb015,ecbb016,ecbb017, 
       ecbb018,ecbb019,ecbb020,ecbb014,ecbaent,ecbb004,ecbb005,ecbb008,ecbb009,ecbb010,ecbb011,NULL, 
       NULL,NULL,NULL,NULL,NULL,ecbasite"
 
   #add-point:sel_prep g_from
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM ecba_t,ecbb_t"
 
   #add-point:sel_prep g_where
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED 
 
   #add-point:sel_prep g_order
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
    LET g_order = " ORDER BY ecba001,ecba002,ecbb003"
 
   #add-point:sel_prep.sql.before
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("ecba_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED ," ",g_order CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段 
 
   #add-point:sel_prep.sql.after
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE aecr001_g01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()   
      LET g_rep_success = 'N'    
   END IF
   DECLARE aecr001_g01_curs CURSOR FOR aecr001_g01_prepare
 
END FUNCTION
]]>
  </section>
  <section id="aecr001_g01.subrep_str" ver="6" status="" src="s" readonly="">
    <![CDATA[#讀取子報表樣板
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT aecr001_g01_subrep01(sr2)
DEFINE  sr2  sr2_r
#add-point:sub01.define
{<point name="sub01.define"/>}
#end add-point:sub01.define
 
    #add-point:sub01.order.before
    {<point name="sub01.order.before"/>}
    #end add-point:sub01.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub01.everyrow.before
            {<point name="sub01.everyrow.before"/>}              
            #end add-point:sub01.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub01.everyrow.after
            {<point name="sub01.everyrow.after"/>}
            #end add-point:sub01.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT aecr001_g01_subrep02(sr2)
DEFINE  sr2  sr2_r
#add-point:sub02.define
{<point name="sub02.define"/>}
#end add-point:sub02.define
 
    #add-point:sub02.order.before
    {<point name="sub02.order.before"/>}
    #end add-point:sub02.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub02.everyrow.before
            {<point name="sub02.everyrow.before"/>}              
            #end add-point:sub02.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub02.everyrow.after
            {<point name="sub02.everyrow.after"/>}
            #end add-point:sub02.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT aecr001_g01_subrep03(sr2)
DEFINE  sr2  sr2_r
#add-point:sub03.define
{<point name="sub03.define"/>}
#end add-point:sub03.define
 
    #add-point:sub03.order.before
    {<point name="sub03.order.before"/>}
    #end add-point:sub03.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub03.everyrow.before
            {<point name="sub03.everyrow.before"/>}              
            #end add-point:sub03.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub03.everyrow.after
            {<point name="sub03.everyrow.after"/>}
            #end add-point:sub03.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT aecr001_g01_subrep04(sr2)
DEFINE  sr2  sr2_r
#add-point:sub04.define
{<point name="sub04.define"/>}
#end add-point:sub04.define
 
    #add-point:sub04.order.before
    {<point name="sub04.order.before"/>}
    #end add-point:sub04.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub04.everyrow.before
            {<point name="sub04.everyrow.before"/>}              
            #end add-point:sub04.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub04.everyrow.after
            {<point name="sub04.everyrow.after"/>}
            #end add-point:sub04.everyrow.after
 
 
END REPORT
 
 
 
]]>
  </section>
</add_points>
