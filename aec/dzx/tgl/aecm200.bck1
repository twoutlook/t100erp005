#該程式已解開Section, 不再透過樣板產出!
{<section id="aecm200.description" >}
#+ Version..: T100-ERP-1.00.00(SD版次:4,PR版次:4) Build-000367
#+ 
#+ Filename...: aecm200
#+ Description: 料件製程資料維護作業
#+ Creator....: 02482(2013/09/23)
#+ Modifier...: 01258(2014/08/26) -SD/PR-
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生

{</section>}

{<section id="aecm200.global" >}
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_ecba_m        RECORD
       ecba001 LIKE ecba_t.ecba001, 
   ecba001_desc LIKE type_t.chr80, 
   ecba001_desc1 LIKE type_t.chr80, 
   ecba002 LIKE ecba_t.ecba002, 
   ecba003 LIKE ecba_t.ecba003, 
   ecba004 LIKE ecba_t.ecba004, 
   ecba005 LIKE ecba_t.ecba005, 
   ecba006 LIKE ecba_t.ecba006, 
   ecba007 LIKE ecba_t.ecba007, 
   ecbastus LIKE ecba_t.ecbastus, 
   ooeb013 LIKE type_t.chr80, 
   ecbacrtid LIKE ecba_t.ecbacrtid, 
   ecbacrtid_desc LIKE type_t.chr80, 
   ecbacrtdp LIKE ecba_t.ecbacrtdp, 
   ecbacrtdp_desc LIKE type_t.chr80, 
   ecbacrtdt DATETIME YEAR TO SECOND, 
   ecbaownid LIKE ecba_t.ecbaownid, 
   ecbaownid_desc LIKE type_t.chr80, 
   ecbaowndp LIKE ecba_t.ecbaowndp, 
   ecbaowndp_desc LIKE type_t.chr80, 
   ecbamodid LIKE ecba_t.ecbamodid, 
   ecbamodid_desc LIKE type_t.chr80, 
   ecbamoddt DATETIME YEAR TO SECOND, 
   ecbacnfid LIKE ecba_t.ecbacnfid, 
   ecbacnfid_desc LIKE type_t.chr80, 
   ecbacnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_ecbb_d        RECORD
       ecbb003 LIKE ecbb_t.ecbb003, 
   ecbb004 LIKE ecbb_t.ecbb004, 
   ecbb004_desc LIKE type_t.chr500, 
   ecbb005 LIKE ecbb_t.ecbb005, 
   ecbb006 LIKE ecbb_t.ecbb006, 
   ecbb007 LIKE ecbb_t.ecbb007, 
   ecbb008 LIKE ecbb_t.ecbb008, 
   ecbb008_desc LIKE type_t.chr500, 
   ecbb009 LIKE ecbb_t.ecbb009, 
   ecbb010 LIKE ecbb_t.ecbb010, 
   ecbb010_desc LIKE type_t.chr500, 
   ecbb011 LIKE ecbb_t.ecbb011, 
   ecbb012 LIKE ecbb_t.ecbb012, 
   ecbb012_desc LIKE type_t.chr500, 
   ecbb037 LIKE ecbb_t.ecbb037,         #141006-00003#1  
   ecbb037_desc LIKE type_t.chr500,     #141006-00003#1  
   ecbb038 LIKE ecbb_t.ecbb038,         #add--151215-00002#4 By shiun  
   ecbb038_desc LIKE type_t.chr500,     #add--151215-00002#4 By shiun  
   ecbb024 LIKE ecbb_t.ecbb024, 
   ecbb025 LIKE ecbb_t.ecbb025, 
   ecbb026 LIKE ecbb_t.ecbb026, 
   ecbb027 LIKE ecbb_t.ecbb027, 
   ecbb034 LIKE ecbb_t.ecbb034, 
   ecbb013 LIKE ecbb_t.ecbb013, 
   ecbb014 LIKE ecbb_t.ecbb014, 
   ecbb014_desc LIKE type_t.chr500, 
   ecbb015 LIKE ecbb_t.ecbb015, 
   ecbb016 LIKE ecbb_t.ecbb016, 
   ecbb017 LIKE ecbb_t.ecbb017, 
   ecbb018 LIKE ecbb_t.ecbb018, 
   ecbb019 LIKE ecbb_t.ecbb019, 
   ecbb020 LIKE ecbb_t.ecbb020, 
   ecbb030 LIKE ecbb_t.ecbb030, 
   ecbb031 LIKE ecbb_t.ecbb031, 
   ecbb032 LIKE ecbb_t.ecbb032, 
   ecbb021 LIKE ecbb_t.ecbb021, 
   ecbb022 LIKE ecbb_t.ecbb022, 
   ecbb023 LIKE ecbb_t.ecbb023, 
   ecbb033 LIKE ecbb_t.ecbb033, 
   ecbb028 LIKE ecbb_t.ecbb028, 
   ecbb029 LIKE ecbb_t.ecbb029, 
   ecbb035 LIKE ecbb_t.ecbb035, 
   ecbb036 LIKE ecbb_t.ecbb036, 
   ooff013 LIKE type_t.chr80
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_ecba_m          type_g_ecba_m
DEFINE g_ecba_m_t        type_g_ecba_m
DEFINE g_ecba_m_o        type_g_ecba_m
 
   DEFINE g_ecba001_t LIKE ecba_t.ecba001
DEFINE g_ecba002_t LIKE ecba_t.ecba002
 
 
DEFINE g_ecbb_d          DYNAMIC ARRAY OF type_g_ecbb_d
DEFINE g_ecbb_d_t        type_g_ecbb_d
DEFINE g_ecbb_d_o        type_g_ecbb_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_ecba001 LIKE ecba_t.ecba001,
   b_ecba001_desc LIKE type_t.chr80,
   b_ecba001_desc1 LIKE type_t.chr80,
      b_ecba002 LIKE ecba_t.ecba002,
      b_ecba003 LIKE ecba_t.ecba003
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
       b_statepic     LIKE type_t.chr50,
          b_ecba001 LIKE ecba_t.ecba001,
   b_ecba001_desc LIKE type_t.chr80,
   b_ecba001_desc1 LIKE type_t.chr80,
      b_ecba002 LIKE ecba_t.ecba002,
      b_ecba003 LIKE ecba_t.ecba003
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="aecm200.main" >}
#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
{<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aec","")
 
   #add-point:作業初始化
{<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
{<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT ecba001,'','',ecba002,ecba003,ecba004,ecba005,ecba006,ecba007,ecbastus, 
       '',ecbacrtid,'',ecbacrtdp,'',ecbacrtdt,ecbaownid,'',ecbaowndp,'',ecbamodid,'',ecbamoddt,ecbacnfid, 
       '',ecbacnfdt", 
                      " FROM ecba_t",
                      " WHERE ecbaent= ? AND ecbasite= ? AND ecba001=? AND ecba002=? FOR UPDATE"
   #add-point:SQL_define
{<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aecm200_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.ecba001,t0.ecba002,t0.ecba003,t0.ecba004,t0.ecba005,t0.ecba006,t0.ecba007, 
       t0.ecbastus,t0.ecbacrtid,t0.ecbacrtdp,t0.ecbacrtdt,t0.ecbaownid,t0.ecbaowndp,t0.ecbamodid,t0.ecbamoddt, 
       t0.ecbacnfid,t0.ecbacnfdt,t1.ooag011 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 ,t6.ooag011", 

               " FROM ecba_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.ecbacrtid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.ecbacrtdp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.ecbaownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.ecbaowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=t0.ecbamodid  ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=t0.ecbacnfid  ",
 
               #" WHERE t0.ecbaent = '" ||g_enterprise|| "' AND t0.ecbasite = '" ||g_site|| "' AND t0.ecba001 = ? AND t0.ecba002 = ?"  #160707-00040#1 mark
               " WHERE t0.ecbaent = '" ||g_enterprise|| "' AND t0.ecbasite = ? AND t0.ecba001 = ? AND t0.ecba002 = ?"  #160707-00040#1
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
{<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aecm200_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
{<point name="main.servicecall" />}
      #end add-point
   ELSE
      LET l_wcpath = FGL_GETENV("FGLASIP"),"/components"                           #wuxja
      CALL ui.interface.frontCall("standard", "setwebcomponentpath",[l_wcpath],[]) #wuxja
      #畫面開啟 (identifier)
      OPEN WINDOW w_aecm200 WITH FORM cl_ap_formpath("aec",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aecm200_init()   
 
      #進入選單 Menu (="N")
      CALL aecm200_ui_dialog() 
      
      #add-point:畫面關閉前
{<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aecm200
      
   END IF 
   
   CLOSE aecm200_cl
   
   
 
   #add-point:作業離開前
{<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 

{</section>}

{<section id="aecm200.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aecm200_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('ecbastus','50','N,X,Y')
 
      CALL cl_set_combo_scc('ecbb006','1202') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aecm200_default_search()
    
END FUNCTION

{</section>}

{<section id="aecm200.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION aecm200_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
{<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aecm200_insert()
            #add-point:ON ACTION insert
{<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
{<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      #先填充browser資料
      CALL aecm200_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_ecba001 = g_ecba001_t
               AND g_browser[li_idx].b_ecba002 = g_ecba002_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aecm200_fetch('') # reload data
               LET l_ac = 1
               CALL aecm200_ui_detailshow() #Setting the current row 
      
               CALL aecm200_idx_chk()
               #NEXT FIELD ecbb003
         
         END DISPLAY
        
         DISPLAY ARRAY g_ecbb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aecm200_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
{<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL aecm200_idx_chk()
               #add-point:page1自定義行為
{<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
{<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aecm200_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aecm200_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aecm200_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
{<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aecm200_statechange()
            EXIT DIALOG
      
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aecm200_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aecm200_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CLEAR FORM
               ELSE
                  CALL aecm200_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
{<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aecm200_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL aecm200_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aecm200_idx_chk()
            
         ON ACTION previous
            CALL aecm200_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aecm200_idx_chk()
            
         ON ACTION jump
            CALL aecm200_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aecm200_idx_chk()
            
         ON ACTION next
            CALL aecm200_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aecm200_idx_chk()
            
         ON ACTION last
            CALL aecm200_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aecm200_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
               NEXT FIELD wc   #wuxja
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD ecbb003
            END IF
       
         #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION checkout
            LET g_action_choice="checkout"
            IF cl_auth_chk_act("checkout") THEN
               
               #add-point:ON ACTION checkout
{<point name="menu.checkout" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aecm200_modify()
               #add-point:ON ACTION modify
{<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aecm200_modify()
               #add-point:ON ACTION modify_detail
{<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aecm200_delete()
               #add-point:ON ACTION delete
{<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aecm200_insert()
               #add-point:ON ACTION insert
{<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
{<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aecm200_reproduce()
               #add-point:ON ACTION reproduce
{<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aecm200_query()
               #add-point:ON ACTION query
{<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生  
        ON ACTION resource
           LET g_action_choice="resource"
           IF cl_auth_chk_act("resource") THEN
              
              #add-point:ON ACTION resource
{<point name="menu.resource" />}
              #END add-point
              EXIT DIALOG
           END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION stand
            LET g_action_choice="stand"
            IF cl_auth_chk_act("stand") THEN
               
               #add-point:ON ACTION stand
{<point name="menu.stand" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION bom
            LET g_action_choice="bom"
            IF cl_auth_chk_act("bom") THEN
               
               #add-point:ON ACTION bom
{<point name="menu.bom" />}
               #END add-point
               EXIT DIALOG
            END IF
         #160112-00011#4-mark-(S)
#         ON ACTION open_esop
#            LET g_action_choice="open_esop"
#            IF cl_auth_chk_act("open_esop") THEN
#               #160112-00011#2 20160121 add by ming -----(S) 
#               #開啟eSop 
#               CALL aecm200_open_esop()
#               #160112-00011#2 20160121 add by ming -----(E) 
#               EXIT DIALOG
#            END IF
         
#         ON ACTION upload_esop
#            LET g_action_choice="upload_esop"
#            IF cl_auth_chk_act("upload_esop") THEN
#               #160112-00011#2 20160121 add by ming -----(S) 
#               #上傳eSop 
#               CALL aecm200_upload_esop()
#               #160112-00011#2 20160121 add by ming -----(E) 
#               EXIT DIALOG
#            END IF
         #160112-00011#4-mark-(E)   
         #+ 此段落由子樣板a43產生
         ON ACTION checkin
            LET g_action_choice="checkin"
            IF cl_auth_chk_act("checkin") THEN
               
               #add-point:ON ACTION checkin
{<point name="menu.checkin" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aecm200_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
{<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aecm200_set_pk_array()
            #add-point:ON ACTION agendum
{<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aecm200_set_pk_array()
            #add-point:ON ACTION followup
{<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
{<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION

{</section>}

{<section id="aecm200.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aecm200_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_ecba_m.* TO NULL
   CALL g_ecbb_d.clear()        
 
   CALL g_browser.clear()
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "ecba001,ecba002"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE ecba001,ecba002 ",
                      " FROM ecba_t ",
                      " ",
                      " LEFT JOIN ecbb_t ON ecbbent = ecbaent AND ecbbsite = ecbasite AND ecba001 = ecbb001 AND ecba002 = ecbb002 ",
 
 
                      " ", 
                      " ", 
                      " WHERE ecbaent = '" ||g_enterprise|| "' AND ecbasite = '" ||g_site|| "' AND ecbbent = '" ||g_enterprise|| "' AND ecbbsite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("ecba_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE ecba001,ecba002 ",
                      " FROM ecba_t ", 
                      "  ",
                      "  ",
                      " WHERE ecbaent = '" ||g_enterprise|| "' AND ecbasite = '" ||g_site|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("ecba_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   IF g_browser_cnt > g_max_rec THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_rec
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照t0.ecba001,t0.ecba002,t0.ecba003 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT t0.ecbastus,t0.ecba001,t0.ecba002,t0.ecba003,t1.imaal003 ",
               " FROM ecba_t t0",
               "  ",
               "  LEFT JOIN ecbb_t ON ecbbent = ecbaent AND ecbbsite = ecbasite AND ecba001 = ecbb001 AND ecba002 = ecbb002 ",
 
 
               "  ",
               "  ",
                              " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=t0.ecba001 AND t1.imaal002='"||g_lang||"' ",
 
               " WHERE t0.ecbaent = '" ||g_enterprise|| "' AND t0.ecbasite = '" ||g_site|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("ecba_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"ecba_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_ecba001,g_browser[g_cnt].b_ecba002, 
       g_browser[g_cnt].b_ecba003,g_browser[g_cnt].b_ecba001_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      #browser段落顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/void.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/valid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION

{</section>}

{<section id="aecm200.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION aecm200_ui_headershow()
   #add-point:ui_headershow段define
{<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_ecba_m.ecba001 = g_browser[g_current_idx].b_ecba001   
   LET g_ecba_m.ecba002 = g_browser[g_current_idx].b_ecba002   
 
   #EXECUTE aecm200_master_referesh USING g_ecba_m.ecba001,g_ecba_m.ecba002 INTO g_ecba_m.ecba001,g_ecba_m.ecba002,   #160707-00040#1 mark
   EXECUTE aecm200_master_referesh USING g_site,g_ecba_m.ecba001,g_ecba_m.ecba002 INTO g_ecba_m.ecba001,g_ecba_m.ecba002,    #160707-00040#1
       g_ecba_m.ecba003,g_ecba_m.ecba004,g_ecba_m.ecba005,g_ecba_m.ecba006,g_ecba_m.ecba007,g_ecba_m.ecbastus, 
       g_ecba_m.ecbacrtid,g_ecba_m.ecbacrtdp,g_ecba_m.ecbacrtdt,g_ecba_m.ecbaownid,g_ecba_m.ecbaowndp, 
       g_ecba_m.ecbamodid,g_ecba_m.ecbamoddt,g_ecba_m.ecbacnfid,g_ecba_m.ecbacnfdt,g_ecba_m.ecbacrtid_desc, 
       g_ecba_m.ecbacrtdp_desc,g_ecba_m.ecbaownid_desc,g_ecba_m.ecbaowndp_desc,g_ecba_m.ecbamodid_desc, 
       g_ecba_m.ecbacnfid_desc
   CALL aecm200_show()
   
END FUNCTION

{</section>}

{<section id="aecm200.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION aecm200_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="aecm200.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aecm200_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_ecba001 = g_ecba_m.ecba001 
         AND g_browser[l_i].b_ecba002 = g_ecba_m.ecba002 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION

{</section>}

{<section id="aecm200.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION aecm200_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_ecba_m.* TO NULL
   CALL g_ecbb_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON ecba001,ecba002,ecba003,ecba004,ecba005,ecba006,ecba007,ecbastus,ooeb013, 
          ecbacrtid,ecbacrtdp,ecbacrtdt,ecbaownid,ecbaowndp,ecbamodid,ecbamoddt,ecbacnfid,ecbacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         #共用欄位查詢處理
         ##----<<ecbacrtdt>>----
         AFTER FIELD ecbacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<ecbamoddt>>----
         AFTER FIELD ecbamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<ecbacnfdt>>----
         AFTER FIELD ecbacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<ecbapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.ecba001
         ON ACTION controlp INFIELD ecba001
            #add-point:ON ACTION controlp INFIELD ecba001
            {<point name="construct.c.ecba001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecba001
            #add-point:BEFORE FIELD ecba001
            {<point name="construct.b.ecba001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecba001
            
            #add-point:AFTER FIELD ecba001
            {<point name="construct.a.ecba001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecba002
            #add-point:BEFORE FIELD ecba002
            {<point name="construct.b.ecba002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecba002
            
            #add-point:AFTER FIELD ecba002
            {<point name="construct.a.ecba002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ecba002
         ON ACTION controlp INFIELD ecba002
            #add-point:ON ACTION controlp INFIELD ecba002
            {<point name="construct.c.ecba002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecba003
            #add-point:BEFORE FIELD ecba003
            {<point name="construct.b.ecba003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecba003
            
            #add-point:AFTER FIELD ecba003
            {<point name="construct.a.ecba003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ecba003
         ON ACTION controlp INFIELD ecba003
            #add-point:ON ACTION controlp INFIELD ecba003
            {<point name="construct.c.ecba003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecba004
            #add-point:BEFORE FIELD ecba004
            {<point name="construct.b.ecba004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecba004
            
            #add-point:AFTER FIELD ecba004
            {<point name="construct.a.ecba004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ecba004
         ON ACTION controlp INFIELD ecba004
            #add-point:ON ACTION controlp INFIELD ecba004
            {<point name="construct.c.ecba004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecba005
            #add-point:BEFORE FIELD ecba005
            {<point name="construct.b.ecba005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecba005
            
            #add-point:AFTER FIELD ecba005
            {<point name="construct.a.ecba005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ecba005
         ON ACTION controlp INFIELD ecba005
            #add-point:ON ACTION controlp INFIELD ecba005
            {<point name="construct.c.ecba005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecba006
            #add-point:BEFORE FIELD ecba006
            {<point name="construct.b.ecba006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecba006
            
            #add-point:AFTER FIELD ecba006
            {<point name="construct.a.ecba006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ecba006
         ON ACTION controlp INFIELD ecba006
            #add-point:ON ACTION controlp INFIELD ecba006
            {<point name="construct.c.ecba006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecba007
            #add-point:BEFORE FIELD ecba007
            {<point name="construct.b.ecba007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecba007
            
            #add-point:AFTER FIELD ecba007
            {<point name="construct.a.ecba007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ecba007
         ON ACTION controlp INFIELD ecba007
            #add-point:ON ACTION controlp INFIELD ecba007
            {<point name="construct.c.ecba007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbastus
            #add-point:BEFORE FIELD ecbastus
            {<point name="construct.b.ecbastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbastus
            
            #add-point:AFTER FIELD ecbastus
            {<point name="construct.a.ecbastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ecbastus
         ON ACTION controlp INFIELD ecbastus
            #add-point:ON ACTION controlp INFIELD ecbastus
            {<point name="construct.c.ecbastus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ooeb013
            #add-point:BEFORE FIELD ooeb013
            {<point name="construct.b.ooeb013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ooeb013
            
            #add-point:AFTER FIELD ooeb013
            {<point name="construct.a.ooeb013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ooeb013
         ON ACTION controlp INFIELD ooeb013
            #add-point:ON ACTION controlp INFIELD ooeb013
            {<point name="construct.c.ooeb013" />}
            #END add-point
 
         #Ctrlp:construct.c.ecbacrtid
         ON ACTION controlp INFIELD ecbacrtid
            #add-point:ON ACTION controlp INFIELD ecbacrtid
            {<point name="construct.c.ecbacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbacrtid
            #add-point:BEFORE FIELD ecbacrtid
            {<point name="construct.b.ecbacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbacrtid
            
            #add-point:AFTER FIELD ecbacrtid
            {<point name="construct.a.ecbacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ecbacrtdp
         ON ACTION controlp INFIELD ecbacrtdp
            #add-point:ON ACTION controlp INFIELD ecbacrtdp
            {<point name="construct.c.ecbacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbacrtdp
            #add-point:BEFORE FIELD ecbacrtdp
            {<point name="construct.b.ecbacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbacrtdp
            
            #add-point:AFTER FIELD ecbacrtdp
            {<point name="construct.a.ecbacrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbacrtdt
            #add-point:BEFORE FIELD ecbacrtdt
            {<point name="construct.b.ecbacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.ecbaownid
         ON ACTION controlp INFIELD ecbaownid
            #add-point:ON ACTION controlp INFIELD ecbaownid
            {<point name="construct.c.ecbaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbaownid
            #add-point:BEFORE FIELD ecbaownid
            {<point name="construct.b.ecbaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbaownid
            
            #add-point:AFTER FIELD ecbaownid
            {<point name="construct.a.ecbaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ecbaowndp
         ON ACTION controlp INFIELD ecbaowndp
            #add-point:ON ACTION controlp INFIELD ecbaowndp
            {<point name="construct.c.ecbaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbaowndp
            #add-point:BEFORE FIELD ecbaowndp
            {<point name="construct.b.ecbaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbaowndp
            
            #add-point:AFTER FIELD ecbaowndp
            {<point name="construct.a.ecbaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ecbamodid
         ON ACTION controlp INFIELD ecbamodid
            #add-point:ON ACTION controlp INFIELD ecbamodid
            {<point name="construct.c.ecbamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbamodid
            #add-point:BEFORE FIELD ecbamodid
            {<point name="construct.b.ecbamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbamodid
            
            #add-point:AFTER FIELD ecbamodid
            {<point name="construct.a.ecbamodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbamoddt
            #add-point:BEFORE FIELD ecbamoddt
            {<point name="construct.b.ecbamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.ecbacnfid
         ON ACTION controlp INFIELD ecbacnfid
            #add-point:ON ACTION controlp INFIELD ecbacnfid
            {<point name="construct.c.ecbacnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbacnfid
            #add-point:BEFORE FIELD ecbacnfid
            {<point name="construct.b.ecbacnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbacnfid
            
            #add-point:AFTER FIELD ecbacnfid
            {<point name="construct.a.ecbacnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbacnfdt
            #add-point:BEFORE FIELD ecbacnfdt
            {<point name="construct.b.ecbacnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON ecbb003,ecbb004,ecbb005,ecbb006,ecbb007,ecbb008,ecbb009,ecbb010,ecbb011, 
          ecbb012,ecbb024,ecbb025,ecbb026,ecbb027,ecbb034,ecbb013,ecbb014,ecbb015,ecbb016,ecbb017,ecbb018, 
          ecbb019,ecbb020,ecbb030,ecbb031,ecbb032,ecbb021,ecbb022,ecbb023,ecbb033,ecbb028,ecbb029,ecbb035, 
          ecbb036,ooff013
           FROM s_detail1[1].ecbb003,s_detail1[1].ecbb004,s_detail1[1].ecbb005,s_detail1[1].ecbb006, 
               s_detail1[1].ecbb007,s_detail1[1].ecbb008,s_detail1[1].ecbb009,s_detail1[1].ecbb010,s_detail1[1].ecbb011, 
               s_detail1[1].ecbb012,s_detail1[1].ecbb024,s_detail1[1].ecbb025,s_detail1[1].ecbb026,s_detail1[1].ecbb027, 
               s_detail1[1].ecbb034,s_detail1[1].ecbb013,s_detail1[1].ecbb014,s_detail1[1].ecbb015,s_detail1[1].ecbb016, 
               s_detail1[1].ecbb017,s_detail1[1].ecbb018,s_detail1[1].ecbb019,s_detail1[1].ecbb020,s_detail1[1].ecbb030, 
               s_detail1[1].ecbb031,s_detail1[1].ecbb032,s_detail1[1].ecbb021,s_detail1[1].ecbb022,s_detail1[1].ecbb023, 
               s_detail1[1].ecbb033,s_detail1[1].ecbb028,s_detail1[1].ecbb029,s_detail1[1].ecbb035,s_detail1[1].ecbb036, 
               s_detail1[1].ooff013
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD ecbb003
            #add-point:BEFORE FIELD ecbb003
            {<point name="construct.b.page1.ecbb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb003
            
            #add-point:AFTER FIELD ecbb003
            {<point name="construct.a.page1.ecbb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb003
         ON ACTION controlp INFIELD ecbb003
            #add-point:ON ACTION controlp INFIELD ecbb003
            {<point name="construct.c.page1.ecbb003" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.ecbb004
         ON ACTION controlp INFIELD ecbb004
            #add-point:ON ACTION controlp INFIELD ecbb004
            {<point name="construct.c.page1.ecbb004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb004
            #add-point:BEFORE FIELD ecbb004
            {<point name="construct.b.page1.ecbb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb004
            
            #add-point:AFTER FIELD ecbb004
            {<point name="construct.a.page1.ecbb004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb005
            #add-point:BEFORE FIELD ecbb005
            {<point name="construct.b.page1.ecbb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb005
            
            #add-point:AFTER FIELD ecbb005
            {<point name="construct.a.page1.ecbb005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb005
         ON ACTION controlp INFIELD ecbb005
            #add-point:ON ACTION controlp INFIELD ecbb005
            {<point name="construct.c.page1.ecbb005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb006
            #add-point:BEFORE FIELD ecbb006
            {<point name="construct.b.page1.ecbb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb006
            
            #add-point:AFTER FIELD ecbb006
            {<point name="construct.a.page1.ecbb006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb006
         ON ACTION controlp INFIELD ecbb006
            #add-point:ON ACTION controlp INFIELD ecbb006
            {<point name="construct.c.page1.ecbb006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb007
            #add-point:BEFORE FIELD ecbb007
            {<point name="construct.b.page1.ecbb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb007
            
            #add-point:AFTER FIELD ecbb007
            {<point name="construct.a.page1.ecbb007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb007
         ON ACTION controlp INFIELD ecbb007
            #add-point:ON ACTION controlp INFIELD ecbb007
            {<point name="construct.c.page1.ecbb007" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.ecbb008
         ON ACTION controlp INFIELD ecbb008
            #add-point:ON ACTION controlp INFIELD ecbb008
            {<point name="construct.c.page1.ecbb008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb008
            #add-point:BEFORE FIELD ecbb008
            {<point name="construct.b.page1.ecbb008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb008
            
            #add-point:AFTER FIELD ecbb008
            {<point name="construct.a.page1.ecbb008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb009
            #add-point:BEFORE FIELD ecbb009
            {<point name="construct.b.page1.ecbb009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb009
            
            #add-point:AFTER FIELD ecbb009
            {<point name="construct.a.page1.ecbb009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb009
         ON ACTION controlp INFIELD ecbb009
            #add-point:ON ACTION controlp INFIELD ecbb009
            {<point name="construct.c.page1.ecbb009" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.ecbb010
         ON ACTION controlp INFIELD ecbb010
            #add-point:ON ACTION controlp INFIELD ecbb010
            {<point name="construct.c.page1.ecbb010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb010
            #add-point:BEFORE FIELD ecbb010
            {<point name="construct.b.page1.ecbb010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb010
            
            #add-point:AFTER FIELD ecbb010
            {<point name="construct.a.page1.ecbb010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb011
            #add-point:BEFORE FIELD ecbb011
            {<point name="construct.b.page1.ecbb011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb011
            
            #add-point:AFTER FIELD ecbb011
            {<point name="construct.a.page1.ecbb011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb011
         ON ACTION controlp INFIELD ecbb011
            #add-point:ON ACTION controlp INFIELD ecbb011
            {<point name="construct.c.page1.ecbb011" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.ecbb012
         ON ACTION controlp INFIELD ecbb012
            #add-point:ON ACTION controlp INFIELD ecbb012
            {<point name="construct.c.page1.ecbb012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb012
            #add-point:BEFORE FIELD ecbb012
            {<point name="construct.b.page1.ecbb012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb012
            
            #add-point:AFTER FIELD ecbb012
            {<point name="construct.a.page1.ecbb012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb024
            #add-point:BEFORE FIELD ecbb024
            {<point name="construct.b.page1.ecbb024" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb024
            
            #add-point:AFTER FIELD ecbb024
            {<point name="construct.a.page1.ecbb024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb024
         ON ACTION controlp INFIELD ecbb024
            #add-point:ON ACTION controlp INFIELD ecbb024
            {<point name="construct.c.page1.ecbb024" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb025
            #add-point:BEFORE FIELD ecbb025
            {<point name="construct.b.page1.ecbb025" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb025
            
            #add-point:AFTER FIELD ecbb025
            {<point name="construct.a.page1.ecbb025" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb025
         ON ACTION controlp INFIELD ecbb025
            #add-point:ON ACTION controlp INFIELD ecbb025
            {<point name="construct.c.page1.ecbb025" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb026
            #add-point:BEFORE FIELD ecbb026
            {<point name="construct.b.page1.ecbb026" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb026
            
            #add-point:AFTER FIELD ecbb026
            {<point name="construct.a.page1.ecbb026" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb026
         ON ACTION controlp INFIELD ecbb026
            #add-point:ON ACTION controlp INFIELD ecbb026
            {<point name="construct.c.page1.ecbb026" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb027
            #add-point:BEFORE FIELD ecbb027
            {<point name="construct.b.page1.ecbb027" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb027
            
            #add-point:AFTER FIELD ecbb027
            {<point name="construct.a.page1.ecbb027" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb027
         ON ACTION controlp INFIELD ecbb027
            #add-point:ON ACTION controlp INFIELD ecbb027
            {<point name="construct.c.page1.ecbb027" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb034
            #add-point:BEFORE FIELD ecbb034
            {<point name="construct.b.page1.ecbb034" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb034
            
            #add-point:AFTER FIELD ecbb034
            {<point name="construct.a.page1.ecbb034" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb034
         ON ACTION controlp INFIELD ecbb034
            #add-point:ON ACTION controlp INFIELD ecbb034
            {<point name="construct.c.page1.ecbb034" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb013
            #add-point:BEFORE FIELD ecbb013
            {<point name="construct.b.page1.ecbb013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb013
            
            #add-point:AFTER FIELD ecbb013
            {<point name="construct.a.page1.ecbb013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb013
         ON ACTION controlp INFIELD ecbb013
            #add-point:ON ACTION controlp INFIELD ecbb013
            {<point name="construct.c.page1.ecbb013" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.ecbb014
         ON ACTION controlp INFIELD ecbb014
            #add-point:ON ACTION controlp INFIELD ecbb014
            {<point name="construct.c.page1.ecbb014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb014
            #add-point:BEFORE FIELD ecbb014
            {<point name="construct.b.page1.ecbb014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb014
            
            #add-point:AFTER FIELD ecbb014
            {<point name="construct.a.page1.ecbb014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb015
            #add-point:BEFORE FIELD ecbb015
            {<point name="construct.b.page1.ecbb015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb015
            
            #add-point:AFTER FIELD ecbb015
            {<point name="construct.a.page1.ecbb015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb015
         ON ACTION controlp INFIELD ecbb015
            #add-point:ON ACTION controlp INFIELD ecbb015
            {<point name="construct.c.page1.ecbb015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb016
            #add-point:BEFORE FIELD ecbb016
            {<point name="construct.b.page1.ecbb016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb016
            
            #add-point:AFTER FIELD ecbb016
            {<point name="construct.a.page1.ecbb016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb016
         ON ACTION controlp INFIELD ecbb016
            #add-point:ON ACTION controlp INFIELD ecbb016
            {<point name="construct.c.page1.ecbb016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb017
            #add-point:BEFORE FIELD ecbb017
            {<point name="construct.b.page1.ecbb017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb017
            
            #add-point:AFTER FIELD ecbb017
            {<point name="construct.a.page1.ecbb017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb017
         ON ACTION controlp INFIELD ecbb017
            #add-point:ON ACTION controlp INFIELD ecbb017
            {<point name="construct.c.page1.ecbb017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb018
            #add-point:BEFORE FIELD ecbb018
            {<point name="construct.b.page1.ecbb018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb018
            
            #add-point:AFTER FIELD ecbb018
            {<point name="construct.a.page1.ecbb018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb018
         ON ACTION controlp INFIELD ecbb018
            #add-point:ON ACTION controlp INFIELD ecbb018
            {<point name="construct.c.page1.ecbb018" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb019
            #add-point:BEFORE FIELD ecbb019
            {<point name="construct.b.page1.ecbb019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb019
            
            #add-point:AFTER FIELD ecbb019
            {<point name="construct.a.page1.ecbb019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb019
         ON ACTION controlp INFIELD ecbb019
            #add-point:ON ACTION controlp INFIELD ecbb019
            {<point name="construct.c.page1.ecbb019" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb020
            #add-point:BEFORE FIELD ecbb020
            {<point name="construct.b.page1.ecbb020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb020
            
            #add-point:AFTER FIELD ecbb020
            {<point name="construct.a.page1.ecbb020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb020
         ON ACTION controlp INFIELD ecbb020
            #add-point:ON ACTION controlp INFIELD ecbb020
            {<point name="construct.c.page1.ecbb020" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.ecbb030
         ON ACTION controlp INFIELD ecbb030
            #add-point:ON ACTION controlp INFIELD ecbb030
            {<point name="construct.c.page1.ecbb030" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb030
            #add-point:BEFORE FIELD ecbb030
            {<point name="construct.b.page1.ecbb030" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb030
            
            #add-point:AFTER FIELD ecbb030
            {<point name="construct.a.page1.ecbb030" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb031
            #add-point:BEFORE FIELD ecbb031
            {<point name="construct.b.page1.ecbb031" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb031
            
            #add-point:AFTER FIELD ecbb031
            {<point name="construct.a.page1.ecbb031" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb031
         ON ACTION controlp INFIELD ecbb031
            #add-point:ON ACTION controlp INFIELD ecbb031
            {<point name="construct.c.page1.ecbb031" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb032
            #add-point:BEFORE FIELD ecbb032
            {<point name="construct.b.page1.ecbb032" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb032
            
            #add-point:AFTER FIELD ecbb032
            {<point name="construct.a.page1.ecbb032" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb032
         ON ACTION controlp INFIELD ecbb032
            #add-point:ON ACTION controlp INFIELD ecbb032
            {<point name="construct.c.page1.ecbb032" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.ecbb021
         ON ACTION controlp INFIELD ecbb021
            #add-point:ON ACTION controlp INFIELD ecbb021
            {<point name="construct.c.page1.ecbb021" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb021
            #add-point:BEFORE FIELD ecbb021
            {<point name="construct.b.page1.ecbb021" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb021
            
            #add-point:AFTER FIELD ecbb021
            {<point name="construct.a.page1.ecbb021" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb022
            #add-point:BEFORE FIELD ecbb022
            {<point name="construct.b.page1.ecbb022" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb022
            
            #add-point:AFTER FIELD ecbb022
            {<point name="construct.a.page1.ecbb022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb022
         ON ACTION controlp INFIELD ecbb022
            #add-point:ON ACTION controlp INFIELD ecbb022
            {<point name="construct.c.page1.ecbb022" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb023
            #add-point:BEFORE FIELD ecbb023
            {<point name="construct.b.page1.ecbb023" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb023
            
            #add-point:AFTER FIELD ecbb023
            {<point name="construct.a.page1.ecbb023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb023
         ON ACTION controlp INFIELD ecbb023
            #add-point:ON ACTION controlp INFIELD ecbb023
            {<point name="construct.c.page1.ecbb023" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb033
            #add-point:BEFORE FIELD ecbb033
            {<point name="construct.b.page1.ecbb033" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb033
            
            #add-point:AFTER FIELD ecbb033
            {<point name="construct.a.page1.ecbb033" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb033
         ON ACTION controlp INFIELD ecbb033
            #add-point:ON ACTION controlp INFIELD ecbb033
            {<point name="construct.c.page1.ecbb033" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb028
            #add-point:BEFORE FIELD ecbb028
            {<point name="construct.b.page1.ecbb028" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb028
            
            #add-point:AFTER FIELD ecbb028
            {<point name="construct.a.page1.ecbb028" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb028
         ON ACTION controlp INFIELD ecbb028
            #add-point:ON ACTION controlp INFIELD ecbb028
            {<point name="construct.c.page1.ecbb028" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb029
            #add-point:BEFORE FIELD ecbb029
            {<point name="construct.b.page1.ecbb029" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb029
            
            #add-point:AFTER FIELD ecbb029
            {<point name="construct.a.page1.ecbb029" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb029
         ON ACTION controlp INFIELD ecbb029
            #add-point:ON ACTION controlp INFIELD ecbb029
            {<point name="construct.c.page1.ecbb029" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb035
            #add-point:BEFORE FIELD ecbb035
            {<point name="construct.b.page1.ecbb035" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb035
            
            #add-point:AFTER FIELD ecbb035
            {<point name="construct.a.page1.ecbb035" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb035
         ON ACTION controlp INFIELD ecbb035
            #add-point:ON ACTION controlp INFIELD ecbb035
            {<point name="construct.c.page1.ecbb035" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb036
            #add-point:BEFORE FIELD ecbb036
            {<point name="construct.b.page1.ecbb036" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb036
            
            #add-point:AFTER FIELD ecbb036
            {<point name="construct.a.page1.ecbb036" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ecbb036
         ON ACTION controlp INFIELD ecbb036
            #add-point:ON ACTION controlp INFIELD ecbb036
            {<point name="construct.c.page1.ecbb036" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ooff013
            #add-point:BEFORE FIELD ooff013
            {<point name="construct.b.page1.ooff013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ooff013
            
            #add-point:AFTER FIELD ooff013
            {<point name="construct.a.page1.ooff013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ooff013
         ON ACTION controlp INFIELD ooff013
            #add-point:ON ACTION controlp INFIELD ooff013
            {<point name="construct.c.page1.ooff013" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION

{</section>}

{<section id="aecm200.filter" >}
#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aecm200_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON ecba001,ecba002,ecba003
                          FROM s_browse[1].b_ecba001,s_browse[1].b_ecba002,s_browse[1].b_ecba003
 
         BEFORE CONSTRUCT
               DISPLAY aecm200_filter_parser('ecba001') TO s_browse[1].b_ecba001
            DISPLAY aecm200_filter_parser('ecba002') TO s_browse[1].b_ecba002
            DISPLAY aecm200_filter_parser('ecba003') TO s_browse[1].b_ecba003
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aecm200_filter_show('ecba001')
   CALL aecm200_filter_show('ecba002')
   CALL aecm200_filter_show('ecba003')
 
END FUNCTION

{</section>}

{<section id="aecm200.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION aecm200_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION

{</section>}

{<section id="aecm200.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION aecm200_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aecm200_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION

{</section>}

{<section id="aecm200.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aecm200_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_ecbb_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aecm200_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aecm200_browser_fill("")
      CALL aecm200_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aecm200_filter_show('ecba001')
   CALL aecm200_filter_show('ecba002')
   CALL aecm200_filter_show('ecba003')
   CALL aecm200_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   ELSE
      CALL aecm200_fetch("F") 
   END IF
 
END FUNCTION

{</section>}

{<section id="aecm200.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aecm200_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
{<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_ecba_m.ecba001 = g_browser[g_current_idx].b_ecba001
   LET g_ecba_m.ecba002 = g_browser[g_current_idx].b_ecba002
 
   
   #重讀DB,因TEMP有不被更新特性
   #EXECUTE aecm200_master_referesh USING g_ecba_m.ecba001,g_ecba_m.ecba002 INTO g_ecba_m.ecba001,g_ecba_m.ecba002,   #160707-00040#1 mark 
   EXECUTE aecm200_master_referesh USING g_site,g_ecba_m.ecba001,g_ecba_m.ecba002 INTO g_ecba_m.ecba001,g_ecba_m.ecba002,   #160707-00040#1  
       g_ecba_m.ecba003,g_ecba_m.ecba004,g_ecba_m.ecba005,g_ecba_m.ecba006,g_ecba_m.ecba007,g_ecba_m.ecbastus, 
       g_ecba_m.ecbacrtid,g_ecba_m.ecbacrtdp,g_ecba_m.ecbacrtdt,g_ecba_m.ecbaownid,g_ecba_m.ecbaowndp, 
       g_ecba_m.ecbamodid,g_ecba_m.ecbamoddt,g_ecba_m.ecbacnfid,g_ecba_m.ecbacnfdt,g_ecba_m.ecbacrtid_desc, 
       g_ecba_m.ecbacrtdp_desc,g_ecba_m.ecbaownid_desc,g_ecba_m.ecbaowndp_desc,g_ecba_m.ecbamodid_desc, 
       g_ecba_m.ecbacnfid_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "ecba_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      INITIALIZE g_ecba_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
{<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
{<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_ecba_m_t.* = g_ecba_m.*
   LET g_ecba_m_o.* = g_ecba_m.*
   
   LET g_data_owner = g_ecba_m.ecbaownid      
   LET g_data_dept  = g_ecba_m.ecbaowndp
   
   #重新顯示   
   CALL aecm200_show()
 
   #CALL aecm200_06(g_ecbb_d,g_ecba_m.*)  #wuxja
   IF NOT cl_null(p_flag) THEN
      CALL aecm200_wc_gen_flow_json(FALSE)
   END IF
END FUNCTION

{</section>}

{<section id="aecm200.insert" >}
#+ 資料新增
PRIVATE FUNCTION aecm200_insert()
   #add-point:insert段define
{<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_ecbb_d.clear()  
   CALL g_ecbb2_d.clear() 
   CALL g_ecbb3_d.clear() 
   CALL g_ecbb4_d.clear() 
 
 
   INITIALIZE g_ecba_m.* LIKE ecba_t.*             #DEFAULT 設定
   
   LET g_ecba001_t = NULL
   LET g_ecba002_t = NULL
 
   
   LET g_master_insert = FALSE
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      #公用欄位新增給值
      LET g_ecba_m.ecbaownid = g_user
      LET g_ecba_m.ecbaowndp = g_dept
      LET g_ecba_m.ecbacrtid = g_user
      LET g_ecba_m.ecbacrtdp = g_dept 
      LET g_ecba_m.ecbacrtdt = cl_get_current()
      LET g_ecba_m.ecbamodid = ""
      LET g_ecba_m.ecbamoddt = ""
      LET g_ecba_m.ecbastus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_ecba_m.ecbastus = "N"
 
  
      #add-point:單頭預設值
{<point name="insert.default"/>}
      #end add-point 
      
      #顯示狀態(stus)圖片
    
      CALL aecm200_input("a")
      
      #add-point:單頭輸入後
{<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_ecba_m.* TO NULL
         INITIALIZE g_ecbb_d TO NULL
 
         CALL aecm200_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_ecbb_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_ecba001_t = g_ecba_m.ecba001
   LET g_ecba002_t = g_ecba_m.ecba002
   
   LET g_current_idx = g_browser.getLength() + 1
   LET g_browser[g_current_idx].b_ecba001 = g_ecba_m.ecba001
   LET g_browser[g_current_idx].b_ecba002 = g_ecba_m.ecba002
 
   
   LET g_detail_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
   
   LET g_wc = "(",g_wc,  
              " OR ( ecbaent = '" ||g_enterprise|| "' AND ecbasite = '" ||g_site|| "' AND",
              " ecba001 = '", g_ecba_m.ecba001 CLIPPED, "' "
              ," AND ecba002 = '", g_ecba_m.ecba002 CLIPPED, "' "
 
              , ")) "
   
   CLOSE aecm200_cl
   
   CALL aecm200_idx_chk()
   
END FUNCTION

{</section>}

{<section id="aecm200.modify" >}
#+ 資料修改
PRIVATE FUNCTION aecm200_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
{<point name="modify.define"/>}
   #end add-point    
   
   IF g_ecba_m.ecba001 IS NULL
   OR g_ecba_m.ecba002 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
 
   #wuxja add
   #EXECUTE aecm200_master_referesh USING g_ecba_m.ecba001,g_ecba_m.ecba002 INTO g_ecba_m.ecba001,g_ecba_m.ecba002,   #160707-00040#1 mark
   EXECUTE aecm200_master_referesh USING g_site,g_ecba_m.ecba001,g_ecba_m.ecba002 INTO g_ecba_m.ecba001,g_ecba_m.ecba002,   #160707-00040#1 
       g_ecba_m.ecba003,g_ecba_m.ecba004,g_ecba_m.ecba005,g_ecba_m.ecba006,g_ecba_m.ecba007,g_ecba_m.ecbastus,g_ecba_m.ecbacrtid,g_ecba_m.ecbacrtdp,g_ecba_m.ecbacrtdt,g_ecba_m.ecbaownid,
       g_ecba_m.ecbaowndp,g_ecba_m.ecbamodid,g_ecba_m.ecbamoddt,g_ecba_m.ecbacnfid,g_ecba_m.ecbacnfdt

   #CALL cl_chart_property_comp("wc", "modify" , "1")
   #end
   
   ERROR ""
  
   LET g_ecba001_t = g_ecba_m.ecba001
   LET g_ecba002_t = g_ecba_m.ecba002
 
   CALL s_transaction_begin()
   
   OPEN aecm200_cl USING g_enterprise, g_site,g_ecba_m.ecba001,g_ecba_m.ecba002
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aecm200_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      CLOSE aecm200_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   #EXECUTE aecm200_master_referesh USING g_ecba_m.ecba001,g_ecba_m.ecba002 INTO g_ecba_m.ecba001,g_ecba_m.ecba002,  #160707-00040#1 mark 
   EXECUTE aecm200_master_referesh USING g_site,g_ecba_m.ecba001,g_ecba_m.ecba002 INTO g_ecba_m.ecba001,g_ecba_m.ecba002,  #160707-00040#1  
       g_ecba_m.ecba003,g_ecba_m.ecba004,g_ecba_m.ecba005,g_ecba_m.ecba006,g_ecba_m.ecba007,g_ecba_m.ecbastus, 
       g_ecba_m.ecbacrtid,g_ecba_m.ecbacrtdp,g_ecba_m.ecbacrtdt,g_ecba_m.ecbaownid,g_ecba_m.ecbaowndp, 
       g_ecba_m.ecbamodid,g_ecba_m.ecbamoddt,g_ecba_m.ecbacnfid,g_ecba_m.ecbacnfdt,g_ecba_m.ecbacrtid_desc, 
       g_ecba_m.ecbacrtdp_desc,g_ecba_m.ecbaownid_desc,g_ecba_m.ecbaowndp_desc,g_ecba_m.ecbamodid_desc, 
       g_ecba_m.ecbacnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_ecba_m.ecba001 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      CLOSE aecm200_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
{<point name="modify.before_show"/>}
   #end add-point  
   
   CALL aecm200_show()
   WHILE TRUE
      LET g_ecba001_t = g_ecba_m.ecba001
      LET g_ecba002_t = g_ecba_m.ecba002
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_ecba_m.ecbamodid = g_user 
LET g_ecba_m.ecbamoddt = cl_get_current()
 
      
      #add-point:modify段修改前
{<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL aecm200_input("u")
 
      #add-point:modify段修改後
{<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_ecba_m.* = g_ecba_m_t.*
         CALL aecm200_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE ecba_t SET (ecbamodid,ecbamoddt) = (g_ecba_m.ecbamodid,g_ecba_m.ecbamoddt)
       WHERE ecbaent = g_enterprise AND ecbasite = g_site AND ecba001 = g_ecba001_t
         AND ecba002 = g_ecba002_t
 
                  
      #若單頭key欄位有變更
      IF g_ecba_m.ecba001 != g_ecba001_t 
      OR g_ecba_m.ecba002 != g_ecba002_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
{<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE ecbb_t SET ecbb001 = g_ecba_m.ecba001
                                       ,ecbb002 = g_ecba_m.ecba002
 
          WHERE ecbbent = g_enterprise AND ecbbsite = g_site AND ecbb001 = g_ecba001_t
            AND ecbb002 = g_ecba002_t
 
            
         #add-point:單身fk修改中
{<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "ecbb_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "ecbb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
{<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_ecba_m.ecba001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE aecm200_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_ecba_m.ecba001,'U')
 
END FUNCTION   

{</section>}

{<section id="aecm200.input" >}
#+ 資料輸入
PRIVATE FUNCTION aecm200_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
{<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
{<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT ecbb003,ecbb004,ecbb005,ecbb006,ecbb007,ecbb008,ecbb009,ecbb010,ecbb011, 
       ecbb012,ecbb037,ecbb038,ecbb024,ecbb025,ecbb026,ecbb027,ecbb034,ecbb013,ecbb014,ecbb015,ecbb016,ecbb017,ecbb018, 
       ecbb019,ecbb020,ecbb030,ecbb031,ecbb032,ecbb021,ecbb022,ecbb023,ecbb033,ecbb028,ecbb029,ecbb035, 
       ecbb036 FROM ecbb_t WHERE ecbbent=? AND ecbbsite=? AND ecbb001=? AND ecbb002=? AND ecbb003=?  
       FOR UPDATE"
   #add-point:input段define_sql
{<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aecm200_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
{<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aecm200_set_entry(p_cmd)
   #add-point:set_entry後
{<point name="input.after_set_entry"/>}
   #end add-point
   CALL aecm200_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_ecba_m.ecba001,g_ecba_m.ecba002,g_ecba_m.ecba003,g_ecba_m.ecba004,g_ecba_m.ecba005, 
       g_ecba_m.ecba006,g_ecba_m.ecba007,g_ecba_m.ecbastus,g_ecba_m.ooeb013
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
{<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   

{</section>}

{<section id="aecm200.input.head" >}
      #單頭段
      INPUT BY NAME g_ecba_m.ecba001,g_ecba_m.ecba002,g_ecba_m.ecba003,g_ecba_m.ecba004,g_ecba_m.ecba005, 
          g_ecba_m.ecba006,g_ecba_m.ecba007,g_ecba_m.ecbastus,g_ecba_m.ooeb013,wc
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
#刪除節點
         #如果是新增狀態，直接結果單頭新增
         BEFORE FIELD wc
         
         ON ACTION wc_delete_node
            
            LET l_json_obj = util.JSONObject.parse(wc)
            CALL aecm200_wc_parse_id(l_json_obj.get("id")) RETURNING l_ecbb004, l_ecbb005
            LET l_json_params = l_json_obj.get("params")
            LET l_ecbb003 = l_json_params.get("ecbb003")
            IF cl_null(l_ecbb003)  THEN
               CONTINUE DIALOG
            END IF
            CALL s_transaction_begin()
            
            IF l_ecbb004 != "INIT" AND l_ecbb004 != "END" THEN
               DELETE FROM ecbb_t 
                   WHERE ecbbent  = g_enterprise 
                      AND ecbbsite = g_site
                      AND ecbb001  = g_ecba_m.ecba001
                      AND ecbb002  = g_ecba_m.ecba002
                      AND ecbb003  = l_ecbb003
                      AND ecbb004  = l_ecbb004
                      AND ecbb005  = l_ecbb005
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = 'delete ecbb_t:' 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
            END IF
            
            
            #更新相關工作站的上站
            UPDATE ecbb_t SET ecbb008 = NULL, ecbb009 = NULL
                 WHERE ecbbent  = g_enterprise 
                   AND ecbbsite = g_site
                   AND ecbb001  = g_ecba_m.ecba001
                   AND ecbb002  = g_ecba_m.ecba002
                   AND ecbb008  = l_ecbb004
                   AND ecbb009  = l_ecbb005
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'update ecbb_t:' 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE DIALOG
            END IF
            
            #更新相關工作站的下站
            UPDATE ecbb_t SET ecbb010 = NULL, ecbb011 = NULL
                WHERE ecbbent = g_enterprise
                  AND ecbbsite = g_site
                  AND ecbb001 = g_ecba_m.ecba001
                  AND ecbb002 = g_ecba_m.ecba002
                  AND ecbb010 = l_ecbb004
                  AND ecbb011 = l_ecbb005
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'update ecbb_t:' 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE DIALOG
            END IF
            
            #刪除上站資料
            DELETE FROM ecbe_t
              WHERE ecbeent = g_enterprise 
                AND ecbesite = g_site 
                AND ecbe001 = g_ecba_m.ecba001 
                AND ecbe002 = g_ecba_m.ecba002 
                AND ecbe003 = l_ecbb003
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "ecbe_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                CALL s_transaction_end('N','0')
                CONTINUE DIALOG
             END IF
 
             DELETE FROM ecbf_t
              WHERE ecbfent = g_enterprise 
                AND ecbfsite = g_site 
                AND ecbf001 = g_ecba_m.ecba001 
                AND ecbf002 = g_ecba_m.ecba002 
                AND ecbf003 = l_ecbb003
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "ecbf_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                CALL s_transaction_end('N','0')
                CONTINUE DIALOG  
             END IF
             
             DELETE FROM ecbg_t
              WHERE ecbgent = g_enterprise 
                AND ecbgsite = g_site 
                AND ecbg001 = g_ecba_m.ecba001 
                AND ecbg002 = g_ecba_m.ecba002 
                AND ecbg003 = l_ecbb003
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "ecbg_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                CALL s_transaction_end('N','0')
                CONTINUE DIALOG
             END IF
             CALL s_transaction_end('Y','0')
             
         ON ACTION wc_init_finish
            IF l_cmd_t == "a" THEN
               NEXT FIELD ecba001
            END IF
         
         ON ACTION wc_flow_init
            CALL aecm200_wc_init(TRUE)
         
         #刪除群組
         ON ACTION wc_delete_group
            INITIALIZE l_group TO NULL
            
            LET l_ecbb007 = wc
            
            CALL s_transaction_begin()
            UPDATE ecbb_t SET ecbb006 = 1, ecbb007 = NULL
                WHERE ecbbent = g_enterprise
                  AND ecbbsite = g_site
                  AND ecbb001 = g_ecba_m.ecba001
                  AND ecbb002 = g_ecba_m.ecba002
                  AND ecbb006 = l_ecbb006
 
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'update ecbb_t:' 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE DIALOG
            END IF
            CALL s_transaction_end('Y','0')
 
            
         #新增群組
         ON ACTION wc_add_group
            LET l_json_obj = util.JSONObject.parse(wc)
            
         #新增節點
         ON ACTION wc_add_node 
            LET l_json_obj = util.JSONObject.parse(wc)
 
            #已經有存在INIT或END節點時，就取消新增
            IF l_json_obj.get("label") == "INIT" OR l_json_obj.get("label") == "END" THEN
            #   IF aecm200_wc_init_end_exist(l_json_obj.get("label")) THEN
            #       CALL aecm200_wc_submit("wc", "station_del_node", l_json_obj.get("id"))
            #   ELSE 
                 INITIALIZE l_json_upd TO NULL
                 LET l_json_upd.old_id = l_json_obj.get("id")
                 LET l_json_upd.new_id = l_json_obj.get("label")
                 LET l_json_upd.new_label = l_json_obj.get("label")
                 LET l_json_upd.new_desc = NULL
                 #20101113 by wuxja  add  --begin--
                 IF l_json_obj.get("label") == "INIT" THEN
                    LET g_ecba_m.ecba004 = l_json_obj.get("left")
                    LET g_ecba_m.ecba005 = l_json_obj.get("top")
                 END IF
                 IF l_json_obj.get("label") == "END" THEN
                    LET g_ecba_m.ecba006 = l_json_obj.get("left")
                    LET g_ecba_m.ecba007 = l_json_obj.get("top")
                 END IF
                 #20151113 by wuxja  add  --end--
                 CALL aecm200_wc_submit("wc","station_update_node",util.JSON.stringify(l_json_upd))  
            #   END IF
            ELSE
               #初始化一筆ecbb_t.*
               CALL aecm200_wc_add_node(l_json_obj) RETURNING l_ecbb.*
               
               #如果沒有選擇ecbb004，則刪除使用者自己新增的節點
               IF cl_null(l_ecbb.ecbb004) THEN
                  CALL aecm200_wc_submit("wc", "station_del_node", l_json_obj.get("id"))
                  CONTINUE DIALOG
               END IF
               
               #WebComponent會自行先建立id，所以選擇了ecbb004之後通知WebComponent更新id
               LET l_seq = l_ecbb.ecbb005   
               LET l_ecbb.ecbb005 = l_seq   
               INITIALIZE l_json_upd TO NULL            
               LET l_json_upd.old_id = l_json_obj.get("id")
               LET l_json_upd.new_id = SFMT("%1__%2", l_ecbb.ecbb004 CLIPPED,l_seq CLIPPED)
               LET l_json_upd.new_label = g_rtn_fields[1]
               LET l_json_upd.new_desc = l_ecbb.ecbb004
               LET l_json_upd.params.ecbb003 = l_ecbb.ecbb003               
               CALL aecm200_wc_submit("wc","station_update_node",util.JSON.stringify(l_json_upd))  
               
               INSERT INTO ecbb_t VALUES(l_ecbb.*)
               CALL aecm200_b_fill()
            END IF            
 
         #新增連結線
         ON ACTION wc_add_connect
 
            #新增狀態下，直接更新db
            #160728-00002 by whitney mark start
            #CALL s_transaction_begin()
            #IF l_cmd_t == "a" THEN
            #160728-00002 by whitney mark end
               #20151111 by wuxja add   --begin--
               #初始化变量
               LET l_ecbb008 = ''
               LET l_ecbb009 = ''
               LET l_ecbb004 = ''
               LET l_ecbb005 = ''
               LET l_ecbb003 = ''
               LET l_ecbeseq = ''
               #20151111 by wuxja add   --end--
               LET l_json_obj = util.JSONObject.parse(wc)
               CALL aecm200_wc_parse_id(l_json_obj.get("sourceId")) RETURNING l_ecbb008, l_ecbb009
               CALL aecm200_wc_parse_id(l_json_obj.get("targetId")) RETURNING l_ecbb004, l_ecbb005
               SELECT ecbb003 INTO l_ecbb003 FROM ecbb_t
                  WHERE ecbbent = g_enterprise
                    AND ecbbsite = g_site
                    AND ecbb001 = g_ecba_m.ecba001
                    AND ecbb002 = g_ecba_m.ecba002
                    AND ecbb004 = l_ecbb004
                    AND ecbb005 = l_ecbb005
               IF NOT cl_null(l_ecbb003) THEN   #20151111 by wuxja add
                  SELECT COUNT(*) + 1 INTO l_ecbeseq FROM ecbe_t 
                     WHERE ecbeent = g_enterprise
                       AND ecbesite = g_site
                       AND ecbe001 = g_ecba_m.ecba001
                       AND ecbe002 = g_ecba_m.ecba002
                       AND ecbe003 = l_ecbb003
                  INSERT INTO ecbe_t (ecbeent,ecbesite,ecbe001,ecbe002,ecbe003,ecbeseq,ecbe004,ecbe005)
                     VALUES (g_enterprise, g_site, g_ecba_m.ecba001, g_ecba_m.ecba002, l_ecbb003, l_ecbeseq, l_ecbb008, l_ecbb009)
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = 'insert ecbe_t:' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     CONTINUE DIALOG
                  END IF
                  IF l_ecbeseq > 1 THEN
                     UPDATE ecbb_t SET ecbb008 = 'MULT' , ecbb009 = 0
                        WHERE ecbbent = g_enterprise
                          AND ecbbsite = g_site
                          AND ecbb001 = g_ecba_m.ecba001
                          AND ecbb002 = g_ecba_m.ecba002
                          AND ecbb003 = l_ecbb003
                          AND ecbb004 = l_ecbb004
                          AND ecbb005 = l_ecbb005
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = 'update ecbb_t:' 
                        LET g_errparam.code   = SQLCA.sqlcode 
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                        CALL s_transaction_end('N','0')
                        CONTINUE DIALOG
                     END IF
                  ELSE
                     UPDATE ecbb_t SET ecbb008 = l_ecbb008 , ecbb009 = l_ecbb009
                        WHERE ecbbent = g_enterprise
                          AND ecbbsite = g_site
                          AND ecbb001 = g_ecba_m.ecba001
                          AND ecbb002 = g_ecba_m.ecba002
                          AND ecbb003 = l_ecbb003
                          AND ecbb004 = l_ecbb004
                          AND ecbb005 = l_ecbb005
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = 'update ecbb_t:' 
                        LET g_errparam.code   = SQLCA.sqlcode 
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                        CALL s_transaction_end('N','0')
                        CONTINUE DIALOG
                     END IF
                  END IF
                  #20151112 by wuxja add  --begin--
                  IF NOT aecm200_return_ecbb_mult() THEN
                     CALL s_transaction_end('N','0')
                  END IF
                  #20151112 by wuxja add  --end--
               END IF   #20151111 by wuxja  add 
            #160728-00002 by whitney mark start
            #END IF
            #CALL s_transaction_end('Y',0)
            #160728-00002 by whitney mark end
            
         #刪除連結線
         ON ACTION wc_del_connect
 
            #新增狀態下，直接更新db
            #160728-00002 by whitney mark start
            #CALL s_transaction_begin()
            #IF l_cmd_t == "a" THEN
            #160728-00002 by whitney mark end
               LET l_json_obj = util.JSONObject.parse(wc)
               CALL aecm200_wc_parse_id(l_json_obj.get("sourceId")) RETURNING l_ecbb008, l_ecbb009
               CALL aecm200_wc_parse_id(l_json_obj.get("targetId")) RETURNING l_ecbb004, l_ecbb005
               SELECT ecbb003 INTO l_ecbb003 FROM ecbb_t
                  WHERE ecbbent = g_enterprise
                    AND ecbbsite = g_site
                    AND ecbb001 = g_ecba_m.ecba001
                    AND ecbb002 = g_ecba_m.ecba002
                    AND ecbb004 = l_ecbb004
                    AND ecbb005 = l_ecbb005
               DELETE FROM ecbe_t 
                  WHERE ecbeent = g_enterprise
                    AND ecbesite = g_site                
                    AND ecbe001 = g_ecba_m.ecba001                
                    AND ecbe002 = g_ecba_m.ecba002                
                    AND ecbe003 = l_ecbb003                
                    AND ecbe004 = l_ecbb008                
                    AND ecbe005 = l_ecbb009                
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = 'delete ecbb_t:' 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               SELECT COUNT(*) INTO l_ecbeseq FROM ecbe_t 
                  WHERE ecbeent = g_enterprise
                    AND ecbesite = g_site
                    AND ecbe001 = g_ecba_m.ecba001
                    AND ecbe002 = g_ecba_m.ecba002
                    AND ecbe003 = l_ecbb003
               IF l_ecbeseq == 1 THEN
                  SELECT ecbe004, ecbe005 INTO l_ecbe004, l_ecbe005 FROM ecbe_t
                     WHERE ecbeent = g_enterprise
                       AND ecbesite = g_site
                       AND ecbe001 = g_ecba_m.ecba001
                       AND ecbe002 = g_ecba_m.ecba002
                       AND ecbe003 = l_ecbb003
                  UPDATE ecbb_t SET ecbb008 = l_ecbe004 , ecbb009 = l_ecbe005
                     WHERE ecbbent = g_enterprise
                       AND ecbbsite = g_site
                       AND ecbb001 = g_ecba_m.ecba001
                       AND ecbb002 = g_ecba_m.ecba002
                       AND ecbb003 = l_ecbb003
                       AND ecbb004 = l_ecbb004
                       AND ecbb005 = l_ecbb005
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = 'delete ecbb_t:' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     CONTINUE DIALOG
                  END IF
               END IF
               IF l_ecbeseq == 0 THEN
                  UPDATE ecbb_t SET ecbb008 = NULL , ecbb009 = NULL
                     WHERE ecbbent = g_enterprise
                       AND ecbbsite = g_site
                       AND ecbb001 = g_ecba_m.ecba001
                       AND ecbb002 = g_ecba_m.ecba002
                       AND ecbb003 = l_ecbb003
                       AND ecbb004 = l_ecbb004
                       AND ecbb005 = l_ecbb005
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = 'delete ecbb_t:' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     CONTINUE DIALOG
                  END IF
               END IF
            #160728-00002 by whitney mark start
            #END IF
            #CALL s_transaction_end('Y',0)
            #160728-00002 by whitney mark end
            
         #更新坐標
         ON ACTION wc_position
            IF p_cmd != "a" THEN
               CALL aecm200_wc_update_pos(wc)
            END IF
         
         #重新選擇工作站         
         ON ACTION wc_edit_node
            IF NOT cl_null(wc) THEN
               CALL aecm200_wc_edit_node(wc)
            END IF
            
         ON ACTION wc_select_node
            CALL aecm200_wc_parse_id(wc) RETURNING l_ecbb004, l_ecbb005
            LET l_ac = aecm200_arr_curr(l_ecbb004, l_ecbb005)
            CALL DIALOG.setCurrentRow("s_detail1", l_ac)
            CALL aecm200_b_fill_value(l_ecbb004, l_ecbb005)
         #WebComponent回傳資料，更新製程圖
         ON ACTION wc_get_data
            CALL aecm200_wc_save_data(wc)
            accept dialog
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
{<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD ecba001
            
            #add-point:AFTER FIELD ecba001
{<point name="input.a.ecba001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecba001
            #add-point:BEFORE FIELD ecba001
{<point name="input.b.ecba001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecba001
            #add-point:ON CHANGE ecba001
{<point name="input.g.ecba001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecba002
            #add-point:BEFORE FIELD ecba002
{<point name="input.b.ecba002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecba002
            
            #add-point:AFTER FIELD ecba002
{<point name="input.a.ecba002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecba002
            #add-point:ON CHANGE ecba002
{<point name="input.g.ecba002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecba003
            #add-point:BEFORE FIELD ecba003
{<point name="input.b.ecba003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecba003
            
            #add-point:AFTER FIELD ecba003
{<point name="input.a.ecba003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecba003
            #add-point:ON CHANGE ecba003
{<point name="input.g.ecba003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecba004
            #add-point:BEFORE FIELD ecba004
{<point name="input.b.ecba004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecba004
            
            #add-point:AFTER FIELD ecba004
{<point name="input.a.ecba004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecba004
            #add-point:ON CHANGE ecba004
{<point name="input.g.ecba004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecba005
            #add-point:BEFORE FIELD ecba005
{<point name="input.b.ecba005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecba005
            
            #add-point:AFTER FIELD ecba005
{<point name="input.a.ecba005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecba005
            #add-point:ON CHANGE ecba005
{<point name="input.g.ecba005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecba006
            #add-point:BEFORE FIELD ecba006
{<point name="input.b.ecba006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecba006
            
            #add-point:AFTER FIELD ecba006
{<point name="input.a.ecba006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecba006
            #add-point:ON CHANGE ecba006
{<point name="input.g.ecba006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecba007
            #add-point:BEFORE FIELD ecba007
{<point name="input.b.ecba007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecba007
            
            #add-point:AFTER FIELD ecba007
{<point name="input.a.ecba007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecba007
            #add-point:ON CHANGE ecba007
{<point name="input.g.ecba007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbastus
            #add-point:BEFORE FIELD ecbastus
{<point name="input.b.ecbastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbastus
            
            #add-point:AFTER FIELD ecbastus
{<point name="input.a.ecbastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecbastus
            #add-point:ON CHANGE ecbastus
{<point name="input.g.ecbastus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ooeb013
            #add-point:BEFORE FIELD ooeb013
{<point name="input.b.ooeb013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ooeb013
            
            #add-point:AFTER FIELD ooeb013
{<point name="input.a.ooeb013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ooeb013
            #add-point:ON CHANGE ooeb013
{<point name="input.g.ooeb013" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.ecba001
         ON ACTION controlp INFIELD ecba001
            #add-point:ON ACTION controlp INFIELD ecba001
{<point name="input.c.ecba001" />}
            #END add-point
 
         #Ctrlp:input.c.ecba002
         ON ACTION controlp INFIELD ecba002
            #add-point:ON ACTION controlp INFIELD ecba002
{<point name="input.c.ecba002" />}
            #END add-point
 
         #Ctrlp:input.c.ecba003
         ON ACTION controlp INFIELD ecba003
            #add-point:ON ACTION controlp INFIELD ecba003
{<point name="input.c.ecba003" />}
            #END add-point
 
         #Ctrlp:input.c.ecba004
         ON ACTION controlp INFIELD ecba004
            #add-point:ON ACTION controlp INFIELD ecba004
{<point name="input.c.ecba004" />}
            #END add-point
 
         #Ctrlp:input.c.ecba005
         ON ACTION controlp INFIELD ecba005
            #add-point:ON ACTION controlp INFIELD ecba005
{<point name="input.c.ecba005" />}
            #END add-point
 
         #Ctrlp:input.c.ecba006
         ON ACTION controlp INFIELD ecba006
            #add-point:ON ACTION controlp INFIELD ecba006
{<point name="input.c.ecba006" />}
            #END add-point
 
         #Ctrlp:input.c.ecba007
         ON ACTION controlp INFIELD ecba007
            #add-point:ON ACTION controlp INFIELD ecba007
{<point name="input.c.ecba007" />}
            #END add-point
 
         #Ctrlp:input.c.ecbastus
         ON ACTION controlp INFIELD ecbastus
            #add-point:ON ACTION controlp INFIELD ecbastus
{<point name="input.c.ecbastus" />}
            #END add-point
 
         #Ctrlp:input.c.ooeb013
         ON ACTION controlp INFIELD ooeb013
            #add-point:ON ACTION controlp INFIELD ooeb013
{<point name="input.c.ooeb013" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            CALL cl_showmsg()
            DISPLAY BY NAME g_ecba_m.ecba001,g_ecba_m.ecba002
                        
            #add-point:單頭INPUT後
{<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
{<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO ecba_t (ecbaent, ecbasite,ecba001,ecba002,ecba003,ecba004,ecba005,ecba006, 
                   ecba007,ecbastus,ecbacrtid,ecbacrtdp,ecbacrtdt,ecbaownid,ecbaowndp,ecbacnfid,ecbacnfdt) 

               VALUES (g_enterprise, g_site,g_ecba_m.ecba001,g_ecba_m.ecba002,g_ecba_m.ecba003,g_ecba_m.ecba004, 
                   g_ecba_m.ecba005,g_ecba_m.ecba006,g_ecba_m.ecba007,g_ecba_m.ecbastus,g_ecba_m.ecbacrtid, 
                   g_ecba_m.ecbacrtdp,g_ecba_m.ecbacrtdt,g_ecba_m.ecbaownid,g_ecba_m.ecbaowndp,g_ecba_m.ecbacnfid, 
                   g_ecba_m.ecbacnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_ecba_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
{<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
{<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aecm200_detail_reproduce()
               END IF
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
{<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE ecba_t SET (ecba001,ecba002,ecba003,ecbastus,ecbacrtid, 
                   ecbacrtdp,ecbacrtdt,ecbaownid,ecbaowndp,ecbacnfid,ecbacnfdt) = (g_ecba_m.ecba001, 
                   g_ecba_m.ecba002,g_ecba_m.ecba003,g_ecba_m.ecbastus,g_ecba_m.ecbacrtid,
                   g_ecba_m.ecbacrtdp,g_ecba_m.ecbacrtdt, 
                   g_ecba_m.ecbaownid,g_ecba_m.ecbaowndp,g_ecba_m.ecbacnfid,g_ecba_m.ecbacnfdt)
                WHERE ecbaent = g_enterprise AND ecbasite = g_site AND ecba001 = g_ecba001_t
                  AND ecba002 = g_ecba002_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "ecba_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
{<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_ecba_m_t)
               LET g_log2 = util.JSON.stringify(g_ecba_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
{<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_ecba001_t = g_ecba_m.ecba001
            LET g_ecba002_t = g_ecba_m.ecba002
 
            
      END INPUT
   

{</section>}

{<section id="aecm200.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_ecbb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
            
         #+ 此段落由子樣板a43產生
         ON ACTION checkout
            LET g_action_choice="checkout"
            IF cl_auth_chk_act("checkout") THEN
               
               #add-point:ON ACTION checkout
{<point name="input.detail_input.page1.checkout" />}
               #END add-point
            END IF
 
 
         #+ 此段落由子樣板a43產生
        ON ACTION resource
          LET g_action_choice="resource"
          IF cl_auth_chk_act("resource") THEN
             
             #add-point:ON ACTION resource
{<point name="input.detail_input.page1.resource" />}
             #END add-point
          END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION stand
            LET g_action_choice="stand"
            IF cl_auth_chk_act("stand") THEN
               
               #add-point:ON ACTION stand
{<point name="input.detail_input.page1.stand" />}
               #END add-point
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION checkin
            LET g_action_choice="checkin"
            IF cl_auth_chk_act("checkin") THEN
               
               #add-point:ON ACTION checkin
{<point name="input.detail_input.page1.checkin" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            #add-point:資料輸入前
{<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_ecbb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aecm200_b_fill()
            LET g_rec_b = g_ecbb_d.getLength()
            #add-point:資料輸入前
{<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
{<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aecm200_cl USING g_enterprise, g_site,g_ecba_m.ecba001,g_ecba_m.ecba002
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aecm200_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CLOSE aecm200_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_ecbb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_ecbb_d[l_ac].ecbb003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_ecbb_d_t.* = g_ecbb_d[l_ac].*  #BACKUP
               LET g_ecbb_d_o.* = g_ecbb_d[l_ac].*  #BACKUP
               CALL aecm200_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
{<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aecm200_set_no_entry_b(l_cmd)
               IF NOT aecm200_lock_b("ecbb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aecm200_bcl INTO g_ecbb_d[l_ac].ecbb003,g_ecbb_d[l_ac].ecbb004,g_ecbb_d[l_ac].ecbb005, 
                      g_ecbb_d[l_ac].ecbb006,g_ecbb_d[l_ac].ecbb007,g_ecbb_d[l_ac].ecbb008,g_ecbb_d[l_ac].ecbb009, 
                      g_ecbb_d[l_ac].ecbb010,g_ecbb_d[l_ac].ecbb011,g_ecbb_d[l_ac].ecbb012,g_ecbb_d[l_ac].ecbb037,g_ecbb_d[l_ac].ecbb038,
                      g_ecbb_d[l_ac].ecbb024,g_ecbb_d[l_ac].ecbb025,g_ecbb_d[l_ac].ecbb026,g_ecbb_d[l_ac].ecbb027,g_ecbb_d[l_ac].ecbb034, 
                      g_ecbb_d[l_ac].ecbb013,g_ecbb_d[l_ac].ecbb014,g_ecbb_d[l_ac].ecbb015,g_ecbb_d[l_ac].ecbb016, 
                      g_ecbb_d[l_ac].ecbb017,g_ecbb_d[l_ac].ecbb018,g_ecbb_d[l_ac].ecbb019,g_ecbb_d[l_ac].ecbb020, 
                      g_ecbb_d[l_ac].ecbb030,g_ecbb_d[l_ac].ecbb031,g_ecbb_d[l_ac].ecbb032,g_ecbb_d[l_ac].ecbb021, 
                      g_ecbb_d[l_ac].ecbb022,g_ecbb_d[l_ac].ecbb023,g_ecbb_d[l_ac].ecbb033,g_ecbb_d[l_ac].ecbb028, 
                      g_ecbb_d[l_ac].ecbb029,g_ecbb_d[l_ac].ecbb035,g_ecbb_d[l_ac].ecbb036
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_ecbb_d_t.ecbb003 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aecm200_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
{<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_ecbb_d[l_ac].* TO NULL 
            INITIALIZE g_ecbb_d_t.* TO NULL 
            INITIALIZE g_ecbb_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_ecbb_d[l_ac].ecbb006 = "1"
      LET g_ecbb_d[l_ac].ecbb024 = "0"
      LET g_ecbb_d[l_ac].ecbb025 = "0"
      LET g_ecbb_d[l_ac].ecbb026 = "0"
      LET g_ecbb_d[l_ac].ecbb027 = "0"
      LET g_ecbb_d[l_ac].ecbb034 = "0"
      LET g_ecbb_d[l_ac].ecbb013 = "N"
      LET g_ecbb_d[l_ac].ecbb015 = "N"
      LET g_ecbb_d[l_ac].ecbb016 = "N"
      LET g_ecbb_d[l_ac].ecbb017 = "Y"
      LET g_ecbb_d[l_ac].ecbb018 = "N"
      LET g_ecbb_d[l_ac].ecbb019 = "N"
      LET g_ecbb_d[l_ac].ecbb020 = "N"
      LET g_ecbb_d[l_ac].ecbb031 = "1"
      LET g_ecbb_d[l_ac].ecbb032 = "1"
      LET g_ecbb_d[l_ac].ecbb022 = "1"
      LET g_ecbb_d[l_ac].ecbb023 = "1"
      LET g_ecbb_d[l_ac].ecbb033 = "N"
 
            #add-point:modify段before備份
{<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_ecbb_d_t.* = g_ecbb_d[l_ac].*     #新輸入資料
            LET g_ecbb_d_o.* = g_ecbb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aecm200_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
{<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aecm200_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_ecbb_d[li_reproduce_target].* = g_ecbb_d[li_reproduce].*
 
               LET g_ecbb_d[li_reproduce_target].ecbb003 = NULL
 
            END IF
            
            #add-point:modify段before insert
{<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
{<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM ecbb_t 
             WHERE ecbbent = g_enterprise AND ecbbsite = g_site AND ecbb001 = g_ecba_m.ecba001
               AND ecbb002 = g_ecba_m.ecba002
 
               AND ecbb003 = g_ecbb_d[l_ac].ecbb003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
{<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_ecba_m.ecba001
               LET gs_keys[2] = g_ecba_m.ecba002
               LET gs_keys[3] = g_ecbb_d[g_detail_idx].ecbb003
               CALL aecm200_insert_b('ecbb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
{<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               INITIALIZE g_ecbb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "ecbb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aecm200_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
{<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
{<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM ecbb_t
                WHERE ecbbent = g_enterprise AND ecbbsite = g_site AND ecbb001 = g_ecba_m.ecba001 AND
                                          ecbb002 = g_ecba_m.ecba002 AND
 
                      ecbb003 = g_ecbb_d_t.ecbb003
 
                  
               #add-point:單身刪除中
{<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "ecbb_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
{<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aecm200_bcl
               LET l_count = g_ecbb_d.getLength()
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_ecba_m.ecba001
               LET gs_keys[2] = g_ecba_m.ecba002
               LET gs_keys[3] = g_ecbb_d[g_detail_idx].ecbb003
 
            END IF 
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身刪除後2
{<point name="input.body.after_delete"/>}
               #end add-point
                              CALL aecm200_delete_b('ecbb_t',gs_keys,"'1'")
            END IF
            #如果是最後一筆
            IF l_ac = (g_ecbb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #此段落由子樣板a02產生
         AFTER FIELD ecbb003
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_ecbb_d[l_ac].ecbb003,"0","0","","","azz-00079",1) THEN
               NEXT FIELD ecbb003
            END IF
 
 
            #add-point:AFTER FIELD ecbb003
{<point name="input.a.page1.ecbb003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb003
            #add-point:BEFORE FIELD ecbb003
{<point name="input.b.page1.ecbb003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb003
            #add-point:ON CHANGE ecbb003
{<point name="input.g.page1.ecbb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb004
            
            #add-point:AFTER FIELD ecbb004
{<point name="input.a.page1.ecbb004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb004
            #add-point:BEFORE FIELD ecbb004
{<point name="input.b.page1.ecbb004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb004
            #add-point:ON CHANGE ecbb004
{<point name="input.g.page1.ecbb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb005
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_ecbb_d[l_ac].ecbb005,"0","1","","","azz-00079",1) THEN
               NEXT FIELD ecbb005
            END IF
 
 
            #add-point:AFTER FIELD ecbb005
{<point name="input.a.page1.ecbb005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb005
            #add-point:BEFORE FIELD ecbb005
{<point name="input.b.page1.ecbb005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb005
            #add-point:ON CHANGE ecbb005
{<point name="input.g.page1.ecbb005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb006
            #add-point:BEFORE FIELD ecbb006
{<point name="input.b.page1.ecbb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb006
            
            #add-point:AFTER FIELD ecbb006
{<point name="input.a.page1.ecbb006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb006
            #add-point:ON CHANGE ecbb006
{<point name="input.g.page1.ecbb006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb007
            #add-point:BEFORE FIELD ecbb007
{<point name="input.b.page1.ecbb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb007
            
            #add-point:AFTER FIELD ecbb007
{<point name="input.a.page1.ecbb007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb007
            #add-point:ON CHANGE ecbb007
{<point name="input.g.page1.ecbb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb008
            
            #add-point:AFTER FIELD ecbb008
{<point name="input.a.page1.ecbb008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb008
            #add-point:BEFORE FIELD ecbb008
{<point name="input.b.page1.ecbb008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb008
            #add-point:ON CHANGE ecbb008
{<point name="input.g.page1.ecbb008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb009
            #add-point:BEFORE FIELD ecbb009
{<point name="input.b.page1.ecbb009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb009
            
            #add-point:AFTER FIELD ecbb009
{<point name="input.a.page1.ecbb009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb009
            #add-point:ON CHANGE ecbb009
{<point name="input.g.page1.ecbb009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb010
            
            #add-point:AFTER FIELD ecbb010
{<point name="input.a.page1.ecbb010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb010
            #add-point:BEFORE FIELD ecbb010
{<point name="input.b.page1.ecbb010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb010
            #add-point:ON CHANGE ecbb010
{<point name="input.g.page1.ecbb010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb011
            #add-point:BEFORE FIELD ecbb011
{<point name="input.b.page1.ecbb011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb011
            
            #add-point:AFTER FIELD ecbb011
{<point name="input.a.page1.ecbb011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb011
            #add-point:ON CHANGE ecbb011
{<point name="input.g.page1.ecbb011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb012
            
            #add-point:AFTER FIELD ecbb012
{<point name="input.a.page1.ecbb012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb012
            #add-point:BEFORE FIELD ecbb012
{<point name="input.b.page1.ecbb012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb012
            #add-point:ON CHANGE ecbb012
{<point name="input.g.page1.ecbb012" />}
            #END add-point
         
         #此段落由子樣板a02產生
         AFTER FIELD ecbb024
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_ecbb_d[l_ac].ecbb024,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD ecbb024
            END IF
 
 
            #add-point:AFTER FIELD ecbb024
{<point name="input.a.page1.ecbb024" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb024
            #add-point:BEFORE FIELD ecbb024
{<point name="input.b.page1.ecbb024" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb024
            #add-point:ON CHANGE ecbb024
{<point name="input.g.page1.ecbb024" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb025
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_ecbb_d[l_ac].ecbb025,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD ecbb025
            END IF
 
 
            #add-point:AFTER FIELD ecbb025
{<point name="input.a.page1.ecbb025" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb025
            #add-point:BEFORE FIELD ecbb025
{<point name="input.b.page1.ecbb025" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb025
            #add-point:ON CHANGE ecbb025
{<point name="input.g.page1.ecbb025" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb026
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_ecbb_d[l_ac].ecbb026,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD ecbb026
            END IF
 
 
            #add-point:AFTER FIELD ecbb026
{<point name="input.a.page1.ecbb026" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb026
            #add-point:BEFORE FIELD ecbb026
{<point name="input.b.page1.ecbb026" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb026
            #add-point:ON CHANGE ecbb026
{<point name="input.g.page1.ecbb026" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb027
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_ecbb_d[l_ac].ecbb027,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD ecbb027
            END IF
 
 
            #add-point:AFTER FIELD ecbb027
{<point name="input.a.page1.ecbb027" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb027
            #add-point:BEFORE FIELD ecbb027
{<point name="input.b.page1.ecbb027" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb027
            #add-point:ON CHANGE ecbb027
{<point name="input.g.page1.ecbb027" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb034
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_ecbb_d[l_ac].ecbb034,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD ecbb034
            END IF
 
 
            #add-point:AFTER FIELD ecbb034
{<point name="input.a.page1.ecbb034" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb034
            #add-point:BEFORE FIELD ecbb034
{<point name="input.b.page1.ecbb034" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb034
            #add-point:ON CHANGE ecbb034
{<point name="input.g.page1.ecbb034" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb013
            #add-point:BEFORE FIELD ecbb013
{<point name="input.b.page1.ecbb013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb013
            
            #add-point:AFTER FIELD ecbb013
{<point name="input.a.page1.ecbb013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb013
            #add-point:ON CHANGE ecbb013
{<point name="input.g.page1.ecbb013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb014
            
            #add-point:AFTER FIELD ecbb014
{<point name="input.a.page1.ecbb014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb014
            #add-point:BEFORE FIELD ecbb014
{<point name="input.b.page1.ecbb014" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb014
            #add-point:ON CHANGE ecbb014
{<point name="input.g.page1.ecbb014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb015
            #add-point:BEFORE FIELD ecbb015
{<point name="input.b.page1.ecbb015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb015
            
            #add-point:AFTER FIELD ecbb015
{<point name="input.a.page1.ecbb015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb015
            #add-point:ON CHANGE ecbb015
{<point name="input.g.page1.ecbb015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb016
            #add-point:BEFORE FIELD ecbb016
{<point name="input.b.page1.ecbb016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb016
            
            #add-point:AFTER FIELD ecbb016
{<point name="input.a.page1.ecbb016" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb016
            #add-point:ON CHANGE ecbb016
{<point name="input.g.page1.ecbb016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb017
            #add-point:BEFORE FIELD ecbb017
{<point name="input.b.page1.ecbb017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb017
            
            #add-point:AFTER FIELD ecbb017
{<point name="input.a.page1.ecbb017" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb017
            #add-point:ON CHANGE ecbb017
{<point name="input.g.page1.ecbb017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb018
            #add-point:BEFORE FIELD ecbb018
{<point name="input.b.page1.ecbb018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb018
            
            #add-point:AFTER FIELD ecbb018
{<point name="input.a.page1.ecbb018" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb018
            #add-point:ON CHANGE ecbb018
{<point name="input.g.page1.ecbb018" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb019
            #add-point:BEFORE FIELD ecbb019
{<point name="input.b.page1.ecbb019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb019
            
            #add-point:AFTER FIELD ecbb019
{<point name="input.a.page1.ecbb019" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb019
            #add-point:ON CHANGE ecbb019
{<point name="input.g.page1.ecbb019" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb020
            #add-point:BEFORE FIELD ecbb020
{<point name="input.b.page1.ecbb020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb020
            
            #add-point:AFTER FIELD ecbb020
{<point name="input.a.page1.ecbb020" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb020
            #add-point:ON CHANGE ecbb020
{<point name="input.g.page1.ecbb020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb030
            
            #add-point:AFTER FIELD ecbb030
{<point name="input.a.page1.ecbb030" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb030
            #add-point:BEFORE FIELD ecbb030
{<point name="input.b.page1.ecbb030" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb030
            #add-point:ON CHANGE ecbb030
{<point name="input.g.page1.ecbb030" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb031
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_ecbb_d[l_ac].ecbb031,"0.000000","1","","","azz-00079",1) THEN
               NEXT FIELD ecbb031
            END IF
 
 
            #add-point:AFTER FIELD ecbb031
{<point name="input.a.page1.ecbb031" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb031
            #add-point:BEFORE FIELD ecbb031
{<point name="input.b.page1.ecbb031" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb031
            #add-point:ON CHANGE ecbb031
{<point name="input.g.page1.ecbb031" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb032
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_ecbb_d[l_ac].ecbb032,"0.000000","0","","","azz-00079",1) THEN
               NEXT FIELD ecbb032
            END IF
 
 
            #add-point:AFTER FIELD ecbb032
{<point name="input.a.page1.ecbb032" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb032
            #add-point:BEFORE FIELD ecbb032
{<point name="input.b.page1.ecbb032" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb032
            #add-point:ON CHANGE ecbb032
{<point name="input.g.page1.ecbb032" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb021
            
            #add-point:AFTER FIELD ecbb021
{<point name="input.a.page1.ecbb021" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb021
            #add-point:BEFORE FIELD ecbb021
{<point name="input.b.page1.ecbb021" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb021
            #add-point:ON CHANGE ecbb021
{<point name="input.g.page1.ecbb021" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb022
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_ecbb_d[l_ac].ecbb022,"0.000000","1","","","azz-00079",1) THEN
               NEXT FIELD ecbb022
            END IF
 
 
            #add-point:AFTER FIELD ecbb022
{<point name="input.a.page1.ecbb022" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb022
            #add-point:BEFORE FIELD ecbb022
{<point name="input.b.page1.ecbb022" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb022
            #add-point:ON CHANGE ecbb022
{<point name="input.g.page1.ecbb022" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb023
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_ecbb_d[l_ac].ecbb023,"0.000000","0","","","azz-00079",1) THEN
               NEXT FIELD ecbb023
            END IF
 
 
            #add-point:AFTER FIELD ecbb023
{<point name="input.a.page1.ecbb023" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb023
            #add-point:BEFORE FIELD ecbb023
{<point name="input.b.page1.ecbb023" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb023
            #add-point:ON CHANGE ecbb023
{<point name="input.g.page1.ecbb023" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb033
            #add-point:BEFORE FIELD ecbb033
{<point name="input.b.page1.ecbb033" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb033
            
            #add-point:AFTER FIELD ecbb033
{<point name="input.a.page1.ecbb033" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb033
            #add-point:ON CHANGE ecbb033
{<point name="input.g.page1.ecbb033" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb028
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_ecbb_d[l_ac].ecbb028,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD ecbb028
            END IF
 
 
            #add-point:AFTER FIELD ecbb028
{<point name="input.a.page1.ecbb028" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb028
            #add-point:BEFORE FIELD ecbb028
{<point name="input.b.page1.ecbb028" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb028
            #add-point:ON CHANGE ecbb028
{<point name="input.g.page1.ecbb028" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb029
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_ecbb_d[l_ac].ecbb029,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD ecbb029
            END IF
 
 
            #add-point:AFTER FIELD ecbb029
{<point name="input.a.page1.ecbb029" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb029
            #add-point:BEFORE FIELD ecbb029
{<point name="input.b.page1.ecbb029" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb029
            #add-point:ON CHANGE ecbb029
{<point name="input.g.page1.ecbb029" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb035
            #add-point:BEFORE FIELD ecbb035
{<point name="input.b.page1.ecbb035" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb035
            
            #add-point:AFTER FIELD ecbb035
{<point name="input.a.page1.ecbb035" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb035
            #add-point:ON CHANGE ecbb035
{<point name="input.g.page1.ecbb035" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecbb036
            #add-point:BEFORE FIELD ecbb036
{<point name="input.b.page1.ecbb036" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecbb036
            
            #add-point:AFTER FIELD ecbb036
{<point name="input.a.page1.ecbb036" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecbb036
            #add-point:ON CHANGE ecbb036
{<point name="input.g.page1.ecbb036" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ooff013
            #add-point:BEFORE FIELD ooff013
{<point name="input.b.page1.ooff013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ooff013
            
            #add-point:AFTER FIELD ooff013
{<point name="input.a.page1.ooff013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ooff013
            #add-point:ON CHANGE ooff013
{<point name="input.g.page1.ooff013" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.ecbb003
         ON ACTION controlp INFIELD ecbb003
            #add-point:ON ACTION controlp INFIELD ecbb003
{<point name="input.c.page1.ecbb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb004
         ON ACTION controlp INFIELD ecbb004
            #add-point:ON ACTION controlp INFIELD ecbb004
{<point name="input.c.page1.ecbb004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb005
         ON ACTION controlp INFIELD ecbb005
            #add-point:ON ACTION controlp INFIELD ecbb005
{<point name="input.c.page1.ecbb005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb006
         ON ACTION controlp INFIELD ecbb006
            #add-point:ON ACTION controlp INFIELD ecbb006
{<point name="input.c.page1.ecbb006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb007
         ON ACTION controlp INFIELD ecbb007
            #add-point:ON ACTION controlp INFIELD ecbb007
{<point name="input.c.page1.ecbb007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb008
         ON ACTION controlp INFIELD ecbb008
            #add-point:ON ACTION controlp INFIELD ecbb008
{<point name="input.c.page1.ecbb008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb009
         ON ACTION controlp INFIELD ecbb009
            #add-point:ON ACTION controlp INFIELD ecbb009
{<point name="input.c.page1.ecbb009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb010
         ON ACTION controlp INFIELD ecbb010
            #add-point:ON ACTION controlp INFIELD ecbb010
{<point name="input.c.page1.ecbb010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb011
         ON ACTION controlp INFIELD ecbb011
            #add-point:ON ACTION controlp INFIELD ecbb011
{<point name="input.c.page1.ecbb011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb012
         ON ACTION controlp INFIELD ecbb012
            #add-point:ON ACTION controlp INFIELD ecbb012
{<point name="input.c.page1.ecbb012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb024
         ON ACTION controlp INFIELD ecbb024
            #add-point:ON ACTION controlp INFIELD ecbb024
{<point name="input.c.page1.ecbb024" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb025
         ON ACTION controlp INFIELD ecbb025
            #add-point:ON ACTION controlp INFIELD ecbb025
{<point name="input.c.page1.ecbb025" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb026
         ON ACTION controlp INFIELD ecbb026
            #add-point:ON ACTION controlp INFIELD ecbb026
{<point name="input.c.page1.ecbb026" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb027
         ON ACTION controlp INFIELD ecbb027
            #add-point:ON ACTION controlp INFIELD ecbb027
{<point name="input.c.page1.ecbb027" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb034
         ON ACTION controlp INFIELD ecbb034
            #add-point:ON ACTION controlp INFIELD ecbb034
{<point name="input.c.page1.ecbb034" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb013
         ON ACTION controlp INFIELD ecbb013
            #add-point:ON ACTION controlp INFIELD ecbb013
{<point name="input.c.page1.ecbb013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb014
         ON ACTION controlp INFIELD ecbb014
            #add-point:ON ACTION controlp INFIELD ecbb014
{<point name="input.c.page1.ecbb014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb015
         ON ACTION controlp INFIELD ecbb015
            #add-point:ON ACTION controlp INFIELD ecbb015
{<point name="input.c.page1.ecbb015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb016
         ON ACTION controlp INFIELD ecbb016
            #add-point:ON ACTION controlp INFIELD ecbb016
{<point name="input.c.page1.ecbb016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb017
         ON ACTION controlp INFIELD ecbb017
            #add-point:ON ACTION controlp INFIELD ecbb017
{<point name="input.c.page1.ecbb017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb018
         ON ACTION controlp INFIELD ecbb018
            #add-point:ON ACTION controlp INFIELD ecbb018
{<point name="input.c.page1.ecbb018" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb019
         ON ACTION controlp INFIELD ecbb019
            #add-point:ON ACTION controlp INFIELD ecbb019
{<point name="input.c.page1.ecbb019" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb020
         ON ACTION controlp INFIELD ecbb020
            #add-point:ON ACTION controlp INFIELD ecbb020
{<point name="input.c.page1.ecbb020" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb030
         ON ACTION controlp INFIELD ecbb030
            #add-point:ON ACTION controlp INFIELD ecbb030
{<point name="input.c.page1.ecbb030" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb031
         ON ACTION controlp INFIELD ecbb031
            #add-point:ON ACTION controlp INFIELD ecbb031
{<point name="input.c.page1.ecbb031" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb032
         ON ACTION controlp INFIELD ecbb032
            #add-point:ON ACTION controlp INFIELD ecbb032
{<point name="input.c.page1.ecbb032" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb021
         ON ACTION controlp INFIELD ecbb021
            #add-point:ON ACTION controlp INFIELD ecbb021
{<point name="input.c.page1.ecbb021" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb022
         ON ACTION controlp INFIELD ecbb022
            #add-point:ON ACTION controlp INFIELD ecbb022
{<point name="input.c.page1.ecbb022" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb023
         ON ACTION controlp INFIELD ecbb023
            #add-point:ON ACTION controlp INFIELD ecbb023
{<point name="input.c.page1.ecbb023" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb033
         ON ACTION controlp INFIELD ecbb033
            #add-point:ON ACTION controlp INFIELD ecbb033
{<point name="input.c.page1.ecbb033" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb028
         ON ACTION controlp INFIELD ecbb028
            #add-point:ON ACTION controlp INFIELD ecbb028
{<point name="input.c.page1.ecbb028" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb029
         ON ACTION controlp INFIELD ecbb029
            #add-point:ON ACTION controlp INFIELD ecbb029
{<point name="input.c.page1.ecbb029" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb035
         ON ACTION controlp INFIELD ecbb035
            #add-point:ON ACTION controlp INFIELD ecbb035
{<point name="input.c.page1.ecbb035" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ecbb036
         ON ACTION controlp INFIELD ecbb036
            #add-point:ON ACTION controlp INFIELD ecbb036
{<point name="input.c.page1.ecbb036" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ooff013
         ON ACTION controlp INFIELD ooff013
            #add-point:ON ACTION controlp INFIELD ooff013
{<point name="input.c.page1.ooff013" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               LET g_ecbb_d[l_ac].* = g_ecbb_d_t.*
               CLOSE aecm200_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_ecbb_d[l_ac].ecbb003 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               LET g_ecbb_d[l_ac].* = g_ecbb_d_t.*
            ELSE
            
               #add-point:單身修改前
{<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE ecbb_t SET (ecbb001,ecbb002,ecbb003,ecbb004,ecbb005,ecbb006,ecbb007,ecbb008,ecbb009, 
                   ecbb010,ecbb011,ecbb012,ecbb024,ecbb025,ecbb026,ecbb027,ecbb034,ecbb013,ecbb014,ecbb015, 
                   ecbb016,ecbb017,ecbb018,ecbb019,ecbb020,ecbb030,ecbb031,ecbb032,ecbb021,ecbb022,ecbb023, 
                   ecbb033,ecbb028,ecbb029,ecbb035,ecbb036,ecbb037,ecbb038) = (g_ecba_m.ecba001,g_ecba_m.ecba002,g_ecbb_d[l_ac].ecbb003, 
                   g_ecbb_d[l_ac].ecbb004,g_ecbb_d[l_ac].ecbb005,g_ecbb_d[l_ac].ecbb006,g_ecbb_d[l_ac].ecbb007, 
                   g_ecbb_d[l_ac].ecbb008,g_ecbb_d[l_ac].ecbb009,g_ecbb_d[l_ac].ecbb010,g_ecbb_d[l_ac].ecbb011, 
                   g_ecbb_d[l_ac].ecbb012,g_ecbb_d[l_ac].ecbb024,g_ecbb_d[l_ac].ecbb025,g_ecbb_d[l_ac].ecbb026, 
                   g_ecbb_d[l_ac].ecbb027,g_ecbb_d[l_ac].ecbb034,g_ecbb_d[l_ac].ecbb013,g_ecbb_d[l_ac].ecbb014, 
                   g_ecbb_d[l_ac].ecbb015,g_ecbb_d[l_ac].ecbb016,g_ecbb_d[l_ac].ecbb017,g_ecbb_d[l_ac].ecbb018, 
                   g_ecbb_d[l_ac].ecbb019,g_ecbb_d[l_ac].ecbb020,g_ecbb_d[l_ac].ecbb030,g_ecbb_d[l_ac].ecbb031, 
                   g_ecbb_d[l_ac].ecbb032,g_ecbb_d[l_ac].ecbb021,g_ecbb_d[l_ac].ecbb022,g_ecbb_d[l_ac].ecbb023, 
                   g_ecbb_d[l_ac].ecbb033,g_ecbb_d[l_ac].ecbb028,g_ecbb_d[l_ac].ecbb029,g_ecbb_d[l_ac].ecbb035, 
                   g_ecbb_d[l_ac].ecbb036,g_ecbb_d[l_ac].ecbb037,g_ecbb_d[l_ac].ecbb038)
                WHERE ecbbent = g_enterprise AND ecbbsite = g_site AND ecbb001 = g_ecba_m.ecba001 
                  AND ecbb002 = g_ecba_m.ecba002 
 
                  AND ecbb003 = g_ecbb_d_t.ecbb003 #項次   
 
                  
               #add-point:單身修改中
{<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "ecbb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                     LET g_ecbb_d[l_ac].* = g_ecbb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "ecbb_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     LET g_ecbb_d[l_ac].* = g_ecbb_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_ecba_m.ecba001
               LET gs_keys_bak[1] = g_ecba001_t
               LET gs_keys[2] = g_ecba_m.ecba002
               LET gs_keys_bak[2] = g_ecba002_t
               LET gs_keys[3] = g_ecbb_d[g_detail_idx].ecbb003
               LET gs_keys_bak[3] = g_ecbb_d_t.ecbb003
               CALL aecm200_update_b('ecbb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_ecba_m),util.JSON.stringify(g_ecbb_d_t)
               LET g_log2 = util.JSON.stringify(g_ecba_m),util.JSON.stringify(g_ecbb_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
{<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
{<point name="input.body.after_row"/>}
            #end add-point
            CALL aecm200_unlock_b("ecbb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
{<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
{<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_ecbb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_ecbb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      

{</section>}

{<section id="aecm200.input.other" >}
      
      #add-point:自定義input
{<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
{<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD ecba001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD ecbb003
 
            END CASE
         END IF
                     
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
{<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG

      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1

         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
{<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION

{</section>}

{<section id="aecm200.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aecm200_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL aecm200_b_fill() #單身填充
      CALL aecm200_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aecm200_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_ecba_m.ecba001,g_ecba_m.ecba001_desc,g_ecba_m.ecba001_desc1,g_ecba_m.ecba002,g_ecba_m.ecba003, 
       g_ecba_m.ecba004,g_ecba_m.ecba005,g_ecba_m.ecba006,g_ecba_m.ecba007,g_ecba_m.ecbastus,g_ecba_m.ooeb013, 
       g_ecba_m.ecbacrtid,g_ecba_m.ecbacrtid_desc,g_ecba_m.ecbacrtdp,g_ecba_m.ecbacrtdp_desc,g_ecba_m.ecbacrtdt, 
       g_ecba_m.ecbaownid,g_ecba_m.ecbaownid_desc,g_ecba_m.ecbaowndp,g_ecba_m.ecbaowndp_desc,g_ecba_m.ecbamodid, 
       g_ecba_m.ecbamodid_desc,g_ecba_m.ecbamoddt,g_ecba_m.ecbacnfid,g_ecba_m.ecbacnfid_desc,g_ecba_m.ecbacnfdt 

   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
	  #根據狀態碼顯示對應圖片
      CASE g_ecba_m.ecbastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_ecbb_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aecm200_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="aecm200.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION aecm200_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="aecm200.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION aecm200_reproduce()
   DEFINE l_newno     LIKE ecba_t.ecba001 
   DEFINE l_oldno     LIKE ecba_t.ecba001 
   DEFINE l_newno02     LIKE ecba_t.ecba002 
   DEFINE l_oldno02     LIKE ecba_t.ecba002 
 
   DEFINE l_master    RECORD LIKE ecba_t.*
   DEFINE l_detail    RECORD LIKE ecbb_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
{<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_ecba_m.ecba001 IS NULL
   OR g_ecba_m.ecba002 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_ecba001_t = g_ecba_m.ecba001
   LET g_ecba002_t = g_ecba_m.ecba002
 
    
   LET g_ecba_m.ecba001 = ""
   LET g_ecba_m.ecba002 = ""
 
    
   CALL aecm200_set_entry('a')
   CALL aecm200_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      #公用欄位新增給值
      LET g_ecba_m.ecbaownid = g_user
      LET g_ecba_m.ecbaowndp = g_dept
      LET g_ecba_m.ecbacrtid = g_user
      LET g_ecba_m.ecbacrtdp = g_dept 
      LET g_ecba_m.ecbacrtdt = cl_get_current()
      LET g_ecba_m.ecbamodid = ""
      LET g_ecba_m.ecbamoddt = ""
      LET g_ecba_m.ecbastus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
{<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
   
   CALL aecm200_input("r")
   
      LET g_ecba_m.ecba001_desc = ''
   DISPLAY BY NAME g_ecba_m.ecba001_desc
   LET g_ecba_m.ecba001_desc1 = ''
   DISPLAY BY NAME g_ecba_m.ecba001_desc1
 
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_ecba_m.* TO NULL
      INITIALIZE g_ecbb_d TO NULL
 
      CALL aecm200_show()
      RETURN
   END IF
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_ecba001_t = g_ecba_m.ecba001
   LET g_ecba002_t = g_ecba_m.ecba002
 
   
   LET g_current_idx = g_browser.getLength() + 1
   LET g_browser[g_current_idx].b_ecba001 = g_ecba_m.ecba001
   LET g_browser[g_current_idx].b_ecba002 = g_ecba_m.ecba002
 
   
   LET g_detail_cnt = g_browser.getLength()
   LET g_header_cnt = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   DISPLAY g_detail_cnt  TO FORMONLY.h_count     #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index     #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
   
   LET g_wc = "(",g_wc,  
              " OR (",
              " ecba001 = '", g_ecba_m.ecba001 CLIPPED, "' "
              ," AND ecba002 = '", g_ecba_m.ecba002 CLIPPED, "' "
 
              , ")) "
   
   #add-point:完成複製段落後
{<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL aecm200_idx_chk()
   
END FUNCTION

{</section>}

{<section id="aecm200.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION aecm200_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE ecbb_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aecm200_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aecm200_detail AS ",
                "SELECT * FROM ecbb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aecm200_detail SELECT * FROM ecbb_t 
                                         WHERE ecbbent = g_enterprise AND ecbbsite = g_site AND ecbb001 = g_ecba001_t
                                         AND ecbb002 = g_ecba002_t
 
   
   #將key修正為調整後   
   UPDATE aecm200_detail 
      #更新key欄位
      SET ecbb001 = g_ecba_m.ecba001
          , ecbb002 = g_ecba_m.ecba002
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO ecbb_t SELECT * FROM aecm200_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aecm200_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_ecba001_t = g_ecba_m.ecba001
   LET g_ecba002_t = g_ecba_m.ecba002
 
   
   DROP TABLE aecm200_detail
   
END FUNCTION

{</section>}

{<section id="aecm200.delete" >}
#+ 資料刪除
PRIVATE FUNCTION aecm200_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
{<point name="delete.define"/>}
   #end add-point     
   
   IF g_ecba_m.ecba001 IS NULL
   OR g_ecba_m.ecba002 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
   
   
 
   CALL aecm200_show()
   
   CALL s_transaction_begin()
 
   OPEN aecm200_cl USING g_enterprise, g_site,g_ecba_m.ecba001,g_ecba_m.ecba002
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aecm200_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      CLOSE aecm200_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   #EXECUTE aecm200_master_referesh USING g_ecba_m.ecba001,g_ecba_m.ecba002 INTO g_ecba_m.ecba001,g_ecba_m.ecba002,   #160707-00040#1 mark 
   EXECUTE aecm200_master_referesh USING g_site,g_ecba_m.ecba001,g_ecba_m.ecba002 INTO g_ecba_m.ecba001,g_ecba_m.ecba002,   #160707-00040#1 
       g_ecba_m.ecba003,g_ecba_m.ecba004,g_ecba_m.ecba005,g_ecba_m.ecba006,g_ecba_m.ecba007,g_ecba_m.ecbastus, 
       g_ecba_m.ecbacrtid,g_ecba_m.ecbacrtdp,g_ecba_m.ecbacrtdt,g_ecba_m.ecbaownid,g_ecba_m.ecbaowndp, 
       g_ecba_m.ecbamodid,g_ecba_m.ecbamoddt,g_ecba_m.ecbacnfid,g_ecba_m.ecbacnfdt,g_ecba_m.ecbacrtid_desc, 
       g_ecba_m.ecbacrtdp_desc,g_ecba_m.ecbaownid_desc,g_ecba_m.ecbaowndp_desc,g_ecba_m.ecbamodid_desc, 
       g_ecba_m.ecbacnfid_desc
 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_ecba_m.ecba001 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
{<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
{<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aecm200_set_pk_array()
      #add-point:相關文件刪除前
{<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_ecba001_t = g_ecba_m.ecba001
      LET g_ecba002_t = g_ecba_m.ecba002
 
 
      DELETE FROM ecba_t
       WHERE ecbaent = g_enterprise AND ecbasite = g_site AND ecba001 = g_ecba_m.ecba001
         AND ecba002 = g_ecba_m.ecba002
 
       
      #add-point:單頭刪除中
{<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_ecba_m.ecba001 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
{<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
{<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM ecbb_t
       WHERE ecbbent = g_enterprise AND ecbbsite = g_site AND ecbb001 = g_ecba_m.ecba001
         AND ecbb002 = g_ecba_m.ecba002
 
 
      #add-point:單身刪除中
{<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ecbb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
{<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_ecbb_d.clear() 
 
     
      #CALL aecm200_ui_browser_refresh()  
      CALL aecm200_ui_headershow()  
      CALL aecm200_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aecm200_browser_fill("")
         CALL aecm200_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL aecm200_browser_fill("F")
      END IF
 
      #add-point:多語言刪除
{<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
{<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE aecm200_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_ecba_m.ecba001,'D')
    
END FUNCTION

{</section>}

{<section id="aecm200.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION aecm200_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
{<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_ecbb_d.clear()    #g_ecbb_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
{<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aecm200_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE ecbb003,ecbb004,ecbb005,ecbb006,ecbb007,ecbb008,ecbb009,ecbb010,ecbb011, 
          ecbb012,ecbb037,ecbb038,ecbb024,ecbb025,ecbb026,ecbb027,ecbb034,ecbb013,ecbb014,ecbb015,ecbb016,ecbb017,ecbb018, 
          ecbb019,ecbb020,ecbb030,ecbb031,ecbb032,ecbb021,ecbb022,ecbb023,ecbb033,ecbb028,ecbb029,ecbb035, 
          ecbb036 ,t1.oocql004 ,t2.oocql004 ,t3.oocql004 ,t4.ecaa002 ,t5.pmaal004 FROM ecbb_t",   
                  #" INNER JOIN ecba_t ON ecba001 = ecbb001 ",
                  #" AND ecba002 = ecbb002 ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='221' AND t1.oocql002=ecbb004 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='221' AND t2.oocql002=ecbb008 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='221' AND t3.oocql002=ecbb010 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ecaa_t t4 ON t4.ecaaent='"||g_enterprise||"' AND t4.ecaasite='"||g_site||"' AND t4.ecaa001=ecbb012  ",
               " LEFT JOIN pmaal_t t5 ON t5.pmaalent='"||g_enterprise||"' AND t5.pmaal001=ecbb014 AND t5.pmaal002='"||g_dlang||"' ",
 
                  " WHERE ecbbent=? AND ecbbsite=? AND ecbb001=? AND ecbb002=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
{<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY ecbb_t.ecbb003"
      
      #add-point:單身填充控制
{<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aecm200_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aecm200_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise, g_site,g_ecba_m.ecba001,g_ecba_m.ecba002
                                               
      FOREACH b_fill_cs INTO g_ecbb_d[l_ac].ecbb003,g_ecbb_d[l_ac].ecbb004,g_ecbb_d[l_ac].ecbb005,g_ecbb_d[l_ac].ecbb006, 
          g_ecbb_d[l_ac].ecbb007,g_ecbb_d[l_ac].ecbb008,g_ecbb_d[l_ac].ecbb009,g_ecbb_d[l_ac].ecbb010, 
          g_ecbb_d[l_ac].ecbb011,g_ecbb_d[l_ac].ecbb012,g_ecbb_d[l_ac].ecbb037,g_ecbb_d[l_ac].ecbb038,
          g_ecbb_d[l_ac].ecbb024,g_ecbb_d[l_ac].ecbb025, 
          g_ecbb_d[l_ac].ecbb026,g_ecbb_d[l_ac].ecbb027,g_ecbb_d[l_ac].ecbb034,g_ecbb_d[l_ac].ecbb013, 
          g_ecbb_d[l_ac].ecbb014,g_ecbb_d[l_ac].ecbb015,g_ecbb_d[l_ac].ecbb016,g_ecbb_d[l_ac].ecbb017, 
          g_ecbb_d[l_ac].ecbb018,g_ecbb_d[l_ac].ecbb019,g_ecbb_d[l_ac].ecbb020,g_ecbb_d[l_ac].ecbb030, 
          g_ecbb_d[l_ac].ecbb031,g_ecbb_d[l_ac].ecbb032,g_ecbb_d[l_ac].ecbb021,g_ecbb_d[l_ac].ecbb022, 
          g_ecbb_d[l_ac].ecbb023,g_ecbb_d[l_ac].ecbb033,g_ecbb_d[l_ac].ecbb028,g_ecbb_d[l_ac].ecbb029, 
          g_ecbb_d[l_ac].ecbb035,g_ecbb_d[l_ac].ecbb036,g_ecbb_d[l_ac].ecbb004_desc,g_ecbb_d[l_ac].ecbb008_desc, 
          g_ecbb_d[l_ac].ecbb010_desc,g_ecbb_d[l_ac].ecbb012_desc,g_ecbb_d[l_ac].ecbb014_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
{<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
{<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_ecbb_d.deleteElement(g_ecbb_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aecm200_pb
 
   
END FUNCTION

{</section>}

{<section id="aecm200.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION aecm200_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM ecbb_t
       WHERE ecbbent = g_enterprise AND ecbbsite = g_site AND
         ecbb001 = ps_keys_bak[1] AND ecbb002 = ps_keys_bak[2] AND ecbb003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="aecm200.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION aecm200_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
{<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
{<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO ecbb_t
                  (ecbbent, ecbbsite,
                   ecbb001,ecbb002,
                   ecbb003
                   ,ecbb004,ecbb005,ecbb006,ecbb007,ecbb008,ecbb009,ecbb010,ecbb011,ecbb012,ecbb024,ecbb025,ecbb026,ecbb027,ecbb034,ecbb013,ecbb014,ecbb015,ecbb016,ecbb017,ecbb018,ecbb019,ecbb020,ecbb030,ecbb031,ecbb032,ecbb021,ecbb022,ecbb023,ecbb033,ecbb028,ecbb029,ecbb035,ecbb036,ecbb037,ecbb038) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_ecbb_d[g_detail_idx].ecbb004,g_ecbb_d[g_detail_idx].ecbb005,g_ecbb_d[g_detail_idx].ecbb006, 
                       g_ecbb_d[g_detail_idx].ecbb007,g_ecbb_d[g_detail_idx].ecbb008,g_ecbb_d[g_detail_idx].ecbb009, 
                       g_ecbb_d[g_detail_idx].ecbb010,g_ecbb_d[g_detail_idx].ecbb011,g_ecbb_d[g_detail_idx].ecbb012, 
                       g_ecbb_d[g_detail_idx].ecbb024,g_ecbb_d[g_detail_idx].ecbb025,g_ecbb_d[g_detail_idx].ecbb026, 
                       g_ecbb_d[g_detail_idx].ecbb027,g_ecbb_d[g_detail_idx].ecbb034,g_ecbb_d[g_detail_idx].ecbb013, 
                       g_ecbb_d[g_detail_idx].ecbb014,g_ecbb_d[g_detail_idx].ecbb015,g_ecbb_d[g_detail_idx].ecbb016, 
                       g_ecbb_d[g_detail_idx].ecbb017,g_ecbb_d[g_detail_idx].ecbb018,g_ecbb_d[g_detail_idx].ecbb019, 
                       g_ecbb_d[g_detail_idx].ecbb020,g_ecbb_d[g_detail_idx].ecbb030,g_ecbb_d[g_detail_idx].ecbb031, 
                       g_ecbb_d[g_detail_idx].ecbb032,g_ecbb_d[g_detail_idx].ecbb021,g_ecbb_d[g_detail_idx].ecbb022, 
                       g_ecbb_d[g_detail_idx].ecbb023,g_ecbb_d[g_detail_idx].ecbb033,g_ecbb_d[g_detail_idx].ecbb028, 
                       g_ecbb_d[g_detail_idx].ecbb029,g_ecbb_d[g_detail_idx].ecbb035,g_ecbb_d[g_detail_idx].ecbb036,
                       g_ecbb_d[g_detail_idx].ecbb037,g_ecbb_d[g_detail_idx].ecbb038) 

      #add-point:insert_b段資料新增中
{<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ecbb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
      END IF
      #add-point:insert_b段資料新增後
{<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
{<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION

{</section>}

{<section id="aecm200.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION aecm200_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
{<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "ecbb_t" THEN
      #add-point:update_b段修改前
{<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE ecbb_t 
         SET (ecbb001,ecbb002,
              ecbb003
              ,ecbb004,ecbb005,ecbb006,ecbb007,ecbb008,ecbb009,ecbb010,ecbb011,ecbb012,ecbb024,ecbb025,ecbb026,ecbb027,ecbb034,ecbb013,ecbb014,ecbb015,ecbb016,ecbb017,ecbb018,ecbb019,ecbb020,ecbb030,ecbb031,ecbb032,ecbb021,ecbb022,ecbb023,ecbb033,ecbb028,ecbb029,ecbb035,ecbb036,ecbb037,ecbb038) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_ecbb_d[g_detail_idx].ecbb004,g_ecbb_d[g_detail_idx].ecbb005,g_ecbb_d[g_detail_idx].ecbb006, 
                  g_ecbb_d[g_detail_idx].ecbb007,g_ecbb_d[g_detail_idx].ecbb008,g_ecbb_d[g_detail_idx].ecbb009, 
                  g_ecbb_d[g_detail_idx].ecbb010,g_ecbb_d[g_detail_idx].ecbb011,g_ecbb_d[g_detail_idx].ecbb012, 
                  g_ecbb_d[g_detail_idx].ecbb024,g_ecbb_d[g_detail_idx].ecbb025,g_ecbb_d[g_detail_idx].ecbb026, 
                  g_ecbb_d[g_detail_idx].ecbb027,g_ecbb_d[g_detail_idx].ecbb034,g_ecbb_d[g_detail_idx].ecbb013, 
                  g_ecbb_d[g_detail_idx].ecbb014,g_ecbb_d[g_detail_idx].ecbb015,g_ecbb_d[g_detail_idx].ecbb016, 
                  g_ecbb_d[g_detail_idx].ecbb017,g_ecbb_d[g_detail_idx].ecbb018,g_ecbb_d[g_detail_idx].ecbb019, 
                  g_ecbb_d[g_detail_idx].ecbb020,g_ecbb_d[g_detail_idx].ecbb030,g_ecbb_d[g_detail_idx].ecbb031, 
                  g_ecbb_d[g_detail_idx].ecbb032,g_ecbb_d[g_detail_idx].ecbb021,g_ecbb_d[g_detail_idx].ecbb022, 
                  g_ecbb_d[g_detail_idx].ecbb023,g_ecbb_d[g_detail_idx].ecbb033,g_ecbb_d[g_detail_idx].ecbb028, 
                  g_ecbb_d[g_detail_idx].ecbb029,g_ecbb_d[g_detail_idx].ecbb035,g_ecbb_d[g_detail_idx].ecbb036,
                  g_ecbb_d[g_detail_idx].ecbb037,g_ecbb_d[g_detail_idx].ecbb038)  

         WHERE ecbbent = g_enterprise AND ecbbsite = g_site AND ecbb001 = ps_keys_bak[1] AND ecbb002 = ps_keys_bak[2] AND ecbb003 = ps_keys_bak[3]
      #add-point:update_b段修改中
{<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "ecbb_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "ecbb_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
{<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
{<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="aecm200.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION aecm200_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aecm200_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "ecbb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aecm200_bcl USING g_enterprise, g_site,
                                       g_ecba_m.ecba001,g_ecba_m.ecba002,g_ecbb_d[g_detail_idx].ecbb003  
                                               
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aecm200_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="aecm200.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aecm200_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aecm200_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="aecm200.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION aecm200_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("ecba001,ecba002",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="aecm200.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION aecm200_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("ecba001,ecba002",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="aecm200.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION aecm200_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION

{</section>}

{<section id="aecm200.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION aecm200_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION

{</section>}

{<section id="aecm200.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION aecm200_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " ecba001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " ecba002 = '", g_argv[02], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="aecm200.state_change" >}
   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aecm200_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
{<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
{<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_ecba_m.ecba001 IS NULL
      OR g_ecba_m.ecba002 IS NULL
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_ecba_m.ecbastus
            WHEN "N"
               HIDE OPTION "open"
            WHEN "X"
               HIDE OPTION "void"
            WHEN "Y"
               HIDE OPTION "valid"
            
         END CASE
     
      #add-point:menu前
{<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION open
         IF cl_auth_chk_act("open") THEN
            LET lc_state = "N"
            #add-point:action控制
{<point name="statechange.open"/>}
            #end add-point
         END IF
         EXIT MENU
#      ON ACTION void
#         IF cl_auth_chk_act("void") THEN
#            LET lc_state = "X"
#            #add-point:action控制
{<point name="statechange.void"/>}
            #end add-point
#         END IF
#         EXIT MENU
      ON ACTION valid
         IF cl_auth_chk_act("valid") THEN
            LET lc_state = "Y"
            #add-point:action控制
{<point name="statechange.valid"/>}
            #end add-point
         END IF
         EXIT MENU
    
      
      
      #add-point:stus控制
{<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
{<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE ecba_t SET ecbastus = lc_state 
    WHERE ecbaent = g_enterprise AND ecbasite = g_site AND ecba001 = g_ecba_m.ecba001
      AND ecba002 = g_ecba_m.ecba002
  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
      LET g_ecba_m.ecbastus = lc_state
      DISPLAY BY NAME g_ecba_m.ecbastus
   END IF
 
   #add-point:stus修改後
{<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
{<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 

{</section>}

{<section id="aecm200.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION aecm200_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_ecbb_d.getLength() THEN
         LET g_detail_idx = g_ecbb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_ecbb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_ecbb_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="aecm200.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION aecm200_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aecm200_detail_show()
   
END FUNCTION

{</section>}

{<section id="aecm200.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION aecm200_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN FALSE
 
END FUNCTION

{</section>}

{<section id="aecm200.signature" >}
   

{</section>}

{<section id="aecm200.set_pk_array" >}
   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aecm200_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_ecba_m.ecba001
   LET g_pk_array[1].column = 'ecba001'
   LET g_pk_array[2].values = g_ecba_m.ecba002
   LET g_pk_array[2].column = 'ecba002'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 

{</section>}

{<section id="aecm200.other_dialog" readonly="Y" >}
   

{</section>}

{<section id="aecm200.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

