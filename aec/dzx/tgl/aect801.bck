#該程式已解開Section, 不再透過樣板產出!
{<section id="aect801.description" >}
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000202
#+ 
#+ Filename...: aect801
#+ Description: 料件製程資料新增、修改申請作業
#+ Creator....: 01258(2014-07-07 17:30:45)
#+ Modifier...: 01258(2014-09-10 10:14:55) -SD/PR-
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生

{</section>}

{<section id="aect801.global" >}
{<point name="global.memo" />}
       
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_ecca_m        RECORD
       eccadocno LIKE ecca_t.eccadocno, 
   ecca001 LIKE ecca_t.ecca001, 
   oobxl003 LIKE type_t.chr80, 
   ecca001_desc LIKE type_t.chr80, 
   eccadocdt LIKE ecca_t.eccadocdt, 
   ecca001_desc_1 LIKE type_t.chr80, 
   ecca004 LIKE ecca_t.ecca004, 
   ecca002 LIKE ecca_t.ecca002, 
   eccasite LIKE ecca_t.eccasite, 
   ecca003 LIKE ecca_t.ecca003, 
   ecca900 LIKE ecca_t.ecca900, 
   ecca905 LIKE ecca_t.ecca905, 
   ecca905_desc LIKE type_t.chr80, 
   ecca906 LIKE ecca_t.ecca906, 
   eccastus LIKE ecca_t.eccastus, 
   eccaownid LIKE ecca_t.eccaownid, 
   eccaownid_desc LIKE type_t.chr80, 
   eccaowndp LIKE ecca_t.eccaowndp, 
   eccaowndp_desc LIKE type_t.chr80, 
   eccacrtid LIKE ecca_t.eccacrtid, 
   eccacrtid_desc LIKE type_t.chr80, 
   eccacrtdp LIKE ecca_t.eccacrtdp, 
   eccacrtdp_desc LIKE type_t.chr80, 
   eccacrtdt LIKE ecca_t.eccacrtdt, 
   eccamodid LIKE ecca_t.eccamodid, 
   eccamodid_desc LIKE type_t.chr80, 
   eccamoddt LIKE ecca_t.eccamoddt, 
   eccacnfid LIKE ecca_t.eccacnfid, 
   eccacnfid_desc LIKE type_t.chr80, 
   eccacnfdt LIKE ecca_t.eccacnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_eccb_d        RECORD
       eccb003 LIKE eccb_t.eccb003, 
   eccb004 LIKE eccb_t.eccb004, 
   eccb004_desc LIKE type_t.chr500, 
   eccb005 LIKE eccb_t.eccb005, 
   eccb006 LIKE eccb_t.eccb006, 
   eccb007 LIKE eccb_t.eccb007, 
   eccb008 LIKE eccb_t.eccb008, 
   eccb008_desc LIKE type_t.chr500, 
   eccb009 LIKE eccb_t.eccb009, 
   eccb010 LIKE eccb_t.eccb010, 
   eccb010_desc LIKE type_t.chr500, 
   eccb011 LIKE eccb_t.eccb011, 
   eccb012 LIKE eccb_t.eccb012, 
   eccb012_desc LIKE type_t.chr500, 
   eccb024 LIKE eccb_t.eccb024, 
   eccb025 LIKE eccb_t.eccb025, 
   eccb026 LIKE eccb_t.eccb026, 
   eccb027 LIKE eccb_t.eccb027, 
   eccb034 LIKE eccb_t.eccb034, 
   eccb013 LIKE eccb_t.eccb013, 
   eccb014 LIKE eccb_t.eccb014, 
   eccb014_desc LIKE type_t.chr500, 
   eccb015 LIKE eccb_t.eccb015, 
   eccb016 LIKE eccb_t.eccb016, 
   eccb017 LIKE eccb_t.eccb017, 
   eccb018 LIKE eccb_t.eccb018, 
   eccb019 LIKE eccb_t.eccb019, 
   eccb020 LIKE eccb_t.eccb020, 
   eccb030 LIKE eccb_t.eccb030, 
   eccb030_desc LIKE type_t.chr500, 
   eccb031 LIKE eccb_t.eccb031, 
   eccb032 LIKE eccb_t.eccb032, 
   eccb021 LIKE eccb_t.eccb021, 
   eccb021_desc LIKE type_t.chr500, 
   eccb022 LIKE eccb_t.eccb022, 
   eccb023 LIKE eccb_t.eccb023, 
   eccb033 LIKE eccb_t.eccb033, 
   eccb028 LIKE eccb_t.eccb028, 
   eccb029 LIKE eccb_t.eccb029, 
   ooff013 LIKE type_t.chr500, 
   eccb035 LIKE eccb_t.eccb035, 
   eccb036 LIKE eccb_t.eccb036, 
   eccb901 LIKE eccb_t.eccb901, 
   eccb905 LIKE eccb_t.eccb905, 
   eccb905_desc LIKE type_t.chr500, 
   eccb906 LIKE eccb_t.eccb906, 
   eccb001 LIKE eccb_t.eccb001, 
   eccb002 LIKE eccb_t.eccb002, 
   eccb900 LIKE eccb_t.eccb900, 
   eccb902 LIKE eccb_t.eccb902
       END RECORD
PRIVATE TYPE type_g_eccb2_d RECORD
       eccc004 LIKE eccc_t.eccc004, 
   eccc005 LIKE eccc_t.eccc005, 
   eccc005_desc LIKE type_t.chr500, 
   eccc005_desc_1 LIKE type_t.chr500, 
   eccc006 LIKE eccc_t.eccc006, 
   eccc006_desc LIKE type_t.chr500, 
   eccc007 LIKE eccc_t.eccc007, 
   eccc008 LIKE eccc_t.eccc008, 
   eccc009 LIKE eccc_t.eccc009, 
   eccc009_desc LIKE type_t.chr500, 
   eccc010 LIKE eccc_t.eccc010, 
   eccc901 LIKE eccc_t.eccc901, 
   eccc905 LIKE eccc_t.eccc905, 
   eccc905_desc LIKE type_t.chr500, 
   eccc906 LIKE eccc_t.eccc906, 
   eccc001 LIKE eccc_t.eccc001, 
   eccc002 LIKE eccc_t.eccc002, 
   eccc900 LIKE eccc_t.eccc900, 
   eccc902 LIKE eccc_t.eccc902
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_ecca_m          type_g_ecca_m
DEFINE g_ecca_m_t        type_g_ecca_m
DEFINE g_ecca_m_o        type_g_ecca_m
 
   DEFINE g_eccadocno_t LIKE ecca_t.eccadocno
DEFINE g_eccasite_t LIKE ecca_t.eccasite
 
 
DEFINE g_eccb_d          DYNAMIC ARRAY OF type_g_eccb_d
DEFINE g_eccb_d_t        type_g_eccb_d
DEFINE g_eccb_d_o        type_g_eccb_d
DEFINE g_eccb2_d   DYNAMIC ARRAY OF type_g_eccb2_d
DEFINE g_eccb2_d_t type_g_eccb2_d
DEFINE g_eccb2_d_o type_g_eccb2_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_eccadocno LIKE ecca_t.eccadocno,
   b_oobxl003_1 LIKE type_t.chr500,
      b_eccasite LIKE ecca_t.eccasite,
      b_eccadocdt LIKE ecca_t.eccadocdt,
      b_ecca004 LIKE ecca_t.ecca004,
      b_ecca001 LIKE ecca_t.ecca001,
   b_ecca001_desc LIKE type_t.chr80,
   b_ecca001_desc_2 LIKE type_t.chr500,
      b_ecca002 LIKE ecca_t.ecca002,
      b_ecca003 LIKE ecca_t.ecca003,
      b_ecca900 LIKE ecca_t.ecca900,
      b_ecca905 LIKE ecca_t.ecca905,
   b_ecca905_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD #資料瀏覽之欄位 
       b_statepic     LIKE type_t.chr50,
          b_eccadocno LIKE ecca_t.eccadocno,
   b_oobxl003_1 LIKE type_t.chr500,
      b_eccasite LIKE ecca_t.eccasite,
      b_eccadocdt LIKE ecca_t.eccadocdt,
      b_ecca004 LIKE ecca_t.ecca004,
      b_ecca001 LIKE ecca_t.ecca001,
   b_ecca001_desc LIKE type_t.chr80,
   b_ecca001_desc_2 LIKE type_t.chr500,
      b_ecca002 LIKE ecca_t.ecca002,
      b_ecca003 LIKE ecca_t.ecca003,
      b_ecca900 LIKE ecca_t.ecca900,
      b_ecca905 LIKE ecca_t.ecca905,
   b_ecca905_desc LIKE type_t.chr80
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
DEFINE g_wc2_table2   STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10   #161108-00012#1 num5==》num10        
DEFINE l_ac                  LIKE type_t.num10   #161108-00012#1 num5==》num10 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10   #161108-00012#1 num5==》num10         
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數  #161108-00012#1 num5==》num10
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數  #161108-00012#1 num5==》num10
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數  #161108-00012#1 num5==》num10
#DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數              #161108-00012#1  2016/11/08 By 08734 mark
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數              #161108-00012#1  2016/11/08 By 08734 add
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數  #161108-00012#1 num5==》num10
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用) #161108-00012#1 num5==》num10
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數  #161108-00012#1 num5==》num10
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數  #161108-00012#1 num5==》num10
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="aect801.main" >}
#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aec","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT eccadocno,ecca001,'','',eccadocdt,'',ecca004,ecca002,eccasite,ecca003, 
       ecca900,ecca905,'',ecca906,eccastus,eccaownid,'',eccaowndp,'',eccacrtid,'',eccacrtdp,'',eccacrtdt, 
       eccamodid,'',eccamoddt,eccacnfid,'',eccacnfdt", 
                      " FROM ecca_t",
                      " WHERE eccaent= ? AND eccasite=? AND eccadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aect801_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.eccadocno,t0.ecca001,t0.eccadocdt,t0.ecca004,t0.ecca002,t0.eccasite, 
       t0.ecca003,t0.ecca900,t0.ecca905,t0.ecca906,t0.eccastus,t0.eccaownid,t0.eccaowndp,t0.eccacrtid, 
       t0.eccacrtdp,t0.eccacrtdt,t0.eccamodid,t0.eccamoddt,t0.eccacnfid,t0.eccacnfdt,t1.imaal003 ,t2.oocql004 , 
       t3.ooag011 ,t4.ooefl003 ,t5.ooag011 ,t6.ooefl003 ,t7.ooag011 ,t8.ooag011",
               " FROM ecca_t t0",
                              " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=t0.ecca001 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='225' AND t2.oocql002=t0.ecca905 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.eccaownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.eccaowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=t0.eccacrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.eccacrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=t0.eccamodid  ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=t0.eccacnfid  ",
 
               " WHERE t0.eccaent = '" ||g_enterprise|| "' AND t0.eccasite = ? AND t0.eccadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aect801_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aect801 WITH FORM cl_ap_formpath("aec",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aect801_init()   
 
      #進入選單 Menu (="N")
      CALL aect801_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aect801
      
   END IF 
   
   CLOSE aect801_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 

{</section>}

{<section id="aect801.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aect801_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('eccastus','13','A,D,N,R,W,X,Y')
 
      CALL cl_set_combo_scc('ecca004','4030') 
   CALL cl_set_combo_scc('eccb901','5448') 
   CALL cl_set_combo_scc('eccc901','5448') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aect801_default_search()
    
END FUNCTION

{</section>}

{<section id="aect801.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION aect801_ui_dialog()
   DEFINE li_idx    LIKE type_t.num10  #161108-00012#1 num5==》num10
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
{<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aect801_insert()
            #add-point:ON ACTION insert
{<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
{<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      #先填充browser資料
      CALL aect801_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_eccadocno = g_eccadocno_t
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aect801_fetch('') # reload data
               LET l_ac = 1
               CALL aect801_ui_detailshow() #Setting the current row 
      
               CALL aect801_idx_chk()
               #NEXT FIELD eccb003
         
         END DISPLAY
        
         DISPLAY ARRAY g_eccb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aect801_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               #填充下層單身資料
CALL aect801_b_fill2('2')
 
               #add-point:page1, before row動作
{<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL aect801_idx_chk()
               #add-point:page1自定義行為
{<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
{<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         #第二階單身段落
         DISPLAY ARRAY g_eccb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aect801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx2 = l_ac
               
               #add-point:page2, before row動作
{<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL aect801_idx_chk()
               #add-point:page2自定義行為
{<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
{<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aect801_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aect801_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aect801_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
{<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aect801_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL aect801_set_act_visible()   
            CALL aect801_set_act_no_visible()
            IF NOT (g_ecca_m.eccasite IS NULL
              OR g_ecca_m.eccadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " eccaent = '" ||g_enterprise|| "' AND",
                                  " eccasite = '", g_ecca_m.eccasite, "' "
                                  ," AND eccadocno = '", g_ecca_m.eccadocno, "' "
 
               #填到對應位置
               CALL aect801_browser_fill("")
            END IF
         #此段落由子樣板a32產生
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
{<point name="menu.bpm_status" />}
            #END add-point
 
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aect801_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aect801_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CLEAR FORM
               ELSE
                  CALL aect801_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
{<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aect801_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL aect801_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aect801_idx_chk()
            
         ON ACTION previous
            CALL aect801_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aect801_idx_chk()
            
         ON ACTION jump
            CALL aect801_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aect801_idx_chk()
            
         ON ACTION next
            CALL aect801_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aect801_idx_chk()
            
         ON ACTION last
            CALL aect801_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aect801_idx_chk()
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_eccb_d)
                  LET g_export_node[2] = base.typeInfo.create(g_eccb2_d)
 
                  #add-point:ON ACTION exporttoexcel
{<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD eccb003
            END IF
       
         #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION checkout
            LET g_action_choice="checkout"
            IF cl_auth_chk_act("checkout") THEN
               
               #add-point:ON ACTION checkout
{<point name="menu.checkout" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aect801_modify()
               #add-point:ON ACTION modify
{<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aect801_modify()
               #add-point:ON ACTION modify_detail
{<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aect801_delete()
               #add-point:ON ACTION delete
{<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aect801_insert()
               #add-point:ON ACTION insert
{<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
{<point name="menu.output" />}
               #END add-point
               &include "erp/aec/aect801_rep.4gl"
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
       # ON ACTION reproduce
       #    LET g_action_choice="reproduce"
       #    IF cl_auth_chk_act("reproduce") THEN
       #       CALL aect801_reproduce()
       #       #add-point:ON ACTION reproduce
{<point name="menu.reproduce" />}
       #       #END add-point
       #       
       #    END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aect801_query()
               #add-point:ON ACTION query
{<point name="menu.query" />}
               #END add-point
               #此段落由子樣板a59產生  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
			   
 
 
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION resource
            LET g_action_choice="resource"
            IF cl_auth_chk_act("resource") THEN
               
               #add-point:ON ACTION resource
{<point name="menu.resource" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION stand
            LET g_action_choice="stand"
            IF cl_auth_chk_act("stand") THEN
               
               #add-point:ON ACTION stand
{<point name="menu.stand" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION bom
            LET g_action_choice="bom"
            IF cl_auth_chk_act("bom") THEN
               
               #add-point:ON ACTION bom
{<point name="menu.bom" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION checkin
            LET g_action_choice="checkin"
            IF cl_auth_chk_act("checkin") THEN
               
               #add-point:ON ACTION checkin
{<point name="menu.checkin" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aect801_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
{<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aect801_set_pk_array()
            #add-point:ON ACTION agendum
{<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aect801_set_pk_array()
            #add-point:ON ACTION followup
{<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_ecca_m.eccadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
{<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION

{</section>}

{<section id="aect801.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aect801_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
{<point name="browser_fill.define"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
{<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
{<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE eccasite,eccadocno ",
                      " FROM ecca_t ",
                      " ",
                      " LEFT JOIN eccb_t ON eccbent = eccaent AND eccasite = eccbsite AND eccadocno = eccbdocno ",
 
                      " LEFT JOIN eccc_t ON ecccent = eccaent AND eccbsite = ecccsite AND eccbdocno = ecccdocno AND eccb003 = eccc003", 
 
 
                      " ", 
                      " ", 
                      " WHERE eccaent = '" ||g_enterprise|| "' AND eccbent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("ecca_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE eccasite,eccadocno ",
                      " FROM ecca_t ", 
                      "  ",
                      "  ",
                      " WHERE eccaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("ecca_t")
   END IF
   
   #add-point:browser_fill,cnt wc
{<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
{<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   IF g_browser_cnt > g_max_rec THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_rec
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_ecca_m.* TO NULL
      CALL g_eccb_d.clear()        
      CALL g_eccb2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
{<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.eccadocno,t0.eccasite,t0.eccadocdt,t0.ecca004,t0.ecca001,t0.ecca002,t0.ecca003,t0.ecca900,t0.ecca905 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT t0.eccastus,t0.eccadocno,t0.eccasite,t0.eccadocdt,t0.ecca004,t0.ecca001, 
       t0.ecca002,t0.ecca003,t0.ecca900,t0.ecca905,t1.imaal003 ,t2.oocql004 ",
               " FROM ecca_t t0",
               "  ",
               "  LEFT JOIN eccb_t ON eccbent = eccaent AND eccasite = eccbsite AND eccadocno = eccbdocno ",
 
               "  LEFT JOIN eccc_t ON ecccent = eccaent AND eccbsite = ecccsite AND eccbdocno = ecccdocno AND eccb003 = eccc003",
 
 
               "  ",
                              " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=t0.ecca001 AND t1.imaal002='"||g_lang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='225' AND t2.oocql002=t0.ecca905 AND t2.oocql003='"||g_lang||"' ",
 
               " WHERE t0.eccaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("ecca_t")
   #add-point:browser_fill,sql wc
{<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY eccasite,eccadocno ",g_order
 
   #add-point:browser_fill,before_prepare
{<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"ecca_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
{<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_eccadocno,g_browser[g_cnt].b_eccasite, 
       g_browser[g_cnt].b_eccadocdt,g_browser[g_cnt].b_ecca004,g_browser[g_cnt].b_ecca001,g_browser[g_cnt].b_ecca002, 
       g_browser[g_cnt].b_ecca003,g_browser[g_cnt].b_ecca900,g_browser[g_cnt].b_ecca905,g_browser[g_cnt].b_ecca001_desc, 
       g_browser[g_cnt].b_ecca905_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
{<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      #browser段落顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"             
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_eccasite) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
   DISPLAY g_current_idx TO FORMONLY.b_index   #當下筆數的顯示
   DISPLAY g_current_idx TO FORMONLY.h_index   #當下筆數的顯示
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", FALSE)
   END IF
   
   #add-point:browser_fill段結束前
{<point name="browser_fill.after"/>}
   #end add-point   
   
END FUNCTION

{</section>}

{<section id="aect801.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION aect801_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_ecca_m.eccasite = g_browser[g_current_idx].b_eccasite   
   LET g_ecca_m.eccadocno = g_browser[g_current_idx].b_eccadocno   
 
   EXECUTE aect801_master_referesh USING g_ecca_m.eccasite,g_ecca_m.eccadocno INTO g_ecca_m.eccadocno, 
       g_ecca_m.ecca001,g_ecca_m.eccadocdt,g_ecca_m.ecca004,g_ecca_m.ecca002,g_ecca_m.eccasite,g_ecca_m.ecca003, 
       g_ecca_m.ecca900,g_ecca_m.ecca905,g_ecca_m.ecca906,g_ecca_m.eccastus,g_ecca_m.eccaownid,g_ecca_m.eccaowndp, 
       g_ecca_m.eccacrtid,g_ecca_m.eccacrtdp,g_ecca_m.eccacrtdt,g_ecca_m.eccamodid,g_ecca_m.eccamoddt, 
       g_ecca_m.eccacnfid,g_ecca_m.eccacnfdt,g_ecca_m.ecca001_desc,g_ecca_m.ecca905_desc,g_ecca_m.eccaownid_desc, 
       g_ecca_m.eccaowndp_desc,g_ecca_m.eccacrtid_desc,g_ecca_m.eccacrtdp_desc,g_ecca_m.eccamodid_desc, 
       g_ecca_m.eccacnfid_desc
   CALL aect801_show()
      
END FUNCTION

{</section>}

{<section id="aect801.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION aect801_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="aect801.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aect801_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_eccasite = g_ecca_m.eccasite 
         AND g_browser[l_i].b_eccadocno = g_ecca_m.eccadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser.getLength()
 
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="aect801.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION aect801_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_ecca_m.* TO NULL
   CALL g_eccb_d.clear()        
   CALL g_eccb2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON eccadocno,ecca001,oobxl003,eccadocdt,ecca004,ecca002,eccasite,ecca003, 
          ecca900,ecca905,ecca906,eccastus,eccaownid,eccaowndp,eccacrtid,eccacrtdp,eccacrtdt,eccamodid, 
          eccamoddt,eccacnfid,eccacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         #共用欄位查詢處理
         ##----<<eccacrtdt>>----
         AFTER FIELD eccacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<eccamoddt>>----
         AFTER FIELD eccamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<eccacnfdt>>----
         AFTER FIELD eccacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<eccapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #此段落由子樣板a01產生
         BEFORE FIELD eccadocno
            #add-point:BEFORE FIELD eccadocno
            {<point name="construct.b.eccadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccadocno
            
            #add-point:AFTER FIELD eccadocno
            {<point name="construct.a.eccadocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.eccadocno
         ON ACTION controlp INFIELD eccadocno
            #add-point:ON ACTION controlp INFIELD eccadocno
            {<point name="construct.c.eccadocno" />}
            #END add-point
 
         #Ctrlp:construct.c.ecca001
         ON ACTION controlp INFIELD ecca001
            #add-point:ON ACTION controlp INFIELD ecca001
            {<point name="construct.c.ecca001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecca001
            #add-point:BEFORE FIELD ecca001
            {<point name="construct.b.ecca001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecca001
            
            #add-point:AFTER FIELD ecca001
            {<point name="construct.a.ecca001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oobxl003
            #add-point:BEFORE FIELD oobxl003
            {<point name="construct.b.oobxl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oobxl003
            
            #add-point:AFTER FIELD oobxl003
            {<point name="construct.a.oobxl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.oobxl003
         ON ACTION controlp INFIELD oobxl003
            #add-point:ON ACTION controlp INFIELD oobxl003
            {<point name="construct.c.oobxl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccadocdt
            #add-point:BEFORE FIELD eccadocdt
            {<point name="construct.b.eccadocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccadocdt
            
            #add-point:AFTER FIELD eccadocdt
            {<point name="construct.a.eccadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.eccadocdt
         ON ACTION controlp INFIELD eccadocdt
            #add-point:ON ACTION controlp INFIELD eccadocdt
            {<point name="construct.c.eccadocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecca004
            #add-point:BEFORE FIELD ecca004
            {<point name="construct.b.ecca004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecca004
            
            #add-point:AFTER FIELD ecca004
            {<point name="construct.a.ecca004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ecca004
         ON ACTION controlp INFIELD ecca004
            #add-point:ON ACTION controlp INFIELD ecca004
            {<point name="construct.c.ecca004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecca002
            #add-point:BEFORE FIELD ecca002
            {<point name="construct.b.ecca002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecca002
            
            #add-point:AFTER FIELD ecca002
            {<point name="construct.a.ecca002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ecca002
         ON ACTION controlp INFIELD ecca002
            #add-point:ON ACTION controlp INFIELD ecca002
            {<point name="construct.c.ecca002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccasite
            #add-point:BEFORE FIELD eccasite
            {<point name="construct.b.eccasite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccasite
            
            #add-point:AFTER FIELD eccasite
            {<point name="construct.a.eccasite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.eccasite
         ON ACTION controlp INFIELD eccasite
            #add-point:ON ACTION controlp INFIELD eccasite
            {<point name="construct.c.eccasite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecca003
            #add-point:BEFORE FIELD ecca003
            {<point name="construct.b.ecca003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecca003
            
            #add-point:AFTER FIELD ecca003
            {<point name="construct.a.ecca003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ecca003
         ON ACTION controlp INFIELD ecca003
            #add-point:ON ACTION controlp INFIELD ecca003
            {<point name="construct.c.ecca003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecca900
            #add-point:BEFORE FIELD ecca900
            {<point name="construct.b.ecca900" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecca900
            
            #add-point:AFTER FIELD ecca900
            {<point name="construct.a.ecca900" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ecca900
         ON ACTION controlp INFIELD ecca900
            #add-point:ON ACTION controlp INFIELD ecca900
            {<point name="construct.c.ecca900" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecca905
            #add-point:BEFORE FIELD ecca905
            {<point name="construct.b.ecca905" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecca905
            
            #add-point:AFTER FIELD ecca905
            {<point name="construct.a.ecca905" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ecca905
         ON ACTION controlp INFIELD ecca905
            #add-point:ON ACTION controlp INFIELD ecca905
            {<point name="construct.c.ecca905" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecca906
            #add-point:BEFORE FIELD ecca906
            {<point name="construct.b.ecca906" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecca906
            
            #add-point:AFTER FIELD ecca906
            {<point name="construct.a.ecca906" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ecca906
         ON ACTION controlp INFIELD ecca906
            #add-point:ON ACTION controlp INFIELD ecca906
            {<point name="construct.c.ecca906" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccastus
            #add-point:BEFORE FIELD eccastus
            {<point name="construct.b.eccastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccastus
            
            #add-point:AFTER FIELD eccastus
            {<point name="construct.a.eccastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.eccastus
         ON ACTION controlp INFIELD eccastus
            #add-point:ON ACTION controlp INFIELD eccastus
            {<point name="construct.c.eccastus" />}
            #END add-point
 
         #Ctrlp:construct.c.eccaownid
         ON ACTION controlp INFIELD eccaownid
            #add-point:ON ACTION controlp INFIELD eccaownid
            {<point name="construct.c.eccaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccaownid
            #add-point:BEFORE FIELD eccaownid
            {<point name="construct.b.eccaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccaownid
            
            #add-point:AFTER FIELD eccaownid
            {<point name="construct.a.eccaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.eccaowndp
         ON ACTION controlp INFIELD eccaowndp
            #add-point:ON ACTION controlp INFIELD eccaowndp
            {<point name="construct.c.eccaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccaowndp
            #add-point:BEFORE FIELD eccaowndp
            {<point name="construct.b.eccaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccaowndp
            
            #add-point:AFTER FIELD eccaowndp
            {<point name="construct.a.eccaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.eccacrtid
         ON ACTION controlp INFIELD eccacrtid
            #add-point:ON ACTION controlp INFIELD eccacrtid
            {<point name="construct.c.eccacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccacrtid
            #add-point:BEFORE FIELD eccacrtid
            {<point name="construct.b.eccacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccacrtid
            
            #add-point:AFTER FIELD eccacrtid
            {<point name="construct.a.eccacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.eccacrtdp
         ON ACTION controlp INFIELD eccacrtdp
            #add-point:ON ACTION controlp INFIELD eccacrtdp
            {<point name="construct.c.eccacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccacrtdp
            #add-point:BEFORE FIELD eccacrtdp
            {<point name="construct.b.eccacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccacrtdp
            
            #add-point:AFTER FIELD eccacrtdp
            {<point name="construct.a.eccacrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccacrtdt
            #add-point:BEFORE FIELD eccacrtdt
            {<point name="construct.b.eccacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.eccamodid
         ON ACTION controlp INFIELD eccamodid
            #add-point:ON ACTION controlp INFIELD eccamodid
            {<point name="construct.c.eccamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccamodid
            #add-point:BEFORE FIELD eccamodid
            {<point name="construct.b.eccamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccamodid
            
            #add-point:AFTER FIELD eccamodid
            {<point name="construct.a.eccamodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccamoddt
            #add-point:BEFORE FIELD eccamoddt
            {<point name="construct.b.eccamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.eccacnfid
         ON ACTION controlp INFIELD eccacnfid
            #add-point:ON ACTION controlp INFIELD eccacnfid
            {<point name="construct.c.eccacnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccacnfid
            #add-point:BEFORE FIELD eccacnfid
            {<point name="construct.b.eccacnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccacnfid
            
            #add-point:AFTER FIELD eccacnfid
            {<point name="construct.a.eccacnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccacnfdt
            #add-point:BEFORE FIELD eccacnfdt
            {<point name="construct.b.eccacnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON eccb003,eccb004,eccb005,eccb006,eccb007,eccb008,eccb009,eccb010,eccb011, 
          eccb012,eccb024,eccb025,eccb026,eccb027,eccb034,eccb013,eccb014,eccb015,eccb016,eccb017,eccb018, 
          eccb019,eccb020,eccb030,eccb031,eccb032,eccb021,eccb022,eccb023,eccb033,eccb028,eccb029,ooff013, 
          eccb035,eccb036,eccb901,eccb905,eccb906,eccb001,eccb002,eccb900,eccb902
           FROM s_detail1[1].eccb003,s_detail1[1].eccb004,s_detail1[1].eccb005,s_detail1[1].eccb006, 
               s_detail1[1].eccb007,s_detail1[1].eccb008,s_detail1[1].eccb009,s_detail1[1].eccb010,s_detail1[1].eccb011, 
               s_detail1[1].eccb012,s_detail1[1].eccb024,s_detail1[1].eccb025,s_detail1[1].eccb026,s_detail1[1].eccb027, 
               s_detail1[1].eccb034,s_detail1[1].eccb013,s_detail1[1].eccb014,s_detail1[1].eccb015,s_detail1[1].eccb016, 
               s_detail1[1].eccb017,s_detail1[1].eccb018,s_detail1[1].eccb019,s_detail1[1].eccb020,s_detail1[1].eccb030, 
               s_detail1[1].eccb031,s_detail1[1].eccb032,s_detail1[1].eccb021,s_detail1[1].eccb022,s_detail1[1].eccb023, 
               s_detail1[1].eccb033,s_detail1[1].eccb028,s_detail1[1].eccb029,s_detail1[1].ooff013,s_detail1[1].eccb035, 
               s_detail1[1].eccb036,s_detail1[1].eccb901,s_detail1[1].eccb905,s_detail1[1].eccb906,s_detail1[1].eccb001, 
               s_detail1[1].eccb002,s_detail1[1].eccb900,s_detail1[1].eccb902
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD eccb003
            #add-point:BEFORE FIELD eccb003
            {<point name="construct.b.page1.eccb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb003
            
            #add-point:AFTER FIELD eccb003
            {<point name="construct.a.page1.eccb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb003
         ON ACTION controlp INFIELD eccb003
            #add-point:ON ACTION controlp INFIELD eccb003
            {<point name="construct.c.page1.eccb003" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.eccb004
         ON ACTION controlp INFIELD eccb004
            #add-point:ON ACTION controlp INFIELD eccb004
            {<point name="construct.c.page1.eccb004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb004
            #add-point:BEFORE FIELD eccb004
            {<point name="construct.b.page1.eccb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb004
            
            #add-point:AFTER FIELD eccb004
            {<point name="construct.a.page1.eccb004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb005
            #add-point:BEFORE FIELD eccb005
            {<point name="construct.b.page1.eccb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb005
            
            #add-point:AFTER FIELD eccb005
            {<point name="construct.a.page1.eccb005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb005
         ON ACTION controlp INFIELD eccb005
            #add-point:ON ACTION controlp INFIELD eccb005
            {<point name="construct.c.page1.eccb005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb006
            #add-point:BEFORE FIELD eccb006
            {<point name="construct.b.page1.eccb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb006
            
            #add-point:AFTER FIELD eccb006
            {<point name="construct.a.page1.eccb006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb006
         ON ACTION controlp INFIELD eccb006
            #add-point:ON ACTION controlp INFIELD eccb006
            {<point name="construct.c.page1.eccb006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb007
            #add-point:BEFORE FIELD eccb007
            {<point name="construct.b.page1.eccb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb007
            
            #add-point:AFTER FIELD eccb007
            {<point name="construct.a.page1.eccb007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb007
         ON ACTION controlp INFIELD eccb007
            #add-point:ON ACTION controlp INFIELD eccb007
            {<point name="construct.c.page1.eccb007" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.eccb008
         ON ACTION controlp INFIELD eccb008
            #add-point:ON ACTION controlp INFIELD eccb008
            {<point name="construct.c.page1.eccb008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb008
            #add-point:BEFORE FIELD eccb008
            {<point name="construct.b.page1.eccb008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb008
            
            #add-point:AFTER FIELD eccb008
            {<point name="construct.a.page1.eccb008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb009
            #add-point:BEFORE FIELD eccb009
            {<point name="construct.b.page1.eccb009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb009
            
            #add-point:AFTER FIELD eccb009
            {<point name="construct.a.page1.eccb009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb009
         ON ACTION controlp INFIELD eccb009
            #add-point:ON ACTION controlp INFIELD eccb009
            {<point name="construct.c.page1.eccb009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb010
            #add-point:BEFORE FIELD eccb010
            {<point name="construct.b.page1.eccb010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb010
            
            #add-point:AFTER FIELD eccb010
            {<point name="construct.a.page1.eccb010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb010
         ON ACTION controlp INFIELD eccb010
            #add-point:ON ACTION controlp INFIELD eccb010
            {<point name="construct.c.page1.eccb010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb011
            #add-point:BEFORE FIELD eccb011
            {<point name="construct.b.page1.eccb011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb011
            
            #add-point:AFTER FIELD eccb011
            {<point name="construct.a.page1.eccb011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb011
         ON ACTION controlp INFIELD eccb011
            #add-point:ON ACTION controlp INFIELD eccb011
            {<point name="construct.c.page1.eccb011" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.eccb012
         ON ACTION controlp INFIELD eccb012
            #add-point:ON ACTION controlp INFIELD eccb012
            {<point name="construct.c.page1.eccb012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb012
            #add-point:BEFORE FIELD eccb012
            {<point name="construct.b.page1.eccb012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb012
            
            #add-point:AFTER FIELD eccb012
            {<point name="construct.a.page1.eccb012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb024
            #add-point:BEFORE FIELD eccb024
            {<point name="construct.b.page1.eccb024" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb024
            
            #add-point:AFTER FIELD eccb024
            {<point name="construct.a.page1.eccb024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb024
         ON ACTION controlp INFIELD eccb024
            #add-point:ON ACTION controlp INFIELD eccb024
            {<point name="construct.c.page1.eccb024" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb025
            #add-point:BEFORE FIELD eccb025
            {<point name="construct.b.page1.eccb025" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb025
            
            #add-point:AFTER FIELD eccb025
            {<point name="construct.a.page1.eccb025" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb025
         ON ACTION controlp INFIELD eccb025
            #add-point:ON ACTION controlp INFIELD eccb025
            {<point name="construct.c.page1.eccb025" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb026
            #add-point:BEFORE FIELD eccb026
            {<point name="construct.b.page1.eccb026" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb026
            
            #add-point:AFTER FIELD eccb026
            {<point name="construct.a.page1.eccb026" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb026
         ON ACTION controlp INFIELD eccb026
            #add-point:ON ACTION controlp INFIELD eccb026
            {<point name="construct.c.page1.eccb026" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb027
            #add-point:BEFORE FIELD eccb027
            {<point name="construct.b.page1.eccb027" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb027
            
            #add-point:AFTER FIELD eccb027
            {<point name="construct.a.page1.eccb027" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb027
         ON ACTION controlp INFIELD eccb027
            #add-point:ON ACTION controlp INFIELD eccb027
            {<point name="construct.c.page1.eccb027" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb034
            #add-point:BEFORE FIELD eccb034
            {<point name="construct.b.page1.eccb034" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb034
            
            #add-point:AFTER FIELD eccb034
            {<point name="construct.a.page1.eccb034" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb034
         ON ACTION controlp INFIELD eccb034
            #add-point:ON ACTION controlp INFIELD eccb034
            {<point name="construct.c.page1.eccb034" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb013
            #add-point:BEFORE FIELD eccb013
            {<point name="construct.b.page1.eccb013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb013
            
            #add-point:AFTER FIELD eccb013
            {<point name="construct.a.page1.eccb013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb013
         ON ACTION controlp INFIELD eccb013
            #add-point:ON ACTION controlp INFIELD eccb013
            {<point name="construct.c.page1.eccb013" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.eccb014
         ON ACTION controlp INFIELD eccb014
            #add-point:ON ACTION controlp INFIELD eccb014
            {<point name="construct.c.page1.eccb014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb014
            #add-point:BEFORE FIELD eccb014
            {<point name="construct.b.page1.eccb014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb014
            
            #add-point:AFTER FIELD eccb014
            {<point name="construct.a.page1.eccb014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb015
            #add-point:BEFORE FIELD eccb015
            {<point name="construct.b.page1.eccb015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb015
            
            #add-point:AFTER FIELD eccb015
            {<point name="construct.a.page1.eccb015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb015
         ON ACTION controlp INFIELD eccb015
            #add-point:ON ACTION controlp INFIELD eccb015
            {<point name="construct.c.page1.eccb015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb016
            #add-point:BEFORE FIELD eccb016
            {<point name="construct.b.page1.eccb016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb016
            
            #add-point:AFTER FIELD eccb016
            {<point name="construct.a.page1.eccb016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb016
         ON ACTION controlp INFIELD eccb016
            #add-point:ON ACTION controlp INFIELD eccb016
            {<point name="construct.c.page1.eccb016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb017
            #add-point:BEFORE FIELD eccb017
            {<point name="construct.b.page1.eccb017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb017
            
            #add-point:AFTER FIELD eccb017
            {<point name="construct.a.page1.eccb017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb017
         ON ACTION controlp INFIELD eccb017
            #add-point:ON ACTION controlp INFIELD eccb017
            {<point name="construct.c.page1.eccb017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb018
            #add-point:BEFORE FIELD eccb018
            {<point name="construct.b.page1.eccb018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb018
            
            #add-point:AFTER FIELD eccb018
            {<point name="construct.a.page1.eccb018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb018
         ON ACTION controlp INFIELD eccb018
            #add-point:ON ACTION controlp INFIELD eccb018
            {<point name="construct.c.page1.eccb018" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb019
            #add-point:BEFORE FIELD eccb019
            {<point name="construct.b.page1.eccb019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb019
            
            #add-point:AFTER FIELD eccb019
            {<point name="construct.a.page1.eccb019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb019
         ON ACTION controlp INFIELD eccb019
            #add-point:ON ACTION controlp INFIELD eccb019
            {<point name="construct.c.page1.eccb019" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb020
            #add-point:BEFORE FIELD eccb020
            {<point name="construct.b.page1.eccb020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb020
            
            #add-point:AFTER FIELD eccb020
            {<point name="construct.a.page1.eccb020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb020
         ON ACTION controlp INFIELD eccb020
            #add-point:ON ACTION controlp INFIELD eccb020
            {<point name="construct.c.page1.eccb020" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.eccb030
         ON ACTION controlp INFIELD eccb030
            #add-point:ON ACTION controlp INFIELD eccb030
            {<point name="construct.c.page1.eccb030" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb030
            #add-point:BEFORE FIELD eccb030
            {<point name="construct.b.page1.eccb030" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb030
            
            #add-point:AFTER FIELD eccb030
            {<point name="construct.a.page1.eccb030" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb031
            #add-point:BEFORE FIELD eccb031
            {<point name="construct.b.page1.eccb031" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb031
            
            #add-point:AFTER FIELD eccb031
            {<point name="construct.a.page1.eccb031" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb031
         ON ACTION controlp INFIELD eccb031
            #add-point:ON ACTION controlp INFIELD eccb031
            {<point name="construct.c.page1.eccb031" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb032
            #add-point:BEFORE FIELD eccb032
            {<point name="construct.b.page1.eccb032" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb032
            
            #add-point:AFTER FIELD eccb032
            {<point name="construct.a.page1.eccb032" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb032
         ON ACTION controlp INFIELD eccb032
            #add-point:ON ACTION controlp INFIELD eccb032
            {<point name="construct.c.page1.eccb032" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.eccb021
         ON ACTION controlp INFIELD eccb021
            #add-point:ON ACTION controlp INFIELD eccb021
            {<point name="construct.c.page1.eccb021" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb021
            #add-point:BEFORE FIELD eccb021
            {<point name="construct.b.page1.eccb021" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb021
            
            #add-point:AFTER FIELD eccb021
            {<point name="construct.a.page1.eccb021" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb022
            #add-point:BEFORE FIELD eccb022
            {<point name="construct.b.page1.eccb022" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb022
            
            #add-point:AFTER FIELD eccb022
            {<point name="construct.a.page1.eccb022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb022
         ON ACTION controlp INFIELD eccb022
            #add-point:ON ACTION controlp INFIELD eccb022
            {<point name="construct.c.page1.eccb022" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb023
            #add-point:BEFORE FIELD eccb023
            {<point name="construct.b.page1.eccb023" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb023
            
            #add-point:AFTER FIELD eccb023
            {<point name="construct.a.page1.eccb023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb023
         ON ACTION controlp INFIELD eccb023
            #add-point:ON ACTION controlp INFIELD eccb023
            {<point name="construct.c.page1.eccb023" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb033
            #add-point:BEFORE FIELD eccb033
            {<point name="construct.b.page1.eccb033" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb033
            
            #add-point:AFTER FIELD eccb033
            {<point name="construct.a.page1.eccb033" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb033
         ON ACTION controlp INFIELD eccb033
            #add-point:ON ACTION controlp INFIELD eccb033
            {<point name="construct.c.page1.eccb033" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb028
            #add-point:BEFORE FIELD eccb028
            {<point name="construct.b.page1.eccb028" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb028
            
            #add-point:AFTER FIELD eccb028
            {<point name="construct.a.page1.eccb028" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb028
         ON ACTION controlp INFIELD eccb028
            #add-point:ON ACTION controlp INFIELD eccb028
            {<point name="construct.c.page1.eccb028" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb029
            #add-point:BEFORE FIELD eccb029
            {<point name="construct.b.page1.eccb029" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb029
            
            #add-point:AFTER FIELD eccb029
            {<point name="construct.a.page1.eccb029" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb029
         ON ACTION controlp INFIELD eccb029
            #add-point:ON ACTION controlp INFIELD eccb029
            {<point name="construct.c.page1.eccb029" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ooff013
            #add-point:BEFORE FIELD ooff013
            {<point name="construct.b.page1.ooff013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ooff013
            
            #add-point:AFTER FIELD ooff013
            {<point name="construct.a.page1.ooff013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ooff013
         ON ACTION controlp INFIELD ooff013
            #add-point:ON ACTION controlp INFIELD ooff013
            {<point name="construct.c.page1.ooff013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb035
            #add-point:BEFORE FIELD eccb035
            {<point name="construct.b.page1.eccb035" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb035
            
            #add-point:AFTER FIELD eccb035
            {<point name="construct.a.page1.eccb035" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb035
         ON ACTION controlp INFIELD eccb035
            #add-point:ON ACTION controlp INFIELD eccb035
            {<point name="construct.c.page1.eccb035" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb036
            #add-point:BEFORE FIELD eccb036
            {<point name="construct.b.page1.eccb036" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb036
            
            #add-point:AFTER FIELD eccb036
            {<point name="construct.a.page1.eccb036" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb036
         ON ACTION controlp INFIELD eccb036
            #add-point:ON ACTION controlp INFIELD eccb036
            {<point name="construct.c.page1.eccb036" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb901
            #add-point:BEFORE FIELD eccb901
            {<point name="construct.b.page1.eccb901" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb901
            
            #add-point:AFTER FIELD eccb901
            {<point name="construct.a.page1.eccb901" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb901
         ON ACTION controlp INFIELD eccb901
            #add-point:ON ACTION controlp INFIELD eccb901
            {<point name="construct.c.page1.eccb901" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb905
            #add-point:BEFORE FIELD eccb905
            {<point name="construct.b.page1.eccb905" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb905
            
            #add-point:AFTER FIELD eccb905
            {<point name="construct.a.page1.eccb905" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb905
         ON ACTION controlp INFIELD eccb905
            #add-point:ON ACTION controlp INFIELD eccb905
            {<point name="construct.c.page1.eccb905" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb906
            #add-point:BEFORE FIELD eccb906
            {<point name="construct.b.page1.eccb906" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb906
            
            #add-point:AFTER FIELD eccb906
            {<point name="construct.a.page1.eccb906" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb906
         ON ACTION controlp INFIELD eccb906
            #add-point:ON ACTION controlp INFIELD eccb906
            {<point name="construct.c.page1.eccb906" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb001
            #add-point:BEFORE FIELD eccb001
            {<point name="construct.b.page1.eccb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb001
            
            #add-point:AFTER FIELD eccb001
            {<point name="construct.a.page1.eccb001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb001
         ON ACTION controlp INFIELD eccb001
            #add-point:ON ACTION controlp INFIELD eccb001
            {<point name="construct.c.page1.eccb001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb002
            #add-point:BEFORE FIELD eccb002
            {<point name="construct.b.page1.eccb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb002
            
            #add-point:AFTER FIELD eccb002
            {<point name="construct.a.page1.eccb002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb002
         ON ACTION controlp INFIELD eccb002
            #add-point:ON ACTION controlp INFIELD eccb002
            {<point name="construct.c.page1.eccb002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb900
            #add-point:BEFORE FIELD eccb900
            {<point name="construct.b.page1.eccb900" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb900
            
            #add-point:AFTER FIELD eccb900
            {<point name="construct.a.page1.eccb900" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb900
         ON ACTION controlp INFIELD eccb900
            #add-point:ON ACTION controlp INFIELD eccb900
            {<point name="construct.c.page1.eccb900" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb902
            #add-point:BEFORE FIELD eccb902
            {<point name="construct.b.page1.eccb902" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb902
            
            #add-point:AFTER FIELD eccb902
            {<point name="construct.a.page1.eccb902" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.eccb902
         ON ACTION controlp INFIELD eccb902
            #add-point:ON ACTION controlp INFIELD eccb902
            {<point name="construct.c.page1.eccb902" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
      CONSTRUCT g_wc2_table2 ON eccc004,eccc005,eccc006,eccc007,eccc008,eccc009,eccc010,eccc901,eccc905, 
          eccc906,eccc001,eccc002,eccc900,eccc902
           FROM s_detail2[1].eccc004,s_detail2[1].eccc005,s_detail2[1].eccc006,s_detail2[1].eccc007, 
               s_detail2[1].eccc008,s_detail2[1].eccc009,s_detail2[1].eccc010,s_detail2[1].eccc901,s_detail2[1].eccc905, 
               s_detail2[1].eccc906,s_detail2[1].eccc001,s_detail2[1].eccc002,s_detail2[1].eccc900,s_detail2[1].eccc902 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD eccc004
            #add-point:BEFORE FIELD eccc004
            {<point name="construct.b.page2.eccc004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc004
            
            #add-point:AFTER FIELD eccc004
            {<point name="construct.a.page2.eccc004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.eccc004
         ON ACTION controlp INFIELD eccc004
            #add-point:ON ACTION controlp INFIELD eccc004
            {<point name="construct.c.page2.eccc004" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.eccc005
         ON ACTION controlp INFIELD eccc005
            #add-point:ON ACTION controlp INFIELD eccc005
            {<point name="construct.c.page2.eccc005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc005
            #add-point:BEFORE FIELD eccc005
            {<point name="construct.b.page2.eccc005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc005
            
            #add-point:AFTER FIELD eccc005
            {<point name="construct.a.page2.eccc005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.eccc006
         ON ACTION controlp INFIELD eccc006
            #add-point:ON ACTION controlp INFIELD eccc006
            {<point name="construct.c.page2.eccc006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc006
            #add-point:BEFORE FIELD eccc006
            {<point name="construct.b.page2.eccc006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc006
            
            #add-point:AFTER FIELD eccc006
            {<point name="construct.a.page2.eccc006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc007
            #add-point:BEFORE FIELD eccc007
            {<point name="construct.b.page2.eccc007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc007
            
            #add-point:AFTER FIELD eccc007
            {<point name="construct.a.page2.eccc007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.eccc007
         ON ACTION controlp INFIELD eccc007
            #add-point:ON ACTION controlp INFIELD eccc007
            {<point name="construct.c.page2.eccc007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc008
            #add-point:BEFORE FIELD eccc008
            {<point name="construct.b.page2.eccc008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc008
            
            #add-point:AFTER FIELD eccc008
            {<point name="construct.a.page2.eccc008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.eccc008
         ON ACTION controlp INFIELD eccc008
            #add-point:ON ACTION controlp INFIELD eccc008
            {<point name="construct.c.page2.eccc008" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.eccc009
         ON ACTION controlp INFIELD eccc009
            #add-point:ON ACTION controlp INFIELD eccc009
            {<point name="construct.c.page2.eccc009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc009
            #add-point:BEFORE FIELD eccc009
            {<point name="construct.b.page2.eccc009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc009
            
            #add-point:AFTER FIELD eccc009
            {<point name="construct.a.page2.eccc009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc010
            #add-point:BEFORE FIELD eccc010
            {<point name="construct.b.page2.eccc010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc010
            
            #add-point:AFTER FIELD eccc010
            {<point name="construct.a.page2.eccc010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.eccc010
         ON ACTION controlp INFIELD eccc010
            #add-point:ON ACTION controlp INFIELD eccc010
            {<point name="construct.c.page2.eccc010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc901
            #add-point:BEFORE FIELD eccc901
            {<point name="construct.b.page2.eccc901" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc901
            
            #add-point:AFTER FIELD eccc901
            {<point name="construct.a.page2.eccc901" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.eccc901
         ON ACTION controlp INFIELD eccc901
            #add-point:ON ACTION controlp INFIELD eccc901
            {<point name="construct.c.page2.eccc901" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc905
            #add-point:BEFORE FIELD eccc905
            {<point name="construct.b.page2.eccc905" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc905
            
            #add-point:AFTER FIELD eccc905
            {<point name="construct.a.page2.eccc905" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.eccc905
         ON ACTION controlp INFIELD eccc905
            #add-point:ON ACTION controlp INFIELD eccc905
            {<point name="construct.c.page2.eccc905" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc906
            #add-point:BEFORE FIELD eccc906
            {<point name="construct.b.page2.eccc906" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc906
            
            #add-point:AFTER FIELD eccc906
            {<point name="construct.a.page2.eccc906" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.eccc906
         ON ACTION controlp INFIELD eccc906
            #add-point:ON ACTION controlp INFIELD eccc906
            {<point name="construct.c.page2.eccc906" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc001
            #add-point:BEFORE FIELD eccc001
            {<point name="construct.b.page2.eccc001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc001
            
            #add-point:AFTER FIELD eccc001
            {<point name="construct.a.page2.eccc001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.eccc001
         ON ACTION controlp INFIELD eccc001
            #add-point:ON ACTION controlp INFIELD eccc001
            {<point name="construct.c.page2.eccc001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc002
            #add-point:BEFORE FIELD eccc002
            {<point name="construct.b.page2.eccc002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc002
            
            #add-point:AFTER FIELD eccc002
            {<point name="construct.a.page2.eccc002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.eccc002
         ON ACTION controlp INFIELD eccc002
            #add-point:ON ACTION controlp INFIELD eccc002
            {<point name="construct.c.page2.eccc002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc900
            #add-point:BEFORE FIELD eccc900
            {<point name="construct.b.page2.eccc900" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc900
            
            #add-point:AFTER FIELD eccc900
            {<point name="construct.a.page2.eccc900" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.eccc900
         ON ACTION controlp INFIELD eccc900
            #add-point:ON ACTION controlp INFIELD eccc900
            {<point name="construct.c.page2.eccc900" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc902
            #add-point:BEFORE FIELD eccc902
            {<point name="construct.b.page2.eccc902" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc902
            
            #add-point:AFTER FIELD eccc902
            {<point name="construct.a.page2.eccc902" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.eccc902
         ON ACTION controlp INFIELD eccc902
            #add-point:ON ACTION controlp INFIELD eccc902
            {<point name="construct.c.page2.eccc902" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION

{</section>}

{<section id="aect801.filter" >}
#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aect801_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON eccadocno,eccasite,eccadocdt,ecca004,ecca001,ecca002,ecca003,ecca900, 
          ecca905
                          FROM s_browse[1].b_eccadocno,s_browse[1].b_eccasite,s_browse[1].b_eccadocdt, 
                              s_browse[1].b_ecca004,s_browse[1].b_ecca001,s_browse[1].b_ecca002,s_browse[1].b_ecca003, 
                              s_browse[1].b_ecca900,s_browse[1].b_ecca905
 
         BEFORE CONSTRUCT
               DISPLAY aect801_filter_parser('eccadocno') TO s_browse[1].b_eccadocno
            DISPLAY aect801_filter_parser('eccasite') TO s_browse[1].b_eccasite
            DISPLAY aect801_filter_parser('eccadocdt') TO s_browse[1].b_eccadocdt
            DISPLAY aect801_filter_parser('ecca004') TO s_browse[1].b_ecca004
            DISPLAY aect801_filter_parser('ecca001') TO s_browse[1].b_ecca001
            DISPLAY aect801_filter_parser('ecca002') TO s_browse[1].b_ecca002
            DISPLAY aect801_filter_parser('ecca003') TO s_browse[1].b_ecca003
            DISPLAY aect801_filter_parser('ecca900') TO s_browse[1].b_ecca900
            DISPLAY aect801_filter_parser('ecca905') TO s_browse[1].b_ecca905
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aect801_filter_show('eccadocno')
   CALL aect801_filter_show('eccasite')
   CALL aect801_filter_show('eccadocdt')
   CALL aect801_filter_show('ecca004')
   CALL aect801_filter_show('ecca001')
   CALL aect801_filter_show('ecca002')
   CALL aect801_filter_show('ecca003')
   CALL aect801_filter_show('ecca900')
   CALL aect801_filter_show('ecca905')
 
END FUNCTION

{</section>}

{<section id="aect801.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION aect801_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION

{</section>}

{<section id="aect801.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION aect801_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aect801_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION

{</section>}

{<section id="aect801.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aect801_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_eccb_d.clear()
   CALL g_eccb2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aect801_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aect801_browser_fill("")
      CALL aect801_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aect801_filter_show('eccadocno')
   CALL aect801_filter_show('eccasite')
   CALL aect801_filter_show('eccadocdt')
   CALL aect801_filter_show('ecca004')
   CALL aect801_filter_show('ecca001')
   CALL aect801_filter_show('ecca002')
   CALL aect801_filter_show('ecca003')
   CALL aect801_filter_show('ecca900')
   CALL aect801_filter_show('ecca905')
   CALL aect801_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL aect801_fetch("F") 
      #顯示單身筆數
      CALL aect801_idx_chk()
   END IF
 
END FUNCTION

{</section>}

{<section id="aect801.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aect801_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_ecca_m.eccasite = g_browser[g_current_idx].b_eccasite
   LET g_ecca_m.eccadocno = g_browser[g_current_idx].b_eccadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aect801_master_referesh USING g_ecca_m.eccasite,g_ecca_m.eccadocno INTO g_ecca_m.eccadocno, 
       g_ecca_m.ecca001,g_ecca_m.eccadocdt,g_ecca_m.ecca004,g_ecca_m.ecca002,g_ecca_m.eccasite,g_ecca_m.ecca003, 
       g_ecca_m.ecca900,g_ecca_m.ecca905,g_ecca_m.ecca906,g_ecca_m.eccastus,g_ecca_m.eccaownid,g_ecca_m.eccaowndp, 
       g_ecca_m.eccacrtid,g_ecca_m.eccacrtdp,g_ecca_m.eccacrtdt,g_ecca_m.eccamodid,g_ecca_m.eccamoddt, 
       g_ecca_m.eccacnfid,g_ecca_m.eccacnfdt,g_ecca_m.ecca001_desc,g_ecca_m.ecca905_desc,g_ecca_m.eccaownid_desc, 
       g_ecca_m.eccaowndp_desc,g_ecca_m.eccacrtid_desc,g_ecca_m.eccacrtdp_desc,g_ecca_m.eccamodid_desc, 
       g_ecca_m.eccacnfid_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "ecca_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      INITIALIZE g_ecca_m.* TO NULL
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aect801_set_act_visible()   
   CALL aect801_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_ecca_m_t.* = g_ecca_m.*
   LET g_ecca_m_o.* = g_ecca_m.*
   
   LET g_data_owner = g_ecca_m.eccaownid      
   LET g_data_dept  = g_ecca_m.eccaowndp
   
   #重新顯示   
   CALL aect801_show()
 
   #+ 此段落由子樣板a56產生
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
END FUNCTION

{</section>}

{<section id="aect801.insert" >}
#+ 資料新增
PRIVATE FUNCTION aect801_insert()
   #add-point:insert段define
{<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_eccb_d.clear()   
   CALL g_eccb2_d.clear()  
 
 
   #INITIALIZE g_ecca_m.* LIKE ecca_t.*             #DEFAULT 設定  #161124-00048#2  2016/12/13 By 08734 mark
   INITIALIZE g_ecca_m.* TO NULL            #DEFAULT 設定 #161124-00048#2  2016/12/13 By 08734 add
   
   LET g_eccasite_t = NULL
   LET g_eccadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      #公用欄位新增給值
      LET g_ecca_m.eccaownid = g_user
      LET g_ecca_m.eccaowndp = g_dept
      LET g_ecca_m.eccacrtid = g_user
      LET g_ecca_m.eccacrtdp = g_dept 
      LET g_ecca_m.eccacrtdt = cl_get_current()
      LET g_ecca_m.eccamodid = ""
      LET g_ecca_m.eccamoddt = ""
      LET g_ecca_m.eccastus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_ecca_m.ecca004 = "1"
 
  
      #add-point:單頭預設值
{<point name="insert.default"/>}
      #end add-point 
      
      #顯示狀態(stus)圖片
            #此段落由子樣板a21產生
	  #根據狀態碼顯示對應圖片
      CASE g_ecca_m.eccastus
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")  
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")                    
            
      END CASE
 
 
    
      CALL aect801_input("a")
      
      #add-point:單頭輸入後
{<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_ecca_m.* TO NULL
         INITIALIZE g_eccb_d TO NULL
         INITIALIZE g_eccb2_d TO NULL
 
         #add-point:取消新增後
{<point name="insert.cancel"/>}
         #end add-point 
         CALL aect801_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_eccb_d.clear()
      #CALL g_eccb2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aect801_set_act_visible()   
   CALL aect801_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_eccasite_t = g_ecca_m.eccasite
   LET g_eccadocno_t = g_ecca_m.eccadocno
   LET g_state = 'Y'
   
   #組合新增資料的條件
   LET g_add_browse = " eccaent = '" ||g_enterprise|| "' AND",
                      " eccasite = '", g_ecca_m.eccasite, "' "
                      ," AND eccadocno = '", g_ecca_m.eccadocno, "' "
 
                      
   #add-point:組合新增資料的條件後
{<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aect801_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE aect801_cl
   
   CALL aect801_idx_chk()
   
   #add-point:新增結束後
{<point name="insert.after"/>}
   #end add-point 
   
END FUNCTION

{</section>}

{<section id="aect801.modify" >}
#+ 資料修改
PRIVATE FUNCTION aect801_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
   DEFINE l_wc2_table2   STRING
 
 
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_ecca_m_t.* = g_ecca_m.*
   LET g_ecca_m_o.* = g_ecca_m.*
   
   IF g_ecca_m.eccasite IS NULL
   OR g_ecca_m.eccadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
 
   ERROR ""
  
   LET g_eccasite_t = g_ecca_m.eccasite
   LET g_eccadocno_t = g_ecca_m.eccadocno
 
   CALL s_transaction_begin()
   
   OPEN aect801_cl USING g_enterprise,g_ecca_m.eccasite,g_ecca_m.eccadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aect801_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aect801_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aect801_master_referesh USING g_ecca_m.eccasite,g_ecca_m.eccadocno INTO g_ecca_m.eccadocno, 
       g_ecca_m.ecca001,g_ecca_m.eccadocdt,g_ecca_m.ecca004,g_ecca_m.ecca002,g_ecca_m.eccasite,g_ecca_m.ecca003, 
       g_ecca_m.ecca900,g_ecca_m.ecca905,g_ecca_m.ecca906,g_ecca_m.eccastus,g_ecca_m.eccaownid,g_ecca_m.eccaowndp, 
       g_ecca_m.eccacrtid,g_ecca_m.eccacrtdp,g_ecca_m.eccacrtdt,g_ecca_m.eccamodid,g_ecca_m.eccamoddt, 
       g_ecca_m.eccacnfid,g_ecca_m.eccacnfdt,g_ecca_m.ecca001_desc,g_ecca_m.ecca905_desc,g_ecca_m.eccaownid_desc, 
       g_ecca_m.eccaowndp_desc,g_ecca_m.eccacrtid_desc,g_ecca_m.eccacrtdp_desc,g_ecca_m.eccamodid_desc, 
       g_ecca_m.eccacnfid_desc
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
   
   CALL aect801_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
    
   WHILE TRUE
      LET g_eccasite_t = g_ecca_m.eccasite
      LET g_eccadocno_t = g_ecca_m.eccadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_ecca_m.eccamodid = g_user 
LET g_ecca_m.eccamoddt = cl_get_current()
LET g_ecca_m.eccamodid_desc = cl_get_username(g_ecca_m.eccamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL aect801_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_ecca_m.* = g_ecca_m_t.*
         CALL aect801_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE ecca_t SET (eccamodid,eccamoddt) = (g_ecca_m.eccamodid,g_ecca_m.eccamoddt)
       WHERE eccaent = g_enterprise AND eccasite = g_eccasite_t
         AND eccadocno = g_eccadocno_t
 
                  
      #若單頭key欄位有變更
      IF g_ecca_m.eccasite != g_eccasite_t 
      OR g_ecca_m.eccadocno != g_eccadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE eccb_t SET eccbsite = g_ecca_m.eccasite
                                       ,eccbdocno = g_ecca_m.eccadocno
 
          WHERE eccbent = g_enterprise AND eccbsite = g_eccasite_t
            AND eccbdocno = g_eccadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "eccb_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "eccb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE eccc_t
            SET ecccsite = g_ecca_m.eccasite
               ,ecccdocno = g_ecca_m.eccadocno
 
          WHERE ecccent = g_enterprise AND
                ecccsite = g_eccasite_t
            AND ecccdocno = g_eccadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "eccc_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "eccc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aect801_set_act_visible()   
   CALL aect801_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " eccaent = '" ||g_enterprise|| "' AND",
                      " eccasite = '", g_ecca_m.eccasite, "' "
                      ," AND eccadocno = '", g_ecca_m.eccadocno, "' "
 
   #填到對應位置
   CALL aect801_browser_fill("")
 
   CLOSE aect801_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_ecca_m.eccasite,'U')
 
END FUNCTION   

{</section>}

{<section id="aect801.input" >}
#+ 資料輸入
PRIVATE FUNCTION aect801_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_ecca_m.eccadocno,g_ecca_m.ecca001,g_ecca_m.oobxl003,g_ecca_m.ecca001_desc,g_ecca_m.eccadocdt, 
       g_ecca_m.ecca001_desc_1,g_ecca_m.ecca004,g_ecca_m.ecca002,g_ecca_m.eccasite,g_ecca_m.ecca003, 
       g_ecca_m.ecca900,g_ecca_m.ecca905,g_ecca_m.ecca905_desc,g_ecca_m.ecca906,g_ecca_m.eccastus,g_ecca_m.eccaownid, 
       g_ecca_m.eccaownid_desc,g_ecca_m.eccaowndp,g_ecca_m.eccaowndp_desc,g_ecca_m.eccacrtid,g_ecca_m.eccacrtid_desc, 
       g_ecca_m.eccacrtdp,g_ecca_m.eccacrtdp_desc,g_ecca_m.eccacrtdt,g_ecca_m.eccamodid,g_ecca_m.eccamodid_desc, 
       g_ecca_m.eccamoddt,g_ecca_m.eccacnfid,g_ecca_m.eccacnfid_desc,g_ecca_m.eccacnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT eccb003,eccb004,eccb005,eccb006,eccb007,eccb008,eccb009,eccb010,eccb011, 
       eccb012,eccb024,eccb025,eccb026,eccb027,eccb034,eccb013,eccb014,eccb015,eccb016,eccb017,eccb018, 
       eccb019,eccb020,eccb030,eccb031,eccb032,eccb021,eccb022,eccb023,eccb033,eccb028,eccb029,eccb035, 
       eccb036,eccb901,eccb905,eccb906,eccb001,eccb002,eccb900,eccb902 FROM eccb_t WHERE eccbent=? AND  
       eccbsite=? AND eccbdocno=? AND eccb003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aect801_bcl CURSOR FROM g_forupd_sql
   
 
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT eccc004,eccc005,eccc006,eccc007,eccc008,eccc009,eccc010,eccc901,eccc905, 
       eccc906,eccc001,eccc002,eccc900,eccc902 FROM eccc_t WHERE ecccent=? AND ecccsite=? AND ecccdocno=?  
       AND eccc003=? AND eccc004=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aect801_bcl2 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aect801_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aect801_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_ecca_m.eccadocno,g_ecca_m.ecca001,g_ecca_m.eccadocdt,g_ecca_m.ecca004,g_ecca_m.ecca002, 
       g_ecca_m.eccasite,g_ecca_m.ecca003,g_ecca_m.ecca900,g_ecca_m.ecca905,g_ecca_m.ecca906,g_ecca_m.eccastus 

   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

{</section>}

{<section id="aect801.input.head" >}
      #單頭段
      INPUT BY NAME g_ecca_m.eccadocno,g_ecca_m.ecca001,g_ecca_m.eccadocdt,g_ecca_m.ecca004,g_ecca_m.ecca002, 
          g_ecca_m.eccasite,g_ecca_m.ecca003,g_ecca_m.ecca900,g_ecca_m.ecca905,g_ecca_m.ecca906,g_ecca_m.eccastus  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN aect801_cl USING g_enterprise,g_ecca_m.eccasite,g_ecca_m.eccadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aect801_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aect801_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD eccadocno
            #add-point:BEFORE FIELD eccadocno
            {<point name="input.b.eccadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccadocno
            
            #add-point:AFTER FIELD eccadocno
            {<point name="input.a.eccadocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccadocno
            #add-point:ON CHANGE eccadocno
            {<point name="input.g.eccadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecca001
            
            #add-point:AFTER FIELD ecca001
            {<point name="input.a.ecca001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecca001
            #add-point:BEFORE FIELD ecca001
            {<point name="input.b.ecca001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecca001
            #add-point:ON CHANGE ecca001
            {<point name="input.g.ecca001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccadocdt
            #add-point:BEFORE FIELD eccadocdt
            {<point name="input.b.eccadocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccadocdt
            
            #add-point:AFTER FIELD eccadocdt
            {<point name="input.a.eccadocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccadocdt
            #add-point:ON CHANGE eccadocdt
            {<point name="input.g.eccadocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecca004
            #add-point:BEFORE FIELD ecca004
            {<point name="input.b.ecca004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecca004
            
            #add-point:AFTER FIELD ecca004
            {<point name="input.a.ecca004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecca004
            #add-point:ON CHANGE ecca004
            {<point name="input.g.ecca004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecca002
            #add-point:BEFORE FIELD ecca002
            {<point name="input.b.ecca002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecca002
            
            #add-point:AFTER FIELD ecca002
            {<point name="input.a.ecca002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecca002
            #add-point:ON CHANGE ecca002
            {<point name="input.g.ecca002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccasite
            #add-point:BEFORE FIELD eccasite
            {<point name="input.b.eccasite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccasite
            
            #add-point:AFTER FIELD eccasite
            {<point name="input.a.eccasite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccasite
            #add-point:ON CHANGE eccasite
            {<point name="input.g.eccasite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecca003
            #add-point:BEFORE FIELD ecca003
            {<point name="input.b.ecca003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecca003
            
            #add-point:AFTER FIELD ecca003
            {<point name="input.a.ecca003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecca003
            #add-point:ON CHANGE ecca003
            {<point name="input.g.ecca003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecca900
            #add-point:BEFORE FIELD ecca900
            {<point name="input.b.ecca900" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecca900
            
            #add-point:AFTER FIELD ecca900
            {<point name="input.a.ecca900" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecca900
            #add-point:ON CHANGE ecca900
            {<point name="input.g.ecca900" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecca905
            
            #add-point:AFTER FIELD ecca905
            {<point name="input.a.ecca905" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecca905
            #add-point:BEFORE FIELD ecca905
            {<point name="input.b.ecca905" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE ecca905
            #add-point:ON CHANGE ecca905
            {<point name="input.g.ecca905" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ecca906
            #add-point:BEFORE FIELD ecca906
            {<point name="input.b.ecca906" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ecca906
            
            #add-point:AFTER FIELD ecca906
            {<point name="input.a.ecca906" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ecca906
            #add-point:ON CHANGE ecca906
            {<point name="input.g.ecca906" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccastus
            #add-point:BEFORE FIELD eccastus
            {<point name="input.b.eccastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccastus
            
            #add-point:AFTER FIELD eccastus
            {<point name="input.a.eccastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccastus
            #add-point:ON CHANGE eccastus
            {<point name="input.g.eccastus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.eccadocno
         ON ACTION controlp INFIELD eccadocno
            #add-point:ON ACTION controlp INFIELD eccadocno
            {<point name="input.c.eccadocno" />}
            #END add-point
 
         #Ctrlp:input.c.ecca001
         ON ACTION controlp INFIELD ecca001
            #add-point:ON ACTION controlp INFIELD ecca001
            {<point name="input.c.ecca001" />}
            #END add-point
 
         #Ctrlp:input.c.eccadocdt
         ON ACTION controlp INFIELD eccadocdt
            #add-point:ON ACTION controlp INFIELD eccadocdt
            {<point name="input.c.eccadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.ecca004
         ON ACTION controlp INFIELD ecca004
            #add-point:ON ACTION controlp INFIELD ecca004
            {<point name="input.c.ecca004" />}
            #END add-point
 
         #Ctrlp:input.c.ecca002
         ON ACTION controlp INFIELD ecca002
            #add-point:ON ACTION controlp INFIELD ecca002
            {<point name="input.c.ecca002" />}
            #END add-point
 
         #Ctrlp:input.c.eccasite
         ON ACTION controlp INFIELD eccasite
            #add-point:ON ACTION controlp INFIELD eccasite
            {<point name="input.c.eccasite" />}
            #END add-point
 
         #Ctrlp:input.c.ecca003
         ON ACTION controlp INFIELD ecca003
            #add-point:ON ACTION controlp INFIELD ecca003
            {<point name="input.c.ecca003" />}
            #END add-point
 
         #Ctrlp:input.c.ecca900
         ON ACTION controlp INFIELD ecca900
            #add-point:ON ACTION controlp INFIELD ecca900
            {<point name="input.c.ecca900" />}
            #END add-point
 
         #Ctrlp:input.c.ecca905
         ON ACTION controlp INFIELD ecca905
            #add-point:ON ACTION controlp INFIELD ecca905
            {<point name="input.c.ecca905" />}
            #END add-point
 
         #Ctrlp:input.c.ecca906
         ON ACTION controlp INFIELD ecca906
            #add-point:ON ACTION controlp INFIELD ecca906
            {<point name="input.c.ecca906" />}
            #END add-point
 
         #Ctrlp:input.c.eccastus
         ON ACTION controlp INFIELD eccastus
            #add-point:ON ACTION controlp INFIELD eccastus
            {<point name="input.c.eccastus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_ecca_m.eccasite,g_ecca_m.eccadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO ecca_t (eccaent,eccadocno,ecca001,eccadocdt,ecca004,ecca002,eccasite,ecca003, 
                   ecca900,ecca905,ecca906,eccastus,eccaownid,eccaowndp,eccacrtid,eccacrtdp,eccacrtdt, 
                   eccacnfid,eccacnfdt)
               VALUES (g_enterprise,g_ecca_m.eccadocno,g_ecca_m.ecca001,g_ecca_m.eccadocdt,g_ecca_m.ecca004, 
                   g_ecca_m.ecca002,g_ecca_m.eccasite,g_ecca_m.ecca003,g_ecca_m.ecca900,g_ecca_m.ecca905, 
                   g_ecca_m.ecca906,g_ecca_m.eccastus,g_ecca_m.eccaownid,g_ecca_m.eccaowndp,g_ecca_m.eccacrtid, 
                   g_ecca_m.eccacrtdp,g_ecca_m.eccacrtdt,g_ecca_m.eccacnfid,g_ecca_m.eccacnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_ecca_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aect801_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL aect801_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE ecca_t SET (eccadocno,ecca001,eccadocdt,ecca004,ecca002,eccasite,ecca003,ecca900, 
                   ecca905,ecca906,eccastus,eccaownid,eccaowndp,eccacrtid,eccacrtdp,eccacrtdt,eccacnfid, 
                   eccacnfdt) = (g_ecca_m.eccadocno,g_ecca_m.ecca001,g_ecca_m.eccadocdt,g_ecca_m.ecca004, 
                   g_ecca_m.ecca002,g_ecca_m.eccasite,g_ecca_m.ecca003,g_ecca_m.ecca900,g_ecca_m.ecca905, 
                   g_ecca_m.ecca906,g_ecca_m.eccastus,g_ecca_m.eccaownid,g_ecca_m.eccaowndp,g_ecca_m.eccacrtid, 
                   g_ecca_m.eccacrtdp,g_ecca_m.eccacrtdt,g_ecca_m.eccacnfid,g_ecca_m.eccacnfdt)
                WHERE eccaent = g_enterprise AND eccasite = g_eccasite_t
                  AND eccadocno = g_eccadocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "ecca_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_ecca_m_t)
               LET g_log2 = util.JSON.stringify(g_ecca_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_eccasite_t = g_ecca_m.eccasite
            LET g_eccadocno_t = g_ecca_m.eccadocno
 
            
      END INPUT
   

{</section>}

{<section id="aect801.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_eccb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION checkout
            LET g_action_choice="checkout"
            IF cl_auth_chk_act("checkout") THEN
               
               #add-point:ON ACTION checkout
               {<point name="input.detail_input.page1.checkout" />}
               #END add-point
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION resource
            LET g_action_choice="resource"
            IF cl_auth_chk_act("resource") THEN
               
               #add-point:ON ACTION resource
               {<point name="input.detail_input.page1.resource" />}
               #END add-point
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION stand
            LET g_action_choice="stand"
            IF cl_auth_chk_act("stand") THEN
               
               #add-point:ON ACTION stand
               {<point name="input.detail_input.page1.stand" />}
               #END add-point
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION checkin
            LET g_action_choice="checkin"
            IF cl_auth_chk_act("checkin") THEN
               
               #add-point:ON ACTION checkin
               {<point name="input.detail_input.page1.checkin" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_eccb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aect801_b_fill()
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            LET g_rec_b = g_eccb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            #填充下層單身資料
CALL aect801_b_fill2('2')
 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aect801_cl USING g_enterprise,g_ecca_m.eccasite,g_ecca_m.eccadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aect801_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aect801_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_eccb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_eccb_d[l_ac].eccb003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_eccb_d_t.* = g_eccb_d[l_ac].*  #BACKUP
               LET g_eccb_d_o.* = g_eccb_d[l_ac].*  #BACKUP
               CALL aect801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aect801_set_no_entry_b(l_cmd)
               IF NOT aect801_lock_b("eccb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aect801_bcl INTO g_eccb_d[l_ac].eccb003,g_eccb_d[l_ac].eccb004,g_eccb_d[l_ac].eccb005, 
                      g_eccb_d[l_ac].eccb006,g_eccb_d[l_ac].eccb007,g_eccb_d[l_ac].eccb008,g_eccb_d[l_ac].eccb009, 
                      g_eccb_d[l_ac].eccb010,g_eccb_d[l_ac].eccb011,g_eccb_d[l_ac].eccb012,g_eccb_d[l_ac].eccb024, 
                      g_eccb_d[l_ac].eccb025,g_eccb_d[l_ac].eccb026,g_eccb_d[l_ac].eccb027,g_eccb_d[l_ac].eccb034, 
                      g_eccb_d[l_ac].eccb013,g_eccb_d[l_ac].eccb014,g_eccb_d[l_ac].eccb015,g_eccb_d[l_ac].eccb016, 
                      g_eccb_d[l_ac].eccb017,g_eccb_d[l_ac].eccb018,g_eccb_d[l_ac].eccb019,g_eccb_d[l_ac].eccb020, 
                      g_eccb_d[l_ac].eccb030,g_eccb_d[l_ac].eccb031,g_eccb_d[l_ac].eccb032,g_eccb_d[l_ac].eccb021, 
                      g_eccb_d[l_ac].eccb022,g_eccb_d[l_ac].eccb023,g_eccb_d[l_ac].eccb033,g_eccb_d[l_ac].eccb028, 
                      g_eccb_d[l_ac].eccb029,g_eccb_d[l_ac].eccb035,g_eccb_d[l_ac].eccb036,g_eccb_d[l_ac].eccb901, 
                      g_eccb_d[l_ac].eccb905,g_eccb_d[l_ac].eccb906,g_eccb_d[l_ac].eccb001,g_eccb_d[l_ac].eccb002, 
                      g_eccb_d[l_ac].eccb900,g_eccb_d[l_ac].eccb902
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_eccb_d_t.eccb003 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aect801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_eccb_d[l_ac].* TO NULL 
            INITIALIZE g_eccb_d_t.* TO NULL 
            INITIALIZE g_eccb_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_eccb_d[l_ac].eccb006 = "1"
      LET g_eccb_d[l_ac].eccb024 = "0"
      LET g_eccb_d[l_ac].eccb025 = "0"
      LET g_eccb_d[l_ac].eccb026 = "0"
      LET g_eccb_d[l_ac].eccb027 = "0"
      LET g_eccb_d[l_ac].eccb034 = "0"
      LET g_eccb_d[l_ac].eccb013 = "N"
      LET g_eccb_d[l_ac].eccb015 = "N"
      LET g_eccb_d[l_ac].eccb016 = "N"
      LET g_eccb_d[l_ac].eccb017 = "Y"
      LET g_eccb_d[l_ac].eccb018 = "N"
      LET g_eccb_d[l_ac].eccb019 = "N"
      LET g_eccb_d[l_ac].eccb020 = "N"
      LET g_eccb_d[l_ac].eccb031 = "1"
      LET g_eccb_d[l_ac].eccb032 = "1"
      LET g_eccb_d[l_ac].eccb022 = "1"
      LET g_eccb_d[l_ac].eccb023 = "1"
      LET g_eccb_d[l_ac].eccb033 = "N"
      LET g_eccb_d[l_ac].eccb901 = "3"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_eccb_d_t.* = g_eccb_d[l_ac].*     #新輸入資料
            LET g_eccb_d_o.* = g_eccb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aect801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aect801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_eccb_d[li_reproduce_target].* = g_eccb_d[li_reproduce].*
 
               LET g_eccb_d[li_reproduce_target].eccb003 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM eccb_t 
             WHERE eccbent = g_enterprise AND eccbsite = g_ecca_m.eccasite
               AND eccbdocno = g_ecca_m.eccadocno
 
               AND eccb003 = g_eccb_d[l_ac].eccb003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_ecca_m.eccasite
               LET gs_keys[2] = g_ecca_m.eccadocno
               LET gs_keys[3] = g_eccb_d[g_detail_idx].eccb003
               CALL aect801_insert_b('eccb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               INITIALIZE g_eccb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "eccb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aect801_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM eccb_t
                WHERE eccbent = g_enterprise AND eccbsite = g_ecca_m.eccasite AND
                                          eccbdocno = g_ecca_m.eccadocno AND
 
                      eccb003 = g_eccb_d_t.eccb003
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "eccb_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aect801_bcl
               LET l_count = g_eccb_d.getLength()
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_ecca_m.eccasite
               LET gs_keys[2] = g_ecca_m.eccadocno
               LET gs_keys[3] = g_eccb_d[g_detail_idx].eccb003
 
            END IF 
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身刪除後2
               {<point name="input.body.after_delete"/>}
               #end add-point
                              CALL aect801_delete_b('eccb_t',gs_keys,"'1'")
            END IF
            #如果是最後一筆
            IF l_ac = (g_eccb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #此段落由子樣板a01產生
         BEFORE FIELD eccb003
            #add-point:BEFORE FIELD eccb003
            {<point name="input.b.page1.eccb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb003
            
            #add-point:AFTER FIELD eccb003
            {<point name="input.a.page1.eccb003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb003
            #add-point:ON CHANGE eccb003
            {<point name="input.g.page1.eccb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb004
            
            #add-point:AFTER FIELD eccb004
            {<point name="input.a.page1.eccb004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb004
            #add-point:BEFORE FIELD eccb004
            {<point name="input.b.page1.eccb004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb004
            #add-point:ON CHANGE eccb004
            {<point name="input.g.page1.eccb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb005
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_eccb_d[l_ac].eccb005,"0","1","","","azz-00079",1) THEN
               NEXT FIELD eccb005
            END IF
 
 
            #add-point:AFTER FIELD eccb005
            {<point name="input.a.page1.eccb005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb005
            #add-point:BEFORE FIELD eccb005
            {<point name="input.b.page1.eccb005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb005
            #add-point:ON CHANGE eccb005
            {<point name="input.g.page1.eccb005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb006
            #add-point:BEFORE FIELD eccb006
            {<point name="input.b.page1.eccb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb006
            
            #add-point:AFTER FIELD eccb006
            {<point name="input.a.page1.eccb006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb006
            #add-point:ON CHANGE eccb006
            {<point name="input.g.page1.eccb006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb007
            #add-point:BEFORE FIELD eccb007
            {<point name="input.b.page1.eccb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb007
            
            #add-point:AFTER FIELD eccb007
            {<point name="input.a.page1.eccb007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb007
            #add-point:ON CHANGE eccb007
            {<point name="input.g.page1.eccb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb008
            
            #add-point:AFTER FIELD eccb008
            {<point name="input.a.page1.eccb008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb008
            #add-point:BEFORE FIELD eccb008
            {<point name="input.b.page1.eccb008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb008
            #add-point:ON CHANGE eccb008
            {<point name="input.g.page1.eccb008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb009
            #add-point:BEFORE FIELD eccb009
            {<point name="input.b.page1.eccb009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb009
            
            #add-point:AFTER FIELD eccb009
            {<point name="input.a.page1.eccb009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb009
            #add-point:ON CHANGE eccb009
            {<point name="input.g.page1.eccb009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb010
            
            #add-point:AFTER FIELD eccb010
            {<point name="input.a.page1.eccb010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb010
            #add-point:BEFORE FIELD eccb010
            {<point name="input.b.page1.eccb010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb010
            #add-point:ON CHANGE eccb010
            {<point name="input.g.page1.eccb010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb011
            #add-point:BEFORE FIELD eccb011
            {<point name="input.b.page1.eccb011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb011
            
            #add-point:AFTER FIELD eccb011
            {<point name="input.a.page1.eccb011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb011
            #add-point:ON CHANGE eccb011
            {<point name="input.g.page1.eccb011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb012
            
            #add-point:AFTER FIELD eccb012
            {<point name="input.a.page1.eccb012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb012
            #add-point:BEFORE FIELD eccb012
            {<point name="input.b.page1.eccb012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb012
            #add-point:ON CHANGE eccb012
            {<point name="input.g.page1.eccb012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb024
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_eccb_d[l_ac].eccb024,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD eccb024
            END IF
 
 
            #add-point:AFTER FIELD eccb024
            {<point name="input.a.page1.eccb024" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb024
            #add-point:BEFORE FIELD eccb024
            {<point name="input.b.page1.eccb024" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb024
            #add-point:ON CHANGE eccb024
            {<point name="input.g.page1.eccb024" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb025
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_eccb_d[l_ac].eccb025,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD eccb025
            END IF
 
 
            #add-point:AFTER FIELD eccb025
            {<point name="input.a.page1.eccb025" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb025
            #add-point:BEFORE FIELD eccb025
            {<point name="input.b.page1.eccb025" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb025
            #add-point:ON CHANGE eccb025
            {<point name="input.g.page1.eccb025" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb026
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_eccb_d[l_ac].eccb026,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD eccb026
            END IF
 
 
            #add-point:AFTER FIELD eccb026
            {<point name="input.a.page1.eccb026" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb026
            #add-point:BEFORE FIELD eccb026
            {<point name="input.b.page1.eccb026" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb026
            #add-point:ON CHANGE eccb026
            {<point name="input.g.page1.eccb026" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb027
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_eccb_d[l_ac].eccb027,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD eccb027
            END IF
 
 
            #add-point:AFTER FIELD eccb027
            {<point name="input.a.page1.eccb027" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb027
            #add-point:BEFORE FIELD eccb027
            {<point name="input.b.page1.eccb027" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb027
            #add-point:ON CHANGE eccb027
            {<point name="input.g.page1.eccb027" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb034
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_eccb_d[l_ac].eccb034,"0","1","","","azz-00079",1) THEN
               NEXT FIELD eccb034
            END IF
 
 
            #add-point:AFTER FIELD eccb034
            {<point name="input.a.page1.eccb034" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb034
            #add-point:BEFORE FIELD eccb034
            {<point name="input.b.page1.eccb034" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb034
            #add-point:ON CHANGE eccb034
            {<point name="input.g.page1.eccb034" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb013
            #add-point:BEFORE FIELD eccb013
            {<point name="input.b.page1.eccb013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb013
            
            #add-point:AFTER FIELD eccb013
            {<point name="input.a.page1.eccb013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb013
            #add-point:ON CHANGE eccb013
            {<point name="input.g.page1.eccb013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb014
            
            #add-point:AFTER FIELD eccb014
            {<point name="input.a.page1.eccb014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb014
            #add-point:BEFORE FIELD eccb014
            {<point name="input.b.page1.eccb014" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb014
            #add-point:ON CHANGE eccb014
            {<point name="input.g.page1.eccb014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb015
            #add-point:BEFORE FIELD eccb015
            {<point name="input.b.page1.eccb015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb015
            
            #add-point:AFTER FIELD eccb015
            {<point name="input.a.page1.eccb015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb015
            #add-point:ON CHANGE eccb015
            {<point name="input.g.page1.eccb015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb016
            #add-point:BEFORE FIELD eccb016
            {<point name="input.b.page1.eccb016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb016
            
            #add-point:AFTER FIELD eccb016
            {<point name="input.a.page1.eccb016" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb016
            #add-point:ON CHANGE eccb016
            {<point name="input.g.page1.eccb016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb017
            #add-point:BEFORE FIELD eccb017
            {<point name="input.b.page1.eccb017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb017
            
            #add-point:AFTER FIELD eccb017
            {<point name="input.a.page1.eccb017" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb017
            #add-point:ON CHANGE eccb017
            {<point name="input.g.page1.eccb017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb018
            #add-point:BEFORE FIELD eccb018
            {<point name="input.b.page1.eccb018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb018
            
            #add-point:AFTER FIELD eccb018
            {<point name="input.a.page1.eccb018" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb018
            #add-point:ON CHANGE eccb018
            {<point name="input.g.page1.eccb018" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb019
            #add-point:BEFORE FIELD eccb019
            {<point name="input.b.page1.eccb019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb019
            
            #add-point:AFTER FIELD eccb019
            {<point name="input.a.page1.eccb019" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb019
            #add-point:ON CHANGE eccb019
            {<point name="input.g.page1.eccb019" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb020
            #add-point:BEFORE FIELD eccb020
            {<point name="input.b.page1.eccb020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb020
            
            #add-point:AFTER FIELD eccb020
            {<point name="input.a.page1.eccb020" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb020
            #add-point:ON CHANGE eccb020
            {<point name="input.g.page1.eccb020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb030
            
            #add-point:AFTER FIELD eccb030
            {<point name="input.a.page1.eccb030" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb030
            #add-point:BEFORE FIELD eccb030
            {<point name="input.b.page1.eccb030" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb030
            #add-point:ON CHANGE eccb030
            {<point name="input.g.page1.eccb030" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb031
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_eccb_d[l_ac].eccb031,"0","1","","","azz-00079",1) THEN
               NEXT FIELD eccb031
            END IF
 
 
            #add-point:AFTER FIELD eccb031
            {<point name="input.a.page1.eccb031" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb031
            #add-point:BEFORE FIELD eccb031
            {<point name="input.b.page1.eccb031" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb031
            #add-point:ON CHANGE eccb031
            {<point name="input.g.page1.eccb031" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb032
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_eccb_d[l_ac].eccb032,"0","0","","","azz-00079",1) THEN
               NEXT FIELD eccb032
            END IF
 
 
            #add-point:AFTER FIELD eccb032
            {<point name="input.a.page1.eccb032" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb032
            #add-point:BEFORE FIELD eccb032
            {<point name="input.b.page1.eccb032" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb032
            #add-point:ON CHANGE eccb032
            {<point name="input.g.page1.eccb032" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb021
            
            #add-point:AFTER FIELD eccb021
            {<point name="input.a.page1.eccb021" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb021
            #add-point:BEFORE FIELD eccb021
            {<point name="input.b.page1.eccb021" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb021
            #add-point:ON CHANGE eccb021
            {<point name="input.g.page1.eccb021" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb022
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_eccb_d[l_ac].eccb022,"0","1","","","azz-00079",1) THEN
               NEXT FIELD eccb022
            END IF
 
 
            #add-point:AFTER FIELD eccb022
            {<point name="input.a.page1.eccb022" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb022
            #add-point:BEFORE FIELD eccb022
            {<point name="input.b.page1.eccb022" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb022
            #add-point:ON CHANGE eccb022
            {<point name="input.g.page1.eccb022" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb023
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_eccb_d[l_ac].eccb023,"0","0","","","azz-00079",1) THEN
               NEXT FIELD eccb023
            END IF
 
 
            #add-point:AFTER FIELD eccb023
            {<point name="input.a.page1.eccb023" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb023
            #add-point:BEFORE FIELD eccb023
            {<point name="input.b.page1.eccb023" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb023
            #add-point:ON CHANGE eccb023
            {<point name="input.g.page1.eccb023" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb033
            #add-point:BEFORE FIELD eccb033
            {<point name="input.b.page1.eccb033" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb033
            
            #add-point:AFTER FIELD eccb033
            {<point name="input.a.page1.eccb033" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb033
            #add-point:ON CHANGE eccb033
            {<point name="input.g.page1.eccb033" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb028
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_eccb_d[l_ac].eccb028,"0","1","","","azz-00079",1) THEN
               NEXT FIELD eccb028
            END IF
 
 
            #add-point:AFTER FIELD eccb028
            {<point name="input.a.page1.eccb028" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb028
            #add-point:BEFORE FIELD eccb028
            {<point name="input.b.page1.eccb028" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb028
            #add-point:ON CHANGE eccb028
            {<point name="input.g.page1.eccb028" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb029
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_eccb_d[l_ac].eccb029,"0","1","","","azz-00079",1) THEN
               NEXT FIELD eccb029
            END IF
 
 
            #add-point:AFTER FIELD eccb029
            {<point name="input.a.page1.eccb029" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb029
            #add-point:BEFORE FIELD eccb029
            {<point name="input.b.page1.eccb029" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb029
            #add-point:ON CHANGE eccb029
            {<point name="input.g.page1.eccb029" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ooff013
            #add-point:BEFORE FIELD ooff013
            {<point name="input.b.page1.ooff013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ooff013
            
            #add-point:AFTER FIELD ooff013
            {<point name="input.a.page1.ooff013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ooff013
            #add-point:ON CHANGE ooff013
            {<point name="input.g.page1.ooff013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb035
            #add-point:BEFORE FIELD eccb035
            {<point name="input.b.page1.eccb035" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb035
            
            #add-point:AFTER FIELD eccb035
            {<point name="input.a.page1.eccb035" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb035
            #add-point:ON CHANGE eccb035
            {<point name="input.g.page1.eccb035" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb036
            #add-point:BEFORE FIELD eccb036
            {<point name="input.b.page1.eccb036" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb036
            
            #add-point:AFTER FIELD eccb036
            {<point name="input.a.page1.eccb036" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb036
            #add-point:ON CHANGE eccb036
            {<point name="input.g.page1.eccb036" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb901
            #add-point:BEFORE FIELD eccb901
            {<point name="input.b.page1.eccb901" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb901
            
            #add-point:AFTER FIELD eccb901
            {<point name="input.a.page1.eccb901" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb901
            #add-point:ON CHANGE eccb901
            {<point name="input.g.page1.eccb901" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb905
            
            #add-point:AFTER FIELD eccb905
            {<point name="input.a.page1.eccb905" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb905
            #add-point:BEFORE FIELD eccb905
            {<point name="input.b.page1.eccb905" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccb905
            #add-point:ON CHANGE eccb905
            {<point name="input.g.page1.eccb905" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb906
            #add-point:BEFORE FIELD eccb906
            {<point name="input.b.page1.eccb906" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb906
            
            #add-point:AFTER FIELD eccb906
            {<point name="input.a.page1.eccb906" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb906
            #add-point:ON CHANGE eccb906
            {<point name="input.g.page1.eccb906" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb001
            #add-point:BEFORE FIELD eccb001
            {<point name="input.b.page1.eccb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb001
            
            #add-point:AFTER FIELD eccb001
            {<point name="input.a.page1.eccb001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb001
            #add-point:ON CHANGE eccb001
            {<point name="input.g.page1.eccb001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb002
            #add-point:BEFORE FIELD eccb002
            {<point name="input.b.page1.eccb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb002
            
            #add-point:AFTER FIELD eccb002
            {<point name="input.a.page1.eccb002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb002
            #add-point:ON CHANGE eccb002
            {<point name="input.g.page1.eccb002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb900
            #add-point:BEFORE FIELD eccb900
            {<point name="input.b.page1.eccb900" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb900
            
            #add-point:AFTER FIELD eccb900
            {<point name="input.a.page1.eccb900" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb900
            #add-point:ON CHANGE eccb900
            {<point name="input.g.page1.eccb900" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccb902
            #add-point:BEFORE FIELD eccb902
            {<point name="input.b.page1.eccb902" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccb902
            
            #add-point:AFTER FIELD eccb902
            {<point name="input.a.page1.eccb902" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccb902
            #add-point:ON CHANGE eccb902
            {<point name="input.g.page1.eccb902" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.eccb003
         ON ACTION controlp INFIELD eccb003
            #add-point:ON ACTION controlp INFIELD eccb003
            {<point name="input.c.page1.eccb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb004
         ON ACTION controlp INFIELD eccb004
            #add-point:ON ACTION controlp INFIELD eccb004
            {<point name="input.c.page1.eccb004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb005
         ON ACTION controlp INFIELD eccb005
            #add-point:ON ACTION controlp INFIELD eccb005
            {<point name="input.c.page1.eccb005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb006
         ON ACTION controlp INFIELD eccb006
            #add-point:ON ACTION controlp INFIELD eccb006
            {<point name="input.c.page1.eccb006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb007
         ON ACTION controlp INFIELD eccb007
            #add-point:ON ACTION controlp INFIELD eccb007
            {<point name="input.c.page1.eccb007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb008
         ON ACTION controlp INFIELD eccb008
            #add-point:ON ACTION controlp INFIELD eccb008
            {<point name="input.c.page1.eccb008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb009
         ON ACTION controlp INFIELD eccb009
            #add-point:ON ACTION controlp INFIELD eccb009
            {<point name="input.c.page1.eccb009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb010
         ON ACTION controlp INFIELD eccb010
            #add-point:ON ACTION controlp INFIELD eccb010
            {<point name="input.c.page1.eccb010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb011
         ON ACTION controlp INFIELD eccb011
            #add-point:ON ACTION controlp INFIELD eccb011
            {<point name="input.c.page1.eccb011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb012
         ON ACTION controlp INFIELD eccb012
            #add-point:ON ACTION controlp INFIELD eccb012
            {<point name="input.c.page1.eccb012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb024
         ON ACTION controlp INFIELD eccb024
            #add-point:ON ACTION controlp INFIELD eccb024
            {<point name="input.c.page1.eccb024" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb025
         ON ACTION controlp INFIELD eccb025
            #add-point:ON ACTION controlp INFIELD eccb025
            {<point name="input.c.page1.eccb025" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb026
         ON ACTION controlp INFIELD eccb026
            #add-point:ON ACTION controlp INFIELD eccb026
            {<point name="input.c.page1.eccb026" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb027
         ON ACTION controlp INFIELD eccb027
            #add-point:ON ACTION controlp INFIELD eccb027
            {<point name="input.c.page1.eccb027" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb034
         ON ACTION controlp INFIELD eccb034
            #add-point:ON ACTION controlp INFIELD eccb034
            {<point name="input.c.page1.eccb034" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb013
         ON ACTION controlp INFIELD eccb013
            #add-point:ON ACTION controlp INFIELD eccb013
            {<point name="input.c.page1.eccb013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb014
         ON ACTION controlp INFIELD eccb014
            #add-point:ON ACTION controlp INFIELD eccb014
            {<point name="input.c.page1.eccb014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb015
         ON ACTION controlp INFIELD eccb015
            #add-point:ON ACTION controlp INFIELD eccb015
            {<point name="input.c.page1.eccb015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb016
         ON ACTION controlp INFIELD eccb016
            #add-point:ON ACTION controlp INFIELD eccb016
            {<point name="input.c.page1.eccb016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb017
         ON ACTION controlp INFIELD eccb017
            #add-point:ON ACTION controlp INFIELD eccb017
            {<point name="input.c.page1.eccb017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb018
         ON ACTION controlp INFIELD eccb018
            #add-point:ON ACTION controlp INFIELD eccb018
            {<point name="input.c.page1.eccb018" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb019
         ON ACTION controlp INFIELD eccb019
            #add-point:ON ACTION controlp INFIELD eccb019
            {<point name="input.c.page1.eccb019" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb020
         ON ACTION controlp INFIELD eccb020
            #add-point:ON ACTION controlp INFIELD eccb020
            {<point name="input.c.page1.eccb020" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb030
         ON ACTION controlp INFIELD eccb030
            #add-point:ON ACTION controlp INFIELD eccb030
            {<point name="input.c.page1.eccb030" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb031
         ON ACTION controlp INFIELD eccb031
            #add-point:ON ACTION controlp INFIELD eccb031
            {<point name="input.c.page1.eccb031" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb032
         ON ACTION controlp INFIELD eccb032
            #add-point:ON ACTION controlp INFIELD eccb032
            {<point name="input.c.page1.eccb032" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb021
         ON ACTION controlp INFIELD eccb021
            #add-point:ON ACTION controlp INFIELD eccb021
            {<point name="input.c.page1.eccb021" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb022
         ON ACTION controlp INFIELD eccb022
            #add-point:ON ACTION controlp INFIELD eccb022
            {<point name="input.c.page1.eccb022" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb023
         ON ACTION controlp INFIELD eccb023
            #add-point:ON ACTION controlp INFIELD eccb023
            {<point name="input.c.page1.eccb023" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb033
         ON ACTION controlp INFIELD eccb033
            #add-point:ON ACTION controlp INFIELD eccb033
            {<point name="input.c.page1.eccb033" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb028
         ON ACTION controlp INFIELD eccb028
            #add-point:ON ACTION controlp INFIELD eccb028
            {<point name="input.c.page1.eccb028" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb029
         ON ACTION controlp INFIELD eccb029
            #add-point:ON ACTION controlp INFIELD eccb029
            {<point name="input.c.page1.eccb029" />}
            #END add-point
 
         #Ctrlp:input.c.page1.ooff013
         ON ACTION controlp INFIELD ooff013
            #add-point:ON ACTION controlp INFIELD ooff013
            {<point name="input.c.page1.ooff013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb035
         ON ACTION controlp INFIELD eccb035
            #add-point:ON ACTION controlp INFIELD eccb035
            {<point name="input.c.page1.eccb035" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb036
         ON ACTION controlp INFIELD eccb036
            #add-point:ON ACTION controlp INFIELD eccb036
            {<point name="input.c.page1.eccb036" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb901
         ON ACTION controlp INFIELD eccb901
            #add-point:ON ACTION controlp INFIELD eccb901
            {<point name="input.c.page1.eccb901" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb905
         ON ACTION controlp INFIELD eccb905
            #add-point:ON ACTION controlp INFIELD eccb905
            {<point name="input.c.page1.eccb905" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb906
         ON ACTION controlp INFIELD eccb906
            #add-point:ON ACTION controlp INFIELD eccb906
            {<point name="input.c.page1.eccb906" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb001
         ON ACTION controlp INFIELD eccb001
            #add-point:ON ACTION controlp INFIELD eccb001
            {<point name="input.c.page1.eccb001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb002
         ON ACTION controlp INFIELD eccb002
            #add-point:ON ACTION controlp INFIELD eccb002
            {<point name="input.c.page1.eccb002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb900
         ON ACTION controlp INFIELD eccb900
            #add-point:ON ACTION controlp INFIELD eccb900
            {<point name="input.c.page1.eccb900" />}
            #END add-point
 
         #Ctrlp:input.c.page1.eccb902
         ON ACTION controlp INFIELD eccb902
            #add-point:ON ACTION controlp INFIELD eccb902
            {<point name="input.c.page1.eccb902" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               LET g_eccb_d[l_ac].* = g_eccb_d_t.*
               CLOSE aect801_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_eccb_d[l_ac].eccb003 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               LET g_eccb_d[l_ac].* = g_eccb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE eccb_t SET (eccbsite,eccbdocno,eccb003,eccb004,eccb005,eccb006,eccb007,eccb008, 
                   eccb009,eccb010,eccb011,eccb012,eccb024,eccb025,eccb026,eccb027,eccb034,eccb013,eccb014, 
                   eccb015,eccb016,eccb017,eccb018,eccb019,eccb020,eccb030,eccb031,eccb032,eccb021,eccb022, 
                   eccb023,eccb033,eccb028,eccb029,eccb035,eccb036,eccb901,eccb905,eccb906,eccb001,eccb002, 
                   eccb900,eccb902) = (g_ecca_m.eccasite,g_ecca_m.eccadocno,g_eccb_d[l_ac].eccb003,g_eccb_d[l_ac].eccb004, 
                   g_eccb_d[l_ac].eccb005,g_eccb_d[l_ac].eccb006,g_eccb_d[l_ac].eccb007,g_eccb_d[l_ac].eccb008, 
                   g_eccb_d[l_ac].eccb009,g_eccb_d[l_ac].eccb010,g_eccb_d[l_ac].eccb011,g_eccb_d[l_ac].eccb012, 
                   g_eccb_d[l_ac].eccb024,g_eccb_d[l_ac].eccb025,g_eccb_d[l_ac].eccb026,g_eccb_d[l_ac].eccb027, 
                   g_eccb_d[l_ac].eccb034,g_eccb_d[l_ac].eccb013,g_eccb_d[l_ac].eccb014,g_eccb_d[l_ac].eccb015, 
                   g_eccb_d[l_ac].eccb016,g_eccb_d[l_ac].eccb017,g_eccb_d[l_ac].eccb018,g_eccb_d[l_ac].eccb019, 
                   g_eccb_d[l_ac].eccb020,g_eccb_d[l_ac].eccb030,g_eccb_d[l_ac].eccb031,g_eccb_d[l_ac].eccb032, 
                   g_eccb_d[l_ac].eccb021,g_eccb_d[l_ac].eccb022,g_eccb_d[l_ac].eccb023,g_eccb_d[l_ac].eccb033, 
                   g_eccb_d[l_ac].eccb028,g_eccb_d[l_ac].eccb029,g_eccb_d[l_ac].eccb035,g_eccb_d[l_ac].eccb036, 
                   g_eccb_d[l_ac].eccb901,g_eccb_d[l_ac].eccb905,g_eccb_d[l_ac].eccb906,g_eccb_d[l_ac].eccb001, 
                   g_eccb_d[l_ac].eccb002,g_eccb_d[l_ac].eccb900,g_eccb_d[l_ac].eccb902)
                WHERE eccbent = g_enterprise AND eccbsite = g_ecca_m.eccasite 
                  AND eccbdocno = g_ecca_m.eccadocno 
 
                  AND eccb003 = g_eccb_d_t.eccb003 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "eccb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_eccb_d[l_ac].* = g_eccb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "eccb_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_eccb_d[l_ac].* = g_eccb_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_ecca_m.eccasite
               LET gs_keys_bak[1] = g_eccasite_t
               LET gs_keys[2] = g_ecca_m.eccadocno
               LET gs_keys_bak[2] = g_eccadocno_t
               LET gs_keys[3] = g_eccb_d[g_detail_idx].eccb003
               LET gs_keys_bak[3] = g_eccb_d_t.eccb003
               CALL aect801_update_b('eccb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_ecca_m),util.JSON.stringify(g_eccb_d_t)
               LET g_log2 = util.JSON.stringify(g_ecca_m),util.JSON.stringify(g_eccb_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aect801_unlock_b("eccb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_eccb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_eccb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
      INPUT ARRAY g_eccb2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_eccb2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            LET g_rec_b = g_eccb2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_eccb2_d[l_ac].* TO NULL 
            INITIALIZE g_eccb2_d_t.* TO NULL 
            INITIALIZE g_eccb2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_eccb2_d[l_ac].eccc007 = "1"
      LET g_eccb2_d[l_ac].eccc008 = "1"
      LET g_eccb2_d[l_ac].eccc010 = "1"
      LET g_eccb2_d[l_ac].eccc901 = "3"
 
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_eccb2_d_t.* = g_eccb2_d[l_ac].*     #新輸入資料
            LET g_eccb2_d_o.* = g_eccb2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aect801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL aect801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_eccb2_d[li_reproduce_target].* = g_eccb2_d[li_reproduce].*
 
               LET g_eccb2_d[li_reproduce_target].eccc004 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aect801_cl USING g_enterprise,g_ecca_m.eccasite,g_ecca_m.eccadocno
            OPEN aect801_bcl USING g_enterprise,g_ecca_m.eccasite,g_ecca_m.eccadocno,g_eccb_d[g_detail_idx].eccb003 

            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aect801_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aect801_cl
               CLOSE aect801_bcl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_eccb2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_eccb2_d[l_ac].eccc004 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_eccb2_d_t.* = g_eccb2_d[l_ac].*  #BACKUP
               LET g_eccb2_d_o.* = g_eccb2_d[l_ac].*  #BACKUP
               CALL aect801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL aect801_set_no_entry_b(l_cmd)
               IF NOT aect801_lock_b("eccc_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aect801_bcl2 INTO g_eccb2_d[l_ac].eccc004,g_eccb2_d[l_ac].eccc005,g_eccb2_d[l_ac].eccc006, 
                      g_eccb2_d[l_ac].eccc007,g_eccb2_d[l_ac].eccc008,g_eccb2_d[l_ac].eccc009,g_eccb2_d[l_ac].eccc010, 
                      g_eccb2_d[l_ac].eccc901,g_eccb2_d[l_ac].eccc905,g_eccb2_d[l_ac].eccc906,g_eccb2_d[l_ac].eccc001, 
                      g_eccb2_d[l_ac].eccc002,g_eccb2_d[l_ac].eccc900,g_eccb2_d[l_ac].eccc902
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aect801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM eccc_t
                     WHERE ecccent = g_enterprise AND ecccsite = g_ecca_m.eccasite AND ecccdocno = g_ecca_m.eccadocno  
                         AND eccc003 = g_eccb_d[g_detail_idx].eccb003 AND eccc004 = g_eccb2_d[g_detail_idx2].eccc004 

                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "eccb_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aect801_bcl
               LET l_count = g_eccb_d.getLength()
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_ecca_m.eccasite
               LET gs_keys[2] = g_ecca_m.eccadocno
               LET gs_keys[3] = g_eccb_d[g_detail_idx].eccb003
               LET gs_keys[4] = g_eccb2_d[g_detail_idx2].eccc004
 
            END IF 
            
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE 
               {<point name="input.body2.after_delete"/>}
               #end add-point
                              CALL aect801_delete_b('eccc_t',gs_keys,"'2'")
            END IF
            #如果是最後一筆
            IF l_ac = (g_eccb2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
    
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM eccc_t 
             WHERE ecccent = g_enterprise AND ecccsite = g_ecca_m.eccasite AND ecccdocno = g_ecca_m.eccadocno  
                 AND eccc003 = g_eccb_d[g_detail_idx].eccb003 AND eccc004 = g_eccb2_d[g_detail_idx2].eccc004 

                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_ecca_m.eccasite
               LET gs_keys[2] = g_ecca_m.eccadocno
               LET gs_keys[3] = g_eccb_d[g_detail_idx].eccb003
               LET gs_keys[4] = g_eccb2_d[g_detail_idx2].eccc004
               CALL aect801_insert_b('eccc_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_eccb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "eccc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aect801_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_eccb2_d[l_ac].* = g_eccb2_d_t.*
               CLOSE aect801_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_eccb2_d[l_ac].* = g_eccb2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE eccc_t SET (ecccsite,ecccdocno,eccc003,eccc004,eccc005,eccc006,eccc007,eccc008, 
                   eccc009,eccc010,eccc901,eccc905,eccc906,eccc001,eccc002,eccc900,eccc902) = (g_ecca_m.eccasite, 
                   g_ecca_m.eccadocno,g_eccb_d[g_detail_idx].eccb003,g_eccb2_d[l_ac].eccc004,g_eccb2_d[l_ac].eccc005, 
                   g_eccb2_d[l_ac].eccc006,g_eccb2_d[l_ac].eccc007,g_eccb2_d[l_ac].eccc008,g_eccb2_d[l_ac].eccc009, 
                   g_eccb2_d[l_ac].eccc010,g_eccb2_d[l_ac].eccc901,g_eccb2_d[l_ac].eccc905,g_eccb2_d[l_ac].eccc906, 
                   g_eccb2_d[l_ac].eccc001,g_eccb2_d[l_ac].eccc002,g_eccb2_d[l_ac].eccc900,g_eccb2_d[l_ac].eccc902)  
                   #自訂欄位頁簽
                WHERE ecccent = g_enterprise AND ecccsite = g_eccasite_t AND ecccdocno = g_eccadocno_t  
                    AND eccc003 = g_eccb_d[g_detail_idx].eccb003 AND eccc004 = g_eccb2_d_t.eccc004
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "eccc_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_eccb2_d[l_ac].* = g_eccb2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "eccc_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_eccb2_d[l_ac].* = g_eccb2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_ecca_m.eccasite
               LET gs_keys_bak[1] = g_eccasite_t
               LET gs_keys[2] = g_ecca_m.eccadocno
               LET gs_keys_bak[2] = g_eccadocno_t
               LET gs_keys[3] = g_eccb_d[g_detail_idx].eccb003
               LET gs_keys_bak[3] = g_eccb_d[g_detail_idx].eccb003
               LET gs_keys[4] = g_eccb2_d[g_detail_idx2].eccc004
               LET gs_keys_bak[4] = g_eccb2_d_t.eccc004
               CALL aect801_update_b('eccc_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_ecca_m),util.JSON.stringify(g_eccb2_d_t)
               LET g_log2 = util.JSON.stringify(g_ecca_m),util.JSON.stringify(g_eccb2_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a02產生
         AFTER FIELD eccc004
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_eccb2_d[l_ac].eccc004,"0","0","","","azz-00079",1) THEN
               NEXT FIELD eccc004
            END IF
 
 
            #add-point:AFTER FIELD eccc004
            {<point name="input.a.page2.eccc004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc004
            #add-point:BEFORE FIELD eccc004
            {<point name="input.b.page2.eccc004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccc004
            #add-point:ON CHANGE eccc004
            {<point name="input.g.page2.eccc004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc005
            
            #add-point:AFTER FIELD eccc005
            {<point name="input.a.page2.eccc005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc005
            #add-point:BEFORE FIELD eccc005
            {<point name="input.b.page2.eccc005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccc005
            #add-point:ON CHANGE eccc005
            {<point name="input.g.page2.eccc005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc006
            
            #add-point:AFTER FIELD eccc006
            {<point name="input.a.page2.eccc006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc006
            #add-point:BEFORE FIELD eccc006
            {<point name="input.b.page2.eccc006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccc006
            #add-point:ON CHANGE eccc006
            {<point name="input.g.page2.eccc006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc007
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_eccb2_d[l_ac].eccc007,"0","1","","","azz-00079",1) THEN
               NEXT FIELD eccc007
            END IF
 
 
            #add-point:AFTER FIELD eccc007
            {<point name="input.a.page2.eccc007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc007
            #add-point:BEFORE FIELD eccc007
            {<point name="input.b.page2.eccc007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccc007
            #add-point:ON CHANGE eccc007
            {<point name="input.g.page2.eccc007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc008
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_eccb2_d[l_ac].eccc008,"0","0","","","azz-00079",1) THEN
               NEXT FIELD eccc008
            END IF
 
 
            #add-point:AFTER FIELD eccc008
            {<point name="input.a.page2.eccc008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc008
            #add-point:BEFORE FIELD eccc008
            {<point name="input.b.page2.eccc008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccc008
            #add-point:ON CHANGE eccc008
            {<point name="input.g.page2.eccc008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc009
            
            #add-point:AFTER FIELD eccc009
            {<point name="input.a.page2.eccc009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc009
            #add-point:BEFORE FIELD eccc009
            {<point name="input.b.page2.eccc009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccc009
            #add-point:ON CHANGE eccc009
            {<point name="input.g.page2.eccc009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc010
            #add-point:BEFORE FIELD eccc010
            {<point name="input.b.page2.eccc010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc010
            
            #add-point:AFTER FIELD eccc010
            {<point name="input.a.page2.eccc010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccc010
            #add-point:ON CHANGE eccc010
            {<point name="input.g.page2.eccc010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc901
            #add-point:BEFORE FIELD eccc901
            {<point name="input.b.page2.eccc901" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc901
            
            #add-point:AFTER FIELD eccc901
            {<point name="input.a.page2.eccc901" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccc901
            #add-point:ON CHANGE eccc901
            {<point name="input.g.page2.eccc901" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc905
            
            #add-point:AFTER FIELD eccc905
            {<point name="input.a.page2.eccc905" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc905
            #add-point:BEFORE FIELD eccc905
            {<point name="input.b.page2.eccc905" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE eccc905
            #add-point:ON CHANGE eccc905
            {<point name="input.g.page2.eccc905" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc906
            #add-point:BEFORE FIELD eccc906
            {<point name="input.b.page2.eccc906" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc906
            
            #add-point:AFTER FIELD eccc906
            {<point name="input.a.page2.eccc906" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccc906
            #add-point:ON CHANGE eccc906
            {<point name="input.g.page2.eccc906" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc001
            #add-point:BEFORE FIELD eccc001
            {<point name="input.b.page2.eccc001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc001
            
            #add-point:AFTER FIELD eccc001
            {<point name="input.a.page2.eccc001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccc001
            #add-point:ON CHANGE eccc001
            {<point name="input.g.page2.eccc001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc002
            #add-point:BEFORE FIELD eccc002
            {<point name="input.b.page2.eccc002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc002
            
            #add-point:AFTER FIELD eccc002
            {<point name="input.a.page2.eccc002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccc002
            #add-point:ON CHANGE eccc002
            {<point name="input.g.page2.eccc002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc900
            #add-point:BEFORE FIELD eccc900
            {<point name="input.b.page2.eccc900" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc900
            
            #add-point:AFTER FIELD eccc900
            {<point name="input.a.page2.eccc900" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccc900
            #add-point:ON CHANGE eccc900
            {<point name="input.g.page2.eccc900" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD eccc902
            #add-point:BEFORE FIELD eccc902
            {<point name="input.b.page2.eccc902" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD eccc902
            
            #add-point:AFTER FIELD eccc902
            {<point name="input.a.page2.eccc902" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE eccc902
            #add-point:ON CHANGE eccc902
            {<point name="input.g.page2.eccc902" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.eccc004
         ON ACTION controlp INFIELD eccc004
            #add-point:ON ACTION controlp INFIELD eccc004
            {<point name="input.c.page2.eccc004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.eccc005
         ON ACTION controlp INFIELD eccc005
            #add-point:ON ACTION controlp INFIELD eccc005
            {<point name="input.c.page2.eccc005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.eccc006
         ON ACTION controlp INFIELD eccc006
            #add-point:ON ACTION controlp INFIELD eccc006
            {<point name="input.c.page2.eccc006" />}
            #END add-point
 
         #Ctrlp:input.c.page2.eccc007
         ON ACTION controlp INFIELD eccc007
            #add-point:ON ACTION controlp INFIELD eccc007
            {<point name="input.c.page2.eccc007" />}
            #END add-point
 
         #Ctrlp:input.c.page2.eccc008
         ON ACTION controlp INFIELD eccc008
            #add-point:ON ACTION controlp INFIELD eccc008
            {<point name="input.c.page2.eccc008" />}
            #END add-point
 
         #Ctrlp:input.c.page2.eccc009
         ON ACTION controlp INFIELD eccc009
            #add-point:ON ACTION controlp INFIELD eccc009
            {<point name="input.c.page2.eccc009" />}
            #END add-point
 
         #Ctrlp:input.c.page2.eccc010
         ON ACTION controlp INFIELD eccc010
            #add-point:ON ACTION controlp INFIELD eccc010
            {<point name="input.c.page2.eccc010" />}
            #END add-point
 
         #Ctrlp:input.c.page2.eccc901
         ON ACTION controlp INFIELD eccc901
            #add-point:ON ACTION controlp INFIELD eccc901
            {<point name="input.c.page2.eccc901" />}
            #END add-point
 
         #Ctrlp:input.c.page2.eccc905
         ON ACTION controlp INFIELD eccc905
            #add-point:ON ACTION controlp INFIELD eccc905
            {<point name="input.c.page2.eccc905" />}
            #END add-point
 
         #Ctrlp:input.c.page2.eccc906
         ON ACTION controlp INFIELD eccc906
            #add-point:ON ACTION controlp INFIELD eccc906
            {<point name="input.c.page2.eccc906" />}
            #END add-point
 
         #Ctrlp:input.c.page2.eccc001
         ON ACTION controlp INFIELD eccc001
            #add-point:ON ACTION controlp INFIELD eccc001
            {<point name="input.c.page2.eccc001" />}
            #END add-point
 
         #Ctrlp:input.c.page2.eccc002
         ON ACTION controlp INFIELD eccc002
            #add-point:ON ACTION controlp INFIELD eccc002
            {<point name="input.c.page2.eccc002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.eccc900
         ON ACTION controlp INFIELD eccc900
            #add-point:ON ACTION controlp INFIELD eccc900
            {<point name="input.c.page2.eccc900" />}
            #END add-point
 
         #Ctrlp:input.c.page2.eccc902
         ON ACTION controlp INFIELD eccc902
            #add-point:ON ACTION controlp INFIELD eccc902
            {<point name="input.c.page2.eccc902" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2_after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_eccb2_d[l_ac].* = g_eccb2_d_t.*
               END IF
               CLOSE aect801_bcl2
               CLOSE aect801_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL aect801_unlock_b("eccc_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2_after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point  
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_eccb2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_eccb2_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      

{</section>}

{<section id="aect801.input.other" >}
      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx2)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD eccasite
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD eccb003
               WHEN "s_detail2"
                  NEXT FIELD eccc004
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION

{</section>}

{<section id="aect801.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aect801_show()
   DEFINE l_ac_t    LIKE type_t.num10  #161108-00012#1 num5==》num10
   #add-point:show段define
{<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
{<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL aect801_b_fill() #單身填充
      CALL aect801_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aect801_set_pk_array()
   #add-point:ON ACTION agendum
{<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
{<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_ecca_m.eccadocno,g_ecca_m.ecca001,g_ecca_m.oobxl003,g_ecca_m.ecca001_desc,g_ecca_m.eccadocdt, 
       g_ecca_m.ecca001_desc_1,g_ecca_m.ecca004,g_ecca_m.ecca002,g_ecca_m.eccasite,g_ecca_m.ecca003, 
       g_ecca_m.ecca900,g_ecca_m.ecca905,g_ecca_m.ecca905_desc,g_ecca_m.ecca906,g_ecca_m.eccastus,g_ecca_m.eccaownid, 
       g_ecca_m.eccaownid_desc,g_ecca_m.eccaowndp,g_ecca_m.eccaowndp_desc,g_ecca_m.eccacrtid,g_ecca_m.eccacrtid_desc, 
       g_ecca_m.eccacrtdp,g_ecca_m.eccacrtdp_desc,g_ecca_m.eccacrtdt,g_ecca_m.eccamodid,g_ecca_m.eccamodid_desc, 
       g_ecca_m.eccamoddt,g_ecca_m.eccacnfid,g_ecca_m.eccacnfid_desc,g_ecca_m.eccacnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
	  #根據狀態碼顯示對應圖片
      CASE g_ecca_m.eccastus
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")   
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")   
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")             
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_eccb_d.getLength()
      #add-point:show段單身reference
{<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_eccb2_d.getLength()
      #add-point:show段單身reference
{<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
{<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aect801_detail_show()
   
   #add-point:show段之後
{<point name="show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="aect801.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION aect801_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="aect801.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION aect801_reproduce()
   DEFINE l_newno     LIKE ecca_t.eccasite 
   DEFINE l_oldno     LIKE ecca_t.eccasite 
   DEFINE l_newno02     LIKE ecca_t.eccadocno 
   DEFINE l_oldno02     LIKE ecca_t.eccadocno 
 
   #DEFINE l_master    RECORD LIKE ecca_t.*  #161124-00048#2     2016/12/06 By 08734 mark
   #161124-00048#2     2016/12/06 By 08734 add(S)
   DEFINE l_master RECORD  #料件製程變更單頭檔
       eccaent LIKE ecca_t.eccaent, #企业编号
       eccaownid LIKE ecca_t.eccaownid, #资料所有者
       eccaowndp LIKE ecca_t.eccaowndp, #资料所有部门
       eccacrtid LIKE ecca_t.eccacrtid, #资料录入者
       eccacrtdp LIKE ecca_t.eccacrtdp, #资料录入部门
       eccacrtdt LIKE ecca_t.eccacrtdt, #资料创建日
       eccamodid LIKE ecca_t.eccamodid, #资料更改者
       eccamoddt LIKE ecca_t.eccamoddt, #最近更改日
       eccacnfid LIKE ecca_t.eccacnfid, #资料审核者
       eccacnfdt LIKE ecca_t.eccacnfdt, #数据审核日
       eccastus LIKE ecca_t.eccastus, #状态码
       eccasite LIKE ecca_t.eccasite, #营运据点
       eccadocno LIKE ecca_t.eccadocno, #申请单号
       eccadocdt LIKE ecca_t.eccadocdt, #申请日期
       ecca001 LIKE ecca_t.ecca001, #工艺料号
       ecca002 LIKE ecca_t.ecca002, #工艺编号
       ecca003 LIKE ecca_t.ecca003, #说明
       ecca004 LIKE ecca_t.ecca004, #申请类型
       ecca900 LIKE ecca_t.ecca900, #变更序
       ecca901 LIKE ecca_t.ecca901, #变更类型
       ecca902 LIKE ecca_t.ecca902, #变更日期
       ecca905 LIKE ecca_t.ecca905, #变更理由
       ecca906 LIKE ecca_t.ecca906 #变更备注
END RECORD
#161124-00048#2     2016/12/06 By 08734 add(E)
   #DEFINE l_detail    RECORD LIKE eccb_t.*  #161124-00048#2     2016/12/06 By 08734 mark
   #161124-00048#2     2016/12/06 By 08734 add(S)
   DEFINE l_detail RECORD  #料件製程變更單身檔
       eccbent LIKE eccb_t.eccbent, #企业编号
       eccbsite LIKE eccb_t.eccbsite, #营运据点
       eccbdocno LIKE eccb_t.eccbdocno, #申请单号
       eccb001 LIKE eccb_t.eccb001, #工艺料号
       eccb002 LIKE eccb_t.eccb002, #工艺编号
       eccb003 LIKE eccb_t.eccb003, #项次
       eccb004 LIKE eccb_t.eccb004, #本站作业
       eccb005 LIKE eccb_t.eccb005, #作业序
       eccb006 LIKE eccb_t.eccb006, #群组性质
       eccb007 LIKE eccb_t.eccb007, #群组
       eccb008 LIKE eccb_t.eccb008, #上站作业
       eccb009 LIKE eccb_t.eccb009, #上站作业序
       eccb010 LIKE eccb_t.eccb010, #下站作业
       eccb011 LIKE eccb_t.eccb011, #下站作业序
       eccb012 LIKE eccb_t.eccb012, #工作站
       eccb013 LIKE eccb_t.eccb013, #允许委外
       eccb014 LIKE eccb_t.eccb014, #主要加工厂
       eccb015 LIKE eccb_t.eccb015, #Move in
       eccb016 LIKE eccb_t.eccb016, #Check in
       eccb017 LIKE eccb_t.eccb017, #报工站
       eccb018 LIKE eccb_t.eccb018, #PQC
       eccb019 LIKE eccb_t.eccb019, #Check out
       eccb020 LIKE eccb_t.eccb020, #Move out
       eccb021 LIKE eccb_t.eccb021, #转出单位
       eccb022 LIKE eccb_t.eccb022, #转出单位转换率分子
       eccb023 LIKE eccb_t.eccb023, #转出单位转换率分母
       eccb024 LIKE eccb_t.eccb024, #固定工时
       eccb025 LIKE eccb_t.eccb025, #标准工时
       eccb026 LIKE eccb_t.eccb026, #固定机时
       eccb027 LIKE eccb_t.eccb027, #标准机时
       eccb028 LIKE eccb_t.eccb028, #完成度
       eccb029 LIKE eccb_t.eccb029, #标准单价
       eccb030 LIKE eccb_t.eccb030, #转入单位
       eccb031 LIKE eccb_t.eccb031, #转入单位转换分子
       eccb032 LIKE eccb_t.eccb032, #转入单位转换分母
       eccb033 LIKE eccb_t.eccb033, #回收站
       eccb034 LIKE eccb_t.eccb034, #后置时间
       eccb035 LIKE eccb_t.eccb035, #X轴
       eccb036 LIKE eccb_t.eccb036, #Y轴
       eccb900 LIKE eccb_t.eccb900, #变更序
       eccb901 LIKE eccb_t.eccb901, #变更类型
       eccb902 LIKE eccb_t.eccb902, #变更日期
       eccb905 LIKE eccb_t.eccb905, #变更理由
       eccb906 LIKE eccb_t.eccb906 #变更备注
END RECORD
#161124-00048#2     2016/12/06 By 08734 add(E)
 
   #DEFINE l_detail2    RECORD LIKE eccc_t.*  #161124-00048#2     2016/12/06 By 08734 mark
   #161124-00048#2     2016/12/06 By 08734 add(S)
   DEFINE l_detail2 RECORD  #料件製程變更用料底稿
       ecccent LIKE eccc_t.ecccent, #企业编号
       ecccsite LIKE eccc_t.ecccsite, #营运据点
       ecccdocno LIKE eccc_t.ecccdocno, #申请单号
       eccc001 LIKE eccc_t.eccc001, #工艺料号
       eccc002 LIKE eccc_t.eccc002, #工艺编号
       eccc003 LIKE eccc_t.eccc003, #工艺项次
       eccc004 LIKE eccc_t.eccc004, #项次
       eccc005 LIKE eccc_t.eccc005, #元件料号
       eccc006 LIKE eccc_t.eccc006, #部位
       eccc007 LIKE eccc_t.eccc007, #组成用量
       eccc008 LIKE eccc_t.eccc008, #主件底数
       eccc009 LIKE eccc_t.eccc009, #用量单位
       eccc010 LIKE eccc_t.eccc010, #损耗率形态
       eccc900 LIKE eccc_t.eccc900, #变更序
       eccc901 LIKE eccc_t.eccc901, #变更类型
       eccc902 LIKE eccc_t.eccc902, #变更日期
       eccc905 LIKE eccc_t.eccc905, #变更理由
       eccc906 LIKE eccc_t.eccc906 #变更备注
END RECORD
#161124-00048#2     2016/12/06 By 08734 add(E)
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
{<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_ecca_m.eccasite IS NULL
   OR g_ecca_m.eccadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_eccasite_t = g_ecca_m.eccasite
   LET g_eccadocno_t = g_ecca_m.eccadocno
 
    
   LET g_ecca_m.eccasite = ""
   LET g_ecca_m.eccadocno = ""
 
    
   CALL aect801_set_entry('a')
   CALL aect801_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      #公用欄位新增給值
      LET g_ecca_m.eccaownid = g_user
      LET g_ecca_m.eccaowndp = g_dept
      LET g_ecca_m.eccacrtid = g_user
      LET g_ecca_m.eccacrtdp = g_dept 
      LET g_ecca_m.eccacrtdt = cl_get_current()
      LET g_ecca_m.eccamodid = ""
      LET g_ecca_m.eccamoddt = ""
      LET g_ecca_m.eccastus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
{<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
	  #根據狀態碼顯示對應圖片
      CASE g_ecca_m.eccastus
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")   
         
      END CASE
 
 
   
   CALL aect801_input("r")
   
   
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_ecca_m.* TO NULL
      INITIALIZE g_eccb_d TO NULL
      INITIALIZE g_eccb2_d TO NULL
 
      #add-point:複製取消後
{<point name="reproduce.cancel" />}
      #end add-point
      CALL aect801_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aect801_set_act_visible()   
   CALL aect801_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_eccasite_t = g_ecca_m.eccasite
   LET g_eccadocno_t = g_ecca_m.eccadocno
   
   LET g_state = 'Y'
   
   #組合新增資料的條件
   LET g_add_browse = " eccaent = '" ||g_enterprise|| "' AND",
                      " eccasite = '", g_ecca_m.eccasite, "' "
                      ," AND eccadocno = '", g_ecca_m.eccadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aect801_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
{<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL aect801_idx_chk()
   
END FUNCTION

{</section>}

{<section id="aect801.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION aect801_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   #DEFINE l_detail    RECORD LIKE eccb_t.*  #161124-00048#2     2016/12/06 By 08734 mark
   #161124-00048#2     2016/12/06 By 08734 add(S)
   DEFINE l_detail RECORD  #料件製程變更單身檔
       eccbent LIKE eccb_t.eccbent, #企业编号
       eccbsite LIKE eccb_t.eccbsite, #营运据点
       eccbdocno LIKE eccb_t.eccbdocno, #申请单号
       eccb001 LIKE eccb_t.eccb001, #工艺料号
       eccb002 LIKE eccb_t.eccb002, #工艺编号
       eccb003 LIKE eccb_t.eccb003, #项次
       eccb004 LIKE eccb_t.eccb004, #本站作业
       eccb005 LIKE eccb_t.eccb005, #作业序
       eccb006 LIKE eccb_t.eccb006, #群组性质
       eccb007 LIKE eccb_t.eccb007, #群组
       eccb008 LIKE eccb_t.eccb008, #上站作业
       eccb009 LIKE eccb_t.eccb009, #上站作业序
       eccb010 LIKE eccb_t.eccb010, #下站作业
       eccb011 LIKE eccb_t.eccb011, #下站作业序
       eccb012 LIKE eccb_t.eccb012, #工作站
       eccb013 LIKE eccb_t.eccb013, #允许委外
       eccb014 LIKE eccb_t.eccb014, #主要加工厂
       eccb015 LIKE eccb_t.eccb015, #Move in
       eccb016 LIKE eccb_t.eccb016, #Check in
       eccb017 LIKE eccb_t.eccb017, #报工站
       eccb018 LIKE eccb_t.eccb018, #PQC
       eccb019 LIKE eccb_t.eccb019, #Check out
       eccb020 LIKE eccb_t.eccb020, #Move out
       eccb021 LIKE eccb_t.eccb021, #转出单位
       eccb022 LIKE eccb_t.eccb022, #转出单位转换率分子
       eccb023 LIKE eccb_t.eccb023, #转出单位转换率分母
       eccb024 LIKE eccb_t.eccb024, #固定工时
       eccb025 LIKE eccb_t.eccb025, #标准工时
       eccb026 LIKE eccb_t.eccb026, #固定机时
       eccb027 LIKE eccb_t.eccb027, #标准机时
       eccb028 LIKE eccb_t.eccb028, #完成度
       eccb029 LIKE eccb_t.eccb029, #标准单价
       eccb030 LIKE eccb_t.eccb030, #转入单位
       eccb031 LIKE eccb_t.eccb031, #转入单位转换分子
       eccb032 LIKE eccb_t.eccb032, #转入单位转换分母
       eccb033 LIKE eccb_t.eccb033, #回收站
       eccb034 LIKE eccb_t.eccb034, #后置时间
       eccb035 LIKE eccb_t.eccb035, #X轴
       eccb036 LIKE eccb_t.eccb036, #Y轴
       eccb900 LIKE eccb_t.eccb900, #变更序
       eccb901 LIKE eccb_t.eccb901, #变更类型
       eccb902 LIKE eccb_t.eccb902, #变更日期
       eccb905 LIKE eccb_t.eccb905, #变更理由
       eccb906 LIKE eccb_t.eccb906 #变更备注
END RECORD
#161124-00048#2     2016/12/06 By 08734 add(E)
 
   #DEFINE l_detail2    RECORD LIKE eccc_t.*  #161124-00048#2     2016/12/06 By 08734 mark
   #161124-00048#2     2016/12/06 By 08734 add(S)
   DEFINE l_detail2 RECORD  #料件製程變更用料底稿
       ecccent LIKE eccc_t.ecccent, #企业编号
       ecccsite LIKE eccc_t.ecccsite, #营运据点
       ecccdocno LIKE eccc_t.ecccdocno, #申请单号
       eccc001 LIKE eccc_t.eccc001, #工艺料号
       eccc002 LIKE eccc_t.eccc002, #工艺编号
       eccc003 LIKE eccc_t.eccc003, #工艺项次
       eccc004 LIKE eccc_t.eccc004, #项次
       eccc005 LIKE eccc_t.eccc005, #元件料号
       eccc006 LIKE eccc_t.eccc006, #部位
       eccc007 LIKE eccc_t.eccc007, #组成用量
       eccc008 LIKE eccc_t.eccc008, #主件底数
       eccc009 LIKE eccc_t.eccc009, #用量单位
       eccc010 LIKE eccc_t.eccc010, #损耗率形态
       eccc900 LIKE eccc_t.eccc900, #变更序
       eccc901 LIKE eccc_t.eccc901, #变更类型
       eccc902 LIKE eccc_t.eccc902, #变更日期
       eccc905 LIKE eccc_t.eccc905, #变更理由
       eccc906 LIKE eccc_t.eccc906 #变更备注
END RECORD
#161124-00048#2     2016/12/06 By 08734 add(E)
 
 
   #add-point:delete段define
{<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aect801_detail
   
   #add-point:單身複製前1
{<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aect801_detail AS ",
                "SELECT * FROM eccb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aect801_detail SELECT * FROM eccb_t 
                                         WHERE eccbent = g_enterprise AND eccbsite = g_eccasite_t
                                         AND eccbdocno = g_eccadocno_t
 
   
   #將key修正為調整後   
   UPDATE aect801_detail 
      #更新key欄位
      SET eccbsite = g_ecca_m.eccasite
          , eccbdocno = g_ecca_m.eccadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
{<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO eccb_t SELECT * FROM aect801_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN
   END IF
   
   #add-point:單身複製中1
{<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aect801_detail
   
   #add-point:單身複製後1
{<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
   #add-point:單身複製前
{<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE aect801_detail AS ",
      "SELECT * FROM eccc_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aect801_detail SELECT * FROM eccc_t
                                         WHERE ecccent = g_enterprise AND ecccsite = g_eccasite_t
                                         AND ecccdocno = g_eccadocno_t
 
 
   #將key修正為調整後   
   UPDATE aect801_detail SET ecccsite = g_ecca_m.eccasite
                                       , ecccdocno = g_ecca_m.eccadocno
 
  
   #將資料塞回原table   
   INSERT INTO eccc_t SELECT * FROM aect801_detail
   
   #add-point:單身複製中
{<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aect801_detail
   
   #add-point:單身複製後
{<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_eccasite_t = g_ecca_m.eccasite
   LET g_eccadocno_t = g_ecca_m.eccadocno
 
   
END FUNCTION

{</section>}

{<section id="aect801.delete" >}
#+ 資料刪除
PRIVATE FUNCTION aect801_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_ecca_m.eccasite IS NULL
   OR g_ecca_m.eccadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
 
   CALL aect801_show()
   
   CALL s_transaction_begin()
 
   OPEN aect801_cl USING g_enterprise,g_ecca_m.eccasite,g_ecca_m.eccadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aect801_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aect801_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aect801_master_referesh USING g_ecca_m.eccasite,g_ecca_m.eccadocno INTO g_ecca_m.eccadocno, 
       g_ecca_m.ecca001,g_ecca_m.eccadocdt,g_ecca_m.ecca004,g_ecca_m.ecca002,g_ecca_m.eccasite,g_ecca_m.ecca003, 
       g_ecca_m.ecca900,g_ecca_m.ecca905,g_ecca_m.ecca906,g_ecca_m.eccastus,g_ecca_m.eccaownid,g_ecca_m.eccaowndp, 
       g_ecca_m.eccacrtid,g_ecca_m.eccacrtdp,g_ecca_m.eccacrtdt,g_ecca_m.eccamodid,g_ecca_m.eccamoddt, 
       g_ecca_m.eccacnfid,g_ecca_m.eccacnfdt,g_ecca_m.ecca001_desc,g_ecca_m.ecca905_desc,g_ecca_m.eccaownid_desc, 
       g_ecca_m.eccaowndp_desc,g_ecca_m.eccacrtid_desc,g_ecca_m.eccacrtdp_desc,g_ecca_m.eccamodid_desc, 
       g_ecca_m.eccacnfid_desc
 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_ecca_m.eccasite 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aect801_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_eccasite_t = g_ecca_m.eccasite
      LET g_eccadocno_t = g_ecca_m.eccadocno
 
 
      DELETE FROM ecca_t
       WHERE eccaent = g_enterprise AND eccasite = g_ecca_m.eccasite
         AND eccadocno = g_ecca_m.eccadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_ecca_m.eccasite 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM eccb_t
       WHERE eccbent = g_enterprise AND eccbsite = g_ecca_m.eccasite
         AND eccbdocno = g_ecca_m.eccadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "eccb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM eccc_t
       WHERE ecccent = g_enterprise AND
             ecccsite = g_ecca_m.eccasite AND ecccdocno = g_ecca_m.eccadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "eccc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
                                                               
      CLEAR FORM
      CALL g_eccb_d.clear() 
      CALL g_eccb2_d.clear()       
 
     
      CALL aect801_ui_browser_refresh()  
      #CALL aect801_ui_headershow()  
      #CALL aect801_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL aect801_browser_fill("")
         CALL aect801_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE aect801_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_ecca_m.eccasite,'D')
    
END FUNCTION

{</section>}

{<section id="aect801.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION aect801_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
{<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_eccb_d.clear()    #g_eccb_d 單頭及單身 
   CALL g_eccb2_d.clear()
 
 
   #add-point:b_fill段sql_before
{<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aect801_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE eccb003,eccb004,eccb005,eccb006,eccb007,eccb008,eccb009,eccb010,eccb011, 
          eccb012,eccb024,eccb025,eccb026,eccb027,eccb034,eccb013,eccb014,eccb015,eccb016,eccb017,eccb018, 
          eccb019,eccb020,eccb030,eccb031,eccb032,eccb021,eccb022,eccb023,eccb033,eccb028,eccb029,eccb035, 
          eccb036,eccb901,eccb905,eccb906,eccb001,eccb002,eccb900,eccb902 ,t1.oocql004 ,t2.oocql004 , 
          t3.oocql004 ,t4.ecaa002 ,t5.pmaal004 ,t6.oocal003 ,t7.oocal003 ,t8.oocql004 FROM eccb_t",  
            
                  " INNER JOIN ecca_t ON eccasite = eccbsite ",
                  " AND eccadocno = eccbdocno ",
 
                  #"",
                  " LEFT JOIN eccc_t ON eccbent = ecccent AND eccbsite = ecccsite AND eccbdocno = ecccdocno AND eccb003 = eccc003 ",
                  "",
                                 " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='221' AND t1.oocql002=eccb004 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='221' AND t2.oocql002=eccb008 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='221' AND t3.oocql002=eccb010 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ecaa_t t4 ON t4.ecaaent='"||g_enterprise||"' AND t4.ecaasite='"||g_site||"' AND t4.ecaa001=eccb012  ",
               " LEFT JOIN pmaal_t t5 ON t5.pmaalent='"||g_enterprise||"' AND t5.pmaal001=eccb014 AND t5.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t6 ON t6.oocalent='"||g_enterprise||"' AND t6.oocal001=eccb030 AND t6.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t7 ON t7.oocalent='"||g_enterprise||"' AND t7.oocal001=eccb021 AND t7.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t8 ON t8.oocqlent='"||g_enterprise||"' AND t8.oocql001='215' AND t8.oocql002=eccb905 AND t8.oocql003='"||g_dlang||"' ",
 
                  " WHERE eccbent=? AND eccbsite=? AND eccbdocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
{<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
         IF NOT cl_null(g_wc2_table2) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table2 CLIPPED
   END IF 
 
      
      LET g_sql = g_sql, " ORDER BY eccb_t.eccb003"
      
      #add-point:單身填充控制
{<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aect801_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aect801_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_ecca_m.eccasite,g_ecca_m.eccadocno
                                               
      FOREACH b_fill_cs INTO g_eccb_d[l_ac].eccb003,g_eccb_d[l_ac].eccb004,g_eccb_d[l_ac].eccb005,g_eccb_d[l_ac].eccb006, 
          g_eccb_d[l_ac].eccb007,g_eccb_d[l_ac].eccb008,g_eccb_d[l_ac].eccb009,g_eccb_d[l_ac].eccb010, 
          g_eccb_d[l_ac].eccb011,g_eccb_d[l_ac].eccb012,g_eccb_d[l_ac].eccb024,g_eccb_d[l_ac].eccb025, 
          g_eccb_d[l_ac].eccb026,g_eccb_d[l_ac].eccb027,g_eccb_d[l_ac].eccb034,g_eccb_d[l_ac].eccb013, 
          g_eccb_d[l_ac].eccb014,g_eccb_d[l_ac].eccb015,g_eccb_d[l_ac].eccb016,g_eccb_d[l_ac].eccb017, 
          g_eccb_d[l_ac].eccb018,g_eccb_d[l_ac].eccb019,g_eccb_d[l_ac].eccb020,g_eccb_d[l_ac].eccb030, 
          g_eccb_d[l_ac].eccb031,g_eccb_d[l_ac].eccb032,g_eccb_d[l_ac].eccb021,g_eccb_d[l_ac].eccb022, 
          g_eccb_d[l_ac].eccb023,g_eccb_d[l_ac].eccb033,g_eccb_d[l_ac].eccb028,g_eccb_d[l_ac].eccb029, 
          g_eccb_d[l_ac].eccb035,g_eccb_d[l_ac].eccb036,g_eccb_d[l_ac].eccb901,g_eccb_d[l_ac].eccb905, 
          g_eccb_d[l_ac].eccb906,g_eccb_d[l_ac].eccb001,g_eccb_d[l_ac].eccb002,g_eccb_d[l_ac].eccb900, 
          g_eccb_d[l_ac].eccb902,g_eccb_d[l_ac].eccb004_desc,g_eccb_d[l_ac].eccb008_desc,g_eccb_d[l_ac].eccb010_desc, 
          g_eccb_d[l_ac].eccb012_desc,g_eccb_d[l_ac].eccb014_desc,g_eccb_d[l_ac].eccb030_desc,g_eccb_d[l_ac].eccb021_desc, 
          g_eccb_d[l_ac].eccb905_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
{<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
{<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_eccb_d.deleteElement(g_eccb_d.getLength())
   CALL g_eccb2_d.deleteElement(g_eccb2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aect801_pb
 
   
END FUNCTION

{</section>}

{<section id="aect801.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION aect801_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10   #161108-00012#1 num5==》num10
   #add-point:delete_b段define
{<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
{<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM eccb_t
       WHERE eccbent = g_enterprise AND
         eccbsite = ps_keys_bak[1] AND eccbdocno = ps_keys_bak[2] AND eccb003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
{<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      
      #add-point:delete_b段刪除後
{<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
{<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM eccc_t
       WHERE ecccent = g_enterprise AND
             ecccsite = ps_keys_bak[1] AND ecccdocno = ps_keys_bak[2] AND eccc003 = ps_keys_bak[3] AND eccc004 = ps_keys_bak[4]
      #add-point:delete_b段刪除中
{<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "eccc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
    
      LET li_idx = g_detail_idx2
      
      #add-point:delete_b段刪除後
{<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other
{<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="aect801.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION aect801_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10  #161108-00012#1 num5==》num10
   #add-point:insert_b段define
{<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
{<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO eccb_t
                  (eccbent,
                   eccbsite,eccbdocno,
                   eccb003
                   ,eccb004,eccb005,eccb006,eccb007,eccb008,eccb009,eccb010,eccb011,eccb012,eccb024,eccb025,eccb026,eccb027,eccb034,eccb013,eccb014,eccb015,eccb016,eccb017,eccb018,eccb019,eccb020,eccb030,eccb031,eccb032,eccb021,eccb022,eccb023,eccb033,eccb028,eccb029,eccb035,eccb036,eccb901,eccb905,eccb906,eccb001,eccb002,eccb900,eccb902) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_eccb_d[g_detail_idx].eccb004,g_eccb_d[g_detail_idx].eccb005,g_eccb_d[g_detail_idx].eccb006, 
                       g_eccb_d[g_detail_idx].eccb007,g_eccb_d[g_detail_idx].eccb008,g_eccb_d[g_detail_idx].eccb009, 
                       g_eccb_d[g_detail_idx].eccb010,g_eccb_d[g_detail_idx].eccb011,g_eccb_d[g_detail_idx].eccb012, 
                       g_eccb_d[g_detail_idx].eccb024,g_eccb_d[g_detail_idx].eccb025,g_eccb_d[g_detail_idx].eccb026, 
                       g_eccb_d[g_detail_idx].eccb027,g_eccb_d[g_detail_idx].eccb034,g_eccb_d[g_detail_idx].eccb013, 
                       g_eccb_d[g_detail_idx].eccb014,g_eccb_d[g_detail_idx].eccb015,g_eccb_d[g_detail_idx].eccb016, 
                       g_eccb_d[g_detail_idx].eccb017,g_eccb_d[g_detail_idx].eccb018,g_eccb_d[g_detail_idx].eccb019, 
                       g_eccb_d[g_detail_idx].eccb020,g_eccb_d[g_detail_idx].eccb030,g_eccb_d[g_detail_idx].eccb031, 
                       g_eccb_d[g_detail_idx].eccb032,g_eccb_d[g_detail_idx].eccb021,g_eccb_d[g_detail_idx].eccb022, 
                       g_eccb_d[g_detail_idx].eccb023,g_eccb_d[g_detail_idx].eccb033,g_eccb_d[g_detail_idx].eccb028, 
                       g_eccb_d[g_detail_idx].eccb029,g_eccb_d[g_detail_idx].eccb035,g_eccb_d[g_detail_idx].eccb036, 
                       g_eccb_d[g_detail_idx].eccb901,g_eccb_d[g_detail_idx].eccb905,g_eccb_d[g_detail_idx].eccb906, 
                       g_eccb_d[g_detail_idx].eccb001,g_eccb_d[g_detail_idx].eccb002,g_eccb_d[g_detail_idx].eccb900, 
                       g_eccb_d[g_detail_idx].eccb902)
      #add-point:insert_b段資料新增中
{<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "eccb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      
      #add-point:insert_b段資料新增後
{<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
{<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO eccc_t
                  (ecccent,
                   ecccsite,ecccdocno,eccc003,
                   eccc004
                   ,eccc005,eccc006,eccc007,eccc008,eccc009,eccc010,eccc901,eccc905,eccc906,eccc001,eccc002,eccc900,eccc902) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_eccb2_d[g_detail_idx2].eccc005,g_eccb2_d[g_detail_idx2].eccc006,g_eccb2_d[g_detail_idx2].eccc007, 
                       g_eccb2_d[g_detail_idx2].eccc008,g_eccb2_d[g_detail_idx2].eccc009,g_eccb2_d[g_detail_idx2].eccc010, 
                       g_eccb2_d[g_detail_idx2].eccc901,g_eccb2_d[g_detail_idx2].eccc905,g_eccb2_d[g_detail_idx2].eccc906, 
                       g_eccb2_d[g_detail_idx2].eccc001,g_eccb2_d[g_detail_idx2].eccc002,g_eccb2_d[g_detail_idx2].eccc900, 
                       g_eccb2_d[g_detail_idx2].eccc902)
      #add-point:insert_b段資料新增中
{<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "eccc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
      END IF
      
      LET li_idx = g_detail_idx2
      
      #add-point:insert_b段資料新增後
{<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other
{<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION

{</section>}

{<section id="aect801.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION aect801_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10   #161108-00012#1 num5==》num10
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
{<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "eccb_t" THEN
      #add-point:update_b段修改前
{<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE eccb_t 
         SET (eccbsite,eccbdocno,
              eccb003
              ,eccb004,eccb005,eccb006,eccb007,eccb008,eccb009,eccb010,eccb011,eccb012,eccb024,eccb025,eccb026,eccb027,eccb034,eccb013,eccb014,eccb015,eccb016,eccb017,eccb018,eccb019,eccb020,eccb030,eccb031,eccb032,eccb021,eccb022,eccb023,eccb033,eccb028,eccb029,eccb035,eccb036,eccb901,eccb905,eccb906,eccb001,eccb002,eccb900,eccb902) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_eccb_d[g_detail_idx].eccb004,g_eccb_d[g_detail_idx].eccb005,g_eccb_d[g_detail_idx].eccb006, 
                  g_eccb_d[g_detail_idx].eccb007,g_eccb_d[g_detail_idx].eccb008,g_eccb_d[g_detail_idx].eccb009, 
                  g_eccb_d[g_detail_idx].eccb010,g_eccb_d[g_detail_idx].eccb011,g_eccb_d[g_detail_idx].eccb012, 
                  g_eccb_d[g_detail_idx].eccb024,g_eccb_d[g_detail_idx].eccb025,g_eccb_d[g_detail_idx].eccb026, 
                  g_eccb_d[g_detail_idx].eccb027,g_eccb_d[g_detail_idx].eccb034,g_eccb_d[g_detail_idx].eccb013, 
                  g_eccb_d[g_detail_idx].eccb014,g_eccb_d[g_detail_idx].eccb015,g_eccb_d[g_detail_idx].eccb016, 
                  g_eccb_d[g_detail_idx].eccb017,g_eccb_d[g_detail_idx].eccb018,g_eccb_d[g_detail_idx].eccb019, 
                  g_eccb_d[g_detail_idx].eccb020,g_eccb_d[g_detail_idx].eccb030,g_eccb_d[g_detail_idx].eccb031, 
                  g_eccb_d[g_detail_idx].eccb032,g_eccb_d[g_detail_idx].eccb021,g_eccb_d[g_detail_idx].eccb022, 
                  g_eccb_d[g_detail_idx].eccb023,g_eccb_d[g_detail_idx].eccb033,g_eccb_d[g_detail_idx].eccb028, 
                  g_eccb_d[g_detail_idx].eccb029,g_eccb_d[g_detail_idx].eccb035,g_eccb_d[g_detail_idx].eccb036, 
                  g_eccb_d[g_detail_idx].eccb901,g_eccb_d[g_detail_idx].eccb905,g_eccb_d[g_detail_idx].eccb906, 
                  g_eccb_d[g_detail_idx].eccb001,g_eccb_d[g_detail_idx].eccb002,g_eccb_d[g_detail_idx].eccb900, 
                  g_eccb_d[g_detail_idx].eccb902) 
         WHERE eccbent = g_enterprise AND eccbsite = ps_keys_bak[1] AND eccbdocno = ps_keys_bak[2] AND eccb003 = ps_keys_bak[3]
      #add-point:update_b段修改中
{<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "eccb_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "eccb_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
{<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "eccc_t" THEN
      #add-point:update_b段修改前
{<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE eccc_t 
         SET (ecccsite,ecccdocno,eccc003,
              eccc004
              ,eccc005,eccc006,eccc007,eccc008,eccc009,eccc010,eccc901,eccc905,eccc906,eccc001,eccc002,eccc900,eccc902) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_eccb2_d[g_detail_idx2].eccc005,g_eccb2_d[g_detail_idx2].eccc006,g_eccb2_d[g_detail_idx2].eccc007, 
                  g_eccb2_d[g_detail_idx2].eccc008,g_eccb2_d[g_detail_idx2].eccc009,g_eccb2_d[g_detail_idx2].eccc010, 
                  g_eccb2_d[g_detail_idx2].eccc901,g_eccb2_d[g_detail_idx2].eccc905,g_eccb2_d[g_detail_idx2].eccc906, 
                  g_eccb2_d[g_detail_idx2].eccc001,g_eccb2_d[g_detail_idx2].eccc002,g_eccb2_d[g_detail_idx2].eccc900, 
                  g_eccb2_d[g_detail_idx2].eccc902) 
         WHERE ecccent = g_enterprise AND ecccsite = ps_keys_bak[1] AND ecccdocno = ps_keys_bak[2] AND eccc003 = ps_keys_bak[3] AND eccc004 = ps_keys_bak[4]
      #add-point:update_b段修改中
{<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "eccc_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "eccc_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
{<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
   #add-point:update_b段other
{<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="aect801.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION aect801_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aect801_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "eccb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aect801_bcl USING g_enterprise,
                                       g_ecca_m.eccasite,g_ecca_m.eccadocno,g_eccb_d[g_detail_idx].eccb003  
                                               
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aect801_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         RETURN FALSE
      END IF
   END IF
                                    
 
   
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "eccc_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aect801_bcl2 USING g_enterprise,
                                             g_ecca_m.eccasite,g_ecca_m.eccadocno,g_eccb_d[g_detail_idx].eccb003, 

                                             g_eccb2_d[g_detail_idx2].eccc004
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aect801_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="aect801.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aect801_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aect801_bcl
   END IF
   
 
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aect801_bcl2
   END IF
 
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="aect801.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION aect801_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("eccasite,eccadocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="aect801.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION aect801_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("eccasite,eccadocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="aect801.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION aect801_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION

{</section>}

{<section id="aect801.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION aect801_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION

{</section>}

{<section id="aect801.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION aect801_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="aect801.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION aect801_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="aect801.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION aect801_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="aect801.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION aect801_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="aect801.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION aect801_default_search()
   DEFINE li_idx  LIKE type_t.num10  #161108-00012#1 num5==》num10
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
{<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
{<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " eccasite = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " eccadocno = '", g_argv[02], "' AND "
   END IF
 
   
   #add-point:default_search段after sql
{<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
{<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION

{</section>}

{<section id="aect801.state_change" >}
   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aect801_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
{<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
{<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_ecca_m.eccasite IS NULL
      OR g_ecca_m.eccadocno IS NULL
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_ecca_m.eccastus
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid" 
            WHEN "Y"
               HIDE OPTION "confirmed" 
            
         END CASE
     
      #add-point:menu前
{<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
{<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
{<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
{<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
{<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
{<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      #170213-00014#1-S
      #ON ACTION invalid
      #   IF cl_auth_chk_act("invalid") THEN
      #      LET lc_state = "X"
      #      #add-point:action控制
{<point name="statechange.invalid"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      #170213-00014#1-E
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
{<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU  
         
      #此段落由子樣板a36產生
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT aect801_send() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_send()已有執行update動作
         
         EXIT MENU
 
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT aect801_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_draw_out()已有執行update動作
         EXIT MENU
 
 
      #170213-00014#1-S
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制

            #end add-point
         END IF
         EXIT MENU
      #170213-00014#1-E
      
      #add-point:stus控制
{<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "A" 
      AND lc_state <> "D"
      AND lc_state <> "N"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
{<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE ecca_t SET eccastus = lc_state 
    WHERE eccaent = g_enterprise AND eccasite = g_ecca_m.eccasite
      AND eccadocno = g_ecca_m.eccadocno
  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
   ELSE
      CASE lc_state
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png") 
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")  
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png") 
         
      END CASE
      LET g_ecca_m.eccastus = lc_state
      DISPLAY BY NAME g_ecca_m.eccastus
   END IF
 
   #add-point:stus修改後
{<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
{<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 

{</section>}

{<section id="aect801.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION aect801_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_eccb_d.getLength() THEN
         LET g_detail_idx = g_eccb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_eccb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_eccb_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx2 > g_eccb2_d.getLength() THEN
         LET g_detail_idx2 = g_eccb2_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_eccb2_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_eccb2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="aect801.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION aect801_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10  #161108-00012#1 num5==》num10
   DEFINE li_ac           LIKE type_t.num10  #161108-00012#1 num5==》num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
{<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   IF aect801_fill_chk(2) THEN
      IF (pi_idx = 2 OR pi_idx = 0 ) AND g_eccb_d.getLength() > 0 THEN
               CALL g_eccb2_d.clear()
 
         LET g_sql = "SELECT  UNIQUE eccc004,eccc005,eccc006,eccc007,eccc008,eccc009,eccc010,eccc901, 
             eccc905,eccc906,eccc001,eccc002,eccc900,eccc902 ,t9.imaal003 ,t10.oocql004 ,t11.oocal003 , 
             t12.oocql004 FROM eccc_t",    
                     "",
                                    " LEFT JOIN imaal_t t9 ON t9.imaalent='"||g_enterprise||"' AND t9.imaal001=eccc005 AND t9.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t10 ON t10.oocqlent='"||g_enterprise||"' AND t10.oocql001='215' AND t10.oocql002=eccc006 AND t10.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t11 ON t11.oocalent='"||g_enterprise||"' AND t11.oocal001=eccc009 AND t11.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t12 ON t12.oocqlent='"||g_enterprise||"' AND t12.oocql001='225' AND t12.oocql002=eccc905 AND t12.oocql003='"||g_dlang||"' ",
 
                     " WHERE ecccent=? AND ecccsite=? AND ecccdocno=? AND eccc003=?"
         
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  eccc_t.eccc004" 
                            
         #add-point:單身填充前
{<point name="b_fill2.before_fill2" />}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aect801_pb2 FROM g_sql
         DECLARE b_fill_curs2 CURSOR FOR aect801_pb2
         
         OPEN b_fill_curs2 USING g_enterprise,g_ecca_m.eccasite,g_ecca_m.eccadocno,g_eccb_d[g_detail_idx].eccb003 

         LET l_ac = 1
         FOREACH b_fill_curs2 INTO g_eccb2_d[l_ac].eccc004,g_eccb2_d[l_ac].eccc005,g_eccb2_d[l_ac].eccc006, 
             g_eccb2_d[l_ac].eccc007,g_eccb2_d[l_ac].eccc008,g_eccb2_d[l_ac].eccc009,g_eccb2_d[l_ac].eccc010, 
             g_eccb2_d[l_ac].eccc901,g_eccb2_d[l_ac].eccc905,g_eccb2_d[l_ac].eccc906,g_eccb2_d[l_ac].eccc001, 
             g_eccb2_d[l_ac].eccc002,g_eccb2_d[l_ac].eccc900,g_eccb2_d[l_ac].eccc902,g_eccb2_d[l_ac].eccc005_desc, 
             g_eccb2_d[l_ac].eccc006_desc,g_eccb2_d[l_ac].eccc009_desc,g_eccb2_d[l_ac].eccc905_desc  

            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充
{<point name="b_fill2.fill2"/>}
            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
               CALL g_eccb2_d.deleteElement(g_eccb2_d.getLength())
 
      END IF
   END IF
 
 
      
   #add-point:單身填充後
{<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aect801_detail_show()
   
END FUNCTION

{</section>}

{<section id="aect801.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION aect801_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')  OR 
      (NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1') OR 
      (NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN FALSE
 
END FUNCTION

{</section>}

{<section id="aect801.signature" >}
   #此段落由子樣板a39產生
#+ BPM提交
PRIVATE FUNCTION aect801_send()
 
   #add-point:send段define
{<point name="send.define"/>}
   #end add-point 
 
   IF g_ecca_m.eccasite IS NULL
   OR g_ecca_m.eccadocno IS NULL
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN FALSE
   END IF
 
   #重新取得與顯示完整單據資料(最新單據資料)
   EXECUTE aect801_master_referesh USING g_ecca_m.eccasite,g_ecca_m.eccadocno INTO g_ecca_m.eccadocno, 
       g_ecca_m.ecca001,g_ecca_m.eccadocdt,g_ecca_m.ecca004,g_ecca_m.ecca002,g_ecca_m.eccasite,g_ecca_m.ecca003, 
       g_ecca_m.ecca900,g_ecca_m.ecca905,g_ecca_m.ecca906,g_ecca_m.eccastus,g_ecca_m.eccaownid,g_ecca_m.eccaowndp, 
       g_ecca_m.eccacrtid,g_ecca_m.eccacrtdp,g_ecca_m.eccacrtdt,g_ecca_m.eccamodid,g_ecca_m.eccamoddt, 
       g_ecca_m.eccacnfid,g_ecca_m.eccacnfdt,g_ecca_m.ecca001_desc,g_ecca_m.ecca905_desc,g_ecca_m.eccaownid_desc, 
       g_ecca_m.eccaowndp_desc,g_ecca_m.eccacrtid_desc,g_ecca_m.eccacrtdp_desc,g_ecca_m.eccamodid_desc, 
       g_ecca_m.eccacnfid_desc
 
   ERROR ""
   
   CALL s_transaction_begin()
 
   OPEN aect801_cl USING g_enterprise,g_ecca_m.eccasite,g_ecca_m.eccadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aect801_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      CLOSE aect801_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH aect801_cl INTO g_ecca_m.eccadocno,g_ecca_m.ecca001,g_ecca_m.oobxl003,g_ecca_m.ecca001_desc, 
       g_ecca_m.eccadocdt,g_ecca_m.ecca001_desc_1,g_ecca_m.ecca004,g_ecca_m.ecca002,g_ecca_m.eccasite, 
       g_ecca_m.ecca003,g_ecca_m.ecca900,g_ecca_m.ecca905,g_ecca_m.ecca905_desc,g_ecca_m.ecca906,g_ecca_m.eccastus, 
       g_ecca_m.eccaownid,g_ecca_m.eccaownid_desc,g_ecca_m.eccaowndp,g_ecca_m.eccaowndp_desc,g_ecca_m.eccacrtid, 
       g_ecca_m.eccacrtid_desc,g_ecca_m.eccacrtdp,g_ecca_m.eccacrtdp_desc,g_ecca_m.eccacrtdt,g_ecca_m.eccamodid, 
       g_ecca_m.eccamodid_desc,g_ecca_m.eccamoddt,g_ecca_m.eccacnfid,g_ecca_m.eccacnfid_desc,g_ecca_m.eccacnfdt 

   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_ecca_m.eccasite 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      CLOSE aect801_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL aect801_show()
   CALL aect801_set_pk_array()
   
   #add-point: 提交前的ADP
{<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_ecca_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_eccb_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_eccb2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_eccb3_d))      #170213-00014#1
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      CLOSE aect801_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
{<point name="send.after_send" />}
   #end add-point
   
   #完成狀態更新
   CLOSE aect801_cl
   CALL s_transaction_end('Y','0')
             
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL aect801_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   #170213-00014#1-S
   #LET g_browser[g_current_row].b_statepic = "stus/16/signing.png"
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
   #170213-00014#1-E
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aect801_ui_headershow()
   CALL aect801_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#此段落由子樣板a40產生
#+ BPM抽單
PRIVATE FUNCTION aect801_draw_out()
 
   #add-point:draw段define
{<point name="draw.define"/>}
   #end add-point
 
   #檢查資料是否存在
   IF g_ecca_m.eccasite IS NULL
   OR g_ecca_m.eccadocno IS NULL
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN FALSE
   END IF
 
   #LOCK主檔資料
   CALL s_transaction_begin()
 
   #進行BPM抽單功能
   OPEN aect801_cl USING g_enterprise,g_ecca_m.eccasite,g_ecca_m.eccadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aect801_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      CLOSE aect801_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH aect801_cl INTO g_ecca_m.eccadocno,g_ecca_m.ecca001,g_ecca_m.oobxl003,g_ecca_m.ecca001_desc, 
       g_ecca_m.eccadocdt,g_ecca_m.ecca001_desc_1,g_ecca_m.ecca004,g_ecca_m.ecca002,g_ecca_m.eccasite, 
       g_ecca_m.ecca003,g_ecca_m.ecca900,g_ecca_m.ecca905,g_ecca_m.ecca905_desc,g_ecca_m.ecca906,g_ecca_m.eccastus, 
       g_ecca_m.eccaownid,g_ecca_m.eccaownid_desc,g_ecca_m.eccaowndp,g_ecca_m.eccaowndp_desc,g_ecca_m.eccacrtid, 
       g_ecca_m.eccacrtid_desc,g_ecca_m.eccacrtdp,g_ecca_m.eccacrtdp_desc,g_ecca_m.eccacrtdt,g_ecca_m.eccamodid, 
       g_ecca_m.eccamodid_desc,g_ecca_m.eccamoddt,g_ecca_m.eccacnfid,g_ecca_m.eccacnfid_desc,g_ecca_m.eccacnfdt 

   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_ecca_m.eccasite 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      CLOSE aect801_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      CLOSE aect801_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF    
 
   #完成狀態更新
   CLOSE aect801_cl
   CALL s_transaction_end('Y','0')
          
   #重新指定此筆單據資料狀態圖片=>抽單 
   #170213-00014#1-S
   #LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
   #170213-00014#1-E
   
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aect801_ui_headershow()  
   CALL aect801_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 

{</section>}

{<section id="aect801.set_pk_array" >}
   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aect801_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_ecca_m.eccasite
   LET g_pk_array[1].column = 'eccasite'
   LET g_pk_array[2].values = g_ecca_m.eccadocno
   LET g_pk_array[2].column = 'eccadocno'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 

{</section>}

{<section id="aect801.other_dialog" readonly="Y" >}
   

{</section>}

{<section id="aect801.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

