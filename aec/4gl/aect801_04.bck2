#該程式未解開Section, 採用最新樣板產出!
{<section id="aect801_04.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0001(2014-08-19 21:05:22), PR版次:0001(2014-08-19 21:50:13)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000075
#+ Filename...: aect801_04
#+ Description: 製程轉BOM申請新增、變更維護
#+ Creator....: 01258(2014-08-18 09:42:54)
#+ Modifier...: 01258 -SD/PR- 01258
 
{</section>}
 
{<section id="aect801_04.global" >}
#應用 p00 樣板自動產生(Version:4)
#add-point:填寫註解說明

#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
#add-point:增加匯入項目
IMPORT util
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
#add-point:增加匯入變數檔

#end add-point
 
{</section>}
 
{<section id="aect801_04.free_style_variable" >}
#add-point:free_style模組變數(Module Variable)

#end add-point
 
{</section>}
 
{<section id="aect801_04.global_variable" >}
#add-point:自定義模組變數(Module Variable)
 type type_g_bmbc_m        RECORD
       bmbc003 LIKE bmbc_t.bmbc003, 
   bmbc004 LIKE bmbc_t.bmbc004, 
   bmbc007 LIKE bmbc_t.bmbc007, 
   bmbc008 LIKE bmbc_t.bmbc008, 
   bmbc009 LIKE bmbc_t.bmbc009, 
   bmbcsite LIKE bmbc_t.bmbcsite, 
   bmbc001 LIKE bmbc_t.bmbc001, 
   bmbc002 LIKE bmbc_t.bmbc002, 
   bmbc005 DATETIME YEAR TO SECOND
       END RECORD
DEFINE g_bmbc_m        type_g_bmbc_m
 
   DEFINE g_bmbc003_t LIKE bmbc_t.bmbc003
DEFINE g_bmbc004_t LIKE bmbc_t.bmbc004
DEFINE g_bmbc007_t LIKE bmbc_t.bmbc007
DEFINE g_bmbc008_t LIKE bmbc_t.bmbc008
DEFINE g_bmbc009_t LIKE bmbc_t.bmbc009
DEFINE g_bmbcsite_t LIKE bmbc_t.bmbcsite
DEFINE g_bmbc001_t LIKE bmbc_t.bmbc001
DEFINE g_bmbc002_t LIKE bmbc_t.bmbc002
DEFINE g_bmbc005_t LIKE bmbc_t.bmbc005
 
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列

DEFINE g_eccadocno     LIKE ecca_t.eccadocno
DEFINE g_ecca001       LIKE ecca_t.ecca001
DEFINE g_ecca002       LIKE ecca_t.ecca002
#end add-point
 
{</section>}
 
{<section id="aect801_04.other_dialog" >}

 
{</section>}
 
{<section id="aect801_04.other_function" readonly="Y" >}
################################################################################
# Descriptions...: 檢查主件料號+特征是否已經存在BOM資料中
# Memo...........:
# Usage..........: CALL aect801_04_chk_bmaa()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/7/30 BY wuxja
# Modify.........:
################################################################################
PRIVATE FUNCTION aect801_04_chk_bmaa()
DEFINE l_n           LIKE type_t.num5

   LET g_errno = ""
   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM bmaa_t
    WHERE bmaaent = g_enterprise
      AND bmaasite = 'ALL'
      AND bmaa001 = g_bmbc_m.bmbc001
      AND bmaa002 = g_bmbc_m.bmbc002
   IF l_n > 0 THEN
      LET g_errno = 'aec-00014'
   END IF
END FUNCTION
################################################################################
# Descriptions...: 批量新增BOM資料
# Memo...........:
# Usage..........: CALL aect801_04_ins()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/7/30 BY wuxja
# Modify.........:
################################################################################
PRIVATE FUNCTION aect801_04_ins()
DEFINE r_success         LIKE type_t.num5
DEFINE l_bmaa            RECORD LIKE bmaa_t.*
DEFINE l_bmba            RECORD LIKE bmba_t.*
DEFINE l_bmbb            RECORD LIKE bmbb_t.*
DEFINE l_imae016         LIKE imae_t.imae016
DEFINE l_imae021         LIKE imae_t.imae021
DEFINE l_eccb            RECORD LIKE eccb_t.*
DEFINE l_date            LIKE bmba_t.bmba005
DEFINE l_sql             STRING

   LET r_success = FALSE
   IF cl_null(g_bmbc_m.bmbc002) THEN LET g_bmbc_m.bmbc002 = ' ' END IF
   SELECT imae016,imae021 INTO l_imae016,l_imae021
     FROM imae_t
    WHERE imaeent = g_enterprise
      AND imaesite = g_site
      AND imae001 = g_bmbc_m.bmbc001
   LET l_date = g_bmbc_m.bmbc005
   INITIALIZE l_bmaa.* TO NULL
   LET l_bmaa.bmaasite = 'ALL'
   LET l_bmaa.bmaaent = g_enterprise
   LET l_bmaa.bmaastus = 'N'
   LET l_bmaa.bmaa001 = g_bmbc_m.bmbc001
   LET l_bmaa.bmaa002 = g_bmbc_m.bmbc002
   LET l_bmaa.bmaa003 = NULL
   LET l_bmaa.bmaa004 = l_imae016
   LET l_bmaa.bmaaownid = g_user
   LET l_bmaa.bmaaowndp = g_dept
   LET l_bmaa.bmaacrtid = g_user
   LET l_bmaa.bmaacrtdp = g_dept
   LET l_bmaa.bmaacrtdt = cl_get_current()
   LET l_bmaa.bmaamodid = g_user
   LET l_bmaa.bmaamoddt = cl_get_current()
   LET l_bmaa.bmaacnfid = ""
   LET l_bmaa.bmaacnfdt = ""   
   INSERT INTO bmaa_t VALUES(l_bmaa.*)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_bmbc_m.bmbc001
      LET g_errparam.popup = FALSE
      CALL cl_err()
      RETURN r_success
   END IF

   LET l_sql = " SELECT * FROM eccb_t ",
               "  WHERE eccbent = '",g_enterprise,"' ",
               "    AND eccbsite = '",g_site,"' ",
               "    AND eccbdocno = '",g_eccadocno,"' "
   PREPARE aect801_04_sel_eccb_p FROM l_sql
   DECLARE aect801_04_sel_eccb_c CURSOR FOR aect801_04_sel_eccb_p
   FOREACH aect801_04_sel_eccb_c INTO l_eccb.*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = g_bmbc_m.bmbc001
         LET g_errparam.popup = FALSE
         CALL cl_err()
         RETURN r_success
      END IF
      
      LET l_sql = " INSERT INTO bmba_t(bmbaent,bmbasite,bmba001,bmba002,bmba003,bmba004,bmba005,bmba006,bmba007,bmba008,bmba009,bmba010, ",
                  "                    bmba011,bmba012,bmba013,bmba014,bmba015,bmba016,bmba017,bmba018,bmba019,bmba020,bmba021,bmba022, ",
                  "                    bmba023,bmba024,bmba025,bmba026,bmba027,bmba028,bmba029,bmba030) ",
                  " SELECT '",g_enterprise,"','ALL','",g_bmbc_m.bmbc001,"','",g_bmbc_m.bmbc002,"',eccc005,eccc006,'",l_date,"',",
                  "        '','",l_eccb.eccb004,"','",l_eccb.eccb005,"',eccc004*10,eccc009,eccc007,eccc008,'1','N','','','','N','1','N','",l_imae021,"','N','','','N','','N','',eccc010,'N' ",
                  "   FROM eccc_t ",
                  "  WHERE ecccent = '",g_enterprise,"' ",
                  "    AND ecccsite = '",g_site,"' ",
                  "    AND ecccdocno = '",g_eccadocno,"' ",
                  "    AND eccc003 = '",l_eccb.eccb003,"'"
      PREPARE aect801_04_ins_bmba_pre FROM l_sql
      EXECUTE aect801_04_ins_bmba_pre
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = g_bmbc_m.bmbc001
         LET g_errparam.popup = FALSE
         CALL cl_err()
         RETURN r_success
      END IF
      LET l_sql = " INSERT INTO bmbb_t(bmbbent,bmbbsite,bmbb001,bmbb002,bmbb003,bmbb004,bmbb005,bmbb007,bmbb008, ",
                  "                    bmbb009,bmbb010,bmbb011,bmbb012) ",
                  " SELECT '",g_enterprise,"','ALL','",g_bmbc_m.bmbc001,"','",g_bmbc_m.bmbc002,"',eccc005,eccc006,'",l_date,"',",
                  "        '",l_eccb.eccb004,"','",l_eccb.eccb005,"',eccd005,eccd006,eccd007,eccd008 ",
                  "  FROM eccc_t,eccd_t ",
                  " WHERE ecccent = eccdent ",
                  "   AND ecccsite = eccdsite",
                  "   AND ecccdocno = eccddocno ",
                  "   AND eccc003 = eccd003 ",
                  "   AND eccc004 = eccd004 ",
                  "   AND eccdent = '",g_enterprise,"' ",
                  "   AND eccdsite = '",g_site,"' ",
                  "   AND eccddocno = '",g_eccadocno,"' ",
                  "   AND eccd003 = '",l_eccb.eccb003,"'"
      PREPARE aect801_04_ins_bmbb_pre FROM l_sql
      EXECUTE aect801_04_ins_bmbb_pre
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = g_bmbc_m.bmbc001
         LET g_errparam.popup = FALSE
         CALL cl_err()
         RETURN r_success
      END IF
   END FOREACH
   
   LET r_success = TRUE
   RETURN r_success   
END FUNCTION

PUBLIC FUNCTION aect801_04(--)
   #add-point:main段變數傳入
   p_eccadocno
   #end add-point
   )
   #add-point:main段define
   DEFINE p_eccadocno          LIKE ecca_t.eccadocno
   DEFINE la_param             RECORD
          prog                 STRING,
          param                DYNAMIC ARRAY OF STRING
                               END RECORD
   DEFINE ls_js                STRING
   #end add-point

   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log

   #add-point:作業初始化
 
   #畫面開啟 (identifier)
   OPEN WINDOW w_aect801_04 WITH FORM cl_ap_formpath("aec","aect801_04")

   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   SELECT ecca001,ecca002 INTO g_ecca001,g_ecca002 FROM ecca_t
    WHERE eccaent = g_enterprise AND eccasite = g_site
      AND eccadocno = p_eccadocno
      
   CLEAR FORM
   INITIALIZE g_bmbc_m.* TO NULL
   LET g_eccadocno = p_eccadocno
   LET g_bmbc_m.bmbc001 = g_ecca001
   LET g_bmbc_m.bmbc005 = cl_get_current()
   WHILE TRUE
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #單頭段
      INPUT BY NAME g_bmbc_m.bmbc003,g_bmbc_m.bmbc004,g_bmbc_m.bmbc007,g_bmbc_m.bmbc008,g_bmbc_m.bmbc009,
          g_bmbc_m.bmbcsite,g_bmbc_m.bmbc001,g_bmbc_m.bmbc002,g_bmbc_m.bmbc005
         ATTRIBUTE(WITHOUT DEFAULTS)
      
      BEFORE INPUT
            #add-point:單頭輸入前處理
            LET g_bmbc_m.bmbc001 = g_ecca001
            LET g_bmbc_m.bmbc005 = cl_get_current()      
      
      AFTER FIELD bmbc001
            
            #add-point:AFTER FIELD bmbc001
            #此段落由子樣板a05產生
        #   IF NOT cl_null(g_bmbc_m.bmbc001) AND g_bmbc_m.bmbc002 IS NOT NULL THEN
        #      CALL aect801_04_chk_bmaa()
        #      IF NOT cl_null(g_errno) THEN
        #         INITIALIZE g_errparam TO NULL
        #         LET g_errparam.code = g_errno
        #         LET g_errparam.extend = g_bmbc_m.bmbc001
        #         LET g_errparam.popup = TRUE
        #         CALL cl_err()
        #
        #         LET g_bmbc_m.bmbc001 = g_bmbc001_t
        #         NEXT FIELD bmbc001
        #      END IF
        #   END IF
        #   IF NOT cl_null(g_bmbc_m.bmbc001) THEN
        #      CALL aect801_04_chk_ecca001()
        #      IF NOT cl_null(g_errno) THEN
        #         INITIALIZE g_errparam TO NULL
        #         LET g_errparam.code = g_errno
        #         LET g_errparam.extend = g_bmbc_m.bmbc001
        #         LET g_errparam.popup = TRUE
        #         CALL cl_err()
        #
        #         LET g_bmbc_m.bmbc001 = g_bmbc001_t
        #         NEXT FIELD bmbc001
        #      END IF
        #   END IF
        
        AFTER FIELD bmbc002
            
            #add-point:AFTER FIELD bmbc002
            #此段落由子樣板a05產生
            IF cl_null(g_bmbc_m.bmbc002) THEN
               LET g_bmbc_m.bmbc002 = ' '
            END IF
            IF NOT cl_null(g_bmbc_m.bmbc001) AND g_bmbc_m.bmbc002 IS NOT NULL THEN
               CALL aect801_04_chk_bmaa()
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_bmbc_m.bmbc002
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmbc_m.bmbc002 = g_bmbc002_t
                  NEXT FIELD bmbc002
               END IF
            END IF
            
         ON ACTION controlp INFIELD bmbc001
            #add-point:ON ACTION controlp INFIELD bmbc001
#此段落由子樣板a07產生            
            #開窗i段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmbc_m.bmbc001             #給予default值

            #給予arg

            CALL q_ecca001_1()                                #呼叫開窗

            LET g_bmbc_m.bmbc001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmbc_m.bmbc001 TO bmbc001              #顯示到畫面上

            NEXT FIELD bmbc001                          #返回原欄位
            
      END INPUT
    
      #add-point:自定義input

      #end add-point
    
      #公用action
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:畫面關閉前
   IF NOT INT_FLAG THEN
      IF cl_null(g_bmbc_m.bmbc002) THEN
         LET g_bmbc_m.bmbc002 = ' '
      END IF
      IF NOT cl_null(g_bmbc_m.bmbc001) AND g_bmbc_m.bmbc002 IS NOT NULL THEN
         CALL aect801_04_chk_bmaa()
         IF NOT cl_null(g_errno) THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = g_bmbc_m.bmbc001
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CONTINUE WHILE
         END IF
      END IF
      
      CALL s_transaction_begin()
      IF NOT aect801_04_ins() THEN
         CALL s_transaction_end('N','0')
      ELSE
         CALL s_transaction_end('Y','0')
         LET la_param.prog = "abmm200"
         LET la_param.param[1] = g_bmbc_m.bmbc001
         LET la_param.param[2] = g_bmbc_m.bmbc002
         LET ls_js = util.JSON.stringify(la_param)
         CALL cl_cmdrun(ls_js)
      END IF
   END IF
   
   EXIT WHILE
   END WHILE
   #畫面關閉
   CLOSE WINDOW w_aect801_04

   #add-point:離開前

   #end add-point

END FUNCTION

 
{</section>}
 
