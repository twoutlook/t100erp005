<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="arti201" std_prog="arti201" erpver="1.0" module="ART" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.page1.rtab002" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = 'F'
            CALL q_ooef001_3()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtab002  #顯示到畫面上    
            NEXT FIELD rtab002                     #返回原欄位]]>
  </point>
  <point name="construct.c.rtaa001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtaa001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaa001  #顯示到畫面上
            NEXT FIELD rtaa001                     #返回原欄位]]>
  </point>
  <point name="construct.c.rtaa003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '2'
            CALL q_ooal002_0()                    #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaa003  #顯示到畫面上
            NEXT FIELD rtaa003                     #返回原欄位]]>
  </point>
  <point name="construct.c.rtaa004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaa004  #顯示到畫面上
            NEXT FIELD rtaa004                     #返回原欄位]]>
  </point>
  <point name="construct.c.rtaacrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaacrtdp  #顯示到畫面上

            NEXT FIELD rtaacrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtaacrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaacrtid  #顯示到畫面上

            NEXT FIELD rtaacrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtaamodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaamodid  #顯示到畫面上

            NEXT FIELD rtaamodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtaaowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaaowndp  #顯示到畫面上

            NEXT FIELD rtaaowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtaaownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaaownid  #顯示到畫面上

            NEXT FIELD rtaaownid                     #返回原欄位

]]>
  </point>
  <point name="desc_show.show" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CASE
      WHEN cl_null(g_browser[l_ac].b_pid)
         LET l_desc = ''
         SELECT gzcbl004 INTO l_desc FROM gzcbl_t 
          WHERE gzcbl001 = '2001' 
            AND gzcbl002 = g_browser[l_ac].b_rtaa002
            AND gzcbl003 = g_dlang   
         IF cl_null(l_desc) THEN            
            LET g_browser[l_ac].b_show = g_browser[l_ac].b_rtaa002
            LET SQLCA.sqlcode = 0 
         ELSE
            LET g_browser[l_ac].b_show = g_browser[l_ac].b_rtaa002 CLIPPED,":",l_desc
         END IF
      WHEN cl_null(g_browser[l_ac].b_hasC) 
         LET l_desc = ''
         SELECT ooefl003 INTO l_desc FROM ooefl_t 
          WHERE ooefl001 = g_browser[l_ac].b_rtaa001            
            AND ooefl002 = g_dlang
         IF cl_null(l_desc) THEN
            LET g_browser[l_ac].b_show = g_browser[l_ac].b_rtaa001 CLIPPED,"(",
                                         g_browser[l_ac].b_rtaa001 CLIPPED,")"
            LET SQLCA.sqlcode = 0                                          
         ELSE
            LET g_browser[l_ac].b_show = g_browser[l_ac].b_rtaa001 CLIPPED,"(",l_desc CLIPPED,")"           
         END IF
      OTHERWISE
         LET l_desc = ''
         SELECT rtaal003 INTO l_desc FROM rtaal_t 
          WHERE rtaal001 = g_browser[l_ac].b_rtaa001            
            AND rtaal002 = g_dlang
         IF cl_null(l_desc) THEN
            LET g_browser[l_ac].b_show = g_browser[l_ac].b_rtaa001 CLIPPED,"(",
                                         g_browser[l_ac].b_rtaa001 CLIPPED,")"   
            LET SQLCA.sqlcode = 0                                         
         ELSE
            LET g_browser[l_ac].b_show = g_browser[l_ac].b_rtaa001 CLIPPED,"(",l_desc CLIPPED,")"                          
         END IF
   END CASE 
]]>
  </point>
  <point name="input.a.page1.ooall004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page1.ooef019" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page1.rtab002" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            LET g_rtab_d[l_ac].rtab002_desc = ''
            IF  NOT cl_null(g_rtaa_m.rtaa001) AND NOT cl_null(g_rtab_d[l_ac].rtab002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_rtaa_m.rtaa001 != g_rtaa001_t OR (g_rtab_d[l_ac].rtab002 != g_rtab_d_t.rtab002 OR g_rtab_d_t.rtab002 IS NULL)))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtab_t WHERE "||"rtabent = '" ||g_enterprise|| "' AND "||"rtab001 = '"||g_rtaa_m.rtaa001 ||"' AND "|| "rtab002 = '"||g_rtab_d[l_ac].rtab002 ||"'",'std-00004',0) THEN 
                     LET g_rtab_d[l_ac].rtab002 = g_rtab_d_t.rtab002
                     CALL arti201_rtab002_ref()
                     NEXT FIELD CURRENT
                  END IF
                  CALL arti201_chk_rtab002(g_rtab_d[l_ac].rtab002)
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_rtab_d[l_ac].rtab002,g_errno,1)
                     LET g_rtab_d[l_ac].rtab002 = g_rtab_d_t.rtab002
                     CALL arti201_rtab002_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL arti201_rtab002_ref()]]>
  </point>
  <point name="input.a.rtaa001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_rtaa_m.rtaa001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_rtaa_m.rtaa001 != g_rtaa001_t OR g_rtaa001_t IS NULL))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtaa_t WHERE "||"rtaaent = '" ||g_enterprise|| "' AND "||"rtaa001 = '"||g_rtaa_m.rtaa001 ||"'",'std-00004',0) THEN 
                     LET g_rtaa_m.rtaa001 = g_rtaa001_t
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.rtaa003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtaa_m.rtaa003_desc = ' '
            DISPLAY BY NAME g_rtaa_m.rtaa003_desc
            IF NOT cl_null(g_rtaa_m.rtaa003) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND ( g_rtaa_m.rtaa003 != g_rtaa_m_t.rtaa003 OR g_rtaa_m_t.rtaa003 IS NULL)) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_rtaa_m.rtaa003
                  IF NOT cl_chk_exist("v_ooal002_2") THEN
                     LET g_rtaa_m.rtaa003 = g_rtaa_m_t.rtaa003
                     CALL arti201_rtaa003_ref()
                     NEXT FIELD CURRENT
                  END IF             
               END IF
            END IF
            CALL arti201_rtaa003_ref()]]>
  </point>
  <point name="input.a.rtaa004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL arti201_rtaa004_ref()]]>
  </point>
  <point name="input.c.page1.rtab002" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF l_cmd = 'u' THEN
               #此段落由子樣板a07產生            
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_rtab_d[l_ac].rtab002  #給予default值
               
               #將單頭的稅區編號 當做條件
               IF NOT cl_null(g_rtaa_m.rtaa003) THEN
                  LET g_qryparam.where = "ooef019 = '",g_rtaa_m.rtaa003,"'"
               END IF
               
               IF g_rtaa_m.rtaa002 != '3' THEN                     
                  LET g_qryparam.arg1 = 'F'               
                  CALL q_ooef001_3()                                #呼叫開窗
               ELSE
                  CALL q_ooef001()
               END IF
               
               LET g_rtab_d[l_ac].rtab002 = g_qryparam.return1   #將開窗取得的值回傳到變數
               DISPLAY g_rtab_d[l_ac].rtab002 TO rtab002         #顯示到畫面上
               NEXT FIELD rtab002                                #返回原欄位
            ELSE
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               IF NOT cl_null(g_rtaa_m.rtaa003) THEN
                  LET g_qryparam.where = "ooef019 = '",g_rtaa_m.rtaa003,"'"
               END IF
               IF cl_null(g_qryparam.where) THEN
                  LET g_qryparam.where = "ooefstus = 'Y'"
               ELSE    
                  LET g_qryparam.where = g_qryparam.where CLIPPED,"AND ooefstus = 'Y'"
               END IF
               IF g_rtaa_m.rtaa002 != '3' THEN            
                  LET g_qryparam.arg1 = 'F'
                  CALL q_ooef001_3()                                #呼叫開窗
               ELSE
                  CALL q_ooef001()
               END IF
               LET l_return = g_qryparam.return1                 #將開窗取得的值回傳到變數

               IF NOT cl_null(l_return) THEN
                  LET l_count = 0
                  LET tok = base.StringTokenizer.create(l_return,"|")
                  LET l_detail_cnt = g_rtab_d.getLength()
                  LET l_ac_t = l_ac
                  WHILE tok.hasMoreTokens()
                     LET l_rtab002  = tok.nextToken()
                     LET l_cnt = 0
                     CALL arti201_chk_rtab002(l_rtab002)
                     IF NOT cl_null(g_errno) THEN
                        CONTINUE WHILE
                     END IF
                     LET l_count = l_count + 1                                        
                     IF l_count > 1 THEN
                        LET l_ac = l_detail_cnt + l_count - 1
                        LET g_rtab_d[l_ac].rtab002 = l_rtab002
                        INITIALIZE gs_keys TO NULL 
                        LET gs_keys[1] = g_rtaa_m.rtaa001
                        LET gs_keys[2] = g_rtab_d[l_ac].rtab002
                        CALL arti201_insert_b('rtab_t',gs_keys,"'1'")
                        IF SQLCA.sqlcode THEN
                           CALL g_browser.deleteElement(l_ac)                        
                           LET l_count = l_count - 1 
                        ELSE
                           CALL arti201_rtab002_ref()
                        END IF
                     ELSE
                        LET g_rtab_d[l_ac].rtab002 = l_rtab002
                        DISPLAY BY NAME g_rtab_d[l_ac].rtab002
                        CALL arti201_rtab002_ref()
                     END IF
                     LET l_ac = l_ac_t
                  END WHILE
                  IF l_count = 0 THEN
                     CALL cl_err('',g_errno,1)
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.c.rtaa003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtaa_m.rtaa003      #給予default值
            #給予arg
            LET g_qryparam.arg1 = '2'
            CALL q_ooal002_0()                              #呼叫開窗
            LET g_rtaa_m.rtaa003 = g_qryparam.return1       #將開窗取得的值回傳到變數
            DISPLAY g_rtaa_m.rtaa003 TO rtaa003             #顯示到畫面上
            CALL arti201_rtaa003_ref()
            NEXT FIELD rtaa003                              #返回原欄位]]>
  </point>
  <point name="show.body.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL arti201_rtab002_ref()]]>
  </point>
  <point name="show.head.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtaa_m.rtaa001
   CALL ap_ref_array2(g_ref_fields," SELECT rtaal003,rtaal004 FROM rtaal_t WHERE rtaalent = '"||g_enterprise||"' AND rtaal001 = ? AND rtaal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_rtaa_m.rtaal003 = g_rtn_fields[1] 
   LET g_rtaa_m.rtaal004 = g_rtn_fields[2] 
   DISPLAY g_rtaa_m.rtaal003 TO rtaal003
   DISPLAY g_rtaa_m.rtaal004 TO rtaal004
   
#   INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_rtaa_m.rtaa001
#   CALL ap_ref_array2(g_ref_fields," SELECT rtaal004 FROM rtaal_t WHERE rtaalent = '"||g_enterprise||"' AND rtaal001 = ? AND rtaal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
#   LET g_rtaa_m.rtaal003 = g_rtn_fields[1] 
#   DISPLAY g_rtaa_m.rtaal004 TO rtaal004
   
   CALL arti201_rtaa003_ref()
   CALL arti201_rtaa004_ref()

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtaa_m.rtaaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_rtaa_m.rtaaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtaa_m.rtaaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtaa_m.rtaaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtaa_m.rtaaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtaa_m.rtaaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtaa_m.rtaacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_rtaa_m.rtaacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtaa_m.rtaacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtaa_m.rtaacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtaa_m.rtaacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtaa_m.rtaacrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtaa_m.rtaamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_rtaa_m.rtaamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtaa_m.rtaamodid_desc
]]>
  </point>
  <point name="function.arti201_rtaa004_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PUBLIC FUNCTION arti201_rtaa004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtaa_m.rtaa004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtaa_m.rtaa004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtaa_m.rtaa004_desc
END FUNCTION]]>
  </point>
  <point name="function.arti201_rtaa003_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PUBLIC FUNCTION arti201_rtaa003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtaa_m.rtaa003
   CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001='2' AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtaa_m.rtaa003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtaa_m.rtaa003_desc
END FUNCTION]]>
  </point>
  <point name="function.arti201_rtab002_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PUBLIC FUNCTION arti201_rtab002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtab_d[l_ac].rtab002
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtab_d[l_ac].rtab002_desc = '', g_rtn_fields[1] , ''
#   DISPLAY BY NAME g_rtab_d[l_ac].rtab002_desc

   SELECT ooef019,ooall004 INTO g_rtab_d[l_ac].ooef019,g_rtab_d[l_ac].ooall004
     FROM ooef_t OUTER LEFT JOIN ooall_t ON ooallent = ooefent AND ooall002 = ooef019
                                        AND ooall001 = '2' AND ooall003 = g_dlang
    WHERE ooef001 = g_rtab_d[l_ac].rtab002
      AND ooefent = g_enterprise
END FUNCTION]]>
  </point>
  <point name="function.arti201_chk_rtaa003" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PUBLIC FUNCTION arti201_chk_rtaa003()
   DEFINE l_stus        LIKE type_t.chr1
   
   LET g_errno = '' LET l_stus = ''
   
   SELECT ooalstus INTO l_stus FROM ooal_t
    WHERE ooal001 = '2'
      AND ooal002 = g_rtaa_m.rtaa003
      AND ooalent = g_enterprise

   CASE WHEN SQLCA.SQLCODE = 100   LET g_errno = 'art-00117'
        WHEN l_stus='N'            LET g_errno = 'art-00118'
        OTHERWISE                  LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE

END FUNCTION]]>
  </point>
  <point name="function.arti201_chk_rtab002" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PUBLIC FUNCTION arti201_chk_rtab002(p_rtab002)
   DEFINE p_rtab002     LIKE rtab_t.rtab002
   DEFINE l_cnt         LIKE type_t.num5
   DEFINE l_stus        LIKE type_t.chr1   
   DEFINE l_ooef019     LIKE ooef_t.ooef019
   LET g_errno = ''

   SELECT COUNT(*) INTO l_cnt FROM rtaa_t,rtab_t
    WHERE rtaa001 = rtab001 
      AND rtaa002 = g_rtaa_m.rtaa002
      AND rtab002 = p_rtab002
      AND rtaaent = rtabent 
      AND rtaaent = g_enterprise
   IF l_cnt > 0 THEN
      LET g_errno = 'art-00001'
   END IF
   
   IF NOT cl_null(g_errno) THEN
      RETURN
   END IF
   
   LET l_cnt = 0
   IF g_rtaa_m.rtaa002 != '3' THEN      
      SELECT COUNT(*) INTO l_cnt FROM ooee_t
       WHERE ooee001 = p_rtab002 
         AND ooee002 = '2'
         AND ooee003 = 'F'
         AND ooeeent = g_enterprise
   ELSE
      LET l_cnt = 1
   END IF
   
   LET l_stus = ''
   SELECT ooefstus,ooef019 INTO l_stus,l_ooef019 FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = p_rtab002    
      
   CASE WHEN SQLCA.SQLCODE = 100   LET g_errno = 'art-00062'
        WHEN l_stus='N'            LET g_errno = 'art-00069' 
        WHEN l_cnt <= 0            LET g_errno = 'art-00163'        
        WHEN g_rtaa_m.rtaa002 = '3' AND (cl_null(l_ooef019) OR l_ooef019 != g_rtaa_m.rtaa003)
                                   LET g_errno = 'art-00119'
        OTHERWISE                  LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE   
   
END FUNCTION]]>
  </point>
  <point name="browser_expand.modify_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_sql = " SELECT UNIQUE '','','','FALSE','','','',rtab002,rtaa002",
               " FROM   rtab_t ",
               " LEFT JOIN rtaa_t ON rtab002 = rtaa001 ",
               " WHERE  rtab001 = '", l_keyvalue,"' "

   IF NOT cl_null(g_wc_table1) THEN
      LET l_sql = l_sql CLIPPED, " AND ", g_wc_table1 CLIPPED
   END IF

   LET l_sql = l_sql CLIPPED, " ORDER BY rtab002"]]>
  </point>
  <point name="browser_fill.type" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL arti201_desc_show(g_cnt-1)]]>
  </point>
  <point name="chk_hasC.after_chk" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[    SELECT COUNT(*) INTO li_cnt FROM rtab_t
    LEFT JOIN rtaa_t ON rtab002 = rtaa001
    WHERE rtabent = g_enterprise AND rtab001 = g_browser[pi_id].b_rtaa001]]>
  </point>
  <point name="desc_show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_desc  LIKE type_t.chr100]]>
  </point>
  <point name="detail_reproduce.body.table1.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL s_transaction_end('Y','0')
   RETURN]]>
  </point>
  <point name="detail_reproduce.body.table1.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="fetch.before_fetch" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_cnt = 0 
   SELECT COUNT(*) INTO l_cnt FROM rtaa_t
    WHERE rtaa001 = g_browser[g_current_idx].b_rtaa001
      AND rtaaent = g_enterprise
   IF l_cnt = 0 THEN
      FOR l_i = 1 TO g_browser.getLength()
         IF g_browser[l_i].b_id = g_browser[g_current_idx].b_pid THEN
            LET g_current_idx = l_i
            EXIT FOR
         END IF
      END FOR
   END IF]]>
  </point>
  <point name="fetch.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_cnt      LIKE type_t.num5
   DEFINE l_i        LIKE type_t.num5]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE tok                   base.StringTokenizer  ]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_errshow = '1']]>
  </point>
  <point name="input.a.rtaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtaa_m.rtaa002) THEN
               IF g_rtaa_m.rtaa002 != '3' THEN
                  LET g_rtaa_m.rtaa003 = ''                  
               ELSE
                  LET g_rtaa_m.rtaa003 = g_rtaa_m_t.rtaa003                  
               END IF
               DISPLAY BY NAME g_rtaa_m.rtaa003
               CALL arti201_rtaa003_ref()
            END IF 
            CALL arti201_set_no_entry(p_cmd)]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[ ]]>
  </point>
  <point name="input.b.rtaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL arti201_set_entry(p_cmd)            ]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_return         STRING
   DEFINE l_detail_cnt     LIKE type_t.num5
   DEFINE l_rtab002        LIKE rtab_t.rtab002]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL arti201_set_entry(p_cmd)
            CALL arti201_set_no_entry(p_cmd)]]>
  </point>
  <point name="insert.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
      END IF]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_rtaa_m.rtaa004 =g_site
      CALL arti201_rtaa004_ref()
      IF g_browser_idx > 0 THEN
         IF NOT cl_null(g_browser[g_browser_idx].b_rtaa002) THEN
            LET g_rtaa_m.rtaa002 = g_browser[g_browser_idx].b_rtaa002
         END IF
      END IF
      LET g_rtaa_m_t.* = g_rtaa_m.*]]>
  </point>
  <point name="modify.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
      END IF]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_rtaa_m.rtaa001 = ''
   LET g_rtaa_m.rtaastus = 'Y'
   
   CALL g_rtab_d.clear()
   LET g_rtaa_m_t.* = g_rtaa_m.*   ]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("rtaa002,rtaa003",TRUE)]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_rtaa_m.rtaa002 != '3' THEN
      CALL cl_set_comp_entry("rtaa003",FALSE)
   END IF
   IF NOT cl_null(g_rtaa_m.rtaa001) THEN
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt FROM rtab_t
       WHERE rtab001 = g_rtaa_m.rtaa001
         AND rtabent = g_enterprise
      IF l_cnt > 0 THEN
         CALL cl_set_comp_entry("rtaa002,rtaa003",FALSE)
      END IF
   END IF]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_cnt   LIKE type_t.num5]]>
  </point>
  <section id="arti201.b_fill" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION arti201_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_rtab_d.clear()    #g_rtab_d 單頭及單身 
 
 
   #add-point:b_fill段define
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  UNIQUE rtab002,'','','' FROM rtab_t",    
               " INNER JOIN rtaa_t ON rtaa001 = rtab001 ",
 
               "",
               " WHERE rtabent=? AND rtab001=?"
 
   IF NOT cl_null(g_wc_table1) THEN
      LET g_sql = g_sql CLIPPED, " AND ", g_wc_table1 CLIPPED
   END IF
 
   LET g_sql = g_sql, " ORDER BY  rtab_t.rtab002"
 
   PREPARE arti201_pb FROM g_sql
   DECLARE b_fill_cs CURSOR FOR arti201_pb
 
   LET g_cnt = l_ac
   LET l_ac = 1
 
   OPEN b_fill_cs USING g_enterprise,g_rtaa_m.rtaa001
 
                                            
   FOREACH b_fill_cs INTO g_rtab_d[l_ac].rtab002,g_rtab_d[l_ac].rtab002_desc,g_rtab_d[l_ac].ooef019, 
       g_rtab_d[l_ac].ooall004
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
     
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
 
   
   CALL g_rtab_d.deleteElement(g_rtab_d.getLength())
 
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   CLOSE b_fill_cs
 
   
   FREE arti201_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="arti201.browser_expand" ver="2" status="" src="s">
    <![CDATA[#+ Tree子節點展開
PRIVATE FUNCTION arti201_browser_expand(p_id)
   DEFINE p_id          LIKE type_t.num10
   DEFINE l_id          LIKE type_t.num10
   DEFINE l_cnt         LIKE type_t.num10
   DEFINE l_keyvalue    LIKE type_t.chr50
   DEFINE l_typevalue   LIKE type_t.chr50
   DEFINE l_type        LIKE type_t.chr50
   DEFINE l_sql         LIKE type_t.chr500
   DEFINE ls_source     LIKE type_t.chr500
   DEFINE ls_exp_code   LIKE type_t.chr500
   DEFINE l_return      LIKE type_t.num5
   #add-point:browser_expand段define
   {<point name="browser_expand.define"/>}
   #end add-point
   
   #若已經展開
   IF g_browser[p_id].b_isExp = 1 THEN
      RETURN
   END IF
   
   LET l_keyvalue = g_browser[p_id].b_rtaa001
   LET l_typevalue = g_browser[p_id].b_rtaa002
   
   LET l_sql = " SELECT UNIQUE '','','','FALSE','','','',rtab002,rtaa002",
               " FROM   rtab_t ",
               " INNER JOIN rtaa_t ON rtab002 = rtaa001 ",
               " WHERE  rtab001 = '", l_keyvalue,"' ",
   #            " AND   = '", l_typevalue,"'", 
               " ORDER BY rtab002"
 
   #add-point:browser_expand段sql調整
   {<point name="browser_expand.modify_sql"/>}
   #end add-point
   
   PREPARE tree_expand FROM l_sql
   DECLARE tree_ex_cur CURSOR FOR tree_expand
  
   LET l_id = p_id + 1
   CALL g_browser.insertElement(l_id)
   LET l_cnt = 1
   FOREACH tree_ex_cur INTO g_browser[l_id].*
      #pid=父節點id
      LET g_browser[l_id].b_pid  = g_browser[p_id].b_id
      #id=本身節點id(採流水號遞增)
      LET g_browser[l_id].b_id   = g_browser[p_id].b_id||"."||l_cnt
      #hasC=確認該節點是否有子孫
      #LET g_browser[l_id].b_rtaa001 = g_browser[l_id].b_rtaa001 CLIPPED
      CALL arti201_desc_show(l_id)
      LET g_browser[l_id].b_hasC = arti201_chk_hasC(l_id)
      LET l_id = l_id + 1
      CALL g_browser.insertElement(l_id)
      LET l_cnt = l_cnt + 1
      
      LET l_return = TRUE
   END FOREACH
   
   #刪除空資料
   CALL g_browser.deleteElement(l_id)
   
   CLOSE tree_ex_cur
   FREE tree_expand
   
END FUNCTION
]]>
  </section>
  <section id="arti201.browser_fill" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION arti201_browser_fill()
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   DEFINE l_type            STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_rtaa_m.* TO NULL
   CALL g_rtab_d.clear()        
 
   CALL g_browser.clear()
   
   IF NOT cl_null(g_wc2) AND g_wc2 <> " 1=1" THEN
      LET g_wc = g_wc, " AND ", g_wc2
      LET g_sql = " SELECT UNIQUE rtaa001,rtaa002 FROM rtaa_t ",
                  " INNER JOIN rtab_t ON rtab001 = rtaa001 ",
                  " WHERE rtaaent = '" ||g_enterprise|| "' AND ", g_wc
                   , " AND rtaa002 = ?"
   ELSE 
      LET g_sql = " SELECT UNIQUE rtaa001,rtaa002 FROM rtaa_t ",
                  " WHERE rtaaent = '" ||g_enterprise|| "' AND ", g_wc   
                   , " AND rtaa002 = ?"
   END IF   
   
   LET g_sql = g_sql, #,cl_get_extra_cond('zzuser', 'zzgrup')
                      " ORDER BY rtaa001 "
               
   #add-point:browser填充前
   {<point name="browser_fill.before_browser"/>}
   #end add-point
               
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   IF NOT cl_null(g_wc2) AND g_wc2 <> " 1=1" THEN
      LET g_sql= " SELECT UNIQUE rtaa002 FROM rtaa_t ",
                 " INNER JOIN rtab_t ON rtab001 = rtaa001 ",
                 " WHERE rtaaent = '" ||g_enterprise|| "' AND ", g_wc
   ELSE 
      LET g_sql= " SELECT UNIQUE rtaa002 FROM rtaa_t ",
                 " WHERE rtaaent = '" ||g_enterprise|| "' AND ", g_wc   
   END IF   
   LET g_sql = g_sql, #,cl_get_extra_cond('zzuser', 'zzgrup')
                      " ORDER BY rtaa002 "
   
   #add-point:browser type填充前
   {<point name="browser_fill.before_type"/>}
   #end add-point
   
   PREPARE type_pre FROM g_sql
   DECLARE type_cur CURSOR FOR type_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   LET l_type = "0"
   
   FOREACH type_cur INTO g_browser[g_cnt].b_rtaa002
      LET g_browser[g_cnt].b_show  = '(',g_browser[g_cnt].b_rtaa002,')'
      LET g_browser[g_cnt].b_id    = g_cnt USING "<<<"
      LET g_browser[g_cnt].b_exp   = TRUE
      LET g_browser[g_cnt].b_hasC  = TRUE
      LET g_browser[g_cnt].b_isExp = 1
      LET l_type = g_cnt USING "<<<"
      OPEN browse_cur USING g_browser[g_cnt].b_rtaa002
      LET g_cnt = g_cnt + 1
 
      #add-point:browser_fill段type用
      {<point name="browser_fill.type"/>}
      #end add-point
 
      FOREACH browse_cur INTO g_browser[g_cnt].b_rtaa001,g_browser[g_cnt].b_rtaa002
      
         LET g_browser[g_cnt].b_pid  = l_type
         LET g_browser[g_cnt].b_id   = l_type, '.', g_cnt USING "<<<"
         LET g_browser[g_cnt].b_exp  = FALSE
         LET g_browser[g_cnt].b_hasC = arti201_chk_hasC(g_cnt)
         CALL arti201_desc_show(g_cnt)
      
         IF SQLCA.sqlcode THEN
            CALL cl_err('foreach:',SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference
         {<point name="browser_fill.reference"/>}
         #end add-point
      
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_rec THEN
            EXIT FOREACH
         END IF
      END FOREACH
      
      IF g_cnt > g_max_rec AND g_error_show = 1 THEN
         CALL cl_err( '', 9035, 1 )
      END IF
      LET g_error_show = 0
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   LET g_browser_cnt = g_browser.getLength()
   
   CLOSE browse_cur
   CLOSE type_cur
   FREE browse_pre
   FREE type_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="arti201.browser_search" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION arti201_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY rtaa001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL arti201_browser_fill()
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="arti201.chk_hasC" ver="2" status="" src="s">
    <![CDATA[#+ 確認該節點是否有子節點
PRIVATE FUNCTION arti201_chk_hasC(pi_id)
   DEFINE pi_id    INTEGER
   DEFINE li_cnt   INTEGER
   #add-point:chk_hasC段define
   {<point name="chk_hasC.define"/>}
   #end add-point
   
   LET li_cnt = 0
    
    SELECT COUNT(*) INTO li_cnt FROM rtab_t
    INNER JOIN rtaa_t ON rtab002 = rtaa001
    WHERE rtabent = g_enterprise AND rtab001 = g_browser[pi_id].b_rtaa001
   #  AND  = g_browser[pi_id].b_rtaa002
   
   #add-point:chk_hasC段確認後
   {<point name="chk_hasC.after_chk"/>}
   #end add-point
   
   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="arti201.construct" ver="3" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION arti201_construct()
   DEFINE ls_wc       STRING
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_rtaa_m.* TO NULL
   CALL g_rtab_d.clear()        
 
   
   LET g_current_idx = 1
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON rtaa004,rtaa001,rtaal003,rtaal004,rtaa002,rtaa003,rtaastus,rtaaownid, 
          rtaaowndp,rtaacrtid,rtaacrtdp,rtaacrtdt,rtaamodid,rtaamoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #此段落由子樣板a11產生
         ##----<<rtaaownid>>----
         #ON ACTION controlp INFIELD rtaaownid
         #   CALL q_common('rtaa_t','rtaaownid',TRUE,FALSE,g_rtaa_m.rtaaownid) RETURNING ls_return
         #   DISPLAY ls_return TO rtaaownid
         #   NEXT FIELD rtaaownid  
         #
         ##----<<rtaaowndp>>----
         #ON ACTION controlp INFIELD rtaaowndp
         #   CALL q_common('rtaa_t','rtaaowndp',TRUE,FALSE,g_rtaa_m.rtaaowndp) RETURNING ls_return
         #   DISPLAY ls_return TO rtaaowndp
         #   NEXT FIELD rtaaowndp
         #
         ##----<<rtaacrtid>>----
         #ON ACTION controlp INFIELD rtaacrtid
         #   CALL q_common('rtaa_t','rtaacrtid',TRUE,FALSE,g_rtaa_m.rtaacrtid) RETURNING ls_return
         #   DISPLAY ls_return TO rtaacrtid
         #   NEXT FIELD rtaacrtid
         #
         ##----<<rtaacrtdp>>----
         #ON ACTION controlp INFIELD rtaacrtdp
         #   CALL q_common('rtaa_t','rtaacrtdp',TRUE,FALSE,g_rtaa_m.rtaacrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO rtaacrtdp
         #   NEXT FIELD rtaacrtdp
         #
         ##----<<rtaamodid>>----
         #ON ACTION controlp INFIELD rtaamodid
         #   CALL q_common('rtaa_t','rtaamodid',TRUE,FALSE,g_rtaa_m.rtaamodid) RETURNING ls_return
         #   DISPLAY ls_return TO rtaamodid
         #   NEXT FIELD rtaamodid
         #
         ##----<<rtaacnfid>>----
         ##ON ACTION controlp INFIELD rtaacnfid
         ##   CALL q_common('rtaa_t','rtaacnfid',TRUE,FALSE,g_rtaa_m.rtaacnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO rtaacnfid
         ##   NEXT FIELD rtaacnfid
         #
         ##----<<rtaapstid>>----
         ##ON ACTION controlp INFIELD rtaapstid
         ##   CALL q_common('rtaa_t','rtaapstid',TRUE,FALSE,g_rtaa_m.rtaapstid) RETURNING ls_return
         ##   DISPLAY ls_return TO rtaapstid
         ##   NEXT FIELD rtaapstid
         
         ##----<<rtaacrtdt>>----
         AFTER FIELD rtaacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtaamoddt>>----
         AFTER FIELD rtaamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtaacnfdt>>----
         #AFTER FIELD rtaacnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtaapstdt>>----
         #AFTER FIELD rtaapstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #---------------------------<  Master  >---------------------------
         #----<<rtaa004>>----
         #Ctrlp:construct.c.rtaa004
         ON ACTION controlp INFIELD rtaa004
            #add-point:ON ACTION controlp INFIELD rtaa004
            {<point name="construct.c.rtaa004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtaa004
            #add-point:BEFORE FIELD rtaa004
            {<point name="construct.b.rtaa004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaa004
            
            #add-point:AFTER FIELD rtaa004
            {<point name="construct.a.rtaa004" />}
            #END add-point
            
 
         #----<<rtaa004_desc>>----
         #----<<rtaa001>>----
         #Ctrlp:construct.c.rtaa001
         ON ACTION controlp INFIELD rtaa001
            #add-point:ON ACTION controlp INFIELD rtaa001
            {<point name="construct.c.rtaa001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtaa001
            #add-point:BEFORE FIELD rtaa001
            {<point name="construct.b.rtaa001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaa001
            
            #add-point:AFTER FIELD rtaa001
            {<point name="construct.a.rtaa001" />}
            #END add-point
            
 
         #----<<rtaal003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtaal003
            #add-point:BEFORE FIELD rtaal003
            {<point name="construct.b.rtaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaal003
            
            #add-point:AFTER FIELD rtaal003
            {<point name="construct.a.rtaal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtaal003
         ON ACTION controlp INFIELD rtaal003
            #add-point:ON ACTION controlp INFIELD rtaal003
            {<point name="construct.c.rtaal003" />}
            #END add-point
 
         #----<<rtaal004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtaal004
            #add-point:BEFORE FIELD rtaal004
            {<point name="construct.b.rtaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaal004
            
            #add-point:AFTER FIELD rtaal004
            {<point name="construct.a.rtaal004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtaal004
         ON ACTION controlp INFIELD rtaal004
            #add-point:ON ACTION controlp INFIELD rtaal004
            {<point name="construct.c.rtaal004" />}
            #END add-point
 
         #----<<rtaa002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtaa002
            #add-point:BEFORE FIELD rtaa002
            {<point name="construct.b.rtaa002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaa002
            
            #add-point:AFTER FIELD rtaa002
            {<point name="construct.a.rtaa002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtaa002
         ON ACTION controlp INFIELD rtaa002
            #add-point:ON ACTION controlp INFIELD rtaa002
            {<point name="construct.c.rtaa002" />}
            #END add-point
 
         #----<<rtaa003>>----
         #Ctrlp:construct.c.rtaa003
         ON ACTION controlp INFIELD rtaa003
            #add-point:ON ACTION controlp INFIELD rtaa003
            {<point name="construct.c.rtaa003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtaa003
            #add-point:BEFORE FIELD rtaa003
            {<point name="construct.b.rtaa003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaa003
            
            #add-point:AFTER FIELD rtaa003
            {<point name="construct.a.rtaa003" />}
            #END add-point
            
 
         #----<<rtaa003_desc>>----
         #----<<rtaastus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtaastus
            #add-point:BEFORE FIELD rtaastus
            {<point name="construct.b.rtaastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaastus
            
            #add-point:AFTER FIELD rtaastus
            {<point name="construct.a.rtaastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtaastus
         ON ACTION controlp INFIELD rtaastus
            #add-point:ON ACTION controlp INFIELD rtaastus
            {<point name="construct.c.rtaastus" />}
            #END add-point
 
         #----<<rtaaownid>>----
         #Ctrlp:construct.c.rtaaownid
         ON ACTION controlp INFIELD rtaaownid
            #add-point:ON ACTION controlp INFIELD rtaaownid
            {<point name="construct.c.rtaaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtaaownid
            #add-point:BEFORE FIELD rtaaownid
            {<point name="construct.b.rtaaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaaownid
            
            #add-point:AFTER FIELD rtaaownid
            {<point name="construct.a.rtaaownid" />}
            #END add-point
            
 
         #----<<rtaaownid_desc>>----
         #----<<rtaaowndp>>----
         #Ctrlp:construct.c.rtaaowndp
         ON ACTION controlp INFIELD rtaaowndp
            #add-point:ON ACTION controlp INFIELD rtaaowndp
            {<point name="construct.c.rtaaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtaaowndp
            #add-point:BEFORE FIELD rtaaowndp
            {<point name="construct.b.rtaaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaaowndp
            
            #add-point:AFTER FIELD rtaaowndp
            {<point name="construct.a.rtaaowndp" />}
            #END add-point
            
 
         #----<<rtaaowndp_desc>>----
         #----<<rtaacrtid>>----
         #Ctrlp:construct.c.rtaacrtid
         ON ACTION controlp INFIELD rtaacrtid
            #add-point:ON ACTION controlp INFIELD rtaacrtid
            {<point name="construct.c.rtaacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtaacrtid
            #add-point:BEFORE FIELD rtaacrtid
            {<point name="construct.b.rtaacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaacrtid
            
            #add-point:AFTER FIELD rtaacrtid
            {<point name="construct.a.rtaacrtid" />}
            #END add-point
            
 
         #----<<rtaacrtid_desc>>----
         #----<<rtaacrtdp>>----
         #Ctrlp:construct.c.rtaacrtdp
         ON ACTION controlp INFIELD rtaacrtdp
            #add-point:ON ACTION controlp INFIELD rtaacrtdp
            {<point name="construct.c.rtaacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtaacrtdp
            #add-point:BEFORE FIELD rtaacrtdp
            {<point name="construct.b.rtaacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaacrtdp
            
            #add-point:AFTER FIELD rtaacrtdp
            {<point name="construct.a.rtaacrtdp" />}
            #END add-point
            
 
         #----<<rtaacrtdp_desc>>----
         #----<<rtaacrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtaacrtdt
            #add-point:BEFORE FIELD rtaacrtdt
            {<point name="construct.b.rtaacrtdt" />}
            #END add-point
 
         #----<<rtaamodid>>----
         #Ctrlp:construct.c.rtaamodid
         ON ACTION controlp INFIELD rtaamodid
            #add-point:ON ACTION controlp INFIELD rtaamodid
            {<point name="construct.c.rtaamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtaamodid
            #add-point:BEFORE FIELD rtaamodid
            {<point name="construct.b.rtaamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaamodid
            
            #add-point:AFTER FIELD rtaamodid
            {<point name="construct.a.rtaamodid" />}
            #END add-point
            
 
         #----<<rtaamodid_desc>>----
         #----<<rtaamoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtaamoddt
            #add-point:BEFORE FIELD rtaamoddt
            {<point name="construct.b.rtaamoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table1 ON rtab002,ooef019,ooall004
           FROM s_detail1[1].rtab002,s_detail1[1].ooef019,s_detail1[1].ooall004
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #---------------------<  Detail: page1  >---------------------
         #----<<rtab002>>----
         #Ctrlp:construct.c.page1.rtab002
         ON ACTION controlp INFIELD rtab002
            #add-point:ON ACTION controlp INFIELD rtab002
            {<point name="construct.c.page1.rtab002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtab002
            #add-point:BEFORE FIELD rtab002
            {<point name="construct.b.page1.rtab002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtab002
            
            #add-point:AFTER FIELD rtab002
            {<point name="construct.a.page1.rtab002" />}
            #END add-point
            
 
         #----<<rtab002_desc>>----
         #----<<ooef019>>----
         #此段落由子樣板a01產生
         BEFORE FIELD ooef019
            #add-point:BEFORE FIELD ooef019
            {<point name="construct.b.page1.ooef019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ooef019
            
            #add-point:AFTER FIELD ooef019
            {<point name="construct.a.page1.ooef019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ooef019
         ON ACTION controlp INFIELD ooef019
            #add-point:ON ACTION controlp INFIELD ooef019
            {<point name="construct.c.page1.ooef019" />}
            #END add-point
 
         #----<<ooall004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD ooall004
            #add-point:BEFORE FIELD ooall004
            {<point name="construct.b.page1.ooall004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ooall004
            
            #add-point:AFTER FIELD ooall004
            {<point name="construct.a.page1.ooall004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.ooall004
         ON ACTION controlp INFIELD ooall004
            #add-point:ON ACTION controlp INFIELD ooall004
            {<point name="construct.c.page1.ooall004" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list('m') RETURNING ls_wc
 
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc_table1
 
 
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="arti201.default_search" ver="2" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION arti201_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
 
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   LET g_wc = " 1=1"
   
   RETURN
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " rtaa001 = '", g_argv[1], "' AND "
   END IF
 
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="arti201.delete" ver="5" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION arti201_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_rtaa_m.rtaa001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE arti201_master_referesh USING g_rtaa_m.rtaa001 INTO g_rtaa_m.rtaa004,g_rtaa_m.rtaa001,g_rtaa_m.rtaa002, 
       g_rtaa_m.rtaa003,g_rtaa_m.rtaastus,g_rtaa_m.rtaaownid,g_rtaa_m.rtaaowndp,g_rtaa_m.rtaacrtid,g_rtaa_m.rtaacrtdp, 
       g_rtaa_m.rtaacrtdt,g_rtaa_m.rtaamodid,g_rtaa_m.rtaamoddt
   
   CALL arti201_show()
   
   CALL s_transaction_begin()
   
   LET g_master_multi_table_t.rtaal001 = g_rtaa_m.rtaa001
LET g_master_multi_table_t.rtaal003 = g_rtaa_m.rtaal003
LET g_master_multi_table_t.rtaal004 = g_rtaa_m.rtaal004
 
 
   OPEN arti201_cl USING g_enterprise,g_rtaa_m.rtaa001
 
   IF STATUS THEN
      CALL cl_err("OPEN arti201_cl:", STATUS, 1)
      CLOSE arti201_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH arti201_cl INTO g_rtaa_m.rtaa004,g_rtaa_m.rtaa004_desc,g_rtaa_m.rtaa001,g_rtaa_m.rtaal003,g_rtaa_m.rtaal004, 
       g_rtaa_m.rtaa002,g_rtaa_m.rtaa003,g_rtaa_m.rtaa003_desc,g_rtaa_m.rtaastus,g_rtaa_m.rtaaownid, 
       g_rtaa_m.rtaaownid_desc,g_rtaa_m.rtaaowndp,g_rtaa_m.rtaaowndp_desc,g_rtaa_m.rtaacrtid,g_rtaa_m.rtaacrtid_desc, 
       g_rtaa_m.rtaacrtdp,g_rtaa_m.rtaacrtdp_desc,g_rtaa_m.rtaacrtdt,g_rtaa_m.rtaamodid,g_rtaa_m.rtaamodid_desc, 
       g_rtaa_m.rtaamoddt              #鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_rtaa_m.rtaa001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下 
      
      #資料備份
      LET g_rtaa001_t = g_rtaa_m.rtaa001
 
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL arti201_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
      
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM rtaa_t
       WHERE rtaaent = g_enterprise AND rtaa001 = g_rtaa_m.rtaa001
 
      
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_rtaa_m.rtaa001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.rtaal001
   LET l_field_keys[01] = 'rtaal001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'rtaal002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'rtaal_t')
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM rtab_t
       WHERE rtabent = g_enterprise AND rtab001 = g_rtaa_m.rtaa001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("rtab_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF       
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
                                                               
 
                                                               
      CLEAR FORM
      CALL g_rtab_d.clear() 
 
     
      CALL arti201_ui_browser_refresh()  
      CALL arti201_ui_headershow()  
      CALL arti201_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL arti201_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         CALL arti201_browser_fill()
      END IF
       
   END IF
 
   CLOSE arti201_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_rtaa_m.rtaa001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="arti201.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION arti201_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_page     STRING
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "rtab_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point   
      DELETE FROM rtab_t
       WHERE rtabent = g_enterprise AND
         rtab001 = ps_keys_bak[1] AND rtab002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point   
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="arti201.desc_show" ver="2" status="" src="s">
    <![CDATA[#+ 組合顯示在畫面上的資訊
PRIVATE FUNCTION arti201_desc_show(pi_ac)
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE li_tmp  LIKE type_t.num5
   #add-point:desc_show段define
   {<point name="desc_show.define"/>}
   #end add-point
   
   LET li_tmp = l_ac
   LET l_ac = pi_ac
   
   
   #add-point:browser_create段desc處理
   {<point name="desc_show.show"/>} 
   #end add-point
 
   LET l_ac = li_tmp
   
END FUNCTION
]]>
  </section>
  <section id="arti201.description" ver="12" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000190
#+ 
#+ Filename...: arti201
#+ Description: 店群資料維護作業
#+ Creator....: 01752(2013/10/23)
#+ Modifier...: 01752(2013/10/24)
#+ Buildtype..: 應用 i04 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="arti201.detail_reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION arti201_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE rtab_t.*
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE arti201_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE arti201_detail AS ",
                "SELECT * FROM rtab_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO arti201_detail SELECT * FROM rtab_t 
                                         WHERE rtabent = g_enterprise AND rtab001 = g_rtaa001_t
 
   
   #將key修正為調整後   
   UPDATE arti201_detail 
      #更新key欄位
      SET rtab001 = g_rtaa_m.rtaa001
 
      #更新共用欄位
      
                                       
   #將資料塞回原table   
   INSERT INTO rtab_t SELECT * FROM arti201_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE arti201_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_rtaa001_t = g_rtaa_m.rtaa001
 
   
   DROP TABLE arti201_detail
   
END FUNCTION
]]>
  </section>
  <section id="arti201.fetch" ver="3" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION arti201_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   DEFINE ls_chk     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point  
 
   #add-point:fetch段fetch前
   {<point name="fetch.before_fetch"/>}
   #end add-point  
   
   DISPLAY g_current_idx TO FORMONLY.h_count   
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   LET ls_chk = g_browser[g_current_idx].b_id 
   IF ls_chk.getIndexOf('.',1) = 0 THEN
      INITIALIZE g_rtaa_m.* TO NULL
      INITIALIZE g_rtab_d TO NULL
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
      DISPLAY '' TO FORMONLY.b_index
      DISPLAY '' TO FORMONLY.h_index
      RETURN
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
 
   #CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_rtaa_m.rtaa001 = g_browser[g_current_idx].b_rtaa001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE arti201_master_referesh USING g_rtaa_m.rtaa001 INTO g_rtaa_m.rtaa004,g_rtaa_m.rtaa001,g_rtaa_m.rtaa002, 
       g_rtaa_m.rtaa003,g_rtaa_m.rtaastus,g_rtaa_m.rtaaownid,g_rtaa_m.rtaaowndp,g_rtaa_m.rtaacrtid,g_rtaa_m.rtaacrtdp, 
       g_rtaa_m.rtaacrtdt,g_rtaa_m.rtaamodid,g_rtaa_m.rtaamoddt
   IF SQLCA.sqlcode THEN
      CALL cl_err("rtaa_t",SQLCA.sqlcode,1)
      INITIALIZE g_rtaa_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #重新顯示   
   CALL arti201_show()
 
END FUNCTION
]]>
  </section>
  <section id="arti201.global" ver="3" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_rtaa_m        RECORD
       rtaa004 LIKE rtaa_t.rtaa004, 
   rtaa004_desc LIKE type_t.chr80, 
   rtaa001 LIKE rtaa_t.rtaa001, 
   rtaal003 LIKE rtaal_t.rtaal003, 
   rtaal004 LIKE rtaal_t.rtaal004, 
   rtaa002 LIKE rtaa_t.rtaa002, 
   rtaa003 LIKE rtaa_t.rtaa003, 
   rtaa003_desc LIKE type_t.chr80, 
   rtaastus LIKE rtaa_t.rtaastus, 
   rtaaownid LIKE rtaa_t.rtaaownid, 
   rtaaownid_desc LIKE type_t.chr80, 
   rtaaowndp LIKE rtaa_t.rtaaowndp, 
   rtaaowndp_desc LIKE type_t.chr80, 
   rtaacrtid LIKE rtaa_t.rtaacrtid, 
   rtaacrtid_desc LIKE type_t.chr80, 
   rtaacrtdp LIKE rtaa_t.rtaacrtdp, 
   rtaacrtdp_desc LIKE type_t.chr80, 
   rtaacrtdt DATETIME YEAR TO SECOND, 
   rtaamodid LIKE rtaa_t.rtaamodid, 
   rtaamodid_desc LIKE type_t.chr80, 
   rtaamoddt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_rtab_d        RECORD
       rtab002 LIKE rtab_t.rtab002, 
   rtab002_desc LIKE type_t.chr500, 
   ooef019 LIKE type_t.chr80, 
   ooall004 LIKE type_t.chr80
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_rtaa_m          type_g_rtaa_m
DEFINE g_rtaa_m_t        type_g_rtaa_m
 
   DEFINE g_rtaa001_t LIKE rtaa_t.rtaa001
 
 
DEFINE g_rtab_d          DYNAMIC ARRAY OF type_g_rtab_d
DEFINE g_rtab_d_t        type_g_rtab_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       #外顯欄位
       b_show          LIKE type_t.chr100,
       #父節點id
       b_pid           LIKE type_t.chr100,
       #本身節點id
       b_id            LIKE type_t.chr100,
       #是否展開
       b_exp           LIKE type_t.chr100,
       #是否有子節點
       b_hasC          LIKE type_t.num5,
       #是否已展開
       b_isExp         LIKE type_t.num5,
       #展開值
       b_expcode       LIKE type_t.num5,
       #tree自定義欄位
          b_rtaa001 LIKE rtaa_t.rtaa001,
      b_rtaa002 LIKE rtaa_t.rtaa002
       END RECORD
      
DEFINE g_master_multi_table_t    RECORD
      rtaal001 LIKE rtaal_t.rtaal001,
      rtaal003 LIKE rtaal_t.rtaal003,
      rtaal004 LIKE rtaal_t.rtaal004
      END RECORD
#無單身append欄位定義
 
DEFINE g_wc                  STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_row_index           LIKE type_t.num5     
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_aw                  STRING                        #確定當下點擊的單身
 
DEFINE g_wc_table1           STRING                        #第1個單身table所使用的g_wc
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="arti201.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION arti201_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_rtab_d.getLength() THEN
         LET g_detail_idx = g_rtab_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtab_d.getLength() <> 0 THEN
         #LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtab_d.getLength() TO FORMONLY.cnt
   END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="arti201.init" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION arti201_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill = "Y"
   
      CALL cl_set_combo_scc_part('rtaastus','17','N,Y')
 
      CALL cl_set_combo_scc('rtaa002','2001') 
 
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL arti201_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="arti201.input" ver="2" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION arti201_input(p_cmd)
   DEFINE  p_cmd           LIKE type_t.chr1
   DEFINE  l_cmd_t         LIKE type_t.chr1
   DEFINE  l_cmd           LIKE type_t.chr1
   DEFINE  l_ac_t          LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n             LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt           LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw       LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert  LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete  LIKE type_t.num5                #可刪除否  
   DEFINE  l_count         LIKE type_t.num5
   DEFINE  l_i             LIKE type_t.num5
   DEFINE  l_insert        BOOLEAN
   DEFINE  ls_return       STRING
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point    
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT rtab002,'','','' FROM rtab_t WHERE rtabent=? AND rtab001=? AND rtab002=?  
       FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE arti201_bcl CURSOR FROM g_forupd_sql
   
 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   LET lb_reproduce = FALSE
   
   #控制key欄位可否輸入
   CALL arti201_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL arti201_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
   
   DISPLAY BY NAME g_rtaa_m.rtaa004,g_rtaa_m.rtaa001,g_rtaa_m.rtaal003,g_rtaa_m.rtaal004,g_rtaa_m.rtaa002, 
       g_rtaa_m.rtaa003,g_rtaa_m.rtaastus
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="arti201.input.body" ver="5" status="" src="s">
    <![CDATA[      #Page1 預設值產生於此處
      INPUT ARRAY g_rtab_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtab_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL arti201_b_fill()
            LET g_rec_b = g_rtab_d.getLength()
            CALL FGL_SET_ARR_CURR(g_detail_idx)
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
 
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN arti201_cl USING g_enterprise,g_rtaa_m.rtaa001
 
            IF STATUS THEN
               CALL cl_err("OPEN arti201_cl:", STATUS, 1)
               CLOSE arti201_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
                   
            #FETCH arti201_cl INTO g_rtaa_m.rtaa004,g_rtaa_m.rtaa004_desc,g_rtaa_m.rtaa001,g_rtaa_m.rtaal003, 
            #    g_rtaa_m.rtaal004,g_rtaa_m.rtaa002,g_rtaa_m.rtaa003,g_rtaa_m.rtaa003_desc,g_rtaa_m.rtaastus, 
            #    g_rtaa_m.rtaaownid,g_rtaa_m.rtaaownid_desc,g_rtaa_m.rtaaowndp,g_rtaa_m.rtaaowndp_desc, 
            #    g_rtaa_m.rtaacrtid,g_rtaa_m.rtaacrtid_desc,g_rtaa_m.rtaacrtdp,g_rtaa_m.rtaacrtdp_desc, 
            #    g_rtaa_m.rtaacrtdt,g_rtaa_m.rtaamodid,g_rtaa_m.rtaamodid_desc,g_rtaa_m.rtaamoddt #鎖住將被更改或取消的資料 

            #IF SQLCA.sqlcode THEN
            #   CALL cl_err(g_rtaa_m.rtaa001,SQLCA.sqlcode,0)
            #   CLOSE arti201_cl
            #   CALL s_transaction_end('N','0')
            #   RETURN
            #END IF
            
            LET g_rec_b = g_rtab_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtab_d[l_ac].rtab002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_rtab_d_t.* = g_rtab_d[l_ac].*  #BACKUP
               CALL arti201_set_entry_b(l_cmd)
               CALL arti201_set_no_entry_b(l_cmd)
               IF NOT arti201_lock_b("rtab_t",'1') THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH arti201_bcl INTO g_rtab_d[l_ac].rtab002,g_rtab_d[l_ac].rtab002_desc,g_rtab_d[l_ac].ooef019, 
                      g_rtab_d[l_ac].ooall004
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_rtab_d_t.rtab002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL arti201_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtab_d[l_ac].* TO NULL 
            
            LET g_rtab_d_t.* = g_rtab_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL arti201_set_entry_b(l_cmd)
            CALL arti201_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtab_d[li_reproduce_target].* = g_rtab_d[li_reproduce].*
 
               LET g_rtab_d[g_rtab_d.getLength()].rtab002 = NULL
 
            END IF
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM rtab_t 
             WHERE rtabent = g_enterprise AND rtab001 = g_rtaa_m.rtaa001
 
               AND g_rtab_d[l_ac].rtab002 = rtab002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtaa_m.rtaa001
               LET gs_keys[2] = g_rtab_d[g_detail_idx].rtab002
               CALL arti201_insert_b('rtab_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_rtab_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("rtab_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL arti201_b_fill()
               #資料多語言用-增/改
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_rtab_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_rtab_d.deleteElement(l_ac)
               NEXT FIELD rtab002
            END IF
            IF g_rtab_d[l_ac].rtab002 IS NOT NULL
 
               THEN     
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point  
               
               DELETE FROM rtab_t
                WHERE rtabent = g_enterprise AND rtab001 = g_rtaa_m.rtaa001 AND
 
                      rtab002 = g_rtab_d_t.rtab002
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("rtab_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE arti201_bcl
               LET l_count = g_rtab_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtaa_m.rtaa001
               LET gs_keys[2] = g_rtab_d[g_detail_idx].rtab002
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL arti201_delete_b('rtab_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<rtab002>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtab002
            
            #add-point:AFTER FIELD rtab002
            {<point name="input.a.page1.rtab002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtab002
            #add-point:BEFORE FIELD rtab002
            {<point name="input.b.page1.rtab002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtab002
            #add-point:ON CHANGE rtab002
            {<point name="input.g.page1.rtab002" />}
            #END add-point
 
         #----<<rtab002_desc>>----
         #----<<ooef019>>----
         #此段落由子樣板a01產生
         BEFORE FIELD ooef019
            #add-point:BEFORE FIELD ooef019
            {<point name="input.b.page1.ooef019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ooef019
            
            #add-point:AFTER FIELD ooef019
            {<point name="input.a.page1.ooef019" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ooef019
            #add-point:ON CHANGE ooef019
            {<point name="input.g.page1.ooef019" />}
            #END add-point
 
         #----<<ooall004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD ooall004
            #add-point:BEFORE FIELD ooall004
            {<point name="input.b.page1.ooall004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ooall004
            
            #add-point:AFTER FIELD ooall004
            {<point name="input.a.page1.ooall004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ooall004
            #add-point:ON CHANGE ooall004
            {<point name="input.g.page1.ooall004" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<rtab002>>----
         #Ctrlp:input.c.page1.rtab002
         ON ACTION controlp INFIELD rtab002
            #add-point:ON ACTION controlp INFIELD rtab002
            {<point name="input.c.page1.rtab002" />}
            #END add-point
 
         #----<<rtab002_desc>>----
         #----<<ooef019>>----
         #Ctrlp:input.c.page1.ooef019
         ON ACTION controlp INFIELD ooef019
            #add-point:ON ACTION controlp INFIELD ooef019
            {<point name="input.c.page1.ooef019" />}
            #END add-point
 
         #----<<ooall004>>----
         #Ctrlp:input.c.page1.ooall004
         ON ACTION controlp INFIELD ooall004
            #add-point:ON ACTION controlp INFIELD ooall004
            {<point name="input.c.page1.ooall004" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_rtab_d[l_ac].* = g_rtab_d_t.*
               CLOSE arti201_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_rtab_d[l_ac].rtab002,-263,1)
               LET g_rtab_d[l_ac].* = g_rtab_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
      
               UPDATE rtab_t SET (rtab001,rtab002) = (g_rtaa_m.rtaa001,g_rtab_d[l_ac].rtab002)
                WHERE rtabent = g_enterprise AND rtab001 = g_rtaa_m.rtaa001 
 
                  AND rtab002 = g_rtab_d_t.rtab002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("rtab_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("rtab_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtaa_m.rtaa001
               LET gs_keys_bak[1] = g_rtaa001_t
               LET gs_keys[2] = g_rtab_d[g_detail_idx].rtab002
               LET gs_keys_bak[2] = g_rtab_d_t.rtab002
               CALL arti201_update_b('rtab_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL arti201_unlock_b("rtab_t",'1')
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
            
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point   
              
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_rtab_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_rtab_d.getLength()+1
              
      END INPUT
      
 
      
 
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD rtaa001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD rtab002
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
   
   CLOSE arti201_bcl
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="arti201.input.head" ver="3" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_rtaa_m.rtaa004,g_rtaa_m.rtaa001,g_rtaa_m.rtaal003,g_rtaa_m.rtaal004,g_rtaa_m.rtaa002, 
          g_rtaa_m.rtaa003,g_rtaa_m.rtaastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.rtaal001 = g_rtaa_m.rtaa001
LET g_master_multi_table_t.rtaal003 = g_rtaa_m.rtaal003
LET g_master_multi_table_t.rtaal004 = g_rtaa_m.rtaal004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.rtaal001 = ''
LET g_master_multi_table_t.rtaal003 = ''
LET g_master_multi_table_t.rtaal004 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            
         #---------------------------<  Master  >---------------------------
         #----<<rtaa004>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtaa004
            
            #add-point:AFTER FIELD rtaa004
            {<point name="input.a.rtaa004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtaa004
            #add-point:BEFORE FIELD rtaa004
            {<point name="input.b.rtaa004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtaa004
            #add-point:ON CHANGE rtaa004
            {<point name="input.g.rtaa004" />}
            #END add-point
 
         #----<<rtaa004_desc>>----
         #----<<rtaa001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtaa001
            #add-point:BEFORE FIELD rtaa001
            {<point name="input.b.rtaa001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaa001
            
            #add-point:AFTER FIELD rtaa001
            {<point name="input.a.rtaa001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtaa001
            #add-point:ON CHANGE rtaa001
            {<point name="input.g.rtaa001" />}
            #END add-point
 
         #----<<rtaal003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtaal003
            #add-point:BEFORE FIELD rtaal003
            {<point name="input.b.rtaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaal003
            
            #add-point:AFTER FIELD rtaal003
            {<point name="input.a.rtaal003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtaal003
            #add-point:ON CHANGE rtaal003
            {<point name="input.g.rtaal003" />}
            #END add-point
 
         #----<<rtaal004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtaal004
            #add-point:BEFORE FIELD rtaal004
            {<point name="input.b.rtaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaal004
            
            #add-point:AFTER FIELD rtaal004
            {<point name="input.a.rtaal004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtaal004
            #add-point:ON CHANGE rtaal004
            {<point name="input.g.rtaal004" />}
            #END add-point
 
         #----<<rtaa002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtaa002
            #add-point:BEFORE FIELD rtaa002
            {<point name="input.b.rtaa002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaa002
            
            #add-point:AFTER FIELD rtaa002
            {<point name="input.a.rtaa002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtaa002
            #add-point:ON CHANGE rtaa002
            {<point name="input.g.rtaa002" />}
            #END add-point
 
         #----<<rtaa003>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtaa003
            
            #add-point:AFTER FIELD rtaa003
            {<point name="input.a.rtaa003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtaa003
            #add-point:BEFORE FIELD rtaa003
            {<point name="input.b.rtaa003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtaa003
            #add-point:ON CHANGE rtaa003
            {<point name="input.g.rtaa003" />}
            #END add-point
 
         #----<<rtaa003_desc>>----
         #----<<rtaastus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtaastus
            #add-point:BEFORE FIELD rtaastus
            {<point name="input.b.rtaastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtaastus
            
            #add-point:AFTER FIELD rtaastus
            {<point name="input.a.rtaastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtaastus
            #add-point:ON CHANGE rtaastus
            {<point name="input.g.rtaastus" />}
            #END add-point
 
         #----<<rtaaownid>>----
         #----<<rtaaownid_desc>>----
         #----<<rtaaowndp>>----
         #----<<rtaaowndp_desc>>----
         #----<<rtaacrtid>>----
         #----<<rtaacrtid_desc>>----
         #----<<rtaacrtdp>>----
         #----<<rtaacrtdp_desc>>----
         #----<<rtaacrtdt>>----
         #----<<rtaamodid>>----
         #----<<rtaamodid_desc>>----
         #----<<rtaamoddt>>----
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<rtaa004>>----
         #Ctrlp:input.c.rtaa004
         ON ACTION controlp INFIELD rtaa004
            #add-point:ON ACTION controlp INFIELD rtaa004
            {<point name="input.c.rtaa004" />}
            #END add-point
 
         #----<<rtaa004_desc>>----
         #----<<rtaa001>>----
         #Ctrlp:input.c.rtaa001
         ON ACTION controlp INFIELD rtaa001
            #add-point:ON ACTION controlp INFIELD rtaa001
            {<point name="input.c.rtaa001" />}
            #END add-point
 
         #----<<rtaal003>>----
         #Ctrlp:input.c.rtaal003
         ON ACTION controlp INFIELD rtaal003
            #add-point:ON ACTION controlp INFIELD rtaal003
            {<point name="input.c.rtaal003" />}
            #END add-point
 
         #----<<rtaal004>>----
         #Ctrlp:input.c.rtaal004
         ON ACTION controlp INFIELD rtaal004
            #add-point:ON ACTION controlp INFIELD rtaal004
            {<point name="input.c.rtaal004" />}
            #END add-point
 
         #----<<rtaa002>>----
         #Ctrlp:input.c.rtaa002
         ON ACTION controlp INFIELD rtaa002
            #add-point:ON ACTION controlp INFIELD rtaa002
            {<point name="input.c.rtaa002" />}
            #END add-point
 
         #----<<rtaa003>>----
         #Ctrlp:input.c.rtaa003
         ON ACTION controlp INFIELD rtaa003
            #add-point:ON ACTION controlp INFIELD rtaa003
            {<point name="input.c.rtaa003" />}
            #END add-point
 
         #----<<rtaa003_desc>>----
         #----<<rtaastus>>----
         #Ctrlp:input.c.rtaastus
         ON ACTION controlp INFIELD rtaastus
            #add-point:ON ACTION controlp INFIELD rtaastus
            {<point name="input.c.rtaastus" />}
            #END add-point
 
         #----<<rtaaownid>>----
         #----<<rtaaownid_desc>>----
         #----<<rtaaowndp>>----
         #----<<rtaaowndp_desc>>----
         #----<<rtaacrtid>>----
         #----<<rtaacrtid_desc>>----
         #----<<rtaacrtdp>>----
         #----<<rtaacrtdp_desc>>----
         #----<<rtaacrtdt>>----
         #----<<rtaamodid>>----
         #----<<rtaamodid_desc>>----
         #----<<rtaamoddt>>----
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
                
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_rtaa_m.rtaa001             
 
 
            IF p_cmd <> 'u' THEN
               LET l_count = 1  
               
               SELECT COUNT(*) INTO l_count FROM rtaa_t
                WHERE rtaaent = g_enterprise AND rtaa001 = g_rtaa_m.rtaa001
 
               IF l_count = 0 THEN
                  
                  #add-point:單頭新增前
                  {<point name="input.head.b_insert" mark="Y"/>}
                  #end add-point
                  
                  INSERT INTO rtaa_t (rtaaent,rtaa004,rtaa001,rtaa002,rtaa003,rtaastus,rtaaownid,rtaaowndp, 
                      rtaacrtid,rtaacrtdp,rtaacrtdt,rtaamodid,rtaamoddt)
                  VALUES (g_enterprise,g_rtaa_m.rtaa004,g_rtaa_m.rtaa001,g_rtaa_m.rtaa002,g_rtaa_m.rtaa003, 
                      g_rtaa_m.rtaastus,g_rtaa_m.rtaaownid,g_rtaa_m.rtaaowndp,g_rtaa_m.rtaacrtid,g_rtaa_m.rtaacrtdp, 
                      g_rtaa_m.rtaacrtdt,g_rtaa_m.rtaamodid,g_rtaa_m.rtaamoddt) 
                  #add-point:單頭新增中
                  {<point name="input.head.m_insert"/>}
                  #end add-point
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("g_rtaa_m",SQLCA.sqlcode,1)  
                     CONTINUE DIALOG
                  END IF
                  
                           INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_rtaa_m.rtaa001 = g_master_multi_table_t.rtaal001 AND
         g_rtaa_m.rtaal003 = g_master_multi_table_t.rtaal003 AND 
         g_rtaa_m.rtaal004 = g_master_multi_table_t.rtaal004  THEN
         ELSE 
            LET l_var_keys[01] = g_rtaa_m.rtaa001
            LET l_field_keys[01] = 'rtaal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.rtaal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'rtaal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_rtaa_m.rtaal003
            LET l_fields[01] = 'rtaal003'
            LET l_vars[02] = g_rtaa_m.rtaal004
            LET l_fields[02] = 'rtaal004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'rtaalent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'rtaal_t')
         END IF 
 
                  #add-point:單頭新增後
                  {<point name="input.head.a_insert"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
                  
                  IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                     CALL arti201_detail_reproduce()
                  END IF
                  
                  LET p_cmd = 'u'
 
               ELSE
                  CALL cl_err( g_rtaa_m.rtaa001,'!', 0 )
                  CALL s_transaction_end('N','0')
                  NEXT FIELD rtaa001
               END IF 
            ELSE
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE rtaa_t SET (rtaa004,rtaa001,rtaa002,rtaa003,rtaastus,rtaaownid,rtaaowndp,rtaacrtid, 
                   rtaacrtdp,rtaacrtdt,rtaamodid,rtaamoddt) = (g_rtaa_m.rtaa004,g_rtaa_m.rtaa001,g_rtaa_m.rtaa002, 
                   g_rtaa_m.rtaa003,g_rtaa_m.rtaastus,g_rtaa_m.rtaaownid,g_rtaa_m.rtaaowndp,g_rtaa_m.rtaacrtid, 
                   g_rtaa_m.rtaacrtdp,g_rtaa_m.rtaacrtdt,g_rtaa_m.rtaamodid,g_rtaa_m.rtaamoddt)
                WHERE rtaaent = g_enterprise AND rtaa001 = g_rtaa001_t
 
                  
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("rtaa_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("rtaa_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_rtaa_m.rtaa001 = g_master_multi_table_t.rtaal001 AND
         g_rtaa_m.rtaal003 = g_master_multi_table_t.rtaal003 AND 
         g_rtaa_m.rtaal004 = g_master_multi_table_t.rtaal004  THEN
         ELSE 
            LET l_var_keys[01] = g_rtaa_m.rtaa001
            LET l_field_keys[01] = 'rtaal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.rtaal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'rtaal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_rtaa_m.rtaal003
            LET l_fields[01] = 'rtaal003'
            LET l_vars[02] = g_rtaa_m.rtaal004
            LET l_fields[02] = 'rtaal004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'rtaalent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'rtaal_t')
         END IF 
 
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     CALL s_transaction_end('Y','0')
               END CASE
 
            END IF
            LET g_rtaa001_t = g_rtaa_m.rtaa001
 
           #controlp
      END INPUT
]]>
  </section>
  <section id="arti201.insert" ver="2" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION arti201_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   CLEAR FORM                    #清畫面欄位內容
   CALL g_rtab_d.clear()    #清除陣列
 
 
   INITIALIZE g_rtaa_m.* LIKE rtaa_t.*             #DEFAULT 設定
   LET g_rtaa001_t = NULL
 
   
   CALL s_transaction_begin()
               
   WHILE TRUE
      #公用欄位給值
      #此段落由子樣板a14產生    
      LET g_rtaa_m.rtaaownid = g_user
      LET g_rtaa_m.rtaaowndp = g_dept
      LET g_rtaa_m.rtaacrtid = g_user
      LET g_rtaa_m.rtaacrtdp = g_dept 
      LET g_rtaa_m.rtaacrtdt = cl_get_current()
      LET g_rtaa_m.rtaamodid = ""
      LET g_rtaa_m.rtaamoddt = ""
      LET g_rtaa_m.rtaastus = "N"
 
 
 
      #append欄位給值
      
     
      #單頭預設值
            LET g_rtaa_m.rtaa002 = "1"
      LET g_rtaa_m.rtaastus = "Y"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL arti201_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_rtaa_m.* = g_rtaa_m_t.*
         CALL arti201_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      CALL g_rtab_d.clear()
 
 
      LET g_rec_b = 0
      EXIT WHILE
        
   END WHILE
   
END FUNCTION
]]>
  </section>
  <section id="arti201.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION arti201_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "rtab_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point   
      INSERT INTO rtab_t
                  (rtabent,
                   rtab001,
                   rtab002
                   ) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   )
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point   
      IF SQLCA.sqlcode THEN
         CALL cl_err("rtab_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point   
   END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="arti201.lock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION arti201_lock_b(ps_table,ps_page)
   DEFINE ps_table STRING
   DEFINE ps_page  STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL arti201_b_fill()
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "rtab_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN arti201_bcl USING g_enterprise,
                                       g_rtaa_m.rtaa001,g_rtab_d[g_detail_idx].rtab002
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("arti201_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="arti201.main" ver="4" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT rtaa004,'',rtaa001,'','',rtaa002,rtaa003,'',rtaastus,rtaaownid,'',rtaaowndp, 
       '',rtaacrtid,'',rtaacrtdp,'',rtaacrtdt,rtaamodid,'',rtaamoddt FROM rtaa_t WHERE rtaaent= ? AND  
       rtaa001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE arti201_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE rtaa004,rtaa001,rtaa002,rtaa003,rtaastus,rtaaownid,rtaaowndp,rtaacrtid, 
       rtaacrtdp,rtaacrtdt,rtaamodid,rtaamoddt",
               " FROM rtaa_t",
               " WHERE rtaaent = '" ||g_enterprise|| "' AND rtaa001 = ?"
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE arti201_master_referesh FROM g_sql
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_arti201 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL arti201_init()   
 
      #進入選單 Menu (="N")
      CALL arti201_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_arti201
      
   END IF 
   
   CLOSE arti201_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="arti201.modify" ver="3" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION arti201_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_rtaa_m.rtaa001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE arti201_master_referesh USING g_rtaa_m.rtaa001 INTO g_rtaa_m.rtaa004,g_rtaa_m.rtaa001,g_rtaa_m.rtaa002, 
       g_rtaa_m.rtaa003,g_rtaa_m.rtaastus,g_rtaa_m.rtaaownid,g_rtaa_m.rtaaowndp,g_rtaa_m.rtaacrtid,g_rtaa_m.rtaacrtdp, 
       g_rtaa_m.rtaacrtdt,g_rtaa_m.rtaamodid,g_rtaa_m.rtaamoddt
 
   ERROR ""
  
   LET g_rtaa001_t = g_rtaa_m.rtaa001
 
   CALL s_transaction_begin()
   
   OPEN arti201_cl USING g_enterprise,g_rtaa_m.rtaa001
 
   IF STATUS THEN
      CALL cl_err("OPEN arti201_cl:", STATUS, 1)
      CLOSE arti201_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH arti201_cl INTO g_rtaa_m.rtaa004,g_rtaa_m.rtaa004_desc,g_rtaa_m.rtaa001,g_rtaa_m.rtaal003,g_rtaa_m.rtaal004, 
       g_rtaa_m.rtaa002,g_rtaa_m.rtaa003,g_rtaa_m.rtaa003_desc,g_rtaa_m.rtaastus,g_rtaa_m.rtaaownid, 
       g_rtaa_m.rtaaownid_desc,g_rtaa_m.rtaaowndp,g_rtaa_m.rtaaowndp_desc,g_rtaa_m.rtaacrtid,g_rtaa_m.rtaacrtid_desc, 
       g_rtaa_m.rtaacrtdp,g_rtaa_m.rtaacrtdp_desc,g_rtaa_m.rtaacrtdt,g_rtaa_m.rtaamodid,g_rtaa_m.rtaamodid_desc, 
       g_rtaa_m.rtaamoddt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_rtaa_m.rtaa001,SQLCA.sqlcode,0)
      CLOSE arti201_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
 
   CALL arti201_show()
   WHILE TRUE
      LET g_rtaa001_t = g_rtaa_m.rtaa001
 
      
      #寫入修改者/修改日期資訊
      LET g_rtaa_m.rtaamodid = g_user 
LET g_rtaa_m.rtaamoddt = cl_get_current()
 
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL arti201_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_rtaa_m.* = g_rtaa_m_t.*
         CALL arti201_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_rtaa_m.rtaa001 != g_rtaa001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE rtab_t SET rtab001 = g_rtaa_m.rtaa001
 
          WHERE rtabent = g_enterprise AND rtab001 = g_rtaa001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("rtab_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("rtab_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
      
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_rtaa_m.rtaa001,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE arti201_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_rtaa_m.rtaa001,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="arti201.modify_detail_chk" ver="2" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION arti201_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "rtab002"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="arti201.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="arti201.query" ver="1" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION arti201_query()
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point    
   
   LET INT_FLAG = 0
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_rtab_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count   
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL arti201_construct()
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      INITIALIZE g_rtaa_m.* TO NULL
      LET g_wc = " 1=1"
      LET g_wc2 = " 1=1"
      RETURN
   END IF
   
   LET g_error_show = 1
   CALL arti201_browser_fill()
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL arti201_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="arti201.reproduce" ver="3" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION arti201_reproduce()
   DEFINE l_newno     LIKE rtaa_t.rtaa001 
   DEFINE l_oldno     LIKE rtaa_t.rtaa001 
 
   DEFINE l_master    RECORD LIKE rtaa_t.*
   DEFINE l_detail    RECORD LIKE rtab_t.*
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   IF g_rtaa_m.rtaa001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_rtaa001_t = g_rtaa_m.rtaa001
 
   
   LET g_rtaa_m.rtaa001 = ""
 
   
   CALL arti201_set_entry('a')
   CALL arti201_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_rtaa_m.rtaaownid = g_user
      LET g_rtaa_m.rtaaowndp = g_dept
      LET g_rtaa_m.rtaacrtid = g_user
      LET g_rtaa_m.rtaacrtdp = g_dept 
      LET g_rtaa_m.rtaacrtdt = cl_get_current()
      LET g_rtaa_m.rtaamodid = ""
      LET g_rtaa_m.rtaamoddt = ""
      LET g_rtaa_m.rtaastus = "N"
 
 
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL arti201_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="arti201.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION arti201_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("rtaa001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="arti201.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION arti201_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point   
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="arti201.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION arti201_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("rtaa001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="arti201.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION arti201_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="arti201.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION arti201_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_rtaa_m.rtaa001
   LET g_pk_array[1].column = 'rtaa001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="arti201.show" ver="4" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION arti201_show()
   DEFINE l_ac_t    LIKE type_t.num5
   DEFINE l_sql     STRING
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_rtaa_m_t.* = g_rtaa_m.*      #保存單頭舊值
  
   DISPLAY BY NAME g_rtaa_m.rtaa004,g_rtaa_m.rtaa004_desc,g_rtaa_m.rtaa001,g_rtaa_m.rtaal003,g_rtaa_m.rtaal004, 
       g_rtaa_m.rtaa002,g_rtaa_m.rtaa003,g_rtaa_m.rtaa003_desc,g_rtaa_m.rtaastus,g_rtaa_m.rtaaownid, 
       g_rtaa_m.rtaaownid_desc,g_rtaa_m.rtaaowndp,g_rtaa_m.rtaaowndp_desc,g_rtaa_m.rtaacrtid,g_rtaa_m.rtaacrtid_desc, 
       g_rtaa_m.rtaacrtdp,g_rtaa_m.rtaacrtdp_desc,g_rtaa_m.rtaacrtdt,g_rtaa_m.rtaamodid,g_rtaa_m.rtaamodid_desc, 
       g_rtaa_m.rtaamoddt
    
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_rtaa_m.rtaastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
   IF g_bfill = "Y" THEN
      CALL arti201_b_fill()                 #單身
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_rtaa_m.rtaaownid_desc = cl_get_username(g_rtaa_m.rtaaownid)
      #LET g_rtaa_m.rtaaowndp_desc = cl_get_deptname(g_rtaa_m.rtaaowndp)
      #LET g_rtaa_m.rtaacrtid_desc = cl_get_username(g_rtaa_m.rtaacrtid)
      #LET g_rtaa_m.rtaacrtdp_desc = cl_get_deptname(g_rtaa_m.rtaacrtdp)
      #LET g_rtaa_m.rtaamodid_desc = cl_get_username(g_rtaa_m.rtaamodid)
      ##LET g_rtaa_m.rtaacnfid_desc = cl_get_deptname(g_rtaa_m.rtaacnfid)
      ##LET g_rtaa_m.rtaapstid_desc = cl_get_deptname(g_rtaa_m.rtaapstid)
      
 
 
 
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL arti201_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
 
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_rtab_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="arti201.state_change" ver="4" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION arti201_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_rtaa_m.rtaa001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_rtaa_m.rtaastus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE rtaa_t SET rtaastus = lc_state 
    WHERE rtaaent = g_enterprise AND rtaa001 = g_rtaa_m.rtaa001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
      LET g_rtaa_m.rtaastus = lc_state
      DISPLAY BY NAME g_rtaa_m.rtaastus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="arti201.ui_browser_refresh" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION arti201_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_rtaa001 = g_rtaa_m.rtaa001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="arti201.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION arti201_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="arti201.ui_dialog" ver="6" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION arti201_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #temp CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   #temp CALL gfrm_curr.setElementHidden("mainlayout",1)
   #temp CALL gfrm_curr.setElementHidden("worksheet",0)
   #temp LET g_main_hidden = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL arti201_browser_fill()
      
      #temp CALL cl_notice()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
         INPUT g_searchstr,g_searchcol FROM formonly.searchstr,formonly.cbo_searchcol
         
            BEFORE INPUT
            
         END INPUT
      
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
         
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL arti201_fetch('') # reload data
               #LET g_detail_idx = 1
               CALL arti201_ui_detailshow() #Setting the current row 
      
               CALL arti201_idx_chk()
               #NEXT FIELD rtab002
         
               ON EXPAND (g_row_index)
                  #樹展開
                  CALL arti201_browser_expand(g_row_index)
                  LET g_browser[g_row_index].b_isExp = 1
               
               ON COLLAPSE (g_row_index)
                  #樹關閉
         
         END DISPLAY
        
         DISPLAY ARRAY g_rtab_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               CALL arti201_idx_chk()
               LET g_detail_idx = ARR_CURR()
               
            BEFORE DISPLAY
               LET g_current_page = 1
               CALL arti201_idx_chk()
               
            
               
         END DISPLAY
        
 
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL arti201_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL arti201_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL arti201_idx_chk()
            
            #NEXT FIELD rtab002
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
      
         #Browser用Action
      
         #一般搜尋
         ON ACTION searchdata
            #取得搜尋關鍵字
            INITIALIZE g_wc TO NULL
            INITIALIZE g_wc2 TO NULL
            INITIALIZE g_wc_table1 TO NULL
 
            LET g_searchstr = GET_FLDBUF(searchstr)
            IF NOT arti201_browser_search("normal") THEN
               CONTINUE DIALOG
            END IF
            LET g_current_idx = 1
            IF g_browser.getLength() = 0 THEN
               CALL cl_err('',-100,1)
            END IF   
            LET g_action_choice = "searchdata"
            #EXIT DIALOG
      
         #進階搜尋
         ON ACTION advancesearch    
         
         #升冪排序
         ON ACTION ascending
            INITIALIZE g_wc TO NULL
            INITIALIZE g_wc2 TO NULL
            LET g_order = "ASC"
            LET g_current_idx = 1
            LET g_searchstr = GET_FLDBUF(searchstr)
            
            IF NOT arti201_browser_search("normal") THEN
               CONTINUE DIALOG
            END IF
            IF g_browser.getLength() = 0 THEN
               CALL cl_err('',-100,1)
            END IF   
            LET g_action_choice = "ASCENDING"
            EXIT DIALOG
       
         #降冪排序
         ON ACTION descending
            INITIALIZE g_wc TO NULL
            INITIALIZE g_wc2 TO NULL
            LET g_order = "DESC"
            LET g_current_idx = 1
            LET g_searchstr = GET_FLDBUF(searchstr)
            
            IF NOT arti201_browser_search("normal") THEN
               CONTINUE DIALOG
            END IF
            IF g_browser.getLength() = 0 THEN
               CALL cl_err('',-100,1)
            END IF   
            LET g_action_choice = "DESCENDING"
            EXIT DIALOG
            
         ON ACTION statechange
            CALL arti201_statechange()
            LET g_action_choice = "statechange"
          
         #ACTION表單列
         ON ACTION first
            CALL arti201_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL arti201_idx_chk()
            
         ON ACTION previous
            CALL arti201_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL arti201_idx_chk()
            
         ON ACTION jump
            CALL arti201_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL arti201_idx_chk()
            
         ON ACTION next
            CALL arti201_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL arti201_idx_chk()
            
         ON ACTION last
            CALL arti201_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL arti201_idx_chk()
            
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-r.png")
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-l.png")
               LET g_main_hidden = 1
            END IF
       
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_worksheet_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet",0)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
               LET g_worksheet_hidden = 0
               NEXT FIELD b_rtaa001
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet",1)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-r.png")
               LET g_worksheet_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
      
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL arti201_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL arti201_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL arti201_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL arti201_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL arti201_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL arti201_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL arti201_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL arti201_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
]]>
  </section>
  <section id="arti201.ui_headershow" ver="2" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION arti201_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_rtaa_m.rtaa001 = g_browser[g_current_idx].b_rtaa001   
 
   EXECUTE arti201_master_referesh USING g_rtaa_m.rtaa001 INTO g_rtaa_m.rtaa004,g_rtaa_m.rtaa001,g_rtaa_m.rtaa002, 
       g_rtaa_m.rtaa003,g_rtaa_m.rtaastus,g_rtaa_m.rtaaownid,g_rtaa_m.rtaaowndp,g_rtaa_m.rtaacrtid,g_rtaa_m.rtaacrtdp, 
       g_rtaa_m.rtaacrtdt,g_rtaa_m.rtaamodid,g_rtaa_m.rtaamoddt
   CALL arti201_show()
   
END FUNCTION
]]>
  </section>
  <section id="arti201.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION arti201_unlock_b(ps_table,ps_page)
   DEFINE ps_table STRING
   DEFINE ps_page  STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE arti201_bcl
   END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="arti201.update_b" ver="2" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION arti201_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = ""
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtab_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE rtab_t 
         SET (rtab001,
              rtab002
              ) 
              = 
             (ps_keys[1],ps_keys[2]
              ) 
         WHERE rtab001 = ps_keys_bak[1] AND rtab002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("rtab_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("rtab_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point   
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
