<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="artt406" std_prog="artt406" erpver="1.0" module="ART" ver="11" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="construct.c.page1.imaa009" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa009  #顯示到畫面上

            NEXT FIELD imaa009                     #返回原欄位

]]>
  </point>
  <point name="show.body2.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtds2_d[l_ac].rtdt001
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtds2_d[l_ac].rtdt001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtds2_d[l_ac].rtdt001_desc
            SELECT ooef019 INTO g_rtds2_d[l_ac].ooef019 FROM ooef_t
             WHERE ooefent = g_enterprise AND ooef001 = g_rtds2_d[l_ac].rtdt001
            DISPLAY BY NAME g_rtds2_d[l_ac].ooef019 
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtds2_d[l_ac].ooef019
            CALL ap_ref_array2(g_ref_fields,"SELECT DISTINCT ooall004 FROM ooall_t WHERE ooall001 = '2' AND ooall003='"||g_dlang||"' AND ooallent='"||g_enterprise||"' AND ooall002=?","") RETURNING g_rtn_fields
            LET g_rtds2_d[l_ac].ooef019_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtds2_d[l_ac].ooef019_desc ]]>
  </point>
  <point name="input.c.rtdrdocno" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtdr_m.rtdrdocno             #給予default值

            #給予arg
            
            LET g_qryparam.arg1 = g_ooef004 #
            LET g_qryparam.arg2 = "artt406" #

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_rtdr_m.rtdrdocno = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_qryparam.arg1 = null
            LET g_qryparam.arg2 = null
            DISPLAY g_rtdr_m.rtdrdocno TO rtdrdocno              #顯示到畫面上

            NEXT FIELD rtdrdocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.rtdr002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtdr_m.rtdr002             #給予default值

            #給予arg

            CALL q_rtaa001_3()                                #呼叫開窗

            LET g_rtdr_m.rtdr002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_rtdr_m.rtdr002 TO rtdr002              #顯示到畫面上
            CALL artt406_display_rtdr002()
            NEXT FIELD rtdr002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.rtds014" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtds_d[l_ac].rtds014             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_rtds_d[l_ac].rtds014 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_rtds_d[l_ac].rtds014 TO rtds014              #顯示到畫面上
            CALL artt406_display_rtds014()
            NEXT FIELD rtds014                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.rtds007" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtds_d[l_ac].rtds007             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_rtds_d[l_ac].rtds007 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_rtds_d[l_ac].rtds007 TO rtds007              #顯示到畫面上
            CALL artt406_display_rtds007()
            NEXT FIELD rtds007                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.rtds006" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtds_d[l_ac].rtds006             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_rtds_d[l_ac].rtds006 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_rtds_d[l_ac].rtds006 TO rtds006              #顯示到畫面上
            call artt406_display_rtds006()
            NEXT FIELD rtds006                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.rtds002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtds_d[l_ac].rtds002             #給予default值

            #給予arg

            CALL q_imay003_3()                                #呼叫開窗

            LET g_rtds_d[l_ac].rtds002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_rtds_d[l_ac].rtds002 TO rtds002              #顯示到畫面上
            CALL artt406_display_rtds002(g_rtds_d[l_ac].rtds002)
            CALL artt406_display_rtds001(g_rtds_d[l_ac].rtds001,l_cmd)
            NEXT FIELD rtds002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.rtds001" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtds_d[l_ac].rtds001             #給予default值

            #給予arg

            CALL q_imay001()                                #呼叫開窗

            LET g_rtds_d[l_ac].rtds001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_rtds_d[l_ac].rtds001 TO rtds001              #顯示到畫面上
            CALL artt406_display1_rtds001(g_rtds_d[l_ac].rtds001)
            CALL artt406_display_rtds001(g_rtds_d[l_ac].rtds001,l_cmd)
            NEXT FIELD rtds001                          #返回原欄位

]]>
  </point>
  <point name="input.a.rtaa003" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtdr_m.rtaa003
            CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001='2' AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtdr_m.rtaa003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtdr_m.rtaa003_desc
]]>
  </point>
  <point name="input.a.page1.rtdsseq" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_rtdr_m.rtdrdocno) AND NOT cl_null(g_rtds_d[l_ac].rtdsseq) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_rtdr_m.rtdrdocno != g_rtdrdocno_t OR g_rtds_d[l_ac].rtdsseq != g_rtds_d_t.rtdsseq))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtds_t WHERE "||"rtdsent = '" ||g_enterprise|| "' AND "||"rtdsdocno = '"||g_rtdr_m.rtdrdocno ||"' AND "|| "rtdsseq = '"||g_rtds_d[l_ac].rtdsseq ||"'",'std-00004',0) THEN 
                     LET g_rtds_d[l_ac].rtdsseq = g_rtds_d_t.rtdsseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.rtds014" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_rtds_d[l_ac].rtds014_desc = NULL
            DISPLAY  g_rtds_d[l_ac].rtds014_desc TO s_detail1[l_ac].rtds014_desc
            IF NOT cl_null(g_rtds_d[l_ac].rtds014) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_rtds_d[l_ac].rtds014 != g_rtds_d_t.rtds014 ))) THEN 
                  CALL artt406_rtds006(g_rtds_d[l_ac].rtds014)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_rtds_d[l_ac].rtds014
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_rtds_d[l_ac].rtds014 = g_rtds_d_t.rtds014
                     CALL artt406_display_rtds014()
                     NEXT FIELD rtds014
                  END IF
               END IF
            END IF
            CALL artt406_display_rtds014()
]]>
  </point>
  <point name="input.a.page1.rtds013" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtds_d[l_ac].rtds013) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page1.rtds012" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtds_d[l_ac].rtds012) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page1.rtds011" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtds_d[l_ac].rtds011) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page1.rtds010" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF l_cmd='a' THEN
               IF NOT cl_null(g_rtds_d[l_ac].rtds010) THEN 
                  LET g_rtds_d[l_ac].rtds011=g_rtds_d[l_ac].rtds010
                  LET g_rtds_d[l_ac].rtds012=g_rtds_d[l_ac].rtds010
                  LET g_rtds_d[l_ac].rtds013=g_rtds_d[l_ac].rtds010
               END IF 
            END IF     
]]>
  </point>
  <point name="input.a.page1.rtds007" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_rtds_d[l_ac].rtds007_desc = NULL
            DISPLAY  g_rtds_d[l_ac].rtds007_desc TO s_detail1[l_ac].rtds007_desc
            IF NOT cl_null(g_rtds_d[l_ac].rtds007) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_rtds_d[l_ac].rtds007 != g_rtds_d_t.rtds007 ))) THEN 
                  CALL artt406_rtds006(g_rtds_d[l_ac].rtds007)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_rtds_d[l_ac].rtds007
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_rtds_d[l_ac].rtds007 = g_rtds_d_t.rtds007
                     CALL artt406_display_rtds007()
                     NEXT FIELD rtds007
                  END IF
               END IF
            END IF
            CALL artt406_display_rtds007()
]]>
  </point>
  <point name="input.a.page1.rtds006" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_rtds_d[l_ac].rtds006_desc = NULL
            DISPLAY  g_rtds_d[l_ac].rtds006_desc TO s_detail1[l_ac].rtds006_desc
            IF NOT cl_null(g_rtds_d[l_ac].rtds006) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_rtds_d[l_ac].rtds006 != g_rtds_d_t.rtds006 ))) THEN 
                  CALL artt406_rtds006(g_rtds_d[l_ac].rtds006)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_rtds_d[l_ac].rtds006
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_rtds_d[l_ac].rtds006 = g_rtds_d_t.rtds006
                     CALL artt406_display_rtds006()
                     NEXT FIELD rtds006
                  END IF
               END IF
            END IF
            CALL artt406_display_rtds006()
            
]]>
  </point>
  <point name="input.a.page1.rtds003" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_rtds_d[l_ac].rtds003_desc = null
            DISPLAY  g_rtds_d[l_ac].rtds003_desc TO s_detail1[l_ac].rtds003_desc
            IF NOT cl_null(g_rtds_d[l_ac].rtds003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_rtds_d[l_ac].rtds003 != g_rtds_d_t.rtds003 ))) THEN 
                  CALL artt406_rtds003(g_rtds_d[l_ac].rtds003)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_rtds_d[l_ac].rtds003
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_rtds_d[l_ac].rtds003 = g_rtds_d_t.rtds003
                     CALL artt406_display_rtds003(g_rtds_d[l_ac].rtds003)
                     NEXT FIELD rtds003
                  END IF
               END IF
            END IF
            CALL artt406_display_rtds003(g_rtds_d[l_ac].rtds003)
]]>
  </point>
  <point name="input.a.page1.imaa009" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtds_d[l_ac].imaa009
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtds_d[l_ac].imaa009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtds_d[l_ac].imaa009_desc
]]>
  </point>
  <point name="construct.c.rtdrownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdrownid  #顯示到畫面上

            NEXT FIELD rtdrownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtdrowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdrowndp  #顯示到畫面上

            NEXT FIELD rtdrowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtdrmodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdrmodid  #顯示到畫面上

            NEXT FIELD rtdrmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtdrdocno" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_rtdrdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdrdocno  #顯示到畫面上

            NEXT FIELD rtdrdocno                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtdrcrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdrcrtid  #顯示到畫面上

            NEXT FIELD rtdrcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtdrcrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdrcrtdp  #顯示到畫面上

            NEXT FIELD rtdrcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtdrcnfid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdrcnfid  #顯示到畫面上

            NEXT FIELD rtdrcnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtdr002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_rtaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdr002  #顯示到畫面上

            NEXT FIELD rtdr002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.rtdt001" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_rtab002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdt001  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO rtab002 #門店編號 

            NEXT FIELD rtdt001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.rtds014" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtds014  #顯示到畫面上

            NEXT FIELD rtds014                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.rtds007" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtds007  #顯示到畫面上

            NEXT FIELD rtds007                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.rtds006" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtds006  #顯示到畫面上

            NEXT FIELD rtds006                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.rtds003" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " oodb004='1' "
            CALL q_oodb002()                           #呼叫開窗
            LET g_qryparam.where = null
            DISPLAY g_qryparam.return1 TO rtds003  #顯示到畫面上

            NEXT FIELD rtds003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.rtds001" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_imay001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtds001  #顯示到畫面上

            NEXT FIELD rtds001                     #返回原欄位

]]>
  </point>
  <point name="function.artt406_rtdrdocno" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+chk rtdrdocno
PRIVATE FUNCTION artt406_rtdrdocno(p_rtdrdocno)
   DEFINE   l_cnt   LIKE type_t.num5
   DEFINE   l_cnt1  LIKE type_t.num5 
   define   p_rtdrdocno  like rtdr_t.rtdrdocno
   SELECT ooef004 INTO g_ooef004 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site
   LET g_errno = null
   LET l_cnt = 0
   LET l_cnt1 = 0
   SELECT COUNT(*) INTO l_cnt  FROM ooba_t,oobl_t
    WHERE oobl001 = ooba001 AND ooblent = oobaent AND oobl002 = ooba002 
      AND ooba001 = g_ooef004 AND ooba002=p_rtdrdocno
      AND oobl003 = 'artt406'
   IF l_cnt <= 0 THEN
      LET g_errno = "aim-00056"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM ooba_t,oobl_t
       WHERE oobl001 = ooba001 AND ooblent = oobaent AND oobl002 = ooba002
         AND ooba001 = g_ooef004 AND ooba002=p_rtdrdocno
         AND oobl003 = 'artt406' AND oobastus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "aoo-00102"
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.artt406_rtdr001" order="2" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+chk rtdr001
PRIVATE FUNCTION artt406_rtdr001()
   DEFINE   l_cnt       LIKE type_t.num5
   DEFINE   l_cnt1      LIKE type_t.num5 

   LET g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0
   SELECT COUNT(*) INTO l_cnt  FROM ooef_t WHERE ooef302='Y' and ooef001 = g_rtdr_m.rtdr001 AND ooefent = g_enterprise
      
   IF l_cnt <= 0 THEN
      LET g_errno = "aim-00060"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM ooef_t WHERE ooef302='Y'and ooef001 = g_rtdr_m.rtdr001 AND ooefent = g_enterprise AND ooefstus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "amm-00007"
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.artt406_rtdr002" order="3" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+chk rtdr002
PRIVATE FUNCTION artt406_rtdr002()
   DEFINE   l_cnt       LIKE type_t.num5
   DEFINE   l_cnt1      LIKE type_t.num5
   LET g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0
   SELECT COUNT(*) INTO l_cnt  FROM rtaa_t WHERE rtaa001 = g_rtdr_m.rtdr002
   IF l_cnt <= 0 THEN
      LET g_errno = "art-00045"  
   ELSE
      #huangrh add rtak----20150603
      SELECT COUNT(*) INTO l_cnt  FROM rtaa_t,rtak_t WHERE rtaa001 = g_rtdr_m.rtdr002 AND rtaaent=rtakent AND rtak001=rtaa001 AND rtak002='3' AND rtak003='Y'  
      IF l_cnt <=0 THEN
         LET g_errno = "art-00066"
      ELSE
         #huangrh add rtak----20150603
         SELECT COUNT(*) INTO l_cnt1  FROM rtaa_t,rtak_t WHERE rtaa001 = g_rtdr_m.rtdr002 AND rtaaent=rtakent AND rtak001=rtaa001 AND rtak002='3' AND rtak003='Y' 
            AND rtaastus = 'Y'
         IF l_cnt1 <=0 THEN
            LET g_errno = "art-00049"
         END IF 
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.artt406_display_rtdr001" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ display rtdr001
PRIVATE FUNCTION artt406_display_rtdr001()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtdr_m.rtdr001
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtdr_m.rtdr001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtdr_m.rtdr001_desc
END FUNCTION]]>
  </point>
  <point name="function.artt406_display_rtdr002" order="5" ver="8" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+display rtdr002
PRIVATE FUNCTION artt406_display_rtdr002()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtdr_m.rtdr002
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaal003 FROM rtaal_t WHERE rtaalent='"||g_enterprise||"' AND rtaal001=? AND rtaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtdr_m.rtdr002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtdr_m.rtdr002_desc
    
   select rtaa003 into g_rtdr_m.rtdr005 from rtaa_t where rtaa001 = g_rtdr_m.rtdr002
      and rtaaent = g_enterprise
      
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtdr_m.rtdr005
   CALL ap_ref_array2(g_ref_fields,"SELECT DISTINCT ooall004 FROM ooall_t WHERE ooall001 = '2' AND ooall003='"||g_dlang||"' AND ooallent='"||g_enterprise||"' AND ooall002=?","") RETURNING g_rtn_fields
   LET g_rtdr_m.rtdr005_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_rtdr_m.rtdr005_desc 
   DISPLAY BY NAME g_rtdr_m.rtdr005   
END FUNCTION]]>
  </point>
  <point name="function.artt406_create_rtdr002" order="6" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ create rtdr002
PRIVATE FUNCTION artt406_create_rtdr002()
   DEFINE l_sql    STRING
   LET l_sql=" INSERT INTO rtdt_t(rtdtent,rtdtdocno,rtdt001) SELECT ",g_enterprise,",'",g_rtdr_m.rtdrdocno,"',rtab002 ",
             "  FROM rtab_t WHERE rtabent = ",g_enterprise," AND rtab001 = '",g_rtdr_m.rtdr002,"' "
   PREPARE artt406_rtdt_pre FROM l_sql
   EXECUTE artt406_rtdt_pre
END FUNCTION]]>
  </point>
  <point name="function.artt406_create_rtdsseq" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ create rtdsseq
PRIVATE FUNCTION artt406_create_rtdsseq()
   IF (cl_null(g_rtds_d[l_ac].rtdsseq) OR g_rtds_d[l_ac].rtdsseq=0) THEN
      SELECT MAX(rtdsseq)+1 INTO g_rtds_d[l_ac].rtdsseq FROM rtds_t
       WHERE rtdsdocno = g_rtdr_m.rtdrdocno AND rtdsent = g_enterprise
   END IF
   IF (cl_null(g_rtds_d[l_ac].rtdsseq) OR g_rtds_d[l_ac].rtdsseq=0) THEN
      LET g_rtds_d[l_ac].rtdsseq = 1
   END IF
END FUNCTION]]>
  </point>
  <point name="function.artt406_rtds001" order="8" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk rtds001
PRIVATE FUNCTION artt406_rtds001(p_rtds001)
   DEFINE   l_cnt       LIKE type_t.num5
   DEFINE   l_cnt1      LIKE type_t.num5
   DEFINE   p_rtds001   LIKE rtds_t.rtds001   

   LET g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0
   SELECT COUNT(*) INTO l_cnt  FROM imaa_t WHERE imaa001= p_rtds001 AND imaaent = g_enterprise
   IF l_cnt <= 0 THEN
      LET g_errno = "art-00016"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM imaa_t WHERE imaa001= p_rtds001
         AND imaaent = g_enterprise AND imaastus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "art-00050"
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.artt406_rtds002" order="9" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+chk rtds002
PRIVATE FUNCTION artt406_rtds002(p_rtds002)
   DEFINE   l_cnt       LIKE type_t.num5
   DEFINE   l_cnt1      LIKE type_t.num5
   DEFINE   p_rtds002   LIKE rtds_t.rtds002   

   LET g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0
   SELECT COUNT(*) INTO l_cnt  FROM imay_t,imaa_t WHERE imaa001=imay001 AND imay003 = p_rtds002
     and imay006='Y' 
   IF l_cnt <= 0 THEN
      LET g_errno = "art-00046"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM imay_t,imaa_t WHERE imaa001=imay001 AND imay003 = p_rtds002
         AND imaystus='Y' AND imaastus='Y' and imay006='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "art-00047"
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.artt406_display_rtds001" order="10" ver="8" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ display rtds001
PRIVATE FUNCTION artt406_display_rtds001(p_rtds001,p_cmd)
   DEFINE  p_rtds001   LIKE rtds_t.rtds001
   DEFINE  l_ooef019   LIKE ooef_t.ooef019
   DEFINE  p_cmd       LIKE type_t.chr1
   DEFINE  l_count     LIKE type_t.num5
   DEFINE  l_sql       STRING
   
   SELECT imaal003,imaal004 INTO g_rtds_d[l_ac].imaal003,g_rtds_d[l_ac].imaal004
     FROM imaal_t WHERE imaal001 = p_rtds001 AND imaalent = g_enterprise
      AND imaal002 = g_dlang
   SELECT imaa009 INTO  g_rtds_d[l_ac].imaa009
        FROM imaa_t
       WHERE imaa001 = p_rtds001 AND imaaent = g_enterprise   
   IF p_cmd = 'a' THEN    
      SELECT imaa009,imaa124,imaa123,imaa107 INTO  g_rtds_d[l_ac].imaa009,g_rtds_d[l_ac].rtds003,
        g_rtds_d[l_ac].rtds005,g_rtds_d[l_ac].rtds006
        FROM imaa_t
       WHERE imaa001 = p_rtds001 AND imaaent = g_enterprise
       
      SELECT count(*) INTO l_count  FROM oodb_t WHERE  oodb002 = g_rtds_d[l_ac].rtds003 AND oodbent = g_enterprise AND oodb004='1'
         AND oodb001 = g_rtdr_m.rtdr005
      IF l_count <= 0 THEN
         LET g_rtds_d[l_ac].rtds003 = NULL
      END IF
      
      SELECT imay004,imay005,imay012 INTO  g_rtds_d[l_ac].rtds007,g_rtds_d[l_ac].rtds008,g_rtds_d[l_ac].rtds014
        FROM imay_t WHERE imay001 = p_rtds001 AND imayent = g_enterprise AND imay003 =  g_rtds_d[l_ac].rtds002
      DISPLAY g_rtds_d[l_ac].rtds003,g_rtds_d[l_ac].rtds005,g_rtds_d[l_ac].rtds006,
              g_rtds_d[l_ac].rtds007,g_rtds_d[l_ac].rtds008
           TO s_detai1[l_ac].rtds003,s_detai1[l_ac].rtds005,s_detai1[l_ac].rtds006,
              s_detai1[l_ac].rtds007,s_detai1[l_ac].rtds008
   END IF
   SELECT imay004,imay005,imay012 INTO  g_rtds_d[l_ac].rtds007,g_rtds_d[l_ac].rtds008,g_rtds_d[l_ac].rtds014
     FROM imay_t WHERE imay001 = p_rtds001 AND imayent = g_enterprise AND imay003 =  g_rtds_d[l_ac].rtds002   
   SELECT rtaxl003 INTO g_rtds_d[l_ac].imaa009_desc FROM rtaxl_t 
    WHERE rtaxl001 = g_rtds_d[l_ac].imaa009 AND rtaxl002 = g_dlang
   SELECT ooef019 INTO l_ooef019 FROM ooea_t WHERE ooea001 = g_site  
   SELECT oodb006 INTO g_rtds_d[l_ac].rtds004 FROM oodb_t 
    WHERE oodb002 =  g_rtds_d[l_ac].rtds003 AND oodb001 = g_rtdr_m.rtdr005
   SELECT xcab004 INTO g_rtds_d[l_ac].cost FROM xcab_t WHERE xcabent = g_enterprise
     AND xcab002 = g_rtds_d[l_ac].rtds001  AND rownum=1 ORDER BY  xcab001 DESC  
   
   DISPLAY g_rtds_d[l_ac].imaal003,g_rtds_d[l_ac].imaal004, g_rtds_d[l_ac].imaa009,g_rtds_d[l_ac].imaa009_desc,
           g_rtds_d[l_ac].rtds007,g_rtds_d[l_ac].rtds008, g_rtds_d[l_ac].cost,g_rtds_d[l_ac].rtds014  
   TO s_detai11[l_ac].imaal003,s_detai11[l_ac].imaal004,s_detai11[l_ac].imaa009,s_detai11[l_ac].imaa009_desc,
      s_detai11[l_ac].rtds007,s_detai11[l_ac].rtds008,s_detai11[l_ac].cost,s_detail1[l_ac].rtds014
      
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtds_d[l_ac].rtds006
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtds_d[l_ac].rtds006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtds_d[l_ac].rtds006_desc          
            
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtds_d[l_ac].rtds007
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtds_d[l_ac].rtds007_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtds_d[l_ac].rtds007_desc 

   CALL artt406_display_rtds003(g_rtds_d[l_ac].rtds003)
   CALL artt406_display_rtds014()
END FUNCTION]]>
  </point>
  <point name="function.artt406_display1_rtds001" order="11" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ display rtds001
PRIVATE FUNCTION artt406_display1_rtds001(p_rtds001)
   DEFINE p_rtds001   LIKE rtds_t.rtds001
   SELECT imay003 INTO g_rtds_d[l_ac].rtds002 FROM imay_t
    WHERE imay001 = p_rtds001 AND imayent = g_enterprise  AND imay006='Y' AND rownum=1
   DISPLAY g_rtds_d[l_ac].rtds002 TO  s_detai1[l_ac].rtds002
END FUNCTION]]>
  </point>
  <point name="function.artt406_display_rtds002" order="12" ver="6" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ display rtds002
PRIVATE FUNCTION artt406_display_rtds002(p_rtds002)
   DEFINE p_rtds002   LIKE rtds_t.rtds002
   SELECT imay001 INTO g_rtds_d[l_ac].rtds001 FROM imay_t
    WHERE imay003 = p_rtds002 AND imayent = g_enterprise  AND rownum=1
   DISPLAY g_rtds_d[l_ac].rtds001 TO  s_detai1[l_ac].rtds001

END FUNCTION]]>
  </point>
  <point name="function.artt406_null_rtds001" order="13" ver="6" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+null
PRIVATE FUNCTION artt406_null_rtds001()
   LET g_rtds_d[l_ac].imaal003=NULL
   LET g_rtds_d[l_ac].imaal004=NULL
   LET g_rtds_d[l_ac].imaa009=NULL
   LET g_rtds_d[l_ac].imaa009_desc=NULL
   LET g_rtds_d[l_ac].rtds007=NULL
   LET g_rtds_d[l_ac].rtds008=NULL
   LET g_rtds_d[l_ac].cost = null
   #150122-00013#5 pomelo-----add-s
   LET g_rtds_d[l_ac].l_imaa106 = ''
   LET g_rtds_d[l_ac].l_imaa106_desc = ''
   #150122-00013#5 pomelo-----add-e
   DISPLAY g_rtds_d[l_ac].imaal003,g_rtds_d[l_ac].imaal004, g_rtds_d[l_ac].imaa009,g_rtds_d[l_ac].imaa009_desc,
           g_rtds_d[l_ac].rtds007,g_rtds_d[l_ac].rtds008,g_rtds_d[l_ac].cost   
   TO s_detai1[l_ac].imaal003_01,s_detai1[l_ac].imaal004_01,s_detai1[l_ac].imaa009_01,s_detai1[l_ac].imaa009_desc,
      s_detai1[l_ac].rtds007,s_detai1[l_ac].rtds008,s_detail1[l_ac].cost  
   
END FUNCTION]]>
  </point>
  <point name="function.artt406_unique_rtds001" order="14" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+chk rtds001
PRIVATE FUNCTION artt406_unique_rtds001(p_rtds001)
   DEFINE p_rtds001 LIKE rtds_t.rtds001
   DEFINE l_cnt     LIKE type_t.num5
   LET g_errno = NULL
   LET l_cnt = 0
   IF NOT cl_null(g_rtds_d_t.rtdsseq) THEN
      SELECT count(*) INTO l_cnt FROM rtds_t WHERE rtdsent = g_enterprise
         AND rtds001 = p_rtds001  AND rtdsdocno = g_rtdr_m.rtdrdocno AND rtdsseq!=g_rtds_d_t.rtdsseq
   ELSE
      SELECT count(*) INTO l_cnt FROM rtds_t WHERE rtdsent = g_enterprise
         AND rtds001 = p_rtds001  AND rtdsdocno = g_rtdr_m.rtdrdocno
   END IF   
   IF l_cnt >0 THEN
      LET g_errno = "art-00072"
   END IF
END FUNCTION]]>
  </point>
  <point name="function.artt406_rtds003" order="15" ver="8" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ chk rtds003
PRIVATE FUNCTION artt406_rtds003(p_rtds003)
   DEFINE p_rtds003  LIKE rtds_t.rtds003
   DEFINE l_cnt      LIKE type_t.num5
   DEFINE l_cnt1     LIKE type_t.num5
   DEFINE l_ooef019  LIKE ooef_t.ooef019
   DEFINE l_sql      STRING
   
   LET l_cnt = 0
   LET l_cnt1 = 0
   LET g_errno = NULL
   SELECT ooef019 INTO l_ooef019 FROM ooef_t WHERE ooef001 = g_site AND ooefent = g_enterprise
   
   LET l_sql = " SELECT count(*)  FROM oodb_t WHERE  oodb002 = '",p_rtds003,"' AND oodbent = '",g_enterprise,"' AND oodb004='1' "
   IF NOT cl_null(g_rtdr_m.rtdr005 ) THEN
      LET l_sql = l_sql clipped,"   AND oodb001 =  '",g_rtdr_m.rtdr005,"' "
   END IF      
   PREPARE l_sql_oodb FROM l_sql
   EXECUTE l_sql_oodb INTO l_cnt    
   IF l_cnt<=0 THEN
      LET g_errno="aoo-00107"
   ELSE
      LET l_sql = " SELECT count(*)  FROM oodb_t WHERE  oodb002 = '",p_rtds003,"' AND oodbent = '",g_enterprise,"'  ",
                  "    AND oodbstus = 'Y' AND oodb004='1' "
      IF NOT cl_null(g_rtdr_m.rtdr005 ) THEN
         LET l_sql = l_sql clipped,"   AND oodb001 =  '",g_rtdr_m.rtdr005,"' "
      END IF 
      PREPARE l_sql_oodb2 FROM l_sql
      EXECUTE l_sql_oodb2 INTO l_cnt1
      IF l_cnt1 <=0 THEN
         LET g_errno="aoo-00115"
      END IF      
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.artt406_display_rtds003" order="16" ver="8" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+display rtds003
PRIVATE FUNCTION artt406_display_rtds003(p_rtds003)
   DEFINE  p_rtds003  LIKE rtds_t.rtds003
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_rtds003
   CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl002=? AND oodbl003='"||g_dlang||"' AND oodbl001='"||g_rtdr_m.rtdr005||"'","") RETURNING g_rtn_fields
   LET g_rtds_d[l_ac].rtds003_desc = '', g_rtn_fields[1] , ''
   DISPLAY  g_rtds_d[l_ac].rtds003_desc TO s_detail1[l_ac].rtds003_desc
   
   SELECT oodb006 INTO g_rtds_d[l_ac].rtds004 FROM oodb_t
    WHERE oodbent = g_enterprise AND oodb002 = p_rtds003
      AND oodb001 = g_rtdr_m.rtdr005                      #dongsz add
   DISPLAY  g_rtds_d[l_ac].rtds004 TO s_detail1[l_ac].rtds004
END FUNCTION]]>
  </point>
  <point name="function.artt406_rtds006" order="17" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+chk rtds006
PRIVATE FUNCTION artt406_rtds006(p_rtds006)
   DEFINE   l_cnt       LIKE type_t.num5
   DEFINE   l_cnt1      LIKE type_t.num5
   DEFINE   p_rtds006   LIKE rtds_t.rtds006   

   LET g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0
   SELECT COUNT(*) INTO l_cnt  FROM ooca_t where oocaent = g_enterprise and ooca001 = p_rtds006
   IF l_cnt <= 0 THEN
      LET g_errno = "aim-00004"
   ELSE
      SELECT COUNT(*) INTO l_cnt1  FROM ooca_t where oocaent = g_enterprise and ooca001 = p_rtds006
         AND oocastus='Y'
      IF l_cnt1 <= 0 THEN
         LET g_errno = "aim-00005"
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.artt406_display_rtds006" order="18" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+display rtds006
PRIVATE FUNCTION artt406_display_rtds006()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtds_d[l_ac].rtds006
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtds_d[l_ac].rtds006_desc = '', g_rtn_fields[1] , ''
   DISPLAY  g_rtds_d[l_ac].rtds006_desc TO s_detail1[l_ac].rtds006_desc
END FUNCTION]]>
  </point>
  <point name="function.artt406_display_rtds007" order="19" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ display rtds007
PRIVATE FUNCTION artt406_display_rtds007()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtds_d[l_ac].rtds007
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtds_d[l_ac].rtds007_desc = '', g_rtn_fields[1] , ''
   DISPLAY  g_rtds_d[l_ac].rtds007_desc TO s_detail1[l_ac].rtds007_desc
END FUNCTION]]>
  </point>
  <point name="function.artt406_display_rtds014" order="20" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+display rtds014
PRIVATE FUNCTION artt406_display_rtds014()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtds_d[l_ac].rtds014
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtds_d[l_ac].rtds014_desc = '', g_rtn_fields[1] , ''
   DISPLAY  g_rtds_d[l_ac].rtds014_desc TO s_detail1[l_ac].rtds014_desc
END FUNCTION]]>
  </point>
  <point name="function.artt406_rtdt001" order="21" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+chk rtdt001
PRIVATE FUNCTION artt406_rtdt001()
   DEFINE   l_cnt       LIKE type_t.num5
   DEFINE   l_cnt1      LIKE type_t.num5  

   LET g_errno = NULL
   LET l_cnt = 0
   LET l_cnt1 = 0
   SELECT COUNT(*) INTO l_cnt  FROM rtab_t WHERE rtabent = g_enterprise AND rtab002 = g_rtds2_d[l_ac].rtdt001
      AND rtab001 = g_rtdr_m.rtdr002
   IF l_cnt <= 0 THEN
      LET g_errno = "art-00061"
   ELSE
      SELECT count(*) INTO l_cnt1 FROM ooea_t WHERE ooeaent = g_enterprise AND ooea001 = g_rtds2_d[l_ac].rtdt001
      IF l_cnt1 <=0 THEN
         LET g_errno = "art-00062"
      ELSE      
         SELECT count(*) INTO l_cnt1 FROM ooea_t WHERE ooeaent = g_enterprise AND ooea001 = g_rtds2_d[l_ac].rtdt001
            AND ooeastus = 'Y'
         IF l_cnt1<=0 THEN
            LET g_errno = "art-00069"
         END IF 
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.artt406_display_rtdt001" order="22" ver="8" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ display rtdt001
PRIVATE FUNCTION artt406_display_rtdt001(p_rtdt001)
   DEFINE p_rtdt001   LIKE rtdt_t.rtdt001
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_rtdt001
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtds2_d[l_ac].rtdt001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtds2_d[l_ac].rtdt001_desc
   SELECT ooef019 INTO g_rtds2_d[l_ac].ooef019 FROM ooef_t
#    WHERE ooef001 = g_rtds2_d[l_ac].rtdt001 AND ooefent = g_enterprise
   WHERE ooef001 = p_rtdt001 AND ooefent = g_enterprise
   DISPLAY  g_rtds2_d[l_ac].ooef019 TO s_detail2[l_ac].ooef019
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtds2_d[l_ac].ooef019
   CALL ap_ref_array2(g_ref_fields,"SELECT DISTINCT ooall004 FROM ooall_t WHERE ooall001 = '2' AND ooall003='"||g_dlang||"' AND ooallent='"||g_enterprise||"' AND ooall002=?","") RETURNING g_rtn_fields
   LET g_rtds2_d[l_ac].ooef019_desc = g_rtn_fields[1]
   DISPLAY  g_rtds2_d[l_ac].ooef019_desc  TO s_detail2[l_ac].ooef019_desc   
END FUNCTION]]>
  </point>
  <point name="function.artt406_get_imaa106" order="23" ver="6" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取的銷售計價單位
# Memo...........:
# Usage..........: CALL artt406_get_imaa106()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015/02/02 By pomelo 150122-00013#5
# Modify.........:
################################################################################
PRIVATE FUNCTION artt406_get_imaa106()
   
   SELECT imaa106,oocal003
     INTO g_rtds_d[l_ac].l_imaa106,g_rtds_d[l_ac].l_imaa106_desc
     FROM imaa_t
     LEFT OUTER JOIN oocal_t ON oocalent = imaaent
                            AND oocal001 = imaa106
                            AND oocal002 = g_dlang
    WHERE imaaent = g_enterprise
      AND imaa001 = g_rtds_d[l_ac].rtds001

END FUNCTION]]>
  </point>
  <point name="function.artt406_create_rtdx_tmp" order="24" ver="8" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 建立門店清單暫存表
# Memo...........:
# Usage..........: CALL artt406_create_rtdx_tmp()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015-03-31 By Ken
# Modify.........:
################################################################################
PRIVATE FUNCTION artt406_create_rtdx_tmp()
   WHENEVER ERROR CONTINUE
   
   CALL artt406_drop_rtdx_tmp()
   CREATE TEMP TABLE artt406_rtdx_tmp(
      rtdxsite   LIKE rtdx_t.rtdxsite,
      rtdx001    LIKE rtdx_t.rtdx001,
      imaa009    LIKE imaa_t.imaa009)
END FUNCTION]]>
  </point>
  <point name="function.artt406_drop_rtdx_tmp" order="25" ver="8" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 刪除門店清單暫存表
# Memo...........:
# Usage..........: CALL artt406_drop_rtdx_tmp()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015-03-31 By Ken
# Modify.........:
################################################################################
PRIVATE FUNCTION artt406_drop_rtdx_tmp()
   WHENEVER ERROR CONTINUE   

   DROP TABLE artt406_rtdx_tmp
END FUNCTION]]>
  </point>
  <point name="function.artt406_create_imaa009_tmp" order="26" ver="8" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 建立引進單據中商品的品類管理編號
# Memo...........:
# Usage..........: CALL artt406_create_imaa009_tmp()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015-03-31 By Ken
# Modify.........:
################################################################################
PRIVATE FUNCTION artt406_create_imaa009_tmp()
   WHENEVER ERROR CONTINUE
   
   CALL artt406_drop_imaa009_tmp()
   CREATE TEMP TABLE artt406_imaa009_tmp(
      imaa009    LIKE imaa_t.imaa009)
END FUNCTION]]>
  </point>
  <point name="function.artt406_drop_imaa009_tmp" order="27" ver="8" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 刪除品類管理編號暫存表
# Memo...........:
# Usage..........: CALL artt406_drop_imaa009_tmp()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015-03-31 By Ken
# Modify.........:
################################################################################
PRIVATE FUNCTION artt406_drop_imaa009_tmp()
   WHENEVER ERROR CONTINUE   

   DROP TABLE artt406_imaa009_tmp
END FUNCTION]]>
  </point>
  <point name="function.artt406_rtad005_chk" order="28" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 檢查引進商品中的品類數量，是否已超過SKU數上限
# Memo...........: 使用前需先產生tmp table
#                : 1.CALL artt406_create_rtdx_tmp()
#                : 2.CALL artt406_create_imaa009_tmp()
#                : 使用後需刪除tmp table
#                : 1.CALL artt406_drop_rtdx_tmp()
#                : 2.CALL artt406_drop_imaa009_tmp()
# Usage..........: CALL artt406_rtad005_chk(p_rtdrdocno)
#                  RETURNING r_success,r_ooaa002
# Input parameter: p_rtdudocno    引進商品單號
# Return code....: r_success      TRUE(FALSE)  
# ...............: r_ooaa002      控管品類SKU數參數
# Date & Author..: 2015-03-31 By Ken
# Modify.........:
################################################################################
PRIVATE FUNCTION artt406_rtad005_chk(p_rtdrdocno)
   DEFINE p_rtdrdocno     LIKE rtdr_t.rtdrdocno
   DEFINE l_sql           STRING
   DEFINE l_rtdxsite      LIKE rtdx_t.rtdxsite
   DEFINE l_rtdx001       LIKE rtdx_t.rtdx001
   DEFINE l_cnt           LIKE type_t.num5
   DEFINE l_rtdt001       LIKE rtdt_t.rtdt001
   DEFINE l_rtds001       LIKE rtds_t.rtds001
   DEFINE l_rtdxcnt       LIKE type_t.num5
   DEFINE l_ooaa002       LIKE ooaa_t.ooaa002
   DEFINE l_rtad005       LIKE rtad_t.rtad005
   DEFINE l_imaa009       LIKE imaa_t.imaa009
   DEFINE l_err_cnt       LIKE type_t.num5
   DEFINE l_errno         LIKE type_t.chr10
   DEFINE l_success       LIKE type_t.num5   
   DEFINE r_success       LIKE type_t.num5
   DEFINE r_ooaa002       LIKE ooaa_t.ooaa002   
   
   
   LET r_success = TRUE
   LET l_err_cnt = 0
   
   #檢查資料前先把tmp table資料清空 
   DELETE FROM artt406_imaa009_tmp
   DELETE FROM artt406_rtdx_tmp    
     
   #品類SKU數控管參數   
   LET r_ooaa002 = ''     
   CALL cl_get_para(g_enterprise,g_site,'E-CIR-0028') RETURNING r_ooaa002    
      
   IF r_ooaa002 = 1 THEN #SKU數不控管
      RETURN r_success,r_ooaa002
   END IF
     
   #管理品類參數
   LET l_ooaa002 = ''
   CALL cl_get_para(g_enterprise,g_site,'E-CIR-0001') RETURNING l_ooaa002    
   
   #先取出自有新商品引進的品類管理編號存到暫存表
   LET l_cnt = 0
   LET l_sql = "SELECT imaa009 ",
           "  FROM rtds_t,imaa_t ",
           " WHERE rtdsent = imaaent ",
           "   AND rtds001 = imaa001 ",
           "   AND rtdsent = ",g_enterprise, 
           "   AND rtdsdocno = '",p_rtdrdocno,"' "
   PREPARE artt406_tmp_table_pre FROM l_sql            
   DECLARE artt406_tmp_table_cur CURSOR FOR artt406_tmp_table_pre
   FOREACH artt406_tmp_table_cur INTO l_imaa009
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'artt406_tmp_table_pre'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success,r_ooaa002       
   END IF 
      CALL s_arti202_search_manage_level(l_imaa009)
         RETURNING l_success,l_errno,l_imaa009 
      
      IF l_success THEN
         SELECT COUNT(*) INTO l_cnt FROM artt406_imaa009_tmp where imaa009 = l_imaa009
         IF l_cnt = 0 THEN
            INSERT INTO artt406_imaa009_tmp(imaa009) VALUES(l_imaa009)
         END IF
      END IF
            
   END FOREACH
   
   
   #先取出門店清單符合 商品引進作業中門店清單的商品資料
   LET l_cnt = 0
   LET l_sql = "SELECT rtdxsite,rtdx001,imaa009 ",
               "  FROM rtdx_t,imaa_t ",
               " WHERE rtdxent = imaaent ",
               "   AND rtdx001 = imaa001 ",
               "   AND rtdx003 = '1' ",
               "   AND rtdxent = ",g_enterprise ,
               "   AND rtdxsite IN ",
               "           (SELECT rtdt001 FROM rtdt_t WHERE rtdtdocno='",p_rtdrdocno,"' AND rtdtent = ",g_enterprise," )"
           
   PREPARE artt406_tmp_table1_pre FROM l_sql            
   DECLARE artt406_tmp_table1_cur CURSOR FOR artt406_tmp_table1_pre
   FOREACH artt406_tmp_table1_cur INTO l_rtdxsite,l_rtdx001,l_imaa009
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'artt406_tmp_table1_pre'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success,r_ooaa002        
   END IF      
      CALL s_arti202_search_manage_level(l_imaa009)
         RETURNING l_success,l_errno,l_imaa009
      IF l_success THEN
         SELECT COUNT(*) INTO l_cnt FROM artt406_imaa009_tmp WHERE imaa009 = l_imaa009
         IF l_cnt > 0 THEN
            INSERT INTO artt406_rtdx_tmp(rtdxsite,rtdx001,imaa009) VALUES(l_rtdxsite,l_rtdx001,l_imaa009)
         END IF
      END IF
   END FOREACH
   
   
   #取出自有新商品引進單據資料
   LET l_cnt = 0
   LET l_sql = "SELECT rtdt001,rtds001,imaa009 ",
               "  FROM rtds_t,rtdt_t,rtdr_t,imaa_t ",
               " WHERE rtdsent = rtdtent ",
               "   AND rtdsdocno = rtdtdocno ",
               "   AND rtdsent = rtdrent ",
               "   AND rtdsdocno = rtdrdocno ",
               "   AND rtdsent = imaaent ",
               "   AND rtds001 = imaa001 ",
               "   AND rtdrdocno='",p_rtdrdocno,"' AND rtdrent = ",g_enterprise
              
   PREPARE artt406_tmp_table2_pre FROM l_sql            
   DECLARE artt406_tmp_table2_cur CURSOR FOR artt406_tmp_table2_pre
   FOREACH artt406_tmp_table2_cur INTO l_rtdt001,l_rtds001,l_imaa009
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'artt405_tmp_table2_pre'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success,r_ooaa002      
   END IF      
      SELECT COUNT(*) INTO l_cnt FROM artt406_rtdx_tmp WHERE rtdxsite = l_rtdt001 AND rtdx001 = l_rtds001
      IF l_cnt = 0 THEN            
         CALL s_arti202_search_manage_level(l_imaa009)
            RETURNING l_success,l_errno,l_imaa009      
         IF l_success THEN 
            INSERT INTO artt406_rtdx_tmp(rtdxsite,rtdx001,imaa009) VALUES(l_rtdt001,l_rtds001,l_imaa009)
         END IF
      END IF
   END FOREACH
   
   
   #把artt406_rtdx_tmp暫存表資料Group By (依l_rtdxit,l_imaa009) 去SUM l_rtdx001數量
   LET l_cnt = 0
   LET l_sql = "SELECT rtdxsite,imaa009,COUNT(*) ",
               "  FROM artt406_rtdx_tmp ",
               " GROUP BY rtdxsite,imaa009 "
                         
   PREPARE artt406_tmp_table3_pre FROM l_sql            
   DECLARE artt406_tmp_table3_cur CURSOR FOR artt406_tmp_table3_pre
   FOREACH artt406_tmp_table3_cur INTO l_rtdxsite,l_imaa009,l_rtdxcnt
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'artt406_tmp_table3_pre'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success,r_ooaa002       
   END IF      
   
   SELECT rtad005 INTO l_rtad005 FROM rtac_t,rtad_t,rtae_t 
    WHERE rtacent = rtadent 
      AND rtac001 = rtad001 
      AND rtacent = rtaeent 
      AND rtac001 = rtae001 
      AND rtadstus = 'Y' 
      AND rtac003 = l_ooaa002
      AND rtaestus = 'Y' 
      AND rtad002 = l_imaa009
      AND rtae002 = l_rtdxsite
   
   IF NOT cl_null(l_rtad005) THEN   
      IF l_rtdxcnt > l_rtad005 THEN
           INITIALIZE g_errparam TO NULL
           LET g_errparam.code = "art-00523"
           LET g_errparam.extend = ''
           LET g_errparam.popup = TRUE
           LET g_errparam.replace[1] = l_rtdxsite
           LET g_errparam.replace[2] = l_imaa009
           LET g_errparam.replace[3] = l_rtdxcnt
           LET g_errparam.replace[4] = l_rtad005
           CALL cl_err()
           LET r_success = FALSE           
           LET l_err_cnt = l_err_cnt + 1
      
         CONTINUE FOREACH
      END IF
   END IF
   
   END FOREACH
   
   RETURN r_success,r_ooaa002
END FUNCTION]]>
  </point>
  <point name="b_fill.fill" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL artt406_get_imaa106()        #150122-00013#5 pomelo add]]>
  </point>
  <point name="b_fill2.fill" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL artt406_display_rtdt001(g_rtds2_d[l_ac].rtdt001)]]>
  </point>
  <point name="browser_fill.before_browser_fill" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_sql_where(g_prog,'rtdrsite') RETURNING l_where #ken---add 需求單號：141208-00001 項次：15]]>
  </point>
  <point name="browser_fill.cnt_sqlwc" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_sub_sql = l_sub_sql," AND ", l_where #ken---add 需求單號：141208-00001 項次：15]]>
  </point>
  <point name="browser_fill.define" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_where           STRING #ken---add 需求單號：141208-00001 項次：15]]>
  </point>
  <point name="browser_fill.fill_sqlwc" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_sql = g_sql," AND ", l_where #ken---add 需求單號：141208-00001 項次：15]]>
  </point>
  <point name="construct.c.page1.rtds002" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
#            CALL q_imay003_1()                           #呼叫開窗
            CALL q_imay003_3()
            DISPLAY g_qryparam.return1 TO rtds002  #顯示到畫面上

            NEXT FIELD rtds002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtdr001" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
#            LET g_qryparam.where = " ooef302='Y'"
#            CALL q_ooef001()                           #呼叫開窗
            IF s_aooi500_setpoint(g_prog,'rtdr001') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdr001',g_site,'c')   #150308-00001#5  By benson add 'c'
               CALL q_ooef001_24()
            ELSE
               LET g_qryparam.where = " ooef302='Y'"
               CALL q_ooef001()   
            END IF
            LET g_qryparam.where = null
            DISPLAY g_qryparam.return1 TO rtdr001  #顯示到畫面上

            NEXT FIELD rtdr001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtdr003" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            #LET g_qryparam.reqry = FALSE
#           # CALL q_ooef001()                           #呼叫開窗
            #IF s_aooi500_setpoint(g_prog,'rtdr003') THEN
            #   LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdr003',g_site,'c')   #150308-00001#5  By benson add 'c'
            #   CALL q_ooef001_24()
            #ELSE
            #   LET g_qryparam.where = " ooef201='Y'"
            #   CALL q_ooef001()
            #END IF
            #DISPLAY g_qryparam.return1 TO rtdr003  #顯示到畫面上
            #
            #NEXT FIELD rtdr003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtdr005" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooef019()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdr005  #顯示到畫面上            
            NEXT FIELD rtdr005                     #返回原欄位
]]>
  </point>
  <point name="construct.c.rtdrsite" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            #ken---add---str 需求單號：141208-00001 項次：15
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdrsite',g_site,'c')   #150308-00001#5  By benson add 'c'
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdrsite  #顯示到畫面上
            NEXT FIELD rtdrsite                     #返回原欄位
            #ken---add---end

]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #ken---add---str 需求單號：141208-00001 項次：15
      IF NOT s_aooi200_del_docno(g_rtdr_m.rtdrdocno,g_rtdr_m.rtdrdocdt) THEN 
         CALL s_transaction_end('N','0') RETURN 
      END IF
      #ken---add---end]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#   IF g_rtdr_m.rtdrstus<>'N' THEN
#      CALL cl_set_act_visible("modify,delete", FALSE)
#   ELSE
#      CALL cl_set_act_visible("modify,delete", TRUE)   
#   END IF
   IF g_rtdr_m.rtdrstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)   
   END IF   ]]>
  </point>
  <point name="global.variable" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_ooef004            LIKE ooef_t.ooef004
DEFINE g_site_flag          LIKE type_t.num5]]>
  </point>
  <point name="init.define" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5      #150308-00001#5  By benson 150309]]>
  </point>
  <point name="init.init" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_create_temp() RETURNING l_success    #150308-00001#5  By benson 150309
#   CALL s_display_rtda001(g_prog,'rtdr003')
   CALL s_life_cycle_display(g_prog,'rtdr003','1')
   CALL cl_set_combo_scc_part('rtds009','6014','2')  #150527-00045#1  By geza 150527
   CALL artt406_create_imaa009_tmp() 
   CALL artt406_create_rtdx_tmp()  ]]>
  </point>
  <point name="input.a.page1.rtds001" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            IF NOT cl_null(g_rtds_d[l_ac].rtds001) THEN 
               IF (l_cmd = 'a' AND  ( g_rtds_d[l_ac].rtds001 != g_rtds_d_t.rtds001 OR g_rtds_d_t.rtds001 IS null)) OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_rtds_d[l_ac].rtds001 != g_rtds_d_t.rtds001 ))) THEN 
                  CALL artt406_null_rtds001()
                  LET g_rtds_d[l_ac].rtds002 = NULL
                  DISPLAY g_rtds_d[l_ac].rtds002 TO s_detail1[l_ac].rtds002
                  CALL artt406_rtds001(g_rtds_d[l_ac].rtds001)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_rtds_d[l_ac].rtds001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_rtds_d[l_ac].rtds001 = g_rtds_d_t.rtds001
                     CALL artt406_display1_rtds001(g_rtds_d[l_ac].rtds001)
                     CALL artt406_display_rtds001(g_rtds_d[l_ac].rtds001,l_cmd)
                     NEXT FIELD rtds001
                  END IF
                  CALL artt406_display1_rtds001(g_rtds_d[l_ac].rtds001)
                  IF NOT cl_null(g_rtds_d[l_ac].rtds002) THEN   
                     CALL artt406_rtds002(g_rtds_d[l_ac].rtds002)
                     IF NOT cl_null(g_errno) THEN
                        INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_rtds_d[l_ac].rtds001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                        LET g_rtds_d[l_ac].rtds001 = g_rtds_d_t.rtds001
                        LET g_rtds_d[l_ac].rtds002 = g_rtds_d_t.rtds002
                        CALL artt406_display1_rtds001(g_rtds_d[l_ac].rtds001)
                        CALL artt406_display_rtds001(g_rtds_d[l_ac].rtds001,l_cmd)
                        NEXT FIELD rtds001
                     END IF
                  END IF
                  IF NOT cl_null(g_rtds_d[l_ac].rtds001) THEN
                     CALL artt406_unique_rtds001(g_rtds_d[l_ac].rtds001)
                     IF NOT cl_null(g_errno) THEN
                        INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_rtds_d[l_ac].rtds001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                        LET g_rtds_d[l_ac].rtds001 = g_rtds_d_t.rtds001
                        CALL artt406_display1_rtds001(g_rtds_d[l_ac].rtds001)
                        CALL artt406_display_rtds001(g_rtds_d[l_ac].rtds001,l_cmd) 
                        NEXT FIELD rtds001
                     END IF
                  END IF
                  CALL artt406_display1_rtds001(g_rtds_d[l_ac].rtds001)
                  CALL artt406_display_rtds001(g_rtds_d[l_ac].rtds001,l_cmd) 
                  CALL artt406_get_imaa106()
               END IF
            END IF
            
            LET g_rtds_d_t.* = g_rtds_d[l_ac].*]]>
  </point>
  <point name="input.a.page1.rtds002" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL artt406_null_rtds001()
            LET g_rtds_d[l_ac].rtds001 = NULL
            DISPLAY g_rtds_d[l_ac].rtds001 TO s_detail1[l_ac].rtds001
            IF NOT cl_null(g_rtds_d[l_ac].rtds002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND ( g_rtds_d[l_ac].rtds002 != g_rtds_d_t.rtds002 ))) THEN 
                  CALL artt406_rtds002(g_rtds_d[l_ac].rtds002)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_rtds_d[l_ac].rtds002
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_rtds_d[l_ac].rtds002 = g_rtds_d_t.rtds002
                     CALL artt406_display_rtds002(g_rtds_d[l_ac].rtds002)
                     CALL artt406_display_rtds001(g_rtds_d[l_ac].rtds001,l_cmd)
                     NEXT FIELD rtds002
                  END IF
                  CALL artt406_display_rtds002(g_rtds_d[l_ac].rtds002)
                  
                  IF NOT cl_null(g_rtds_d[l_ac].rtds001) THEN
                     CALL artt406_unique_rtds001(g_rtds_d[l_ac].rtds001)
                     IF NOT cl_null(g_errno) THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = g_errno
                        LET g_errparam.extend = g_rtds_d[l_ac].rtds002
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        LET g_rtds_d[l_ac].rtds002 = g_rtds_d_t.rtds002
                        LET g_rtds_d[l_ac].rtds001 = g_rtds_d_t.rtds001
                        CALL artt406_display_rtds002(g_rtds_d[l_ac].rtds002)
                        CALL artt406_display_rtds001(g_rtds_d[l_ac].rtds001,l_cmd)
                        NEXT FIELD rtds002
                     END IF
                  END IF
                  CALL artt406_get_imaa106()
               END IF
            END IF
            CALL artt406_display_rtds002(g_rtds_d[l_ac].rtds002)
            CALL artt406_display_rtds001(g_rtds_d[l_ac].rtds001,l_cmd)
            LET g_rtds_d_t.* = g_rtds_d[l_ac].*]]>
  </point>
  <point name="input.a.page2.rtdt001" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            LET g_rtds2_d[l_ac].rtdt001_desc = NULL
            LET g_rtds2_d[l_ac].ooef019 = NULL
            DISPLAY g_rtds2_d[l_ac].rtdt001_desc TO s_detail2[l_ac].rtdt001_desc
            DISPLAY g_rtds2_d[l_ac].ooef019 TO s_detail2[l_ac].ooef019
            IF  NOT cl_null(g_rtdr_m.rtdrdocno) AND NOT cl_null(g_rtds2_d[l_ac].rtdt001) AND NOT cl_null(g_rtdr_m.rtdr002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_rtdr_m.rtdrdocno != g_rtdrdocno_t OR g_rtds2_d[l_ac].rtdt001 != g_rtds2_d_t.rtdt001))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtdt_t WHERE "||"rtdtent = '" ||g_enterprise|| "' AND "||"rtdtdocno = '"||g_rtdr_m.rtdrdocno ||"' AND "|| "rtdt001 = '"||g_rtds2_d[l_ac].rtdt001 ||"'",'std-00004',0) THEN 
                     LET g_rtds2_d[l_ac].rtdt001 = g_rtds2_d_t.rtdt001
                     CALL artt406_display_rtdt001(g_rtds2_d[l_ac].rtdt001)
                     NEXT FIELD CURRENT
                  END IF
                  CALL artt406_rtdt001()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_rtds2_d[l_ac].rtdt001
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_rtds2_d[l_ac].rtdt001 = g_rtds2_d_t.rtdt001
                     CALL artt406_display_rtdt001(g_rtds2_d[l_ac].rtdt001)
                     NEXT FIELD rtdt001
                  END IF
                                   
               END IF
            END IF
            #判断门店编号是否有效  geza 2015/03/31
            IF NOT cl_null(g_rtds2_d[l_ac].rtdt001) THEN 
               LET l_cnt = 0 
               SELECT COUNT(*) INTO l_cnt  FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_rtds2_d[l_ac].rtdt001
               AND ooefstus = 'Y'
               IF l_cnt <= 0 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "art-00526"
                  LET g_errparam.extend = g_rtds2_d[l_ac].rtdt001
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_rtds2_d[l_ac].rtdt001 = g_rtds2_d_t.rtdt001
                  CALL artt406_display_rtdt001(g_rtds2_d[l_ac].rtdt001)
                  NEXT FIELD rtdt001
               END IF 
            END IF
            #判断门店的税区与当头的税区别是否一致  geza 2015/03/30
            IF NOT cl_null(g_rtds2_d[l_ac].rtdt001) THEN 
               SELECT ooef019 INTO l_ooef019 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_rtds2_d[l_ac].rtdt001
               AND ooefstus = 'Y'
               IF l_ooef019 != g_rtdr_m.rtdr005 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "art-00525"
                  LET g_errparam.extend = g_rtds2_d[l_ac].rtdt001
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_rtds2_d[l_ac].rtdt001 = g_rtds2_d_t.rtdt001
                  CALL artt406_display_rtdt001(g_rtds2_d[l_ac].rtdt001)
                  NEXT FIELD rtdt001
               END IF 
            END IF
            CALL artt406_display_rtdt001(g_rtds2_d[l_ac].rtdt001)

]]>
  </point>
  <point name="input.a.rtdr001" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_rtdr_m.rtdr001_desc = NULL
            DISPLAY BY NAME g_rtdr_m.rtdr001_desc
            IF  NOT cl_null(g_rtdr_m.rtdr001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_rtdr_m.rtdr001 != g_rtdr_m_t.rtdr001 OR g_rtdr_m_t.rtdr001 IS null))) THEN 
#                  CALL artt406_rtdr001()
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err(g_rtdr_m.rtdr001,g_errno,1)
#                     LET g_rtdr_m.rtdr001 = g_rtdr_m_t.rtdr001
#                     CALL artt406_display_rtdr001()
#                     NEXT FIELD rtdr001                     
#                  END IF
#                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#                  INITIALIZE g_chkparam.* TO NULL
#               
#                  #設定g_chkparam.*的參數
#                  LET g_chkparam.arg1 = g_rtdr_m.rtdr001
#                  
#                  #呼叫檢查存在並帶值的library
#                  IF cl_chk_exist("v_ooef001_33") THEN
#
#                  ELSE
#                     #檢查失敗時後續處理
#                     LET g_rtdr_m.rtdr001 = g_rtdr_m_t.rtdr001
#                     CALL artt406_display_rtdr001()
#                     NEXT FIELD rtdr001
#                  END IF
                  
                  IF s_aooi500_setpoint(g_prog,'rtdr001') THEN
                     CALL s_aooi500_chk(g_prog,'rtdr001',g_rtdr_m.rtdr001,g_rtdr_m.rtdrsite) RETURNING l_success,l_errno
                     IF NOT l_success THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.extend = g_rtdr_m.rtdr001
                        LET g_errparam.code   = l_errno
                        LET g_errparam.popup  = TRUE
                        CALL cl_err()
                     
                        LET g_rtdr_m.rtdr001 = g_rtdr_m_t.rtdr001
                        CALL artt406_display_rtdr001()
                        NEXT FIELD CURRENT
                     END IF
                  ELSE
                     #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                     INITIALIZE g_chkparam.* TO NULL
                     
                     #設定g_chkparam.*的參數
                     LET g_chkparam.arg1 = g_rtdr_m.rtdr001
                     
                     #呼叫檢查存在並帶值的library
                     IF cl_chk_exist("v_ooef001_33") THEN
                     
                     ELSE
                        #檢查失敗時後續處理
                        LET g_rtdr_m.rtdr001 = g_rtdr_m_t.rtdr001
                        CALL artt406_display_rtdr001()
                        NEXT FIELD rtdr001
                     END IF
                  END IF
               END IF
            END IF
            CALL artt406_display_rtdr001()
            
]]>
  </point>
  <point name="input.a.rtdr002" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#            LET g_rtdr_m.rtdr002_desc = null
#            DISPLAY BY NAME g_rtdr_m.rtdr002_desc
#            let g_rtdr_m.rtaa003 = null
#            let g_rtdr_m.rtaa003_desc = null
#            DISPLAY BY NAME g_rtdr_m.rtaa003_desc,g_rtdr_m.rtaa003
            IF  NOT cl_null(g_rtdr_m.rtdr002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_rtdr_m.rtdr001 != g_rtdr_m_t.rtdr002 OR g_rtdr_m_t.rtdr002 IS null))) THEN 
                  CALL artt406_rtdr002()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_rtdr_m.rtdr002
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_rtdr_m.rtdr002 = g_rtdr_m_t.rtdr002
                     CALL artt406_display_rtdr002()
                     NEXT FIELD rtdr002                     
                  END IF
               END IF
            END IF
            CALL artt406_display_rtdr002()
            CALL artt406_set_entry(p_cmd)
            CALL artt406_set_no_entry(p_cmd)
]]>
  </point>
  <point name="input.a.rtdr003" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#            LET g_rtdr_m.rtdr003_desc = NULL
#            DISPLAY BY NAME g_rtdr_m.rtdr003_desc
#            IF  NOT cl_null(g_rtdr_m.rtdr003) THEN 
#               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_rtdr_m.rtdr003 != g_rtdr_m_t.rtdr003 OR g_rtdr_m_t.rtdr003 IS null))) THEN        
#                  IF s_aooi500_setpoint(g_prog,'rtdr003') THEN
#                     CALL s_aooi500_chk(g_prog,'rtdr003',g_rtdr_m.rtdr003,g_rtdr_m.rtdr003) RETURNING l_success,l_errno
#                     IF NOT l_success THEN
#                        INITIALIZE g_errparam TO NULL
#                        LET g_errparam.extend = g_rtdr_m.rtdr003
#                        LET g_errparam.code   = l_errno
#                        LET g_errparam.popup  = TRUE
#                        CALL cl_err()
#                     
#                        LET g_rtdr_m.rtdr003 = g_rtdr_m_t.rtdr003
#                        CALL s_desc_get_department_desc(g_rtdr_m.rtdr003) RETURNING g_rtdr_m.rtdr003_desc
#                        DISPLAY BY NAME g_rtdr_m.rtdr003_desc
#                        NEXT FIELD CURRENT
#                     END IF
#                  ELSE
#                     #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#                     INITIALIZE g_chkparam.* TO NULL
#                     
#                     #設定g_chkparam.*的參數
#                     LET g_chkparam.arg1 = g_rtdr_m.rtdr003
#                     
#                     #呼叫檢查存在並帶值的library
#                     IF cl_chk_exist("v_ooef001_27") THEN
#                     
#                     ELSE
#                        #檢查失敗時後續處理
#                        LET g_rtdr_m.rtdr003 = g_rtdr_m_t.rtdr003
#                        CALL s_desc_get_department_desc(g_rtdr_m.rtdr003) RETURNING g_rtdr_m.rtdr003_desc
#                        DISPLAY BY NAME g_rtdr_m.rtdr003_desc
#                        NEXT FIELD rtdr003
#                     END IF
#                  END IF
#                  LET g_site_flag = TRUE
#                  CALL artt406_set_entry(p_cmd)
#                  CALL artt406_set_no_entry(p_cmd)
#               END IF
#            END IF
#            
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_rtdr_m.rtdr003
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_rtdr_m.rtdr003_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_rtdr_m.rtdr003_desc
#]]>
  </point>
  <point name="input.a.rtdr005" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         #判断税区别是否有效   geza 2015/03/30 
         IF NOT cl_null(g_rtdr_m.rtdr005) THEN 
            LET l_cnt = 0 
            SELECT COUNT(*) INTO l_cnt 
            FROM ooef_t 
            WHERE ooefent = g_enterprise            
            AND ooef019 = g_rtdr_m.rtdr005
            AND ooefstus = 'Y'
            IF l_cnt <= 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "art-00524"
               LET g_errparam.extend = ""
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD rtdr005          
            END IF 
         END IF 
         
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtdr_m.rtdr005
         CALL ap_ref_array2(g_ref_fields,"SELECT DISTINCT ooall004 FROM ooall_t WHERE ooall001 = '2' AND ooall003='"||g_dlang||"' AND ooallent='"||g_enterprise||"' AND ooall002=?","") RETURNING g_rtn_fields
         LET g_rtdr_m.rtdr005_desc = g_rtn_fields[1]
         DISPLAY BY NAME g_rtdr_m.rtdr005_desc 
        ]]>
  </point>
  <point name="input.a.rtdrdocno" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_rtdr_m.rtdrdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_rtdr_m.rtdrdocno != g_rtdrdocno_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtdr_t WHERE "||"rtdrent = '" ||g_enterprise|| "' AND "||"rtdrdocno = '"||g_rtdr_m.rtdrdocno ||"'",'std-00004',0) THEN 
                     LET g_rtdr_m.rtdrdocno = g_rtdr_m_t.rtdrdocno
                     NEXT FIELD CURRENT
                  END IF
#                  CALL artt406_rtdrdocno(g_rtdr_m.rtdrdocno)
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err(g_rtdr_m.rtdrdocno,g_errno,1)
#                     LET g_rtdr_m.rtdrdocno = g_rtdr_m_t.rtdrdocno
#                     NEXT FIELD rtdrdocno
#                  END IF
                 #CALL s_aooi200_chk_slip(g_site,g_ooef004,g_rtdr_m.rtdrdocno,g_prog) RETURNING l_success #sakura mark
                  CALL s_aooi200_chk_slip(g_rtdr_m.rtdrsite,g_ooef004,g_rtdr_m.rtdrdocno,g_prog) RETURNING l_success #sakura add
                  IF NOT l_success THEN
                     LET g_rtdr_m.rtdrdocno = g_rtdr_m_t.rtdrdocno
                     NEXT FIELD rtdrdocno
                  END IF
               END IF
            END IF
]]>
  </point>
  <point name="input.a.rtdrsite" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #ken---add---str 需求單號：141208-00001 項次：15
            IF NOT cl_null(g_rtdr_m.rtdrsite) THEN
               CALL s_aooi500_chk(g_prog,'rtdusite',g_rtdr_m.rtdrsite,g_rtdr_m.rtdrsite)
                  RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = ''
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
            
                  LET g_rtdr_m.rtdrsite = g_rtdr_m_t.rtdrsite
                  CALL s_desc_get_department_desc(g_rtdr_m.rtdrsite)
                     RETURNING g_rtdr_m.rtdrsite_desc
                  DISPLAY BY NAME g_rtdr_m.rtdrsite,g_rtdr_m.rtdrsite_desc
                  NEXT FIELD CURRENT
               END IF
            #sakura---add--str
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ''
               LET g_errparam.code   = 'axc-00120'
               LET g_errparam.popup  = TRUE
               CALL cl_err()
               LET g_rtdr_m.rtdrsite = g_rtdr_m_t.rtdrsite
               CALL s_desc_get_department_desc(g_rtdr_m.rtdrsite)
                  RETURNING g_rtdr_m.rtdrsite_desc
               DISPLAY BY NAME g_rtdr_m.rtdrsite,g_rtdr_m.rtdrsite_desc
               NEXT FIELD CURRENT 
            #sakura---add---end
            END IF              
            LET g_site_flag = TRUE
            CALL s_desc_get_department_desc(g_rtdr_m.rtdrsite)
               RETURNING g_rtdr_m.rtdrsite_desc
            DISPLAY BY NAME g_rtdr_m.rtdrsite,g_rtdr_m.rtdrsite_desc
            CALL artt406_set_entry(p_cmd)
            CALL artt406_set_no_entry(p_cmd)            
            #ken---add---end
            
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_rtdr_m.rtdrsite
            #CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_rtdr_m.rtdrsite_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_rtdr_m.rtdrsite_desc

]]>
  </point>
  <point name="input.b.page1.rtdsseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.before_dialog" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   SELECT ooef004 INTO g_ooef004 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site
   let g_errshow=1]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL artt406_create_rtdsseq()]]>
  </point>
  <point name="input.body.insert.before_bak" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_rtds_d[l_ac].rtds009 = '2' #150527-00045#1  By geza 150527]]>
  </point>
  <point name="input.c.page1.rtds003" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtds_d[l_ac].rtds003             #給予default值
            LET g_qryparam.where = " oodb004='1' AND oodb001='",g_rtdr_m.rtdr005,"' "
            #給予arg

            CALL q_oodb002()                                #呼叫開窗
            LET g_qryparam.where = null
            LET g_rtds_d[l_ac].rtds003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_rtds_d[l_ac].rtds003 TO rtds003              #顯示到畫面上
            CALL artt406_display_rtds003(g_rtds_d[l_ac].rtds003)
            NEXT FIELD rtds003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.rtdt001" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtds2_d[l_ac].rtdt001             #給予default值
            LET g_qryparam.default2 = "" #g_rtds2_d[l_ac].rtab002 #門店編號
#            IF NOT cl_null(g_rtdr_m.rtdr002) THEN
#               LET g_qryparam.where = "rtab001='",g_rtdr_m.rtdr002,"' "
#            END IF
            IF l_cmd = 'u' THEN
               #栏位开窗处理   geza  2015/03/31
               IF NOT cl_null(g_rtdr_m.rtdr002) THEN
                  LET g_qryparam.where = "rtab001='",g_rtdr_m.rtdr002,"' "
                  CALL q_rtab002() 
               ELSE 
                  IF s_aooi500_setpoint(g_prog,'rtdt001') THEN
                     LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdt001',g_site,'i') 
                     LET g_qryparam.where = g_qryparam.where," AND ooef001 IN 
                     ( SELECT ooef001 FROM ooef_t a WHERE a.ooef001 = ooef001 AND a.ooef019 ='",g_rtdr_m.rtdr005,"' )"
                     CALL q_ooef001_24()
                  ELSE
                     LET g_qryparam.where = " ooef303='Y' AND ooef019 ='",g_rtdr_m.rtdr005,"'"
                     CALL q_ooef001()   
                  END IF              
               END IF
#               CALL q_rtab002()                                #呼叫開窗
               
               LET g_rtds2_d[l_ac].rtdt001 = g_qryparam.return1              #將開窗取得的值回傳到變數
               #LET g_rtds2_d[l_ac].rtab002 = g_qryparam.return2 #門店編號
               LET g_qryparam.where = null
               DISPLAY g_rtds2_d[l_ac].rtdt001 TO rtdt001              #顯示到畫面上
               #DISPLAY g_rtds2_d[l_ac].rtab002 TO rtab002 #門店編號
             
               NEXT FIELD rtdt001                          #返回原欄位
            ELSE
               LET g_qryparam.state= 'c'
               LET g_qryparam.default1 = g_rtds2_d[l_ac].rtdt001 
#               CALL q_rtab002()
               #栏位开窗处理   geza  2015/03/31
               IF NOT cl_null(g_rtdr_m.rtdr002) THEN
                  LET g_qryparam.where = "rtab001='",g_rtdr_m.rtdr002,"' "
                  CALL q_rtab002() 
               ELSE 
                  IF s_aooi500_setpoint(g_prog,'rtdt001') THEN
                     LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdt001',g_site,'i') 
                     LET g_qryparam.where = g_qryparam.where," AND ooef001 IN 
                     ( SELECT ooef001 FROM ooef_t a WHERE a.ooef001 = ooef001 AND a.ooef019 ='",g_rtdr_m.rtdr005,"' )"
                     CALL q_ooef001_24()
                  ELSE
                     LET g_qryparam.where = " ooef303='Y' AND ooef019 ='",g_rtdr_m.rtdr005,"'"
                     CALL q_ooef001()   
                  END IF                
               END IF
               LET tok = base.StringTokenizer.createExt(g_qryparam.return1,"|",'',TRUE)
                  WHILE tok.hasMoreTokens()
                     LET l_rtdt001 = tok.nextToken()
                     IF cl_null(l_rtdt001) THEN
                        CONTINUE WHILE
                     END IF
                     IF l_cmd='a' OR
                      (l_cmd='u' AND l_rtdt001!=g_rtds2_d_t.rtdt001) THEN
                         SELECT COUNT(*) INTO l_count1 FROM rtdt_t
                          WHERE rtdtent= g_enterprise AND rtdt001 = l_rtdt001
                            AND rtdtdocno = g_rtdr_m.rtdrdocno
                        IF l_count1>0 THEN
                           CONTINUE WHILE
                        END IF
                     END IF
                     IF l_cmd='u' AND l_rtdt001=g_rtds2_d_t.rtdt001 THEN
                        CONTINUE WHILE
                     END IF
                     INSERT INTO rtdt_t(rtdtent,rtdtdocno,rtdt001)
                        VALUES(g_enterprise,g_rtdr_m.rtdrdocno,l_rtdt001)
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = ""
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
   
                        NEXT FIELD rtdt001
                     ELSE
                        CALL artt406_display_rtdt001(l_rtdt001)
                     END IF
                     LET l_i1 = l_i1+1
                  END WHILE
                  LET g_qryparam.where =null
                  LET g_qryparam.state= 'i'
                  CALL g_rtds2_d.deleteElement(l_ac)
                  LET l_i1=0
                  CALL artt406_b_fill()
                  LET g_rtds2_d_t.*=g_rtds2_d[l_ac].*
                  EXIT DIALOG
            END IF
]]>
  </point>
  <point name="input.c.rtdr001" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtdr_m.rtdr001             #給予default值

            #給予arg
#            LET g_qryparam.where = " ooef302='Y'"
#            CALL q_ooef001()                                #呼叫開窗
            
            IF s_aooi500_setpoint(g_prog,'rtdr001') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdr001',g_rtdr_m.rtdrsite,'i')   #150308-00001#5  By benson add 'i'
               CALL q_ooef001_24()
            ELSE
               LET g_qryparam.where = " ooef302='Y' "
               CALL q_ooef001()
            END IF

            LET g_rtdr_m.rtdr001 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_qryparam.where = NULL
            DISPLAY g_rtdr_m.rtdr001 TO rtdr001              #顯示到畫面上
            CALL artt406_display_rtdr001()
            NEXT FIELD rtdr001                          #返回原欄位

]]>
  </point>
  <point name="input.c.rtdr003" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
            #LET g_qryparam.reqry = FALSE
            #
            #LET g_qryparam.default1 = g_rtdr_m.rtdr001             #給予default值
            #
            ##給予arg
            #
            #IF s_aooi500_setpoint(g_prog,'rtdr003') THEN
            #   LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdr003',g_rtdr_m.rtdr003,'i')   #150308-00001#5  By benson add 'i'
            #   CALL q_ooef001_24()
            #ELSE
            #   LET g_qryparam.where = " ooef208='Y' "
            #   CALL q_ooef001()
            #END IF
            #
            #LET g_rtdr_m.rtdr003 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_qryparam.where = NULL
            #DISPLAY g_rtdr_m.rtdr003 TO rtdr003              #顯示到畫面上
            #CALL s_desc_get_department_desc(g_rtdr_m.rtdr003) RETURNING g_rtdr_m.rtdr003_desc
            #DISPLAY BY NAME g_rtdr_m.rtdr003_desc 
            #NEXT FIELD rtdr003                          #返回原欄位]]>
  </point>
  <point name="input.c.rtdr005" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtdr_m.rtdr005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooef019()                                #呼叫開窗

            LET g_rtdr_m.rtdr005 = g_qryparam.return1              

            DISPLAY g_rtdr_m.rtdr005 TO rtdr005              #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtdr_m.rtdr005
            CALL ap_ref_array2(g_ref_fields,"SELECT DISTINCT ooall004 FROM ooall_t WHERE ooall001 = '2' AND ooall003='"||g_dlang||"' AND ooallent='"||g_enterprise||"' AND ooall002=?","") RETURNING g_rtn_fields
            LET g_rtdr_m.rtdr005_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtdr_m.rtdr005_desc

            NEXT FIELD rtdr005                          #返回原欄位

]]>
  </point>
  <point name="input.c.rtdrsite" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            #ken---add---str 需求單號：141208-00001 項次：15
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtdr_m.rtdrsite             #給予default值

            #給予arg
            #LET g_qryparam.arg1 = "" #

            LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdrsite',g_rtdr_m.rtdrsite,'i')   #150308-00001#5  By benson add 'i'
            CALL q_ooef001_24()                                #呼叫開窗

            LET g_rtdr_m.rtdrsite = g_qryparam.return1              

            DISPLAY g_rtdr_m.rtdrsite TO rtdrsite              #

            NEXT FIELD rtdrsite                          #返回原欄位
            #ken---add---end
]]>
  </point>
  <point name="input.define" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_count1         LIKE type_t.num5
   DEFINE  l_i1             LIKE type_t.num5
   DEFINE  l_rtdt001        LIKE rtdt_t.rtdt001 
   DEFINE  tok              base.stringtokenizer
   DEFINE  l_success        LIKE type_t.num5
   DEFINE  l_errno          LIKE type_t.chr10
   DEFINE   l_ooef019      LIKE ooef_t.ooef019]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  IF p_cmd = 'a' THEN
                     CALL artt406_create_rtdr002()
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "g_rtdt_d"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
  
                        CALL s_transaction_end('N','0')
                        RETURN
                     END IF
                  END IF]]>
  </point>
  <point name="input.head.b_insert" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  IF NOT cl_null(g_rtdr_m.rtdrdocno) THEN
                    #CALL s_aooi200_gen_docno(g_site,g_rtdr_m.rtdrdocno,g_rtdr_m.rtdrdocdt,g_prog) #sakura mark
                     CALL s_aooi200_gen_docno(g_rtdr_m.rtdrsite,g_rtdr_m.rtdrdocno,g_rtdr_m.rtdrdocdt,g_prog) #sakura add
                     RETURNING  g_success,g_rtdr_m.rtdrdocno
                     IF g_success<>'1' THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "amm-00001"
                        LET g_errparam.extend = g_rtdr_m.rtdrdocno
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        NEXT FIELD rtdrdocno
                     ELSE
                        IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtdr_t WHERE "||"rtdrent = '" ||g_enterprise|| "' AND "||"rtdrdocno = '"||g_rtdr_m.rtdrdocno ||"'",'std-00004',0) THEN 
                           LET g_rtdr_m.rtdrdocno = g_rtdr_m_t.rtdrdocno
                           NEXT FIELD CURRENT
                        END IF    
                                      
                     END IF
                  END IF 
                  CALL cl_set_comp_entry("rtdrdocno",false)
#                  LET g_rtdrdocno_t = g_rtdr_m.rtdrdocno
                  LET g_rtdr_m.rtdrunit = g_rtdr_m.rtdrsite #ken---add 需求單號：141208-00001 項次：15]]>
  </point>
  <point name="input.m.before_input" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL artt406_set_entry(p_cmd)
            CALL artt406_set_no_entry(p_cmd)]]>
  </point>
  <point name="input.next_field" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            NEXT FIELD rtdrsite #sakura add]]>
  </point>
  <point name="insert.default" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_rtdr_m.rtdrstus = "N"
#      LET g_rtdr_m.rtdr003 = g_site
      LET g_site_flag = FALSE
      #CALL s_aooi500_default(g_prog,'rtdr003',g_rtdr_m.rtdr003)
      #   RETURNING l_insert,g_rtdr_m.rtdr003
      #IF NOT l_insert THEN
      #   RETURN
      #END IF
      #ken---add---str 需求單號：141208-00001 項次：15
      CALL s_aooi500_default(g_prog,'rtdrsite',g_rtdr_m.rtdrsite)
         RETURNING l_insert,g_rtdr_m.rtdrsite
      IF NOT l_insert THEN
         RETURN
      END IF
      LET g_rtdr_m.rtdrunit = g_rtdr_m.rtdrsite
      #預設單據的單別
      LET r_success = ''
      LET r_doctype = ''
      CALL s_arti200_get_def_doc_type(g_rtdr_m.rtdrsite,g_prog,'1')
           RETURNING r_success,r_doctype
      LET g_rtdr_m.rtdrdocno = r_doctype
      
      CALL s_desc_get_department_desc(g_rtdr_m.rtdrsite) RETURNING g_rtdr_m.rtdrsite_desc
      DISPLAY BY NAME g_rtdr_m.rtdrsite_desc 
      #ken---add---end 
      
      LET g_rtdr_m.rtdrdocdt = g_today
      #INITIALIZE g_ref_fields TO NULL
      #LET g_ref_fields[1] = g_rtdr_m.rtdr003
      #CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      #LET g_rtdr_m.rtdr003_desc = '', g_rtn_fields[1] , ''
      #DISPLAY BY NAME g_rtdr_m.rtdr003_desc
      LET g_rtdr_m_t.*  = g_rtdr_m.*
#      LET g_rtdr_m.rtdr003 = s_default_rtda001(g_prog)  #生命周期栏位赋值
      LET g_rtdr_m.rtdr003 = s_life_cycle_default(g_prog,'1') #生命周期栏位赋值
      #税区别赋值
      SELECT ooef019 INTO g_rtdr_m.rtdr005
        FROM ooef_t
       WHERE ooef001 = g_rtdr_m.rtdrsite
         AND ooefent = g_enterprise
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtdr_m.rtdr005
      CALL ap_ref_array2(g_ref_fields,"SELECT DISTINCT ooall004 FROM ooall_t WHERE ooall001 = '2' AND ooall003='"||g_dlang||"' AND ooallent='"||g_enterprise||"' AND ooall002=?","") RETURNING g_rtn_fields
      LET g_rtdr_m.rtdr005_desc = g_rtn_fields[1]
      DISPLAY BY NAME g_rtdr_m.rtdr005_desc   
         ]]>
  </point>
  <point name="insert.define" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_insert      LIKE type_t.num5
   #ken---add---str 需求單號：141208-00001 項次：15
   DEFINE r_success     LIKE type_t.num5
   DEFINE r_doctype     LIKE rtai_t.rtai004
   #ken---add---end]]>
  </point>
  <point name="main.before_close" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="main.define" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5      #150308-00001#5  By benson 150309]]>
  </point>
  <point name="main.exit" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_drop_temp() RETURNING l_success      #150308-00001#5  By benson 150309
   CALL artt406_drop_imaa009_tmp() 
   CALL artt406_drop_rtdx_tmp()     ]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#   SELECT ooef004 INTO g_ooef004 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site]]>
  </point>
  <point name="menu.prog_rtdr002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF g_rtdr_m.rtdrstus MATCHES "[DR]" THEN 
         LET g_rtdr_m.rtdrstus = "N"
      END IF]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_rtdr_m.rtdrstus MATCHES "[DR]" THEN 
      LET g_rtdr_m.rtdrstus = "N"
   END IF            
               IF g_rtdr_m.rtdrstus<>'N' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "apm-00035"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF]]>
  </point>
  <point name="reproduce.a.rtdrdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF  NOT cl_null(l_newno) THEN  
            IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtdr_t WHERE "||"rtdrent = '" ||g_enterprise|| "' AND "||"rtdrdocno = '"||l_newno ||"'",'std-00004',0) THEN 
               NEXT FIELD CURRENT
            END IF
            CALL artt406_rtdrdocno(l_newno)
            IF NOT cl_null(g_errno) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = g_errno
               LET g_errparam.extend = l_newno
               LET g_errparam.popup = TRUE
               CALL cl_err()

               NEXT FIELD rtdrdocno
            END IF
         END IF
      ON ACTION controlp INFIELD rtdrdocno
            #add-point:ON ACTION controlp INFIELD rtdrdocno
            LET g_qryparam.state = "i" 
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtdr_m.rtdrdocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #
            LET g_qryparam.arg2 = "artt406" #

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_rtdr_m.rtdrdocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_rtdr_m.rtdrdocno TO rtdrdocno              #顯示到畫面上

            NEXT FIELD rtdrdocno    ]]>
  </point>
  <point name="reproduce.define" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_insert      LIKE type_t.num5
   DEFINE l_success     LIKE type_t.num5 #ken---add 需求單號：141208-00001 項次：15]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_rtdr_m.rtdrcnfid = "" 
   LET g_rtdr_m.rtdrcnfdt = ""
#   LET g_rtdr_m.rtdr003 = g_site
   #CALL s_aooi500_default(g_prog,'rtdr003',g_rtdr_m.rtdr003)
   #   RETURNING l_insert,g_rtdr_m.rtdr003
   #IF NOT l_insert THEN
   #   RETURN
   #END IF
   #ken---add---str 需求單號：141208-00001 項次：15
   CALL s_aooi500_default(g_prog,'rtdrsite',g_rtdr_m.rtdrsite)
      RETURNING l_insert,g_rtdr_m.rtdrsite
   IF NOT l_insert THEN
      RETURN
   END IF
   
   CALL s_arti200_get_def_doc_type(g_rtdr_m.rtdrsite,g_prog,'1')
      RETURNING l_success,g_rtdr_m.rtdrdocno
   #ken---add---end
   LET g_rtdr_m.rtdrdocdt = g_today
   #INITIALIZE g_ref_fields TO NULL
   #LET g_ref_fields[1] = g_rtdr_m.rtdr003
   #CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   #LET g_rtdr_m.rtdr003_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_rtdr_m.rtdr003_desc
   LET g_rtdr_m.rtdrstus = "N"]]>
  </point>
  <point name="reproduce.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_master.rtdrdocdt = g_today
   CALL s_aooi200_gen_docno(g_site,l_master.rtdrdocno,g_today,g_prog)
   RETURNING g_success,l_master.rtdrdocno
   IF g_success<>'1' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "apm-00003"
      LET g_errparam.extend = l_master.rtdrdocno
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CALL s_transaction_end('N','0')
      RETURN
   ELSE
      IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtdr_t WHERE "||"rtdrent = '" ||g_enterprise|| "' AND "||"rtdrdocno = '"||l_master.rtdrdocno ||"'",'std-00004',0) THEN 
         CALL s_transaction_end('N','0')
         RETURN
      END IF   
   END IF
   LET l_newno = l_master.rtdrdocno
   LET l_master.rtdrstus = "N"]]>
  </point>
  <point name="send.before_send" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_artt406_conf_chk(g_rtdr_m.rtdrdocno,g_rtdr_m.rtdrstus) RETURNING l_success,g_errno
   IF l_success THEN
            
   ELSE
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = g_errno
      LET g_errparam.extend = g_rtdr_m.rtdrdocno
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE artt406_cl
      CALL s_transaction_end('N','0')
      RETURN  FALSE          
   END IF]]>
  </point>
  <point name="send.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_rtdr_m.rtdrstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

]]>
  </point>
  <point name="set_entry.after_control" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("rtdr002",TRUE)
   CALL cl_set_comp_entry("rtdr005",TRUE)]]>
  </point>
  <point name="set_entry.field_control" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #CALL cl_set_comp_entry("rtdr003",TRUE) #ken_mark
      CALL cl_set_comp_entry("rtdrsite",TRUE)
      CALL cl_set_comp_entry("rtdrdocdt",TRUE)]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   let l_count = 0
   SELECT count(*) INTO l_count FROM rtdt_t WHERE rtdtent = g_enterprise
      AND rtdtdocno = g_rtdr_m.rtdrdocno
   IF l_count > 0 THEN
      CALL cl_set_comp_entry("rtdr002",FALSE)
      CALL cl_set_comp_entry("rtdr005",FALSE)
   END IF
   #ken---add---str 需求單號：141208-00001 項次：15
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("rtdrsite",FALSE)
      CALL cl_set_comp_entry("rtdrdocno",FALSE)
      CALL cl_set_comp_entry("rtdrdocdt",FALSE)    
   END IF
   
   IF NOT s_aooi500_comp_entry(g_prog,'rtdrsite') OR g_site_flag THEN
      CALL cl_set_comp_entry("rtdrsite",FALSE)
   END IF 
   #ken---add---end  
   #IF NOT s_aooi500_comp_entry(g_prog,'rtdr003') OR g_site_flag THEN
   #   CALL cl_set_comp_entry("rtdr003",FALSE)
   #END IF
   #add geza 2015/03/30
   IF NOT cl_null(g_rtdr_m.rtdr002) THEN 
      CALL cl_set_comp_entry("rtdr005",FALSE)   
   END IF
   #商品销售明细单身有资料，税区别栏位关闭  geza 2015/03/31
   LET l_count = 0
   SELECT count(*) INTO l_count FROM rtds_t WHERE rtdsent = g_enterprise
      AND rtdsdocno = g_rtdr_m.rtdrdocno
   IF l_count > 0 THEN
      CALL cl_set_comp_entry("rtdr002",FALSE)
      CALL cl_set_comp_entry("rtdr005",FALSE)
   END IF]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   define l_count  like type_t.num5]]>
  </point>
  <point name="show.body.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            

#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_rtds_d[l_ac].rtds006
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_rtds_d[l_ac].rtds006_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_rtds_d[l_ac].rtds006_desc
#            
            CALL artt406_display_rtds001(g_rtds_d[l_ac].rtds001,'u')
#            
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_rtds_d[l_ac].rtds007
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_rtds_d[l_ac].rtds007_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_rtds_d[l_ac].rtds007_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_rtds_d[l_ac].rtds014
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_rtds_d[l_ac].rtds014_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_rtds_d[l_ac].rtds014_desc
            
            CALL artt406_display_rtds003(g_rtds_d[l_ac].rtds003)
]]>
  </point>
  <point name="show.head.reference" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_rtdr_m.rtdr003
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_rtdr_m.rtdr003_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_rtdr_m.rtdr003_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_rtdr_m.rtdr001
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_rtdr_m.rtdr001_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_rtdr_m.rtdr001_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_rtdr_m.rtdr002
#            CALL ap_ref_array2(g_ref_fields,"SELECT rtaal003 FROM rtaal_t WHERE rtaalent='"||g_enterprise||"' AND rtaal001=? AND rtaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_rtdr_m.rtdr002_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_rtdr_m.rtdr002_desc
#            
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_rtdr_m.rtdrownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_rtdr_m.rtdrownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_rtdr_m.rtdrownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_rtdr_m.rtdrowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_rtdr_m.rtdrowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_rtdr_m.rtdrowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_rtdr_m.rtdrcrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_rtdr_m.rtdrcrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_rtdr_m.rtdrcrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_rtdr_m.rtdrcrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_rtdr_m.rtdrcrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_rtdr_m.rtdrcrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_rtdr_m.rtdrmodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_rtdr_m.rtdrmodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_rtdr_m.rtdrmodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_rtdr_m.rtdrcnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_rtdr_m.rtdrcnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_rtdr_m.rtdrcnfid_desc
#            
            SELECT rtaa003 INTO g_rtdr_m.rtdr005 FROM rtaa_t WHERE rtaa001 = g_rtdr_m.rtdr002
               AND rtaaent = g_enterprise
      
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtdr_m.rtdr005
            CALL ap_ref_array2(g_ref_fields,"SELECT DISTINCT ooall004 FROM ooall_t WHERE ooall001 = '2' AND ooall003='"||g_dlang||"' AND ooallent='"||g_enterprise||"' AND ooall002=?","") RETURNING g_rtn_fields
            LET g_rtdr_m.rtdr005_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtdr_m.rtdr005_desc 
            DISPLAY BY NAME g_rtdr_m.rtdr005
#]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_rtdr_m.rtdrstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)   
   END IF]]>
  </point>
  <point name="statechange.b_update" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_success = TRUE
   SELECT rtdrstus INTO g_rtdr_m.rtdrstus FROM rtdr_t WHERE rtdrdocno = g_rtdr_m.rtdrdocno
      AND rtdrent = g_enterprise 
   CASE lc_state 
      WHEN 'Y'          
         #150324-00005#1 Add By Ken 150331      
         CALL cl_err_collect_init()
         CALL artt406_rtad005_chk(g_rtdr_m.rtdrdocno) RETURNING l_success,l_ooaa002
         CALL cl_err_collect_show() 
         IF NOT l_success AND l_ooaa002 = 3 THEN
            RETURN
         END IF       
         #150324-00005#1 Add         
         
         CALL s_artt406_conf_chk(g_rtdr_m.rtdrdocno,g_rtdr_m.rtdrstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               #150402-00005#14 2015/04/23 sakura add---S
               CALL cl_err_collect_init()
               #取錯誤訊息欄位說明
               CALL s_azzi902_get_gzzd("artt406","lbl_rtds001") RETURNING l_colname_1, l_comment_1
               CALL s_azzi902_get_gzzd("artt406","lbl_rtdt001") RETURNING l_colname_2, l_comment_2
               LET g_coll_title[1] = l_colname_1 #商品編號               
               LET g_coll_title[2] = l_colname_2 #門店編號               
               #150402-00005#14 2015/04/23 sakura add---E
               CALL s_transaction_begin()
               CALL s_artt406_conf_upd(g_rtdr_m.rtdrdocno) RETURNING l_success
               CALL cl_err_collect_show() #150402-00005#14 2015/04/23 sakura add
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')   
               END IF
            ELSE
               RETURN
            END IF            
         ELSE
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = g_rtdr_m.rtdrdocno
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN            
         END IF
                
      WHEN 'X'
          
         CALL s_artt406_void_chk(g_rtdr_m.rtdrdocno,g_rtdr_m.rtdrstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_artt406_void_upd(g_rtdr_m.rtdrdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = g_rtdr_m.rtdrdocno
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN    
         END IF        
   END CASE
]]>
  </point>
  <point name="statechange.before" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #150402-00005#14 2015/04/23 sakura modify---S
   IF g_rtdr_m.rtdrstus = 'Y' OR g_rtdr_m.rtdrstus = 'X' THEN
      RETURN
   END IF
   #IF g_rtdr_m.rtdrstus = 'X' THEN
   #   RETURN
   #END IF
   #150402-00005#14 2015/04/23 sakura modify---E
   IF g_rtdr_m.rtdrstus = 'C' THEN  #結案狀態
      RETURN
   END IF
   LET g_rtdrdocno_t = g_rtdr_m.rtdrdocno]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#      CALL cl_set_act_visible("unconfirmed,invalid,confirmed", true)
#      IF g_rtdr_m.rtdrstus = 'N' THEN
#         CALL cl_set_act_visible("invalid,confirmed", true)
#         CALL cl_set_act_visible("unconfirmed", FALSE)      
#      END IF
#      IF g_rtdr_m.rtdrstus = 'Y' THEN
#         CALL cl_set_act_visible("unconfirmed,invalid,confirmed", FALSE)      
#      END IF
#      IF g_rtdr_m.rtdrstus = 'X' THEN
#         CALL cl_set_act_visible("invalid,confirmed,unconfirmed", FALSE)
#      END IF
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE g_rtdr_m.rtdrstus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE) 
          
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)

      END CASE  ]]>
  </point>
  <point name="statechange.define" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5
   DEFINE l_ooaa002   LIKE ooaa_t.ooaa002
   DEFINE l_colname_1 STRING #150402-00005#14 2015/04/23 sakura add
   DEFINE l_colname_2 STRING #150402-00005#14 2015/04/23 sakura add
   DEFINE l_comment_1 STRING #150402-00005#14 2015/04/23 sakura add
   DEFINE l_comment_2 STRING #150402-00005#14 2015/04/23 sakura add   ]]>
  </point>
  <section id="artt406.action_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION artt406_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="artt406.b_fill" ver="17" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION artt406_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_rtds_d.clear()    #g_rtds_d 單頭及單身 
   CALL g_rtds2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF artt406_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE rtdsseq,rtds002,rtds001,rtds003,rtds004,rtds015,rtds005,rtds006, 
             rtds007,rtds008,rtds009,rtds014,rtds010,rtds011,rtds012,rtds013 ,t1.oocal003 ,t2.oocal003 , 
             t3.oocal003 FROM rtds_t",   
                     " INNER JOIN rtdr_t ON rtdrdocno = rtdsdocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN oocal_t t1 ON t1.oocalent='"||g_enterprise||"' AND t1.oocal001=rtds006 AND t1.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t2 ON t2.oocalent='"||g_enterprise||"' AND t2.oocal001=rtds007 AND t2.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent='"||g_enterprise||"' AND t3.oocal001=rtds014 AND t3.oocal002='"||g_dlang||"' ",
 
                     " WHERE rtdsent=? AND rtdsdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtds_t.rtdsseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt406_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR artt406_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_rtdr_m.rtdrdocno
                                               
      FOREACH b_fill_cs INTO g_rtds_d[l_ac].rtdsseq,g_rtds_d[l_ac].rtds002,g_rtds_d[l_ac].rtds001,g_rtds_d[l_ac].rtds003, 
          g_rtds_d[l_ac].rtds004,g_rtds_d[l_ac].rtds015,g_rtds_d[l_ac].rtds005,g_rtds_d[l_ac].rtds006, 
          g_rtds_d[l_ac].rtds007,g_rtds_d[l_ac].rtds008,g_rtds_d[l_ac].rtds009,g_rtds_d[l_ac].rtds014, 
          g_rtds_d[l_ac].rtds010,g_rtds_d[l_ac].rtds011,g_rtds_d[l_ac].rtds012,g_rtds_d[l_ac].rtds013, 
          g_rtds_d[l_ac].rtds006_desc,g_rtds_d[l_ac].rtds007_desc,g_rtds_d[l_ac].rtds014_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF artt406_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE rtdt001 ,t5.ooefl003 FROM rtdt_t",   
                     " INNER JOIN rtdr_t ON rtdrdocno = rtdtdocno ",
 
                     "",
                     
                                    " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=rtdt001 AND t5.ooefl002='"||g_dlang||"' ",
 
                     " WHERE rtdtent=? AND rtdtdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtdt_t.rtdt001"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt406_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR artt406_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_rtdr_m.rtdrdocno
                                               
      FOREACH b_fill_cs2 INTO g_rtds2_d[l_ac].rtdt001,g_rtds2_d[l_ac].rtdt001_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_rtds_d.deleteElement(g_rtds_d.getLength())
   CALL g_rtds2_d.deleteElement(g_rtds2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE artt406_pb
   FREE artt406_pb2
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_rtds_d.getLength()
      LET g_rtds_d_mask_o[l_ac].* =  g_rtds_d[l_ac].*
      CALL artt406_rtds_t_mask()
      LET g_rtds_d_mask_n[l_ac].* =  g_rtds_d[l_ac].*
   END FOR
   
   LET g_rtds2_d_mask_o.* =  g_rtds2_d.*
   FOR l_ac = 1 TO g_rtds2_d.getLength()
      LET g_rtds2_d_mask_o[l_ac].* =  g_rtds2_d[l_ac].*
      CALL artt406_rtdt_t_mask()
      LET g_rtds2_d_mask_n[l_ac].* =  g_rtds2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="artt406.b_fill2" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION artt406_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL artt406_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="artt406.browser_fill" ver="26" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION artt406_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE rtdrdocno ",
                      " FROM rtdr_t ",
                      " ",
                      " LEFT JOIN rtds_t ON rtdsent = rtdrent AND rtdrdocno = rtdsdocno ", "  ",
                      #add-point:browser_fill段sql(rtds_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN rtdt_t ON rtdtent = rtdrent AND rtdrdocno = rtdtdocno", "  ",
                      #add-point:browser_fill段sql(rtdt_t1)
                      {<point name="browser_fill.cnt.join.rtdt_t1"/>}
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " WHERE rtdrent = '" ||g_enterprise|| "' AND rtdsent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("rtdr_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE rtdrdocno ",
                      " FROM rtdr_t ", 
                      "  ",
                      "  ",
                      " WHERE rtdrent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("rtdr_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_rtdr_m.* TO NULL
      CALL g_rtds_d.clear()        
      CALL g_rtds2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.rtdrsite,t0.rtdrdocno,t0.rtdrdocdt,t0.rtdr003,t0.rtdr001,t0.rtdr002,t0.rtdr004 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.rtdrstus,t0.rtdrsite,t0.rtdrdocno,t0.rtdrdocdt,t0.rtdr003,t0.rtdr001, 
       t0.rtdr002,t0.rtdr004,t1.ooefl003 ,t2.ooefl003 ,t3.ooefl003 ,t4.rtaal003 ",
               " FROM rtdr_t t0",
               "  ",
               "  LEFT JOIN rtds_t ON rtdsent = rtdrent AND rtdrdocno = rtdsdocno ", "  ", 
               #add-point:browser_fill段sql(rtds_t1)
               {<point name="browser_fill.join.rtds_t1"/>}
               #end add-point
               "  LEFT JOIN rtdt_t ON rtdtent = rtdrent AND rtdrdocno = rtdtdocno", "  ", 
               #add-point:browser_fill段sql(rtdt_t1)
               {<point name="browser_fill.join.rtdt_t1"/>}
               #end add-point
 
 
 
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.rtdrsite AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.rtdr003 AND t2.ooefl002='"||g_lang||"' ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.rtdr001 AND t3.ooefl002='"||g_lang||"' ",
               " LEFT JOIN rtaal_t t4 ON t4.rtaalent='"||g_enterprise||"' AND t4.rtaal001=t0.rtdr002 AND t4.rtaal002='"||g_lang||"' ",
 
               " WHERE t0.rtdrent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("rtdr_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY rtdrdocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"rtdr_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_rtdrsite,g_browser[g_cnt].b_rtdrdocno, 
       g_browser[g_cnt].b_rtdrdocdt,g_browser[g_cnt].b_rtdr003,g_browser[g_cnt].b_rtdr001,g_browser[g_cnt].b_rtdr002, 
       g_browser[g_cnt].b_rtdr004,g_browser[g_cnt].b_rtdrsite_desc,g_browser[g_cnt].b_rtdr003_desc,g_browser[g_cnt].b_rtdr001_desc, 
       g_browser[g_cnt].b_rtdr002_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL artt406_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_rtdrdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="artt406.construct" ver="18" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION artt406_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_rtdr_m.* TO NULL
   CALL g_rtds_d.clear()        
   CALL g_rtds2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON rtdrsite,rtdrdocdt,rtdrdocno,rtdr000,rtdrunit,rtdr001,rtdr002,rtdr005, 
          rtdr003,rtdr004,rtdrstus,rtdrownid,rtdrowndp,rtdrcrtid,rtdrcrtdp,rtdrcrtdt,rtdrmodid,rtdrmoddt, 
          rtdrcnfid,rtdrcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<rtdrcrtdt>>----
         AFTER FIELD rtdrcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<rtdrmoddt>>----
         AFTER FIELD rtdrmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtdrcnfdt>>----
         AFTER FIELD rtdrcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtdrpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.rtdrsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdrsite
            #add-point:ON ACTION controlp INFIELD rtdrsite
            {<point name="construct.c.rtdrsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrsite
            #add-point:BEFORE FIELD rtdrsite
            {<point name="construct.b.rtdrsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdrsite
            
            #add-point:AFTER FIELD rtdrsite
            {<point name="construct.a.rtdrsite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrdocdt
            #add-point:BEFORE FIELD rtdrdocdt
            {<point name="construct.b.rtdrdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdrdocdt
            
            #add-point:AFTER FIELD rtdrdocdt
            {<point name="construct.a.rtdrdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtdrdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdrdocdt
            #add-point:ON ACTION controlp INFIELD rtdrdocdt
            {<point name="construct.c.rtdrdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.rtdrdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdrdocno
            #add-point:ON ACTION controlp INFIELD rtdrdocno
            {<point name="construct.c.rtdrdocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrdocno
            #add-point:BEFORE FIELD rtdrdocno
            {<point name="construct.b.rtdrdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdrdocno
            
            #add-point:AFTER FIELD rtdrdocno
            {<point name="construct.a.rtdrdocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdr000
            #add-point:BEFORE FIELD rtdr000
            {<point name="construct.b.rtdr000" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdr000
            
            #add-point:AFTER FIELD rtdr000
            {<point name="construct.a.rtdr000" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtdr000
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdr000
            #add-point:ON ACTION controlp INFIELD rtdr000
            {<point name="construct.c.rtdr000" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrunit
            #add-point:BEFORE FIELD rtdrunit
            {<point name="construct.b.rtdrunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdrunit
            
            #add-point:AFTER FIELD rtdrunit
            {<point name="construct.a.rtdrunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtdrunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdrunit
            #add-point:ON ACTION controlp INFIELD rtdrunit
            {<point name="construct.c.rtdrunit" />}
            #END add-point
 
         #Ctrlp:construct.c.rtdr001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdr001
            #add-point:ON ACTION controlp INFIELD rtdr001
            {<point name="construct.c.rtdr001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdr001
            #add-point:BEFORE FIELD rtdr001
            {<point name="construct.b.rtdr001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdr001
            
            #add-point:AFTER FIELD rtdr001
            {<point name="construct.a.rtdr001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtdr002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdr002
            #add-point:ON ACTION controlp INFIELD rtdr002
            {<point name="construct.c.rtdr002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdr002
            #add-point:BEFORE FIELD rtdr002
            {<point name="construct.b.rtdr002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdr002
            
            #add-point:AFTER FIELD rtdr002
            {<point name="construct.a.rtdr002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtdr005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdr005
            #add-point:ON ACTION controlp INFIELD rtdr005
            {<point name="construct.c.rtdr005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdr005
            #add-point:BEFORE FIELD rtdr005
            {<point name="construct.b.rtdr005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdr005
            
            #add-point:AFTER FIELD rtdr005
            {<point name="construct.a.rtdr005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtdr003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdr003
            #add-point:ON ACTION controlp INFIELD rtdr003
            {<point name="construct.c.rtdr003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdr003
            #add-point:BEFORE FIELD rtdr003
            {<point name="construct.b.rtdr003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdr003
            
            #add-point:AFTER FIELD rtdr003
            {<point name="construct.a.rtdr003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdr004
            #add-point:BEFORE FIELD rtdr004
            {<point name="construct.b.rtdr004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdr004
            
            #add-point:AFTER FIELD rtdr004
            {<point name="construct.a.rtdr004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtdr004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdr004
            #add-point:ON ACTION controlp INFIELD rtdr004
            {<point name="construct.c.rtdr004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrstus
            #add-point:BEFORE FIELD rtdrstus
            {<point name="construct.b.rtdrstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdrstus
            
            #add-point:AFTER FIELD rtdrstus
            {<point name="construct.a.rtdrstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtdrstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdrstus
            #add-point:ON ACTION controlp INFIELD rtdrstus
            {<point name="construct.c.rtdrstus" />}
            #END add-point
 
         #Ctrlp:construct.c.rtdrownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdrownid
            #add-point:ON ACTION controlp INFIELD rtdrownid
            {<point name="construct.c.rtdrownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrownid
            #add-point:BEFORE FIELD rtdrownid
            {<point name="construct.b.rtdrownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdrownid
            
            #add-point:AFTER FIELD rtdrownid
            {<point name="construct.a.rtdrownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtdrowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdrowndp
            #add-point:ON ACTION controlp INFIELD rtdrowndp
            {<point name="construct.c.rtdrowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrowndp
            #add-point:BEFORE FIELD rtdrowndp
            {<point name="construct.b.rtdrowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdrowndp
            
            #add-point:AFTER FIELD rtdrowndp
            {<point name="construct.a.rtdrowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtdrcrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdrcrtid
            #add-point:ON ACTION controlp INFIELD rtdrcrtid
            {<point name="construct.c.rtdrcrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrcrtid
            #add-point:BEFORE FIELD rtdrcrtid
            {<point name="construct.b.rtdrcrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdrcrtid
            
            #add-point:AFTER FIELD rtdrcrtid
            {<point name="construct.a.rtdrcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtdrcrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdrcrtdp
            #add-point:ON ACTION controlp INFIELD rtdrcrtdp
            {<point name="construct.c.rtdrcrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrcrtdp
            #add-point:BEFORE FIELD rtdrcrtdp
            {<point name="construct.b.rtdrcrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdrcrtdp
            
            #add-point:AFTER FIELD rtdrcrtdp
            {<point name="construct.a.rtdrcrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrcrtdt
            #add-point:BEFORE FIELD rtdrcrtdt
            {<point name="construct.b.rtdrcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.rtdrmodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdrmodid
            #add-point:ON ACTION controlp INFIELD rtdrmodid
            {<point name="construct.c.rtdrmodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrmodid
            #add-point:BEFORE FIELD rtdrmodid
            {<point name="construct.b.rtdrmodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdrmodid
            
            #add-point:AFTER FIELD rtdrmodid
            {<point name="construct.a.rtdrmodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrmoddt
            #add-point:BEFORE FIELD rtdrmoddt
            {<point name="construct.b.rtdrmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.rtdrcnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdrcnfid
            #add-point:ON ACTION controlp INFIELD rtdrcnfid
            {<point name="construct.c.rtdrcnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrcnfid
            #add-point:BEFORE FIELD rtdrcnfid
            {<point name="construct.b.rtdrcnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdrcnfid
            
            #add-point:AFTER FIELD rtdrcnfid
            {<point name="construct.a.rtdrcnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrcnfdt
            #add-point:BEFORE FIELD rtdrcnfdt
            {<point name="construct.b.rtdrcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON rtdsseq,rtds002,rtds001,imaal003,imaal004,imaa009,rtds003,rtds004,rtds015, 
          rtds005,rtds006,rtds007,rtds008,rtds009,cost,rtds014,rtds010,rtds011,rtds012,rtds013
           FROM s_detail1[1].rtdsseq,s_detail1[1].rtds002,s_detail1[1].rtds001,s_detail1[1].imaal003, 
               s_detail1[1].imaal004,s_detail1[1].imaa009,s_detail1[1].rtds003,s_detail1[1].rtds004, 
               s_detail1[1].rtds015,s_detail1[1].rtds005,s_detail1[1].rtds006,s_detail1[1].rtds007,s_detail1[1].rtds008, 
               s_detail1[1].rtds009,s_detail1[1].cost,s_detail1[1].rtds014,s_detail1[1].rtds010,s_detail1[1].rtds011, 
               s_detail1[1].rtds012,s_detail1[1].rtds013
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdsseq
            #add-point:BEFORE FIELD rtdsseq
            {<point name="construct.b.page1.rtdsseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdsseq
            
            #add-point:AFTER FIELD rtdsseq
            {<point name="construct.a.page1.rtdsseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtdsseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdsseq
            #add-point:ON ACTION controlp INFIELD rtdsseq
            {<point name="construct.c.page1.rtdsseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.rtds002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds002
            #add-point:ON ACTION controlp INFIELD rtds002
            {<point name="construct.c.page1.rtds002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds002
            #add-point:BEFORE FIELD rtds002
            {<point name="construct.b.page1.rtds002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds002
            
            #add-point:AFTER FIELD rtds002
            {<point name="construct.a.page1.rtds002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtds001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds001
            #add-point:ON ACTION controlp INFIELD rtds001
            {<point name="construct.c.page1.rtds001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds001
            #add-point:BEFORE FIELD rtds001
            {<point name="construct.b.page1.rtds001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds001
            
            #add-point:AFTER FIELD rtds001
            {<point name="construct.a.page1.rtds001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaal003
            #add-point:BEFORE FIELD imaal003
            {<point name="construct.b.page1.imaal003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaal003
            
            #add-point:AFTER FIELD imaal003
            {<point name="construct.a.page1.imaal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.imaal003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaal003
            #add-point:ON ACTION controlp INFIELD imaal003
            {<point name="construct.c.page1.imaal003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaal004
            #add-point:BEFORE FIELD imaal004
            {<point name="construct.b.page1.imaal004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaal004
            
            #add-point:AFTER FIELD imaal004
            {<point name="construct.a.page1.imaal004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.imaal004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaal004
            #add-point:ON ACTION controlp INFIELD imaal004
            {<point name="construct.c.page1.imaal004" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.imaa009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaa009
            #add-point:ON ACTION controlp INFIELD imaa009
            {<point name="construct.c.page1.imaa009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaa009
            #add-point:BEFORE FIELD imaa009
            {<point name="construct.b.page1.imaa009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaa009
            
            #add-point:AFTER FIELD imaa009
            {<point name="construct.a.page1.imaa009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtds003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds003
            #add-point:ON ACTION controlp INFIELD rtds003
            {<point name="construct.c.page1.rtds003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds003
            #add-point:BEFORE FIELD rtds003
            {<point name="construct.b.page1.rtds003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds003
            
            #add-point:AFTER FIELD rtds003
            {<point name="construct.a.page1.rtds003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds004
            #add-point:BEFORE FIELD rtds004
            {<point name="construct.b.page1.rtds004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds004
            
            #add-point:AFTER FIELD rtds004
            {<point name="construct.a.page1.rtds004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtds004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds004
            #add-point:ON ACTION controlp INFIELD rtds004
            {<point name="construct.c.page1.rtds004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds015
            #add-point:BEFORE FIELD rtds015
            {<point name="construct.b.page1.rtds015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds015
            
            #add-point:AFTER FIELD rtds015
            {<point name="construct.a.page1.rtds015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtds015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds015
            #add-point:ON ACTION controlp INFIELD rtds015
            {<point name="construct.c.page1.rtds015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds005
            #add-point:BEFORE FIELD rtds005
            {<point name="construct.b.page1.rtds005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds005
            
            #add-point:AFTER FIELD rtds005
            {<point name="construct.a.page1.rtds005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtds005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds005
            #add-point:ON ACTION controlp INFIELD rtds005
            {<point name="construct.c.page1.rtds005" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.rtds006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds006
            #add-point:ON ACTION controlp INFIELD rtds006
            {<point name="construct.c.page1.rtds006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds006
            #add-point:BEFORE FIELD rtds006
            {<point name="construct.b.page1.rtds006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds006
            
            #add-point:AFTER FIELD rtds006
            {<point name="construct.a.page1.rtds006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtds007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds007
            #add-point:ON ACTION controlp INFIELD rtds007
            {<point name="construct.c.page1.rtds007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds007
            #add-point:BEFORE FIELD rtds007
            {<point name="construct.b.page1.rtds007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds007
            
            #add-point:AFTER FIELD rtds007
            {<point name="construct.a.page1.rtds007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds008
            #add-point:BEFORE FIELD rtds008
            {<point name="construct.b.page1.rtds008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds008
            
            #add-point:AFTER FIELD rtds008
            {<point name="construct.a.page1.rtds008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtds008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds008
            #add-point:ON ACTION controlp INFIELD rtds008
            {<point name="construct.c.page1.rtds008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds009
            #add-point:BEFORE FIELD rtds009
            {<point name="construct.b.page1.rtds009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds009
            
            #add-point:AFTER FIELD rtds009
            {<point name="construct.a.page1.rtds009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtds009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds009
            #add-point:ON ACTION controlp INFIELD rtds009
            {<point name="construct.c.page1.rtds009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD cost
            #add-point:BEFORE FIELD cost
            {<point name="construct.b.page1.cost" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD cost
            
            #add-point:AFTER FIELD cost
            {<point name="construct.a.page1.cost" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.cost
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD cost
            #add-point:ON ACTION controlp INFIELD cost
            {<point name="construct.c.page1.cost" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.rtds014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds014
            #add-point:ON ACTION controlp INFIELD rtds014
            {<point name="construct.c.page1.rtds014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds014
            #add-point:BEFORE FIELD rtds014
            {<point name="construct.b.page1.rtds014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds014
            
            #add-point:AFTER FIELD rtds014
            {<point name="construct.a.page1.rtds014" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds010
            #add-point:BEFORE FIELD rtds010
            {<point name="construct.b.page1.rtds010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds010
            
            #add-point:AFTER FIELD rtds010
            {<point name="construct.a.page1.rtds010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtds010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds010
            #add-point:ON ACTION controlp INFIELD rtds010
            {<point name="construct.c.page1.rtds010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds011
            #add-point:BEFORE FIELD rtds011
            {<point name="construct.b.page1.rtds011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds011
            
            #add-point:AFTER FIELD rtds011
            {<point name="construct.a.page1.rtds011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtds011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds011
            #add-point:ON ACTION controlp INFIELD rtds011
            {<point name="construct.c.page1.rtds011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds012
            #add-point:BEFORE FIELD rtds012
            {<point name="construct.b.page1.rtds012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds012
            
            #add-point:AFTER FIELD rtds012
            {<point name="construct.a.page1.rtds012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtds012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds012
            #add-point:ON ACTION controlp INFIELD rtds012
            {<point name="construct.c.page1.rtds012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds013
            #add-point:BEFORE FIELD rtds013
            {<point name="construct.b.page1.rtds013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds013
            
            #add-point:AFTER FIELD rtds013
            {<point name="construct.a.page1.rtds013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtds013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds013
            #add-point:ON ACTION controlp INFIELD rtds013
            {<point name="construct.c.page1.rtds013" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON rtdt001
           FROM s_detail2[1].rtdt001
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #Ctrlp:construct.c.page2.rtdt001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdt001
            #add-point:ON ACTION controlp INFIELD rtdt001
            {<point name="construct.c.page2.rtdt001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdt001
            #add-point:BEFORE FIELD rtdt001
            {<point name="construct.b.page2.rtdt001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdt001
            
            #add-point:AFTER FIELD rtdt001
            {<point name="construct.a.page2.rtdt001" />}
            #END add-point
            
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "rtdr_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtds_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtdt_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="artt406.default_search" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION artt406_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " rtdrdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "rtdr_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtds_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtdt_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="artt406.delete" ver="30" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION artt406_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_rtdr_m.rtdrdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN artt406_cl USING g_enterprise,g_rtdr_m.rtdrdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt406_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE artt406_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artt406_master_referesh USING g_rtdr_m.rtdrdocno INTO g_rtdr_m.rtdrsite,g_rtdr_m.rtdrdocdt, 
       g_rtdr_m.rtdrdocno,g_rtdr_m.rtdr000,g_rtdr_m.rtdrunit,g_rtdr_m.rtdr001,g_rtdr_m.rtdr002,g_rtdr_m.rtdr005, 
       g_rtdr_m.rtdr003,g_rtdr_m.rtdr004,g_rtdr_m.rtdrstus,g_rtdr_m.rtdrownid,g_rtdr_m.rtdrowndp,g_rtdr_m.rtdrcrtid, 
       g_rtdr_m.rtdrcrtdp,g_rtdr_m.rtdrcrtdt,g_rtdr_m.rtdrmodid,g_rtdr_m.rtdrmoddt,g_rtdr_m.rtdrcnfid, 
       g_rtdr_m.rtdrcnfdt,g_rtdr_m.rtdrsite_desc,g_rtdr_m.rtdr001_desc,g_rtdr_m.rtdr002_desc,g_rtdr_m.rtdr003_desc, 
       g_rtdr_m.rtdrownid_desc,g_rtdr_m.rtdrowndp_desc,g_rtdr_m.rtdrcrtid_desc,g_rtdr_m.rtdrcrtdp_desc, 
       g_rtdr_m.rtdrmodid_desc,g_rtdr_m.rtdrcnfid_desc
   
   #檢查是否允許此動作
   IF NOT artt406_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtdr_m_mask_o.* =  g_rtdr_m.*
   CALL artt406_rtdr_t_mask()
   LET g_rtdr_m_mask_n.* =  g_rtdr_m.*
   
   CALL artt406_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL artt406_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_rtdrdocno_t = g_rtdr_m.rtdrdocno
 
 
      DELETE FROM rtdr_t
       WHERE rtdrent = g_enterprise AND rtdrdocno = g_rtdr_m.rtdrdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_rtdr_m.rtdrdocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM rtds_t
       WHERE rtdsent = g_enterprise AND rtdsdocno = g_rtdr_m.rtdrdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtds_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM rtdt_t
       WHERE rtdtent = g_enterprise AND
             rtdtdocno = g_rtdr_m.rtdrdocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtdt_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE artt406_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_rtds_d.clear() 
      CALL g_rtds2_d.clear()       
 
     
      CALL artt406_ui_browser_refresh()  
      #CALL artt406_ui_headershow()  
      #CALL artt406_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL artt406_browser_fill("")
         CALL artt406_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE artt406_cl
 
   #功能已完成,通報訊息中心
   CALL artt406_msgcentre_notify('')
    
END FUNCTION
]]>
  </section>
  <section id="artt406.delete_b" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION artt406_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM rtds_t
       WHERE rtdsent = g_enterprise AND
         rtdsdocno = ps_keys_bak[1] AND rtdsseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtds_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM rtdt_t
       WHERE rtdtent = g_enterprise AND
             rtdtdocno = ps_keys_bak[1] AND rtdt001 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtdt_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_rtds2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="artt406.description" ver="20" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:11,PR版次:11) Build-000395
#+ 
#+ Filename...: artt406
#+ Description: 自有新商品引進申請作業
#+ Creator....: 02296(2013-09-24 14:46:46)
#+ Modifier...: 06189(2015-06-22 11:37:54) -SD/PR-
]]>
  </section>
  <section id="artt406.detail_reproduce" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION artt406_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE rtds_t.*
   DEFINE l_detail2    RECORD LIKE rtdt_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE artt406_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE artt406_detail AS ",
                "SELECT * FROM rtds_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO artt406_detail SELECT * FROM rtds_t 
                                         WHERE rtdsent = g_enterprise AND rtdsdocno = g_rtdrdocno_t
 
   
   #將key修正為調整後   
   UPDATE artt406_detail 
      #更新key欄位
      SET rtdsdocno = g_rtdr_m.rtdrdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO rtds_t SELECT * FROM artt406_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt406_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE artt406_detail AS ",
      "SELECT * FROM rtdt_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO artt406_detail SELECT * FROM rtdt_t
                                         WHERE rtdtent = g_enterprise AND rtdtdocno = g_rtdrdocno_t
 
 
   #將key修正為調整後   
   UPDATE artt406_detail SET rtdtdocno = g_rtdr_m.rtdrdocno
 
  
   #將資料塞回原table   
   INSERT INTO rtdt_t SELECT * FROM artt406_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt406_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_rtdrdocno_t = g_rtdr_m.rtdrdocno
 
   
END FUNCTION
]]>
  </section>
  <section id="artt406.detail_show" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION artt406_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="artt406.fetch" ver="22" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION artt406_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_rtdr_m.rtdrdocno = g_browser[g_current_idx].b_rtdrdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE artt406_master_referesh USING g_rtdr_m.rtdrdocno INTO g_rtdr_m.rtdrsite,g_rtdr_m.rtdrdocdt, 
       g_rtdr_m.rtdrdocno,g_rtdr_m.rtdr000,g_rtdr_m.rtdrunit,g_rtdr_m.rtdr001,g_rtdr_m.rtdr002,g_rtdr_m.rtdr005, 
       g_rtdr_m.rtdr003,g_rtdr_m.rtdr004,g_rtdr_m.rtdrstus,g_rtdr_m.rtdrownid,g_rtdr_m.rtdrowndp,g_rtdr_m.rtdrcrtid, 
       g_rtdr_m.rtdrcrtdp,g_rtdr_m.rtdrcrtdt,g_rtdr_m.rtdrmodid,g_rtdr_m.rtdrmoddt,g_rtdr_m.rtdrcnfid, 
       g_rtdr_m.rtdrcnfdt,g_rtdr_m.rtdrsite_desc,g_rtdr_m.rtdr001_desc,g_rtdr_m.rtdr002_desc,g_rtdr_m.rtdr003_desc, 
       g_rtdr_m.rtdrownid_desc,g_rtdr_m.rtdrowndp_desc,g_rtdr_m.rtdrcrtid_desc,g_rtdr_m.rtdrcrtdp_desc, 
       g_rtdr_m.rtdrmodid_desc,g_rtdr_m.rtdrcnfid_desc
   
   #遮罩相關處理
   LET g_rtdr_m_mask_o.* =  g_rtdr_m.*
   CALL artt406_rtdr_t_mask()
   LET g_rtdr_m_mask_n.* =  g_rtdr_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt406_set_act_visible()   
   CALL artt406_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_rtdr_m_t.* = g_rtdr_m.*
   LET g_rtdr_m_o.* = g_rtdr_m.*
   
   LET g_data_owner = g_rtdr_m.rtdrownid      
   LET g_data_dept  = g_rtdr_m.rtdrowndp
   
   #重新顯示   
   CALL artt406_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="artt406.fill_chk" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION artt406_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="artt406.filter" ver="12" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION artt406_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON rtdrsite,rtdrdocno,rtdrdocdt,rtdr003,rtdr001,rtdr002,rtdr004
                          FROM s_browse[1].b_rtdrsite,s_browse[1].b_rtdrdocno,s_browse[1].b_rtdrdocdt, 
                              s_browse[1].b_rtdr003,s_browse[1].b_rtdr001,s_browse[1].b_rtdr002,s_browse[1].b_rtdr004 

 
         BEFORE CONSTRUCT
               DISPLAY artt406_filter_parser('rtdrsite') TO s_browse[1].b_rtdrsite
            DISPLAY artt406_filter_parser('rtdrdocno') TO s_browse[1].b_rtdrdocno
            DISPLAY artt406_filter_parser('rtdrdocdt') TO s_browse[1].b_rtdrdocdt
            DISPLAY artt406_filter_parser('rtdr003') TO s_browse[1].b_rtdr003
            DISPLAY artt406_filter_parser('rtdr001') TO s_browse[1].b_rtdr001
            DISPLAY artt406_filter_parser('rtdr002') TO s_browse[1].b_rtdr002
            DISPLAY artt406_filter_parser('rtdr004') TO s_browse[1].b_rtdr004
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL artt406_filter_show('rtdrsite')
   CALL artt406_filter_show('rtdrdocno')
   CALL artt406_filter_show('rtdrdocdt')
   CALL artt406_filter_show('rtdr003')
   CALL artt406_filter_show('rtdr001')
   CALL artt406_filter_show('rtdr002')
   CALL artt406_filter_show('rtdr004')
 
END FUNCTION
]]>
  </section>
  <section id="artt406.filter_parser" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION artt406_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="artt406.filter_show" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION artt406_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = artt406_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="artt406.global" ver="34" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:36)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_rtdr_m        RECORD
       rtdrsite LIKE rtdr_t.rtdrsite, 
   rtdrsite_desc LIKE type_t.chr80, 
   rtdrdocdt LIKE rtdr_t.rtdrdocdt, 
   rtdrdocno LIKE rtdr_t.rtdrdocno, 
   rtdr000 LIKE rtdr_t.rtdr000, 
   rtdrunit LIKE rtdr_t.rtdrunit, 
   rtdr001 LIKE rtdr_t.rtdr001, 
   rtdr001_desc LIKE type_t.chr80, 
   rtdr002 LIKE rtdr_t.rtdr002, 
   rtdr002_desc LIKE type_t.chr80, 
   rtdr005 LIKE rtdr_t.rtdr005, 
   rtdr005_desc LIKE type_t.chr80, 
   rtdr003 LIKE rtdr_t.rtdr003, 
   rtdr003_desc LIKE type_t.chr80, 
   rtaa003 LIKE type_t.chr10, 
   rtdr004 LIKE rtdr_t.rtdr004, 
   rtdrstus LIKE rtdr_t.rtdrstus, 
   rtdrownid LIKE rtdr_t.rtdrownid, 
   rtdrownid_desc LIKE type_t.chr80, 
   rtdrowndp LIKE rtdr_t.rtdrowndp, 
   rtdrowndp_desc LIKE type_t.chr80, 
   rtdrcrtid LIKE rtdr_t.rtdrcrtid, 
   rtdrcrtid_desc LIKE type_t.chr80, 
   rtdrcrtdp LIKE rtdr_t.rtdrcrtdp, 
   rtdrcrtdp_desc LIKE type_t.chr80, 
   rtdrcrtdt LIKE rtdr_t.rtdrcrtdt, 
   rtdrmodid LIKE rtdr_t.rtdrmodid, 
   rtdrmodid_desc LIKE type_t.chr80, 
   rtdrmoddt LIKE rtdr_t.rtdrmoddt, 
   rtdrcnfid LIKE rtdr_t.rtdrcnfid, 
   rtdrcnfid_desc LIKE type_t.chr80, 
   rtdrcnfdt LIKE rtdr_t.rtdrcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_rtds_d        RECORD
       rtdsseq LIKE rtds_t.rtdsseq, 
   rtds002 LIKE rtds_t.rtds002, 
   rtds001 LIKE rtds_t.rtds001, 
   imaal003 LIKE type_t.chr500, 
   imaal004 LIKE type_t.chr500, 
   imaa009 LIKE type_t.chr10, 
   imaa009_desc LIKE type_t.chr500, 
   rtds003 LIKE rtds_t.rtds003, 
   rtds003_desc LIKE type_t.chr500, 
   rtds004 LIKE rtds_t.rtds004, 
   rtds015 LIKE rtds_t.rtds015, 
   rtds005 LIKE rtds_t.rtds005, 
   rtds006 LIKE rtds_t.rtds006, 
   rtds006_desc LIKE type_t.chr500, 
   rtds007 LIKE rtds_t.rtds007, 
   rtds007_desc LIKE type_t.chr500, 
   rtds008 LIKE rtds_t.rtds008, 
   rtds009 LIKE rtds_t.rtds009, 
   cost LIKE type_t.chr500, 
   rtds014 LIKE rtds_t.rtds014, 
   rtds014_desc LIKE type_t.chr500, 
   l_imaa106 LIKE type_t.chr10, 
   l_imaa106_desc LIKE type_t.chr500, 
   rtds010 LIKE rtds_t.rtds010, 
   rtds011 LIKE rtds_t.rtds011, 
   rtds012 LIKE rtds_t.rtds012, 
   rtds013 LIKE rtds_t.rtds013
       END RECORD
PRIVATE TYPE type_g_rtds2_d RECORD
       rtdt001 LIKE rtdt_t.rtdt001, 
   rtdt001_desc LIKE type_t.chr500, 
   ooef019 LIKE type_t.chr10, 
   ooef019_desc LIKE type_t.chr500
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_rtdrsite LIKE rtdr_t.rtdrsite,
   b_rtdrsite_desc LIKE type_t.chr80,
      b_rtdrdocno LIKE rtdr_t.rtdrdocno,
      b_rtdrdocdt LIKE rtdr_t.rtdrdocdt,
      b_rtdr003 LIKE rtdr_t.rtdr003,
   b_rtdr003_desc LIKE type_t.chr80,
      b_rtdr001 LIKE rtdr_t.rtdr001,
   b_rtdr001_desc LIKE type_t.chr80,
      b_rtdr002 LIKE rtdr_t.rtdr002,
   b_rtdr002_desc LIKE type_t.chr80,
      b_rtdr004 LIKE rtdr_t.rtdr004
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_rtdr_m          type_g_rtdr_m
DEFINE g_rtdr_m_t        type_g_rtdr_m
DEFINE g_rtdr_m_o        type_g_rtdr_m
DEFINE g_rtdr_m_mask_o   type_g_rtdr_m #轉換遮罩前資料
DEFINE g_rtdr_m_mask_n   type_g_rtdr_m #轉換遮罩後資料
 
   DEFINE g_rtdrdocno_t LIKE rtdr_t.rtdrdocno
 
 
DEFINE g_rtds_d          DYNAMIC ARRAY OF type_g_rtds_d
DEFINE g_rtds_d_t        type_g_rtds_d
DEFINE g_rtds_d_o        type_g_rtds_d
DEFINE g_rtds_d_mask_o   DYNAMIC ARRAY OF type_g_rtds_d #轉換遮罩前資料
DEFINE g_rtds_d_mask_n   DYNAMIC ARRAY OF type_g_rtds_d #轉換遮罩後資料
DEFINE g_rtds2_d          DYNAMIC ARRAY OF type_g_rtds2_d
DEFINE g_rtds2_d_t        type_g_rtds2_d
DEFINE g_rtds2_d_o        type_g_rtds2_d
DEFINE g_rtds2_d_mask_o   DYNAMIC ARRAY OF type_g_rtds2_d #轉換遮罩前資料
DEFINE g_rtds2_d_mask_n   DYNAMIC ARRAY OF type_g_rtds2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="artt406.idx_chk" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION artt406_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_rtds_d.getLength() THEN
         LET g_detail_idx = g_rtds_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtds_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtds_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_rtds2_d.getLength() THEN
         LET g_detail_idx = g_rtds2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtds2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtds2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="artt406.init" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION artt406_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('rtdrstus','13','N,Y,A,D,R,W,X')
 
      CALL cl_set_combo_scc('rtdr000','6780') 
   CALL cl_set_combo_scc('rtds009','6014') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL artt406_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="artt406.input" ver="16" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION artt406_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtdr_m.rtdrsite,g_rtdr_m.rtdrsite_desc,g_rtdr_m.rtdrdocdt,g_rtdr_m.rtdrdocno,g_rtdr_m.rtdr000, 
       g_rtdr_m.rtdrunit,g_rtdr_m.rtdr001,g_rtdr_m.rtdr001_desc,g_rtdr_m.rtdr002,g_rtdr_m.rtdr002_desc, 
       g_rtdr_m.rtdr005,g_rtdr_m.rtdr005_desc,g_rtdr_m.rtdr003,g_rtdr_m.rtdr003_desc,g_rtdr_m.rtaa003, 
       g_rtdr_m.rtdr004,g_rtdr_m.rtdrstus,g_rtdr_m.rtdrownid,g_rtdr_m.rtdrownid_desc,g_rtdr_m.rtdrowndp, 
       g_rtdr_m.rtdrowndp_desc,g_rtdr_m.rtdrcrtid,g_rtdr_m.rtdrcrtid_desc,g_rtdr_m.rtdrcrtdp,g_rtdr_m.rtdrcrtdp_desc, 
       g_rtdr_m.rtdrcrtdt,g_rtdr_m.rtdrmodid,g_rtdr_m.rtdrmodid_desc,g_rtdr_m.rtdrmoddt,g_rtdr_m.rtdrcnfid, 
       g_rtdr_m.rtdrcnfid_desc,g_rtdr_m.rtdrcnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT rtdsseq,rtds002,rtds001,rtds003,rtds004,rtds015,rtds005,rtds006,rtds007, 
       rtds008,rtds009,rtds014,rtds010,rtds011,rtds012,rtds013 FROM rtds_t WHERE rtdsent=? AND rtdsdocno=?  
       AND rtdsseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt406_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rtdt001 FROM rtdt_t WHERE rtdtent=? AND rtdtdocno=? AND rtdt001=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt406_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL artt406_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL artt406_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_rtdr_m.rtdrsite,g_rtdr_m.rtdrdocdt,g_rtdr_m.rtdrdocno,g_rtdr_m.rtdr000,g_rtdr_m.rtdrunit, 
       g_rtdr_m.rtdr001,g_rtdr_m.rtdr002,g_rtdr_m.rtdr005,g_rtdr_m.rtdr003,g_rtdr_m.rtdr004,g_rtdr_m.rtdrstus 

   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="artt406.input.body" ver="23" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_rtds_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtds_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artt406_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_rtds_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artt406_cl USING g_enterprise,g_rtdr_m.rtdrdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt406_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE artt406_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_rtds_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtds_d[l_ac].rtdsseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_rtds_d_t.* = g_rtds_d[l_ac].*  #BACKUP
               LET g_rtds_d_o.* = g_rtds_d[l_ac].*  #BACKUP
               CALL artt406_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL artt406_set_no_entry_b(l_cmd)
               IF NOT artt406_lock_b("rtds_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artt406_bcl INTO g_rtds_d[l_ac].rtdsseq,g_rtds_d[l_ac].rtds002,g_rtds_d[l_ac].rtds001, 
                      g_rtds_d[l_ac].rtds003,g_rtds_d[l_ac].rtds004,g_rtds_d[l_ac].rtds015,g_rtds_d[l_ac].rtds005, 
                      g_rtds_d[l_ac].rtds006,g_rtds_d[l_ac].rtds007,g_rtds_d[l_ac].rtds008,g_rtds_d[l_ac].rtds009, 
                      g_rtds_d[l_ac].rtds014,g_rtds_d[l_ac].rtds010,g_rtds_d[l_ac].rtds011,g_rtds_d[l_ac].rtds012, 
                      g_rtds_d[l_ac].rtds013
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_rtds_d_t.rtdsseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rtds_d_mask_o[l_ac].* =  g_rtds_d[l_ac].*
                  CALL artt406_rtds_t_mask()
                  LET g_rtds_d_mask_n[l_ac].* =  g_rtds_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL artt406_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtds_d[l_ac].* TO NULL 
            INITIALIZE g_rtds_d_t.* TO NULL 
            INITIALIZE g_rtds_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_rtds_d[l_ac].rtds015 = "N"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_rtds_d_t.* = g_rtds_d[l_ac].*     #新輸入資料
            LET g_rtds_d_o.* = g_rtds_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artt406_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL artt406_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtds_d[li_reproduce_target].* = g_rtds_d[li_reproduce].*
 
               LET g_rtds_d[li_reproduce_target].rtdsseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM rtds_t 
             WHERE rtdsent = g_enterprise AND rtdsdocno = g_rtdr_m.rtdrdocno
 
               AND rtdsseq = g_rtds_d[l_ac].rtdsseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtdr_m.rtdrdocno
               LET gs_keys[2] = g_rtds_d[g_detail_idx].rtdsseq
               CALL artt406_insert_b('rtds_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_rtds_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtds_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artt406_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtdr_m.rtdrdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_rtds_d_t.rtdsseq
 
            
               #刪除同層單身
               IF NOT artt406_delete_b('rtds_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt406_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT artt406_key_delete_b(gs_keys,'rtds_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt406_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE artt406_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_rtds_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rtds_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdsseq
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtds_d[l_ac].rtdsseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD rtdsseq
            END IF 
 
 
            #add-point:AFTER FIELD rtdsseq
            {<point name="input.a.page1.rtdsseq" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdsseq
            #add-point:BEFORE FIELD rtdsseq
            {<point name="input.b.page1.rtdsseq" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtdsseq
            #add-point:ON CHANGE rtdsseq
            {<point name="input.g.page1.rtdsseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds002
            #add-point:BEFORE FIELD rtds002
            {<point name="input.b.page1.rtds002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds002
            
            #add-point:AFTER FIELD rtds002
            {<point name="input.a.page1.rtds002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtds002
            #add-point:ON CHANGE rtds002
            {<point name="input.g.page1.rtds002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds001
            #add-point:BEFORE FIELD rtds001
            {<point name="input.b.page1.rtds001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds001
            
            #add-point:AFTER FIELD rtds001
            {<point name="input.a.page1.rtds001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtds001
            #add-point:ON CHANGE rtds001
            {<point name="input.g.page1.rtds001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaal003
            #add-point:BEFORE FIELD imaal003
            {<point name="input.b.page1.imaal003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaal003
            
            #add-point:AFTER FIELD imaal003
            {<point name="input.a.page1.imaal003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE imaal003
            #add-point:ON CHANGE imaal003
            {<point name="input.g.page1.imaal003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaal004
            #add-point:BEFORE FIELD imaal004
            {<point name="input.b.page1.imaal004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaal004
            
            #add-point:AFTER FIELD imaal004
            {<point name="input.a.page1.imaal004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE imaal004
            #add-point:ON CHANGE imaal004
            {<point name="input.g.page1.imaal004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaa009
            
            #add-point:AFTER FIELD imaa009
            {<point name="input.a.page1.imaa009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaa009
            #add-point:BEFORE FIELD imaa009
            {<point name="input.b.page1.imaa009" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE imaa009
            #add-point:ON CHANGE imaa009
            {<point name="input.g.page1.imaa009" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds003
            
            #add-point:AFTER FIELD rtds003
            {<point name="input.a.page1.rtds003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds003
            #add-point:BEFORE FIELD rtds003
            {<point name="input.b.page1.rtds003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtds003
            #add-point:ON CHANGE rtds003
            {<point name="input.g.page1.rtds003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds004
            #add-point:BEFORE FIELD rtds004
            {<point name="input.b.page1.rtds004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds004
            
            #add-point:AFTER FIELD rtds004
            {<point name="input.a.page1.rtds004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtds004
            #add-point:ON CHANGE rtds004
            {<point name="input.g.page1.rtds004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds015
            #add-point:BEFORE FIELD rtds015
            {<point name="input.b.page1.rtds015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds015
            
            #add-point:AFTER FIELD rtds015
            {<point name="input.a.page1.rtds015" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtds015
            #add-point:ON CHANGE rtds015
            {<point name="input.g.page1.rtds015" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds005
            #add-point:BEFORE FIELD rtds005
            {<point name="input.b.page1.rtds005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds005
            
            #add-point:AFTER FIELD rtds005
            {<point name="input.a.page1.rtds005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtds005
            #add-point:ON CHANGE rtds005
            {<point name="input.g.page1.rtds005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds006
            
            #add-point:AFTER FIELD rtds006
            {<point name="input.a.page1.rtds006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds006
            #add-point:BEFORE FIELD rtds006
            {<point name="input.b.page1.rtds006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtds006
            #add-point:ON CHANGE rtds006
            {<point name="input.g.page1.rtds006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds007
            
            #add-point:AFTER FIELD rtds007
            {<point name="input.a.page1.rtds007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds007
            #add-point:BEFORE FIELD rtds007
            {<point name="input.b.page1.rtds007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtds007
            #add-point:ON CHANGE rtds007
            {<point name="input.g.page1.rtds007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds008
            #add-point:BEFORE FIELD rtds008
            {<point name="input.b.page1.rtds008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds008
            
            #add-point:AFTER FIELD rtds008
            {<point name="input.a.page1.rtds008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtds008
            #add-point:ON CHANGE rtds008
            {<point name="input.g.page1.rtds008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds009
            #add-point:BEFORE FIELD rtds009
            {<point name="input.b.page1.rtds009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds009
            
            #add-point:AFTER FIELD rtds009
            {<point name="input.a.page1.rtds009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtds009
            #add-point:ON CHANGE rtds009
            {<point name="input.g.page1.rtds009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD cost
            #add-point:BEFORE FIELD cost
            {<point name="input.b.page1.cost" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD cost
            
            #add-point:AFTER FIELD cost
            {<point name="input.a.page1.cost" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE cost
            #add-point:ON CHANGE cost
            {<point name="input.g.page1.cost" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds014
            
            #add-point:AFTER FIELD rtds014
            {<point name="input.a.page1.rtds014" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds014
            #add-point:BEFORE FIELD rtds014
            {<point name="input.b.page1.rtds014" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtds014
            #add-point:ON CHANGE rtds014
            {<point name="input.g.page1.rtds014" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds010
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtds_d[l_ac].rtds010,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtds010
            END IF 
 
 
            #add-point:AFTER FIELD rtds010
            {<point name="input.a.page1.rtds010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds010
            #add-point:BEFORE FIELD rtds010
            {<point name="input.b.page1.rtds010" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtds010
            #add-point:ON CHANGE rtds010
            {<point name="input.g.page1.rtds010" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds011
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtds_d[l_ac].rtds011,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtds011
            END IF 
 
 
            #add-point:AFTER FIELD rtds011
            {<point name="input.a.page1.rtds011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds011
            #add-point:BEFORE FIELD rtds011
            {<point name="input.b.page1.rtds011" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtds011
            #add-point:ON CHANGE rtds011
            {<point name="input.g.page1.rtds011" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds012
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtds_d[l_ac].rtds012,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtds012
            END IF 
 
 
            #add-point:AFTER FIELD rtds012
            {<point name="input.a.page1.rtds012" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds012
            #add-point:BEFORE FIELD rtds012
            {<point name="input.b.page1.rtds012" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtds012
            #add-point:ON CHANGE rtds012
            {<point name="input.g.page1.rtds012" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtds013
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtds_d[l_ac].rtds013,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtds013
            END IF 
 
 
            #add-point:AFTER FIELD rtds013
            {<point name="input.a.page1.rtds013" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtds013
            #add-point:BEFORE FIELD rtds013
            {<point name="input.b.page1.rtds013" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtds013
            #add-point:ON CHANGE rtds013
            {<point name="input.g.page1.rtds013" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.rtdsseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdsseq
            #add-point:ON ACTION controlp INFIELD rtdsseq
            {<point name="input.c.page1.rtdsseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtds002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds002
            #add-point:ON ACTION controlp INFIELD rtds002
            {<point name="input.c.page1.rtds002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtds001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds001
            #add-point:ON ACTION controlp INFIELD rtds001
            {<point name="input.c.page1.rtds001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.imaal003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaal003
            #add-point:ON ACTION controlp INFIELD imaal003
            {<point name="input.c.page1.imaal003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.imaal004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaal004
            #add-point:ON ACTION controlp INFIELD imaal004
            {<point name="input.c.page1.imaal004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.imaa009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaa009
            #add-point:ON ACTION controlp INFIELD imaa009
            {<point name="input.c.page1.imaa009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtds003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds003
            #add-point:ON ACTION controlp INFIELD rtds003
            {<point name="input.c.page1.rtds003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtds004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds004
            #add-point:ON ACTION controlp INFIELD rtds004
            {<point name="input.c.page1.rtds004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtds015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds015
            #add-point:ON ACTION controlp INFIELD rtds015
            {<point name="input.c.page1.rtds015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtds005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds005
            #add-point:ON ACTION controlp INFIELD rtds005
            {<point name="input.c.page1.rtds005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtds006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds006
            #add-point:ON ACTION controlp INFIELD rtds006
            {<point name="input.c.page1.rtds006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtds007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds007
            #add-point:ON ACTION controlp INFIELD rtds007
            {<point name="input.c.page1.rtds007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtds008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds008
            #add-point:ON ACTION controlp INFIELD rtds008
            {<point name="input.c.page1.rtds008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtds009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds009
            #add-point:ON ACTION controlp INFIELD rtds009
            {<point name="input.c.page1.rtds009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.cost
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD cost
            #add-point:ON ACTION controlp INFIELD cost
            {<point name="input.c.page1.cost" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtds014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds014
            #add-point:ON ACTION controlp INFIELD rtds014
            {<point name="input.c.page1.rtds014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtds010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds010
            #add-point:ON ACTION controlp INFIELD rtds010
            {<point name="input.c.page1.rtds010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtds011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds011
            #add-point:ON ACTION controlp INFIELD rtds011
            {<point name="input.c.page1.rtds011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtds012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds012
            #add-point:ON ACTION controlp INFIELD rtds012
            {<point name="input.c.page1.rtds012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtds013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtds013
            #add-point:ON ACTION controlp INFIELD rtds013
            {<point name="input.c.page1.rtds013" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_rtds_d[l_ac].* = g_rtds_d_t.*
               CLOSE artt406_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_rtds_d[l_ac].rtdsseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_rtds_d[l_ac].* = g_rtds_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL artt406_rtds_t_mask_restore('restore_mask_o')
      
               UPDATE rtds_t SET (rtdsdocno,rtdsseq,rtds002,rtds001,rtds003,rtds004,rtds015,rtds005, 
                   rtds006,rtds007,rtds008,rtds009,rtds014,rtds010,rtds011,rtds012,rtds013) = (g_rtdr_m.rtdrdocno, 
                   g_rtds_d[l_ac].rtdsseq,g_rtds_d[l_ac].rtds002,g_rtds_d[l_ac].rtds001,g_rtds_d[l_ac].rtds003, 
                   g_rtds_d[l_ac].rtds004,g_rtds_d[l_ac].rtds015,g_rtds_d[l_ac].rtds005,g_rtds_d[l_ac].rtds006, 
                   g_rtds_d[l_ac].rtds007,g_rtds_d[l_ac].rtds008,g_rtds_d[l_ac].rtds009,g_rtds_d[l_ac].rtds014, 
                   g_rtds_d[l_ac].rtds010,g_rtds_d[l_ac].rtds011,g_rtds_d[l_ac].rtds012,g_rtds_d[l_ac].rtds013) 

                WHERE rtdsent = g_enterprise AND rtdsdocno = g_rtdr_m.rtdrdocno 
 
                  AND rtdsseq = g_rtds_d_t.rtdsseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtds_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_rtds_d[l_ac].* = g_rtds_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtds_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_rtds_d[l_ac].* = g_rtds_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtdr_m.rtdrdocno
               LET gs_keys_bak[1] = g_rtdrdocno_t
               LET gs_keys[2] = g_rtds_d[g_detail_idx].rtdsseq
               LET gs_keys_bak[2] = g_rtds_d_t.rtdsseq
               CALL artt406_update_b('rtds_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL artt406_rtds_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_rtds_d[g_detail_idx].rtdsseq = g_rtds_d_t.rtdsseq 
 
                  ) THEN
                  LET gs_keys[01] = g_rtdr_m.rtdrdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_rtds_d_t.rtdsseq
 
                  CALL artt406_key_update_b(gs_keys,'rtds_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtdr_m),util.JSON.stringify(g_rtds_d_t)
               LET g_log2 = util.JSON.stringify(g_rtdr_m),util.JSON.stringify(g_rtds_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL artt406_unlock_b("rtds_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_rtds_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_rtds_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_rtds2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtds2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artt406_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_rtds2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtds2_d[l_ac].* TO NULL 
            INITIALIZE g_rtds2_d_t.* TO NULL 
            INITIALIZE g_rtds2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
            
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_rtds2_d_t.* = g_rtds2_d[l_ac].*     #新輸入資料
            LET g_rtds2_d_o.* = g_rtds2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artt406_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL artt406_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtds2_d[li_reproduce_target].* = g_rtds2_d[li_reproduce].*
 
               LET g_rtds2_d[li_reproduce_target].rtdt001 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artt406_cl USING g_enterprise,g_rtdr_m.rtdrdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt406_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE artt406_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_rtds2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtds2_d[l_ac].rtdt001 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_rtds2_d_t.* = g_rtds2_d[l_ac].*  #BACKUP
               LET g_rtds2_d_o.* = g_rtds2_d[l_ac].*  #BACKUP
               CALL artt406_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL artt406_set_no_entry_b(l_cmd)
               IF NOT artt406_lock_b("rtdt_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artt406_bcl2 INTO g_rtds2_d[l_ac].rtdt001
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rtds2_d_mask_o[l_ac].* =  g_rtds2_d[l_ac].*
                  CALL artt406_rtdt_t_mask()
                  LET g_rtds2_d_mask_n[l_ac].* =  g_rtds2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL artt406_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtdr_m.rtdrdocno
               LET gs_keys[gs_keys.getLength()+1] = g_rtds2_d_t.rtdt001
            
               #刪除同層單身
               IF NOT artt406_delete_b('rtdt_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt406_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT artt406_key_delete_b(gs_keys,'rtdt_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt406_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE artt406_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身2刪除後
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_rtds_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rtds2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM rtdt_t 
             WHERE rtdtent = g_enterprise AND rtdtdocno = g_rtdr_m.rtdrdocno
               AND rtdt001 = g_rtds2_d[l_ac].rtdt001
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtdr_m.rtdrdocno
               LET gs_keys[2] = g_rtds2_d[g_detail_idx].rtdt001
               CALL artt406_insert_b('rtdt_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_rtds_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtdt_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artt406_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_rtds2_d[l_ac].* = g_rtds2_d_t.*
               CLOSE artt406_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_rtds2_d[l_ac].* = g_rtds2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL artt406_rtdt_t_mask_restore('restore_mask_o')
                              
               UPDATE rtdt_t SET (rtdtdocno,rtdt001) = (g_rtdr_m.rtdrdocno,g_rtds2_d[l_ac].rtdt001)  
                   #自訂欄位頁簽
                WHERE rtdtent = g_enterprise AND rtdtdocno = g_rtdr_m.rtdrdocno
                  AND rtdt001 = g_rtds2_d_t.rtdt001 #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtdt_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_rtds2_d[l_ac].* = g_rtds2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtdt_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_rtds2_d[l_ac].* = g_rtds2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtdr_m.rtdrdocno
               LET gs_keys_bak[1] = g_rtdrdocno_t
               LET gs_keys[2] = g_rtds2_d[g_detail_idx].rtdt001
               LET gs_keys_bak[2] = g_rtds2_d_t.rtdt001
               CALL artt406_update_b('rtdt_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL artt406_rtdt_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_rtds2_d[g_detail_idx].rtdt001 = g_rtds2_d_t.rtdt001 
                  ) THEN
                  LET gs_keys[01] = g_rtdr_m.rtdrdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_rtds2_d_t.rtdt001
                  CALL artt406_key_update_b(gs_keys,'rtdt_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtdr_m),util.JSON.stringify(g_rtds2_d_t)
               LET g_log2 = util.JSON.stringify(g_rtdr_m),util.JSON.stringify(g_rtds2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdt001
            
            #add-point:AFTER FIELD rtdt001
            {<point name="input.a.page2.rtdt001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdt001
            #add-point:BEFORE FIELD rtdt001
            {<point name="input.b.page2.rtdt001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtdt001
            #add-point:ON CHANGE rtdt001
            {<point name="input.g.page2.rtdt001" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.rtdt001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdt001
            #add-point:ON ACTION controlp INFIELD rtdt001
            {<point name="input.c.page2.rtdt001" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_rtds2_d[l_ac].* = g_rtds2_d_t.*
               END IF
               CLOSE artt406_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL artt406_unlock_b("rtdt_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_rtds2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_rtds2_d.getLength()+1
 
      END INPUT
 
      
 
 
 
]]>
  </section>
  <section id="artt406.input.head" ver="30" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_rtdr_m.rtdrsite,g_rtdr_m.rtdrdocdt,g_rtdr_m.rtdrdocno,g_rtdr_m.rtdr000,g_rtdr_m.rtdrunit, 
          g_rtdr_m.rtdr001,g_rtdr_m.rtdr002,g_rtdr_m.rtdr005,g_rtdr_m.rtdr003,g_rtdr_m.rtdr004,g_rtdr_m.rtdrstus  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN artt406_cl USING g_enterprise,g_rtdr_m.rtdrdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt406_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE artt406_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL artt406_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL artt406_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdrsite
            
            #add-point:AFTER FIELD rtdrsite
            {<point name="input.a.rtdrsite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrsite
            #add-point:BEFORE FIELD rtdrsite
            {<point name="input.b.rtdrsite" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtdrsite
            #add-point:ON CHANGE rtdrsite
            {<point name="input.g.rtdrsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrdocdt
            #add-point:BEFORE FIELD rtdrdocdt
            {<point name="input.b.rtdrdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdrdocdt
            
            #add-point:AFTER FIELD rtdrdocdt
            {<point name="input.a.rtdrdocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtdrdocdt
            #add-point:ON CHANGE rtdrdocdt
            {<point name="input.g.rtdrdocdt" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrdocno
            #add-point:BEFORE FIELD rtdrdocno
            {<point name="input.b.rtdrdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdrdocno
            
            #add-point:AFTER FIELD rtdrdocno
            {<point name="input.a.rtdrdocno" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtdrdocno
            #add-point:ON CHANGE rtdrdocno
            {<point name="input.g.rtdrdocno" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdr000
            #add-point:BEFORE FIELD rtdr000
            {<point name="input.b.rtdr000" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdr000
            
            #add-point:AFTER FIELD rtdr000
            {<point name="input.a.rtdr000" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtdr000
            #add-point:ON CHANGE rtdr000
            {<point name="input.g.rtdr000" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrunit
            #add-point:BEFORE FIELD rtdrunit
            {<point name="input.b.rtdrunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdrunit
            
            #add-point:AFTER FIELD rtdrunit
            {<point name="input.a.rtdrunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtdrunit
            #add-point:ON CHANGE rtdrunit
            {<point name="input.g.rtdrunit" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdr001
            
            #add-point:AFTER FIELD rtdr001
            {<point name="input.a.rtdr001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdr001
            #add-point:BEFORE FIELD rtdr001
            {<point name="input.b.rtdr001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtdr001
            #add-point:ON CHANGE rtdr001
            {<point name="input.g.rtdr001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdr002
            
            #add-point:AFTER FIELD rtdr002
            {<point name="input.a.rtdr002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdr002
            #add-point:BEFORE FIELD rtdr002
            {<point name="input.b.rtdr002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtdr002
            #add-point:ON CHANGE rtdr002
            {<point name="input.g.rtdr002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdr005
            
            #add-point:AFTER FIELD rtdr005
            {<point name="input.a.rtdr005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdr005
            #add-point:BEFORE FIELD rtdr005
            {<point name="input.b.rtdr005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtdr005
            #add-point:ON CHANGE rtdr005
            {<point name="input.g.rtdr005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdr003
            
            #add-point:AFTER FIELD rtdr003
            {<point name="input.a.rtdr003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdr003
            #add-point:BEFORE FIELD rtdr003
            {<point name="input.b.rtdr003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtdr003
            #add-point:ON CHANGE rtdr003
            {<point name="input.g.rtdr003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdr004
            #add-point:BEFORE FIELD rtdr004
            {<point name="input.b.rtdr004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdr004
            
            #add-point:AFTER FIELD rtdr004
            {<point name="input.a.rtdr004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtdr004
            #add-point:ON CHANGE rtdr004
            {<point name="input.g.rtdr004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtdrstus
            #add-point:BEFORE FIELD rtdrstus
            {<point name="input.b.rtdrstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtdrstus
            
            #add-point:AFTER FIELD rtdrstus
            {<point name="input.a.rtdrstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtdrstus
            #add-point:ON CHANGE rtdrstus
            {<point name="input.g.rtdrstus" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.rtdrsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdrsite
            #add-point:ON ACTION controlp INFIELD rtdrsite
            {<point name="input.c.rtdrsite" />}
            #END add-point
 
         #Ctrlp:input.c.rtdrdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdrdocdt
            #add-point:ON ACTION controlp INFIELD rtdrdocdt
            {<point name="input.c.rtdrdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.rtdrdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdrdocno
            #add-point:ON ACTION controlp INFIELD rtdrdocno
            {<point name="input.c.rtdrdocno" />}
            #END add-point
 
         #Ctrlp:input.c.rtdr000
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdr000
            #add-point:ON ACTION controlp INFIELD rtdr000
            {<point name="input.c.rtdr000" />}
            #END add-point
 
         #Ctrlp:input.c.rtdrunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdrunit
            #add-point:ON ACTION controlp INFIELD rtdrunit
            {<point name="input.c.rtdrunit" />}
            #END add-point
 
         #Ctrlp:input.c.rtdr001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdr001
            #add-point:ON ACTION controlp INFIELD rtdr001
            {<point name="input.c.rtdr001" />}
            #END add-point
 
         #Ctrlp:input.c.rtdr002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdr002
            #add-point:ON ACTION controlp INFIELD rtdr002
            {<point name="input.c.rtdr002" />}
            #END add-point
 
         #Ctrlp:input.c.rtdr005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdr005
            #add-point:ON ACTION controlp INFIELD rtdr005
            {<point name="input.c.rtdr005" />}
            #END add-point
 
         #Ctrlp:input.c.rtdr003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdr003
            #add-point:ON ACTION controlp INFIELD rtdr003
            {<point name="input.c.rtdr003" />}
            #END add-point
 
         #Ctrlp:input.c.rtdr004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdr004
            #add-point:ON ACTION controlp INFIELD rtdr004
            {<point name="input.c.rtdr004" />}
            #END add-point
 
         #Ctrlp:input.c.rtdrstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtdrstus
            #add-point:ON ACTION controlp INFIELD rtdrstus
            {<point name="input.c.rtdrstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_rtdr_m.rtdrdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO rtdr_t (rtdrent,rtdrsite,rtdrdocdt,rtdrdocno,rtdr000,rtdrunit,rtdr001,rtdr002, 
                   rtdr005,rtdr003,rtdr004,rtdrstus,rtdrownid,rtdrowndp,rtdrcrtid,rtdrcrtdp,rtdrcrtdt, 
                   rtdrmodid,rtdrmoddt,rtdrcnfid,rtdrcnfdt)
               VALUES (g_enterprise,g_rtdr_m.rtdrsite,g_rtdr_m.rtdrdocdt,g_rtdr_m.rtdrdocno,g_rtdr_m.rtdr000, 
                   g_rtdr_m.rtdrunit,g_rtdr_m.rtdr001,g_rtdr_m.rtdr002,g_rtdr_m.rtdr005,g_rtdr_m.rtdr003, 
                   g_rtdr_m.rtdr004,g_rtdr_m.rtdrstus,g_rtdr_m.rtdrownid,g_rtdr_m.rtdrowndp,g_rtdr_m.rtdrcrtid, 
                   g_rtdr_m.rtdrcrtdp,g_rtdr_m.rtdrcrtdt,g_rtdr_m.rtdrmodid,g_rtdr_m.rtdrmoddt,g_rtdr_m.rtdrcnfid, 
                   g_rtdr_m.rtdrcnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_rtdr_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL artt406_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL artt406_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL artt406_rtdr_t_mask_restore('restore_mask_o')
               
               UPDATE rtdr_t SET (rtdrsite,rtdrdocdt,rtdrdocno,rtdr000,rtdrunit,rtdr001,rtdr002,rtdr005, 
                   rtdr003,rtdr004,rtdrstus,rtdrownid,rtdrowndp,rtdrcrtid,rtdrcrtdp,rtdrcrtdt,rtdrmodid, 
                   rtdrmoddt,rtdrcnfid,rtdrcnfdt) = (g_rtdr_m.rtdrsite,g_rtdr_m.rtdrdocdt,g_rtdr_m.rtdrdocno, 
                   g_rtdr_m.rtdr000,g_rtdr_m.rtdrunit,g_rtdr_m.rtdr001,g_rtdr_m.rtdr002,g_rtdr_m.rtdr005, 
                   g_rtdr_m.rtdr003,g_rtdr_m.rtdr004,g_rtdr_m.rtdrstus,g_rtdr_m.rtdrownid,g_rtdr_m.rtdrowndp, 
                   g_rtdr_m.rtdrcrtid,g_rtdr_m.rtdrcrtdp,g_rtdr_m.rtdrcrtdt,g_rtdr_m.rtdrmodid,g_rtdr_m.rtdrmoddt, 
                   g_rtdr_m.rtdrcnfid,g_rtdr_m.rtdrcnfdt)
                WHERE rtdrent = g_enterprise AND rtdrdocno = g_rtdrdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "rtdr_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL artt406_rtdr_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_rtdr_m_t)
               LET g_log2 = util.JSON.stringify(g_rtdr_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_rtdrdocno_t = g_rtdr_m.rtdrdocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="artt406.input.other" ver="11" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD rtdrdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD rtdsseq
               WHEN "s_detail2"
                  NEXT FIELD rtdt001
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="artt406.insert" ver="30" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION artt406_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_rtds_d.clear()   
   CALL g_rtds2_d.clear()  
 
 
   INITIALIZE g_rtdr_m.* LIKE rtdr_t.*             #DEFAULT 設定
   
   LET g_rtdrdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_rtdr_m.rtdrownid = g_user
      LET g_rtdr_m.rtdrowndp = g_dept
      LET g_rtdr_m.rtdrcrtid = g_user
      LET g_rtdr_m.rtdrcrtdp = g_dept 
      LET g_rtdr_m.rtdrcrtdt = cl_get_current()
      LET g_rtdr_m.rtdrmodid = g_user
      LET g_rtdr_m.rtdrmoddt = cl_get_current()
      LET g_rtdr_m.rtdrstus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_rtdr_m.rtdr000 = "I"
      LET g_rtdr_m.rtdrstus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_rtdr_m_t.* = g_rtdr_m.*
      LET g_rtdr_m_o.* = g_rtdr_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_rtdr_m.rtdrstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL artt406_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_rtdr_m.* TO NULL
         INITIALIZE g_rtds_d TO NULL
         INITIALIZE g_rtds2_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL artt406_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_rtds_d.clear()
      #CALL g_rtds2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt406_set_act_visible()   
   CALL artt406_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtdrdocno_t = g_rtdr_m.rtdrdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtdrent = '" ||g_enterprise|| "' AND",
                      " rtdrdocno = '", g_rtdr_m.rtdrdocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artt406_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE artt406_cl
   
   CALL artt406_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE artt406_master_referesh USING g_rtdr_m.rtdrdocno INTO g_rtdr_m.rtdrsite,g_rtdr_m.rtdrdocdt, 
       g_rtdr_m.rtdrdocno,g_rtdr_m.rtdr000,g_rtdr_m.rtdrunit,g_rtdr_m.rtdr001,g_rtdr_m.rtdr002,g_rtdr_m.rtdr005, 
       g_rtdr_m.rtdr003,g_rtdr_m.rtdr004,g_rtdr_m.rtdrstus,g_rtdr_m.rtdrownid,g_rtdr_m.rtdrowndp,g_rtdr_m.rtdrcrtid, 
       g_rtdr_m.rtdrcrtdp,g_rtdr_m.rtdrcrtdt,g_rtdr_m.rtdrmodid,g_rtdr_m.rtdrmoddt,g_rtdr_m.rtdrcnfid, 
       g_rtdr_m.rtdrcnfdt,g_rtdr_m.rtdrsite_desc,g_rtdr_m.rtdr001_desc,g_rtdr_m.rtdr002_desc,g_rtdr_m.rtdr003_desc, 
       g_rtdr_m.rtdrownid_desc,g_rtdr_m.rtdrowndp_desc,g_rtdr_m.rtdrcrtid_desc,g_rtdr_m.rtdrcrtdp_desc, 
       g_rtdr_m.rtdrmodid_desc,g_rtdr_m.rtdrcnfid_desc
   
   #遮罩相關處理
   LET g_rtdr_m_mask_o.* =  g_rtdr_m.*
   CALL artt406_rtdr_t_mask()
   LET g_rtdr_m_mask_n.* =  g_rtdr_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtdr_m.rtdrsite,g_rtdr_m.rtdrsite_desc,g_rtdr_m.rtdrdocdt,g_rtdr_m.rtdrdocno,g_rtdr_m.rtdr000, 
       g_rtdr_m.rtdrunit,g_rtdr_m.rtdr001,g_rtdr_m.rtdr001_desc,g_rtdr_m.rtdr002,g_rtdr_m.rtdr002_desc, 
       g_rtdr_m.rtdr005,g_rtdr_m.rtdr005_desc,g_rtdr_m.rtdr003,g_rtdr_m.rtdr003_desc,g_rtdr_m.rtaa003, 
       g_rtdr_m.rtdr004,g_rtdr_m.rtdrstus,g_rtdr_m.rtdrownid,g_rtdr_m.rtdrownid_desc,g_rtdr_m.rtdrowndp, 
       g_rtdr_m.rtdrowndp_desc,g_rtdr_m.rtdrcrtid,g_rtdr_m.rtdrcrtid_desc,g_rtdr_m.rtdrcrtdp,g_rtdr_m.rtdrcrtdp_desc, 
       g_rtdr_m.rtdrcrtdt,g_rtdr_m.rtdrmodid,g_rtdr_m.rtdrmodid_desc,g_rtdr_m.rtdrmoddt,g_rtdr_m.rtdrcnfid, 
       g_rtdr_m.rtdrcnfid_desc,g_rtdr_m.rtdrcnfdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL artt406_msgcentre_notify('')
   
END FUNCTION
]]>
  </section>
  <section id="artt406.insert_b" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION artt406_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO rtds_t
                  (rtdsent,
                   rtdsdocno,
                   rtdsseq
                   ,rtds002,rtds001,rtds003,rtds004,rtds015,rtds005,rtds006,rtds007,rtds008,rtds009,rtds014,rtds010,rtds011,rtds012,rtds013) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtds_d[g_detail_idx].rtds002,g_rtds_d[g_detail_idx].rtds001,g_rtds_d[g_detail_idx].rtds003, 
                       g_rtds_d[g_detail_idx].rtds004,g_rtds_d[g_detail_idx].rtds015,g_rtds_d[g_detail_idx].rtds005, 
                       g_rtds_d[g_detail_idx].rtds006,g_rtds_d[g_detail_idx].rtds007,g_rtds_d[g_detail_idx].rtds008, 
                       g_rtds_d[g_detail_idx].rtds009,g_rtds_d[g_detail_idx].rtds014,g_rtds_d[g_detail_idx].rtds010, 
                       g_rtds_d[g_detail_idx].rtds011,g_rtds_d[g_detail_idx].rtds012,g_rtds_d[g_detail_idx].rtds013) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtds_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtds_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO rtdt_t
                  (rtdtent,
                   rtdtdocno,
                   rtdt001
                   ) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   )
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtdt_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_rtds2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="artt406.key_delete_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION artt406_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="artt406.key_update_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION artt406_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="artt406.lock_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION artt406_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL artt406_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "rtds_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN artt406_bcl USING g_enterprise,
                                       g_rtdr_m.rtdrdocno,g_rtds_d[g_detail_idx].rtdsseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt406_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "rtdt_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artt406_bcl2 USING g_enterprise,
                                             g_rtdr_m.rtdrdocno,g_rtds2_d[g_detail_idx].rtdt001
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt406_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="artt406.main" ver="21" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT rtdrsite,'',rtdrdocdt,rtdrdocno,rtdr000,rtdrunit,rtdr001,'',rtdr002,'', 
       rtdr005,'',rtdr003,'','',rtdr004,rtdrstus,rtdrownid,'',rtdrowndp,'',rtdrcrtid,'',rtdrcrtdp,'', 
       rtdrcrtdt,rtdrmodid,'',rtdrmoddt,rtdrcnfid,'',rtdrcnfdt", 
                      " FROM rtdr_t",
                      " WHERE rtdrent= ? AND rtdrdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt406_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.rtdrsite,t0.rtdrdocdt,t0.rtdrdocno,t0.rtdr000,t0.rtdrunit,t0.rtdr001, 
       t0.rtdr002,t0.rtdr005,t0.rtdr003,t0.rtdr004,t0.rtdrstus,t0.rtdrownid,t0.rtdrowndp,t0.rtdrcrtid, 
       t0.rtdrcrtdp,t0.rtdrcrtdt,t0.rtdrmodid,t0.rtdrmoddt,t0.rtdrcnfid,t0.rtdrcnfdt,t1.ooefl003 ,t2.ooefl003 , 
       t3.rtaal003 ,t4.ooefl003 ,t5.ooag011 ,t6.ooefl003 ,t7.ooag011 ,t8.ooefl003 ,t9.ooag011 ,t10.ooag011", 

               " FROM rtdr_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.rtdrsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.rtdr001 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN rtaal_t t3 ON t3.rtaalent='"||g_enterprise||"' AND t3.rtaal001=t0.rtdr002 AND t3.rtaal002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.rtdr003 AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=t0.rtdrownid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.rtdrowndp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=t0.rtdrcrtid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent='"||g_enterprise||"' AND t8.ooefl001=t0.rtdrcrtdp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent='"||g_enterprise||"' AND t9.ooag001=t0.rtdrmodid  ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent='"||g_enterprise||"' AND t10.ooag001=t0.rtdrcnfid  ",
 
               " WHERE t0.rtdrent = '" ||g_enterprise|| "' AND t0.rtdrdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE artt406_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_artt406 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL artt406_init()   
 
      #進入選單 Menu (="N")
      CALL artt406_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_artt406
      
   END IF 
   
   CLOSE artt406_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="artt406.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/art/artt406_mask.4gl"
]]>
  </section>
  <section id="artt406.modify" ver="26" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION artt406_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_rtdr_m_t.* = g_rtdr_m.*
   LET g_rtdr_m_o.* = g_rtdr_m.*
   
   IF g_rtdr_m.rtdrdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_rtdrdocno_t = g_rtdr_m.rtdrdocno
 
   CALL s_transaction_begin()
   
   OPEN artt406_cl USING g_enterprise,g_rtdr_m.rtdrdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt406_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE artt406_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artt406_master_referesh USING g_rtdr_m.rtdrdocno INTO g_rtdr_m.rtdrsite,g_rtdr_m.rtdrdocdt, 
       g_rtdr_m.rtdrdocno,g_rtdr_m.rtdr000,g_rtdr_m.rtdrunit,g_rtdr_m.rtdr001,g_rtdr_m.rtdr002,g_rtdr_m.rtdr005, 
       g_rtdr_m.rtdr003,g_rtdr_m.rtdr004,g_rtdr_m.rtdrstus,g_rtdr_m.rtdrownid,g_rtdr_m.rtdrowndp,g_rtdr_m.rtdrcrtid, 
       g_rtdr_m.rtdrcrtdp,g_rtdr_m.rtdrcrtdt,g_rtdr_m.rtdrmodid,g_rtdr_m.rtdrmoddt,g_rtdr_m.rtdrcnfid, 
       g_rtdr_m.rtdrcnfdt,g_rtdr_m.rtdrsite_desc,g_rtdr_m.rtdr001_desc,g_rtdr_m.rtdr002_desc,g_rtdr_m.rtdr003_desc, 
       g_rtdr_m.rtdrownid_desc,g_rtdr_m.rtdrowndp_desc,g_rtdr_m.rtdrcrtid_desc,g_rtdr_m.rtdrcrtdp_desc, 
       g_rtdr_m.rtdrmodid_desc,g_rtdr_m.rtdrcnfid_desc
   
   #檢查是否允許此動作
   IF NOT artt406_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtdr_m_mask_o.* =  g_rtdr_m.*
   CALL artt406_rtdr_t_mask()
   LET g_rtdr_m_mask_n.* =  g_rtdr_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
 
   
   CALL artt406_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
 
    
   WHILE TRUE
      LET g_rtdrdocno_t = g_rtdr_m.rtdrdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_rtdr_m.rtdrmodid = g_user 
LET g_rtdr_m.rtdrmoddt = cl_get_current()
LET g_rtdr_m.rtdrmodid_desc = cl_get_username(g_rtdr_m.rtdrmodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL artt406_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE rtdr_t SET (rtdrmodid,rtdrmoddt) = (g_rtdr_m.rtdrmodid,g_rtdr_m.rtdrmoddt)
          WHERE rtdrent = g_enterprise AND rtdrdocno = g_rtdrdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_rtdr_m.* = g_rtdr_m_t.*
         CALL artt406_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_rtdr_m.rtdrdocno != g_rtdrdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE rtds_t SET rtdsdocno = g_rtdr_m.rtdrdocno
 
          WHERE rtdsent = g_enterprise AND rtdsdocno = g_rtdrdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtds_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtds_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE rtdt_t
            SET rtdtdocno = g_rtdr_m.rtdrdocno
 
          WHERE rtdtent = g_enterprise AND
                rtdtdocno = g_rtdrdocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtdt_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtdt_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt406_set_act_visible()   
   CALL artt406_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " rtdrent = '" ||g_enterprise|| "' AND",
                      " rtdrdocno = '", g_rtdr_m.rtdrdocno, "' "
 
   #填到對應位置
   CALL artt406_browser_fill("")
 
   CLOSE artt406_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artt406_msgcentre_notify('')
 
END FUNCTION   
]]>
  </section>
  <section id="artt406.msgcentre_notify" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:2)
PRIVATE FUNCTION artt406_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr5
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   IF g_action_choice = "statechange" THEN
      LET g_msgparam.state = g_action_choice,":",lc_state
   ELSE
      LET g_msgparam.state = g_action_choice
   END IF
 
   #PK資料填寫
   CALL artt406_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_rtdr_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="artt406.other_dialog" ver="2" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="artt406.other_function" ver="2" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="artt406.query" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION artt406_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_rtds_d.clear()
   CALL g_rtds2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL artt406_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL artt406_browser_fill("")
      CALL artt406_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL artt406_filter_show('rtdrsite')
   CALL artt406_filter_show('rtdrdocno')
   CALL artt406_filter_show('rtdrdocdt')
   CALL artt406_filter_show('rtdr003')
   CALL artt406_filter_show('rtdr001')
   CALL artt406_filter_show('rtdr002')
   CALL artt406_filter_show('rtdr004')
   CALL artt406_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL artt406_fetch("F") 
      #顯示單身筆數
      CALL artt406_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="artt406.reproduce" ver="26" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION artt406_reproduce()
   DEFINE l_newno     LIKE rtdr_t.rtdrdocno 
   DEFINE l_oldno     LIKE rtdr_t.rtdrdocno 
 
   DEFINE l_master    RECORD LIKE rtdr_t.*
   DEFINE l_detail    RECORD LIKE rtds_t.*
   DEFINE l_detail2    RECORD LIKE rtdt_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_rtdr_m.rtdrdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_rtdrdocno_t = g_rtdr_m.rtdrdocno
 
    
   LET g_rtdr_m.rtdrdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_rtdr_m.rtdrownid = g_user
      LET g_rtdr_m.rtdrowndp = g_dept
      LET g_rtdr_m.rtdrcrtid = g_user
      LET g_rtdr_m.rtdrcrtdp = g_dept 
      LET g_rtdr_m.rtdrcrtdt = cl_get_current()
      LET g_rtdr_m.rtdrmodid = g_user
      LET g_rtdr_m.rtdrmoddt = cl_get_current()
      LET g_rtdr_m.rtdrstus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_rtdr_m.rtdrstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL artt406_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_rtdr_m.* TO NULL
      INITIALIZE g_rtds_d TO NULL
      INITIALIZE g_rtds2_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL artt406_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt406_set_act_visible()   
   CALL artt406_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtdrdocno_t = g_rtdr_m.rtdrdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtdrent = '" ||g_enterprise|| "' AND",
                      " rtdrdocno = '", g_rtdr_m.rtdrdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artt406_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL artt406_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL artt406_msgcentre_notify('')
 
END FUNCTION
]]>
  </section>
  <section id="artt406.set_act_no_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION artt406_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="artt406.set_act_no_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION artt406_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="artt406.set_act_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION artt406_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="artt406.set_act_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION artt406_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="artt406.set_entry" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION artt406_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("rtdrdocno,rtdrdocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("rtdrdocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="artt406.set_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION artt406_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="artt406.set_no_entry" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION artt406_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("rtdrdocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("rtdrdocno,rtdrdocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="artt406.set_no_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION artt406_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="artt406.set_pk_array" ver="6" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION artt406_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_rtdr_m.rtdrdocno
   LET g_pk_array[1].column = 'rtdrdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="artt406.show" ver="20" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION artt406_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL artt406_b_fill() #單身填充
      CALL artt406_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL artt406_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_rtdr_m_mask_o.* =  g_rtdr_m.*
   CALL artt406_rtdr_t_mask()
   LET g_rtdr_m_mask_n.* =  g_rtdr_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtdr_m.rtdrsite,g_rtdr_m.rtdrsite_desc,g_rtdr_m.rtdrdocdt,g_rtdr_m.rtdrdocno,g_rtdr_m.rtdr000, 
       g_rtdr_m.rtdrunit,g_rtdr_m.rtdr001,g_rtdr_m.rtdr001_desc,g_rtdr_m.rtdr002,g_rtdr_m.rtdr002_desc, 
       g_rtdr_m.rtdr005,g_rtdr_m.rtdr005_desc,g_rtdr_m.rtdr003,g_rtdr_m.rtdr003_desc,g_rtdr_m.rtaa003, 
       g_rtdr_m.rtdr004,g_rtdr_m.rtdrstus,g_rtdr_m.rtdrownid,g_rtdr_m.rtdrownid_desc,g_rtdr_m.rtdrowndp, 
       g_rtdr_m.rtdrowndp_desc,g_rtdr_m.rtdrcrtid,g_rtdr_m.rtdrcrtid_desc,g_rtdr_m.rtdrcrtdp,g_rtdr_m.rtdrcrtdp_desc, 
       g_rtdr_m.rtdrcrtdt,g_rtdr_m.rtdrmodid,g_rtdr_m.rtdrmodid_desc,g_rtdr_m.rtdrmoddt,g_rtdr_m.rtdrcnfid, 
       g_rtdr_m.rtdrcnfid_desc,g_rtdr_m.rtdrcnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_rtdr_m.rtdrstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_rtds_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_rtds2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL artt406_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="artt406.signature" ver="18" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:7)
#+ BPM提交
PRIVATE FUNCTION artt406_send()
   #add-point:send段define
   {<point name="send.define" edit="s"/>}
   #end add-point 
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c"/>}
   #end add-point 
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
 
 
   CALL artt406_show()
   CALL artt406_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_rtdr_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_rtds_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_rtds2_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL artt406_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL artt406_ui_headershow()
   CALL artt406_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:4)
#+ BPM抽單
PRIVATE FUNCTION artt406_draw_out()
   #add-point:draw段define
   {<point name="draw.define" edit="s"/>}
   #end add-point
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c"/>}
   #end add-point
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL artt406_ui_headershow()  
   CALL artt406_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="artt406.state_change" ver="22" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:11)
#+ 確認碼變更 
PRIVATE FUNCTION artt406_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_rtdr_m.rtdrdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN artt406_cl USING g_enterprise,g_rtdr_m.rtdrdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt406_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE artt406_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE artt406_master_referesh USING g_rtdr_m.rtdrdocno INTO g_rtdr_m.rtdrsite,g_rtdr_m.rtdrdocdt, 
       g_rtdr_m.rtdrdocno,g_rtdr_m.rtdr000,g_rtdr_m.rtdrunit,g_rtdr_m.rtdr001,g_rtdr_m.rtdr002,g_rtdr_m.rtdr005, 
       g_rtdr_m.rtdr003,g_rtdr_m.rtdr004,g_rtdr_m.rtdrstus,g_rtdr_m.rtdrownid,g_rtdr_m.rtdrowndp,g_rtdr_m.rtdrcrtid, 
       g_rtdr_m.rtdrcrtdp,g_rtdr_m.rtdrcrtdt,g_rtdr_m.rtdrmodid,g_rtdr_m.rtdrmoddt,g_rtdr_m.rtdrcnfid, 
       g_rtdr_m.rtdrcnfdt,g_rtdr_m.rtdrsite_desc,g_rtdr_m.rtdr001_desc,g_rtdr_m.rtdr002_desc,g_rtdr_m.rtdr003_desc, 
       g_rtdr_m.rtdrownid_desc,g_rtdr_m.rtdrowndp_desc,g_rtdr_m.rtdrcrtid_desc,g_rtdr_m.rtdrcrtdp_desc, 
       g_rtdr_m.rtdrmodid_desc,g_rtdr_m.rtdrcnfid_desc
 
   #檢查是否允許此動作
   IF NOT artt406_action_chk() THEN
      CLOSE artt406_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtdr_m.rtdrsite,g_rtdr_m.rtdrsite_desc,g_rtdr_m.rtdrdocdt,g_rtdr_m.rtdrdocno,g_rtdr_m.rtdr000, 
       g_rtdr_m.rtdrunit,g_rtdr_m.rtdr001,g_rtdr_m.rtdr001_desc,g_rtdr_m.rtdr002,g_rtdr_m.rtdr002_desc, 
       g_rtdr_m.rtdr005,g_rtdr_m.rtdr005_desc,g_rtdr_m.rtdr003,g_rtdr_m.rtdr003_desc,g_rtdr_m.rtaa003, 
       g_rtdr_m.rtdr004,g_rtdr_m.rtdrstus,g_rtdr_m.rtdrownid,g_rtdr_m.rtdrownid_desc,g_rtdr_m.rtdrowndp, 
       g_rtdr_m.rtdrowndp_desc,g_rtdr_m.rtdrcrtid,g_rtdr_m.rtdrcrtid_desc,g_rtdr_m.rtdrcrtdp,g_rtdr_m.rtdrcrtdp_desc, 
       g_rtdr_m.rtdrcrtdt,g_rtdr_m.rtdrmodid,g_rtdr_m.rtdrmodid_desc,g_rtdr_m.rtdrmoddt,g_rtdr_m.rtdrcnfid, 
       g_rtdr_m.rtdrcnfid_desc,g_rtdr_m.rtdrcnfdt
 
   CASE g_rtdr_m.rtdrstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_rtdr_m.rtdrstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT artt406_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE artt406_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT artt406_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE artt406_cl
            RETURN
         END IF
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_rtdr_m.rtdrstus = lc_state OR cl_null(lc_state) THEN
      CLOSE artt406_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_rtdr_m.rtdrmodid = g_user
   LET g_rtdr_m.rtdrmoddt = cl_get_current()
   LET g_rtdr_m.rtdrstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE rtdr_t 
      SET (rtdrstus,rtdrmodid,rtdrmoddt) 
        = (g_rtdr_m.rtdrstus,g_rtdr_m.rtdrmodid,g_rtdr_m.rtdrmoddt)     
    WHERE rtdrent = g_enterprise AND rtdrdocno = g_rtdr_m.rtdrdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE artt406_master_referesh USING g_rtdr_m.rtdrdocno INTO g_rtdr_m.rtdrsite,g_rtdr_m.rtdrdocdt, 
          g_rtdr_m.rtdrdocno,g_rtdr_m.rtdr000,g_rtdr_m.rtdrunit,g_rtdr_m.rtdr001,g_rtdr_m.rtdr002,g_rtdr_m.rtdr005, 
          g_rtdr_m.rtdr003,g_rtdr_m.rtdr004,g_rtdr_m.rtdrstus,g_rtdr_m.rtdrownid,g_rtdr_m.rtdrowndp, 
          g_rtdr_m.rtdrcrtid,g_rtdr_m.rtdrcrtdp,g_rtdr_m.rtdrcrtdt,g_rtdr_m.rtdrmodid,g_rtdr_m.rtdrmoddt, 
          g_rtdr_m.rtdrcnfid,g_rtdr_m.rtdrcnfdt,g_rtdr_m.rtdrsite_desc,g_rtdr_m.rtdr001_desc,g_rtdr_m.rtdr002_desc, 
          g_rtdr_m.rtdr003_desc,g_rtdr_m.rtdrownid_desc,g_rtdr_m.rtdrowndp_desc,g_rtdr_m.rtdrcrtid_desc, 
          g_rtdr_m.rtdrcrtdp_desc,g_rtdr_m.rtdrmodid_desc,g_rtdr_m.rtdrcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_rtdr_m.rtdrsite,g_rtdr_m.rtdrsite_desc,g_rtdr_m.rtdrdocdt,g_rtdr_m.rtdrdocno, 
          g_rtdr_m.rtdr000,g_rtdr_m.rtdrunit,g_rtdr_m.rtdr001,g_rtdr_m.rtdr001_desc,g_rtdr_m.rtdr002, 
          g_rtdr_m.rtdr002_desc,g_rtdr_m.rtdr005,g_rtdr_m.rtdr005_desc,g_rtdr_m.rtdr003,g_rtdr_m.rtdr003_desc, 
          g_rtdr_m.rtaa003,g_rtdr_m.rtdr004,g_rtdr_m.rtdrstus,g_rtdr_m.rtdrownid,g_rtdr_m.rtdrownid_desc, 
          g_rtdr_m.rtdrowndp,g_rtdr_m.rtdrowndp_desc,g_rtdr_m.rtdrcrtid,g_rtdr_m.rtdrcrtid_desc,g_rtdr_m.rtdrcrtdp, 
          g_rtdr_m.rtdrcrtdp_desc,g_rtdr_m.rtdrcrtdt,g_rtdr_m.rtdrmodid,g_rtdr_m.rtdrmodid_desc,g_rtdr_m.rtdrmoddt, 
          g_rtdr_m.rtdrcnfid,g_rtdr_m.rtdrcnfid_desc,g_rtdr_m.rtdrcnfdt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE artt406_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artt406_msgcentre_notify(lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="artt406.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION artt406_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="artt406.ui_browser_refresh" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION artt406_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_rtdrdocno = g_rtdr_m.rtdrdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="artt406.ui_detailshow" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION artt406_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="artt406.ui_dialog" ver="34" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION artt406_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL artt406_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_rtdr_m.* TO NULL
         CALL g_rtds_d.clear()
         CALL g_rtds2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL artt406_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL artt406_fetch('') # reload data
               LET l_ac = 1
               CALL artt406_ui_detailshow() #Setting the current row 
         
               CALL artt406_idx_chk()
               #NEXT FIELD rtdsseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_rtds_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt406_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL artt406_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_rtds2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt406_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL artt406_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL artt406_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL artt406_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL artt406_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL artt406_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL artt406_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL artt406_set_act_visible()   
            CALL artt406_set_act_no_visible()
            IF NOT (g_rtdr_m.rtdrdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " rtdrent = '" ||g_enterprise|| "' AND",
                                  " rtdrdocno = '", g_rtdr_m.rtdrdocno, "' "
 
               #填到對應位置
               CALL artt406_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtdr_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtds_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtdt_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL artt406_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtdr_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtds_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtdt_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL artt406_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL artt406_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL artt406_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL artt406_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt406_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL artt406_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt406_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL artt406_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt406_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL artt406_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt406_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL artt406_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt406_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_rtds_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_rtds2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD rtdsseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL artt406_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL artt406_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL artt406_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL artt406_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/art/artt406_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL artt406_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL artt406_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION prog_rtdr002
            LET g_action_choice="prog_rtdr002"
            IF cl_auth_chk_act("prog_rtdr002") THEN
               
               #add-point:ON ACTION prog_rtdr002
               {<point name="menu.prog_rtdr002" />}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL artt406_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL artt406_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL artt406_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_rtdr_m.rtdrdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="artt406.ui_headershow" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION artt406_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_rtdr_m.rtdrdocno = g_browser[g_current_idx].b_rtdrdocno   
 
   EXECUTE artt406_master_referesh USING g_rtdr_m.rtdrdocno INTO g_rtdr_m.rtdrsite,g_rtdr_m.rtdrdocdt, 
       g_rtdr_m.rtdrdocno,g_rtdr_m.rtdr000,g_rtdr_m.rtdrunit,g_rtdr_m.rtdr001,g_rtdr_m.rtdr002,g_rtdr_m.rtdr005, 
       g_rtdr_m.rtdr003,g_rtdr_m.rtdr004,g_rtdr_m.rtdrstus,g_rtdr_m.rtdrownid,g_rtdr_m.rtdrowndp,g_rtdr_m.rtdrcrtid, 
       g_rtdr_m.rtdrcrtdp,g_rtdr_m.rtdrcrtdt,g_rtdr_m.rtdrmodid,g_rtdr_m.rtdrmoddt,g_rtdr_m.rtdrcnfid, 
       g_rtdr_m.rtdrcnfdt,g_rtdr_m.rtdrsite_desc,g_rtdr_m.rtdr001_desc,g_rtdr_m.rtdr002_desc,g_rtdr_m.rtdr003_desc, 
       g_rtdr_m.rtdrownid_desc,g_rtdr_m.rtdrowndp_desc,g_rtdr_m.rtdrcrtid_desc,g_rtdr_m.rtdrcrtdp_desc, 
       g_rtdr_m.rtdrmodid_desc,g_rtdr_m.rtdrcnfid_desc
   CALL artt406_rtdr_t_mask()
   CALL artt406_show()
      
END FUNCTION
]]>
  </section>
  <section id="artt406.unlock_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION artt406_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt406_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt406_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="artt406.update_b" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION artt406_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtds_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL artt406_rtds_t_mask_restore('restore_mask_o')
               
      UPDATE rtds_t 
         SET (rtdsdocno,
              rtdsseq
              ,rtds002,rtds001,rtds003,rtds004,rtds015,rtds005,rtds006,rtds007,rtds008,rtds009,rtds014,rtds010,rtds011,rtds012,rtds013) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtds_d[g_detail_idx].rtds002,g_rtds_d[g_detail_idx].rtds001,g_rtds_d[g_detail_idx].rtds003, 
                  g_rtds_d[g_detail_idx].rtds004,g_rtds_d[g_detail_idx].rtds015,g_rtds_d[g_detail_idx].rtds005, 
                  g_rtds_d[g_detail_idx].rtds006,g_rtds_d[g_detail_idx].rtds007,g_rtds_d[g_detail_idx].rtds008, 
                  g_rtds_d[g_detail_idx].rtds009,g_rtds_d[g_detail_idx].rtds014,g_rtds_d[g_detail_idx].rtds010, 
                  g_rtds_d[g_detail_idx].rtds011,g_rtds_d[g_detail_idx].rtds012,g_rtds_d[g_detail_idx].rtds013)  

         WHERE rtdsent = g_enterprise AND rtdsdocno = ps_keys_bak[1] AND rtdsseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtds_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtds_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt406_rtds_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtdt_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL artt406_rtdt_t_mask_restore('restore_mask_o')
               
      UPDATE rtdt_t 
         SET (rtdtdocno,
              rtdt001
              ) 
              = 
             (ps_keys[1],ps_keys[2]
              ) 
         WHERE rtdtent = g_enterprise AND rtdtdocno = ps_keys_bak[1] AND rtdt001 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtdt_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtdt_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt406_rtdt_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
