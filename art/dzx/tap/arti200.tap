<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="arti200" std_prog="arti200" erpver="1.0" module="ART" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.page1.rtai001" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooal002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtai001  #顯示到畫面上

            NEXT FIELD rtai001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.rtai002" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_gzzo001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtai002  #顯示到畫面上

            NEXT FIELD rtai002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.rtai003" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_gzzz001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtai003  #顯示到畫面上

            NEXT FIELD rtai003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.rtai004" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooba002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtai004  #顯示到畫面上

            NEXT FIELD rtai004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.rtai005" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooba002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtai005  #顯示到畫面上

            NEXT FIELD rtai005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.rtai006" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooba002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtai006  #顯示到畫面上

            NEXT FIELD rtai006                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.rtaicrtdp" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaicrtdp  #顯示到畫面上

            NEXT FIELD rtaicrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.rtaicrtid" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaicrtid  #顯示到畫面上

            NEXT FIELD rtaicrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.rtaimodid" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaimodid  #顯示到畫面上

            NEXT FIELD rtaimodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.rtaiowndp" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaiowndp  #顯示到畫面上

            NEXT FIELD rtaiowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.rtaiownid" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaiownid  #顯示到畫面上

            NEXT FIELD rtaiownid                     #返回原欄位

]]>
  </point>
  <point name="detail_show.body.reference" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = '3'
            LET g_ref_fields[2] = g_rtai_d[l_ac].rtai001
            CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001=? AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtai_d[l_ac].rtai001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtai_d[l_ac].rtai001_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtai_d[l_ac].rtai002
            CALL ap_ref_array2(g_ref_fields,"SELECT gzzol003 FROM gzzol_t WHERE gzzol001=? AND gzzol002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_rtai_d[l_ac].rtai002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtai_d[l_ac].rtai002_desc
            LET g_gzzo001 = DOWNSHIFT(g_rtai_d[l_ac].rtai002)

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtai_d[l_ac].rtai003
            CALL ap_ref_array2(g_ref_fields,"SELECT gzzal003 FROM gzzal_t WHERE gzzal001=? AND gzzal002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_rtai_d[l_ac].rtai003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtai_d[l_ac].rtai003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtai_d[l_ac].rtai001
            LET g_ref_fields[2] = g_rtai_d[l_ac].rtai004           
            CALL ap_ref_array2(g_ref_fields,"SELECT oobal004 FROM oobal_t WHERE oobalent='"||g_enterprise||"' AND oobal001=? AND oobal002=? AND oobal003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtai_d[l_ac].rtai004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtai_d[l_ac].rtai004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtai_d[l_ac].rtai001
            LET g_ref_fields[2] = g_rtai_d[l_ac].rtai005           
            CALL ap_ref_array2(g_ref_fields,"SELECT oobal004 FROM oobal_t WHERE oobalent='"||g_enterprise||"' AND oobal001=? AND oobal002=? AND oobal003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtai_d[l_ac].rtai005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtai_d[l_ac].rtai005_desc
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtai_d[l_ac].rtai001
            LET g_ref_fields[2] = g_rtai_d[l_ac].rtai006           
            CALL ap_ref_array2(g_ref_fields,"SELECT oobal004 FROM oobal_t WHERE oobalent='"||g_enterprise||"' AND oobal001=? AND oobal002=? AND oobal003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtai_d[l_ac].rtai006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtai_d[l_ac].rtai006_desc            ]]>
  </point>
  <point name="detail_show.body2.reference" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtai2_d[l_ac].rtaiownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_rtai2_d[l_ac].rtaiownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtai2_d[l_ac].rtaiownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtai2_d[l_ac].rtaiowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtai2_d[l_ac].rtaiowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtai2_d[l_ac].rtaiowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtai2_d[l_ac].rtaicrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_rtai2_d[l_ac].rtaicrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtai2_d[l_ac].rtaicrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtai2_d[l_ac].rtaicrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtai2_d[l_ac].rtaicrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtai2_d[l_ac].rtaicrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtai2_d[l_ac].rtaimodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_rtai2_d[l_ac].rtaimodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtai2_d[l_ac].rtaimodid_desc
]]>
  </point>
  <point name="detail_show.reference" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL arti200_rtai001_ref()
   CALL arti200_rtai002_ref()
   CALL arti200_rtai003_ref()
   CALL arti200_rtai004_ref()
   CALL arti200_rtai005_ref()
   CALL arti200_rtai006_ref()]]>
  </point>
  <point name="input.a.page1.rtai001" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtai_d[l_ac].rtai001_desc = ' '
            IF NOT cl_null(g_rtai_d[l_ac].rtai001) THEN
               #检查参照表号是否存在
               CALL s_aooi070_chk_exist('3',g_rtai_d[l_ac].rtai001) RETURNING l_success
               IF l_success = FALSE THEN
                  LET g_rtai_d[l_ac].rtai001 = g_rtai_d_t.rtai001
                  CALL arti200_rtai001_ref()
                  NEXT FIELD rtai001
               END IF
            END IF
            #此段落由子樣板a05產生
            IF NOT cl_null(g_rtai_d[g_detail_idx].rtai001) AND NOT cl_null(g_rtai_d[g_detail_idx].rtai003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtai_d[g_detail_idx].rtai001 != g_rtai_d_t.rtai001 OR g_rtai_d[g_detail_idx].rtai003 != g_rtai_d_t.rtai003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtai_t WHERE "||"rtaient = '" ||g_enterprise|| "' AND "||"rtai001 = '"||g_rtai_d[g_detail_idx].rtai001 ||"' AND "|| "rtai003 = '"||g_rtai_d[g_detail_idx].rtai003 ||"'",'std-00004',0) THEN 
                     LET g_rtai_d[l_ac].rtai001 = g_rtai_d_t.rtai001
                     CALL arti200_rtai001_ref()
                     NEXT FIELD CURRENT
                  END IF
                  
                  #检查各字段匹配否
                  CALL arti200_chk_valid()
                       RETURNING l_success
                  IF NOT l_success THEN
                     LET g_rtai_d[l_ac].rtai001 = g_rtai_d_t.rtai001
                     CALL arti200_rtai001_ref()
                     NEXT FIELD rtai001            
                  END IF      
               END IF
            END IF

            CALL arti200_rtai001_ref()]]>
  </point>
  <point name="input.a.page1.rtai002" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtai_d[l_ac].rtai002_desc = ''
            LET g_rtai_d[l_ac].rtai002 = UPSHIFT(g_rtai_d[l_ac].rtai002)
            IF NOT cl_null(g_rtai_d[l_ac].rtai002) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_rtai_d[l_ac].rtai002
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_gzzo001_1") THEN
                  LET g_rtai_d[l_ac].rtai002 = g_rtai_d_t.rtai002
                  CALL arti200_rtai002_ref()
                  NEXT FIELD rtai002
               END IF
                  
               #检查各字段匹配否
               CALL arti200_chk_valid()
                    RETURNING l_success
               IF NOT l_success THEN
                  LET g_rtai_d[l_ac].rtai002 = g_rtai_d_t.rtai002
                  CALL arti200_rtai002_ref()
                  NEXT FIELD rtai002            
               END IF                                 
            END IF
            CALL arti200_rtai002_ref()
            LET g_gzzo001 = DOWNSHIFT(g_rtai_d[l_ac].rtai002)]]>
  </point>
  <point name="input.a.page1.rtai003" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtai_d[l_ac].rtai003_desc = ''
            
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_rtai_d[g_detail_idx].rtai001) AND NOT cl_null(g_rtai_d[g_detail_idx].rtai003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtai_d[g_detail_idx].rtai001 != g_rtai_d_t.rtai001 OR g_rtai_d[g_detail_idx].rtai003 != g_rtai_d_t.rtai003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtai_t WHERE "||"rtaient = '" ||g_enterprise|| "' AND "||"rtai001 = '"||g_rtai_d[g_detail_idx].rtai001 ||"' AND "|| "rtai003 = '"||g_rtai_d[g_detail_idx].rtai003 ||"'",'std-00004',0) THEN 
                     LET g_rtai_d[l_ac].rtai003 = g_rtai_d_t.rtai003
                     CALL arti200_rtai003_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            IF NOT cl_null(g_rtai_d[l_ac].rtai003) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_rtai_d[l_ac].rtai003

               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_gzzz001") THEN
                  LET g_rtai_d[l_ac].rtai003 = g_rtai_d_t.rtai003
                  CALL arti200_rtai003_ref()
                  NEXT FIELD rtai003
               END IF
               #检查各字段匹配否
               CALL arti200_chk_valid()
                    RETURNING l_success
               IF NOT l_success THEN
                  LET g_rtai_d[l_ac].rtai003 = g_rtai_d_t.rtai003
                  CALL arti200_rtai003_ref()
                  NEXT FIELD rtai003          
               END IF               
            END IF         

            CALL arti200_rtai003_ref()]]>
  </point>
  <point name="input.a.page1.rtai004" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtai_d[l_ac].rtai004_desc = ''
            IF NOT cl_null(g_rtai_d[l_ac].rtai004) THEN
               #检查各字段匹配否
               CALL arti200_chk_valid()
                    RETURNING l_success
               IF NOT l_success THEN
                  LET g_rtai_d[l_ac].rtai004 = g_rtai_d_t.rtai004
                  CALL arti200_rtai004_ref()
                  NEXT FIELD rtai004         
               END IF  

               IF l_cmd = 'a' THEN
                  IF cl_null(g_rtai_d[l_ac].rtai005) THEN
                     LET g_rtai_d[l_ac].rtai005 = g_rtai_d[l_ac].rtai004
                     CALL arti200_rtai005_ref()                    
                  END IF
                  IF cl_null(g_rtai_d[l_ac].rtai006) THEN
                     LET g_rtai_d[l_ac].rtai006 = g_rtai_d[l_ac].rtai004
                     CALL arti200_rtai006_ref()                                   
                  END IF                  
               END IF
            END IF
            CALL arti200_rtai004_ref()]]>
  </point>
  <point name="input.a.page1.rtai005" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtai_d[l_ac].rtai005_desc = ''
            IF NOT cl_null(g_rtai_d[l_ac].rtai005) THEN
               #检查各字段匹配否
               CALL arti200_chk_valid()
                    RETURNING l_success
               IF NOT l_success THEN
                  LET g_rtai_d[l_ac].rtai005 = g_rtai_d_t.rtai005
                  CALL arti200_rtai005_ref()
                  NEXT FIELD rtai005         
               END IF
            END IF
            CALL arti200_rtai005_ref()]]>
  </point>
  <point name="input.a.page1.rtai006" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtai_d[l_ac].rtai006_desc = ''
            IF NOT cl_null(g_rtai_d[l_ac].rtai006) THEN
               #检查各字段匹配否
               CALL arti200_chk_valid()
                    RETURNING l_success
               IF NOT l_success THEN
                  LET g_rtai_d[l_ac].rtai006 = g_rtai_d_t.rtai006
                  CALL arti200_rtai006_ref()
                  NEXT FIELD rtai006        
               END IF
            END IF
            CALL arti200_rtai006_ref()]]>
  </point>
  <point name="input.a.page2.rtai001_2" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_rtai2_d[g_detail_idx].rtai001) AND NOT cl_null(g_rtai2_d[g_detail_idx].rtai003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtai2_d[g_detail_idx].rtai001 != g_rtai2_d_t.rtai001 OR g_rtai2_d[g_detail_idx].rtai003 != g_rtai2_d_t.rtai003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtai_t WHERE "||"rtaient = '" ||g_enterprise|| "' AND "||"rtai001 = '"||g_rtai2_d[g_detail_idx].rtai001 ||"' AND "|| "rtai003 = '"||g_rtai2_d[g_detail_idx].rtai003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.rtai003_2" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_rtai2_d[g_detail_idx].rtai001) AND NOT cl_null(g_rtai2_d[g_detail_idx].rtai003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtai2_d[g_detail_idx].rtai001 != g_rtai2_d_t.rtai001 OR g_rtai2_d[g_detail_idx].rtai003 != g_rtai2_d_t.rtai003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtai_t WHERE "||"rtaient = '" ||g_enterprise|| "' AND "||"rtai001 = '"||g_rtai2_d[g_detail_idx].rtai001 ||"' AND "|| "rtai003 = '"||g_rtai2_d[g_detail_idx].rtai003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.c.page1.rtai001" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtai_d[l_ac].rtai001  #給予default值
            #給予arg
            CALL q_ooal002_2()                                #呼叫開窗
            LET g_rtai_d[l_ac].rtai001 = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_rtai_d[l_ac].rtai001 TO rtai001         #顯示到畫面上
            CALL arti200_rtai001_ref()
            NEXT FIELD rtai001                          #返回原欄位]]>
  </point>
  <point name="input.c.page1.rtai002" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtai_d[l_ac].rtai002    #給予default值
            #給予arg
            CALL q_gzzo001()                                    #呼叫開窗
            LET g_rtai_d[l_ac].rtai002 = g_qryparam.return1     #將開窗取得的值回傳到變數
            DISPLAY g_rtai_d[l_ac].rtai002 TO rtai002           #顯示到畫面上
            CALL arti200_rtai002_ref()
            NEXT FIELD rtai002                          #返回原欄位]]>
  </point>
  <point name="input.c.page1.rtai003" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
			IF NOT cl_null(g_gzzo001) THEN
               LET g_qryparam.where = " gzzz001 like '%",g_gzzo001 CLIPPED,"%'"
            END IF
            LET g_qryparam.default1 = g_rtai_d[l_ac].rtai003      #給予default值
            #給予arg

            CALL q_gzzz001_1()                                    #呼叫開窗
            LET g_rtai_d[l_ac].rtai003 = g_qryparam.return1       #將開窗取得的值回傳到變數
            DISPLAY g_rtai_d[l_ac].rtai003 TO rtai003             #顯示到畫面上
            CALL arti200_rtai003_ref()
            NEXT FIELD rtai003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.rtai004" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtai_d[l_ac].rtai004   #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_rtai_d[l_ac].rtai001
            LET g_qryparam.arg2 = g_rtai_d[l_ac].rtai003
            CALL q_ooba002_6()                                 #呼叫開窗
            LET g_rtai_d[l_ac].rtai004 = g_qryparam.return1    #將開窗取得的值回傳到變數
            DISPLAY g_rtai_d[l_ac].rtai004 TO rtai004          #顯示到畫面上
            CALL arti200_rtai004_ref()
            NEXT FIELD rtai004                                 #返回原欄位]]>
  </point>
  <point name="input.c.page1.rtai005" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtai_d[l_ac].rtai005    

            #給予arg
            LET g_qryparam.arg1 = g_rtai_d[l_ac].rtai001
            LET g_qryparam.arg2 = g_rtai_d[l_ac].rtai003
            CALL q_ooba002_6()                             
            LET g_rtai_d[l_ac].rtai005 = g_qryparam.return1     
            DISPLAY g_rtai_d[l_ac].rtai005 TO rtai005
            CALL arti200_rtai005_ref()          
            NEXT FIELD rtai005                         ]]>
  </point>
  <point name="input.c.page1.rtai006" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtai_d[l_ac].rtai006    

            #給予arg
            LET g_qryparam.arg1 = g_rtai_d[l_ac].rtai001
            LET g_qryparam.arg2 = g_rtai_d[l_ac].rtai003
            CALL q_ooba002_6()                             
            LET g_rtai_d[l_ac].rtai006 = g_qryparam.return1     
            DISPLAY g_rtai_d[l_ac].rtai006 TO rtai006   
            CALL arti200_rtai006_ref()          
            NEXT FIELD rtai006    ]]>
  </point>
  <point name="function.arti200_rtai001_ref" order="1" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PUBLIC FUNCTION arti200_rtai001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = '3'
   LET g_ref_fields[2] = g_rtai_d[l_ac].rtai001
   CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001=? AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtai_d[l_ac].rtai001_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_rtai_d[l_ac].rtai001_desc
END FUNCTION]]>
  </point>
  <point name="function.arti200_rtai002_ref" order="2" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PUBLIC FUNCTION arti200_rtai002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtai_d[l_ac].rtai002
   CALL ap_ref_array2(g_ref_fields,"SELECT gzzol003 FROM gzzol_t WHERE gzzol001=? AND gzzol002='"||g_lang||"'","") RETURNING g_rtn_fields
   LET g_rtai_d[l_ac].rtai002_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_rtai_d[l_ac].rtai002_desc
END FUNCTION]]>
  </point>
  <point name="function.arti200_rtai003_ref" order="3" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PUBLIC FUNCTION arti200_rtai003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtai_d[l_ac].rtai003
   CALL ap_ref_array2(g_ref_fields,"SELECT gzzal003 FROM gzzal_t WHERE gzzal001=? AND gzzal002='"||g_lang||"'","") RETURNING g_rtn_fields
   LET g_rtai_d[l_ac].rtai003_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_rtai_d[l_ac].rtai003_desc
END FUNCTION]]>
  </point>
  <point name="function.arti200_rtai004_ref" order="4" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PUBLIC FUNCTION arti200_rtai004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtai_d[l_ac].rtai001
   LET g_ref_fields[2] = g_rtai_d[l_ac].rtai004
   CALL ap_ref_array2(g_ref_fields,"SELECT oobal004 FROM oobal_t WHERE oobalent='"||g_enterprise||"' AND oobal001=? AND oobal002=? AND oobal003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtai_d[l_ac].rtai004_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_rtai_d[l_ac].rtai004_desc
END FUNCTION]]>
  </point>
  <point name="function.arti200_rtai005_ref" order="5" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PUBLIC FUNCTION arti200_rtai005_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtai_d[l_ac].rtai001
   LET g_ref_fields[2] = g_rtai_d[l_ac].rtai005
   CALL ap_ref_array2(g_ref_fields,"SELECT oobal004 FROM oobal_t WHERE oobalent='"||g_enterprise||"' AND oobal001=? AND oobal002=? AND oobal003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtai_d[l_ac].rtai005_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_rtai_d[l_ac].rtai005_desc   
END FUNCTION]]>
  </point>
  <point name="function.arti200_rtai006_ref" order="6" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PUBLIC FUNCTION arti200_rtai006_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtai_d[l_ac].rtai001
   LET g_ref_fields[2] = g_rtai_d[l_ac].rtai006
   CALL ap_ref_array2(g_ref_fields,"SELECT oobal004 FROM oobal_t WHERE oobalent='"||g_enterprise||"' AND oobal001=? AND oobal002=? AND oobal003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtai_d[l_ac].rtai006_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_rtai_d[l_ac].rtai006_desc    
END FUNCTION]]>
  </point>
  <point name="function.arti200_chk_valid" order="7" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 检查各值之间的合理性
# Memo...........:
# Usage..........: CALL arti200_chk_valid()
#                  RETURNING r_success
# Input parameter: NULL
# Return code....: r_success 检查通过否标识符
# Date & Author..: 2014-01-21 By Carrier
# Modify.........:
################################################################################
PRIVATE FUNCTION arti200_chk_valid()
   DEFINE r_success      LIKE type_t.num5
   DEFINE l_gzzo001      LIKE gzzo_t.gzzo001
   DEFINE l_str          STRING
   DEFINE l_pos          LIKE type_t.num5
   DEFINE l_success      LIKE type_t.num5
   
   LET r_success = FALSE
   #rtai002与rtai003的一致性问题
   #模块与作业编号
   IF NOT cl_null(g_rtai_d[l_ac].rtai002) AND NOT cl_null(g_rtai_d[l_ac].rtai003) THEN
      LET l_gzzo001 = DOWNSHIFT(g_rtai_d[l_ac].rtai002)
      LET l_str = g_rtai_d[l_ac].rtai003
      LET l_pos = l_str.getIndexOf(l_gzzo001,1)
      IF l_pos = 0 THEN                                       
         CALL cl_err(g_rtai_d[l_ac].rtai002,'art-00124',1)
         RETURN r_success
      END IF   
   END IF
   
   #rtai001与rtai003与rtai004的一致性问题
   IF NOT cl_null(g_rtai_d[l_ac].rtai001) AND NOT cl_null(g_rtai_d[l_ac].rtai003) AND 
      NOT cl_null(g_rtai_d[l_ac].rtai004) THEN
      CALL s_aooi200_chk_slip('',g_rtai_d[l_ac].rtai001,g_rtai_d[l_ac].rtai004,g_rtai_d[l_ac].rtai003)
           RETURNING l_success
      IF l_success = FALSE THEN
         RETURN r_success
      END IF    
   END IF

   #rtai001与rtai003与rtai005的一致性问题
   IF NOT cl_null(g_rtai_d[l_ac].rtai001) AND NOT cl_null(g_rtai_d[l_ac].rtai003) AND 
      NOT cl_null(g_rtai_d[l_ac].rtai005) THEN
      CALL s_aooi200_chk_slip('',g_rtai_d[l_ac].rtai001,g_rtai_d[l_ac].rtai005,g_rtai_d[l_ac].rtai003)
           RETURNING l_success
      IF l_success = FALSE THEN
         RETURN r_success
      END IF    
   END IF

   #rtai001与rtai003与rtai006的一致性问题
   IF NOT cl_null(g_rtai_d[l_ac].rtai001) AND NOT cl_null(g_rtai_d[l_ac].rtai003) AND 
      NOT cl_null(g_rtai_d[l_ac].rtai006) THEN
      CALL s_aooi200_chk_slip('',g_rtai_d[l_ac].rtai001,g_rtai_d[l_ac].rtai006,g_rtai_d[l_ac].rtai003)
           RETURNING l_success
      IF l_success = FALSE THEN
         RETURN r_success
      END IF    
   END IF

   LET r_success = TRUE
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE  g_gzzo001       LIKE gzzo_t.gzzo001]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtai_d[l_ac].rtaistus = 'Y'
            LET g_rtai_d_t.* = g_rtai_d[l_ac].* ]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL arti200_set_entry_b(l_cmd)
            CALL arti200_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.detail_input.page1.qry_aooi200" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               LET l_str = "aooi200 '",g_rtai_d[l_ac].rtai001,"' '",g_rtai_d[l_ac].rtai004,"'"
               CALL cl_cmdrun(l_str)]]>
  </point>
  <point name="menu.detail_show.page1.qry_aooi200" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               LET l_cmd = "aooi200 '",g_rtai_d[l_ac].rtai001,"' '",g_rtai_d[l_ac].rtai004,"'"
               CALL cl_cmdrun(l_cmd)]]>
  </point>
  <point name="menu.detail_show.page1_sub.aooi200" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#                        LET l_cmd = "aooi200 '",g_rtai_d[l_ac].rtai001,"' '",g_rtai_d[l_ac].rtai004,"'"
                        LET l_wc = " ooba001 IN ('",g_rtai_d[l_ac].rtai004,"','",g_rtai_d[l_ac].rtai005,"','",g_rtai_d[l_ac].rtai006,"')"
                        LET l_cmd = "aooi200 '",g_rtai_d[l_ac].rtai001,"' '' ",l_wc
                        CALL cl_cmdrun(l_cmd)]]>
  </point>
  <point name="menu.detail_show.page2_sub.aooi200" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#                       LET l_cmd = "aooi200 '",g_rtai_d[l_ac].rtai001,"' '",g_rtai_d[l_ac].rtai004,"'"
                        LET l_wc = " ooba001 IN ('",g_rtai_d[l_ac].rtai004,"','",g_rtai_d[l_ac].rtai005,"','",g_rtai_d[l_ac].rtai006,"')"
                        LET l_cmd = "aooi200 '",g_rtai_d[l_ac].rtai001,"' '' ",l_wc
                        CALL cl_cmdrun(l_cmd)                        ]]>
  </point>
  <point name="menu.open_aooi200" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               LET l_cmd = "aooi200"
               CALL cl_cmdrun(l_cmd)                        
]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_errshow = 1]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_success       LIKE type_t.num5
   DEFINE  l_str           STRING
   DEFINE  l_pos           LIKE type_t.num5]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("rtai001,rtai002,rtai003",TRUE)]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF p_cmd != 'a' THEN
      CALL cl_set_comp_entry("rtai001,rtai002,rtai003",FALSE)
   END IF]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_cmd    STRING
   DEFINE l_wc     STRING]]>
  </point>
  <section id="arti200.b_fill" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION arti200_b_fill(p_wc2)              #BODY FILL UP
   {<Local define>}
   DEFINE p_wc2           STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE rtaistus,rtai001,'',rtai002,'',rtai003,'',rtai004,'',rtai005,'',rtai006, 
       '','','',rtaiownid,'',rtaiowndp,'',rtaicrtid,'',rtaicrtdp,'',rtaicrtdt,rtaimodid,'',rtaimoddt FROM rtai_t", 

               "",
               " WHERE rtaient= ? AND 1=1 AND ", p_wc2
    
   LET g_sql = g_sql, " ORDER BY rtai_t.rtai001,rtai_t.rtai003"
  
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE arti200_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR arti200_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_rtai_d.clear()
   CALL g_rtai2_d.clear()   
 
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_rtai_d[l_ac].rtaistus,g_rtai_d[l_ac].rtai001,g_rtai_d[l_ac].rtai001_desc, 
       g_rtai_d[l_ac].rtai002,g_rtai_d[l_ac].rtai002_desc,g_rtai_d[l_ac].rtai003,g_rtai_d[l_ac].rtai003_desc, 
       g_rtai_d[l_ac].rtai004,g_rtai_d[l_ac].rtai004_desc,g_rtai_d[l_ac].rtai005,g_rtai_d[l_ac].rtai005_desc, 
       g_rtai_d[l_ac].rtai006,g_rtai_d[l_ac].rtai006_desc,g_rtai2_d[l_ac].rtai001,g_rtai2_d[l_ac].rtai003, 
       g_rtai2_d[l_ac].rtaiownid,g_rtai2_d[l_ac].rtaiownid_desc,g_rtai2_d[l_ac].rtaiowndp,g_rtai2_d[l_ac].rtaiowndp_desc, 
       g_rtai2_d[l_ac].rtaicrtid,g_rtai2_d[l_ac].rtaicrtid_desc,g_rtai2_d[l_ac].rtaicrtdp,g_rtai2_d[l_ac].rtaicrtdp_desc, 
       g_rtai2_d[l_ac].rtaicrtdt,g_rtai2_d[l_ac].rtaimodid,g_rtai2_d[l_ac].rtaimodid_desc,g_rtai2_d[l_ac].rtaimoddt 

      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL arti200_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec AND g_error_show = 1 THEN
      CALL cl_err("rtai_t",9035,1)
   END IF 
   LET g_error_show = 0
   
 
  
   
   CALL g_rtai_d.deleteElement(g_rtai_d.getLength())   
   CALL g_rtai2_d.deleteElement(g_rtai2_d.getLength())
 
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_rtai_d.getLength()
      LET g_rtai2_d[l_ac].rtai001 = g_rtai_d[l_ac].rtai001 
      LET g_rtai2_d[l_ac].rtai003 = g_rtai_d[l_ac].rtai003 
 
 
 
   END FOR
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE arti200_pb
   
END FUNCTION
]]>
  </section>
  <section id="arti200.default_search" ver="1" status="" src="s">
    <![CDATA[#+ 外部參數搜尋, 施工中
PRIVATE FUNCTION arti200_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " rtai001 = '", g_argv[1], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " rtai003 = ", g_argv[02], " AND "
   END IF
 
 
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="arti200.delete" ver="1" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION arti200_delete()
   DEFINE li_ac LIKE type_t.num5
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   IF NOT cl_ask_delete() THEN
      LET INT_FLAG = 1 #不刪除
   ELSE
      LET INT_FLAG = 0 #要刪除
   END IF
   
   LET li_ac = ARR_CURR()
   
   CALL s_transaction_begin()  
 
   #add-point:delete段刪除前
   {<point name="delete.b_delete" mark="Y"/>}
   #end add-point 
   DELETE FROM rtai_t 
         WHERE rtai001 = g_rtai_d[li_ac].rtai001
           AND rtai003 = g_rtai_d[li_ac].rtai003
 
 
   #add-point:delete段刪除中
   {<point name="delete.m_delete"/>}
   #end add-point 
   IF SQLCA.sqlcode THEN
      CALL cl_err("rtai_t",SQLCA.sqlcode,1) 
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
   #add-point:delete段刪除後
   {<point name="delete.a_delete"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="arti200.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION arti200_delete_b(ps_table,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "rtai_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM rtai_t
       WHERE rtaient = g_enterprise AND
         rtai001 = ps_keys_bak[1] AND rtai003 = ps_keys_bak[2]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="arti200.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000111
#+ 
#+ Filename...: arti200
#+ Description: 預設單別維護作業
#+ Creator....: 00378(2013/10/29)
#+ Modifier...: 00378(2013/12/11)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="arti200.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION arti200_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   #此段落由子樣板a12產生
      #LET g_rtai2_d[l_ac].rtaiownid_desc = cl_get_username(g_rtai2_d[l_ac].rtaiownid)
      #LET g_rtai2_d[l_ac].rtaiowndp_desc = cl_get_deptname(g_rtai2_d[l_ac].rtaiowndp)
      #LET g_rtai2_d[l_ac].rtaicrtid_desc = cl_get_username(g_rtai2_d[l_ac].rtaicrtid)
      #LET g_rtai2_d[l_ac].rtaicrtdp_desc = cl_get_deptname(g_rtai2_d[l_ac].rtaicrtdp)
      #LET g_rtai2_d[l_ac].rtaimodid_desc = cl_get_username(g_rtai2_d[l_ac].rtaimodid)
      ##LET g_rtai_d[l_ac].rtaicnfid_desc = cl_get_deptname(g_rtai_d[l_ac].rtaicnfid)
      ##LET g_rtai_d[l_ac].rtaipstid_desc = cl_get_deptname(g_rtai_d[l_ac].rtaipstid)
      
 
 
 
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body2.reference"/>}
   #end add-point
 
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="arti200.global" ver="1" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
{<Module define>}
 
#單身 type 宣告
PRIVATE TYPE type_g_rtai_d RECORD
       rtaistus LIKE rtai_t.rtaistus, 
   rtai001 LIKE rtai_t.rtai001, 
   rtai001_desc LIKE type_t.chr500, 
   rtai002 LIKE rtai_t.rtai002, 
   rtai002_desc LIKE type_t.chr500, 
   rtai003 LIKE rtai_t.rtai003, 
   rtai003_desc LIKE type_t.chr500, 
   rtai004 LIKE rtai_t.rtai004, 
   rtai004_desc LIKE type_t.chr500, 
   rtai005 LIKE rtai_t.rtai005, 
   rtai005_desc LIKE type_t.chr500, 
   rtai006 LIKE rtai_t.rtai006, 
   rtai006_desc LIKE type_t.chr500
       END RECORD
PRIVATE TYPE type_g_rtai2_d RECORD
       rtai001 LIKE rtai_t.rtai001, 
   rtai003 LIKE rtai_t.rtai003, 
   rtaiownid LIKE rtai_t.rtaiownid, 
   rtaiownid_desc LIKE type_t.chr500, 
   rtaiowndp LIKE rtai_t.rtaiowndp, 
   rtaiowndp_desc LIKE type_t.chr500, 
   rtaicrtid LIKE rtai_t.rtaicrtid, 
   rtaicrtid_desc LIKE type_t.chr500, 
   rtaicrtdp LIKE rtai_t.rtaicrtdp, 
   rtaicrtdp_desc LIKE type_t.chr500, 
   rtaicrtdt DATETIME YEAR TO SECOND, 
   rtaimodid LIKE rtai_t.rtaimodid, 
   rtaimodid_desc LIKE type_t.chr500, 
   rtaimoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
 
#無單身append欄位定義
 
#模組變數(Module Variables)
DEFINE g_rtai_d          DYNAMIC ARRAY OF type_g_rtai_d
DEFINE g_rtai_d_t        type_g_rtai_d
DEFINE g_rtai2_d   DYNAMIC ARRAY OF type_g_rtai2_d
DEFINE g_rtai2_d_t type_g_rtai2_d
 
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
{</Module define>}
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="arti200.init" ver="1" status="" src="s">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION arti200_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL arti200_default_search()
   
END FUNCTION
]]>
  </section>
  <section id="arti200.insert" ver="1" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION arti200_insert()
   {<Local define>}
   DEFINE li_ac LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point 
   
   #輸入前動作  
   LET li_ac = l_ac 
   LET l_ac = 1   
   LET g_before_input_done = FALSE                                        
   CALL arti200_set_entry_b("a")  
   
   CALL arti200_set_no_entry_b("a")                                          
   LET g_before_input_done = TRUE                                            
   
   #append欄位         
      
 
      
 
 
   
   #add-point:insert段before insert
   {<point name="insert.before_insert"/>}
   #end add-point  
 
   #資料輸入
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM) 
      INPUT g_rtai_d[1].* FROM s_detail1[1].*
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         BEFORE INPUT
         
      END INPUT
      
 
      
      BEFORE DIALOG 
   
   END DIALOG
   
   #輸入後動作
   IF INT_FLAG THEN
      CALL cl_err("",9001,0)
      LET INT_FLAG = 1
      RETURN
   END IF
   
   CALL s_transaction_begin()                    
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="arti200.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION arti200_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "rtai_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO rtai_t
                  (rtaient,
                   rtai001,rtai003
                   ,rtaistus,rtai002,rtai004,rtai005,rtai006,rtaiownid,rtaiowndp,rtaicrtid,rtaicrtdp,rtaicrtdt,rtaimodid,rtaimoddt) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtai_d[l_ac].rtaistus,g_rtai_d[l_ac].rtai002,g_rtai_d[l_ac].rtai004,g_rtai_d[l_ac].rtai005, 
                       g_rtai_d[l_ac].rtai006,g_rtai2_d[l_ac].rtaiownid,g_rtai2_d[l_ac].rtaiowndp,g_rtai2_d[l_ac].rtaicrtid, 
                       g_rtai2_d[l_ac].rtaicrtdp,g_rtai2_d[l_ac].rtaicrtdt,g_rtai2_d[l_ac].rtaimodid, 
                       g_rtai2_d[l_ac].rtaimoddt)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("rtai_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="arti200.link_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動單身idx
PRIVATE FUNCTION arti200_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="arti200.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION arti200_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL arti200_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "rtai_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN arti200_bcl USING g_enterprise,
                                       g_rtai_d[g_detail_idx].rtai001,g_rtai_d[g_detail_idx].rtai003
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("arti200_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="arti200.main" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   #LET g_forupd_sql = ""
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   #LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   #DECLARE arti200_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_arti200 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL arti200_init()   
 
      #進入選單 Menu (="N")
      CALL arti200_ui_dialog() 
	  
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_arti200
      
   END IF 
   
   #CLOSE arti200_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="arti200.modify" ver="1" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION arti200_modify()
   {<Local define>}
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   {</Local define>}
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
 
   #add-point:modify段define_sql
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT rtaistus,rtai001,'',rtai002,'',rtai003,'',rtai004,'',rtai005,'',rtai006, 
       '','','',rtaiownid,'',rtaiowndp,'',rtaicrtid,'',rtaicrtdp,'',rtaicrtdt,rtaimodid,'',rtaimoddt  
       FROM rtai_t WHERE rtaient=? AND rtai001=? AND rtai003=? FOR UPDATE"
   #add-point:modify段define_sql
   {<point name="modify.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE arti200_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
   
 
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_rtai_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtai_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL arti200_b_fill(g_wc2)
            LET g_detail_cnt = g_rtai_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_rtai_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_rtai_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_rtai_d[l_ac].rtai001 IS NOT NULL
               AND g_rtai_d[l_ac].rtai003 IS NOT NULL
 
 
            THEN
               LET l_cmd='u'
               LET g_rtai_d_t.* = g_rtai_d[l_ac].*  #BACKUP
               IF NOT arti200_lock_b("rtai_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH arti200_bcl INTO g_rtai_d[l_ac].rtaistus,g_rtai_d[l_ac].rtai001,g_rtai_d[l_ac].rtai001_desc, 
                      g_rtai_d[l_ac].rtai002,g_rtai_d[l_ac].rtai002_desc,g_rtai_d[l_ac].rtai003,g_rtai_d[l_ac].rtai003_desc, 
                      g_rtai_d[l_ac].rtai004,g_rtai_d[l_ac].rtai004_desc,g_rtai_d[l_ac].rtai005,g_rtai_d[l_ac].rtai005_desc, 
                      g_rtai_d[l_ac].rtai006,g_rtai_d[l_ac].rtai006_desc,g_rtai2_d[l_ac].rtai001,g_rtai2_d[l_ac].rtai003, 
                      g_rtai2_d[l_ac].rtaiownid,g_rtai2_d[l_ac].rtaiownid_desc,g_rtai2_d[l_ac].rtaiowndp, 
                      g_rtai2_d[l_ac].rtaiowndp_desc,g_rtai2_d[l_ac].rtaicrtid,g_rtai2_d[l_ac].rtaicrtid_desc, 
                      g_rtai2_d[l_ac].rtaicrtdp,g_rtai2_d[l_ac].rtaicrtdp_desc,g_rtai2_d[l_ac].rtaicrtdt, 
                      g_rtai2_d[l_ac].rtaimodid,g_rtai2_d[l_ac].rtaimodid_desc,g_rtai2_d[l_ac].rtaimoddt 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_rtai_d_t.rtai001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL arti200_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtai_d_t.* TO NULL
            INITIALIZE g_rtai_d[l_ac].* TO NULL 
            
            LET g_rtai_d_t.* = g_rtai_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL arti200_set_entry_b("a")
            CALL arti200_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtai_d[li_reproduce_target].* = g_rtai_d[li_reproduce].*
               LET g_rtai2_d[li_reproduce_target].* = g_rtai2_d[li_reproduce].*
 
               LET g_rtai_d[g_rtai_d.getLength()].rtai001 = NULL
               LET g_rtai_d[g_rtai_d.getLength()].rtai003 = NULL
 
 
            END IF
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_rtai2_d[l_ac].rtaiownid = g_user
      LET g_rtai2_d[l_ac].rtaiowndp = g_dept
      LET g_rtai2_d[l_ac].rtaicrtid = g_user
      LET g_rtai2_d[l_ac].rtaicrtdp = g_dept 
      LET g_rtai2_d[l_ac].rtaicrtdt = cl_get_current()
      LET g_rtai2_d[l_ac].rtaimodid = ""
      LET g_rtai2_d[l_ac].rtaimoddt = ""
      #LET g_rtai_d[l_ac].rtaistus = ""
 
 
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM rtai_t 
             WHERE rtaient = g_enterprise AND rtai001 = g_rtai_d[l_ac].rtai001
                                       AND rtai003 = g_rtai_d[l_ac].rtai003
 
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtai_d[g_detail_idx].rtai001
               LET gs_keys[2] = g_rtai_d[g_detail_idx].rtai003
               CALL arti200_insert_b('rtai_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_rtai_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("rtai_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL arti200_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (rtai001 = '", g_rtai_d[l_ac].rtai001, "' "
                                  ," AND rtai003 = '", g_rtai_d[l_ac].rtai003, "' "
 
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_rtai_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_rtai_d.deleteElement(l_ac)
               NEXT FIELD rtai001
            END IF
            IF g_rtai_d[l_ac].rtai001 IS NOT NULL
               AND g_rtai_d_t.rtai003 IS NOT NULL
 
 
               THEN     
			   
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM rtai_t
                WHERE rtaient = g_enterprise AND 
                      rtai001 = g_rtai_d_t.rtai001
                      AND rtai003 = g_rtai_d_t.rtai003
 
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("rtai_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE arti200_bcl
               LET l_count = g_rtai_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtai_d[g_detail_idx].rtai001
               LET gs_keys[2] = g_rtai_d[g_detail_idx].rtai003
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL arti200_delete_b('rtai_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<rtai001>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtai001
            
            #add-point:AFTER FIELD rtai001
            {<point name="input.a.page1.rtai001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtai001
            #add-point:BEFORE FIELD rtai001
            {<point name="input.b.page1.rtai001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtai001
            #add-point:ON CHANGE rtai001
            {<point name="input.g.page1.rtai001" />}
            #END add-point
 
         #----<<rtai002>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtai002
            
            #add-point:AFTER FIELD rtai002
            {<point name="input.a.page1.rtai002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtai002
            #add-point:BEFORE FIELD rtai002
            {<point name="input.b.page1.rtai002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtai002
            #add-point:ON CHANGE rtai002
            {<point name="input.g.page1.rtai002" />}
            #END add-point
 
         #----<<rtai003>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtai003
            
            #add-point:AFTER FIELD rtai003
            {<point name="input.a.page1.rtai003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtai003
            #add-point:BEFORE FIELD rtai003
            {<point name="input.b.page1.rtai003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtai003
            #add-point:ON CHANGE rtai003
            {<point name="input.g.page1.rtai003" />}
            #END add-point
 
         #----<<rtai004>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtai004
            
            #add-point:AFTER FIELD rtai004
            {<point name="input.a.page1.rtai004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtai004
            #add-point:BEFORE FIELD rtai004
            {<point name="input.b.page1.rtai004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtai004
            #add-point:ON CHANGE rtai004
            {<point name="input.g.page1.rtai004" />}
            #END add-point
 
         #----<<rtai005>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtai005
            
            #add-point:AFTER FIELD rtai005
            {<point name="input.a.page1.rtai005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtai005
            #add-point:BEFORE FIELD rtai005
            {<point name="input.b.page1.rtai005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtai005
            #add-point:ON CHANGE rtai005
            {<point name="input.g.page1.rtai005" />}
            #END add-point
 
         #----<<rtai006>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtai006
            
            #add-point:AFTER FIELD rtai006
            {<point name="input.a.page1.rtai006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtai006
            #add-point:BEFORE FIELD rtai006
            {<point name="input.b.page1.rtai006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtai006
            #add-point:ON CHANGE rtai006
            {<point name="input.g.page1.rtai006" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<rtai001>>----
         #Ctrlp:input.c.page1.rtai001
         ON ACTION controlp INFIELD rtai001
            #add-point:ON ACTION controlp INFIELD rtai001
            {<point name="input.c.page1.rtai001" />}
            #END add-point
 
         #----<<rtai002>>----
         #Ctrlp:input.c.page1.rtai002
         ON ACTION controlp INFIELD rtai002
            #add-point:ON ACTION controlp INFIELD rtai002
            {<point name="input.c.page1.rtai002" />}
            #END add-point
 
         #----<<rtai003>>----
         #Ctrlp:input.c.page1.rtai003
         ON ACTION controlp INFIELD rtai003
            #add-point:ON ACTION controlp INFIELD rtai003
            {<point name="input.c.page1.rtai003" />}
            #END add-point
 
         #----<<rtai004>>----
         #Ctrlp:input.c.page1.rtai004
         ON ACTION controlp INFIELD rtai004
            #add-point:ON ACTION controlp INFIELD rtai004
            {<point name="input.c.page1.rtai004" />}
            #END add-point
 
         #----<<rtai005>>----
         #Ctrlp:input.c.page1.rtai005
         ON ACTION controlp INFIELD rtai005
            #add-point:ON ACTION controlp INFIELD rtai005
            {<point name="input.c.page1.rtai005" />}
            #END add-point
 
         #----<<rtai006>>----
         #Ctrlp:input.c.page1.rtai006
         ON ACTION controlp INFIELD rtai006
            #add-point:ON ACTION controlp INFIELD rtai006
            {<point name="input.c.page1.rtai006" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_rtai_d[l_ac].* = g_rtai_d_t.*
               CLOSE arti200_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_rtai_d[l_ac].rtai001,-263,1)
               LET g_rtai_d[l_ac].* = g_rtai_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_rtai2_d[l_ac].rtaimodid = g_user 
LET g_rtai2_d[l_ac].rtaimoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE rtai_t SET (rtaistus,rtai001,rtai002,rtai003,rtai004,rtai005,rtai006,rtaiownid, 
                   rtaiowndp,rtaicrtid,rtaicrtdp,rtaicrtdt,rtaimodid,rtaimoddt) = (g_rtai_d[l_ac].rtaistus, 
                   g_rtai_d[l_ac].rtai001,g_rtai_d[l_ac].rtai002,g_rtai_d[l_ac].rtai003,g_rtai_d[l_ac].rtai004, 
                   g_rtai_d[l_ac].rtai005,g_rtai_d[l_ac].rtai006,g_rtai2_d[l_ac].rtaiownid,g_rtai2_d[l_ac].rtaiowndp, 
                   g_rtai2_d[l_ac].rtaicrtid,g_rtai2_d[l_ac].rtaicrtdp,g_rtai2_d[l_ac].rtaicrtdt,g_rtai2_d[l_ac].rtaimodid, 
                   g_rtai2_d[l_ac].rtaimoddt)
                WHERE rtaient = g_enterprise AND
                  rtai001 = g_rtai_d_t.rtai001 #項次   
                  AND rtai003 = g_rtai_d_t.rtai003  
 
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("rtai_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("rtai_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtai_d[g_detail_idx].rtai001
               LET gs_keys_bak[1] = g_rtai_d_t.rtai001
               LET gs_keys[2] = g_rtai_d[g_detail_idx].rtai003
               LET gs_keys_bak[2] = g_rtai_d_t.rtai003
               CALL arti200_update_b('rtai_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL arti200_unlock_b("rtai_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_rtai_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_rtai_d.getLength()+1
            
      END INPUT
      
 
      
      DISPLAY ARRAY g_rtai2_d TO s_detail2.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL arti200_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont() 
            
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
            
      END DISPLAY
 
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD rtaistus
            WHEN "s_detail2"
               NEXT FIELD rtai001_2
 
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE arti200_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
  </section>
  <section id="arti200.modify_detail_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION arti200_modify_detail_chk(ps_record)
   {<Local define>}
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   {</Local define>}
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "rtaistus"
      WHEN "s_detail2"
         LET ls_return = "rtai001_2"
 
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="arti200.other_function" ver="1" status="" src="s">
    <![CDATA[   
{<point name="other.function"/>}
]]>
  </section>
  <section id="arti200.query" ver="1" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION arti200_query()
   {<Local define>}
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_rtai_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON rtaistus,rtai001,rtai002,rtai003,rtai004,rtai005,rtai006,rtaiownid,rtaiowndp, 
          rtaicrtid,rtaicrtdp,rtaicrtdt,rtaimodid,rtaimoddt 
 
         FROM s_detail1[1].rtaistus,s_detail1[1].rtai001,s_detail1[1].rtai002,s_detail1[1].rtai003,s_detail1[1].rtai004, 
             s_detail1[1].rtai005,s_detail1[1].rtai006,s_detail2[1].rtaiownid,s_detail2[1].rtaiowndp, 
             s_detail2[1].rtaicrtid,s_detail2[1].rtaicrtdp,s_detail2[1].rtaicrtdt,s_detail2[1].rtaimodid, 
             s_detail2[1].rtaimoddt 
      
         #此段落由子樣板a11產生
         ##----<<rtaiownid>>----
         #ON ACTION controlp INFIELD rtaiownid
         #   CALL q_common('','rtaiownid',TRUE,FALSE,g_rtai2_d[1].rtaiownid) RETURNING ls_return
         #   DISPLAY ls_return TO rtaiownid
         #   NEXT FIELD rtaiownid  
         #
         ##----<<rtaiowndp>>----
         #ON ACTION controlp INFIELD rtaiowndp
         #   CALL q_common('','rtaiowndp',TRUE,FALSE,g_rtai2_d[1].rtaiowndp) RETURNING ls_return
         #   DISPLAY ls_return TO rtaiowndp
         #   NEXT FIELD rtaiowndp
         #
         ##----<<rtaicrtid>>----
         #ON ACTION controlp INFIELD rtaicrtid
         #   CALL q_common('','rtaicrtid',TRUE,FALSE,g_rtai2_d[1].rtaicrtid) RETURNING ls_return
         #   DISPLAY ls_return TO rtaicrtid
         #   NEXT FIELD rtaicrtid
         #
         ##----<<rtaicrtdp>>----
         #ON ACTION controlp INFIELD rtaicrtdp
         #   CALL q_common('','rtaicrtdp',TRUE,FALSE,g_rtai2_d[1].rtaicrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO rtaicrtdp
         #   NEXT FIELD rtaicrtdp
         #
         ##----<<rtaimodid>>----
         #ON ACTION controlp INFIELD rtaimodid
         #   CALL q_common('','rtaimodid',TRUE,FALSE,g_rtai2_d[1].rtaimodid) RETURNING ls_return
         #   DISPLAY ls_return TO rtaimodid
         #   NEXT FIELD rtaimodid
         #
         ##----<<rtaicnfid>>----
         ##ON ACTION controlp INFIELD rtaicnfid
         ##   CALL q_common('','rtaicnfid',TRUE,FALSE,g_rtai_d[1].rtaicnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO rtaicnfid
         ##   NEXT FIELD rtaicnfid
         #
         ##----<<rtaipstid>>----
         ##ON ACTION controlp INFIELD rtaipstid
         ##   CALL q_common('','rtaipstid',TRUE,FALSE,g_rtai_d[1].rtaipstid) RETURNING ls_return
         ##   DISPLAY ls_return TO rtaipstid
         ##   NEXT FIELD rtaipstid
         
         ##----<<rtaicrtdt>>----
         AFTER FIELD rtaicrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtaimoddt>>----
         AFTER FIELD rtaimoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtaicnfdt>>----
         #AFTER FIELD rtaicnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtaipstdt>>----
         #AFTER FIELD rtaipstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
      
         #---------------------<  Detail: page1  >---------------------
         #----<<rtai001>>----
         #Ctrlp:construct.c.page1.rtai001
         ON ACTION controlp INFIELD rtai001
            #add-point:ON ACTION controlp INFIELD rtai001
            {<point name="construct.c.page1.rtai001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtai001
            #add-point:BEFORE FIELD rtai001
            {<point name="query.b.page1.rtai001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtai001
            
            #add-point:AFTER FIELD rtai001
            {<point name="query.a.page1.rtai001" />}
            #END add-point
            
 
         #----<<rtai002>>----
         #Ctrlp:construct.c.page1.rtai002
         ON ACTION controlp INFIELD rtai002
            #add-point:ON ACTION controlp INFIELD rtai002
            {<point name="construct.c.page1.rtai002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtai002
            #add-point:BEFORE FIELD rtai002
            {<point name="query.b.page1.rtai002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtai002
            
            #add-point:AFTER FIELD rtai002
            {<point name="query.a.page1.rtai002" />}
            #END add-point
            
 
         #----<<rtai003>>----
         #Ctrlp:construct.c.page1.rtai003
         ON ACTION controlp INFIELD rtai003
            #add-point:ON ACTION controlp INFIELD rtai003
            {<point name="construct.c.page1.rtai003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtai003
            #add-point:BEFORE FIELD rtai003
            {<point name="query.b.page1.rtai003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtai003
            
            #add-point:AFTER FIELD rtai003
            {<point name="query.a.page1.rtai003" />}
            #END add-point
            
 
         #----<<rtai004>>----
         #Ctrlp:construct.c.page1.rtai004
         ON ACTION controlp INFIELD rtai004
            #add-point:ON ACTION controlp INFIELD rtai004
            {<point name="construct.c.page1.rtai004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtai004
            #add-point:BEFORE FIELD rtai004
            {<point name="query.b.page1.rtai004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtai004
            
            #add-point:AFTER FIELD rtai004
            {<point name="query.a.page1.rtai004" />}
            #END add-point
            
 
         #----<<rtai005>>----
         #Ctrlp:construct.c.page1.rtai005
         ON ACTION controlp INFIELD rtai005
            #add-point:ON ACTION controlp INFIELD rtai005
            {<point name="construct.c.page1.rtai005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtai005
            #add-point:BEFORE FIELD rtai005
            {<point name="query.b.page1.rtai005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtai005
            
            #add-point:AFTER FIELD rtai005
            {<point name="query.a.page1.rtai005" />}
            #END add-point
            
 
         #----<<rtai006>>----
         #Ctrlp:construct.c.page1.rtai006
         ON ACTION controlp INFIELD rtai006
            #add-point:ON ACTION controlp INFIELD rtai006
            {<point name="construct.c.page1.rtai006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtai006
            #add-point:BEFORE FIELD rtai006
            {<point name="query.b.page1.rtai006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtai006
            
            #add-point:AFTER FIELD rtai006
            {<point name="query.a.page1.rtai006" />}
            #END add-point
            
 
  
         
         #---------------------<  Detail: page2  >---------------------
  
 
 
      
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_init()
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
         ON ACTION qbe_select
#saki            CALL cl_qbe_select()
      
         ON ACTION qbe_save
#saki            CALL cl_qbe_save()
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
   
   #LET g_wc2 = g_wc2 CLIPPED, cl_get_extra_cond("", "")
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL arti200_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
  </section>
  <section id="arti200.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION arti200_set_entry_b(p_cmd)                                                  
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1         
   {</Local define>}
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
  </section>
  <section id="arti200.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION arti200_set_no_entry_b(p_cmd)                                               
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1           
   {</Local define>}
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
  </section>
  <section id="arti200.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="arti200.ui_dialog" ver="1" status="" src="s">
    <![CDATA[#+ 功能選單 
PRIVATE FUNCTION arti200_ui_dialog()
   {<Local define>}
   DEFINE li_idx   LIKE type_t.num5
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL arti200_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_rtai_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
      
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               
            #自訂ACTION(detail_show,page_1)
            
 
 
         ON ACTION detail_qrystr
 
            LET g_action_choice="detail_qrystr"
            IF cl_auth_chk_act("detail_qrystr") THEN 
               MENU "" ATTRIBUTE(STYLE="popup")
 
                  ON ACTION aooi200
 
                     LET g_action_choice="aooi200"
                     IF cl_auth_chk_act("aooi200") THEN 
                        #add-point:ON ACTION aooi200
                        {<point name="menu.detail_show.page1_sub.aooi200" />}
                        #END add-point
                        
                     END IF
 
               END MENU
               #add-point:ON ACTION detail_qrystr
               {<point name="menu.detail_show.page1.detail_qrystr" />}
               #END add-point
               EXIT DIALOG
            END IF
 
               
         END DISPLAY
      
         DISPLAY ARRAY g_rtai2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               
            #自訂ACTION(detail_show,page_2)
            
 
 
         ON ACTION detail_qrystr
 
            LET g_action_choice="detail_qrystr"
            IF cl_auth_chk_act("detail_qrystr") THEN 
               MENU "" ATTRIBUTE(STYLE="popup")
 
                  ON ACTION aooi200
 
                     LET g_action_choice="aooi200"
                     IF cl_auth_chk_act("aooi200") THEN 
                        #add-point:ON ACTION aooi200
                        {<point name="menu.detail_show.page2_sub.aooi200" />}
                        #END add-point
                        
                     END IF
 
               END MENU
               #add-point:ON ACTION detail_qrystr
               {<point name="menu.detail_show.page2.detail_qrystr" />}
               #END add-point
               EXIT DIALOG
            END IF
 
               
         END DISPLAY
 
 
      
         #add-point:ui_dialog段more_displayarray
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
 
 
 
         ON ACTION modify
 
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL arti200_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify_detail
 
            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL arti200_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION open_aooi200
 
            LET g_action_choice="open_aooi200"
            IF cl_auth_chk_act("open_aooi200") THEN 
               #add-point:ON ACTION open_aooi200
               {<point name="menu.open_aooi200" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL arti200_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
  <section id="arti200.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION arti200_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE arti200_bcl
   #END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="arti200.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION arti200_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "rtai_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "rtai_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE rtai_t 
         SET (rtai001,rtai003
              ,rtaistus,rtai002,rtai004,rtai005,rtai006,rtaiownid,rtaiowndp,rtaicrtid,rtaicrtdp,rtaicrtdt,rtaimodid,rtaimoddt) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtai_d[l_ac].rtaistus,g_rtai_d[l_ac].rtai002,g_rtai_d[l_ac].rtai004,g_rtai_d[l_ac].rtai005, 
                  g_rtai_d[l_ac].rtai006,g_rtai2_d[l_ac].rtaiownid,g_rtai2_d[l_ac].rtaiowndp,g_rtai2_d[l_ac].rtaicrtid, 
                  g_rtai2_d[l_ac].rtaicrtdp,g_rtai2_d[l_ac].rtaicrtdt,g_rtai2_d[l_ac].rtaimodid,g_rtai2_d[l_ac].rtaimoddt)  

         WHERE rtai001 = ps_keys_bak[1] AND rtai003 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("rtai_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("rtai_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
