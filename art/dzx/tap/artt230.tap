<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="artt230" std_prog="artt230" erpver="1.0" module="ART" ver="1" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.artt230_rtam004_chk" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 检查业务人员
# Memo...........:
# Usage..........: 
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/07/09 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_rtam004_chk()
DEFINE l_ooag003   LIKE ooag_t.ooag003
DEFINE l_ooagstus  LIKE ooag_t.ooagstus

   LET g_errno = ''
   SELECT ooag003,ooagstus INTO l_ooag003,l_ooagstus
     FROM ooag_t
    WHERE ooagent = g_enterprise
      AND ooag001 = g_rtam_m.rtam004
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'aim-00069'
      WHEN l_ooagstus <> 'Y'   LET g_errno = 'ais-00018'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      LET g_rtam_m.rtam005 = l_ooag003
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtam_m.rtam005
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_rtam_m.rtam005_desc = '', g_rtn_fields[1] , ''
   ELSE
      LET g_rtam_m.rtam005 = ''  
      LET g_rtam_m.rtam005_desc = ''
   END IF
   DISPLAY BY NAME g_rtam_m.rtam005,g_rtam_m.rtam005_desc
END FUNCTION]]>
  </point>
  <point name="function.artt230_rtam005_chk" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 业务部门检查
# Memo...........:
# Usage..........: 
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/07/09 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_rtam005_chk()
DEFINE l_ooegstus  LIKE ooag_t.ooagstus
DEFINE l_n         LIKE type_t.num5
   LET g_errno = ''
   SELECT ooegstus INTO l_ooegstus
     FROM ooeg_t
    WHERE ooegent = g_enterprise
      AND ooeg001 = g_rtam_m.rtam005
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'art-00352'
      WHEN l_ooegstus <> 'Y'   LET g_errno = 'art-00353'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      IF NOT cl_null(g_rtam_m.rtam004) THEN
         LET l_n = 0      
         SELECT COUNT(*) INTO l_n
           FROM ooag_t
          WHERE ooagent = g_enterprise
            AND ooag001 = g_rtam_m.rtam004 
            AND ooag003 = g_rtam_m.rtam005
         IF l_n = 0 THEN 
            LET g_errno = 'art-00224'
         END IF 
      END IF 
   END IF
END FUNCTION]]>
  </point>
  <point name="function.artt230_rtan002_get" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 资源编号带值
# Memo...........:
# Usage..........: CALL artt230_rtan002_get()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/07/09 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_rtan002_get()
   
   SELECT rtal005,rtal010 
     INTO g_rtan_d[l_ac].rtan006,g_rtan_d[l_ac].rtan016
     FROM rtal_t
    WHERE rtalent = g_enterprise
      AND rtal001 = g_rtan_d[l_ac].rtan002
   DISPLAY BY NAME g_rtan_d[l_ac].rtan006,g_rtan_d[l_ac].rtan016
END FUNCTION]]>
  </point>
  <point name="function.artt230_rtan007_get" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 专柜编号带值
# Memo...........:
# Usage..........: CALL artt230_rtan007_get()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/07/09 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_rtan007_get()

   SELECT stfa010,stfa011,stfa044
     INTO g_rtan_d[l_ac].rtan008,g_rtan_d[l_ac].rtan009,g_rtan_d[l_ac].rtan010
     FROM stfa_t
    WHERE stfaent = g_enterprise
      AND stfa005 = g_rtan_d[l_ac].rtan007
  
  DISPLAY BY NAME g_rtan_d[l_ac].rtan008,g_rtan_d[l_ac].rtan009,g_rtan_d[l_ac].rtan010
  INITIALIZE g_ref_fields TO NULL
  LET g_ref_fields[1] = g_rtan_d[l_ac].rtan008
  CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
  LET g_rtan_d[l_ac].rtan008_desc = g_rtn_fields[1]

  INITIALIZE g_ref_fields TO NULL
  LET g_ref_fields[1] = g_rtan_d[l_ac].rtan009
  CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
  LET g_rtan_d[l_ac].rtan009_desc = g_rtn_fields[1]
  
  INITIALIZE g_ref_fields TO NULL
  LET g_ref_fields[1] = g_rtan_d[l_ac].rtan010
  CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
  LET g_rtan_d[l_ac].rtan010_desc = g_rtn_fields[1]
  
END FUNCTION]]>
  </point>
  <point name="function.artt230_rtan011_get" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 费用编码带值
# Memo...........:
# Usage..........: CALL artt230_rtan011_get()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/07/09 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_rtan011_get()

   SELECT stae011,stae007
     INTO g_rtan_d[l_ac].rtan012,g_rtan_d[l_ac].rtan013
     FROM stae_t
    WHERE staeent = g_enterprise
      AND stae001 = g_rtan_d[l_ac].rtan011

  DISPLAY BY NAME g_rtan_d[l_ac].rtan012,g_rtan_d[l_ac].rtan013
END FUNCTION]]>
  </point>
  <point name="function.artt230_get_rtao" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 抓取营运组织资源单头资料
# Memo...........:
# Usage..........: CALL artt230_get_rtao()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/07/10 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_get_rtao()
   
   SELECT rtao003,rtao004,rtao005,rtao006
     INTO g_rtam_m.rtam003,g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006
     FROM rtao_t
    WHERE rtaoent = g_enterprise
      AND rtao001 = g_rtam_m.rtam001
   DISPLAY BY NAME g_rtam_m.rtam003,g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtam_m.rtam004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_rtam_m.rtam004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtam_m.rtam004_desc
    
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtam_m.rtam005
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtam_m.rtam005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtam_m.rtam005_desc
      
END FUNCTION]]>
  </point>
  <point name="function.artt230_get_rtap" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 抓取门店资源单身明细
# Memo...........:
# Usage..........: CALL artt230_get_rtap()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/07/10 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_get_rtap()

    INSERT INTO rtan_t(rtanent   ,rtansite   ,rtandocno,  rtanseq,
                       rtan001   ,rtan002    ,rtan003 ,   rtan004,
                       rtan005   ,rtan006    ,rtan007 ,   rtan008,
                       rtan009   ,rtan010    ,rtan011 ,   rtan012,
                       rtan013   ,rtan014    ,rtan015 ,   rtan016,
                       rtan017   ,rtan018    ,rtan019 ,   rtan020,
                       rtan021   ,rtan022    ,rtan023 )
                SELECT rtapent   ,rtapsite   ,g_rtam_m.rtamdocno ,rtapseq,
                       rtap001   ,rtap002    ,rtap003 ,   rtap004,
                       rtap005   ,rtap006    ,rtap007 ,   rtap008,
                       rtap009   ,rtap010    ,rtap011 ,   rtap012,
                       rtap013   ,rtap014    ,rtap015 ,   rtap016,
                       rtap017   ,rtap018    ,rtap019 ,   rtap020,
                       rtap021   ,rtap022    ,rtap023
                  FROM rtap_t
                 WHERE rtapent = g_enterprise
                   AND rtap001 = g_rtam_m.rtam001
    IF SQLCA.sqlcode THEN
       INITIALIZE g_errparam TO NULL 
       LET g_errparam.extend = 'INSERT INTO rtap_t' 
       LET g_errparam.code   = SQLCA.sqlcode 
       LET g_errparam.popup  = TRUE 
       CALL cl_err()
    END IF
END FUNCTION]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtan_d[l_ac].rtan002
         CALL ap_ref_array2(g_ref_fields,"SELECT rtall003 FROM rtall_t WHERE rtallent='"||g_enterprise||"' AND rtall001=? AND rtall002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtan_d[l_ac].rtan002_desc = g_rtn_fields[1]
          
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtan_d[l_ac].rtan007
         CALL ap_ref_array2(g_ref_fields,"SELECT mhael023 FROM mhael_t WHERE mhaelent='"||g_enterprise||"' AND mhael001=? AND mhael022='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtan_d[l_ac].rtan007_desc = g_rtn_fields[1]

         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtan_d[l_ac].rtan008
         CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtan_d[l_ac].rtan008_desc = g_rtn_fields[1]
         
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtan_d[l_ac].rtan009
         CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtan_d[l_ac].rtan009_desc = g_rtn_fields[1]
         
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtan_d[l_ac].rtan010
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtan_d[l_ac].rtan010_desc = g_rtn_fields[1]

         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtan_d[l_ac].rtan011
         CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtan_d[l_ac].rtan011_desc = g_rtn_fields[1]]]>
  </point>
  <point name="construct.c.page1.rtan002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtal001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtan002  #顯示到畫面上
            NEXT FIELD rtan002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.rtan007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtan007  #顯示到畫面上
            NEXT FIELD rtan007                     #返回原欄位
    ]]>
  </point>
  <point name="construct.c.page1.rtan008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "('1','3')"
            CALL q_pmaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtan008  #顯示到畫面上
            NEXT FIELD rtan008                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.rtan009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtan009  #顯示到畫面上
            NEXT FIELD rtan009                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.rtan010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtan010  #顯示到畫面上
            NEXT FIELD rtan010                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.rtan011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtan011  #顯示到畫面上
            NEXT FIELD rtan011                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtam001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtam001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtam001  #顯示到畫面上
            NEXT FIELD rtam001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtam003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_prcf001_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtam003  #顯示到畫面上
            NEXT FIELD rtam003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtam004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtam004  #顯示到畫面上
            NEXT FIELD rtam004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtam005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtam005  #顯示到畫面上
            NEXT FIELD rtam005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtamcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtamcnfid  #顯示到畫面上
            NEXT FIELD rtamcnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtamcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtamcrtdp  #顯示到畫面上
            NEXT FIELD rtamcrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtamcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtamcrtid  #顯示到畫面上
            NEXT FIELD rtamcrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtamdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtamdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtamdocno  #顯示到畫面上
            NEXT FIELD rtamdocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtammodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtammodid  #顯示到畫面上
            NEXT FIELD rtammodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtamowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtamowndp  #顯示到畫面上
            NEXT FIELD rtamowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtamownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtamownid  #顯示到畫面上
            NEXT FIELD rtamownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtamsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtamsite  #顯示到畫面上
            NEXT FIELD rtamsite                     #返回原欄位
    

]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT s_aooi200_del_docno(g_rtam_m.rtamdocno,g_rtam_m.rtamdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
  </point>
  <point name="input.a.page1.rtan002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtan_d[l_ac].rtan002) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND g_rtan_d[l_ac].rtan002!=g_rtan_d_t.rtan002) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = '1'
                  LET g_chkparam.arg1 = g_rtan_d[l_ac].rtan002
                  IF NOT cl_chk_exist("v_rtal001") THEN
                     LET g_rtan_d[l_ac].rtan002 = g_rtan_d_t.rtan002
                     NEXT FIELD rtan002
                  END IF
                  LET l_n = 0               
                  #检查编号是否重复 
                  SELECT COUNT(*) INTO l_n
                    FROM rtan_t
                   WHERE rtanent = g_enterprise
                     AND rtan002 = g_rtan_d[l_ac].rtan002
                     AND rtandocno = g_rtam_m.rtamdocno
                  IF l_n > 0 THEN 
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_rtan_d[l_ac].rtan002
                     LET g_errparam.code   = 'std-00004'
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET g_rtan_d[l_ac].rtan002 = g_rtan_d_t.rtan002
                     NEXT FIELD rtan002
                  END IF 
                  LET l_n = 0
                  #检查是否存在其他未审核的单据中
                  SELECT COUNT(*) INTO l_n
                    FROM rtan_t,rtam_t
                   WHERE rtanent = g_enterprise
                     AND rtan002 = g_rtan_d[l_ac].rtan002
                     AND rtandocno <> g_rtam_m.rtamdocno
                     AND rtanent = rtament
                     AND rtandocno = rtamdocno
                     AND rtamstus = 'N'
                  IF l_n > 0 THEN 
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_rtan_d[l_ac].rtan002
                     LET g_errparam.code   = 'art-00677'
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET g_rtan_d[l_ac].rtan002 = g_rtan_d_t.rtan002
                     NEXT FIELD rtan002
                  END IF 
               END IF 
            END IF
            CALL artt230_rtan002_get()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan002
            CALL ap_ref_array2(g_ref_fields,"SELECT rtall003 FROM rtall_t WHERE rtallent='"||g_enterprise||"' AND rtall001=? AND rtall002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan002_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtan_d[l_ac].rtan002,g_rtan_d[l_ac].rtan002_desc  ]]>
  </point>
  <point name="input.a.page1.rtan003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtan_d[l_ac].rtan003) AND NOT cl_null(g_rtan_d[l_ac].rtan004) THEN 
               IF g_rtan_d[l_ac].rtan003 > g_rtan_d[l_ac].rtan004 THEN 
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = '' 
                  LET g_errparam.code   = 'art-00545'
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET g_rtan_d[l_ac].rtan003 = g_rtan_d_t.rtan003
                  NEXT FIELD rtan003
               END IF 
            END IF ]]>
  </point>
  <point name="input.a.page1.rtan004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtan_d[l_ac].rtan003) AND NOT cl_null(g_rtan_d[l_ac].rtan004) THEN 
               IF g_rtan_d[l_ac].rtan003 > g_rtan_d[l_ac].rtan004 THEN 
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = '' 
                  LET g_errparam.code   = 'art-00545'
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET g_rtan_d[l_ac].rtan004 = g_rtan_d_t.rtan004
                  NEXT FIELD rtan004
               END IF 
            END IF ]]>
  </point>
  <point name="input.a.page1.rtan005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtan_d[l_ac].rtan005) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.rtan007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtan_d[l_ac].rtan007) THEN 
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_rtan_d[l_ac].rtan007
               IF NOT cl_chk_exist("v_mhae001") THEN
                  LET g_rtan_d[l_ac].rtan007 = g_rtan_d_t.rtan007
                  NEXT FIELD rtan007
               ELSE
                  #检查归属组织是否为当前组织
                  SELECT mhaesite INTO l_mhaesite
                    FROM mhae_t
                   WHERE mhaeent = g_enterprise
                     AND mhae001 = g_rtan_d[l_ac].rtan007
                  IF l_mhaesite != g_rtam_m.rtamsite THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = 'art-00675'
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET g_rtan_d[l_ac].rtan007 = g_rtan_d_t.rtan007
                     NEXT FIELD rtan007
                  END IF 
               END IF
               CALL artt230_rtan007_get()
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan007
            CALL ap_ref_array2(g_ref_fields,"SELECT mhael023 FROM mhael_t WHERE mhaelent='"||g_enterprise||"' AND mhael001=? AND mhael022='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan007_desc = g_rtn_fields[1]]]>
  </point>
  <point name="input.a.page1.rtan010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtan_d[l_ac].rtan010) THEN 
               LET g_errno = ''
               SELECT ooegstus INTO l_ooegstus
                 FROM ooeg_t
                WHERE ooegent = g_enterprise
                  AND ooeg001 = g_rtan_d[l_ac].rtan010
               CASE 
                  WHEN SQLCA.SQLCODE = 100 LET g_errno = 'art-00352'
                  WHEN l_ooegstus <> 'Y'   LET g_errno = 'art-00353'
                  OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
               END CASE
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_rtan_d[l_ac].rtan010
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_rtan_d[l_ac].rtan010 = g_rtan_d_t.rtan010
                  NEXT FIELD rtan010
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan010
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan010_desc = g_rtn_fields[1]]]>
  </point>
  <point name="input.a.page1.rtan011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtan_d[l_ac].rtan011) THEN 
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_rtan_d[l_ac].rtan011
               IF NOT cl_chk_exist("v_stae001") THEN
                  LET g_rtan_d[l_ac].rtan011 = g_rtan_d_t.rtan011
                  NEXT FIELD rtan011
               END IF
               CALL artt230_rtan011_get()
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan011
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan011_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtan_d[l_ac].rtan011_desc]]>
  </point>
  <point name="input.a.page1.rtan017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtan_d[l_ac].rtan017) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.rtan018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtan_d[l_ac].rtan018) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.rtanseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_rtam_m.rtamdocno IS NOT NULL AND g_rtan_d[g_detail_idx].rtanseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtam_m.rtamdocno != g_rtamdocno_t OR g_rtan_d[g_detail_idx].rtanseq != g_rtan_d_t.rtanseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtan_t WHERE "||"rtanent = '" ||g_enterprise|| "' AND "||"rtandocno = '"||g_rtam_m.rtamdocno ||"' AND "|| "rtanseq = '"||g_rtan_d[g_detail_idx].rtanseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.rtam001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtam_m.rtam001) THEN
               IF g_rtam_m.rtam000 = 'I' THEN 
                  LET l_n = 0
                  #检查是否存在资料档中
                  SELECT COUNT(*) INTO l_n
                    FROM rtam_t
                   WHERE rtament = g_enterprise
                     AND rtam001 = g_rtam_m.rtam001
                  IF l_n > 0 THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = g_rtam_m.rtam001
                     LET g_errparam.code   = 'std-00004'
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     LET g_rtam_m.rtam001 = g_rtam_m_t.rtam001
                     NEXT FIELD rtam001
                  END IF 
               ELSE
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = '1'
                  LET g_chkparam.arg1 = g_rtam_m.rtam001
                  IF NOT cl_chk_exist("v_stao001") THEN
                     LET g_rtam_m.rtam001 = g_rtam_m_t.rtam001
                     NEXT FIELD rtam001
                  ELSE
                     SELECT MAX(stao002) + 1 INTO g_rtam_m.rtam002
                       FROM stao_t
                      WHERE staoent = g_enterprise
                        AND stao001 = g_rtam_m.rtam001
                     IF cl_null(g_rtam_m.rtam002) THEN 
                        LET g_rtam_m.rtam002 = 1
                     END IF 
                     DISPLAY BY NAME g_rtam_m.rtam001,g_rtam_m.rtam002
                  END IF 
                  CALL artt230_get_rtao()
               END IF 
               CALL cl_set_comp_entry('rtam000',FALSE)
            END IF ]]>
  </point>
  <point name="input.a.rtam003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtam_m.rtam003) THEN 
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_rtam_m.rtam003
               IF NOT cl_chk_exist("v_prcf001") THEN
                  LET g_rtam_m.rtam003 = g_rtam_m_t.rtam003
                  NEXT FIELD rtam003
               ELSE
                  #检查制定组织是否为当前组织
                  SELECT prcfsite INTO l_prcfsite
                    FROM prcf_t
                   WHERE prcfent = g_enterprise
                     AND prcf001 = g_rtam_m.rtam003
                  IF l_prcfsite != g_rtam_m.rtamsite THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = l_prcfsite
                     LET g_errparam.code   = 'art-00672'
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     LET g_rtam_m.rtam003 = g_rtam_m_t.rtam003
                     NEXT FIELD rtam003
                  END IF 
               END IF 
            END IF ]]>
  </point>
  <point name="input.a.rtam004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtam_m.rtam004) THEN 
               CALL artt230_rtam004_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_rtam_m.rtam004 = g_rtam_m_t.rtam004
                  NEXT FIELD rtam004
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtam_m.rtam004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_rtam_m.rtam004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtam_m.rtam004_desc

]]>
  </point>
  <point name="input.a.rtam005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtam_m.rtam005) THEN 
               CALL artt230_rtam005_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_rtam_m.rtam005 = g_rtam_m_t.rtam005
                  NEXT FIELD rtam005
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtam_m.rtam005
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtam_m.rtam005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtam_m.rtam005_desc

]]>
  </point>
  <point name="input.a.rtamdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_rtam_m.rtamdocno) THEN 
                LET l_ooef004 = ""
                SELECT ooef004 INTO l_ooef004
                  FROM ooef_t
                 WHERE ooef001 = g_rtam_m.rtamsite
                   AND ooefent = g_enterprise
               CALL s_aooi200_chk_slip(g_rtam_m.rtamsite,l_ooef004,g_rtam_m.rtamdocno,g_prog) RETURNING l_success
               IF NOT l_success THEN
                  LET g_rtam_m.rtamdocno = g_rtamdocno_t
                  NEXT FIELD CURRENT
               END IF
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_rtam_m.rtamdocno != g_rtamdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtam_t WHERE "||"rtament = '" ||g_enterprise|| "' AND "||"rtamdocno = '"||g_rtam_m.rtamdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.rtamsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtam_m.rtamsite) THEN 
               CALL s_aooi500_chk(g_prog,'rtamsite',g_rtam_m.rtamsite,g_rtam_m.rtamsite) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = g_rtam_m.rtamsite
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  LET g_rtam_m.rtamsite = g_rtam_m_t.rtamsite
                  CALL s_desc_get_department_desc(g_rtam_m.rtamsite) RETURNING g_rtam_m.rtamsite_desc
                  DISPLAY BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamsite_desc
                  NEXT FIELD CURRENT
               END IF 
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtam_m.rtamsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtam_m.rtamsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtam_m.rtamsite_desc]]>
  </point>
  <point name="input.body.before_input2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_n = 0
            SELECT COUNT(*) INTO l_n
              FROM rtan_t
             WHERE rtanent = g_enterprise
               AND rtandocno = g_rtam_m.rtamdocno
            IF g_rtam_m.rtam000 = 'U' AND l_n = 0 THEN 
               CALL artt230_get_rtap()
               CALL artt230_b_fill()
            END IF]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #预设项次
            SELECT MAX(rtanseq) + 1 INTO g_rtan_d[l_ac].rtanseq
              FROM rtan_t
             WHERE rtanent = g_enterprise
               AND rtandocno = g_rtam_m.rtamdocno
            IF cl_null(g_rtan_d[l_ac].rtanseq) THEN 
               LET g_rtan_d[l_ac].rtanseq = 1
            END IF 
            LET g_rtan_d[l_ac].rtan001 = g_rtam_m.rtam001
            LET g_rtan_d[l_ac].rtan003 = g_today
            LET g_rtan_d[l_ac].rtan004 = g_today]]>
  </point>
  <point name="input.c.page1.rtan002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtan_d[l_ac].rtan002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s
            LET g_qryparam.WHERE = " rtal012 = '1' "

            CALL q_rtal001()                                #呼叫開窗

            LET g_rtan_d[l_ac].rtan002 = g_qryparam.return1              
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan002
            CALL ap_ref_array2(g_ref_fields,"SELECT rtall003 FROM rtall_t WHERE rtallent='"||g_enterprise||"' AND rtall001=? AND rtall002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan002_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtan_d[l_ac].rtan002,g_rtan_d[l_ac].rtan002_desc       #

            NEXT FIELD rtan002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.rtan007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtan_d[l_ac].rtan007
            #給予arg
            LET g_qryparam.arg1 = g_rtam_m.rtamsite
            CALL q_mhae001()                                #呼叫開窗
            LET g_rtan_d[l_ac].rtan007 = g_qryparam.return1       
            DISPLAY g_rtan_d[l_ac].rtan007 TO rtan007
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan007
            CALL ap_ref_array2(g_ref_fields,"SELECT mhael023 FROM mhael_t WHERE mhaelent='"||g_enterprise||"' AND mhael001=? AND mhael022='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan007_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtan_d[l_ac].rtan007_desc]]>
  </point>
  <point name="input.c.page1.rtan010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtan_d[l_ac].rtan010             #給予default值
            LET g_qryparam.default2 = "" #g_rtan_d[l_ac].ooeg001 #部門編號
            #給予arg
            LET g_qryparam.arg1 = g_today


            CALL q_ooeg001()                                #呼叫開窗

            LET g_rtan_d[l_ac].rtan010 = g_qryparam.return1              
            #LET g_rtan_d[l_ac].ooeg001 = g_qryparam.return2 
            DISPLAY g_rtan_d[l_ac].rtan010 TO rtan010              #
            #DISPLAY g_rtan_d[l_ac].ooeg001 TO ooeg001 #部門編號
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan010
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan010_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtan_d[l_ac].rtan010,g_rtan_d[l_ac].rtan010_desc
            NEXT FIELD rtan010                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.rtan011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtan_d[l_ac].rtan011             #給予default值
            LET g_qryparam.default2 = "" #g_rtan_d[l_ac].stae001 #费用编号
            LET g_qryparam.default3 = "" #g_rtan_d[l_ac].stael003 #說明
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_stae001()                                #呼叫開窗

            LET g_rtan_d[l_ac].rtan011 = g_qryparam.return1              
            #LET g_rtan_d[l_ac].stae001 = g_qryparam.return2 
            #LET g_rtan_d[l_ac].stael003 = g_qryparam.return3 
            DISPLAY g_rtan_d[l_ac].rtan011 TO rtan011              #
            #DISPLAY g_rtan_d[l_ac].stae001 TO stae001 #费用编号
            #DISPLAY g_rtan_d[l_ac].stael003 TO stael003 #說明
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan011
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan011_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtan_d[l_ac].rtan011_desc
            NEXT FIELD rtan011                          #返回原欄位

]]>
  </point>
  <point name="input.c.rtam001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtam_m.rtam001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #


            CALL q_rtao001()                                #呼叫開窗

            LET g_rtam_m.rtam001 = g_qryparam.return1              

            DISPLAY g_rtam_m.rtam001 TO rtam001              #

            NEXT FIELD rtam001                          #返回原欄位

]]>
  </point>
  <point name="input.c.rtam003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtam_m.rtam003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "1" #s
            LET g_qryparam.WHERE = " prcfunit = '",g_rtam_m.rtamsite,"'"

            CALL q_prcf001_1()                                #呼叫開窗

            LET g_rtam_m.rtam003 = g_qryparam.return1              

            DISPLAY g_rtam_m.rtam003 TO rtam003              #

            NEXT FIELD rtam003                          #返回原欄位

]]>
  </point>
  <point name="input.c.rtam004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtam_m.rtam004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooag001()                                #呼叫開窗

            LET g_rtam_m.rtam004 = g_qryparam.return1              

            DISPLAY g_rtam_m.rtam004 TO rtam004              #

            NEXT FIELD rtam004                          #返回原欄位

]]>
  </point>
  <point name="input.c.rtam005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtam_m.rtam005             #給予default值
            LET g_qryparam.default2 = "" #g_rtam_m.ooeg001 #部門編號
            #給予arg
            LET g_qryparam.arg1 = g_today


            CALL q_ooeg001()                                #呼叫開窗

            LET g_rtam_m.rtam005 = g_qryparam.return1              
            #LET g_rtam_m.ooeg001 = g_qryparam.return2 
            DISPLAY g_rtam_m.rtam005 TO rtam005              #
            #DISPLAY g_rtam_m.ooeg001 TO ooeg001 #部門編號
            NEXT FIELD rtam005                          #返回原欄位

]]>
  </point>
  <point name="input.c.rtamdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtam_m.rtamdocno             #給予default值
            LET l_ooef004 = ""
            SELECT ooef004 INTO l_ooef004
              FROM ooef_t
             WHERE ooef001 = g_rtam_m.rtamsite
               AND ooefent = g_enterprise
            LET g_qryparam.arg1 = l_ooef004 #
            LET g_qryparam.arg2 = g_prog #
            CALL q_ooba002_1()                            #呼叫開窗
            LET g_rtam_m.rtamdocno = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_rtam_m.rtamdocno TO rtamdocno       #顯示到畫面上
            NEXT FIELD rtamdocno                          #返回原欄位]]>
  </point>
  <point name="input.c.rtamsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtam_m.rtamsite             #給予default值
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtamsite',g_rtam_m.rtamsite,'i')
            CALL q_ooef001_24()
            LET g_rtam_m.rtamsite = g_qryparam.return1      #將開窗取得的值回傳到變數
            DISPLAY g_rtam_m.rtamsite TO rtamsite           #顯示到畫面上
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtam_m.rtamsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtam_m.rtamsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtam_m.rtamsite_desc
            NEXT FIELD rtamsite    ]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_errno               STRING
   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_prcfsite            LIKE prcf_t.prcfsite
   DEFINE  l_ooegstus            LIKE ooeg_t.ooegstus
   DEFINE  l_mhaesite            LIKE mhae_t.mhaesite]]>
  </point>
  <point name="input.g.page1.rtan012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_rtan_d[l_ac].rtan012 = 'Y' THEN 
               CALL cl_set_comp_entry("rtan013",TRUE)
            ELSE
               #返回原值
               SELECT stae007
                 INTO g_rtan_d[l_ac].rtan013
                 FROM stae_t
                WHERE staeent = g_enterprise
                  AND stae001 = g_rtan_d[l_ac].rtan011
               CALL cl_set_comp_entry("rtan013",FALSE)
            END IF ]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_aooi200_gen_docno(g_rtam_m.rtamsite,g_rtam_m.rtamdocno,g_rtam_m.rtamdocdt,g_prog) RETURNING l_success,g_rtam_m.rtamdocno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_rtam_m.rtamdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD rtamdocno
               END IF]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL s_aooi500_default(g_prog,'rtamsite',g_rtam_m.rtamsite)
         RETURNING l_insert,g_rtam_m.rtamsite
      IF NOT l_insert THEN
         RETURN
      END IF
      LET g_rtam_m.rtam000 = 'I'
      LET g_rtam_m.rtam002 = 1
      LET g_rtam_m.rtamdocdt = g_today
      LET g_rtam_m.rtam004 = g_user
      LET g_rtam_m.rtamunit = g_rtam_m.rtamsite
      SELECT ooag003 INTO g_rtam_m.rtam005
        FROM ooag_t
       WHERE ooagent = g_enterprise
         AND ooag001 = g_rtam_m.rtam004
         
      #預設單據的單別 
      LET l_success = ''
      LET l_doctype = ''
      CALL s_arti200_get_def_doc_type(g_rtam_m.rtamsite,g_prog,'1')
           RETURNING l_success, l_doctype
      LET g_rtam_m.rtamdocno = l_doctype
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtam_m.rtamsite
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_rtam_m.rtamsite_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_rtam_m.rtamsite_desc
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtam_m.rtam004
      CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
      LET g_rtam_m.rtam004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_rtam_m.rtam004_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtam_m.rtam005
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_rtam_m.rtam005_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_rtam_m.rtam005_desc]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_insert      LIKE type_t.num5 
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_doctype     LIKE rtai_t.rtai004]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_rtam_m.rtamstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[       CALL cl_set_comp_entry('rtam000,rtam001',TRUE)]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry('rtam000,rtam001',FALSE)]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_rtan_d[l_ac].rtan012 = 'Y' THEN 
      CALL cl_set_comp_entry("rtan013",TRUE)
   ELSE
      CALL cl_set_comp_entry("rtan013",FALSE)
   END IF ]]>
  </point>
  <point name="statechange.after_refresh" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_rtam_m.rtamstus <> 'N' THEN 
      RETURN 
   END IF ]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CASE g_rtam_m.rtamstus
         WHEN "N"
            #HIDE OPTION "open"
            CALL cl_set_act_visible("unconfirmed",FALSE)
         WHEN "X"
            #HIDE OPTION "invalid"
            CALL cl_set_act_visible("invalid,unconfirmed,confirmed",FALSE)
       
         WHEN "Y"
            #HIDE OPTION "confirmed"
            CALL cl_set_act_visible("invalid,confirmed,unconfirmed",FALSE)
      END CASE]]>
  </point>
  <point name="statechange.confirmed" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_ask_confirm('aim-00108') THEN
               RETURN
            END IF 
            CALL s_artt230_conf_chk(g_rtam_m.rtamdocno) RETURNING l_success
            IF l_success THEN 
               CALL s_transaction_begin()
               CALL s_artt230_conf_upd(g_rtam_m.rtamdocno) RETURNING l_success
               IF l_success THEN 
                  CALL s_transaction_end('Y','0')
               ELSE
                  CALL s_transaction_end('N','0')
               END IF 
            END IF 
            CALL artt230_b_fill()]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[    DEFINE l_success  LIKE type_t.num5   ]]>
  </point>
  <point name="statechange.invalid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_ask_confirm('aim-00109') THEN
               RETURN
            END IF 
            CALL s_transaction_begin()
            CALL s_artt230_void_upd(g_rtam_m.rtamdocno) RETURNING l_success
            IF l_success THEN 
               CALL s_transaction_end('Y','0')
            ELSE
               CALL s_transaction_end('N','0')
            END IF ]]>
  </point>
  <section id="artt230.action_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION artt230_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="artt230.b_fill" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION artt230_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_rtan_d.clear()    #g_rtan_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF artt230_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE rtanseq,rtan001,rtan002,rtan003,rtan004,rtan005,rtan006,rtan007, 
             rtan008,rtan009,rtan010,rtan011,rtan012,rtan013,rtan014,rtan015,rtan016,rtan017,rtan018, 
             rtan019,rtan020,rtan021,rtan022,rtan023,rtansite,rtancomp  FROM rtan_t",   
                     " INNER JOIN rtam_t ON rtamdocno = rtandocno ",
 
                     #"",
                     
                     "",
                     
                     " WHERE rtanent=? AND rtandocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtan_t.rtanseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt230_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR artt230_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_rtam_m.rtamdocno
                                               
      FOREACH b_fill_cs INTO g_rtan_d[l_ac].rtanseq,g_rtan_d[l_ac].rtan001,g_rtan_d[l_ac].rtan002,g_rtan_d[l_ac].rtan003, 
          g_rtan_d[l_ac].rtan004,g_rtan_d[l_ac].rtan005,g_rtan_d[l_ac].rtan006,g_rtan_d[l_ac].rtan007, 
          g_rtan_d[l_ac].rtan008,g_rtan_d[l_ac].rtan009,g_rtan_d[l_ac].rtan010,g_rtan_d[l_ac].rtan011, 
          g_rtan_d[l_ac].rtan012,g_rtan_d[l_ac].rtan013,g_rtan_d[l_ac].rtan014,g_rtan_d[l_ac].rtan015, 
          g_rtan_d[l_ac].rtan016,g_rtan_d[l_ac].rtan017,g_rtan_d[l_ac].rtan018,g_rtan_d[l_ac].rtan019, 
          g_rtan_d[l_ac].rtan020,g_rtan_d[l_ac].rtan021,g_rtan_d[l_ac].rtan022,g_rtan_d[l_ac].rtan023, 
          g_rtan_d[l_ac].rtansite,g_rtan_d[l_ac].rtancomp
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_rtan_d.deleteElement(g_rtan_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE artt230_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_rtan_d.getLength()
      LET g_rtan_d_mask_o[l_ac].* =  g_rtan_d[l_ac].*
      CALL artt230_rtan_t_mask()
      LET g_rtan_d_mask_n[l_ac].* =  g_rtan_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="artt230.b_fill2" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION artt230_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL artt230_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="artt230.browser_fill" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION artt230_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE rtamdocno ",
                      " FROM rtam_t ",
                      " ",
                      " LEFT JOIN rtan_t ON rtanent = rtament AND rtamdocno = rtandocno ", "  ",
                      #add-point:browser_fill段sql(rtan_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
 
                      " ", 
                      " ", 
                      " WHERE rtament = '" ||g_enterprise|| "' AND rtanent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("rtam_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE rtamdocno ",
                      " FROM rtam_t ", 
                      "  ",
                      "  ",
                      " WHERE rtament = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("rtam_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_rtam_m.* TO NULL
      CALL g_rtan_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.rtamsite,t0.rtamdocno,t0.rtamdocdt,t0.rtam001,t0.rtam003,t0.rtam004,t0.rtam005,t0.rtam006 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.rtamstus,t0.rtamsite,t0.rtamdocno,t0.rtamdocdt,t0.rtam001,t0.rtam003, 
       t0.rtam004,t0.rtam005,t0.rtam006,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ",
               " FROM rtam_t t0",
               "  ",
               "  LEFT JOIN rtan_t ON rtanent = rtament AND rtamdocno = rtandocno ", "  ", 
               #add-point:browser_fill段sql(rtan_t1)
               {<point name="browser_fill.join.rtan_t1"/>}
               #end add-point
 
 
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.rtamsite AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.rtam004  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.rtam005 AND t3.ooefl002='"||g_lang||"' ",
 
               " WHERE t0.rtament = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("rtam_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY rtamdocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"rtam_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_rtamsite,g_browser[g_cnt].b_rtamdocno, 
       g_browser[g_cnt].b_rtamdocdt,g_browser[g_cnt].b_rtam001,g_browser[g_cnt].b_rtam003,g_browser[g_cnt].b_rtam004, 
       g_browser[g_cnt].b_rtam005,g_browser[g_cnt].b_rtam006,g_browser[g_cnt].b_rtamsite_desc,g_browser[g_cnt].b_rtam004_desc, 
       g_browser[g_cnt].b_rtam005_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL artt230_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_rtamdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="artt230.construct" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION artt230_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_rtam_m.* TO NULL
   CALL g_rtan_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON rtamsite,rtamdocdt,rtamdocno,rtam000,rtam001,rtam002,rtam003,rtam004, 
          rtam005,rtam006,rtamunit,rtamstus,rtamownid,rtamowndp,rtamcrtid,rtamcrtdp,rtamcrtdt,rtammodid, 
          rtammoddt,rtamcnfid,rtamcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<rtamcrtdt>>----
         AFTER FIELD rtamcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<rtammoddt>>----
         AFTER FIELD rtammoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtamcnfdt>>----
         AFTER FIELD rtamcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtampstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.rtamsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtamsite
            #add-point:ON ACTION controlp INFIELD rtamsite
            {<point name="construct.c.rtamsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamsite
            #add-point:BEFORE FIELD rtamsite
            {<point name="construct.b.rtamsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtamsite
            
            #add-point:AFTER FIELD rtamsite
            {<point name="construct.a.rtamsite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamdocdt
            #add-point:BEFORE FIELD rtamdocdt
            {<point name="construct.b.rtamdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtamdocdt
            
            #add-point:AFTER FIELD rtamdocdt
            {<point name="construct.a.rtamdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtamdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtamdocdt
            #add-point:ON ACTION controlp INFIELD rtamdocdt
            {<point name="construct.c.rtamdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.rtamdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtamdocno
            #add-point:ON ACTION controlp INFIELD rtamdocno
            {<point name="construct.c.rtamdocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamdocno
            #add-point:BEFORE FIELD rtamdocno
            {<point name="construct.b.rtamdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtamdocno
            
            #add-point:AFTER FIELD rtamdocno
            {<point name="construct.a.rtamdocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtam000
            #add-point:BEFORE FIELD rtam000
            {<point name="construct.b.rtam000" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtam000
            
            #add-point:AFTER FIELD rtam000
            {<point name="construct.a.rtam000" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtam000
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtam000
            #add-point:ON ACTION controlp INFIELD rtam000
            {<point name="construct.c.rtam000" />}
            #END add-point
 
         #Ctrlp:construct.c.rtam001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtam001
            #add-point:ON ACTION controlp INFIELD rtam001
            {<point name="construct.c.rtam001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtam001
            #add-point:BEFORE FIELD rtam001
            {<point name="construct.b.rtam001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtam001
            
            #add-point:AFTER FIELD rtam001
            {<point name="construct.a.rtam001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtam002
            #add-point:BEFORE FIELD rtam002
            {<point name="construct.b.rtam002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtam002
            
            #add-point:AFTER FIELD rtam002
            {<point name="construct.a.rtam002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtam002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtam002
            #add-point:ON ACTION controlp INFIELD rtam002
            {<point name="construct.c.rtam002" />}
            #END add-point
 
         #Ctrlp:construct.c.rtam003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtam003
            #add-point:ON ACTION controlp INFIELD rtam003
            {<point name="construct.c.rtam003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtam003
            #add-point:BEFORE FIELD rtam003
            {<point name="construct.b.rtam003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtam003
            
            #add-point:AFTER FIELD rtam003
            {<point name="construct.a.rtam003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtam004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtam004
            #add-point:ON ACTION controlp INFIELD rtam004
            {<point name="construct.c.rtam004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtam004
            #add-point:BEFORE FIELD rtam004
            {<point name="construct.b.rtam004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtam004
            
            #add-point:AFTER FIELD rtam004
            {<point name="construct.a.rtam004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtam005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtam005
            #add-point:ON ACTION controlp INFIELD rtam005
            {<point name="construct.c.rtam005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtam005
            #add-point:BEFORE FIELD rtam005
            {<point name="construct.b.rtam005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtam005
            
            #add-point:AFTER FIELD rtam005
            {<point name="construct.a.rtam005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtam006
            #add-point:BEFORE FIELD rtam006
            {<point name="construct.b.rtam006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtam006
            
            #add-point:AFTER FIELD rtam006
            {<point name="construct.a.rtam006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtam006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtam006
            #add-point:ON ACTION controlp INFIELD rtam006
            {<point name="construct.c.rtam006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamunit
            #add-point:BEFORE FIELD rtamunit
            {<point name="construct.b.rtamunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtamunit
            
            #add-point:AFTER FIELD rtamunit
            {<point name="construct.a.rtamunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtamunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtamunit
            #add-point:ON ACTION controlp INFIELD rtamunit
            {<point name="construct.c.rtamunit" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamstus
            #add-point:BEFORE FIELD rtamstus
            {<point name="construct.b.rtamstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtamstus
            
            #add-point:AFTER FIELD rtamstus
            {<point name="construct.a.rtamstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtamstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtamstus
            #add-point:ON ACTION controlp INFIELD rtamstus
            {<point name="construct.c.rtamstus" />}
            #END add-point
 
         #Ctrlp:construct.c.rtamownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtamownid
            #add-point:ON ACTION controlp INFIELD rtamownid
            {<point name="construct.c.rtamownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamownid
            #add-point:BEFORE FIELD rtamownid
            {<point name="construct.b.rtamownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtamownid
            
            #add-point:AFTER FIELD rtamownid
            {<point name="construct.a.rtamownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtamowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtamowndp
            #add-point:ON ACTION controlp INFIELD rtamowndp
            {<point name="construct.c.rtamowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamowndp
            #add-point:BEFORE FIELD rtamowndp
            {<point name="construct.b.rtamowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtamowndp
            
            #add-point:AFTER FIELD rtamowndp
            {<point name="construct.a.rtamowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtamcrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtamcrtid
            #add-point:ON ACTION controlp INFIELD rtamcrtid
            {<point name="construct.c.rtamcrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamcrtid
            #add-point:BEFORE FIELD rtamcrtid
            {<point name="construct.b.rtamcrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtamcrtid
            
            #add-point:AFTER FIELD rtamcrtid
            {<point name="construct.a.rtamcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtamcrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtamcrtdp
            #add-point:ON ACTION controlp INFIELD rtamcrtdp
            {<point name="construct.c.rtamcrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamcrtdp
            #add-point:BEFORE FIELD rtamcrtdp
            {<point name="construct.b.rtamcrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtamcrtdp
            
            #add-point:AFTER FIELD rtamcrtdp
            {<point name="construct.a.rtamcrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamcrtdt
            #add-point:BEFORE FIELD rtamcrtdt
            {<point name="construct.b.rtamcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.rtammodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtammodid
            #add-point:ON ACTION controlp INFIELD rtammodid
            {<point name="construct.c.rtammodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtammodid
            #add-point:BEFORE FIELD rtammodid
            {<point name="construct.b.rtammodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtammodid
            
            #add-point:AFTER FIELD rtammodid
            {<point name="construct.a.rtammodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtammoddt
            #add-point:BEFORE FIELD rtammoddt
            {<point name="construct.b.rtammoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.rtamcnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtamcnfid
            #add-point:ON ACTION controlp INFIELD rtamcnfid
            {<point name="construct.c.rtamcnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamcnfid
            #add-point:BEFORE FIELD rtamcnfid
            {<point name="construct.b.rtamcnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtamcnfid
            
            #add-point:AFTER FIELD rtamcnfid
            {<point name="construct.a.rtamcnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamcnfdt
            #add-point:BEFORE FIELD rtamcnfdt
            {<point name="construct.b.rtamcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON rtanseq,rtan001,rtan002,rtan003,rtan004,rtan005,rtan006,rtan007,rtan008, 
          rtan009,rtan010,rtan011,rtan012,rtan013,rtan014,rtan015,rtan016,rtan017,rtan018,rtan019,rtan020, 
          rtan021,rtan022,rtan023,rtansite,rtancomp
           FROM s_detail1[1].rtanseq,s_detail1[1].rtan001,s_detail1[1].rtan002,s_detail1[1].rtan003, 
               s_detail1[1].rtan004,s_detail1[1].rtan005,s_detail1[1].rtan006,s_detail1[1].rtan007,s_detail1[1].rtan008, 
               s_detail1[1].rtan009,s_detail1[1].rtan010,s_detail1[1].rtan011,s_detail1[1].rtan012,s_detail1[1].rtan013, 
               s_detail1[1].rtan014,s_detail1[1].rtan015,s_detail1[1].rtan016,s_detail1[1].rtan017,s_detail1[1].rtan018, 
               s_detail1[1].rtan019,s_detail1[1].rtan020,s_detail1[1].rtan021,s_detail1[1].rtan022,s_detail1[1].rtan023, 
               s_detail1[1].rtansite,s_detail1[1].rtancomp
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtanseq
            #add-point:BEFORE FIELD rtanseq
            {<point name="construct.b.page1.rtanseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtanseq
            
            #add-point:AFTER FIELD rtanseq
            {<point name="construct.a.page1.rtanseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtanseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtanseq
            #add-point:ON ACTION controlp INFIELD rtanseq
            {<point name="construct.c.page1.rtanseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan001
            #add-point:BEFORE FIELD rtan001
            {<point name="construct.b.page1.rtan001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan001
            
            #add-point:AFTER FIELD rtan001
            {<point name="construct.a.page1.rtan001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan001
            #add-point:ON ACTION controlp INFIELD rtan001
            {<point name="construct.c.page1.rtan001" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.rtan002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan002
            #add-point:ON ACTION controlp INFIELD rtan002
            {<point name="construct.c.page1.rtan002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan002
            #add-point:BEFORE FIELD rtan002
            {<point name="construct.b.page1.rtan002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan002
            
            #add-point:AFTER FIELD rtan002
            {<point name="construct.a.page1.rtan002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan003
            #add-point:BEFORE FIELD rtan003
            {<point name="construct.b.page1.rtan003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan003
            
            #add-point:AFTER FIELD rtan003
            {<point name="construct.a.page1.rtan003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan003
            #add-point:ON ACTION controlp INFIELD rtan003
            {<point name="construct.c.page1.rtan003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan004
            #add-point:BEFORE FIELD rtan004
            {<point name="construct.b.page1.rtan004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan004
            
            #add-point:AFTER FIELD rtan004
            {<point name="construct.a.page1.rtan004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan004
            #add-point:ON ACTION controlp INFIELD rtan004
            {<point name="construct.c.page1.rtan004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan005
            #add-point:BEFORE FIELD rtan005
            {<point name="construct.b.page1.rtan005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan005
            
            #add-point:AFTER FIELD rtan005
            {<point name="construct.a.page1.rtan005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan005
            #add-point:ON ACTION controlp INFIELD rtan005
            {<point name="construct.c.page1.rtan005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan006
            #add-point:BEFORE FIELD rtan006
            {<point name="construct.b.page1.rtan006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan006
            
            #add-point:AFTER FIELD rtan006
            {<point name="construct.a.page1.rtan006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan006
            #add-point:ON ACTION controlp INFIELD rtan006
            {<point name="construct.c.page1.rtan006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan007
            #add-point:BEFORE FIELD rtan007
            {<point name="construct.b.page1.rtan007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan007
            
            #add-point:AFTER FIELD rtan007
            {<point name="construct.a.page1.rtan007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan007
            #add-point:ON ACTION controlp INFIELD rtan007
            {<point name="construct.c.page1.rtan007" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.rtan008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan008
            #add-point:ON ACTION controlp INFIELD rtan008
            {<point name="construct.c.page1.rtan008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan008
            #add-point:BEFORE FIELD rtan008
            {<point name="construct.b.page1.rtan008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan008
            
            #add-point:AFTER FIELD rtan008
            {<point name="construct.a.page1.rtan008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan009
            #add-point:ON ACTION controlp INFIELD rtan009
            {<point name="construct.c.page1.rtan009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan009
            #add-point:BEFORE FIELD rtan009
            {<point name="construct.b.page1.rtan009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan009
            
            #add-point:AFTER FIELD rtan009
            {<point name="construct.a.page1.rtan009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan010
            #add-point:ON ACTION controlp INFIELD rtan010
            {<point name="construct.c.page1.rtan010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan010
            #add-point:BEFORE FIELD rtan010
            {<point name="construct.b.page1.rtan010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan010
            
            #add-point:AFTER FIELD rtan010
            {<point name="construct.a.page1.rtan010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan011
            #add-point:ON ACTION controlp INFIELD rtan011
            {<point name="construct.c.page1.rtan011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan011
            #add-point:BEFORE FIELD rtan011
            {<point name="construct.b.page1.rtan011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan011
            
            #add-point:AFTER FIELD rtan011
            {<point name="construct.a.page1.rtan011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan012
            #add-point:BEFORE FIELD rtan012
            {<point name="construct.b.page1.rtan012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan012
            
            #add-point:AFTER FIELD rtan012
            {<point name="construct.a.page1.rtan012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan012
            #add-point:ON ACTION controlp INFIELD rtan012
            {<point name="construct.c.page1.rtan012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan013
            #add-point:BEFORE FIELD rtan013
            {<point name="construct.b.page1.rtan013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan013
            
            #add-point:AFTER FIELD rtan013
            {<point name="construct.a.page1.rtan013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan013
            #add-point:ON ACTION controlp INFIELD rtan013
            {<point name="construct.c.page1.rtan013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan014
            #add-point:BEFORE FIELD rtan014
            {<point name="construct.b.page1.rtan014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan014
            
            #add-point:AFTER FIELD rtan014
            {<point name="construct.a.page1.rtan014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan014
            #add-point:ON ACTION controlp INFIELD rtan014
            {<point name="construct.c.page1.rtan014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan015
            #add-point:BEFORE FIELD rtan015
            {<point name="construct.b.page1.rtan015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan015
            
            #add-point:AFTER FIELD rtan015
            {<point name="construct.a.page1.rtan015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan015
            #add-point:ON ACTION controlp INFIELD rtan015
            {<point name="construct.c.page1.rtan015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan016
            #add-point:BEFORE FIELD rtan016
            {<point name="construct.b.page1.rtan016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan016
            
            #add-point:AFTER FIELD rtan016
            {<point name="construct.a.page1.rtan016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan016
            #add-point:ON ACTION controlp INFIELD rtan016
            {<point name="construct.c.page1.rtan016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan017
            #add-point:BEFORE FIELD rtan017
            {<point name="construct.b.page1.rtan017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan017
            
            #add-point:AFTER FIELD rtan017
            {<point name="construct.a.page1.rtan017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan017
            #add-point:ON ACTION controlp INFIELD rtan017
            {<point name="construct.c.page1.rtan017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan018
            #add-point:BEFORE FIELD rtan018
            {<point name="construct.b.page1.rtan018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan018
            
            #add-point:AFTER FIELD rtan018
            {<point name="construct.a.page1.rtan018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan018
            #add-point:ON ACTION controlp INFIELD rtan018
            {<point name="construct.c.page1.rtan018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan019
            #add-point:BEFORE FIELD rtan019
            {<point name="construct.b.page1.rtan019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan019
            
            #add-point:AFTER FIELD rtan019
            {<point name="construct.a.page1.rtan019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan019
            #add-point:ON ACTION controlp INFIELD rtan019
            {<point name="construct.c.page1.rtan019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan020
            #add-point:BEFORE FIELD rtan020
            {<point name="construct.b.page1.rtan020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan020
            
            #add-point:AFTER FIELD rtan020
            {<point name="construct.a.page1.rtan020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan020
            #add-point:ON ACTION controlp INFIELD rtan020
            {<point name="construct.c.page1.rtan020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan021
            #add-point:BEFORE FIELD rtan021
            {<point name="construct.b.page1.rtan021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan021
            
            #add-point:AFTER FIELD rtan021
            {<point name="construct.a.page1.rtan021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan021
            #add-point:ON ACTION controlp INFIELD rtan021
            {<point name="construct.c.page1.rtan021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan022
            #add-point:BEFORE FIELD rtan022
            {<point name="construct.b.page1.rtan022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan022
            
            #add-point:AFTER FIELD rtan022
            {<point name="construct.a.page1.rtan022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan022
            #add-point:ON ACTION controlp INFIELD rtan022
            {<point name="construct.c.page1.rtan022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan023
            #add-point:BEFORE FIELD rtan023
            {<point name="construct.b.page1.rtan023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan023
            
            #add-point:AFTER FIELD rtan023
            {<point name="construct.a.page1.rtan023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtan023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan023
            #add-point:ON ACTION controlp INFIELD rtan023
            {<point name="construct.c.page1.rtan023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtansite
            #add-point:BEFORE FIELD rtansite
            {<point name="construct.b.page1.rtansite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtansite
            
            #add-point:AFTER FIELD rtansite
            {<point name="construct.a.page1.rtansite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtansite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtansite
            #add-point:ON ACTION controlp INFIELD rtansite
            {<point name="construct.c.page1.rtansite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtancomp
            #add-point:BEFORE FIELD rtancomp
            {<point name="construct.b.page1.rtancomp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtancomp
            
            #add-point:AFTER FIELD rtancomp
            {<point name="construct.a.page1.rtancomp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtancomp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtancomp
            #add-point:ON ACTION controlp INFIELD rtancomp
            {<point name="construct.c.page1.rtancomp" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "rtam_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtan_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="artt230.default_search" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION artt230_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " rtamdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "rtam_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtan_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="artt230.delete" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION artt230_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_rtam_m.rtamdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN artt230_cl USING g_enterprise,g_rtam_m.rtamdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt230_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE artt230_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artt230_master_referesh USING g_rtam_m.rtamdocno INTO g_rtam_m.rtamsite,g_rtam_m.rtamdocdt, 
       g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam004, 
       g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid,g_rtam_m.rtamowndp, 
       g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid,g_rtam_m.rtammoddt, 
       g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt,g_rtam_m.rtamsite_desc,g_rtam_m.rtam004_desc,g_rtam_m.rtam005_desc, 
       g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid_desc,g_rtam_m.rtamcrtdp_desc, 
       g_rtam_m.rtammodid_desc,g_rtam_m.rtamcnfid_desc
   
   #檢查是否允許此動作
   IF NOT artt230_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtam_m_mask_o.* =  g_rtam_m.*
   CALL artt230_rtam_t_mask()
   LET g_rtam_m_mask_n.* =  g_rtam_m.*
   
   CALL artt230_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL artt230_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_rtamdocno_t = g_rtam_m.rtamdocno
 
 
      DELETE FROM rtam_t
       WHERE rtament = g_enterprise AND rtamdocno = g_rtam_m.rtamdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_rtam_m.rtamdocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM rtan_t
       WHERE rtanent = g_enterprise AND rtandocno = g_rtam_m.rtamdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtan_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE artt230_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_rtan_d.clear() 
 
     
      CALL artt230_ui_browser_refresh()  
      #CALL artt230_ui_headershow()  
      #CALL artt230_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL artt230_browser_fill("")
         CALL artt230_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE artt230_cl
 
   #功能已完成,通報訊息中心
   CALL artt230_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="artt230.delete_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION artt230_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM rtan_t
       WHERE rtanent = g_enterprise AND
         rtandocno = ps_keys_bak[1] AND rtanseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtan_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="artt230.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000000
#+ 
#+ Filename...: artt230
#+ Description: 門店資源協議申請作業
#+ Creator....: 02003(2015-07-08 13:48:33)
#+ Modifier...: 02003(2015-07-10 17:32:12) -SD/PR-
]]>
  </section>
  <section id="artt230.detail_reproduce" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION artt230_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE rtan_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE artt230_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE artt230_detail AS ",
                "SELECT * FROM rtan_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO artt230_detail SELECT * FROM rtan_t 
                                         WHERE rtanent = g_enterprise AND rtandocno = g_rtamdocno_t
 
   
   #將key修正為調整後   
   UPDATE artt230_detail 
      #更新key欄位
      SET rtandocno = g_rtam_m.rtamdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO rtan_t SELECT * FROM artt230_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt230_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_rtamdocno_t = g_rtam_m.rtamdocno
 
   
END FUNCTION
]]>
  </section>
  <section id="artt230.detail_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION artt230_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="artt230.fetch" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION artt230_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_rtam_m.rtamdocno = g_browser[g_current_idx].b_rtamdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE artt230_master_referesh USING g_rtam_m.rtamdocno INTO g_rtam_m.rtamsite,g_rtam_m.rtamdocdt, 
       g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam004, 
       g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid,g_rtam_m.rtamowndp, 
       g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid,g_rtam_m.rtammoddt, 
       g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt,g_rtam_m.rtamsite_desc,g_rtam_m.rtam004_desc,g_rtam_m.rtam005_desc, 
       g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid_desc,g_rtam_m.rtamcrtdp_desc, 
       g_rtam_m.rtammodid_desc,g_rtam_m.rtamcnfid_desc
   
   #遮罩相關處理
   LET g_rtam_m_mask_o.* =  g_rtam_m.*
   CALL artt230_rtam_t_mask()
   LET g_rtam_m_mask_n.* =  g_rtam_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt230_set_act_visible()   
   CALL artt230_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_rtam_m_t.* = g_rtam_m.*
   LET g_rtam_m_o.* = g_rtam_m.*
   
   LET g_data_owner = g_rtam_m.rtamownid      
   LET g_data_dept  = g_rtam_m.rtamowndp
   
   #重新顯示   
   CALL artt230_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="artt230.fill_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION artt230_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="artt230.filter" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION artt230_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON rtamsite,rtamdocno,rtamdocdt,rtam001,rtam003,rtam004,rtam005,rtam006
                          FROM s_browse[1].b_rtamsite,s_browse[1].b_rtamdocno,s_browse[1].b_rtamdocdt, 
                              s_browse[1].b_rtam001,s_browse[1].b_rtam003,s_browse[1].b_rtam004,s_browse[1].b_rtam005, 
                              s_browse[1].b_rtam006
 
         BEFORE CONSTRUCT
               DISPLAY artt230_filter_parser('rtamsite') TO s_browse[1].b_rtamsite
            DISPLAY artt230_filter_parser('rtamdocno') TO s_browse[1].b_rtamdocno
            DISPLAY artt230_filter_parser('rtamdocdt') TO s_browse[1].b_rtamdocdt
            DISPLAY artt230_filter_parser('rtam001') TO s_browse[1].b_rtam001
            DISPLAY artt230_filter_parser('rtam003') TO s_browse[1].b_rtam003
            DISPLAY artt230_filter_parser('rtam004') TO s_browse[1].b_rtam004
            DISPLAY artt230_filter_parser('rtam005') TO s_browse[1].b_rtam005
            DISPLAY artt230_filter_parser('rtam006') TO s_browse[1].b_rtam006
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL artt230_filter_show('rtamsite')
   CALL artt230_filter_show('rtamdocno')
   CALL artt230_filter_show('rtamdocdt')
   CALL artt230_filter_show('rtam001')
   CALL artt230_filter_show('rtam003')
   CALL artt230_filter_show('rtam004')
   CALL artt230_filter_show('rtam005')
   CALL artt230_filter_show('rtam006')
 
END FUNCTION
]]>
  </section>
  <section id="artt230.filter_parser" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION artt230_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="artt230.filter_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION artt230_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = artt230_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="artt230.global" ver="3" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:39)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_rtam_m        RECORD
       rtamsite LIKE rtam_t.rtamsite, 
   rtamsite_desc LIKE type_t.chr80, 
   rtamdocdt LIKE rtam_t.rtamdocdt, 
   rtamdocno LIKE rtam_t.rtamdocno, 
   rtam000 LIKE rtam_t.rtam000, 
   rtam001 LIKE rtam_t.rtam001, 
   rtam002 LIKE rtam_t.rtam002, 
   rtam003 LIKE rtam_t.rtam003, 
   rtam004 LIKE rtam_t.rtam004, 
   rtam004_desc LIKE type_t.chr80, 
   rtam005 LIKE rtam_t.rtam005, 
   rtam005_desc LIKE type_t.chr80, 
   rtam006 LIKE rtam_t.rtam006, 
   rtamunit LIKE rtam_t.rtamunit, 
   rtamstus LIKE rtam_t.rtamstus, 
   rtamownid LIKE rtam_t.rtamownid, 
   rtamownid_desc LIKE type_t.chr80, 
   rtamowndp LIKE rtam_t.rtamowndp, 
   rtamowndp_desc LIKE type_t.chr80, 
   rtamcrtid LIKE rtam_t.rtamcrtid, 
   rtamcrtid_desc LIKE type_t.chr80, 
   rtamcrtdp LIKE rtam_t.rtamcrtdp, 
   rtamcrtdp_desc LIKE type_t.chr80, 
   rtamcrtdt LIKE rtam_t.rtamcrtdt, 
   rtammodid LIKE rtam_t.rtammodid, 
   rtammodid_desc LIKE type_t.chr80, 
   rtammoddt LIKE rtam_t.rtammoddt, 
   rtamcnfid LIKE rtam_t.rtamcnfid, 
   rtamcnfid_desc LIKE type_t.chr80, 
   rtamcnfdt LIKE rtam_t.rtamcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_rtan_d        RECORD
       rtanseq LIKE rtan_t.rtanseq, 
   rtan001 LIKE rtan_t.rtan001, 
   rtan002 LIKE rtan_t.rtan002, 
   rtan002_desc LIKE type_t.chr500, 
   rtan003 LIKE rtan_t.rtan003, 
   rtan004 LIKE rtan_t.rtan004, 
   rtan005 LIKE rtan_t.rtan005, 
   rtan006 LIKE rtan_t.rtan006, 
   rtan007 LIKE rtan_t.rtan007, 
   rtan007_desc LIKE type_t.chr500, 
   rtan008 LIKE rtan_t.rtan008, 
   rtan008_desc LIKE type_t.chr500, 
   rtan009 LIKE rtan_t.rtan009, 
   rtan009_desc LIKE type_t.chr500, 
   rtan010 LIKE rtan_t.rtan010, 
   rtan010_desc LIKE type_t.chr500, 
   rtan011 LIKE rtan_t.rtan011, 
   rtan011_desc LIKE type_t.chr500, 
   rtan012 LIKE rtan_t.rtan012, 
   rtan013 LIKE rtan_t.rtan013, 
   rtan014 LIKE rtan_t.rtan014, 
   rtan015 LIKE rtan_t.rtan015, 
   rtan016 LIKE rtan_t.rtan016, 
   rtan017 LIKE rtan_t.rtan017, 
   rtan018 LIKE rtan_t.rtan018, 
   rtan019 LIKE rtan_t.rtan019, 
   rtan020 LIKE rtan_t.rtan020, 
   rtan021 LIKE rtan_t.rtan021, 
   rtan022 LIKE rtan_t.rtan022, 
   rtan023 LIKE rtan_t.rtan023, 
   rtansite LIKE rtan_t.rtansite, 
   rtancomp LIKE rtan_t.rtancomp
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_rtamsite LIKE rtam_t.rtamsite,
   b_rtamsite_desc LIKE type_t.chr80,
      b_rtamdocno LIKE rtam_t.rtamdocno,
      b_rtamdocdt LIKE rtam_t.rtamdocdt,
      b_rtam001 LIKE rtam_t.rtam001,
      b_rtam003 LIKE rtam_t.rtam003,
      b_rtam004 LIKE rtam_t.rtam004,
   b_rtam004_desc LIKE type_t.chr80,
      b_rtam005 LIKE rtam_t.rtam005,
   b_rtam005_desc LIKE type_t.chr80,
      b_rtam006 LIKE rtam_t.rtam006
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_rtam_m          type_g_rtam_m
DEFINE g_rtam_m_t        type_g_rtam_m
DEFINE g_rtam_m_o        type_g_rtam_m
DEFINE g_rtam_m_mask_o   type_g_rtam_m #轉換遮罩前資料
DEFINE g_rtam_m_mask_n   type_g_rtam_m #轉換遮罩後資料
 
   DEFINE g_rtamdocno_t LIKE rtam_t.rtamdocno
 
 
DEFINE g_rtan_d          DYNAMIC ARRAY OF type_g_rtan_d
DEFINE g_rtan_d_t        type_g_rtan_d
DEFINE g_rtan_d_o        type_g_rtan_d
DEFINE g_rtan_d_mask_o   DYNAMIC ARRAY OF type_g_rtan_d #轉換遮罩前資料
DEFINE g_rtan_d_mask_n   DYNAMIC ARRAY OF type_g_rtan_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="artt230.idx_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION artt230_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_rtan_d.getLength() THEN
         LET g_detail_idx = g_rtan_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtan_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtan_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="artt230.init" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION artt230_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('rtamstus','13','N,X,Y')
 
      CALL cl_set_combo_scc('rtam000','32') 
   CALL cl_set_combo_scc('rtan014','6006') 
   CALL cl_set_combo_scc('rtan015','6842') 
   CALL cl_set_combo_scc('rtan020','6841') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL artt230_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="artt230.input" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION artt230_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamsite_desc,g_rtam_m.rtamdocdt,g_rtam_m.rtamdocno,g_rtam_m.rtam000, 
       g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam004,g_rtam_m.rtam004_desc,g_rtam_m.rtam005, 
       g_rtam_m.rtam005_desc,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid, 
       g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtid_desc, 
       g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid,g_rtam_m.rtammodid_desc, 
       g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfid_desc,g_rtam_m.rtamcnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT rtanseq,rtan001,rtan002,rtan003,rtan004,rtan005,rtan006,rtan007,rtan008, 
       rtan009,rtan010,rtan011,rtan012,rtan013,rtan014,rtan015,rtan016,rtan017,rtan018,rtan019,rtan020, 
       rtan021,rtan022,rtan023,rtansite,rtancomp FROM rtan_t WHERE rtanent=? AND rtandocno=? AND rtanseq=?  
       FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt230_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL artt230_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL artt230_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamdocdt,g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001, 
       g_rtam_m.rtam003,g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus 

   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="artt230.input.body" ver="2" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_rtan_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtan_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artt230_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_rtan_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artt230_cl USING g_enterprise,g_rtam_m.rtamdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt230_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE artt230_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_rtan_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtan_d[l_ac].rtanseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_rtan_d_t.* = g_rtan_d[l_ac].*  #BACKUP
               LET g_rtan_d_o.* = g_rtan_d[l_ac].*  #BACKUP
               CALL artt230_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL artt230_set_no_entry_b(l_cmd)
               IF NOT artt230_lock_b("rtan_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artt230_bcl INTO g_rtan_d[l_ac].rtanseq,g_rtan_d[l_ac].rtan001,g_rtan_d[l_ac].rtan002, 
                      g_rtan_d[l_ac].rtan003,g_rtan_d[l_ac].rtan004,g_rtan_d[l_ac].rtan005,g_rtan_d[l_ac].rtan006, 
                      g_rtan_d[l_ac].rtan007,g_rtan_d[l_ac].rtan008,g_rtan_d[l_ac].rtan009,g_rtan_d[l_ac].rtan010, 
                      g_rtan_d[l_ac].rtan011,g_rtan_d[l_ac].rtan012,g_rtan_d[l_ac].rtan013,g_rtan_d[l_ac].rtan014, 
                      g_rtan_d[l_ac].rtan015,g_rtan_d[l_ac].rtan016,g_rtan_d[l_ac].rtan017,g_rtan_d[l_ac].rtan018, 
                      g_rtan_d[l_ac].rtan019,g_rtan_d[l_ac].rtan020,g_rtan_d[l_ac].rtan021,g_rtan_d[l_ac].rtan022, 
                      g_rtan_d[l_ac].rtan023,g_rtan_d[l_ac].rtansite,g_rtan_d[l_ac].rtancomp
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_rtan_d_t.rtanseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rtan_d_mask_o[l_ac].* =  g_rtan_d[l_ac].*
                  CALL artt230_rtan_t_mask()
                  LET g_rtan_d_mask_n[l_ac].* =  g_rtan_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL artt230_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtan_d[l_ac].* TO NULL 
            INITIALIZE g_rtan_d_t.* TO NULL 
            INITIALIZE g_rtan_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_rtan_d[l_ac].rtan006 = "0"
      LET g_rtan_d[l_ac].rtan012 = "N"
      LET g_rtan_d[l_ac].rtan013 = "N"
      LET g_rtan_d[l_ac].rtan014 = "2"
      LET g_rtan_d[l_ac].rtan015 = "1"
      LET g_rtan_d[l_ac].rtan016 = "0"
      LET g_rtan_d[l_ac].rtan017 = "0"
      LET g_rtan_d[l_ac].rtan018 = "0"
      LET g_rtan_d[l_ac].rtan020 = "1"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_rtan_d_t.* = g_rtan_d[l_ac].*     #新輸入資料
            LET g_rtan_d_o.* = g_rtan_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artt230_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL artt230_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtan_d[li_reproduce_target].* = g_rtan_d[li_reproduce].*
 
               LET g_rtan_d[li_reproduce_target].rtanseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM rtan_t 
             WHERE rtanent = g_enterprise AND rtandocno = g_rtam_m.rtamdocno
 
               AND rtanseq = g_rtan_d[l_ac].rtanseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtam_m.rtamdocno
               LET gs_keys[2] = g_rtan_d[g_detail_idx].rtanseq
               CALL artt230_insert_b('rtan_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_rtan_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtan_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artt230_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtam_m.rtamdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_rtan_d_t.rtanseq
 
            
               #刪除同層單身
               IF NOT artt230_delete_b('rtan_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt230_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT artt230_key_delete_b(gs_keys,'rtan_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt230_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE artt230_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_rtan_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rtan_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtanseq
            #add-point:BEFORE FIELD rtanseq
            {<point name="input.b.page1.rtanseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtanseq
            
            #add-point:AFTER FIELD rtanseq
            {<point name="input.a.page1.rtanseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtanseq
            #add-point:ON CHANGE rtanseq
            {<point name="input.g.page1.rtanseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan001
            #add-point:BEFORE FIELD rtan001
            {<point name="input.b.page1.rtan001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan001
            
            #add-point:AFTER FIELD rtan001
            {<point name="input.a.page1.rtan001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtan001
            #add-point:ON CHANGE rtan001
            {<point name="input.g.page1.rtan001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan002
            #add-point:BEFORE FIELD rtan002
            {<point name="input.b.page1.rtan002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan002
            
            #add-point:AFTER FIELD rtan002
            {<point name="input.a.page1.rtan002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtan002
            #add-point:ON CHANGE rtan002
            {<point name="input.g.page1.rtan002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan003
            #add-point:BEFORE FIELD rtan003
            {<point name="input.b.page1.rtan003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan003
            
            #add-point:AFTER FIELD rtan003
            {<point name="input.a.page1.rtan003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtan003
            #add-point:ON CHANGE rtan003
            {<point name="input.g.page1.rtan003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan004
            #add-point:BEFORE FIELD rtan004
            {<point name="input.b.page1.rtan004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan004
            
            #add-point:AFTER FIELD rtan004
            {<point name="input.a.page1.rtan004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtan004
            #add-point:ON CHANGE rtan004
            {<point name="input.g.page1.rtan004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan005
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtan_d[l_ac].rtan005,"0","1","","","azz-00079",1) THEN
               NEXT FIELD rtan005
            END IF 
 
 
            #add-point:AFTER FIELD rtan005
            {<point name="input.a.page1.rtan005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan005
            #add-point:BEFORE FIELD rtan005
            {<point name="input.b.page1.rtan005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtan005
            #add-point:ON CHANGE rtan005
            {<point name="input.g.page1.rtan005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan007
            #add-point:BEFORE FIELD rtan007
            {<point name="input.b.page1.rtan007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan007
            
            #add-point:AFTER FIELD rtan007
            {<point name="input.a.page1.rtan007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtan007
            #add-point:ON CHANGE rtan007
            {<point name="input.g.page1.rtan007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan010
            #add-point:BEFORE FIELD rtan010
            {<point name="input.b.page1.rtan010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan010
            
            #add-point:AFTER FIELD rtan010
            {<point name="input.a.page1.rtan010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtan010
            #add-point:ON CHANGE rtan010
            {<point name="input.g.page1.rtan010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan011
            #add-point:BEFORE FIELD rtan011
            {<point name="input.b.page1.rtan011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan011
            
            #add-point:AFTER FIELD rtan011
            {<point name="input.a.page1.rtan011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtan011
            #add-point:ON CHANGE rtan011
            {<point name="input.g.page1.rtan011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan012
            #add-point:BEFORE FIELD rtan012
            {<point name="input.b.page1.rtan012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan012
            
            #add-point:AFTER FIELD rtan012
            {<point name="input.a.page1.rtan012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtan012
            #add-point:ON CHANGE rtan012
            {<point name="input.g.page1.rtan012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan013
            #add-point:BEFORE FIELD rtan013
            {<point name="input.b.page1.rtan013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan013
            
            #add-point:AFTER FIELD rtan013
            {<point name="input.a.page1.rtan013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtan013
            #add-point:ON CHANGE rtan013
            {<point name="input.g.page1.rtan013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan014
            #add-point:BEFORE FIELD rtan014
            {<point name="input.b.page1.rtan014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan014
            
            #add-point:AFTER FIELD rtan014
            {<point name="input.a.page1.rtan014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtan014
            #add-point:ON CHANGE rtan014
            {<point name="input.g.page1.rtan014" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan015
            #add-point:BEFORE FIELD rtan015
            {<point name="input.b.page1.rtan015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan015
            
            #add-point:AFTER FIELD rtan015
            {<point name="input.a.page1.rtan015" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtan015
            #add-point:ON CHANGE rtan015
            {<point name="input.g.page1.rtan015" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan017
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtan_d[l_ac].rtan017,"0","1","","","azz-00079",1) THEN
               NEXT FIELD rtan017
            END IF 
 
 
            #add-point:AFTER FIELD rtan017
            {<point name="input.a.page1.rtan017" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan017
            #add-point:BEFORE FIELD rtan017
            {<point name="input.b.page1.rtan017" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtan017
            #add-point:ON CHANGE rtan017
            {<point name="input.g.page1.rtan017" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan018
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtan_d[l_ac].rtan018,"0","1","","","azz-00079",1) THEN
               NEXT FIELD rtan018
            END IF 
 
 
            #add-point:AFTER FIELD rtan018
            {<point name="input.a.page1.rtan018" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan018
            #add-point:BEFORE FIELD rtan018
            {<point name="input.b.page1.rtan018" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtan018
            #add-point:ON CHANGE rtan018
            {<point name="input.g.page1.rtan018" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtan019
            #add-point:BEFORE FIELD rtan019
            {<point name="input.b.page1.rtan019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtan019
            
            #add-point:AFTER FIELD rtan019
            {<point name="input.a.page1.rtan019" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtan019
            #add-point:ON CHANGE rtan019
            {<point name="input.g.page1.rtan019" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtansite
            #add-point:BEFORE FIELD rtansite
            {<point name="input.b.page1.rtansite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtansite
            
            #add-point:AFTER FIELD rtansite
            {<point name="input.a.page1.rtansite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtansite
            #add-point:ON CHANGE rtansite
            {<point name="input.g.page1.rtansite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtancomp
            #add-point:BEFORE FIELD rtancomp
            {<point name="input.b.page1.rtancomp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtancomp
            
            #add-point:AFTER FIELD rtancomp
            {<point name="input.a.page1.rtancomp" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtancomp
            #add-point:ON CHANGE rtancomp
            {<point name="input.g.page1.rtancomp" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.rtanseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtanseq
            #add-point:ON ACTION controlp INFIELD rtanseq
            {<point name="input.c.page1.rtanseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtan001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan001
            #add-point:ON ACTION controlp INFIELD rtan001
            {<point name="input.c.page1.rtan001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtan002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan002
            #add-point:ON ACTION controlp INFIELD rtan002
            {<point name="input.c.page1.rtan002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtan003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan003
            #add-point:ON ACTION controlp INFIELD rtan003
            {<point name="input.c.page1.rtan003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtan004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan004
            #add-point:ON ACTION controlp INFIELD rtan004
            {<point name="input.c.page1.rtan004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtan005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan005
            #add-point:ON ACTION controlp INFIELD rtan005
            {<point name="input.c.page1.rtan005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtan007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan007
            #add-point:ON ACTION controlp INFIELD rtan007
            {<point name="input.c.page1.rtan007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtan010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan010
            #add-point:ON ACTION controlp INFIELD rtan010
            {<point name="input.c.page1.rtan010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtan011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan011
            #add-point:ON ACTION controlp INFIELD rtan011
            {<point name="input.c.page1.rtan011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtan012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan012
            #add-point:ON ACTION controlp INFIELD rtan012
            {<point name="input.c.page1.rtan012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtan013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan013
            #add-point:ON ACTION controlp INFIELD rtan013
            {<point name="input.c.page1.rtan013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtan014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan014
            #add-point:ON ACTION controlp INFIELD rtan014
            {<point name="input.c.page1.rtan014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtan015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan015
            #add-point:ON ACTION controlp INFIELD rtan015
            {<point name="input.c.page1.rtan015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtan017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan017
            #add-point:ON ACTION controlp INFIELD rtan017
            {<point name="input.c.page1.rtan017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtan018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan018
            #add-point:ON ACTION controlp INFIELD rtan018
            {<point name="input.c.page1.rtan018" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtan019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtan019
            #add-point:ON ACTION controlp INFIELD rtan019
            {<point name="input.c.page1.rtan019" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtansite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtansite
            #add-point:ON ACTION controlp INFIELD rtansite
            {<point name="input.c.page1.rtansite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtancomp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtancomp
            #add-point:ON ACTION controlp INFIELD rtancomp
            {<point name="input.c.page1.rtancomp" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_rtan_d[l_ac].* = g_rtan_d_t.*
               CLOSE artt230_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_rtan_d[l_ac].rtanseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_rtan_d[l_ac].* = g_rtan_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL artt230_rtan_t_mask_restore('restore_mask_o')
      
               UPDATE rtan_t SET (rtandocno,rtanseq,rtan001,rtan002,rtan003,rtan004,rtan005,rtan006, 
                   rtan007,rtan008,rtan009,rtan010,rtan011,rtan012,rtan013,rtan014,rtan015,rtan016,rtan017, 
                   rtan018,rtan019,rtan020,rtan021,rtan022,rtan023,rtansite,rtancomp) = (g_rtam_m.rtamdocno, 
                   g_rtan_d[l_ac].rtanseq,g_rtan_d[l_ac].rtan001,g_rtan_d[l_ac].rtan002,g_rtan_d[l_ac].rtan003, 
                   g_rtan_d[l_ac].rtan004,g_rtan_d[l_ac].rtan005,g_rtan_d[l_ac].rtan006,g_rtan_d[l_ac].rtan007, 
                   g_rtan_d[l_ac].rtan008,g_rtan_d[l_ac].rtan009,g_rtan_d[l_ac].rtan010,g_rtan_d[l_ac].rtan011, 
                   g_rtan_d[l_ac].rtan012,g_rtan_d[l_ac].rtan013,g_rtan_d[l_ac].rtan014,g_rtan_d[l_ac].rtan015, 
                   g_rtan_d[l_ac].rtan016,g_rtan_d[l_ac].rtan017,g_rtan_d[l_ac].rtan018,g_rtan_d[l_ac].rtan019, 
                   g_rtan_d[l_ac].rtan020,g_rtan_d[l_ac].rtan021,g_rtan_d[l_ac].rtan022,g_rtan_d[l_ac].rtan023, 
                   g_rtan_d[l_ac].rtansite,g_rtan_d[l_ac].rtancomp)
                WHERE rtanent = g_enterprise AND rtandocno = g_rtam_m.rtamdocno 
 
                  AND rtanseq = g_rtan_d_t.rtanseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtan_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_rtan_d[l_ac].* = g_rtan_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtan_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_rtan_d[l_ac].* = g_rtan_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtam_m.rtamdocno
               LET gs_keys_bak[1] = g_rtamdocno_t
               LET gs_keys[2] = g_rtan_d[g_detail_idx].rtanseq
               LET gs_keys_bak[2] = g_rtan_d_t.rtanseq
               CALL artt230_update_b('rtan_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL artt230_rtan_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_rtan_d[g_detail_idx].rtanseq = g_rtan_d_t.rtanseq 
 
                  ) THEN
                  LET gs_keys[01] = g_rtam_m.rtamdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_rtan_d_t.rtanseq
 
                  CALL artt230_key_update_b(gs_keys,'rtan_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtam_m),util.JSON.stringify(g_rtan_d_t)
               LET g_log2 = util.JSON.stringify(g_rtam_m),util.JSON.stringify(g_rtan_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL artt230_unlock_b("rtan_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_rtan_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_rtan_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
]]>
  </section>
  <section id="artt230.input.head" ver="1" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamdocdt,g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001, 
          g_rtam_m.rtam003,g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN artt230_cl USING g_enterprise,g_rtam_m.rtamdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt230_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE artt230_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL artt230_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL artt230_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtamsite
            
            #add-point:AFTER FIELD rtamsite
            {<point name="input.a.rtamsite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamsite
            #add-point:BEFORE FIELD rtamsite
            {<point name="input.b.rtamsite" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtamsite
            #add-point:ON CHANGE rtamsite
            {<point name="input.g.rtamsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamdocdt
            #add-point:BEFORE FIELD rtamdocdt
            {<point name="input.b.rtamdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtamdocdt
            
            #add-point:AFTER FIELD rtamdocdt
            {<point name="input.a.rtamdocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtamdocdt
            #add-point:ON CHANGE rtamdocdt
            {<point name="input.g.rtamdocdt" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamdocno
            #add-point:BEFORE FIELD rtamdocno
            {<point name="input.b.rtamdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtamdocno
            
            #add-point:AFTER FIELD rtamdocno
            {<point name="input.a.rtamdocno" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtamdocno
            #add-point:ON CHANGE rtamdocno
            {<point name="input.g.rtamdocno" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtam000
            #add-point:BEFORE FIELD rtam000
            {<point name="input.b.rtam000" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtam000
            
            #add-point:AFTER FIELD rtam000
            {<point name="input.a.rtam000" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtam000
            #add-point:ON CHANGE rtam000
            {<point name="input.g.rtam000" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtam001
            #add-point:BEFORE FIELD rtam001
            {<point name="input.b.rtam001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtam001
            
            #add-point:AFTER FIELD rtam001
            {<point name="input.a.rtam001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtam001
            #add-point:ON CHANGE rtam001
            {<point name="input.g.rtam001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtam003
            #add-point:BEFORE FIELD rtam003
            {<point name="input.b.rtam003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtam003
            
            #add-point:AFTER FIELD rtam003
            {<point name="input.a.rtam003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtam003
            #add-point:ON CHANGE rtam003
            {<point name="input.g.rtam003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtam004
            
            #add-point:AFTER FIELD rtam004
            {<point name="input.a.rtam004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtam004
            #add-point:BEFORE FIELD rtam004
            {<point name="input.b.rtam004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtam004
            #add-point:ON CHANGE rtam004
            {<point name="input.g.rtam004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtam005
            
            #add-point:AFTER FIELD rtam005
            {<point name="input.a.rtam005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtam005
            #add-point:BEFORE FIELD rtam005
            {<point name="input.b.rtam005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtam005
            #add-point:ON CHANGE rtam005
            {<point name="input.g.rtam005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtam006
            #add-point:BEFORE FIELD rtam006
            {<point name="input.b.rtam006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtam006
            
            #add-point:AFTER FIELD rtam006
            {<point name="input.a.rtam006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtam006
            #add-point:ON CHANGE rtam006
            {<point name="input.g.rtam006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamunit
            #add-point:BEFORE FIELD rtamunit
            {<point name="input.b.rtamunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtamunit
            
            #add-point:AFTER FIELD rtamunit
            {<point name="input.a.rtamunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtamunit
            #add-point:ON CHANGE rtamunit
            {<point name="input.g.rtamunit" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtamstus
            #add-point:BEFORE FIELD rtamstus
            {<point name="input.b.rtamstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtamstus
            
            #add-point:AFTER FIELD rtamstus
            {<point name="input.a.rtamstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtamstus
            #add-point:ON CHANGE rtamstus
            {<point name="input.g.rtamstus" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.rtamsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtamsite
            #add-point:ON ACTION controlp INFIELD rtamsite
            {<point name="input.c.rtamsite" />}
            #END add-point
 
         #Ctrlp:input.c.rtamdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtamdocdt
            #add-point:ON ACTION controlp INFIELD rtamdocdt
            {<point name="input.c.rtamdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.rtamdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtamdocno
            #add-point:ON ACTION controlp INFIELD rtamdocno
            {<point name="input.c.rtamdocno" />}
            #END add-point
 
         #Ctrlp:input.c.rtam000
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtam000
            #add-point:ON ACTION controlp INFIELD rtam000
            {<point name="input.c.rtam000" />}
            #END add-point
 
         #Ctrlp:input.c.rtam001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtam001
            #add-point:ON ACTION controlp INFIELD rtam001
            {<point name="input.c.rtam001" />}
            #END add-point
 
         #Ctrlp:input.c.rtam003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtam003
            #add-point:ON ACTION controlp INFIELD rtam003
            {<point name="input.c.rtam003" />}
            #END add-point
 
         #Ctrlp:input.c.rtam004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtam004
            #add-point:ON ACTION controlp INFIELD rtam004
            {<point name="input.c.rtam004" />}
            #END add-point
 
         #Ctrlp:input.c.rtam005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtam005
            #add-point:ON ACTION controlp INFIELD rtam005
            {<point name="input.c.rtam005" />}
            #END add-point
 
         #Ctrlp:input.c.rtam006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtam006
            #add-point:ON ACTION controlp INFIELD rtam006
            {<point name="input.c.rtam006" />}
            #END add-point
 
         #Ctrlp:input.c.rtamunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtamunit
            #add-point:ON ACTION controlp INFIELD rtamunit
            {<point name="input.c.rtamunit" />}
            #END add-point
 
         #Ctrlp:input.c.rtamstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtamstus
            #add-point:ON ACTION controlp INFIELD rtamstus
            {<point name="input.c.rtamstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_rtam_m.rtamdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO rtam_t (rtament,rtamsite,rtamdocdt,rtamdocno,rtam000,rtam001,rtam002,rtam003, 
                   rtam004,rtam005,rtam006,rtamunit,rtamstus,rtamownid,rtamowndp,rtamcrtid,rtamcrtdp, 
                   rtamcrtdt,rtammodid,rtammoddt,rtamcnfid,rtamcnfdt)
               VALUES (g_enterprise,g_rtam_m.rtamsite,g_rtam_m.rtamdocdt,g_rtam_m.rtamdocno,g_rtam_m.rtam000, 
                   g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam004,g_rtam_m.rtam005, 
                   g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid,g_rtam_m.rtamowndp, 
                   g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid,g_rtam_m.rtammoddt, 
                   g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_rtam_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL artt230_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL artt230_b_fill()
                  CALL artt230_b_fill2('0')
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL artt230_rtam_t_mask_restore('restore_mask_o')
               
               UPDATE rtam_t SET (rtamsite,rtamdocdt,rtamdocno,rtam000,rtam001,rtam002,rtam003,rtam004, 
                   rtam005,rtam006,rtamunit,rtamstus,rtamownid,rtamowndp,rtamcrtid,rtamcrtdp,rtamcrtdt, 
                   rtammodid,rtammoddt,rtamcnfid,rtamcnfdt) = (g_rtam_m.rtamsite,g_rtam_m.rtamdocdt, 
                   g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003, 
                   g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus, 
                   g_rtam_m.rtamownid,g_rtam_m.rtamowndp,g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt, 
                   g_rtam_m.rtammodid,g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt)
                WHERE rtament = g_enterprise AND rtamdocno = g_rtamdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "rtam_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL artt230_rtam_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_rtam_m_t)
               LET g_log2 = util.JSON.stringify(g_rtam_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_rtamdocno_t = g_rtam_m.rtamdocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="artt230.input.other" ver="1" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD rtamdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD rtanseq
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="artt230.insert" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION artt230_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_rtan_d.clear()   
 
 
   INITIALIZE g_rtam_m.* LIKE rtam_t.*             #DEFAULT 設定
   
   LET g_rtamdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_rtam_m.rtamownid = g_user
      LET g_rtam_m.rtamowndp = g_dept
      LET g_rtam_m.rtamcrtid = g_user
      LET g_rtam_m.rtamcrtdp = g_dept 
      LET g_rtam_m.rtamcrtdt = cl_get_current()
      LET g_rtam_m.rtammodid = g_user
      LET g_rtam_m.rtammoddt = cl_get_current()
      LET g_rtam_m.rtamstus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_rtam_m_t.* = g_rtam_m.*
      LET g_rtam_m_o.* = g_rtam_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_rtam_m.rtamstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
 
 
    
      CALL artt230_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_rtam_m.* TO NULL
         INITIALIZE g_rtan_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL artt230_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_rtan_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt230_set_act_visible()   
   CALL artt230_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtamdocno_t = g_rtam_m.rtamdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtament = '" ||g_enterprise|| "' AND",
                      " rtamdocno = '", g_rtam_m.rtamdocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artt230_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE artt230_cl
   
   CALL artt230_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE artt230_master_referesh USING g_rtam_m.rtamdocno INTO g_rtam_m.rtamsite,g_rtam_m.rtamdocdt, 
       g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam004, 
       g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid,g_rtam_m.rtamowndp, 
       g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid,g_rtam_m.rtammoddt, 
       g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt,g_rtam_m.rtamsite_desc,g_rtam_m.rtam004_desc,g_rtam_m.rtam005_desc, 
       g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid_desc,g_rtam_m.rtamcrtdp_desc, 
       g_rtam_m.rtammodid_desc,g_rtam_m.rtamcnfid_desc
   
   #遮罩相關處理
   LET g_rtam_m_mask_o.* =  g_rtam_m.*
   CALL artt230_rtam_t_mask()
   LET g_rtam_m_mask_n.* =  g_rtam_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamsite_desc,g_rtam_m.rtamdocdt,g_rtam_m.rtamdocno,g_rtam_m.rtam000, 
       g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam004,g_rtam_m.rtam004_desc,g_rtam_m.rtam005, 
       g_rtam_m.rtam005_desc,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid, 
       g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtid_desc, 
       g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid,g_rtam_m.rtammodid_desc, 
       g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfid_desc,g_rtam_m.rtamcnfdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL artt230_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="artt230.insert_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION artt230_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO rtan_t
                  (rtanent,
                   rtandocno,
                   rtanseq
                   ,rtan001,rtan002,rtan003,rtan004,rtan005,rtan006,rtan007,rtan008,rtan009,rtan010,rtan011,rtan012,rtan013,rtan014,rtan015,rtan016,rtan017,rtan018,rtan019,rtan020,rtan021,rtan022,rtan023,rtansite,rtancomp) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtan_d[g_detail_idx].rtan001,g_rtan_d[g_detail_idx].rtan002,g_rtan_d[g_detail_idx].rtan003, 
                       g_rtan_d[g_detail_idx].rtan004,g_rtan_d[g_detail_idx].rtan005,g_rtan_d[g_detail_idx].rtan006, 
                       g_rtan_d[g_detail_idx].rtan007,g_rtan_d[g_detail_idx].rtan008,g_rtan_d[g_detail_idx].rtan009, 
                       g_rtan_d[g_detail_idx].rtan010,g_rtan_d[g_detail_idx].rtan011,g_rtan_d[g_detail_idx].rtan012, 
                       g_rtan_d[g_detail_idx].rtan013,g_rtan_d[g_detail_idx].rtan014,g_rtan_d[g_detail_idx].rtan015, 
                       g_rtan_d[g_detail_idx].rtan016,g_rtan_d[g_detail_idx].rtan017,g_rtan_d[g_detail_idx].rtan018, 
                       g_rtan_d[g_detail_idx].rtan019,g_rtan_d[g_detail_idx].rtan020,g_rtan_d[g_detail_idx].rtan021, 
                       g_rtan_d[g_detail_idx].rtan022,g_rtan_d[g_detail_idx].rtan023,g_rtan_d[g_detail_idx].rtansite, 
                       g_rtan_d[g_detail_idx].rtancomp)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtan_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtan_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="artt230.key_delete_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION artt230_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="artt230.key_update_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION artt230_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="artt230.lock_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION artt230_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL artt230_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "rtan_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN artt230_bcl USING g_enterprise,
                                       g_rtam_m.rtamdocno,g_rtan_d[g_detail_idx].rtanseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt230_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="artt230.main" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT rtamsite,'',rtamdocdt,rtamdocno,rtam000,rtam001,rtam002,rtam003,rtam004, 
       '',rtam005,'',rtam006,rtamunit,rtamstus,rtamownid,'',rtamowndp,'',rtamcrtid,'',rtamcrtdp,'',rtamcrtdt, 
       rtammodid,'',rtammoddt,rtamcnfid,'',rtamcnfdt", 
                      " FROM rtam_t",
                      " WHERE rtament= ? AND rtamdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt230_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.rtamsite,t0.rtamdocdt,t0.rtamdocno,t0.rtam000,t0.rtam001,t0.rtam002, 
       t0.rtam003,t0.rtam004,t0.rtam005,t0.rtam006,t0.rtamunit,t0.rtamstus,t0.rtamownid,t0.rtamowndp, 
       t0.rtamcrtid,t0.rtamcrtdp,t0.rtamcrtdt,t0.rtammodid,t0.rtammoddt,t0.rtamcnfid,t0.rtamcnfdt,t1.ooefl003 , 
       t2.ooag011 ,t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011 ,t7.ooefl003 ,t8.ooag011 ,t9.ooag011", 

               " FROM rtam_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.rtamsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.rtam004  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.rtam005 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=t0.rtamownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=t0.rtamowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=t0.rtamcrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=t0.rtamcrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=t0.rtammodid  ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent='"||g_enterprise||"' AND t9.ooag001=t0.rtamcnfid  ",
 
               " WHERE t0.rtament = '" ||g_enterprise|| "' AND t0.rtamdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE artt230_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_artt230 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL artt230_init()   
 
      #進入選單 Menu (="N")
      CALL artt230_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_artt230
      
   END IF 
   
   CLOSE artt230_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="artt230.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/art/artt230_mask.4gl"
]]>
  </section>
  <section id="artt230.modify" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION artt230_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_rtam_m_t.* = g_rtam_m.*
   LET g_rtam_m_o.* = g_rtam_m.*
   
   IF g_rtam_m.rtamdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_rtamdocno_t = g_rtam_m.rtamdocno
 
   CALL s_transaction_begin()
   
   OPEN artt230_cl USING g_enterprise,g_rtam_m.rtamdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt230_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE artt230_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artt230_master_referesh USING g_rtam_m.rtamdocno INTO g_rtam_m.rtamsite,g_rtam_m.rtamdocdt, 
       g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam004, 
       g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid,g_rtam_m.rtamowndp, 
       g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid,g_rtam_m.rtammoddt, 
       g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt,g_rtam_m.rtamsite_desc,g_rtam_m.rtam004_desc,g_rtam_m.rtam005_desc, 
       g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid_desc,g_rtam_m.rtamcrtdp_desc, 
       g_rtam_m.rtammodid_desc,g_rtam_m.rtamcnfid_desc
   
   #檢查是否允許此動作
   IF NOT artt230_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtam_m_mask_o.* =  g_rtam_m.*
   CALL artt230_rtam_t_mask()
   LET g_rtam_m_mask_n.* =  g_rtam_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL artt230_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_rtamdocno_t = g_rtam_m.rtamdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_rtam_m.rtammodid = g_user 
LET g_rtam_m.rtammoddt = cl_get_current()
LET g_rtam_m.rtammodid_desc = cl_get_username(g_rtam_m.rtammodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL artt230_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE rtam_t SET (rtammodid,rtammoddt) = (g_rtam_m.rtammodid,g_rtam_m.rtammoddt)
          WHERE rtament = g_enterprise AND rtamdocno = g_rtamdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_rtam_m.* = g_rtam_m_t.*
         CALL artt230_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_rtam_m.rtamdocno != g_rtamdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE rtan_t SET rtandocno = g_rtam_m.rtamdocno
 
          WHERE rtanent = g_enterprise AND rtandocno = g_rtamdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtan_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtan_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt230_set_act_visible()   
   CALL artt230_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " rtament = '" ||g_enterprise|| "' AND",
                      " rtamdocno = '", g_rtam_m.rtamdocno, "' "
 
   #填到對應位置
   CALL artt230_browser_fill("")
 
   CLOSE artt230_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artt230_msgcentre_notify('modify')
 
END FUNCTION   
]]>
  </section>
  <section id="artt230.msgcentre_notify" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION artt230_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL artt230_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_rtam_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="artt230.other_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="artt230.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="artt230.query" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION artt230_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_rtan_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL artt230_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL artt230_browser_fill("")
      CALL artt230_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL artt230_filter_show('rtamsite')
   CALL artt230_filter_show('rtamdocno')
   CALL artt230_filter_show('rtamdocdt')
   CALL artt230_filter_show('rtam001')
   CALL artt230_filter_show('rtam003')
   CALL artt230_filter_show('rtam004')
   CALL artt230_filter_show('rtam005')
   CALL artt230_filter_show('rtam006')
   CALL artt230_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL artt230_fetch("F") 
      #顯示單身筆數
      CALL artt230_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="artt230.reproduce" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION artt230_reproduce()
   DEFINE l_newno     LIKE rtam_t.rtamdocno 
   DEFINE l_oldno     LIKE rtam_t.rtamdocno 
 
   DEFINE l_master    RECORD LIKE rtam_t.*
   DEFINE l_detail    RECORD LIKE rtan_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_rtam_m.rtamdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_rtamdocno_t = g_rtam_m.rtamdocno
 
    
   LET g_rtam_m.rtamdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_rtam_m.rtamownid = g_user
      LET g_rtam_m.rtamowndp = g_dept
      LET g_rtam_m.rtamcrtid = g_user
      LET g_rtam_m.rtamcrtdp = g_dept 
      LET g_rtam_m.rtamcrtdt = cl_get_current()
      LET g_rtam_m.rtammodid = g_user
      LET g_rtam_m.rtammoddt = cl_get_current()
      LET g_rtam_m.rtamstus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_rtam_m.rtamstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL artt230_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_rtam_m.* TO NULL
      INITIALIZE g_rtan_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL artt230_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt230_set_act_visible()   
   CALL artt230_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtamdocno_t = g_rtam_m.rtamdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtament = '" ||g_enterprise|| "' AND",
                      " rtamdocno = '", g_rtam_m.rtamdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artt230_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL artt230_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL artt230_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="artt230.set_act_no_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION artt230_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="artt230.set_act_no_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION artt230_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="artt230.set_act_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION artt230_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="artt230.set_act_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION artt230_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="artt230.set_entry" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION artt230_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("rtamdocno,rtamdocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("rtamdocno",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="artt230.set_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION artt230_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="artt230.set_no_entry" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION artt230_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("rtamdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("rtamdocno,rtamdocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="artt230.set_no_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION artt230_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="artt230.set_pk_array" ver="1" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION artt230_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_rtam_m.rtamdocno
   LET g_pk_array[1].column = 'rtamdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="artt230.show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION artt230_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL artt230_b_fill() #單身填充
      CALL artt230_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL artt230_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_rtam_m_mask_o.* =  g_rtam_m.*
   CALL artt230_rtam_t_mask()
   LET g_rtam_m_mask_n.* =  g_rtam_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamsite_desc,g_rtam_m.rtamdocdt,g_rtam_m.rtamdocno,g_rtam_m.rtam000, 
       g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam004,g_rtam_m.rtam004_desc,g_rtam_m.rtam005, 
       g_rtam_m.rtam005_desc,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid, 
       g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtid_desc, 
       g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid,g_rtam_m.rtammodid_desc, 
       g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfid_desc,g_rtam_m.rtamcnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_rtam_m.rtamstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_rtan_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL artt230_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="artt230.signature" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="artt230.state_change" ver="1" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION artt230_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_rtam_m.rtamdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN artt230_cl USING g_enterprise,g_rtam_m.rtamdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt230_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE artt230_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE artt230_master_referesh USING g_rtam_m.rtamdocno INTO g_rtam_m.rtamsite,g_rtam_m.rtamdocdt, 
       g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam004, 
       g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid,g_rtam_m.rtamowndp, 
       g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid,g_rtam_m.rtammoddt, 
       g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt,g_rtam_m.rtamsite_desc,g_rtam_m.rtam004_desc,g_rtam_m.rtam005_desc, 
       g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid_desc,g_rtam_m.rtamcrtdp_desc, 
       g_rtam_m.rtammodid_desc,g_rtam_m.rtamcnfid_desc
 
   #檢查是否允許此動作
   IF NOT artt230_action_chk() THEN
      CLOSE artt230_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamsite_desc,g_rtam_m.rtamdocdt,g_rtam_m.rtamdocno,g_rtam_m.rtam000, 
       g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam004,g_rtam_m.rtam004_desc,g_rtam_m.rtam005, 
       g_rtam_m.rtam005_desc,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid, 
       g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtid_desc, 
       g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid,g_rtam_m.rtammodid_desc, 
       g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfid_desc,g_rtam_m.rtamcnfdt
 
   CASE g_rtam_m.rtamstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_rtam_m.rtamstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      g_rtam_m.rtamstus = lc_state OR cl_null(lc_state) THEN
      CLOSE artt230_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_rtam_m.rtammodid = g_user
   LET g_rtam_m.rtammoddt = cl_get_current()
   LET g_rtam_m.rtamstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE rtam_t 
      SET (rtamstus,rtammodid,rtammoddt) 
        = (g_rtam_m.rtamstus,g_rtam_m.rtammodid,g_rtam_m.rtammoddt)     
    WHERE rtament = g_enterprise AND rtamdocno = g_rtam_m.rtamdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE artt230_master_referesh USING g_rtam_m.rtamdocno INTO g_rtam_m.rtamsite,g_rtam_m.rtamdocdt, 
          g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam004, 
          g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid,g_rtam_m.rtamowndp, 
          g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid,g_rtam_m.rtammoddt, 
          g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt,g_rtam_m.rtamsite_desc,g_rtam_m.rtam004_desc,g_rtam_m.rtam005_desc, 
          g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid_desc,g_rtam_m.rtamcrtdp_desc, 
          g_rtam_m.rtammodid_desc,g_rtam_m.rtamcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamsite_desc,g_rtam_m.rtamdocdt,g_rtam_m.rtamdocno, 
          g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam004,g_rtam_m.rtam004_desc, 
          g_rtam_m.rtam005,g_rtam_m.rtam005_desc,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus, 
          g_rtam_m.rtamownid,g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid, 
          g_rtam_m.rtamcrtid_desc,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid, 
          g_rtam_m.rtammodid_desc,g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfid_desc,g_rtam_m.rtamcnfdt 

   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE artt230_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artt230_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="artt230.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION artt230_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="artt230.ui_browser_refresh" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION artt230_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_rtamdocno = g_rtam_m.rtamdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="artt230.ui_detailshow" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION artt230_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="artt230.ui_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION artt230_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL artt230_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_rtam_m.* TO NULL
         CALL g_rtan_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL artt230_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL artt230_fetch('') # reload data
               LET l_ac = 1
               CALL artt230_ui_detailshow() #Setting the current row 
         
               CALL artt230_idx_chk()
               #NEXT FIELD rtanseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_rtan_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt230_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL artt230_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL artt230_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL artt230_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL artt230_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL artt230_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL artt230_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL artt230_set_act_visible()   
            CALL artt230_set_act_no_visible()
            IF NOT (g_rtam_m.rtamdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " rtament = '" ||g_enterprise|| "' AND",
                                  " rtamdocno = '", g_rtam_m.rtamdocno, "' "
 
               #填到對應位置
               CALL artt230_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtam_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtan_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL artt230_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtam_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtan_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL artt230_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL artt230_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL artt230_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL artt230_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt230_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL artt230_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt230_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL artt230_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt230_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL artt230_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt230_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL artt230_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt230_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_rtan_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD rtanseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL artt230_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL artt230_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL artt230_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL artt230_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/art/artt230_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL artt230_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL artt230_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL artt230_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL artt230_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL artt230_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_rtam_m.rtamdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="artt230.ui_headershow" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION artt230_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_rtam_m.rtamdocno = g_browser[g_current_idx].b_rtamdocno   
 
   EXECUTE artt230_master_referesh USING g_rtam_m.rtamdocno INTO g_rtam_m.rtamsite,g_rtam_m.rtamdocdt, 
       g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam004, 
       g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid,g_rtam_m.rtamowndp, 
       g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid,g_rtam_m.rtammoddt, 
       g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt,g_rtam_m.rtamsite_desc,g_rtam_m.rtam004_desc,g_rtam_m.rtam005_desc, 
       g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid_desc,g_rtam_m.rtamcrtdp_desc, 
       g_rtam_m.rtammodid_desc,g_rtam_m.rtamcnfid_desc
   CALL artt230_rtam_t_mask()
   CALL artt230_show()
      
END FUNCTION
]]>
  </section>
  <section id="artt230.unlock_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION artt230_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt230_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="artt230.update_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION artt230_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtan_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL artt230_rtan_t_mask_restore('restore_mask_o')
               
      UPDATE rtan_t 
         SET (rtandocno,
              rtanseq
              ,rtan001,rtan002,rtan003,rtan004,rtan005,rtan006,rtan007,rtan008,rtan009,rtan010,rtan011,rtan012,rtan013,rtan014,rtan015,rtan016,rtan017,rtan018,rtan019,rtan020,rtan021,rtan022,rtan023,rtansite,rtancomp) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtan_d[g_detail_idx].rtan001,g_rtan_d[g_detail_idx].rtan002,g_rtan_d[g_detail_idx].rtan003, 
                  g_rtan_d[g_detail_idx].rtan004,g_rtan_d[g_detail_idx].rtan005,g_rtan_d[g_detail_idx].rtan006, 
                  g_rtan_d[g_detail_idx].rtan007,g_rtan_d[g_detail_idx].rtan008,g_rtan_d[g_detail_idx].rtan009, 
                  g_rtan_d[g_detail_idx].rtan010,g_rtan_d[g_detail_idx].rtan011,g_rtan_d[g_detail_idx].rtan012, 
                  g_rtan_d[g_detail_idx].rtan013,g_rtan_d[g_detail_idx].rtan014,g_rtan_d[g_detail_idx].rtan015, 
                  g_rtan_d[g_detail_idx].rtan016,g_rtan_d[g_detail_idx].rtan017,g_rtan_d[g_detail_idx].rtan018, 
                  g_rtan_d[g_detail_idx].rtan019,g_rtan_d[g_detail_idx].rtan020,g_rtan_d[g_detail_idx].rtan021, 
                  g_rtan_d[g_detail_idx].rtan022,g_rtan_d[g_detail_idx].rtan023,g_rtan_d[g_detail_idx].rtansite, 
                  g_rtan_d[g_detail_idx].rtancomp) 
         WHERE rtanent = g_enterprise AND rtandocno = ps_keys_bak[1] AND rtanseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtan_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtan_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt230_rtan_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
