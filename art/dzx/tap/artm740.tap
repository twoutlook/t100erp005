<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="artm740" std_prog="artm740" erpver="1.0" module="ART" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.artm740_rtkhunit_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 應用組織帶出说明
# Memo...........:
# Usage..........: CALL artm740_rtkhunit_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/21 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm740_rtkhunit_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkh_m.rtkhunit
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtkh_m.rtkhunit_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtkh_m.rtkhunit_desc
END FUNCTION]]>
  </point>
  <point name="function.artm740_rtkh005_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 建議補貨量計算公式帶出说明
# Memo...........:
# Usage..........: CALL artm740_rtkh005_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/22 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm740_rtkh005_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkh_m.rtkh005
   CALL ap_ref_array2(g_ref_fields,"SELECT rtkgl003 FROM rtkgl_t WHERE rtkglent='"||g_enterprise||"' AND rtkgl001=? AND rtkgl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtkh_m.rtkh005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtkh_m.rtkh005_desc
END FUNCTION]]>
  </point>
  <point name="function.artm740_rtki002_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 品類帶出说明
# Memo...........:
# Usage..........: CALL artm740_rtki002_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/22 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm740_rtki002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtki_d[l_ac].rtki002
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtki_d[l_ac].rtki002_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_rtki_d[l_ac].rtki002_desc
END FUNCTION]]>
  </point>
  <point name="function.artm740_rtkj002_ref" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 品類帶出说明
# Memo...........:
# Usage..........: CALL artm740_rtkj002_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/22 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm740_rtkj002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtki2_d[l_ac].rtkj002
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtki2_d[l_ac].rtkj002_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_rtki2_d[l_ac].rtkj002_desc
END FUNCTION]]>
  </point>
  <point name="function.artm740_rtkl002_ref" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 品類帶出说明
# Memo...........:
# Usage..........: CALL artm740_rtkl002_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/22 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm740_rtkl002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtki3_d[l_ac].rtkl002
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtki3_d[l_ac].rtkl002_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_rtki3_d[l_ac].rtkl002_desc
END FUNCTION]]>
  </point>
  <point name="function.artm740_chk_rtax001" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 確認輸入的品類是否正確
# Memo...........:
# Usage..........: CALL artm740_chk_rtax001(p_rtax001)
# Input parameter: p_type         1 rtki_t,2 rtkj_t,3 rtkl_t
#                : p_rtax001      品類編號
# Return code....: 無
# Date & Author..: 2014/04/22 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm740_chk_rtax001(p_type,p_rtax001)
DEFINE p_type              LIKE type_t.chr1
DEFINE p_rtax001           LIKE rtax_t.rtax001
DEFINE l_rtaxstus          LIKE rtax_t.rtaxstus
DEFINE l_rtax005           LIKE rtax_t.rtax005
DEFINE l_cnt               LIKE type_t.num5

   LET g_errno = ''
   
   LET l_cnt = 0
   CASE p_type
      WHEN '1'
         SELECT COUNT(*) INTO l_cnt
           FROM rtki_t
          WHERE rtkient = g_enterprise
            AND rtki001 = g_rtkh_m.rtkh001
            AND rtki002 = p_rtax001
      WHEN '2'
         SELECT COUNT(*) INTO l_cnt
           FROM rtkj_t
          WHERE rtkjent = g_enterprise
            AND rtkj001 = g_rtkh_m.rtkh001
            AND rtkj002 = p_rtax001
      WHEN '3'
         SELECT COUNT(*) INTO l_cnt
           FROM rtkl_t
          WHERE rtklent = g_enterprise
            AND rtkl001 = g_rtkh_m.rtkh001
            AND rtkl002 = p_rtax001
   END CASE
   IF l_cnt >= 1 THEN
      #品類編號不可重複!
      LET g_errno = 'ast-00025'
      RETURN
   END IF
   
   LET l_rtaxstus = ''
   LET l_rtax005 = ''
   SELECT rtaxstus,rtax005
     INTO l_rtaxstus,l_rtax005
     FROM rtax_t
    WHERE rtaxent = g_enterprise
      AND rtax001 = p_rtax001
      
   CASE
      WHEN SQLCA.sqlcode = 100
         LET g_errno = 'art-00002'
      WHEN l_rtaxstus <> 'Y'
         #輸入的品類資料無效！
         LET g_errno = 'art-00048'
      WHEN l_rtax005 <> 0
         #輸入的品類編號的下級品類數必須為0,才可輸入
         LET g_errno = 'art-00003'
   END CASE

END FUNCTION]]>
  </point>
  <point name="function.artm740_ins_rtki" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 新增單身rtki_t
# Memo...........:
# Usage..........: CALL artm740_ins_rtki()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/22 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm740_ins_rtki()
DEFINE l_return               STRING
DEFINE l_count                LIKE type_t.num5
DEFINE l_rtki002              LIKE rtki_t.rtki002
DEFINE l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT

   INITIALIZE g_qryparam.* TO NULL
   LET g_qryparam.state = 'c'
   LET g_qryparam.reqry = FALSE
   CALL q_rtax001_6()                                #呼叫開窗
   LET l_return = g_qryparam.return1                 #將開窗取得的值回傳到變數
   
   IF NOT cl_null(l_return) THEN
      LET l_count = 0
      LET tok = base.StringTokenizer.create(l_return,"|")
      LET l_ac_t = l_ac
      
      WHILE tok.hasMoreTokens()
         LET l_rtki002  = tok.nextToken()
         CALL artm740_chk_rtax001('1',l_rtki002)
         IF cl_null(g_errno) THEN
            LET l_count = l_count + 1
            IF l_count > 1 THEN
               LET l_ac = g_rtki_d.getLength() + 1
               LET g_detail_idx = l_ac
               LET g_rtki_d[l_ac].rtki002 = l_rtki002
               INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys[2] = g_rtki_d[l_ac].rtki002
               CALL artm740_insert_b('rtki_t',gs_keys,"'1'")
               IF SQLCA.sqlcode THEN
                  CALL g_rtki_d.deleteElement(l_ac)
                  LET l_count = l_count - 1
               ELSE
                  CALL artm740_rtki002_ref()
               END IF 
            ELSE
               LET g_rtki_d[l_ac].rtki002 = l_rtki002
               DISPLAY BY NAME g_rtki_d[l_ac].rtki002
               CALL artm740_rtki002_ref() 
            END IF
         END IF
         
         #新增另外兩個table
         CALL artm740_chk_rtax001('2',l_rtki002)
         IF cl_null(g_errno) THEN
            LET l_ac = g_rtki2_d.getLength() + 1
            LET g_detail_idx = l_ac
            LET g_rtki2_d[l_ac].rtkj002 = l_rtki002
            INITIALIZE gs_keys TO NULL
            LET gs_keys[1] = g_rtkh_m.rtkh001
            LET gs_keys[2] = g_rtki2_d[l_ac].rtkj002
            CALL artm740_insert_b('rtkj_t',gs_keys,"'2'")
            IF SQLCA.sqlcode THEN
               CALL g_rtki2_d.deleteElement(l_ac)
            ELSE
               CALL artm740_rtkj002_ref()
            END IF
         END IF
         CALL artm740_chk_rtax001('3',l_rtki002)
         IF cl_null(g_errno) THEN
            LET l_ac = g_rtki3_d.getLength() + 1
            LET g_detail_idx = l_ac
            LET g_rtki3_d[l_ac].rtkl002 = l_rtki002
            INITIALIZE gs_keys TO NULL
            LET gs_keys[1] = g_rtkh_m.rtkh001
            LET gs_keys[2] = g_rtki3_d[l_ac].rtkl002
            CALL artm740_insert_b('rtkl_t',gs_keys,"'3'")
            IF SQLCA.sqlcode THEN
               CALL g_rtki3_d.deleteElement(l_ac)
            ELSE
               CALL artm740_rtkl002_ref()
            END IF
         END IF
         
         LET l_ac = l_ac_t
      END WHILE
      IF l_count = 0 THEN
         CALL cl_err('',g_errno,1)
      END IF
   END IF
   LET g_detail_idx = l_ac_t
END FUNCTION]]>
  </point>
  <point name="function.artm740_ins_rtkj" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 新增單身rtkj_t
# Memo...........:
# Usage..........: CALL artm740_ins_rtkj()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/22 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm740_ins_rtkj()
DEFINE l_return               STRING
DEFINE l_count                LIKE type_t.num5
DEFINE l_rtkj002              LIKE rtkj_t.rtkj002
DEFINE l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT

   INITIALIZE g_qryparam.* TO NULL
   LET g_qryparam.state = 'c'
   LET g_qryparam.reqry = FALSE
   CALL q_rtax001_6()                                #呼叫開窗
   LET l_return = g_qryparam.return1                 #將開窗取得的值回傳到變數
   IF NOT cl_null(l_return) THEN
      LET l_count = 0
      LET tok = base.StringTokenizer.create(l_return,"|")
      LET l_ac_t = l_ac
      WHILE tok.hasMoreTokens()
         LET l_rtkj002  = tok.nextToken()
         CALL artm740_chk_rtax001('2',l_rtkj002)
         IF cl_null(g_errno) THEN
            LET l_count = l_count + 1
            IF l_count > 1 THEN
               LET l_ac = g_rtki2_d.getLength() + 1
               LET g_detail_idx = l_ac
               LET g_rtki2_d[l_ac].rtkj002 = l_rtkj002
               INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys[2] = g_rtki2_d[l_ac].rtkj002
               CALL artm740_insert_b('rtkj_t',gs_keys,"'2'")
               IF SQLCA.sqlcode THEN
                  CALL g_rtki2_d.deleteElement(l_ac)
               ELSE
                  CALL artm740_rtkj002_ref()
               END IF
            ELSE
               LET g_rtki2_d[l_ac].rtkj002 = l_rtkj002
               DISPLAY BY NAME g_rtki2_d[l_ac].rtkj002
               CALL artm740_rtkj002_ref()
            END IF
         END IF
         #新增另外兩個table
         CALL artm740_chk_rtax001('1',l_rtkj002)
         IF cl_null(g_errno) THEN
            LET l_ac = g_rtki_d.getLength() + 1
            LET g_detail_idx = l_ac
            LET g_rtki_d[l_ac].rtki002 = l_rtkj002
            INITIALIZE gs_keys TO NULL
            LET gs_keys[1] = g_rtkh_m.rtkh001
            LET gs_keys[2] = g_rtki_d[l_ac].rtki002
            CALL artm740_insert_b('rtki_t',gs_keys,"'1'")
            IF SQLCA.sqlcode THEN
               CALL g_rtki_d.deleteElement(l_ac)
            ELSE
               CALL artm740_rtki002_ref()
            END IF
         END IF
         CALL artm740_chk_rtax001('3',l_rtkj002)
         IF cl_null(g_errno) THEN
            LET l_ac = g_rtki3_d.getLength() + 1
            LET g_detail_idx = l_ac
            LET g_rtki3_d[l_ac].rtkl002 = l_rtkj002
            INITIALIZE gs_keys TO NULL
            LET gs_keys[1] = g_rtkh_m.rtkh001
            LET gs_keys[2] = g_rtki3_d[l_ac].rtkl002
            CALL artm740_insert_b('rtkl_t',gs_keys,"'3'")
            IF SQLCA.sqlcode THEN
               CALL g_rtki3_d.deleteElement(l_ac)
            ELSE
               CALL artm740_rtkl002_ref()
            END IF
         END IF
         
         LET l_ac = l_ac_t
      END WHILE
      IF l_count = 0 THEN
         CALL cl_err('',g_errno,1)
      END IF
   END IF
   LET g_detail_idx = l_ac_t
END FUNCTION]]>
  </point>
  <point name="function.artm740_ins_rtkl" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 新增單身rtkl_t
# Memo...........:
# Usage..........: CALL artm740_ins_rtkl()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/22 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm740_ins_rtkl()
DEFINE l_return               STRING
DEFINE l_count                LIKE type_t.num5
DEFINE l_rtkl002              LIKE rtkl_t.rtkl002
DEFINE l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT

   INITIALIZE g_qryparam.* TO NULL
   LET g_qryparam.state = 'c'
   LET g_qryparam.reqry = FALSE
   CALL q_rtax001_6()                                #呼叫開窗
   LET l_return = g_qryparam.return1                 #將開窗取得的值回傳到變數
   IF NOT cl_null(l_return) THEN
      LET l_count = 0
      LET tok = base.StringTokenizer.create(l_return,"|")
      LET l_ac_t = l_ac
      WHILE tok.hasMoreTokens()
         LET l_rtkl002  = tok.nextToken()
         CALL artm740_chk_rtax001('3',l_rtkl002)
         IF cl_null(g_errno) THEN
            LET l_count = l_count + 1
            IF l_count > 1 THEN
               LET l_ac = g_rtki3_d.getLength() + 1
               LET g_detail_idx = l_ac
               LET g_rtki3_d[l_ac].rtkl002 = l_rtkl002
               INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys[2] = g_rtki3_d[l_ac].rtkl002
               CALL artm740_insert_b('rtkl_t',gs_keys,"'3'")
               IF SQLCA.sqlcode THEN
                  CALL g_rtki3_d.deleteElement(l_ac)
               ELSE
                  CALL artm740_rtkl002_ref()
               END IF
            ELSE
               LET g_rtki3_d[l_ac].rtkl002 = l_rtkl002
               DISPLAY BY NAME g_rtki3_d[l_ac].rtkl002
               CALL artm740_rtkl002_ref()
            END IF
         END IF
         
         #新增另外兩個table
         CALL artm740_chk_rtax001('1',l_rtkl002)
         IF cl_null(g_errno) THEN
            LET l_ac = g_rtki_d.getLength() + 1
            LET g_detail_idx = l_ac
            LET g_rtki_d[l_ac].rtki002 = l_rtkl002
            INITIALIZE gs_keys TO NULL
            LET gs_keys[1] = g_rtkh_m.rtkh001
            LET gs_keys[2] = g_rtki_d[l_ac].rtki002
            CALL artm740_insert_b('rtki_t',gs_keys,"'1'")
            IF SQLCA.sqlcode THEN
               CALL g_rtki_d.deleteElement(l_ac)
            ELSE
               CALL artm740_rtki002_ref()
            END IF
         END IF
         CALL artm740_chk_rtax001('2',l_rtkl002)
         IF cl_null(g_errno) THEN
            LET l_ac = g_rtki2_d.getLength() + 1
            LET g_detail_idx = l_ac
            LET g_rtki2_d[l_ac].rtkj002 = l_rtkl002
            INITIALIZE gs_keys TO NULL
            LET gs_keys[1] = g_rtkh_m.rtkh001
            LET gs_keys[2] = g_rtki2_d[l_ac].rtkj002
            CALL artm740_insert_b('rtkj_t',gs_keys,"'2'")
            IF SQLCA.sqlcode THEN
               CALL g_rtki2_d.deleteElement(l_ac)
            ELSE
               CALL artm740_rtkj002_ref()
            END IF
         END IF
         
         LET l_ac = l_ac_t
      END WHILE
      IF l_count = 0 THEN
         CALL cl_err('',g_errno,1)
      END IF
   END IF
   LET g_detail_idx = l_ac_t
END FUNCTION]]>
  </point>
  <point name="function.artm740_chk_rtkk" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 檢查起訖區間不重疊
# Memo...........:
# Usage..........: CALL artm740_chk_rtkk(p_rtkk002)
# Input parameter: p_rtkk002      檢查的值
# Return code....: 無
# Date & Author..: 2014/04/23 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm740_chk_rtkk(p_rtkk002)
DEFINE p_rtkk002       LIKE rtkk_t.rtkk002
DEFINE l_cnt           LIKE type_t.num5

   LET g_errno = ''
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM rtkk_t
    WHERE rtkkent = g_enterprise
      AND rtkk001 = g_rtkh_m.rtkh001
      AND p_rtkk002 BETWEEN rtkk002 AND rtkk003
   IF l_cnt >= 1 THEN
      #此輸入值不可重疊其他筆資料的起迄區間！;請重新輸入！
      LET g_errno = 'art-00358'
   END IF
END FUNCTION]]>
  </point>
  <point name="construct.c.page1.rtki002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtki002  #顯示到畫面上
            NEXT FIELD rtki002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.rtkj002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkj002  #顯示到畫面上
            NEXT FIELD rtkj002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.rtkl002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkl002  #顯示到畫面上
            NEXT FIELD rtkl002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtkh001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtkh001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkh001  #顯示到畫面上
            NEXT FIELD rtkh001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtkh005" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtkg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkh005  #顯示到畫面上
            NEXT FIELD rtkh005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtkhcnfid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkhcnfid  #顯示到畫面上
            NEXT FIELD rtkhcnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtkhcrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkhcrtdp  #顯示到畫面上
            NEXT FIELD rtkhcrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtkhcrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkhcrtid  #顯示到畫面上
            NEXT FIELD rtkhcrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtkhmodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkhmodid  #顯示到畫面上
            NEXT FIELD rtkhmodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtkhowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkhowndp  #顯示到畫面上
            NEXT FIELD rtkhowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtkhownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkhownid  #顯示到畫面上
            NEXT FIELD rtkhownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtkhunit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = '2'
            CALL q_ooed004()                        #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkhunit  #顯示到畫面上
            NEXT FIELD rtkhunit                     #返回原欄位]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_rtkh_m.rtkhstus = 'N' THEN
      CALL cl_set_act_visible("modify,delete,modify_detail",TRUE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
   END IF]]>
  </point>
  <point name="global.argv" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_rtkh_m_o            type_g_rtkh_m
DEFINE g_rtki_d_o            type_g_rtki_d
DEFINE g_rtki2_d_o           type_g_rtki2_d
DEFINE g_rtki3_d_o           type_g_rtki3_d
DEFINE g_rtki4_d_o           type_g_rtki4_d
DEFINE tok                   base.StringTokenizer]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_errshow = 1]]>
  </point>
  <point name="input.a.page1.rtki001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_rtkh_m.rtkh001 IS NOT NULL AND g_rtki_d[g_detail_idx].rtki001 IS NOT NULL AND g_rtki_d[g_detail_idx].rtki002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtkh_m.rtkh001 != g_rtkh001_t OR g_rtki_d[g_detail_idx].rtki001 != g_rtki_d_t.rtki001 OR g_rtki_d[g_detail_idx].rtki002 != g_rtki_d_t.rtki002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtki_t WHERE "||"rtkient = '" ||g_enterprise|| "' AND "||"rtki001 = '"||g_rtkh_m.rtkh001 ||"' AND "|| "rtki002 = '"||g_rtki_d[g_detail_idx].rtki001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.rtki002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtki_d[l_ac].rtki002_desc = ' '
            DISPLAY BY NAME g_rtki_d[l_ac].rtki002_desc
            IF NOT cl_null(g_rtki_d[l_ac].rtki002) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtki_d[l_ac].rtki002 != g_rtki_d_o.rtki002 OR g_rtki_d_o.rtki002 IS NULL )) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtki_t WHERE "||"rtkient = '" ||g_enterprise|| "' AND "||"rtki001 = '"||g_rtkh_m.rtkh001 ||"' AND "|| "rtki002 = '"||g_rtki_d[l_ac].rtki002 ||"'",'std-00004',0) THEN
                     LET g_rtki_d[l_ac].rtki002 = g_rtki_d_o.rtki002
                     CALL artm740_rtki002_ref()
                     NEXT FIELD CURRENT
                  END IF
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_rtki_d[l_ac].rtki002
                  IF NOT cl_chk_exist("v_rtax001_1") THEN
                     LET g_rtki_d[l_ac].rtki002 = g_rtki_d_o.rtki002
                     CALL artm740_rtki002_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL artm740_rtki002_ref()
            LET g_rtki_d_o.rtki002 = g_rtki_d[l_ac].rtki002]]>
  </point>
  <point name="input.a.page1.rtki003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki_d[l_ac].rtki003) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.rtki004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki_d[l_ac].rtki004) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.rtki005" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki_d[l_ac].rtki005) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.rtki006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki_d[l_ac].rtki006) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.rtki007" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki_d[l_ac].rtki007) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtki2_d[l_ac].rtkj002_desc = ' '
            DISPLAY BY NAME g_rtki2_d[l_ac].rtkj002_desc
            IF NOT cl_null(g_rtki2_d[l_ac].rtkj002) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtki2_d[l_ac].rtkj002 != g_rtki2_d_o.rtkj002 OR g_rtki2_d_o.rtkj002 IS NULL )) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtkj_t WHERE "||"rtkjent = '" ||g_enterprise|| "' AND "||"rtkj001 = '"||g_rtkh_m.rtkh001 ||"' AND "|| "rtkj002 = '"||g_rtki2_d[l_ac].rtkj002 ||"'",'std-00004',0) THEN
                     LET g_rtki2_d[l_ac].rtkj002 = g_rtki2_d_o.rtkj002
                     CALL artm740_rtkj002_ref()
                     NEXT FIELD CURRENT
                  END IF
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_rtki2_d[l_ac].rtkj002
                  IF NOT cl_chk_exist("v_rtax001_1") THEN
                     LET g_rtki2_d[l_ac].rtkj002 = g_rtki2_d_o.rtkj002
                     CALL artm740_rtkj002_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL artm740_rtkj002_ref()
            LET g_rtki2_d_o.rtkj002 = g_rtki2_d[l_ac].rtkj002]]>
  </point>
  <point name="input.a.page2.rtkj101" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj101) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj102" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj102) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj103" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj103) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj104" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj104) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj105" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj105) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj106" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj106) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj107" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj107) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj108" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj108) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj109" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj109) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj110" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj110) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj111" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj111) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj112" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj112) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj113" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj113) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj114" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj114) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj115" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj115) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj116" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj116) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj117" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj117) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj118" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj118) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj119" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj119) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj120" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj120) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj121" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj121) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj122" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj122) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj123" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj123) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj124" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj124) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj125" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj125) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj126" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj126) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj127" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj127) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj128" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj128) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj129" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj129) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj130" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj130) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj131" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj131) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj132" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj132) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj133" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj133) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj134" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj134) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj135" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj135) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj136" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj136) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj137" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj137) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj138" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj138) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj139" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj139) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj140" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj140) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj141" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj141) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj142" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj142) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj143" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj143) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj144" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj144) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj145" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj145) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj146" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj146) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj147" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj147) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj148" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj148) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj149" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj149) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj150" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj150) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj151" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj151) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.rtkj152" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki2_d[l_ac].rtkj152) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page3.rtkl002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtki3_d[l_ac].rtkl002_desc = ' '
            DISPLAY BY NAME g_rtki3_d[l_ac].rtkl002_desc
            IF NOT cl_null(g_rtki3_d[l_ac].rtkl002) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtki3_d[l_ac].rtkl002 != g_rtki3_d_o.rtkl002 OR g_rtki3_d_o.rtkl002 IS NULL )) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtkl_t WHERE "||"rtklent = '" ||g_enterprise|| "' AND "||"rtkl001 = '"||g_rtkh_m.rtkh001 ||"' AND "|| "rtkl002 = '"||g_rtki3_d[l_ac].rtkl002 ||"'",'std-00004',0) THEN
                     LET g_rtki3_d[l_ac].rtkl002 = g_rtki3_d_o.rtkl002
                     CALL artm740_rtkl002_ref()
                     NEXT FIELD CURRENT
                  END IF
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_rtki3_d[l_ac].rtkl002
                  IF NOT cl_chk_exist("v_rtax001_1") THEN
                     LET g_rtki3_d[l_ac].rtkl002 = g_rtki3_d_o.rtkl002
                     CALL artm740_rtkl002_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL artm740_rtkl002_ref()
            LET g_rtki3_d_o.rtkl002 = g_rtki3_d[l_ac].rtkl002]]>
  </point>
  <point name="input.a.page3.rtkl101" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki3_d[l_ac].rtkl101) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page3.rtkl102" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki3_d[l_ac].rtkl102) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page3.rtkl103" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki3_d[l_ac].rtkl103) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page3.rtkl104" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki3_d[l_ac].rtkl104) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page3.rtkl105" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki3_d[l_ac].rtkl105) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page3.rtkl106" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki3_d[l_ac].rtkl106) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page3.rtkl107" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki3_d[l_ac].rtkl107) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page4.rtkk002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki4_d[l_ac].rtkk002) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtki4_d[l_ac].rtkk002 != g_rtki4_d_o.rtkk002 OR g_rtki4_d_o.rtkk002 IS NULL )) THEN
                  IF g_rtki4_d[l_ac].rtkk002 >= g_rtki4_d[l_ac].rtkk003 THEN
                     #週驅勢參數起 不可大於等於 週驅勢參數迄！
                     CALL cl_err('','art-00360',1)
                     LET g_rtki4_d[l_ac].rtkk002 = g_rtki4_d_o.rtkk002
                     NEXT FIELD CURRENT
                  END IF
                  CALL artm740_chk_rtkk(g_rtki4_d[l_ac].rtkk002)
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err('',g_errno,1)
                     LET g_rtki4_d[l_ac].rtkk002 = g_rtki4_d_o.rtkk002
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_rtki4_d_o.rtkk002 = g_rtki4_d[l_ac].rtkk002]]>
  </point>
  <point name="input.a.page4.rtkk003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki4_d[l_ac].rtkk003) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtki4_d[l_ac].rtkk003 != g_rtki4_d_o.rtkk003 OR g_rtki4_d_o.rtkk003 IS NULL )) THEN
                  IF g_rtki4_d[l_ac].rtkk002 >= g_rtki4_d[l_ac].rtkk003 THEN
                     #週驅勢參數迄 不可小於等於 週驅勢參數起！
                     CALL cl_err('','art-00359',1)
                     LET g_rtki4_d[l_ac].rtkk003 = g_rtki4_d_o.rtkk003
                     NEXT FIELD CURRENT
                  END IF
                  CALL artm740_chk_rtkk(g_rtki4_d[l_ac].rtkk003)
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err('',g_errno,1)
                     LET g_rtki4_d[l_ac].rtkk003 = g_rtki4_d_o.rtkk003
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_rtki4_d_o.rtkk003 = g_rtki4_d[l_ac].rtkk003]]>
  </point>
  <point name="input.a.page4.rtkk004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtki4_d[l_ac].rtkk004) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.rtkh001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_rtkh_m.rtkh001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_rtkh_m.rtkh001 != g_rtkh001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtkh_t WHERE "||"rtkhent = '" ||g_enterprise|| "' AND "||"rtkh001 = '"||g_rtkh_m.rtkh001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.rtkh003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtkh_m.rtkh003) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.rtkh004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtkh_m.rtkh004) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.rtkh005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtkh_m.rtkh005_desc = ' '
            DISPLAY BY NAME g_rtkh_m.rtkh005_desc
            IF NOT cl_null(g_rtkh_m.rtkh005) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtkh_m.rtkh005 != g_rtkh_m_o.rtkh005 OR g_rtkh_m_o.rtkh005 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_rtkh_m.rtkh005
                  IF NOT cl_chk_exist("v_rtkg001") THEN
                     LET g_rtkh_m.rtkh005 = g_rtkh_m_o.rtkh005
                     CALL artm740_rtkh005_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL artm740_rtkh005_ref()
            LET g_rtkh_m_o.rtkh005 = g_rtkh_m.rtkh005]]>
  </point>
  <point name="input.a.rtkh012" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtkh_m.rtkh012) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.rtkh013" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtkh_m.rtkh013) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.rtkh014" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtkh_m.rtkh014) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.rtkhunit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtkh_m.rtkhunit_desc = ' '
            DISPLAY BY NAME g_rtkh_m.rtkhunit_desc
            IF NOT cl_null(g_rtkh_m.rtkhunit) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtkh_m.rtkhunit != g_rtkh_m_o.rtkhunit OR g_rtkh_m_o.rtkhunit IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_rtkh_m.rtkhunit
                  LET g_chkparam.arg2 = '2'
                  LET g_chkparam.arg3 = g_site
                  IF NOT cl_chk_exist("v_ooed004") THEN
                     LET g_rtkh_m.rtkhunit = g_rtkh_m_o.rtkhunit
                     CALL artm740_rtkhunit_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL artm740_rtkhunit_ref()]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtki_d[l_ac].rtkiunit = g_rtkh_m.rtkhunit]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtki_d_o.* = g_rtki_d[l_ac].*]]>
  </point>
  <point name="input.body2.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtki2_d[l_ac].rtkjunit = g_rtkh_m.rtkhunit]]>
  </point>
  <point name="input.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtki2_d_o.* = g_rtki2_d[l_ac].*]]>
  </point>
  <point name="input.body3.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtki3_d[l_ac].rtklunit = g_rtkh_m.rtkhunit]]>
  </point>
  <point name="input.body3.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtki3_d_o.* = g_rtki3_d[l_ac].*]]>
  </point>
  <point name="input.body4.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET l_max_rtkk003 = ''
            SELECT MAX(rtkk003)+0.01 INTO l_max_rtkk003
              FROM rtkk_t
             WHERE rtkkent = g_enterprise
               AND rtkk001 = g_rtkh_m.rtkh001
            IF cl_null(l_max_rtkk003) THEN
               LET g_rtki4_d[l_ac].rtkk002 = 0.01
            ELSE
               LET g_rtki4_d[l_ac].rtkk002 = l_max_rtkk003
            END IF
            LET g_rtki4_d[l_ac].rtkkunit = g_rtkh_m.rtkhunit
            LET g_rtki4_d_o.* = g_rtki4_d[l_ac].*]]>
  </point>
  <point name="input.body4.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_rtki4_d_o.* = g_rtki4_d[l_ac].*]]>
  </point>
  <point name="input.c.page1.rtki002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF l_cmd = 'u' THEN
               #此段落由子樣板a07產生            
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_rtki_d[l_ac].rtki002  #給予default值
               
               CALL q_rtax001_6()                                #呼叫開窗
               LET g_rtki_d[l_ac].rtki002 = g_qryparam.return1       
               DISPLAY g_rtki_d[l_ac].rtki002 TO rtki002
               NEXT FIELD rtki002                                #返回原欄位
            ELSE
               CALL artm740_ins_rtki()
            END IF]]>
  </point>
  <point name="input.c.page2.rtkj002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF l_cmd = 'u' THEN
               #此段落由子樣板a07產生            
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_rtki2_d[l_ac].rtkj002 #給予default值
               
               CALL q_rtax001_6()                                #呼叫開窗
               LET g_rtki2_d[l_ac].rtkj002 = g_qryparam.return1       
               DISPLAY g_rtki2_d[l_ac].rtkj002 TO rtkj002
               NEXT FIELD rtkj002                                #返回原欄位
            ELSE
               CALL artm740_ins_rtkj()
            END IF]]>
  </point>
  <point name="input.c.page3.rtkl002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF l_cmd = 'u' THEN
               #此段落由子樣板a07產生            
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_rtki3_d[l_ac].rtkl002 #給予default值
               
               CALL q_rtax001_6()                                #呼叫開窗
               LET g_rtki2_d[l_ac].rtkj002 = g_qryparam.return1       
               DISPLAY g_rtki3_d[l_ac].rtkl002 TO rtkl002
               NEXT FIELD rtkl002                                #返回原欄位
            ELSE
               CALL artm740_ins_rtkl()
            END IF]]>
  </point>
  <point name="input.c.rtkh005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtkh_m.rtkh005             #給予default值
            
            CALL q_rtkg001()                                #呼叫開窗
            LET g_rtkh_m.rtkh005 = g_qryparam.return1   
            DISPLAY g_rtkh_m.rtkh005 TO rtkh005 
            CALL artm740_rtkh005_ref()
            NEXT FIELD rtkh005                          #返回原欄位]]>
  </point>
  <point name="input.c.rtkhunit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtkh_m.rtkhunit     #給予default值
            
            #給予arg
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = '2'
            CALL q_ooed004()                                #呼叫開窗
            LET g_rtkh_m.rtkhunit = g_qryparam.return1     
            DISPLAY g_rtkh_m.rtkhunit TO rtkhunit 
            CALL artm740_rtkhunit_ref()
            NEXT FIELD rtkhunit                          #返回原欄位]]>
  </point>
  <point name="input.d.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_max_rtkk003         LIKE rtkk_t.rtkk002]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF p_cmd = 'a' THEN
               NEXT FIELD rtkhunit
            END IF]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rtkh_m.rtkh001)  THEN
               CALL n_rtkhl(g_rtkh_m.rtkh001)
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_rtkh_m.rtkh001
               CALL ap_ref_array2(g_ref_fields," SELECT rtkhl003,rtkhl004 FROM rtkhl_t WHERE rtkhlent = '"||g_enterprise||"' AND rtkhl001 = ? AND rtkhl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_rtkh_m.rtkhl003 = g_rtn_fields[1]
               LET g_rtkh_m.rtkhl004 = g_rtn_fields[2]
               DISPLAY BY NAME g_rtkh_m.rtkhl003,g_rtkh_m.rtkhl004
            END IF]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_rtkh_m.rtkhunit = g_site]]>
  </point>
  <point name="insert_b.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_rtki_d[g_detail_idx].rtkiunit = g_site
      LET g_rtki_d[g_detail_idx].rtki003  = 1
      LET g_rtki_d[g_detail_idx].rtki004  = 1
      LET g_rtki_d[g_detail_idx].rtki005  = 1
      LET g_rtki_d[g_detail_idx].rtki006  = 1
      LET g_rtki_d[g_detail_idx].rtki007  = 1]]>
  </point>
  <point name="insert_b.before_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_rtki2_d[g_detail_idx].rtkjunit = g_site
      LET g_rtki2_d[g_detail_idx].rtkj101  = 1
      LET g_rtki2_d[g_detail_idx].rtkj102  = 1
      LET g_rtki2_d[g_detail_idx].rtkj103  = 1
      LET g_rtki2_d[g_detail_idx].rtkj104  = 1
      LET g_rtki2_d[g_detail_idx].rtkj105  = 1
      LET g_rtki2_d[g_detail_idx].rtkj106  = 1
      LET g_rtki2_d[g_detail_idx].rtkj107  = 1
      LET g_rtki2_d[g_detail_idx].rtkj108  = 1
      LET g_rtki2_d[g_detail_idx].rtkj109  = 1
      LET g_rtki2_d[g_detail_idx].rtkj110  = 1
      LET g_rtki2_d[g_detail_idx].rtkj111  = 1
      LET g_rtki2_d[g_detail_idx].rtkj112  = 1
      LET g_rtki2_d[g_detail_idx].rtkj113  = 1
      LET g_rtki2_d[g_detail_idx].rtkj114  = 1
      LET g_rtki2_d[g_detail_idx].rtkj115  = 1
      LET g_rtki2_d[g_detail_idx].rtkj116  = 1
      LET g_rtki2_d[g_detail_idx].rtkj117  = 1
      LET g_rtki2_d[g_detail_idx].rtkj118  = 1
      LET g_rtki2_d[g_detail_idx].rtkj119  = 1
      LET g_rtki2_d[g_detail_idx].rtkj120  = 1
      LET g_rtki2_d[g_detail_idx].rtkj121  = 1
      LET g_rtki2_d[g_detail_idx].rtkj122  = 1
      LET g_rtki2_d[g_detail_idx].rtkj123  = 1
      LET g_rtki2_d[g_detail_idx].rtkj124  = 1
      LET g_rtki2_d[g_detail_idx].rtkj125  = 1
      LET g_rtki2_d[g_detail_idx].rtkj126  = 1
      LET g_rtki2_d[g_detail_idx].rtkj127  = 1
      LET g_rtki2_d[g_detail_idx].rtkj128  = 1
      LET g_rtki2_d[g_detail_idx].rtkj129  = 1
      LET g_rtki2_d[g_detail_idx].rtkj130  = 1
      LET g_rtki2_d[g_detail_idx].rtkj131  = 1
      LET g_rtki2_d[g_detail_idx].rtkj132  = 1
      LET g_rtki2_d[g_detail_idx].rtkj133  = 1
      LET g_rtki2_d[g_detail_idx].rtkj134  = 1
      LET g_rtki2_d[g_detail_idx].rtkj135  = 1
      LET g_rtki2_d[g_detail_idx].rtkj136  = 1
      LET g_rtki2_d[g_detail_idx].rtkj137  = 1
      LET g_rtki2_d[g_detail_idx].rtkj138  = 1
      LET g_rtki2_d[g_detail_idx].rtkj139  = 1
      LET g_rtki2_d[g_detail_idx].rtkj140  = 1
      LET g_rtki2_d[g_detail_idx].rtkj141  = 1
      LET g_rtki2_d[g_detail_idx].rtkj142  = 1
      LET g_rtki2_d[g_detail_idx].rtkj143  = 1
      LET g_rtki2_d[g_detail_idx].rtkj144  = 1
      LET g_rtki2_d[g_detail_idx].rtkj145  = 1
      LET g_rtki2_d[g_detail_idx].rtkj146  = 1
      LET g_rtki2_d[g_detail_idx].rtkj147  = 1
      LET g_rtki2_d[g_detail_idx].rtkj148  = 1
      LET g_rtki2_d[g_detail_idx].rtkj149  = 1
      LET g_rtki2_d[g_detail_idx].rtkj150  = 1
      LET g_rtki2_d[g_detail_idx].rtkj151  = 1
      LET g_rtki2_d[g_detail_idx].rtkj152  = 1]]>
  </point>
  <point name="insert_b.before_insert3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_rtki3_d[g_detail_idx].rtklunit = g_site
      LET g_rtki3_d[g_detail_idx].rtkl101  = 1
      LET g_rtki3_d[g_detail_idx].rtkl102  = 1
      LET g_rtki3_d[g_detail_idx].rtkl103  = 1
      LET g_rtki3_d[g_detail_idx].rtkl104  = 1
      LET g_rtki3_d[g_detail_idx].rtkl105  = 1
      LET g_rtki3_d[g_detail_idx].rtkl106  = 1
      LET g_rtki3_d[g_detail_idx].rtkl107  = 1]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_rtkh_m.rtkhstus = 'N'
   LET g_rtkh_m.rtkhunit = g_site]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("rtkhunit",TRUE)]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("rtki002",TRUE)
   CALL cl_set_comp_entry("rtkj002",TRUE)
   CALL cl_set_comp_entry("rtkl002",TRUE)]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("rtkhunit",FALSE)]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("rtki002",FALSE)
      CALL cl_set_comp_entry("rtkj002",FALSE)
      CALL cl_set_comp_entry("rtkl002",FALSE)
   END IF]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL artm740_rtki002_ref()]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL artm740_rtkj002_ref()]]>
  </point>
  <point name="show.body3.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL artm740_rtkl002_ref()]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkh_m.rtkh001
   CALL ap_ref_array2(g_ref_fields," SELECT rtkhl003 FROM rtkhl_t WHERE rtkhlent = '"||g_enterprise||"' AND rtkhl001 = ? AND rtkhl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_rtkh_m.rtkhl003 = g_rtn_fields[1] 
   DISPLAY g_rtkh_m.rtkhl003 TO rtkhl003
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkh_m.rtkh001
   CALL ap_ref_array2(g_ref_fields," SELECT rtkhl004 FROM rtkhl_t WHERE rtkhlent = '"||g_enterprise||"' AND rtkhl001 = ? AND rtkhl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_rtkh_m.rtkhl004 = g_rtn_fields[1] 
   DISPLAY g_rtkh_m.rtkhl004 TO rtkhl004
   
   CALL artm740_rtkhunit_ref()
   CALL artm740_rtkh005_ref()

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkh_m.rtkhownid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_rtkh_m.rtkhownid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtkh_m.rtkhownid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkh_m.rtkhowndp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtkh_m.rtkhowndp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtkh_m.rtkhowndp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkh_m.rtkhcrtid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_rtkh_m.rtkhcrtid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtkh_m.rtkhcrtid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkh_m.rtkhcrtdp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtkh_m.rtkhcrtdp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtkh_m.rtkhcrtdp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkh_m.rtkhmodid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_rtkh_m.rtkhmodid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtkh_m.rtkhmodid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkh_m.rtkhcnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_rtkh_m.rtkhcnfid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtkh_m.rtkhcnfid_desc
]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_showmsg_init()
   CALL s_transaction_begin()
   OPEN artm740_cl USING g_enterprise,g_rtkh_m.rtkh001
 
   IF STATUS THEN
      CALL cl_err("OPEN artm740_cl:", STATUS, 1)
      CLOSE artm740_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #未確認改確認(N->Y)
   IF lc_state = 'Y' AND g_rtkh_m.rtkhstus = 'N' THEN
      CALL s_artm740_conf_chk(g_rtkh_m.rtkh001) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         CALL cl_showmsg()
         RETURN
      ELSE
         IF cl_ask_confirm('aim-00108') THEN
            CALL s_artm740_conf_upd(g_rtkh_m.rtkh001) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               CALL cl_showmsg()
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         ELSE
            CALL s_transaction_end('Y','0')
            RETURN
         END IF
      END IF
   END IF
   #確認改未確認(Y->N)
   IF lc_state = 'N' AND g_rtkh_m.rtkhstus = 'Y' THEN
      CALL s_artm740_unconf_chk(g_rtkh_m.rtkh001) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         CALL cl_showmsg()
         RETURN
      ELSE
         IF cl_ask_confirm('aim-00110') THEN
            CALL s_artm740_unconf_upd(g_rtkh_m.rtkh001) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               CALL cl_showmsg()
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         ELSE
            CALL s_transaction_end('Y','0')
            RETURN
         END IF
      END IF
   END IF
   #未確認改無效(N->X)
   IF lc_state = 'X' AND g_rtkh_m.rtkhstus = 'N' THEN
      CALL s_artm740_void_chk(g_rtkh_m.rtkh001) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         CALL cl_showmsg()
         RETURN
      ELSE
         IF cl_ask_confirm('art-00039') THEN
            CALL s_artm740_void_upd(g_rtkh_m.rtkh001) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               CALL cl_showmsg()
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         ELSE
            CALL s_transaction_end('Y','0')
            RETURN
         END IF
      END IF
   END IF
   #無效改未確認(X->N)
   IF lc_state = 'N' AND g_rtkh_m.rtkhstus = 'X' THEN
      CALL s_artm740_valid_chk(g_rtkh_m.rtkh001) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         CALL cl_showmsg()
         RETURN
      ELSE
         IF cl_ask_confirm('art-00038') THEN
            CALL s_artm740_valid_upd(g_rtkh_m.rtkh001) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               CALL cl_showmsg()
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         ELSE
            CALL s_transaction_end('Y','0')
            RETURN
         END IF
      END IF
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_act_visible("open,valid,void",TRUE)
      CASE g_rtkh_m.rtkhstus
         WHEN "N"
            CALL cl_set_act_visible("open",FALSE)

         WHEN "X"
            CALL cl_set_act_visible("valid,void",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("valid,void",FALSE)
      END CASE ]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5 ]]>
  </point>
  <section id="artm740.b_fill" ver="5" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION artm740_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_rtki_d.clear()    #g_rtki_d 單頭及單身 
   CALL g_rtki2_d.clear()
   CALL g_rtki3_d.clear()
   CALL g_rtki4_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF artm740_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE rtkiunit,rtki002,'',rtki003,rtki004,rtki005,rtki006,rtki007 FROM rtki_t", 
             
                  " INNER JOIN rtkh_t ON rtkh001 = rtki001 ",
 
                  #"",
                  
                  "",
                  " WHERE rtkient=? AND rtki001=?"
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY rtki_t.rtki002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      PREPARE artm740_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR artm740_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_rtkh_m.rtkh001
 
                                               
      FOREACH b_fill_cs INTO g_rtki_d[l_ac].rtkiunit,g_rtki_d[l_ac].rtki002,g_rtki_d[l_ac].rtki002_desc, 
          g_rtki_d[l_ac].rtki003,g_rtki_d[l_ac].rtki004,g_rtki_d[l_ac].rtki005,g_rtki_d[l_ac].rtki006, 
          g_rtki_d[l_ac].rtki007
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF artm740_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE rtkjunit,rtkj002,'',rtkj101,rtkj102,rtkj103,rtkj104,rtkj105,rtkj106, 
          rtkj107,rtkj108,rtkj109,rtkj110,rtkj111,rtkj112,rtkj113,rtkj114,rtkj115,rtkj116,rtkj117,rtkj118, 
          rtkj119,rtkj120,rtkj121,rtkj122,rtkj123,rtkj124,rtkj125,rtkj126,rtkj127,rtkj128,rtkj129,rtkj130, 
          rtkj131,rtkj132,rtkj133,rtkj134,rtkj135,rtkj136,rtkj137,rtkj138,rtkj139,rtkj140,rtkj141,rtkj142, 
          rtkj143,rtkj144,rtkj145,rtkj146,rtkj147,rtkj148,rtkj149,rtkj150,rtkj151,rtkj152 FROM rtkj_t", 
             
                  " INNER JOIN rtkh_t ON rtkh001 = rtkj001 ",
 
                  "",
                  
                  " WHERE rtkjent=? AND rtkj001=?"   
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY rtkj_t.rtkj002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      PREPARE artm740_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR artm740_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_rtkh_m.rtkh001
 
                                               
      FOREACH b_fill_cs2 INTO g_rtki2_d[l_ac].rtkjunit,g_rtki2_d[l_ac].rtkj002,g_rtki2_d[l_ac].rtkj002_desc, 
          g_rtki2_d[l_ac].rtkj101,g_rtki2_d[l_ac].rtkj102,g_rtki2_d[l_ac].rtkj103,g_rtki2_d[l_ac].rtkj104, 
          g_rtki2_d[l_ac].rtkj105,g_rtki2_d[l_ac].rtkj106,g_rtki2_d[l_ac].rtkj107,g_rtki2_d[l_ac].rtkj108, 
          g_rtki2_d[l_ac].rtkj109,g_rtki2_d[l_ac].rtkj110,g_rtki2_d[l_ac].rtkj111,g_rtki2_d[l_ac].rtkj112, 
          g_rtki2_d[l_ac].rtkj113,g_rtki2_d[l_ac].rtkj114,g_rtki2_d[l_ac].rtkj115,g_rtki2_d[l_ac].rtkj116, 
          g_rtki2_d[l_ac].rtkj117,g_rtki2_d[l_ac].rtkj118,g_rtki2_d[l_ac].rtkj119,g_rtki2_d[l_ac].rtkj120, 
          g_rtki2_d[l_ac].rtkj121,g_rtki2_d[l_ac].rtkj122,g_rtki2_d[l_ac].rtkj123,g_rtki2_d[l_ac].rtkj124, 
          g_rtki2_d[l_ac].rtkj125,g_rtki2_d[l_ac].rtkj126,g_rtki2_d[l_ac].rtkj127,g_rtki2_d[l_ac].rtkj128, 
          g_rtki2_d[l_ac].rtkj129,g_rtki2_d[l_ac].rtkj130,g_rtki2_d[l_ac].rtkj131,g_rtki2_d[l_ac].rtkj132, 
          g_rtki2_d[l_ac].rtkj133,g_rtki2_d[l_ac].rtkj134,g_rtki2_d[l_ac].rtkj135,g_rtki2_d[l_ac].rtkj136, 
          g_rtki2_d[l_ac].rtkj137,g_rtki2_d[l_ac].rtkj138,g_rtki2_d[l_ac].rtkj139,g_rtki2_d[l_ac].rtkj140, 
          g_rtki2_d[l_ac].rtkj141,g_rtki2_d[l_ac].rtkj142,g_rtki2_d[l_ac].rtkj143,g_rtki2_d[l_ac].rtkj144, 
          g_rtki2_d[l_ac].rtkj145,g_rtki2_d[l_ac].rtkj146,g_rtki2_d[l_ac].rtkj147,g_rtki2_d[l_ac].rtkj148, 
          g_rtki2_d[l_ac].rtkj149,g_rtki2_d[l_ac].rtkj150,g_rtki2_d[l_ac].rtkj151,g_rtki2_d[l_ac].rtkj152 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF artm740_fill_chk(3) THEN
      LET g_sql = "SELECT  UNIQUE rtklunit,rtkl002,'',rtkl101,rtkl102,rtkl103,rtkl104,rtkl105,rtkl106, 
          rtkl107 FROM rtkl_t",   
                  " INNER JOIN rtkh_t ON rtkh001 = rtkl001 ",
 
                  "",
                  
                  " WHERE rtklent=? AND rtkl001=?"   
      #add-point:b_fill段sql_before
      {<point name="b_fill.body3.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table3) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY rtkl_t.rtkl002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql3"/>}
      #end add-point
      
      PREPARE artm740_pb3 FROM g_sql
      DECLARE b_fill_cs3 CURSOR FOR artm740_pb3
      
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_rtkh_m.rtkh001
 
                                               
      FOREACH b_fill_cs3 INTO g_rtki3_d[l_ac].rtklunit,g_rtki3_d[l_ac].rtkl002,g_rtki3_d[l_ac].rtkl002_desc, 
          g_rtki3_d[l_ac].rtkl101,g_rtki3_d[l_ac].rtkl102,g_rtki3_d[l_ac].rtkl103,g_rtki3_d[l_ac].rtkl104, 
          g_rtki3_d[l_ac].rtkl105,g_rtki3_d[l_ac].rtkl106,g_rtki3_d[l_ac].rtkl107
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF artm740_fill_chk(4) THEN
      LET g_sql = "SELECT  UNIQUE rtkkunit,rtkk002,rtkk003,rtkk004 FROM rtkk_t",   
                  " INNER JOIN rtkh_t ON rtkh001 = rtkk001 ",
 
                  "",
                  
                  " WHERE rtkkent=? AND rtkk001=?"   
      #add-point:b_fill段sql_before
      {<point name="b_fill.body4.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table4) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY rtkk_t.rtkk002,rtkk_t.rtkk003"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql4"/>}
      #end add-point
      
      PREPARE artm740_pb4 FROM g_sql
      DECLARE b_fill_cs4 CURSOR FOR artm740_pb4
      
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_enterprise,g_rtkh_m.rtkh001
 
                                               
      FOREACH b_fill_cs4 INTO g_rtki4_d[l_ac].rtkkunit,g_rtki4_d[l_ac].rtkk002,g_rtki4_d[l_ac].rtkk003, 
          g_rtki4_d[l_ac].rtkk004
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_rtki_d.deleteElement(g_rtki_d.getLength())
   CALL g_rtki2_d.deleteElement(g_rtki2_d.getLength())
   CALL g_rtki3_d.deleteElement(g_rtki3_d.getLength())
   CALL g_rtki4_d.deleteElement(g_rtki4_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE artm740_pb
   FREE artm740_pb2
 
   FREE artm740_pb3
 
   FREE artm740_pb4
 
 
   
END FUNCTION
]]>
  </section>
  <section id="artm740.b_fill2" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION artm740_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL artm740_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="artm740.browser_fill" ver="11" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION artm740_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_rtkh_m.* TO NULL
   CALL g_rtki_d.clear()        
   CALL g_rtki2_d.clear() 
   CALL g_rtki3_d.clear() 
   CALL g_rtki4_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "rtkh001"
 
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE rtkh001 ",
 
                        " FROM rtkh_t ",
                              " ",
                              " LEFT JOIN rtki_t ON rtkient = rtkhent AND rtkh001 = rtki001 ",
                              " LEFT JOIN rtkj_t ON rtkjent = rtkhent AND rtkh001 = rtkj001", 
 
                              " LEFT JOIN rtkl_t ON rtklent = rtkhent AND rtkh001 = rtkl001", 
 
                              " LEFT JOIN rtkk_t ON rtkkent = rtkhent AND rtkh001 = rtkk001", 
 
 
 
                              " LEFT JOIN rtkhl_t ON rtkh001 = rtkhl001 AND rtkhl002 = '",g_lang,"' ", 
                              " ", 
                       " WHERE rtkhent = '" ||g_enterprise|| "' AND rtkient = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("rtkh_t")
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE rtkh001 ",
 
                        " FROM rtkh_t ", 
                              " ",
                              " LEFT JOIN rtkhl_t ON rtkh001 = rtkhl001 AND rtkhl002 = '",g_lang,"' ",
                        "WHERE rtkhent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("rtkh_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
   
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P" OR
      ps_page_action = "N" OR
      ps_page_action = "L" THEN
      LET g_page_action = ps_page_action
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
         END IF
         
   END CASE
  
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照rtkhunit,'',rtkh001,'','' Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT rtkhstus,rtkhunit,'',rtkh001,'','',DENSE_RANK() OVER(ORDER BY rtkh001 ", 
          g_order,") AS RANK ",
                        " FROM rtkh_t ",
                              " ",
                              " LEFT JOIN rtki_t ON rtkient = rtkhent AND rtkh001 = rtki001 ",
                              " LEFT JOIN rtkj_t ON rtkjent = rtkhent AND rtkh001 = rtkj001",
 
                              " LEFT JOIN rtkl_t ON rtklent = rtkhent AND rtkh001 = rtkl001",
 
                              " LEFT JOIN rtkk_t ON rtkkent = rtkhent AND rtkh001 = rtkk001",
 
 
 
                              " LEFT JOIN rtkhl_t ON rtkh001 = rtkhl001 AND rtkhl002 = '",g_lang,"' ",
                              " ",
                       " ",
                       " WHERE rtkhent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2, cl_sql_add_filter("rtkh_t")
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT rtkhstus,rtkhunit,'',rtkh001,'','',DENSE_RANK() OVER(ORDER BY rtkh001 ", 
          g_order,") AS RANK ",
                       " FROM rtkh_t ",
                            "  ",
                            "  LEFT JOIN rtkhl_t ON rtkh001 = rtkhl001 AND rtkhl002 = '",g_lang,"' ",
                       " WHERE rtkhent = '" ||g_enterprise|| "' AND ", g_wc, cl_sql_add_filter("rtkh_t")
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT rtkhstus,rtkhunit,'',rtkh001,'','' FROM (",l_sql_rank,") WHERE ",
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
               
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
               
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_rtkhunit,g_browser[g_cnt].b_rtkhunit_desc, 
       g_browser[g_cnt].b_rtkh001,g_browser[g_cnt].b_rtkh001_desc,g_browser[g_cnt].b_rtkh001_desc_desc 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_rtkhunit
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_rtkhunit_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_rtkhunit_desc
 
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_rtkh001
      CALL ap_ref_array2(g_ref_fields,"SELECT rtkhl003 FROM rtkhl_t WHERE rtkhlent='"||g_enterprise||"' AND rtkhl001=? AND rtkhl002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_rtkh001_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_rtkh001_desc
 
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_rtkh001
      CALL ap_ref_array2(g_ref_fields,"SELECT rtkhl004 FROM rtkhl_t WHERE rtkhlent='"||g_enterprise||"' AND rtkhl001=? AND rtkhl002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_rtkh001_desc_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_rtkh001_desc_desc
 
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/void.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/valid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="artm740.browser_search" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION artm740_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY rtkh001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL artm740_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="artm740.construct" ver="5" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION artm740_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_rtkh_m.* TO NULL
   CALL g_rtki_d.clear()        
   CALL g_rtki2_d.clear() 
   CALL g_rtki3_d.clear() 
   CALL g_rtki4_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON rtkhunit,rtkh001,rtkhl003,rtkhl004,rtkhstus,rtkh002,rtkh003,rtkh004, 
          rtkh005,rtkh006,rtkh007,rtkh008,rtkh009,rtkh010,rtkh011,rtkh012,rtkh013,rtkh014,rtkhownid, 
          rtkhowndp,rtkhcrtid,rtkhcrtdp,rtkhcrtdt,rtkhmodid,rtkhcnfid,rtkhmoddt,rtkhcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<rtkhownid>>----
         #ON ACTION controlp INFIELD rtkhownid
         #   CALL q_common('rtkh_t','rtkhownid',TRUE,FALSE,g_rtkh_m.rtkhownid) RETURNING ls_return
         #   DISPLAY ls_return TO rtkhownid
         #   NEXT FIELD rtkhownid  
         #
         ##----<<rtkhowndp>>----
         #ON ACTION controlp INFIELD rtkhowndp
         #   CALL q_common('rtkh_t','rtkhowndp',TRUE,FALSE,g_rtkh_m.rtkhowndp) RETURNING ls_return
         #   DISPLAY ls_return TO rtkhowndp
         #   NEXT FIELD rtkhowndp
         #
         ##----<<rtkhcrtid>>----
         #ON ACTION controlp INFIELD rtkhcrtid
         #   CALL q_common('rtkh_t','rtkhcrtid',TRUE,FALSE,g_rtkh_m.rtkhcrtid) RETURNING ls_return
         #   DISPLAY ls_return TO rtkhcrtid
         #   NEXT FIELD rtkhcrtid
         #
         ##----<<rtkhcrtdp>>----
         #ON ACTION controlp INFIELD rtkhcrtdp
         #   CALL q_common('rtkh_t','rtkhcrtdp',TRUE,FALSE,g_rtkh_m.rtkhcrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO rtkhcrtdp
         #   NEXT FIELD rtkhcrtdp
         #
         ##----<<rtkhmodid>>----
         #ON ACTION controlp INFIELD rtkhmodid
         #   CALL q_common('rtkh_t','rtkhmodid',TRUE,FALSE,g_rtkh_m.rtkhmodid) RETURNING ls_return
         #   DISPLAY ls_return TO rtkhmodid
         #   NEXT FIELD rtkhmodid
         #
         ##----<<rtkhcnfid>>----
         #ON ACTION controlp INFIELD rtkhcnfid
         #   CALL q_common('rtkh_t','rtkhcnfid',TRUE,FALSE,g_rtkh_m.rtkhcnfid) RETURNING ls_return
         #   DISPLAY ls_return TO rtkhcnfid
         #   NEXT FIELD rtkhcnfid
         #
         ##----<<rtkhpstid>>----
         ##ON ACTION controlp INFIELD rtkhpstid
         ##   CALL q_common('rtkh_t','rtkhpstid',TRUE,FALSE,g_rtkh_m.rtkhpstid) RETURNING ls_return
         ##   DISPLAY ls_return TO rtkhpstid
         ##   NEXT FIELD rtkhpstid
         
         ##----<<rtkhcrtdt>>----
         AFTER FIELD rtkhcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtkhmoddt>>----
         AFTER FIELD rtkhmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtkhcnfdt>>----
         AFTER FIELD rtkhcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtkhpstdt>>----
         #AFTER FIELD rtkhpstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
         #---------------------------<  Master  >---------------------------
         #----<<rtkhunit>>----
         #Ctrlp:construct.c.rtkhunit
         ON ACTION controlp INFIELD rtkhunit
            #add-point:ON ACTION controlp INFIELD rtkhunit
            {<point name="construct.c.rtkhunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhunit
            #add-point:BEFORE FIELD rtkhunit
            {<point name="construct.b.rtkhunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkhunit
            
            #add-point:AFTER FIELD rtkhunit
            {<point name="construct.a.rtkhunit" />}
            #END add-point
            
 
         #----<<rtkhunit_desc>>----
         #----<<rtkh001>>----
         #Ctrlp:construct.c.rtkh001
         ON ACTION controlp INFIELD rtkh001
            #add-point:ON ACTION controlp INFIELD rtkh001
            {<point name="construct.c.rtkh001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh001
            #add-point:BEFORE FIELD rtkh001
            {<point name="construct.b.rtkh001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh001
            
            #add-point:AFTER FIELD rtkh001
            {<point name="construct.a.rtkh001" />}
            #END add-point
            
 
         #----<<rtkhl003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhl003
            #add-point:BEFORE FIELD rtkhl003
            {<point name="construct.b.rtkhl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkhl003
            
            #add-point:AFTER FIELD rtkhl003
            {<point name="construct.a.rtkhl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtkhl003
         ON ACTION controlp INFIELD rtkhl003
            #add-point:ON ACTION controlp INFIELD rtkhl003
            {<point name="construct.c.rtkhl003" />}
            #END add-point
 
         #----<<rtkhl004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhl004
            #add-point:BEFORE FIELD rtkhl004
            {<point name="construct.b.rtkhl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkhl004
            
            #add-point:AFTER FIELD rtkhl004
            {<point name="construct.a.rtkhl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtkhl004
         ON ACTION controlp INFIELD rtkhl004
            #add-point:ON ACTION controlp INFIELD rtkhl004
            {<point name="construct.c.rtkhl004" />}
            #END add-point
 
         #----<<rtkhstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhstus
            #add-point:BEFORE FIELD rtkhstus
            {<point name="construct.b.rtkhstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkhstus
            
            #add-point:AFTER FIELD rtkhstus
            {<point name="construct.a.rtkhstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtkhstus
         ON ACTION controlp INFIELD rtkhstus
            #add-point:ON ACTION controlp INFIELD rtkhstus
            {<point name="construct.c.rtkhstus" />}
            #END add-point
 
         #----<<rtkh002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh002
            #add-point:BEFORE FIELD rtkh002
            {<point name="construct.b.rtkh002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh002
            
            #add-point:AFTER FIELD rtkh002
            {<point name="construct.a.rtkh002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtkh002
         ON ACTION controlp INFIELD rtkh002
            #add-point:ON ACTION controlp INFIELD rtkh002
            {<point name="construct.c.rtkh002" />}
            #END add-point
 
         #----<<rtkh003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh003
            #add-point:BEFORE FIELD rtkh003
            {<point name="construct.b.rtkh003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh003
            
            #add-point:AFTER FIELD rtkh003
            {<point name="construct.a.rtkh003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtkh003
         ON ACTION controlp INFIELD rtkh003
            #add-point:ON ACTION controlp INFIELD rtkh003
            {<point name="construct.c.rtkh003" />}
            #END add-point
 
         #----<<rtkh004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh004
            #add-point:BEFORE FIELD rtkh004
            {<point name="construct.b.rtkh004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh004
            
            #add-point:AFTER FIELD rtkh004
            {<point name="construct.a.rtkh004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtkh004
         ON ACTION controlp INFIELD rtkh004
            #add-point:ON ACTION controlp INFIELD rtkh004
            {<point name="construct.c.rtkh004" />}
            #END add-point
 
         #----<<rtkh005>>----
         #Ctrlp:construct.c.rtkh005
         ON ACTION controlp INFIELD rtkh005
            #add-point:ON ACTION controlp INFIELD rtkh005
            {<point name="construct.c.rtkh005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh005
            #add-point:BEFORE FIELD rtkh005
            {<point name="construct.b.rtkh005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh005
            
            #add-point:AFTER FIELD rtkh005
            {<point name="construct.a.rtkh005" />}
            #END add-point
            
 
         #----<<rtkh005_desc>>----
         #----<<rtkh006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh006
            #add-point:BEFORE FIELD rtkh006
            {<point name="construct.b.rtkh006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh006
            
            #add-point:AFTER FIELD rtkh006
            {<point name="construct.a.rtkh006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtkh006
         ON ACTION controlp INFIELD rtkh006
            #add-point:ON ACTION controlp INFIELD rtkh006
            {<point name="construct.c.rtkh006" />}
            #END add-point
 
         #----<<rtkh007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh007
            #add-point:BEFORE FIELD rtkh007
            {<point name="construct.b.rtkh007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh007
            
            #add-point:AFTER FIELD rtkh007
            {<point name="construct.a.rtkh007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtkh007
         ON ACTION controlp INFIELD rtkh007
            #add-point:ON ACTION controlp INFIELD rtkh007
            {<point name="construct.c.rtkh007" />}
            #END add-point
 
         #----<<rtkh008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh008
            #add-point:BEFORE FIELD rtkh008
            {<point name="construct.b.rtkh008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh008
            
            #add-point:AFTER FIELD rtkh008
            {<point name="construct.a.rtkh008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtkh008
         ON ACTION controlp INFIELD rtkh008
            #add-point:ON ACTION controlp INFIELD rtkh008
            {<point name="construct.c.rtkh008" />}
            #END add-point
 
         #----<<rtkh009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh009
            #add-point:BEFORE FIELD rtkh009
            {<point name="construct.b.rtkh009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh009
            
            #add-point:AFTER FIELD rtkh009
            {<point name="construct.a.rtkh009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtkh009
         ON ACTION controlp INFIELD rtkh009
            #add-point:ON ACTION controlp INFIELD rtkh009
            {<point name="construct.c.rtkh009" />}
            #END add-point
 
         #----<<rtkh010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh010
            #add-point:BEFORE FIELD rtkh010
            {<point name="construct.b.rtkh010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh010
            
            #add-point:AFTER FIELD rtkh010
            {<point name="construct.a.rtkh010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtkh010
         ON ACTION controlp INFIELD rtkh010
            #add-point:ON ACTION controlp INFIELD rtkh010
            {<point name="construct.c.rtkh010" />}
            #END add-point
 
         #----<<rtkh011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh011
            #add-point:BEFORE FIELD rtkh011
            {<point name="construct.b.rtkh011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh011
            
            #add-point:AFTER FIELD rtkh011
            {<point name="construct.a.rtkh011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtkh011
         ON ACTION controlp INFIELD rtkh011
            #add-point:ON ACTION controlp INFIELD rtkh011
            {<point name="construct.c.rtkh011" />}
            #END add-point
 
         #----<<rtkh012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh012
            #add-point:BEFORE FIELD rtkh012
            {<point name="construct.b.rtkh012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh012
            
            #add-point:AFTER FIELD rtkh012
            {<point name="construct.a.rtkh012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtkh012
         ON ACTION controlp INFIELD rtkh012
            #add-point:ON ACTION controlp INFIELD rtkh012
            {<point name="construct.c.rtkh012" />}
            #END add-point
 
         #----<<rtkh013>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh013
            #add-point:BEFORE FIELD rtkh013
            {<point name="construct.b.rtkh013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh013
            
            #add-point:AFTER FIELD rtkh013
            {<point name="construct.a.rtkh013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtkh013
         ON ACTION controlp INFIELD rtkh013
            #add-point:ON ACTION controlp INFIELD rtkh013
            {<point name="construct.c.rtkh013" />}
            #END add-point
 
         #----<<rtkh014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh014
            #add-point:BEFORE FIELD rtkh014
            {<point name="construct.b.rtkh014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh014
            
            #add-point:AFTER FIELD rtkh014
            {<point name="construct.a.rtkh014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtkh014
         ON ACTION controlp INFIELD rtkh014
            #add-point:ON ACTION controlp INFIELD rtkh014
            {<point name="construct.c.rtkh014" />}
            #END add-point
 
         #----<<rtkhownid>>----
         #Ctrlp:construct.c.rtkhownid
         ON ACTION controlp INFIELD rtkhownid
            #add-point:ON ACTION controlp INFIELD rtkhownid
            {<point name="construct.c.rtkhownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhownid
            #add-point:BEFORE FIELD rtkhownid
            {<point name="construct.b.rtkhownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkhownid
            
            #add-point:AFTER FIELD rtkhownid
            {<point name="construct.a.rtkhownid" />}
            #END add-point
            
 
         #----<<rtkhownid_desc>>----
         #----<<rtkhowndp>>----
         #Ctrlp:construct.c.rtkhowndp
         ON ACTION controlp INFIELD rtkhowndp
            #add-point:ON ACTION controlp INFIELD rtkhowndp
            {<point name="construct.c.rtkhowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhowndp
            #add-point:BEFORE FIELD rtkhowndp
            {<point name="construct.b.rtkhowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkhowndp
            
            #add-point:AFTER FIELD rtkhowndp
            {<point name="construct.a.rtkhowndp" />}
            #END add-point
            
 
         #----<<rtkhowndp_desc>>----
         #----<<rtkhcrtid>>----
         #Ctrlp:construct.c.rtkhcrtid
         ON ACTION controlp INFIELD rtkhcrtid
            #add-point:ON ACTION controlp INFIELD rtkhcrtid
            {<point name="construct.c.rtkhcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhcrtid
            #add-point:BEFORE FIELD rtkhcrtid
            {<point name="construct.b.rtkhcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkhcrtid
            
            #add-point:AFTER FIELD rtkhcrtid
            {<point name="construct.a.rtkhcrtid" />}
            #END add-point
            
 
         #----<<rtkhcrtid_desc>>----
         #----<<rtkhcrtdp>>----
         #Ctrlp:construct.c.rtkhcrtdp
         ON ACTION controlp INFIELD rtkhcrtdp
            #add-point:ON ACTION controlp INFIELD rtkhcrtdp
            {<point name="construct.c.rtkhcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhcrtdp
            #add-point:BEFORE FIELD rtkhcrtdp
            {<point name="construct.b.rtkhcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkhcrtdp
            
            #add-point:AFTER FIELD rtkhcrtdp
            {<point name="construct.a.rtkhcrtdp" />}
            #END add-point
            
 
         #----<<rtkhcrtdp_desc>>----
         #----<<rtkhcrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhcrtdt
            #add-point:BEFORE FIELD rtkhcrtdt
            {<point name="construct.b.rtkhcrtdt" />}
            #END add-point
 
         #----<<rtkhmodid>>----
         #Ctrlp:construct.c.rtkhmodid
         ON ACTION controlp INFIELD rtkhmodid
            #add-point:ON ACTION controlp INFIELD rtkhmodid
            {<point name="construct.c.rtkhmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhmodid
            #add-point:BEFORE FIELD rtkhmodid
            {<point name="construct.b.rtkhmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkhmodid
            
            #add-point:AFTER FIELD rtkhmodid
            {<point name="construct.a.rtkhmodid" />}
            #END add-point
            
 
         #----<<rtkhmodid_desc>>----
         #----<<rtkhcnfid>>----
         #Ctrlp:construct.c.rtkhcnfid
         ON ACTION controlp INFIELD rtkhcnfid
            #add-point:ON ACTION controlp INFIELD rtkhcnfid
            {<point name="construct.c.rtkhcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhcnfid
            #add-point:BEFORE FIELD rtkhcnfid
            {<point name="construct.b.rtkhcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkhcnfid
            
            #add-point:AFTER FIELD rtkhcnfid
            {<point name="construct.a.rtkhcnfid" />}
            #END add-point
            
 
         #----<<rtkhcnfid_desc>>----
         #----<<rtkhmoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhmoddt
            #add-point:BEFORE FIELD rtkhmoddt
            {<point name="construct.b.rtkhmoddt" />}
            #END add-point
 
         #----<<rtkhcnfdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhcnfdt
            #add-point:BEFORE FIELD rtkhcnfdt
            {<point name="construct.b.rtkhcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON rtkiunit,rtki002,rtki003,rtki004,rtki005,rtki006,rtki007
           FROM s_detail1[1].rtkiunit,s_detail1[1].rtki002,s_detail1[1].rtki003,s_detail1[1].rtki004, 
               s_detail1[1].rtki005,s_detail1[1].rtki006,s_detail1[1].rtki007
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<rtkiunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkiunit
            #add-point:BEFORE FIELD rtkiunit
            {<point name="construct.b.page1.rtkiunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkiunit
            
            #add-point:AFTER FIELD rtkiunit
            {<point name="construct.a.page1.rtkiunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtkiunit
         ON ACTION controlp INFIELD rtkiunit
            #add-point:ON ACTION controlp INFIELD rtkiunit
            {<point name="construct.c.page1.rtkiunit" />}
            #END add-point
 
         #----<<rtki002>>----
         #Ctrlp:construct.c.page1.rtki002
         ON ACTION controlp INFIELD rtki002
            #add-point:ON ACTION controlp INFIELD rtki002
            {<point name="construct.c.page1.rtki002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtki002
            #add-point:BEFORE FIELD rtki002
            {<point name="construct.b.page1.rtki002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtki002
            
            #add-point:AFTER FIELD rtki002
            {<point name="construct.a.page1.rtki002" />}
            #END add-point
            
 
         #----<<rtki002_desc>>----
         #----<<rtki003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtki003
            #add-point:BEFORE FIELD rtki003
            {<point name="construct.b.page1.rtki003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtki003
            
            #add-point:AFTER FIELD rtki003
            {<point name="construct.a.page1.rtki003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtki003
         ON ACTION controlp INFIELD rtki003
            #add-point:ON ACTION controlp INFIELD rtki003
            {<point name="construct.c.page1.rtki003" />}
            #END add-point
 
         #----<<rtki004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtki004
            #add-point:BEFORE FIELD rtki004
            {<point name="construct.b.page1.rtki004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtki004
            
            #add-point:AFTER FIELD rtki004
            {<point name="construct.a.page1.rtki004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtki004
         ON ACTION controlp INFIELD rtki004
            #add-point:ON ACTION controlp INFIELD rtki004
            {<point name="construct.c.page1.rtki004" />}
            #END add-point
 
         #----<<rtki005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtki005
            #add-point:BEFORE FIELD rtki005
            {<point name="construct.b.page1.rtki005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtki005
            
            #add-point:AFTER FIELD rtki005
            {<point name="construct.a.page1.rtki005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtki005
         ON ACTION controlp INFIELD rtki005
            #add-point:ON ACTION controlp INFIELD rtki005
            {<point name="construct.c.page1.rtki005" />}
            #END add-point
 
         #----<<rtki006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtki006
            #add-point:BEFORE FIELD rtki006
            {<point name="construct.b.page1.rtki006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtki006
            
            #add-point:AFTER FIELD rtki006
            {<point name="construct.a.page1.rtki006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtki006
         ON ACTION controlp INFIELD rtki006
            #add-point:ON ACTION controlp INFIELD rtki006
            {<point name="construct.c.page1.rtki006" />}
            #END add-point
 
         #----<<rtki007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtki007
            #add-point:BEFORE FIELD rtki007
            {<point name="construct.b.page1.rtki007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtki007
            
            #add-point:AFTER FIELD rtki007
            {<point name="construct.a.page1.rtki007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtki007
         ON ACTION controlp INFIELD rtki007
            #add-point:ON ACTION controlp INFIELD rtki007
            {<point name="construct.c.page1.rtki007" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON rtkjunit,rtkj002,rtkj101,rtkj102,rtkj103,rtkj104,rtkj105,rtkj106,rtkj107, 
          rtkj108,rtkj109,rtkj110,rtkj111,rtkj112,rtkj113,rtkj114,rtkj115,rtkj116,rtkj117,rtkj118,rtkj119, 
          rtkj120,rtkj121,rtkj122,rtkj123,rtkj124,rtkj125,rtkj126,rtkj127,rtkj128,rtkj129,rtkj130,rtkj131, 
          rtkj132,rtkj133,rtkj134,rtkj135,rtkj136,rtkj137,rtkj138,rtkj139,rtkj140,rtkj141,rtkj142,rtkj143, 
          rtkj144,rtkj145,rtkj146,rtkj147,rtkj148,rtkj149,rtkj150,rtkj151,rtkj152
           FROM s_detail2[1].rtkjunit,s_detail2[1].rtkj002,s_detail2[1].rtkj101,s_detail2[1].rtkj102, 
               s_detail2[1].rtkj103,s_detail2[1].rtkj104,s_detail2[1].rtkj105,s_detail2[1].rtkj106,s_detail2[1].rtkj107, 
               s_detail2[1].rtkj108,s_detail2[1].rtkj109,s_detail2[1].rtkj110,s_detail2[1].rtkj111,s_detail2[1].rtkj112, 
               s_detail2[1].rtkj113,s_detail2[1].rtkj114,s_detail2[1].rtkj115,s_detail2[1].rtkj116,s_detail2[1].rtkj117, 
               s_detail2[1].rtkj118,s_detail2[1].rtkj119,s_detail2[1].rtkj120,s_detail2[1].rtkj121,s_detail2[1].rtkj122, 
               s_detail2[1].rtkj123,s_detail2[1].rtkj124,s_detail2[1].rtkj125,s_detail2[1].rtkj126,s_detail2[1].rtkj127, 
               s_detail2[1].rtkj128,s_detail2[1].rtkj129,s_detail2[1].rtkj130,s_detail2[1].rtkj131,s_detail2[1].rtkj132, 
               s_detail2[1].rtkj133,s_detail2[1].rtkj134,s_detail2[1].rtkj135,s_detail2[1].rtkj136,s_detail2[1].rtkj137, 
               s_detail2[1].rtkj138,s_detail2[1].rtkj139,s_detail2[1].rtkj140,s_detail2[1].rtkj141,s_detail2[1].rtkj142, 
               s_detail2[1].rtkj143,s_detail2[1].rtkj144,s_detail2[1].rtkj145,s_detail2[1].rtkj146,s_detail2[1].rtkj147, 
               s_detail2[1].rtkj148,s_detail2[1].rtkj149,s_detail2[1].rtkj150,s_detail2[1].rtkj151,s_detail2[1].rtkj152 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
       #---------------------<  Detail: page2  >---------------------
         #----<<rtkjunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkjunit
            #add-point:BEFORE FIELD rtkjunit
            {<point name="construct.b.page2.rtkjunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkjunit
            
            #add-point:AFTER FIELD rtkjunit
            {<point name="construct.a.page2.rtkjunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkjunit
         ON ACTION controlp INFIELD rtkjunit
            #add-point:ON ACTION controlp INFIELD rtkjunit
            {<point name="construct.c.page2.rtkjunit" />}
            #END add-point
 
         #----<<rtkj002>>----
         #Ctrlp:construct.c.page2.rtkj002
         ON ACTION controlp INFIELD rtkj002
            #add-point:ON ACTION controlp INFIELD rtkj002
            {<point name="construct.c.page2.rtkj002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj002
            #add-point:BEFORE FIELD rtkj002
            {<point name="construct.b.page2.rtkj002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj002
            
            #add-point:AFTER FIELD rtkj002
            {<point name="construct.a.page2.rtkj002" />}
            #END add-point
            
 
         #----<<rtkj002_desc>>----
         #----<<rtkj101>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj101
            #add-point:BEFORE FIELD rtkj101
            {<point name="construct.b.page2.rtkj101" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj101
            
            #add-point:AFTER FIELD rtkj101
            {<point name="construct.a.page2.rtkj101" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj101
         ON ACTION controlp INFIELD rtkj101
            #add-point:ON ACTION controlp INFIELD rtkj101
            {<point name="construct.c.page2.rtkj101" />}
            #END add-point
 
         #----<<rtkj102>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj102
            #add-point:BEFORE FIELD rtkj102
            {<point name="construct.b.page2.rtkj102" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj102
            
            #add-point:AFTER FIELD rtkj102
            {<point name="construct.a.page2.rtkj102" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj102
         ON ACTION controlp INFIELD rtkj102
            #add-point:ON ACTION controlp INFIELD rtkj102
            {<point name="construct.c.page2.rtkj102" />}
            #END add-point
 
         #----<<rtkj103>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj103
            #add-point:BEFORE FIELD rtkj103
            {<point name="construct.b.page2.rtkj103" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj103
            
            #add-point:AFTER FIELD rtkj103
            {<point name="construct.a.page2.rtkj103" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj103
         ON ACTION controlp INFIELD rtkj103
            #add-point:ON ACTION controlp INFIELD rtkj103
            {<point name="construct.c.page2.rtkj103" />}
            #END add-point
 
         #----<<rtkj104>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj104
            #add-point:BEFORE FIELD rtkj104
            {<point name="construct.b.page2.rtkj104" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj104
            
            #add-point:AFTER FIELD rtkj104
            {<point name="construct.a.page2.rtkj104" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj104
         ON ACTION controlp INFIELD rtkj104
            #add-point:ON ACTION controlp INFIELD rtkj104
            {<point name="construct.c.page2.rtkj104" />}
            #END add-point
 
         #----<<rtkj105>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj105
            #add-point:BEFORE FIELD rtkj105
            {<point name="construct.b.page2.rtkj105" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj105
            
            #add-point:AFTER FIELD rtkj105
            {<point name="construct.a.page2.rtkj105" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj105
         ON ACTION controlp INFIELD rtkj105
            #add-point:ON ACTION controlp INFIELD rtkj105
            {<point name="construct.c.page2.rtkj105" />}
            #END add-point
 
         #----<<rtkj106>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj106
            #add-point:BEFORE FIELD rtkj106
            {<point name="construct.b.page2.rtkj106" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj106
            
            #add-point:AFTER FIELD rtkj106
            {<point name="construct.a.page2.rtkj106" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj106
         ON ACTION controlp INFIELD rtkj106
            #add-point:ON ACTION controlp INFIELD rtkj106
            {<point name="construct.c.page2.rtkj106" />}
            #END add-point
 
         #----<<rtkj107>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj107
            #add-point:BEFORE FIELD rtkj107
            {<point name="construct.b.page2.rtkj107" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj107
            
            #add-point:AFTER FIELD rtkj107
            {<point name="construct.a.page2.rtkj107" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj107
         ON ACTION controlp INFIELD rtkj107
            #add-point:ON ACTION controlp INFIELD rtkj107
            {<point name="construct.c.page2.rtkj107" />}
            #END add-point
 
         #----<<rtkj108>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj108
            #add-point:BEFORE FIELD rtkj108
            {<point name="construct.b.page2.rtkj108" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj108
            
            #add-point:AFTER FIELD rtkj108
            {<point name="construct.a.page2.rtkj108" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj108
         ON ACTION controlp INFIELD rtkj108
            #add-point:ON ACTION controlp INFIELD rtkj108
            {<point name="construct.c.page2.rtkj108" />}
            #END add-point
 
         #----<<rtkj109>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj109
            #add-point:BEFORE FIELD rtkj109
            {<point name="construct.b.page2.rtkj109" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj109
            
            #add-point:AFTER FIELD rtkj109
            {<point name="construct.a.page2.rtkj109" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj109
         ON ACTION controlp INFIELD rtkj109
            #add-point:ON ACTION controlp INFIELD rtkj109
            {<point name="construct.c.page2.rtkj109" />}
            #END add-point
 
         #----<<rtkj110>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj110
            #add-point:BEFORE FIELD rtkj110
            {<point name="construct.b.page2.rtkj110" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj110
            
            #add-point:AFTER FIELD rtkj110
            {<point name="construct.a.page2.rtkj110" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj110
         ON ACTION controlp INFIELD rtkj110
            #add-point:ON ACTION controlp INFIELD rtkj110
            {<point name="construct.c.page2.rtkj110" />}
            #END add-point
 
         #----<<rtkj111>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj111
            #add-point:BEFORE FIELD rtkj111
            {<point name="construct.b.page2.rtkj111" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj111
            
            #add-point:AFTER FIELD rtkj111
            {<point name="construct.a.page2.rtkj111" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj111
         ON ACTION controlp INFIELD rtkj111
            #add-point:ON ACTION controlp INFIELD rtkj111
            {<point name="construct.c.page2.rtkj111" />}
            #END add-point
 
         #----<<rtkj112>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj112
            #add-point:BEFORE FIELD rtkj112
            {<point name="construct.b.page2.rtkj112" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj112
            
            #add-point:AFTER FIELD rtkj112
            {<point name="construct.a.page2.rtkj112" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj112
         ON ACTION controlp INFIELD rtkj112
            #add-point:ON ACTION controlp INFIELD rtkj112
            {<point name="construct.c.page2.rtkj112" />}
            #END add-point
 
         #----<<rtkj113>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj113
            #add-point:BEFORE FIELD rtkj113
            {<point name="construct.b.page2.rtkj113" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj113
            
            #add-point:AFTER FIELD rtkj113
            {<point name="construct.a.page2.rtkj113" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj113
         ON ACTION controlp INFIELD rtkj113
            #add-point:ON ACTION controlp INFIELD rtkj113
            {<point name="construct.c.page2.rtkj113" />}
            #END add-point
 
         #----<<rtkj114>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj114
            #add-point:BEFORE FIELD rtkj114
            {<point name="construct.b.page2.rtkj114" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj114
            
            #add-point:AFTER FIELD rtkj114
            {<point name="construct.a.page2.rtkj114" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj114
         ON ACTION controlp INFIELD rtkj114
            #add-point:ON ACTION controlp INFIELD rtkj114
            {<point name="construct.c.page2.rtkj114" />}
            #END add-point
 
         #----<<rtkj115>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj115
            #add-point:BEFORE FIELD rtkj115
            {<point name="construct.b.page2.rtkj115" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj115
            
            #add-point:AFTER FIELD rtkj115
            {<point name="construct.a.page2.rtkj115" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj115
         ON ACTION controlp INFIELD rtkj115
            #add-point:ON ACTION controlp INFIELD rtkj115
            {<point name="construct.c.page2.rtkj115" />}
            #END add-point
 
         #----<<rtkj116>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj116
            #add-point:BEFORE FIELD rtkj116
            {<point name="construct.b.page2.rtkj116" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj116
            
            #add-point:AFTER FIELD rtkj116
            {<point name="construct.a.page2.rtkj116" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj116
         ON ACTION controlp INFIELD rtkj116
            #add-point:ON ACTION controlp INFIELD rtkj116
            {<point name="construct.c.page2.rtkj116" />}
            #END add-point
 
         #----<<rtkj117>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj117
            #add-point:BEFORE FIELD rtkj117
            {<point name="construct.b.page2.rtkj117" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj117
            
            #add-point:AFTER FIELD rtkj117
            {<point name="construct.a.page2.rtkj117" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj117
         ON ACTION controlp INFIELD rtkj117
            #add-point:ON ACTION controlp INFIELD rtkj117
            {<point name="construct.c.page2.rtkj117" />}
            #END add-point
 
         #----<<rtkj118>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj118
            #add-point:BEFORE FIELD rtkj118
            {<point name="construct.b.page2.rtkj118" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj118
            
            #add-point:AFTER FIELD rtkj118
            {<point name="construct.a.page2.rtkj118" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj118
         ON ACTION controlp INFIELD rtkj118
            #add-point:ON ACTION controlp INFIELD rtkj118
            {<point name="construct.c.page2.rtkj118" />}
            #END add-point
 
         #----<<rtkj119>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj119
            #add-point:BEFORE FIELD rtkj119
            {<point name="construct.b.page2.rtkj119" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj119
            
            #add-point:AFTER FIELD rtkj119
            {<point name="construct.a.page2.rtkj119" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj119
         ON ACTION controlp INFIELD rtkj119
            #add-point:ON ACTION controlp INFIELD rtkj119
            {<point name="construct.c.page2.rtkj119" />}
            #END add-point
 
         #----<<rtkj120>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj120
            #add-point:BEFORE FIELD rtkj120
            {<point name="construct.b.page2.rtkj120" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj120
            
            #add-point:AFTER FIELD rtkj120
            {<point name="construct.a.page2.rtkj120" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj120
         ON ACTION controlp INFIELD rtkj120
            #add-point:ON ACTION controlp INFIELD rtkj120
            {<point name="construct.c.page2.rtkj120" />}
            #END add-point
 
         #----<<rtkj121>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj121
            #add-point:BEFORE FIELD rtkj121
            {<point name="construct.b.page2.rtkj121" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj121
            
            #add-point:AFTER FIELD rtkj121
            {<point name="construct.a.page2.rtkj121" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj121
         ON ACTION controlp INFIELD rtkj121
            #add-point:ON ACTION controlp INFIELD rtkj121
            {<point name="construct.c.page2.rtkj121" />}
            #END add-point
 
         #----<<rtkj122>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj122
            #add-point:BEFORE FIELD rtkj122
            {<point name="construct.b.page2.rtkj122" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj122
            
            #add-point:AFTER FIELD rtkj122
            {<point name="construct.a.page2.rtkj122" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj122
         ON ACTION controlp INFIELD rtkj122
            #add-point:ON ACTION controlp INFIELD rtkj122
            {<point name="construct.c.page2.rtkj122" />}
            #END add-point
 
         #----<<rtkj123>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj123
            #add-point:BEFORE FIELD rtkj123
            {<point name="construct.b.page2.rtkj123" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj123
            
            #add-point:AFTER FIELD rtkj123
            {<point name="construct.a.page2.rtkj123" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj123
         ON ACTION controlp INFIELD rtkj123
            #add-point:ON ACTION controlp INFIELD rtkj123
            {<point name="construct.c.page2.rtkj123" />}
            #END add-point
 
         #----<<rtkj124>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj124
            #add-point:BEFORE FIELD rtkj124
            {<point name="construct.b.page2.rtkj124" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj124
            
            #add-point:AFTER FIELD rtkj124
            {<point name="construct.a.page2.rtkj124" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj124
         ON ACTION controlp INFIELD rtkj124
            #add-point:ON ACTION controlp INFIELD rtkj124
            {<point name="construct.c.page2.rtkj124" />}
            #END add-point
 
         #----<<rtkj125>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj125
            #add-point:BEFORE FIELD rtkj125
            {<point name="construct.b.page2.rtkj125" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj125
            
            #add-point:AFTER FIELD rtkj125
            {<point name="construct.a.page2.rtkj125" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj125
         ON ACTION controlp INFIELD rtkj125
            #add-point:ON ACTION controlp INFIELD rtkj125
            {<point name="construct.c.page2.rtkj125" />}
            #END add-point
 
         #----<<rtkj126>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj126
            #add-point:BEFORE FIELD rtkj126
            {<point name="construct.b.page2.rtkj126" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj126
            
            #add-point:AFTER FIELD rtkj126
            {<point name="construct.a.page2.rtkj126" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj126
         ON ACTION controlp INFIELD rtkj126
            #add-point:ON ACTION controlp INFIELD rtkj126
            {<point name="construct.c.page2.rtkj126" />}
            #END add-point
 
         #----<<rtkj127>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj127
            #add-point:BEFORE FIELD rtkj127
            {<point name="construct.b.page2.rtkj127" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj127
            
            #add-point:AFTER FIELD rtkj127
            {<point name="construct.a.page2.rtkj127" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj127
         ON ACTION controlp INFIELD rtkj127
            #add-point:ON ACTION controlp INFIELD rtkj127
            {<point name="construct.c.page2.rtkj127" />}
            #END add-point
 
         #----<<rtkj128>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj128
            #add-point:BEFORE FIELD rtkj128
            {<point name="construct.b.page2.rtkj128" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj128
            
            #add-point:AFTER FIELD rtkj128
            {<point name="construct.a.page2.rtkj128" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj128
         ON ACTION controlp INFIELD rtkj128
            #add-point:ON ACTION controlp INFIELD rtkj128
            {<point name="construct.c.page2.rtkj128" />}
            #END add-point
 
         #----<<rtkj129>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj129
            #add-point:BEFORE FIELD rtkj129
            {<point name="construct.b.page2.rtkj129" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj129
            
            #add-point:AFTER FIELD rtkj129
            {<point name="construct.a.page2.rtkj129" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj129
         ON ACTION controlp INFIELD rtkj129
            #add-point:ON ACTION controlp INFIELD rtkj129
            {<point name="construct.c.page2.rtkj129" />}
            #END add-point
 
         #----<<rtkj130>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj130
            #add-point:BEFORE FIELD rtkj130
            {<point name="construct.b.page2.rtkj130" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj130
            
            #add-point:AFTER FIELD rtkj130
            {<point name="construct.a.page2.rtkj130" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj130
         ON ACTION controlp INFIELD rtkj130
            #add-point:ON ACTION controlp INFIELD rtkj130
            {<point name="construct.c.page2.rtkj130" />}
            #END add-point
 
         #----<<rtkj131>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj131
            #add-point:BEFORE FIELD rtkj131
            {<point name="construct.b.page2.rtkj131" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj131
            
            #add-point:AFTER FIELD rtkj131
            {<point name="construct.a.page2.rtkj131" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj131
         ON ACTION controlp INFIELD rtkj131
            #add-point:ON ACTION controlp INFIELD rtkj131
            {<point name="construct.c.page2.rtkj131" />}
            #END add-point
 
         #----<<rtkj132>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj132
            #add-point:BEFORE FIELD rtkj132
            {<point name="construct.b.page2.rtkj132" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj132
            
            #add-point:AFTER FIELD rtkj132
            {<point name="construct.a.page2.rtkj132" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj132
         ON ACTION controlp INFIELD rtkj132
            #add-point:ON ACTION controlp INFIELD rtkj132
            {<point name="construct.c.page2.rtkj132" />}
            #END add-point
 
         #----<<rtkj133>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj133
            #add-point:BEFORE FIELD rtkj133
            {<point name="construct.b.page2.rtkj133" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj133
            
            #add-point:AFTER FIELD rtkj133
            {<point name="construct.a.page2.rtkj133" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj133
         ON ACTION controlp INFIELD rtkj133
            #add-point:ON ACTION controlp INFIELD rtkj133
            {<point name="construct.c.page2.rtkj133" />}
            #END add-point
 
         #----<<rtkj134>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj134
            #add-point:BEFORE FIELD rtkj134
            {<point name="construct.b.page2.rtkj134" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj134
            
            #add-point:AFTER FIELD rtkj134
            {<point name="construct.a.page2.rtkj134" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj134
         ON ACTION controlp INFIELD rtkj134
            #add-point:ON ACTION controlp INFIELD rtkj134
            {<point name="construct.c.page2.rtkj134" />}
            #END add-point
 
         #----<<rtkj135>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj135
            #add-point:BEFORE FIELD rtkj135
            {<point name="construct.b.page2.rtkj135" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj135
            
            #add-point:AFTER FIELD rtkj135
            {<point name="construct.a.page2.rtkj135" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj135
         ON ACTION controlp INFIELD rtkj135
            #add-point:ON ACTION controlp INFIELD rtkj135
            {<point name="construct.c.page2.rtkj135" />}
            #END add-point
 
         #----<<rtkj136>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj136
            #add-point:BEFORE FIELD rtkj136
            {<point name="construct.b.page2.rtkj136" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj136
            
            #add-point:AFTER FIELD rtkj136
            {<point name="construct.a.page2.rtkj136" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj136
         ON ACTION controlp INFIELD rtkj136
            #add-point:ON ACTION controlp INFIELD rtkj136
            {<point name="construct.c.page2.rtkj136" />}
            #END add-point
 
         #----<<rtkj137>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj137
            #add-point:BEFORE FIELD rtkj137
            {<point name="construct.b.page2.rtkj137" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj137
            
            #add-point:AFTER FIELD rtkj137
            {<point name="construct.a.page2.rtkj137" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj137
         ON ACTION controlp INFIELD rtkj137
            #add-point:ON ACTION controlp INFIELD rtkj137
            {<point name="construct.c.page2.rtkj137" />}
            #END add-point
 
         #----<<rtkj138>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj138
            #add-point:BEFORE FIELD rtkj138
            {<point name="construct.b.page2.rtkj138" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj138
            
            #add-point:AFTER FIELD rtkj138
            {<point name="construct.a.page2.rtkj138" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj138
         ON ACTION controlp INFIELD rtkj138
            #add-point:ON ACTION controlp INFIELD rtkj138
            {<point name="construct.c.page2.rtkj138" />}
            #END add-point
 
         #----<<rtkj139>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj139
            #add-point:BEFORE FIELD rtkj139
            {<point name="construct.b.page2.rtkj139" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj139
            
            #add-point:AFTER FIELD rtkj139
            {<point name="construct.a.page2.rtkj139" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj139
         ON ACTION controlp INFIELD rtkj139
            #add-point:ON ACTION controlp INFIELD rtkj139
            {<point name="construct.c.page2.rtkj139" />}
            #END add-point
 
         #----<<rtkj140>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj140
            #add-point:BEFORE FIELD rtkj140
            {<point name="construct.b.page2.rtkj140" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj140
            
            #add-point:AFTER FIELD rtkj140
            {<point name="construct.a.page2.rtkj140" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj140
         ON ACTION controlp INFIELD rtkj140
            #add-point:ON ACTION controlp INFIELD rtkj140
            {<point name="construct.c.page2.rtkj140" />}
            #END add-point
 
         #----<<rtkj141>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj141
            #add-point:BEFORE FIELD rtkj141
            {<point name="construct.b.page2.rtkj141" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj141
            
            #add-point:AFTER FIELD rtkj141
            {<point name="construct.a.page2.rtkj141" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj141
         ON ACTION controlp INFIELD rtkj141
            #add-point:ON ACTION controlp INFIELD rtkj141
            {<point name="construct.c.page2.rtkj141" />}
            #END add-point
 
         #----<<rtkj142>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj142
            #add-point:BEFORE FIELD rtkj142
            {<point name="construct.b.page2.rtkj142" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj142
            
            #add-point:AFTER FIELD rtkj142
            {<point name="construct.a.page2.rtkj142" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj142
         ON ACTION controlp INFIELD rtkj142
            #add-point:ON ACTION controlp INFIELD rtkj142
            {<point name="construct.c.page2.rtkj142" />}
            #END add-point
 
         #----<<rtkj143>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj143
            #add-point:BEFORE FIELD rtkj143
            {<point name="construct.b.page2.rtkj143" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj143
            
            #add-point:AFTER FIELD rtkj143
            {<point name="construct.a.page2.rtkj143" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj143
         ON ACTION controlp INFIELD rtkj143
            #add-point:ON ACTION controlp INFIELD rtkj143
            {<point name="construct.c.page2.rtkj143" />}
            #END add-point
 
         #----<<rtkj144>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj144
            #add-point:BEFORE FIELD rtkj144
            {<point name="construct.b.page2.rtkj144" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj144
            
            #add-point:AFTER FIELD rtkj144
            {<point name="construct.a.page2.rtkj144" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj144
         ON ACTION controlp INFIELD rtkj144
            #add-point:ON ACTION controlp INFIELD rtkj144
            {<point name="construct.c.page2.rtkj144" />}
            #END add-point
 
         #----<<rtkj145>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj145
            #add-point:BEFORE FIELD rtkj145
            {<point name="construct.b.page2.rtkj145" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj145
            
            #add-point:AFTER FIELD rtkj145
            {<point name="construct.a.page2.rtkj145" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj145
         ON ACTION controlp INFIELD rtkj145
            #add-point:ON ACTION controlp INFIELD rtkj145
            {<point name="construct.c.page2.rtkj145" />}
            #END add-point
 
         #----<<rtkj146>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj146
            #add-point:BEFORE FIELD rtkj146
            {<point name="construct.b.page2.rtkj146" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj146
            
            #add-point:AFTER FIELD rtkj146
            {<point name="construct.a.page2.rtkj146" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj146
         ON ACTION controlp INFIELD rtkj146
            #add-point:ON ACTION controlp INFIELD rtkj146
            {<point name="construct.c.page2.rtkj146" />}
            #END add-point
 
         #----<<rtkj147>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj147
            #add-point:BEFORE FIELD rtkj147
            {<point name="construct.b.page2.rtkj147" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj147
            
            #add-point:AFTER FIELD rtkj147
            {<point name="construct.a.page2.rtkj147" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj147
         ON ACTION controlp INFIELD rtkj147
            #add-point:ON ACTION controlp INFIELD rtkj147
            {<point name="construct.c.page2.rtkj147" />}
            #END add-point
 
         #----<<rtkj148>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj148
            #add-point:BEFORE FIELD rtkj148
            {<point name="construct.b.page2.rtkj148" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj148
            
            #add-point:AFTER FIELD rtkj148
            {<point name="construct.a.page2.rtkj148" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj148
         ON ACTION controlp INFIELD rtkj148
            #add-point:ON ACTION controlp INFIELD rtkj148
            {<point name="construct.c.page2.rtkj148" />}
            #END add-point
 
         #----<<rtkj149>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj149
            #add-point:BEFORE FIELD rtkj149
            {<point name="construct.b.page2.rtkj149" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj149
            
            #add-point:AFTER FIELD rtkj149
            {<point name="construct.a.page2.rtkj149" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj149
         ON ACTION controlp INFIELD rtkj149
            #add-point:ON ACTION controlp INFIELD rtkj149
            {<point name="construct.c.page2.rtkj149" />}
            #END add-point
 
         #----<<rtkj150>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj150
            #add-point:BEFORE FIELD rtkj150
            {<point name="construct.b.page2.rtkj150" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj150
            
            #add-point:AFTER FIELD rtkj150
            {<point name="construct.a.page2.rtkj150" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj150
         ON ACTION controlp INFIELD rtkj150
            #add-point:ON ACTION controlp INFIELD rtkj150
            {<point name="construct.c.page2.rtkj150" />}
            #END add-point
 
         #----<<rtkj151>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj151
            #add-point:BEFORE FIELD rtkj151
            {<point name="construct.b.page2.rtkj151" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj151
            
            #add-point:AFTER FIELD rtkj151
            {<point name="construct.a.page2.rtkj151" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj151
         ON ACTION controlp INFIELD rtkj151
            #add-point:ON ACTION controlp INFIELD rtkj151
            {<point name="construct.c.page2.rtkj151" />}
            #END add-point
 
         #----<<rtkj152>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj152
            #add-point:BEFORE FIELD rtkj152
            {<point name="construct.b.page2.rtkj152" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkj152
            
            #add-point:AFTER FIELD rtkj152
            {<point name="construct.a.page2.rtkj152" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rtkj152
         ON ACTION controlp INFIELD rtkj152
            #add-point:ON ACTION controlp INFIELD rtkj152
            {<point name="construct.c.page2.rtkj152" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON rtklunit,rtkl002,rtkl101,rtkl102,rtkl103,rtkl104,rtkl105,rtkl106,rtkl107 

           FROM s_detail3[1].rtklunit,s_detail3[1].rtkl002,s_detail3[1].rtkl101,s_detail3[1].rtkl102, 
               s_detail3[1].rtkl103,s_detail3[1].rtkl104,s_detail3[1].rtkl105,s_detail3[1].rtkl106,s_detail3[1].rtkl107 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
       #---------------------<  Detail: page3  >---------------------
         #----<<rtklunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtklunit
            #add-point:BEFORE FIELD rtklunit
            {<point name="construct.b.page3.rtklunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtklunit
            
            #add-point:AFTER FIELD rtklunit
            {<point name="construct.a.page3.rtklunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.rtklunit
         ON ACTION controlp INFIELD rtklunit
            #add-point:ON ACTION controlp INFIELD rtklunit
            {<point name="construct.c.page3.rtklunit" />}
            #END add-point
 
         #----<<rtkl002>>----
         #Ctrlp:construct.c.page3.rtkl002
         ON ACTION controlp INFIELD rtkl002
            #add-point:ON ACTION controlp INFIELD rtkl002
            {<point name="construct.c.page3.rtkl002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkl002
            #add-point:BEFORE FIELD rtkl002
            {<point name="construct.b.page3.rtkl002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkl002
            
            #add-point:AFTER FIELD rtkl002
            {<point name="construct.a.page3.rtkl002" />}
            #END add-point
            
 
         #----<<rtkl002_desc>>----
         #----<<rtkl101>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkl101
            #add-point:BEFORE FIELD rtkl101
            {<point name="construct.b.page3.rtkl101" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkl101
            
            #add-point:AFTER FIELD rtkl101
            {<point name="construct.a.page3.rtkl101" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.rtkl101
         ON ACTION controlp INFIELD rtkl101
            #add-point:ON ACTION controlp INFIELD rtkl101
            {<point name="construct.c.page3.rtkl101" />}
            #END add-point
 
         #----<<rtkl102>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkl102
            #add-point:BEFORE FIELD rtkl102
            {<point name="construct.b.page3.rtkl102" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkl102
            
            #add-point:AFTER FIELD rtkl102
            {<point name="construct.a.page3.rtkl102" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.rtkl102
         ON ACTION controlp INFIELD rtkl102
            #add-point:ON ACTION controlp INFIELD rtkl102
            {<point name="construct.c.page3.rtkl102" />}
            #END add-point
 
         #----<<rtkl103>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkl103
            #add-point:BEFORE FIELD rtkl103
            {<point name="construct.b.page3.rtkl103" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkl103
            
            #add-point:AFTER FIELD rtkl103
            {<point name="construct.a.page3.rtkl103" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.rtkl103
         ON ACTION controlp INFIELD rtkl103
            #add-point:ON ACTION controlp INFIELD rtkl103
            {<point name="construct.c.page3.rtkl103" />}
            #END add-point
 
         #----<<rtkl104>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkl104
            #add-point:BEFORE FIELD rtkl104
            {<point name="construct.b.page3.rtkl104" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkl104
            
            #add-point:AFTER FIELD rtkl104
            {<point name="construct.a.page3.rtkl104" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.rtkl104
         ON ACTION controlp INFIELD rtkl104
            #add-point:ON ACTION controlp INFIELD rtkl104
            {<point name="construct.c.page3.rtkl104" />}
            #END add-point
 
         #----<<rtkl105>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkl105
            #add-point:BEFORE FIELD rtkl105
            {<point name="construct.b.page3.rtkl105" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkl105
            
            #add-point:AFTER FIELD rtkl105
            {<point name="construct.a.page3.rtkl105" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.rtkl105
         ON ACTION controlp INFIELD rtkl105
            #add-point:ON ACTION controlp INFIELD rtkl105
            {<point name="construct.c.page3.rtkl105" />}
            #END add-point
 
         #----<<rtkl106>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkl106
            #add-point:BEFORE FIELD rtkl106
            {<point name="construct.b.page3.rtkl106" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkl106
            
            #add-point:AFTER FIELD rtkl106
            {<point name="construct.a.page3.rtkl106" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.rtkl106
         ON ACTION controlp INFIELD rtkl106
            #add-point:ON ACTION controlp INFIELD rtkl106
            {<point name="construct.c.page3.rtkl106" />}
            #END add-point
 
         #----<<rtkl107>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkl107
            #add-point:BEFORE FIELD rtkl107
            {<point name="construct.b.page3.rtkl107" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkl107
            
            #add-point:AFTER FIELD rtkl107
            {<point name="construct.a.page3.rtkl107" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.rtkl107
         ON ACTION controlp INFIELD rtkl107
            #add-point:ON ACTION controlp INFIELD rtkl107
            {<point name="construct.c.page3.rtkl107" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON rtkkunit,rtkk002,rtkk003,rtkk004
           FROM s_detail4[1].rtkkunit,s_detail4[1].rtkk002,s_detail4[1].rtkk003,s_detail4[1].rtkk004
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
       #---------------------<  Detail: page4  >---------------------
         #----<<rtkkunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkkunit
            #add-point:BEFORE FIELD rtkkunit
            {<point name="construct.b.page4.rtkkunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkkunit
            
            #add-point:AFTER FIELD rtkkunit
            {<point name="construct.a.page4.rtkkunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.rtkkunit
         ON ACTION controlp INFIELD rtkkunit
            #add-point:ON ACTION controlp INFIELD rtkkunit
            {<point name="construct.c.page4.rtkkunit" />}
            #END add-point
 
         #----<<rtkk002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkk002
            #add-point:BEFORE FIELD rtkk002
            {<point name="construct.b.page4.rtkk002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkk002
            
            #add-point:AFTER FIELD rtkk002
            {<point name="construct.a.page4.rtkk002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.rtkk002
         ON ACTION controlp INFIELD rtkk002
            #add-point:ON ACTION controlp INFIELD rtkk002
            {<point name="construct.c.page4.rtkk002" />}
            #END add-point
 
         #----<<rtkk003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkk003
            #add-point:BEFORE FIELD rtkk003
            {<point name="construct.b.page4.rtkk003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkk003
            
            #add-point:AFTER FIELD rtkk003
            {<point name="construct.a.page4.rtkk003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.rtkk003
         ON ACTION controlp INFIELD rtkk003
            #add-point:ON ACTION controlp INFIELD rtkk003
            {<point name="construct.c.page4.rtkk003" />}
            #END add-point
 
         #----<<rtkk004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkk004
            #add-point:BEFORE FIELD rtkk004
            {<point name="construct.b.page4.rtkk004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkk004
            
            #add-point:AFTER FIELD rtkk004
            {<point name="construct.a.page4.rtkk004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.rtkk004
         ON ACTION controlp INFIELD rtkk004
            #add-point:ON ACTION controlp INFIELD rtkk004
            {<point name="construct.c.page4.rtkk004" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="artm740.default_search" ver="1" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION artm740_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " rtkh001 = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="artm740.delete" ver="6" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION artm740_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_rtkh_m.rtkh001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE artm740_master_referesh USING g_rtkh_m.rtkh001 INTO g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001,g_rtkh_m.rtkhstus, 
       g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007, 
       g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013, 
       g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhcnfid,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt 

   
   LET g_master_multi_table_t.rtkhl001 = g_rtkh_m.rtkh001
LET g_master_multi_table_t.rtkhl003 = g_rtkh_m.rtkhl003
LET g_master_multi_table_t.rtkhl004 = g_rtkh_m.rtkhl004
 
 
   CALL artm740_show()
   
   CALL s_transaction_begin()
 
   OPEN artm740_cl USING g_enterprise,g_rtkh_m.rtkh001
 
   IF STATUS THEN
      CALL cl_err("OPEN artm740_cl:", STATUS, 1)
      CLOSE artm740_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH artm740_cl INTO g_rtkh_m.rtkhunit,g_rtkh_m.rtkhunit_desc,g_rtkh_m.rtkh001,g_rtkh_m.rtkhl003, 
       g_rtkh_m.rtkhl004,g_rtkh_m.rtkhstus,g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005, 
       g_rtkh_m.rtkh005_desc,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007,g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010, 
       g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013,g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhownid_desc, 
       g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhowndp_desc,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtid_desc,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdp_desc,g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhmodid_desc,g_rtkh_m.rtkhcnfid, 
       g_rtkh_m.rtkhcnfid_desc,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt              #鎖住將被更改或取消的資料 

   IF SQLCA.sqlcode THEN
      CALL cl_err(g_rtkh_m.rtkh001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL artm740_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_rtkh001_t = g_rtkh_m.rtkh001
 
 
      DELETE FROM rtkh_t
       WHERE rtkhent = g_enterprise AND rtkh001 = g_rtkh_m.rtkh001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_rtkh_m.rtkh001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM rtki_t
       WHERE rtkient = g_enterprise AND rtki001 = g_rtkh_m.rtkh001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("rtki_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM rtkj_t
       WHERE rtkjent = g_enterprise AND
             rtkj001 = g_rtkh_m.rtkh001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("rtkj_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM rtkl_t
       WHERE rtklent = g_enterprise AND
             rtkl001 = g_rtkh_m.rtkh001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("rtkl_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM rtkk_t
       WHERE rtkkent = g_enterprise AND
             rtkk001 = g_rtkh_m.rtkh001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("rtkk_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_rtki_d.clear() 
      CALL g_rtki2_d.clear()       
      CALL g_rtki3_d.clear()       
      CALL g_rtki4_d.clear()       
 
     
      #CALL artm740_ui_browser_refresh()  
      CALL artm740_ui_headershow()  
      CALL artm740_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL artm740_browser_fill("")
         CALL artm740_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL artm740_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.rtkhl001
   LET l_field_keys[01] = 'rtkhl001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'rtkhl002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'rtkhl_t')
 
      
      #單身多語言刪除
      
      
 
      
 
      
 
 
 
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE artm740_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_rtkh_m.rtkh001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="artm740.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION artm740_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM rtki_t
       WHERE rtkient = g_enterprise AND
         rtki001 = ps_keys_bak[1] AND rtki002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM rtkj_t
       WHERE rtkjent = g_enterprise AND
         rtkj001 = ps_keys_bak[1] AND rtkj002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("rtkj_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM rtkl_t
       WHERE rtklent = g_enterprise AND
         rtkl001 = ps_keys_bak[1] AND rtkl002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("rtkl_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM rtkk_t
       WHERE rtkkent = g_enterprise AND
         rtkk001 = ps_keys_bak[1] AND rtkk002 = ps_keys_bak[2] AND rtkk003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("rtkk_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="artm740.description" ver="145" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000145
#+ 
#+ Filename...: artm740
#+ Description: 自動補貨補貨數據模型維護作業
#+ Creator....: 04226(2014/04/21)
#+ Modifier...: 04226(2014/04/21)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="artm740.detail_reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION artm740_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE rtki_t.*
   DEFINE l_detail2    RECORD LIKE rtkj_t.*
 
   DEFINE l_detail3    RECORD LIKE rtkl_t.*
 
   DEFINE l_detail4    RECORD LIKE rtkk_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE artm740_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE artm740_detail AS ",
                "SELECT * FROM rtki_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO artm740_detail SELECT * FROM rtki_t 
                                         WHERE rtkient = g_enterprise AND rtki001 = g_rtkh001_t
 
   
   #將key修正為調整後   
   UPDATE artm740_detail 
      #更新key欄位
      SET rtki001 = g_rtkh_m.rtkh001
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO rtki_t SELECT * FROM artm740_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artm740_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE artm740_detail AS ",
      "SELECT * FROM rtkj_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO artm740_detail SELECT * FROM rtkj_t
                                         WHERE rtkjent = g_enterprise AND rtkj001 = g_rtkh001_t
 
 
   #將key修正為調整後   
   UPDATE artm740_detail SET rtkj001 = g_rtkh_m.rtkh001
 
  
   #將資料塞回原table   
   INSERT INTO rtkj_t SELECT * FROM artm740_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artm740_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE artm740_detail AS ",
      "SELECT * FROM rtkl_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO artm740_detail SELECT * FROM rtkl_t
                                         WHERE rtklent = g_enterprise AND rtkl001 = g_rtkh001_t
 
 
   #將key修正為調整後   
   UPDATE artm740_detail SET rtkl001 = g_rtkh_m.rtkh001
 
  
   #將資料塞回原table   
   INSERT INTO rtkl_t SELECT * FROM artm740_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artm740_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE artm740_detail AS ",
      "SELECT * FROM rtkk_t "
   PREPARE repro_tbl4 FROM ls_sql
   EXECUTE repro_tbl4
   FREE repro_tbl4
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO artm740_detail SELECT * FROM rtkk_t
                                         WHERE rtkkent = g_enterprise AND rtkk001 = g_rtkh001_t
 
 
   #將key修正為調整後   
   UPDATE artm740_detail SET rtkk001 = g_rtkh_m.rtkh001
 
  
   #將資料塞回原table   
   INSERT INTO rtkk_t SELECT * FROM artm740_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artm740_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_rtkh001_t = g_rtkh_m.rtkh001
 
   
   DROP TABLE artm740_detail
   
END FUNCTION
]]>
  </section>
  <section id="artm740.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 單身reference detail_show
PRIVATE FUNCTION artm740_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="artm740.fetch" ver="3" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION artm740_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_rtkh_m.rtkh001 = g_browser[g_current_idx].b_rtkh001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE artm740_master_referesh USING g_rtkh_m.rtkh001 INTO g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001,g_rtkh_m.rtkhstus, 
       g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007, 
       g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013, 
       g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhcnfid,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt 

   IF SQLCA.sqlcode THEN
      CALL cl_err("rtkh_t",SQLCA.sqlcode,1)
      INITIALIZE g_rtkh_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL artm740_show()
 
END FUNCTION
]]>
  </section>
  <section id="artm740.fill_chk" ver="2" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION artm740_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 3 AND
      ((NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 4 AND
      ((NOT cl_null(g_wc2_table4) AND g_wc2_table4.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="artm740.filter" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION artm740_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON rtkhunit,rtkh001
                          FROM s_browse[1].b_rtkhunit,s_browse[1].b_rtkh001
 
         BEFORE CONSTRUCT
               DISPLAY artm740_filter_parser('rtkhunit') TO s_browse[1].b_rtkhunit
            DISPLAY artm740_filter_parser('rtkh001') TO s_browse[1].b_rtkh001
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL artm740_filter_show('rtkhunit')
   CALL artm740_filter_show('rtkh001')
 
END FUNCTION
]]>
  </section>
  <section id="artm740.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION artm740_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="artm740.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION artm740_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = artm740_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="artm740.global" ver="14" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
    
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_rtkh_m        RECORD
       rtkhunit LIKE rtkh_t.rtkhunit, 
   rtkhunit_desc LIKE type_t.chr80, 
   rtkh001 LIKE rtkh_t.rtkh001, 
   rtkhl003 LIKE type_t.chr500, 
   rtkhl004 LIKE type_t.chr500, 
   rtkhstus LIKE rtkh_t.rtkhstus, 
   rtkh002 LIKE rtkh_t.rtkh002, 
   rtkh003 LIKE rtkh_t.rtkh003, 
   rtkh004 LIKE rtkh_t.rtkh004, 
   rtkh005 LIKE rtkh_t.rtkh005, 
   rtkh005_desc LIKE type_t.chr80, 
   rtkh006 LIKE rtkh_t.rtkh006, 
   rtkh007 LIKE rtkh_t.rtkh007, 
   rtkh008 LIKE rtkh_t.rtkh008, 
   rtkh009 LIKE rtkh_t.rtkh009, 
   rtkh010 LIKE rtkh_t.rtkh010, 
   rtkh011 LIKE rtkh_t.rtkh011, 
   rtkh012 LIKE rtkh_t.rtkh012, 
   rtkh013 LIKE rtkh_t.rtkh013, 
   rtkh014 LIKE rtkh_t.rtkh014, 
   rtkhownid LIKE rtkh_t.rtkhownid, 
   rtkhownid_desc LIKE type_t.chr80, 
   rtkhowndp LIKE rtkh_t.rtkhowndp, 
   rtkhowndp_desc LIKE type_t.chr80, 
   rtkhcrtid LIKE rtkh_t.rtkhcrtid, 
   rtkhcrtid_desc LIKE type_t.chr80, 
   rtkhcrtdp LIKE rtkh_t.rtkhcrtdp, 
   rtkhcrtdp_desc LIKE type_t.chr80, 
   rtkhcrtdt DATETIME YEAR TO SECOND, 
   rtkhmodid LIKE rtkh_t.rtkhmodid, 
   rtkhmodid_desc LIKE type_t.chr80, 
   rtkhcnfid LIKE rtkh_t.rtkhcnfid, 
   rtkhcnfid_desc LIKE type_t.chr80, 
   rtkhmoddt DATETIME YEAR TO SECOND, 
   rtkhcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_rtki_d        RECORD
       rtkiunit LIKE rtki_t.rtkiunit, 
   rtki002 LIKE rtki_t.rtki002, 
   rtki002_desc LIKE type_t.chr500, 
   rtki003 LIKE rtki_t.rtki003, 
   rtki004 LIKE rtki_t.rtki004, 
   rtki005 LIKE rtki_t.rtki005, 
   rtki006 LIKE rtki_t.rtki006, 
   rtki007 LIKE rtki_t.rtki007
       END RECORD
PRIVATE TYPE type_g_rtki2_d RECORD
       rtkjunit LIKE rtkj_t.rtkjunit, 
   rtkj002 LIKE rtkj_t.rtkj002, 
   rtkj002_desc LIKE type_t.chr500, 
   rtkj101 LIKE rtkj_t.rtkj101, 
   rtkj102 LIKE rtkj_t.rtkj102, 
   rtkj103 LIKE rtkj_t.rtkj103, 
   rtkj104 LIKE rtkj_t.rtkj104, 
   rtkj105 LIKE rtkj_t.rtkj105, 
   rtkj106 LIKE rtkj_t.rtkj106, 
   rtkj107 LIKE rtkj_t.rtkj107, 
   rtkj108 LIKE rtkj_t.rtkj108, 
   rtkj109 LIKE rtkj_t.rtkj109, 
   rtkj110 LIKE rtkj_t.rtkj110, 
   rtkj111 LIKE rtkj_t.rtkj111, 
   rtkj112 LIKE rtkj_t.rtkj112, 
   rtkj113 LIKE rtkj_t.rtkj113, 
   rtkj114 LIKE rtkj_t.rtkj114, 
   rtkj115 LIKE rtkj_t.rtkj115, 
   rtkj116 LIKE rtkj_t.rtkj116, 
   rtkj117 LIKE rtkj_t.rtkj117, 
   rtkj118 LIKE rtkj_t.rtkj118, 
   rtkj119 LIKE rtkj_t.rtkj119, 
   rtkj120 LIKE rtkj_t.rtkj120, 
   rtkj121 LIKE rtkj_t.rtkj121, 
   rtkj122 LIKE rtkj_t.rtkj122, 
   rtkj123 LIKE rtkj_t.rtkj123, 
   rtkj124 LIKE rtkj_t.rtkj124, 
   rtkj125 LIKE rtkj_t.rtkj125, 
   rtkj126 LIKE rtkj_t.rtkj126, 
   rtkj127 LIKE rtkj_t.rtkj127, 
   rtkj128 LIKE rtkj_t.rtkj128, 
   rtkj129 LIKE rtkj_t.rtkj129, 
   rtkj130 LIKE rtkj_t.rtkj130, 
   rtkj131 LIKE rtkj_t.rtkj131, 
   rtkj132 LIKE rtkj_t.rtkj132, 
   rtkj133 LIKE rtkj_t.rtkj133, 
   rtkj134 LIKE rtkj_t.rtkj134, 
   rtkj135 LIKE rtkj_t.rtkj135, 
   rtkj136 LIKE rtkj_t.rtkj136, 
   rtkj137 LIKE rtkj_t.rtkj137, 
   rtkj138 LIKE rtkj_t.rtkj138, 
   rtkj139 LIKE rtkj_t.rtkj139, 
   rtkj140 LIKE rtkj_t.rtkj140, 
   rtkj141 LIKE rtkj_t.rtkj141, 
   rtkj142 LIKE rtkj_t.rtkj142, 
   rtkj143 LIKE rtkj_t.rtkj143, 
   rtkj144 LIKE rtkj_t.rtkj144, 
   rtkj145 LIKE rtkj_t.rtkj145, 
   rtkj146 LIKE rtkj_t.rtkj146, 
   rtkj147 LIKE rtkj_t.rtkj147, 
   rtkj148 LIKE rtkj_t.rtkj148, 
   rtkj149 LIKE rtkj_t.rtkj149, 
   rtkj150 LIKE rtkj_t.rtkj150, 
   rtkj151 LIKE rtkj_t.rtkj151, 
   rtkj152 LIKE rtkj_t.rtkj152
       END RECORD
PRIVATE TYPE type_g_rtki3_d RECORD
       rtklunit LIKE rtkl_t.rtklunit, 
   rtkl002 LIKE rtkl_t.rtkl002, 
   rtkl002_desc LIKE type_t.chr500, 
   rtkl101 LIKE rtkl_t.rtkl101, 
   rtkl102 LIKE rtkl_t.rtkl102, 
   rtkl103 LIKE rtkl_t.rtkl103, 
   rtkl104 LIKE rtkl_t.rtkl104, 
   rtkl105 LIKE rtkl_t.rtkl105, 
   rtkl106 LIKE rtkl_t.rtkl106, 
   rtkl107 LIKE rtkl_t.rtkl107
       END RECORD
PRIVATE TYPE type_g_rtki4_d RECORD
       rtkkunit LIKE rtkk_t.rtkkunit, 
   rtkk002 LIKE rtkk_t.rtkk002, 
   rtkk003 LIKE rtkk_t.rtkk003, 
   rtkk004 LIKE rtkk_t.rtkk004
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_rtkh_m          type_g_rtkh_m
DEFINE g_rtkh_m_t        type_g_rtkh_m
 
   DEFINE g_rtkh001_t LIKE rtkh_t.rtkh001
 
 
DEFINE g_rtki_d          DYNAMIC ARRAY OF type_g_rtki_d
DEFINE g_rtki_d_t        type_g_rtki_d
DEFINE g_rtki2_d   DYNAMIC ARRAY OF type_g_rtki2_d
DEFINE g_rtki2_d_t type_g_rtki2_d
DEFINE g_rtki3_d   DYNAMIC ARRAY OF type_g_rtki3_d
DEFINE g_rtki3_d_t type_g_rtki3_d
DEFINE g_rtki4_d   DYNAMIC ARRAY OF type_g_rtki4_d
DEFINE g_rtki4_d_t type_g_rtki4_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_rtkhunit LIKE rtkh_t.rtkhunit,
   b_rtkhunit_desc LIKE type_t.chr80,
      b_rtkh001 LIKE rtkh_t.rtkh001,
   b_rtkh001_desc LIKE type_t.chr80,
   b_rtkh001_desc_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_rtkhunit LIKE rtkh_t.rtkhunit,
   b_rtkhunit_desc LIKE type_t.chr80,
      b_rtkh001 LIKE rtkh_t.rtkh001,
   b_rtkh001_desc LIKE type_t.chr80,
   b_rtkh001_desc_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      rtkhl001 LIKE rtkhl_t.rtkhl001,
      rtkhl003 LIKE rtkhl_t.rtkhl003,
      rtkhl004 LIKE rtkhl_t.rtkhl004
      END RECORD
#無單身append欄位定義
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="artm740.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION artm740_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_rtki_d.getLength() THEN
         LET g_detail_idx = g_rtki_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtki_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtki_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_rtki2_d.getLength() THEN
         LET g_detail_idx = g_rtki2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtki2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtki2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_rtki3_d.getLength() THEN
         LET g_detail_idx = g_rtki3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtki3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtki3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_rtki4_d.getLength() THEN
         LET g_detail_idx = g_rtki4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtki4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtki4_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="artm740.init" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION artm740_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('rtkhstus','50','N,X,Y')
 
      CALL cl_set_combo_scc('rtkh002','6301') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL artm740_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="artm740.input" ver="4" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION artm740_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT rtkiunit,rtki002,'',rtki003,rtki004,rtki005,rtki006,rtki007 FROM rtki_t  
       WHERE rtkient=? AND rtki001=? AND rtki002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE artm740_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rtkjunit,rtkj002,'',rtkj101,rtkj102,rtkj103,rtkj104,rtkj105,rtkj106,rtkj107, 
       rtkj108,rtkj109,rtkj110,rtkj111,rtkj112,rtkj113,rtkj114,rtkj115,rtkj116,rtkj117,rtkj118,rtkj119, 
       rtkj120,rtkj121,rtkj122,rtkj123,rtkj124,rtkj125,rtkj126,rtkj127,rtkj128,rtkj129,rtkj130,rtkj131, 
       rtkj132,rtkj133,rtkj134,rtkj135,rtkj136,rtkj137,rtkj138,rtkj139,rtkj140,rtkj141,rtkj142,rtkj143, 
       rtkj144,rtkj145,rtkj146,rtkj147,rtkj148,rtkj149,rtkj150,rtkj151,rtkj152 FROM rtkj_t WHERE rtkjent=?  
       AND rtkj001=? AND rtkj002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE artm740_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rtklunit,rtkl002,'',rtkl101,rtkl102,rtkl103,rtkl104,rtkl105,rtkl106,rtkl107  
       FROM rtkl_t WHERE rtklent=? AND rtkl001=? AND rtkl002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE artm740_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rtkkunit,rtkk002,rtkk003,rtkk004 FROM rtkk_t WHERE rtkkent=? AND rtkk001=?  
       AND rtkk002=? AND rtkk003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE artm740_bcl4 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL artm740_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL artm740_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001,g_rtkh_m.rtkhl003,g_rtkh_m.rtkhl004,g_rtkh_m.rtkhstus, 
       g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007, 
       g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013, 
       g_rtkh_m.rtkh014
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="artm740.input.body" ver="5" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_rtki_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtki_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artm740_b_fill()
            LET g_rec_b = g_rtki_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artm740_cl USING g_enterprise,g_rtkh_m.rtkh001
 
            IF STATUS THEN
               CALL cl_err("OPEN artm740_cl:", STATUS, 1)
               CLOSE artm740_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_rtki_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtki_d[l_ac].rtki002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_rtki_d_t.* = g_rtki_d[l_ac].*  #BACKUP
               CALL artm740_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL artm740_set_no_entry_b(l_cmd)
               IF NOT artm740_lock_b("rtki_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artm740_bcl INTO g_rtki_d[l_ac].rtkiunit,g_rtki_d[l_ac].rtki002,g_rtki_d[l_ac].rtki002_desc, 
                      g_rtki_d[l_ac].rtki003,g_rtki_d[l_ac].rtki004,g_rtki_d[l_ac].rtki005,g_rtki_d[l_ac].rtki006, 
                      g_rtki_d[l_ac].rtki007
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_rtki_d_t.rtki002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL artm740_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtki_d[l_ac].* TO NULL 
                  LET g_rtki_d[l_ac].rtki003 = "1"
      LET g_rtki_d[l_ac].rtki004 = "1"
      LET g_rtki_d[l_ac].rtki005 = "1"
      LET g_rtki_d[l_ac].rtki006 = "1"
      LET g_rtki_d[l_ac].rtki007 = "1"
 
 
            LET g_rtki_d_t.* = g_rtki_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artm740_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL artm740_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtki_d[li_reproduce_target].* = g_rtki_d[li_reproduce].*
 
               LET g_rtki_d[li_reproduce_target].rtki002 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM rtki_t 
             WHERE rtkient = g_enterprise AND rtki001 = g_rtkh_m.rtkh001
 
               AND rtki002 = g_rtki_d[l_ac].rtki002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys[2] = g_rtki_d[g_detail_idx].rtki002
               CALL artm740_insert_b('rtki_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_rtki_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("rtki_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artm740_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_rtki_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_rtki_d.deleteElement(l_ac)
               NEXT FIELD rtki002
            END IF
         
            IF g_rtki_d[l_ac].rtki002 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM rtki_t
                WHERE rtkient = g_enterprise AND rtki001 = g_rtkh_m.rtkh001 AND
 
                      rtki002 = g_rtki_d_t.rtki002
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("rtki_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE artm740_bcl
               LET l_count = g_rtki_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys[2] = g_rtki_d[g_detail_idx].rtki002
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL artm740_delete_b('rtki_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<rtkiunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkiunit
            #add-point:BEFORE FIELD rtkiunit
            {<point name="input.b.page1.rtkiunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkiunit
            
            #add-point:AFTER FIELD rtkiunit
            {<point name="input.a.page1.rtkiunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkiunit
            #add-point:ON CHANGE rtkiunit
            {<point name="input.g.page1.rtkiunit" />}
            #END add-point
 
         #----<<rtki002>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtki002
            
            #add-point:AFTER FIELD rtki002
            {<point name="input.a.page1.rtki002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtki002
            #add-point:BEFORE FIELD rtki002
            {<point name="input.b.page1.rtki002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtki002
            #add-point:ON CHANGE rtki002
            {<point name="input.g.page1.rtki002" />}
            #END add-point
 
         #----<<rtki002_desc>>----
         #----<<rtki003>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtki003
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki_d[l_ac].rtki003,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtki003
            END IF
 
 
            #add-point:AFTER FIELD rtki003
            {<point name="input.a.page1.rtki003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtki003
            #add-point:BEFORE FIELD rtki003
            {<point name="input.b.page1.rtki003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtki003
            #add-point:ON CHANGE rtki003
            {<point name="input.g.page1.rtki003" />}
            #END add-point
 
         #----<<rtki004>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtki004
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki_d[l_ac].rtki004,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtki004
            END IF
 
 
            #add-point:AFTER FIELD rtki004
            {<point name="input.a.page1.rtki004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtki004
            #add-point:BEFORE FIELD rtki004
            {<point name="input.b.page1.rtki004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtki004
            #add-point:ON CHANGE rtki004
            {<point name="input.g.page1.rtki004" />}
            #END add-point
 
         #----<<rtki005>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtki005
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki_d[l_ac].rtki005,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtki005
            END IF
 
 
            #add-point:AFTER FIELD rtki005
            {<point name="input.a.page1.rtki005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtki005
            #add-point:BEFORE FIELD rtki005
            {<point name="input.b.page1.rtki005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtki005
            #add-point:ON CHANGE rtki005
            {<point name="input.g.page1.rtki005" />}
            #END add-point
 
         #----<<rtki006>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtki006
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki_d[l_ac].rtki006,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtki006
            END IF
 
 
            #add-point:AFTER FIELD rtki006
            {<point name="input.a.page1.rtki006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtki006
            #add-point:BEFORE FIELD rtki006
            {<point name="input.b.page1.rtki006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtki006
            #add-point:ON CHANGE rtki006
            {<point name="input.g.page1.rtki006" />}
            #END add-point
 
         #----<<rtki007>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtki007
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki_d[l_ac].rtki007,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtki007
            END IF
 
 
            #add-point:AFTER FIELD rtki007
            {<point name="input.a.page1.rtki007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtki007
            #add-point:BEFORE FIELD rtki007
            {<point name="input.b.page1.rtki007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtki007
            #add-point:ON CHANGE rtki007
            {<point name="input.g.page1.rtki007" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<rtkiunit>>----
         #Ctrlp:input.c.page1.rtkiunit
         ON ACTION controlp INFIELD rtkiunit
            #add-point:ON ACTION controlp INFIELD rtkiunit
            {<point name="input.c.page1.rtkiunit" />}
            #END add-point
 
         #----<<rtki002>>----
         #Ctrlp:input.c.page1.rtki002
         ON ACTION controlp INFIELD rtki002
            #add-point:ON ACTION controlp INFIELD rtki002
            {<point name="input.c.page1.rtki002" />}
            #END add-point
 
         #----<<rtki002_desc>>----
         #----<<rtki003>>----
         #Ctrlp:input.c.page1.rtki003
         ON ACTION controlp INFIELD rtki003
            #add-point:ON ACTION controlp INFIELD rtki003
            {<point name="input.c.page1.rtki003" />}
            #END add-point
 
         #----<<rtki004>>----
         #Ctrlp:input.c.page1.rtki004
         ON ACTION controlp INFIELD rtki004
            #add-point:ON ACTION controlp INFIELD rtki004
            {<point name="input.c.page1.rtki004" />}
            #END add-point
 
         #----<<rtki005>>----
         #Ctrlp:input.c.page1.rtki005
         ON ACTION controlp INFIELD rtki005
            #add-point:ON ACTION controlp INFIELD rtki005
            {<point name="input.c.page1.rtki005" />}
            #END add-point
 
         #----<<rtki006>>----
         #Ctrlp:input.c.page1.rtki006
         ON ACTION controlp INFIELD rtki006
            #add-point:ON ACTION controlp INFIELD rtki006
            {<point name="input.c.page1.rtki006" />}
            #END add-point
 
         #----<<rtki007>>----
         #Ctrlp:input.c.page1.rtki007
         ON ACTION controlp INFIELD rtki007
            #add-point:ON ACTION controlp INFIELD rtki007
            {<point name="input.c.page1.rtki007" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_rtki_d[l_ac].* = g_rtki_d_t.*
               CLOSE artm740_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_rtki_d[l_ac].rtki002,-263,1)
               LET g_rtki_d[l_ac].* = g_rtki_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE rtki_t SET (rtki001,rtkiunit,rtki002,rtki003,rtki004,rtki005,rtki006,rtki007) = (g_rtkh_m.rtkh001, 
                   g_rtki_d[l_ac].rtkiunit,g_rtki_d[l_ac].rtki002,g_rtki_d[l_ac].rtki003,g_rtki_d[l_ac].rtki004, 
                   g_rtki_d[l_ac].rtki005,g_rtki_d[l_ac].rtki006,g_rtki_d[l_ac].rtki007)
                WHERE rtkient = g_enterprise AND rtki001 = g_rtkh_m.rtkh001 
 
                  AND rtki002 = g_rtki_d_t.rtki002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("rtki_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_rtki_d[l_ac].* = g_rtki_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("rtki_t",SQLCA.sqlcode,1)
                     LET g_rtki_d[l_ac].* = g_rtki_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys_bak[1] = g_rtkh001_t
               LET gs_keys[2] = g_rtki_d[g_detail_idx].rtki002
               LET gs_keys_bak[2] = g_rtki_d_t.rtki002
               CALL artm740_update_b('rtki_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL artm740_unlock_b("rtki_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_rtki_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_rtki_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_rtki2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtki2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artm740_b_fill()
            LET g_rec_b = g_rtki2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtki2_d[l_ac].* TO NULL 
                  LET g_rtki2_d[l_ac].rtkj101 = "1"
      LET g_rtki2_d[l_ac].rtkj102 = "1"
      LET g_rtki2_d[l_ac].rtkj103 = "1"
      LET g_rtki2_d[l_ac].rtkj104 = "1"
      LET g_rtki2_d[l_ac].rtkj105 = "1"
      LET g_rtki2_d[l_ac].rtkj106 = "1"
      LET g_rtki2_d[l_ac].rtkj107 = "1"
      LET g_rtki2_d[l_ac].rtkj108 = "1"
      LET g_rtki2_d[l_ac].rtkj109 = "1"
      LET g_rtki2_d[l_ac].rtkj110 = "1"
      LET g_rtki2_d[l_ac].rtkj111 = "1"
      LET g_rtki2_d[l_ac].rtkj112 = "1"
      LET g_rtki2_d[l_ac].rtkj113 = "1"
      LET g_rtki2_d[l_ac].rtkj114 = "1"
      LET g_rtki2_d[l_ac].rtkj115 = "1"
      LET g_rtki2_d[l_ac].rtkj116 = "1"
      LET g_rtki2_d[l_ac].rtkj117 = "1"
      LET g_rtki2_d[l_ac].rtkj118 = "1"
      LET g_rtki2_d[l_ac].rtkj119 = "1"
      LET g_rtki2_d[l_ac].rtkj120 = "1"
      LET g_rtki2_d[l_ac].rtkj121 = "1"
      LET g_rtki2_d[l_ac].rtkj122 = "1"
      LET g_rtki2_d[l_ac].rtkj123 = "1"
      LET g_rtki2_d[l_ac].rtkj124 = "1"
      LET g_rtki2_d[l_ac].rtkj125 = "1"
      LET g_rtki2_d[l_ac].rtkj126 = "1"
      LET g_rtki2_d[l_ac].rtkj127 = "1"
      LET g_rtki2_d[l_ac].rtkj128 = "1"
      LET g_rtki2_d[l_ac].rtkj129 = "1"
      LET g_rtki2_d[l_ac].rtkj130 = "1"
      LET g_rtki2_d[l_ac].rtkj131 = "1"
      LET g_rtki2_d[l_ac].rtkj132 = "1"
      LET g_rtki2_d[l_ac].rtkj133 = "1"
      LET g_rtki2_d[l_ac].rtkj134 = "1"
      LET g_rtki2_d[l_ac].rtkj135 = "1"
      LET g_rtki2_d[l_ac].rtkj136 = "1"
      LET g_rtki2_d[l_ac].rtkj137 = "1"
      LET g_rtki2_d[l_ac].rtkj138 = "1"
      LET g_rtki2_d[l_ac].rtkj139 = "1"
      LET g_rtki2_d[l_ac].rtkj140 = "1"
      LET g_rtki2_d[l_ac].rtkj141 = "1"
      LET g_rtki2_d[l_ac].rtkj142 = "1"
      LET g_rtki2_d[l_ac].rtkj143 = "1"
      LET g_rtki2_d[l_ac].rtkj144 = "1"
      LET g_rtki2_d[l_ac].rtkj145 = "1"
      LET g_rtki2_d[l_ac].rtkj146 = "1"
      LET g_rtki2_d[l_ac].rtkj147 = "1"
      LET g_rtki2_d[l_ac].rtkj148 = "1"
      LET g_rtki2_d[l_ac].rtkj149 = "1"
      LET g_rtki2_d[l_ac].rtkj150 = "1"
      LET g_rtki2_d[l_ac].rtkj151 = "1"
      LET g_rtki2_d[l_ac].rtkj152 = "1"
 
 
            LET g_rtki2_d_t.* = g_rtki2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artm740_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL artm740_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtki2_d[li_reproduce_target].* = g_rtki2_d[li_reproduce].*
 
               LET g_rtki2_d[li_reproduce_target].rtkj002 = NULL
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artm740_cl USING g_enterprise,g_rtkh_m.rtkh001
            IF STATUS THEN
               CALL cl_err("OPEN artm740_cl:", STATUS, 1)
               CLOSE artm740_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_rtki2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtki2_d[l_ac].rtkj002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_rtki2_d_t.* = g_rtki2_d[l_ac].*  #BACKUP
               CALL artm740_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL artm740_set_no_entry_b(l_cmd)
               IF NOT artm740_lock_b("rtkj_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artm740_bcl2 INTO g_rtki2_d[l_ac].rtkjunit,g_rtki2_d[l_ac].rtkj002,g_rtki2_d[l_ac].rtkj002_desc, 
                      g_rtki2_d[l_ac].rtkj101,g_rtki2_d[l_ac].rtkj102,g_rtki2_d[l_ac].rtkj103,g_rtki2_d[l_ac].rtkj104, 
                      g_rtki2_d[l_ac].rtkj105,g_rtki2_d[l_ac].rtkj106,g_rtki2_d[l_ac].rtkj107,g_rtki2_d[l_ac].rtkj108, 
                      g_rtki2_d[l_ac].rtkj109,g_rtki2_d[l_ac].rtkj110,g_rtki2_d[l_ac].rtkj111,g_rtki2_d[l_ac].rtkj112, 
                      g_rtki2_d[l_ac].rtkj113,g_rtki2_d[l_ac].rtkj114,g_rtki2_d[l_ac].rtkj115,g_rtki2_d[l_ac].rtkj116, 
                      g_rtki2_d[l_ac].rtkj117,g_rtki2_d[l_ac].rtkj118,g_rtki2_d[l_ac].rtkj119,g_rtki2_d[l_ac].rtkj120, 
                      g_rtki2_d[l_ac].rtkj121,g_rtki2_d[l_ac].rtkj122,g_rtki2_d[l_ac].rtkj123,g_rtki2_d[l_ac].rtkj124, 
                      g_rtki2_d[l_ac].rtkj125,g_rtki2_d[l_ac].rtkj126,g_rtki2_d[l_ac].rtkj127,g_rtki2_d[l_ac].rtkj128, 
                      g_rtki2_d[l_ac].rtkj129,g_rtki2_d[l_ac].rtkj130,g_rtki2_d[l_ac].rtkj131,g_rtki2_d[l_ac].rtkj132, 
                      g_rtki2_d[l_ac].rtkj133,g_rtki2_d[l_ac].rtkj134,g_rtki2_d[l_ac].rtkj135,g_rtki2_d[l_ac].rtkj136, 
                      g_rtki2_d[l_ac].rtkj137,g_rtki2_d[l_ac].rtkj138,g_rtki2_d[l_ac].rtkj139,g_rtki2_d[l_ac].rtkj140, 
                      g_rtki2_d[l_ac].rtkj141,g_rtki2_d[l_ac].rtkj142,g_rtki2_d[l_ac].rtkj143,g_rtki2_d[l_ac].rtkj144, 
                      g_rtki2_d[l_ac].rtkj145,g_rtki2_d[l_ac].rtkj146,g_rtki2_d[l_ac].rtkj147,g_rtki2_d[l_ac].rtkj148, 
                      g_rtki2_d[l_ac].rtkj149,g_rtki2_d[l_ac].rtkj150,g_rtki2_d[l_ac].rtkj151,g_rtki2_d[l_ac].rtkj152 

                   IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL artm740_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_rtki2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_rtki2_d.deleteElement(l_ac)
               NEXT FIELD rtkj002
            END IF
         
            IF g_rtki2_d[l_ac].rtkj002 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM rtkj_t
                WHERE rtkjent = g_enterprise AND rtkj001 = g_rtkh_m.rtkh001 AND
                      rtkj002 = g_rtki2_d_t.rtkj002
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("rtki_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE artm740_bcl
               LET l_count = g_rtki_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys[2] = g_rtki2_d[g_detail_idx].rtkj002
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL artm740_delete_b('rtkj_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM rtkj_t 
             WHERE rtkjent = g_enterprise AND rtkj001 = g_rtkh_m.rtkh001
               AND rtkj002 = g_rtki2_d[l_ac].rtkj002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys[2] = g_rtki2_d[g_detail_idx].rtkj002
               CALL artm740_insert_b('rtkj_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_rtki_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("rtkj_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artm740_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_rtki2_d[l_ac].* = g_rtki2_d_t.*
               CLOSE artm740_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_rtki2_d[l_ac].* = g_rtki2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE rtkj_t SET (rtkj001,rtkjunit,rtkj002,rtkj101,rtkj102,rtkj103,rtkj104,rtkj105,rtkj106, 
                   rtkj107,rtkj108,rtkj109,rtkj110,rtkj111,rtkj112,rtkj113,rtkj114,rtkj115,rtkj116,rtkj117, 
                   rtkj118,rtkj119,rtkj120,rtkj121,rtkj122,rtkj123,rtkj124,rtkj125,rtkj126,rtkj127,rtkj128, 
                   rtkj129,rtkj130,rtkj131,rtkj132,rtkj133,rtkj134,rtkj135,rtkj136,rtkj137,rtkj138,rtkj139, 
                   rtkj140,rtkj141,rtkj142,rtkj143,rtkj144,rtkj145,rtkj146,rtkj147,rtkj148,rtkj149,rtkj150, 
                   rtkj151,rtkj152) = (g_rtkh_m.rtkh001,g_rtki2_d[l_ac].rtkjunit,g_rtki2_d[l_ac].rtkj002, 
                   g_rtki2_d[l_ac].rtkj101,g_rtki2_d[l_ac].rtkj102,g_rtki2_d[l_ac].rtkj103,g_rtki2_d[l_ac].rtkj104, 
                   g_rtki2_d[l_ac].rtkj105,g_rtki2_d[l_ac].rtkj106,g_rtki2_d[l_ac].rtkj107,g_rtki2_d[l_ac].rtkj108, 
                   g_rtki2_d[l_ac].rtkj109,g_rtki2_d[l_ac].rtkj110,g_rtki2_d[l_ac].rtkj111,g_rtki2_d[l_ac].rtkj112, 
                   g_rtki2_d[l_ac].rtkj113,g_rtki2_d[l_ac].rtkj114,g_rtki2_d[l_ac].rtkj115,g_rtki2_d[l_ac].rtkj116, 
                   g_rtki2_d[l_ac].rtkj117,g_rtki2_d[l_ac].rtkj118,g_rtki2_d[l_ac].rtkj119,g_rtki2_d[l_ac].rtkj120, 
                   g_rtki2_d[l_ac].rtkj121,g_rtki2_d[l_ac].rtkj122,g_rtki2_d[l_ac].rtkj123,g_rtki2_d[l_ac].rtkj124, 
                   g_rtki2_d[l_ac].rtkj125,g_rtki2_d[l_ac].rtkj126,g_rtki2_d[l_ac].rtkj127,g_rtki2_d[l_ac].rtkj128, 
                   g_rtki2_d[l_ac].rtkj129,g_rtki2_d[l_ac].rtkj130,g_rtki2_d[l_ac].rtkj131,g_rtki2_d[l_ac].rtkj132, 
                   g_rtki2_d[l_ac].rtkj133,g_rtki2_d[l_ac].rtkj134,g_rtki2_d[l_ac].rtkj135,g_rtki2_d[l_ac].rtkj136, 
                   g_rtki2_d[l_ac].rtkj137,g_rtki2_d[l_ac].rtkj138,g_rtki2_d[l_ac].rtkj139,g_rtki2_d[l_ac].rtkj140, 
                   g_rtki2_d[l_ac].rtkj141,g_rtki2_d[l_ac].rtkj142,g_rtki2_d[l_ac].rtkj143,g_rtki2_d[l_ac].rtkj144, 
                   g_rtki2_d[l_ac].rtkj145,g_rtki2_d[l_ac].rtkj146,g_rtki2_d[l_ac].rtkj147,g_rtki2_d[l_ac].rtkj148, 
                   g_rtki2_d[l_ac].rtkj149,g_rtki2_d[l_ac].rtkj150,g_rtki2_d[l_ac].rtkj151,g_rtki2_d[l_ac].rtkj152)  
                   #自訂欄位頁簽
                WHERE rtkjent = g_enterprise AND rtkj001 = g_rtkh_m.rtkh001
                  AND rtkj002 = g_rtki2_d_t.rtkj002 #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("rtkj_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_rtki2_d[l_ac].* = g_rtki2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("rtkj_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_rtki2_d[l_ac].* = g_rtki2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys_bak[1] = g_rtkh001_t
               LET gs_keys[2] = g_rtki2_d[g_detail_idx].rtkj002
               LET gs_keys_bak[2] = g_rtki2_d_t.rtkj002
               CALL artm740_update_b('rtkj_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
         #---------------------<  Detail: page2  >---------------------
         #----<<rtkjunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkjunit
            #add-point:BEFORE FIELD rtkjunit
            {<point name="input.b.page2.rtkjunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkjunit
            
            #add-point:AFTER FIELD rtkjunit
            {<point name="input.a.page2.rtkjunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkjunit
            #add-point:ON CHANGE rtkjunit
            {<point name="input.g.page2.rtkjunit" />}
            #END add-point
 
         #----<<rtkj002>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj002
            
            #add-point:AFTER FIELD rtkj002
            {<point name="input.a.page2.rtkj002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj002
            #add-point:BEFORE FIELD rtkj002
            {<point name="input.b.page2.rtkj002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj002
            #add-point:ON CHANGE rtkj002
            {<point name="input.g.page2.rtkj002" />}
            #END add-point
 
         #----<<rtkj002_desc>>----
         #----<<rtkj101>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj101
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj101,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj101
            END IF
 
 
            #add-point:AFTER FIELD rtkj101
            {<point name="input.a.page2.rtkj101" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj101
            #add-point:BEFORE FIELD rtkj101
            {<point name="input.b.page2.rtkj101" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj101
            #add-point:ON CHANGE rtkj101
            {<point name="input.g.page2.rtkj101" />}
            #END add-point
 
         #----<<rtkj102>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj102
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj102,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj102
            END IF
 
 
            #add-point:AFTER FIELD rtkj102
            {<point name="input.a.page2.rtkj102" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj102
            #add-point:BEFORE FIELD rtkj102
            {<point name="input.b.page2.rtkj102" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj102
            #add-point:ON CHANGE rtkj102
            {<point name="input.g.page2.rtkj102" />}
            #END add-point
 
         #----<<rtkj103>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj103
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj103,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj103
            END IF
 
 
            #add-point:AFTER FIELD rtkj103
            {<point name="input.a.page2.rtkj103" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj103
            #add-point:BEFORE FIELD rtkj103
            {<point name="input.b.page2.rtkj103" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj103
            #add-point:ON CHANGE rtkj103
            {<point name="input.g.page2.rtkj103" />}
            #END add-point
 
         #----<<rtkj104>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj104
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj104,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj104
            END IF
 
 
            #add-point:AFTER FIELD rtkj104
            {<point name="input.a.page2.rtkj104" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj104
            #add-point:BEFORE FIELD rtkj104
            {<point name="input.b.page2.rtkj104" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj104
            #add-point:ON CHANGE rtkj104
            {<point name="input.g.page2.rtkj104" />}
            #END add-point
 
         #----<<rtkj105>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj105
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj105,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj105
            END IF
 
 
            #add-point:AFTER FIELD rtkj105
            {<point name="input.a.page2.rtkj105" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj105
            #add-point:BEFORE FIELD rtkj105
            {<point name="input.b.page2.rtkj105" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj105
            #add-point:ON CHANGE rtkj105
            {<point name="input.g.page2.rtkj105" />}
            #END add-point
 
         #----<<rtkj106>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj106
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj106,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj106
            END IF
 
 
            #add-point:AFTER FIELD rtkj106
            {<point name="input.a.page2.rtkj106" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj106
            #add-point:BEFORE FIELD rtkj106
            {<point name="input.b.page2.rtkj106" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj106
            #add-point:ON CHANGE rtkj106
            {<point name="input.g.page2.rtkj106" />}
            #END add-point
 
         #----<<rtkj107>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj107
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj107,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj107
            END IF
 
 
            #add-point:AFTER FIELD rtkj107
            {<point name="input.a.page2.rtkj107" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj107
            #add-point:BEFORE FIELD rtkj107
            {<point name="input.b.page2.rtkj107" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj107
            #add-point:ON CHANGE rtkj107
            {<point name="input.g.page2.rtkj107" />}
            #END add-point
 
         #----<<rtkj108>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj108
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj108,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj108
            END IF
 
 
            #add-point:AFTER FIELD rtkj108
            {<point name="input.a.page2.rtkj108" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj108
            #add-point:BEFORE FIELD rtkj108
            {<point name="input.b.page2.rtkj108" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj108
            #add-point:ON CHANGE rtkj108
            {<point name="input.g.page2.rtkj108" />}
            #END add-point
 
         #----<<rtkj109>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj109
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj109,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj109
            END IF
 
 
            #add-point:AFTER FIELD rtkj109
            {<point name="input.a.page2.rtkj109" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj109
            #add-point:BEFORE FIELD rtkj109
            {<point name="input.b.page2.rtkj109" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj109
            #add-point:ON CHANGE rtkj109
            {<point name="input.g.page2.rtkj109" />}
            #END add-point
 
         #----<<rtkj110>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj110
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj110,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj110
            END IF
 
 
            #add-point:AFTER FIELD rtkj110
            {<point name="input.a.page2.rtkj110" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj110
            #add-point:BEFORE FIELD rtkj110
            {<point name="input.b.page2.rtkj110" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj110
            #add-point:ON CHANGE rtkj110
            {<point name="input.g.page2.rtkj110" />}
            #END add-point
 
         #----<<rtkj111>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj111
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj111,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj111
            END IF
 
 
            #add-point:AFTER FIELD rtkj111
            {<point name="input.a.page2.rtkj111" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj111
            #add-point:BEFORE FIELD rtkj111
            {<point name="input.b.page2.rtkj111" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj111
            #add-point:ON CHANGE rtkj111
            {<point name="input.g.page2.rtkj111" />}
            #END add-point
 
         #----<<rtkj112>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj112
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj112,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj112
            END IF
 
 
            #add-point:AFTER FIELD rtkj112
            {<point name="input.a.page2.rtkj112" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj112
            #add-point:BEFORE FIELD rtkj112
            {<point name="input.b.page2.rtkj112" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj112
            #add-point:ON CHANGE rtkj112
            {<point name="input.g.page2.rtkj112" />}
            #END add-point
 
         #----<<rtkj113>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj113
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj113,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj113
            END IF
 
 
            #add-point:AFTER FIELD rtkj113
            {<point name="input.a.page2.rtkj113" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj113
            #add-point:BEFORE FIELD rtkj113
            {<point name="input.b.page2.rtkj113" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj113
            #add-point:ON CHANGE rtkj113
            {<point name="input.g.page2.rtkj113" />}
            #END add-point
 
         #----<<rtkj114>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj114
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj114,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj114
            END IF
 
 
            #add-point:AFTER FIELD rtkj114
            {<point name="input.a.page2.rtkj114" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj114
            #add-point:BEFORE FIELD rtkj114
            {<point name="input.b.page2.rtkj114" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj114
            #add-point:ON CHANGE rtkj114
            {<point name="input.g.page2.rtkj114" />}
            #END add-point
 
         #----<<rtkj115>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj115
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj115,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj115
            END IF
 
 
            #add-point:AFTER FIELD rtkj115
            {<point name="input.a.page2.rtkj115" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj115
            #add-point:BEFORE FIELD rtkj115
            {<point name="input.b.page2.rtkj115" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj115
            #add-point:ON CHANGE rtkj115
            {<point name="input.g.page2.rtkj115" />}
            #END add-point
 
         #----<<rtkj116>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj116
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj116,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj116
            END IF
 
 
            #add-point:AFTER FIELD rtkj116
            {<point name="input.a.page2.rtkj116" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj116
            #add-point:BEFORE FIELD rtkj116
            {<point name="input.b.page2.rtkj116" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj116
            #add-point:ON CHANGE rtkj116
            {<point name="input.g.page2.rtkj116" />}
            #END add-point
 
         #----<<rtkj117>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj117
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj117,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj117
            END IF
 
 
            #add-point:AFTER FIELD rtkj117
            {<point name="input.a.page2.rtkj117" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj117
            #add-point:BEFORE FIELD rtkj117
            {<point name="input.b.page2.rtkj117" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj117
            #add-point:ON CHANGE rtkj117
            {<point name="input.g.page2.rtkj117" />}
            #END add-point
 
         #----<<rtkj118>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj118
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj118,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj118
            END IF
 
 
            #add-point:AFTER FIELD rtkj118
            {<point name="input.a.page2.rtkj118" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj118
            #add-point:BEFORE FIELD rtkj118
            {<point name="input.b.page2.rtkj118" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj118
            #add-point:ON CHANGE rtkj118
            {<point name="input.g.page2.rtkj118" />}
            #END add-point
 
         #----<<rtkj119>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj119
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj119,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj119
            END IF
 
 
            #add-point:AFTER FIELD rtkj119
            {<point name="input.a.page2.rtkj119" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj119
            #add-point:BEFORE FIELD rtkj119
            {<point name="input.b.page2.rtkj119" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj119
            #add-point:ON CHANGE rtkj119
            {<point name="input.g.page2.rtkj119" />}
            #END add-point
 
         #----<<rtkj120>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj120
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj120,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj120
            END IF
 
 
            #add-point:AFTER FIELD rtkj120
            {<point name="input.a.page2.rtkj120" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj120
            #add-point:BEFORE FIELD rtkj120
            {<point name="input.b.page2.rtkj120" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj120
            #add-point:ON CHANGE rtkj120
            {<point name="input.g.page2.rtkj120" />}
            #END add-point
 
         #----<<rtkj121>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj121
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj121,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj121
            END IF
 
 
            #add-point:AFTER FIELD rtkj121
            {<point name="input.a.page2.rtkj121" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj121
            #add-point:BEFORE FIELD rtkj121
            {<point name="input.b.page2.rtkj121" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj121
            #add-point:ON CHANGE rtkj121
            {<point name="input.g.page2.rtkj121" />}
            #END add-point
 
         #----<<rtkj122>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj122
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj122,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj122
            END IF
 
 
            #add-point:AFTER FIELD rtkj122
            {<point name="input.a.page2.rtkj122" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj122
            #add-point:BEFORE FIELD rtkj122
            {<point name="input.b.page2.rtkj122" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj122
            #add-point:ON CHANGE rtkj122
            {<point name="input.g.page2.rtkj122" />}
            #END add-point
 
         #----<<rtkj123>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj123
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj123,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj123
            END IF
 
 
            #add-point:AFTER FIELD rtkj123
            {<point name="input.a.page2.rtkj123" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj123
            #add-point:BEFORE FIELD rtkj123
            {<point name="input.b.page2.rtkj123" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj123
            #add-point:ON CHANGE rtkj123
            {<point name="input.g.page2.rtkj123" />}
            #END add-point
 
         #----<<rtkj124>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj124
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj124,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj124
            END IF
 
 
            #add-point:AFTER FIELD rtkj124
            {<point name="input.a.page2.rtkj124" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj124
            #add-point:BEFORE FIELD rtkj124
            {<point name="input.b.page2.rtkj124" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj124
            #add-point:ON CHANGE rtkj124
            {<point name="input.g.page2.rtkj124" />}
            #END add-point
 
         #----<<rtkj125>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj125
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj125,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj125
            END IF
 
 
            #add-point:AFTER FIELD rtkj125
            {<point name="input.a.page2.rtkj125" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj125
            #add-point:BEFORE FIELD rtkj125
            {<point name="input.b.page2.rtkj125" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj125
            #add-point:ON CHANGE rtkj125
            {<point name="input.g.page2.rtkj125" />}
            #END add-point
 
         #----<<rtkj126>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj126
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj126,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj126
            END IF
 
 
            #add-point:AFTER FIELD rtkj126
            {<point name="input.a.page2.rtkj126" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj126
            #add-point:BEFORE FIELD rtkj126
            {<point name="input.b.page2.rtkj126" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj126
            #add-point:ON CHANGE rtkj126
            {<point name="input.g.page2.rtkj126" />}
            #END add-point
 
         #----<<rtkj127>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj127
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj127,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj127
            END IF
 
 
            #add-point:AFTER FIELD rtkj127
            {<point name="input.a.page2.rtkj127" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj127
            #add-point:BEFORE FIELD rtkj127
            {<point name="input.b.page2.rtkj127" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj127
            #add-point:ON CHANGE rtkj127
            {<point name="input.g.page2.rtkj127" />}
            #END add-point
 
         #----<<rtkj128>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj128
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj128,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj128
            END IF
 
 
            #add-point:AFTER FIELD rtkj128
            {<point name="input.a.page2.rtkj128" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj128
            #add-point:BEFORE FIELD rtkj128
            {<point name="input.b.page2.rtkj128" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj128
            #add-point:ON CHANGE rtkj128
            {<point name="input.g.page2.rtkj128" />}
            #END add-point
 
         #----<<rtkj129>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj129
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj129,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj129
            END IF
 
 
            #add-point:AFTER FIELD rtkj129
            {<point name="input.a.page2.rtkj129" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj129
            #add-point:BEFORE FIELD rtkj129
            {<point name="input.b.page2.rtkj129" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj129
            #add-point:ON CHANGE rtkj129
            {<point name="input.g.page2.rtkj129" />}
            #END add-point
 
         #----<<rtkj130>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj130
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj130,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj130
            END IF
 
 
            #add-point:AFTER FIELD rtkj130
            {<point name="input.a.page2.rtkj130" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj130
            #add-point:BEFORE FIELD rtkj130
            {<point name="input.b.page2.rtkj130" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj130
            #add-point:ON CHANGE rtkj130
            {<point name="input.g.page2.rtkj130" />}
            #END add-point
 
         #----<<rtkj131>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj131
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj131,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj131
            END IF
 
 
            #add-point:AFTER FIELD rtkj131
            {<point name="input.a.page2.rtkj131" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj131
            #add-point:BEFORE FIELD rtkj131
            {<point name="input.b.page2.rtkj131" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj131
            #add-point:ON CHANGE rtkj131
            {<point name="input.g.page2.rtkj131" />}
            #END add-point
 
         #----<<rtkj132>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj132
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj132,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj132
            END IF
 
 
            #add-point:AFTER FIELD rtkj132
            {<point name="input.a.page2.rtkj132" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj132
            #add-point:BEFORE FIELD rtkj132
            {<point name="input.b.page2.rtkj132" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj132
            #add-point:ON CHANGE rtkj132
            {<point name="input.g.page2.rtkj132" />}
            #END add-point
 
         #----<<rtkj133>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj133
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj133,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj133
            END IF
 
 
            #add-point:AFTER FIELD rtkj133
            {<point name="input.a.page2.rtkj133" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj133
            #add-point:BEFORE FIELD rtkj133
            {<point name="input.b.page2.rtkj133" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj133
            #add-point:ON CHANGE rtkj133
            {<point name="input.g.page2.rtkj133" />}
            #END add-point
 
         #----<<rtkj134>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj134
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj134,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj134
            END IF
 
 
            #add-point:AFTER FIELD rtkj134
            {<point name="input.a.page2.rtkj134" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj134
            #add-point:BEFORE FIELD rtkj134
            {<point name="input.b.page2.rtkj134" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj134
            #add-point:ON CHANGE rtkj134
            {<point name="input.g.page2.rtkj134" />}
            #END add-point
 
         #----<<rtkj135>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj135
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj135,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj135
            END IF
 
 
            #add-point:AFTER FIELD rtkj135
            {<point name="input.a.page2.rtkj135" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj135
            #add-point:BEFORE FIELD rtkj135
            {<point name="input.b.page2.rtkj135" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj135
            #add-point:ON CHANGE rtkj135
            {<point name="input.g.page2.rtkj135" />}
            #END add-point
 
         #----<<rtkj136>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj136
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj136,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj136
            END IF
 
 
            #add-point:AFTER FIELD rtkj136
            {<point name="input.a.page2.rtkj136" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj136
            #add-point:BEFORE FIELD rtkj136
            {<point name="input.b.page2.rtkj136" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj136
            #add-point:ON CHANGE rtkj136
            {<point name="input.g.page2.rtkj136" />}
            #END add-point
 
         #----<<rtkj137>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj137
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj137,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj137
            END IF
 
 
            #add-point:AFTER FIELD rtkj137
            {<point name="input.a.page2.rtkj137" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj137
            #add-point:BEFORE FIELD rtkj137
            {<point name="input.b.page2.rtkj137" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj137
            #add-point:ON CHANGE rtkj137
            {<point name="input.g.page2.rtkj137" />}
            #END add-point
 
         #----<<rtkj138>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj138
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj138,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj138
            END IF
 
 
            #add-point:AFTER FIELD rtkj138
            {<point name="input.a.page2.rtkj138" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj138
            #add-point:BEFORE FIELD rtkj138
            {<point name="input.b.page2.rtkj138" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj138
            #add-point:ON CHANGE rtkj138
            {<point name="input.g.page2.rtkj138" />}
            #END add-point
 
         #----<<rtkj139>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj139
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj139,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj139
            END IF
 
 
            #add-point:AFTER FIELD rtkj139
            {<point name="input.a.page2.rtkj139" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj139
            #add-point:BEFORE FIELD rtkj139
            {<point name="input.b.page2.rtkj139" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj139
            #add-point:ON CHANGE rtkj139
            {<point name="input.g.page2.rtkj139" />}
            #END add-point
 
         #----<<rtkj140>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj140
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj140,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj140
            END IF
 
 
            #add-point:AFTER FIELD rtkj140
            {<point name="input.a.page2.rtkj140" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj140
            #add-point:BEFORE FIELD rtkj140
            {<point name="input.b.page2.rtkj140" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj140
            #add-point:ON CHANGE rtkj140
            {<point name="input.g.page2.rtkj140" />}
            #END add-point
 
         #----<<rtkj141>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj141
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj141,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj141
            END IF
 
 
            #add-point:AFTER FIELD rtkj141
            {<point name="input.a.page2.rtkj141" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj141
            #add-point:BEFORE FIELD rtkj141
            {<point name="input.b.page2.rtkj141" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj141
            #add-point:ON CHANGE rtkj141
            {<point name="input.g.page2.rtkj141" />}
            #END add-point
 
         #----<<rtkj142>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj142
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj142,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj142
            END IF
 
 
            #add-point:AFTER FIELD rtkj142
            {<point name="input.a.page2.rtkj142" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj142
            #add-point:BEFORE FIELD rtkj142
            {<point name="input.b.page2.rtkj142" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj142
            #add-point:ON CHANGE rtkj142
            {<point name="input.g.page2.rtkj142" />}
            #END add-point
 
         #----<<rtkj143>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj143
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj143,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj143
            END IF
 
 
            #add-point:AFTER FIELD rtkj143
            {<point name="input.a.page2.rtkj143" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj143
            #add-point:BEFORE FIELD rtkj143
            {<point name="input.b.page2.rtkj143" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj143
            #add-point:ON CHANGE rtkj143
            {<point name="input.g.page2.rtkj143" />}
            #END add-point
 
         #----<<rtkj144>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj144
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj144,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj144
            END IF
 
 
            #add-point:AFTER FIELD rtkj144
            {<point name="input.a.page2.rtkj144" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj144
            #add-point:BEFORE FIELD rtkj144
            {<point name="input.b.page2.rtkj144" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj144
            #add-point:ON CHANGE rtkj144
            {<point name="input.g.page2.rtkj144" />}
            #END add-point
 
         #----<<rtkj145>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj145
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj145,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj145
            END IF
 
 
            #add-point:AFTER FIELD rtkj145
            {<point name="input.a.page2.rtkj145" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj145
            #add-point:BEFORE FIELD rtkj145
            {<point name="input.b.page2.rtkj145" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj145
            #add-point:ON CHANGE rtkj145
            {<point name="input.g.page2.rtkj145" />}
            #END add-point
 
         #----<<rtkj146>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj146
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj146,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj146
            END IF
 
 
            #add-point:AFTER FIELD rtkj146
            {<point name="input.a.page2.rtkj146" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj146
            #add-point:BEFORE FIELD rtkj146
            {<point name="input.b.page2.rtkj146" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj146
            #add-point:ON CHANGE rtkj146
            {<point name="input.g.page2.rtkj146" />}
            #END add-point
 
         #----<<rtkj147>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj147
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj147,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj147
            END IF
 
 
            #add-point:AFTER FIELD rtkj147
            {<point name="input.a.page2.rtkj147" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj147
            #add-point:BEFORE FIELD rtkj147
            {<point name="input.b.page2.rtkj147" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj147
            #add-point:ON CHANGE rtkj147
            {<point name="input.g.page2.rtkj147" />}
            #END add-point
 
         #----<<rtkj148>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj148
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj148,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj148
            END IF
 
 
            #add-point:AFTER FIELD rtkj148
            {<point name="input.a.page2.rtkj148" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj148
            #add-point:BEFORE FIELD rtkj148
            {<point name="input.b.page2.rtkj148" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj148
            #add-point:ON CHANGE rtkj148
            {<point name="input.g.page2.rtkj148" />}
            #END add-point
 
         #----<<rtkj149>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj149
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj149,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj149
            END IF
 
 
            #add-point:AFTER FIELD rtkj149
            {<point name="input.a.page2.rtkj149" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj149
            #add-point:BEFORE FIELD rtkj149
            {<point name="input.b.page2.rtkj149" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj149
            #add-point:ON CHANGE rtkj149
            {<point name="input.g.page2.rtkj149" />}
            #END add-point
 
         #----<<rtkj150>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj150
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj150,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj150
            END IF
 
 
            #add-point:AFTER FIELD rtkj150
            {<point name="input.a.page2.rtkj150" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj150
            #add-point:BEFORE FIELD rtkj150
            {<point name="input.b.page2.rtkj150" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj150
            #add-point:ON CHANGE rtkj150
            {<point name="input.g.page2.rtkj150" />}
            #END add-point
 
         #----<<rtkj151>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj151
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj151,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj151
            END IF
 
 
            #add-point:AFTER FIELD rtkj151
            {<point name="input.a.page2.rtkj151" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj151
            #add-point:BEFORE FIELD rtkj151
            {<point name="input.b.page2.rtkj151" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj151
            #add-point:ON CHANGE rtkj151
            {<point name="input.g.page2.rtkj151" />}
            #END add-point
 
         #----<<rtkj152>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkj152
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki2_d[l_ac].rtkj152,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj152
            END IF
 
 
            #add-point:AFTER FIELD rtkj152
            {<point name="input.a.page2.rtkj152" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkj152
            #add-point:BEFORE FIELD rtkj152
            {<point name="input.b.page2.rtkj152" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkj152
            #add-point:ON CHANGE rtkj152
            {<point name="input.g.page2.rtkj152" />}
            #END add-point
 
 
         #---------------------<  Detail: page2  >---------------------
         #----<<rtkjunit>>----
         #Ctrlp:input.c.page2.rtkjunit
         ON ACTION controlp INFIELD rtkjunit
            #add-point:ON ACTION controlp INFIELD rtkjunit
            {<point name="input.c.page2.rtkjunit" />}
            #END add-point
 
         #----<<rtkj002>>----
         #Ctrlp:input.c.page2.rtkj002
         ON ACTION controlp INFIELD rtkj002
            #add-point:ON ACTION controlp INFIELD rtkj002
            {<point name="input.c.page2.rtkj002" />}
            #END add-point
 
         #----<<rtkj002_desc>>----
         #----<<rtkj101>>----
         #Ctrlp:input.c.page2.rtkj101
         ON ACTION controlp INFIELD rtkj101
            #add-point:ON ACTION controlp INFIELD rtkj101
            {<point name="input.c.page2.rtkj101" />}
            #END add-point
 
         #----<<rtkj102>>----
         #Ctrlp:input.c.page2.rtkj102
         ON ACTION controlp INFIELD rtkj102
            #add-point:ON ACTION controlp INFIELD rtkj102
            {<point name="input.c.page2.rtkj102" />}
            #END add-point
 
         #----<<rtkj103>>----
         #Ctrlp:input.c.page2.rtkj103
         ON ACTION controlp INFIELD rtkj103
            #add-point:ON ACTION controlp INFIELD rtkj103
            {<point name="input.c.page2.rtkj103" />}
            #END add-point
 
         #----<<rtkj104>>----
         #Ctrlp:input.c.page2.rtkj104
         ON ACTION controlp INFIELD rtkj104
            #add-point:ON ACTION controlp INFIELD rtkj104
            {<point name="input.c.page2.rtkj104" />}
            #END add-point
 
         #----<<rtkj105>>----
         #Ctrlp:input.c.page2.rtkj105
         ON ACTION controlp INFIELD rtkj105
            #add-point:ON ACTION controlp INFIELD rtkj105
            {<point name="input.c.page2.rtkj105" />}
            #END add-point
 
         #----<<rtkj106>>----
         #Ctrlp:input.c.page2.rtkj106
         ON ACTION controlp INFIELD rtkj106
            #add-point:ON ACTION controlp INFIELD rtkj106
            {<point name="input.c.page2.rtkj106" />}
            #END add-point
 
         #----<<rtkj107>>----
         #Ctrlp:input.c.page2.rtkj107
         ON ACTION controlp INFIELD rtkj107
            #add-point:ON ACTION controlp INFIELD rtkj107
            {<point name="input.c.page2.rtkj107" />}
            #END add-point
 
         #----<<rtkj108>>----
         #Ctrlp:input.c.page2.rtkj108
         ON ACTION controlp INFIELD rtkj108
            #add-point:ON ACTION controlp INFIELD rtkj108
            {<point name="input.c.page2.rtkj108" />}
            #END add-point
 
         #----<<rtkj109>>----
         #Ctrlp:input.c.page2.rtkj109
         ON ACTION controlp INFIELD rtkj109
            #add-point:ON ACTION controlp INFIELD rtkj109
            {<point name="input.c.page2.rtkj109" />}
            #END add-point
 
         #----<<rtkj110>>----
         #Ctrlp:input.c.page2.rtkj110
         ON ACTION controlp INFIELD rtkj110
            #add-point:ON ACTION controlp INFIELD rtkj110
            {<point name="input.c.page2.rtkj110" />}
            #END add-point
 
         #----<<rtkj111>>----
         #Ctrlp:input.c.page2.rtkj111
         ON ACTION controlp INFIELD rtkj111
            #add-point:ON ACTION controlp INFIELD rtkj111
            {<point name="input.c.page2.rtkj111" />}
            #END add-point
 
         #----<<rtkj112>>----
         #Ctrlp:input.c.page2.rtkj112
         ON ACTION controlp INFIELD rtkj112
            #add-point:ON ACTION controlp INFIELD rtkj112
            {<point name="input.c.page2.rtkj112" />}
            #END add-point
 
         #----<<rtkj113>>----
         #Ctrlp:input.c.page2.rtkj113
         ON ACTION controlp INFIELD rtkj113
            #add-point:ON ACTION controlp INFIELD rtkj113
            {<point name="input.c.page2.rtkj113" />}
            #END add-point
 
         #----<<rtkj114>>----
         #Ctrlp:input.c.page2.rtkj114
         ON ACTION controlp INFIELD rtkj114
            #add-point:ON ACTION controlp INFIELD rtkj114
            {<point name="input.c.page2.rtkj114" />}
            #END add-point
 
         #----<<rtkj115>>----
         #Ctrlp:input.c.page2.rtkj115
         ON ACTION controlp INFIELD rtkj115
            #add-point:ON ACTION controlp INFIELD rtkj115
            {<point name="input.c.page2.rtkj115" />}
            #END add-point
 
         #----<<rtkj116>>----
         #Ctrlp:input.c.page2.rtkj116
         ON ACTION controlp INFIELD rtkj116
            #add-point:ON ACTION controlp INFIELD rtkj116
            {<point name="input.c.page2.rtkj116" />}
            #END add-point
 
         #----<<rtkj117>>----
         #Ctrlp:input.c.page2.rtkj117
         ON ACTION controlp INFIELD rtkj117
            #add-point:ON ACTION controlp INFIELD rtkj117
            {<point name="input.c.page2.rtkj117" />}
            #END add-point
 
         #----<<rtkj118>>----
         #Ctrlp:input.c.page2.rtkj118
         ON ACTION controlp INFIELD rtkj118
            #add-point:ON ACTION controlp INFIELD rtkj118
            {<point name="input.c.page2.rtkj118" />}
            #END add-point
 
         #----<<rtkj119>>----
         #Ctrlp:input.c.page2.rtkj119
         ON ACTION controlp INFIELD rtkj119
            #add-point:ON ACTION controlp INFIELD rtkj119
            {<point name="input.c.page2.rtkj119" />}
            #END add-point
 
         #----<<rtkj120>>----
         #Ctrlp:input.c.page2.rtkj120
         ON ACTION controlp INFIELD rtkj120
            #add-point:ON ACTION controlp INFIELD rtkj120
            {<point name="input.c.page2.rtkj120" />}
            #END add-point
 
         #----<<rtkj121>>----
         #Ctrlp:input.c.page2.rtkj121
         ON ACTION controlp INFIELD rtkj121
            #add-point:ON ACTION controlp INFIELD rtkj121
            {<point name="input.c.page2.rtkj121" />}
            #END add-point
 
         #----<<rtkj122>>----
         #Ctrlp:input.c.page2.rtkj122
         ON ACTION controlp INFIELD rtkj122
            #add-point:ON ACTION controlp INFIELD rtkj122
            {<point name="input.c.page2.rtkj122" />}
            #END add-point
 
         #----<<rtkj123>>----
         #Ctrlp:input.c.page2.rtkj123
         ON ACTION controlp INFIELD rtkj123
            #add-point:ON ACTION controlp INFIELD rtkj123
            {<point name="input.c.page2.rtkj123" />}
            #END add-point
 
         #----<<rtkj124>>----
         #Ctrlp:input.c.page2.rtkj124
         ON ACTION controlp INFIELD rtkj124
            #add-point:ON ACTION controlp INFIELD rtkj124
            {<point name="input.c.page2.rtkj124" />}
            #END add-point
 
         #----<<rtkj125>>----
         #Ctrlp:input.c.page2.rtkj125
         ON ACTION controlp INFIELD rtkj125
            #add-point:ON ACTION controlp INFIELD rtkj125
            {<point name="input.c.page2.rtkj125" />}
            #END add-point
 
         #----<<rtkj126>>----
         #Ctrlp:input.c.page2.rtkj126
         ON ACTION controlp INFIELD rtkj126
            #add-point:ON ACTION controlp INFIELD rtkj126
            {<point name="input.c.page2.rtkj126" />}
            #END add-point
 
         #----<<rtkj127>>----
         #Ctrlp:input.c.page2.rtkj127
         ON ACTION controlp INFIELD rtkj127
            #add-point:ON ACTION controlp INFIELD rtkj127
            {<point name="input.c.page2.rtkj127" />}
            #END add-point
 
         #----<<rtkj128>>----
         #Ctrlp:input.c.page2.rtkj128
         ON ACTION controlp INFIELD rtkj128
            #add-point:ON ACTION controlp INFIELD rtkj128
            {<point name="input.c.page2.rtkj128" />}
            #END add-point
 
         #----<<rtkj129>>----
         #Ctrlp:input.c.page2.rtkj129
         ON ACTION controlp INFIELD rtkj129
            #add-point:ON ACTION controlp INFIELD rtkj129
            {<point name="input.c.page2.rtkj129" />}
            #END add-point
 
         #----<<rtkj130>>----
         #Ctrlp:input.c.page2.rtkj130
         ON ACTION controlp INFIELD rtkj130
            #add-point:ON ACTION controlp INFIELD rtkj130
            {<point name="input.c.page2.rtkj130" />}
            #END add-point
 
         #----<<rtkj131>>----
         #Ctrlp:input.c.page2.rtkj131
         ON ACTION controlp INFIELD rtkj131
            #add-point:ON ACTION controlp INFIELD rtkj131
            {<point name="input.c.page2.rtkj131" />}
            #END add-point
 
         #----<<rtkj132>>----
         #Ctrlp:input.c.page2.rtkj132
         ON ACTION controlp INFIELD rtkj132
            #add-point:ON ACTION controlp INFIELD rtkj132
            {<point name="input.c.page2.rtkj132" />}
            #END add-point
 
         #----<<rtkj133>>----
         #Ctrlp:input.c.page2.rtkj133
         ON ACTION controlp INFIELD rtkj133
            #add-point:ON ACTION controlp INFIELD rtkj133
            {<point name="input.c.page2.rtkj133" />}
            #END add-point
 
         #----<<rtkj134>>----
         #Ctrlp:input.c.page2.rtkj134
         ON ACTION controlp INFIELD rtkj134
            #add-point:ON ACTION controlp INFIELD rtkj134
            {<point name="input.c.page2.rtkj134" />}
            #END add-point
 
         #----<<rtkj135>>----
         #Ctrlp:input.c.page2.rtkj135
         ON ACTION controlp INFIELD rtkj135
            #add-point:ON ACTION controlp INFIELD rtkj135
            {<point name="input.c.page2.rtkj135" />}
            #END add-point
 
         #----<<rtkj136>>----
         #Ctrlp:input.c.page2.rtkj136
         ON ACTION controlp INFIELD rtkj136
            #add-point:ON ACTION controlp INFIELD rtkj136
            {<point name="input.c.page2.rtkj136" />}
            #END add-point
 
         #----<<rtkj137>>----
         #Ctrlp:input.c.page2.rtkj137
         ON ACTION controlp INFIELD rtkj137
            #add-point:ON ACTION controlp INFIELD rtkj137
            {<point name="input.c.page2.rtkj137" />}
            #END add-point
 
         #----<<rtkj138>>----
         #Ctrlp:input.c.page2.rtkj138
         ON ACTION controlp INFIELD rtkj138
            #add-point:ON ACTION controlp INFIELD rtkj138
            {<point name="input.c.page2.rtkj138" />}
            #END add-point
 
         #----<<rtkj139>>----
         #Ctrlp:input.c.page2.rtkj139
         ON ACTION controlp INFIELD rtkj139
            #add-point:ON ACTION controlp INFIELD rtkj139
            {<point name="input.c.page2.rtkj139" />}
            #END add-point
 
         #----<<rtkj140>>----
         #Ctrlp:input.c.page2.rtkj140
         ON ACTION controlp INFIELD rtkj140
            #add-point:ON ACTION controlp INFIELD rtkj140
            {<point name="input.c.page2.rtkj140" />}
            #END add-point
 
         #----<<rtkj141>>----
         #Ctrlp:input.c.page2.rtkj141
         ON ACTION controlp INFIELD rtkj141
            #add-point:ON ACTION controlp INFIELD rtkj141
            {<point name="input.c.page2.rtkj141" />}
            #END add-point
 
         #----<<rtkj142>>----
         #Ctrlp:input.c.page2.rtkj142
         ON ACTION controlp INFIELD rtkj142
            #add-point:ON ACTION controlp INFIELD rtkj142
            {<point name="input.c.page2.rtkj142" />}
            #END add-point
 
         #----<<rtkj143>>----
         #Ctrlp:input.c.page2.rtkj143
         ON ACTION controlp INFIELD rtkj143
            #add-point:ON ACTION controlp INFIELD rtkj143
            {<point name="input.c.page2.rtkj143" />}
            #END add-point
 
         #----<<rtkj144>>----
         #Ctrlp:input.c.page2.rtkj144
         ON ACTION controlp INFIELD rtkj144
            #add-point:ON ACTION controlp INFIELD rtkj144
            {<point name="input.c.page2.rtkj144" />}
            #END add-point
 
         #----<<rtkj145>>----
         #Ctrlp:input.c.page2.rtkj145
         ON ACTION controlp INFIELD rtkj145
            #add-point:ON ACTION controlp INFIELD rtkj145
            {<point name="input.c.page2.rtkj145" />}
            #END add-point
 
         #----<<rtkj146>>----
         #Ctrlp:input.c.page2.rtkj146
         ON ACTION controlp INFIELD rtkj146
            #add-point:ON ACTION controlp INFIELD rtkj146
            {<point name="input.c.page2.rtkj146" />}
            #END add-point
 
         #----<<rtkj147>>----
         #Ctrlp:input.c.page2.rtkj147
         ON ACTION controlp INFIELD rtkj147
            #add-point:ON ACTION controlp INFIELD rtkj147
            {<point name="input.c.page2.rtkj147" />}
            #END add-point
 
         #----<<rtkj148>>----
         #Ctrlp:input.c.page2.rtkj148
         ON ACTION controlp INFIELD rtkj148
            #add-point:ON ACTION controlp INFIELD rtkj148
            {<point name="input.c.page2.rtkj148" />}
            #END add-point
 
         #----<<rtkj149>>----
         #Ctrlp:input.c.page2.rtkj149
         ON ACTION controlp INFIELD rtkj149
            #add-point:ON ACTION controlp INFIELD rtkj149
            {<point name="input.c.page2.rtkj149" />}
            #END add-point
 
         #----<<rtkj150>>----
         #Ctrlp:input.c.page2.rtkj150
         ON ACTION controlp INFIELD rtkj150
            #add-point:ON ACTION controlp INFIELD rtkj150
            {<point name="input.c.page2.rtkj150" />}
            #END add-point
 
         #----<<rtkj151>>----
         #Ctrlp:input.c.page2.rtkj151
         ON ACTION controlp INFIELD rtkj151
            #add-point:ON ACTION controlp INFIELD rtkj151
            {<point name="input.c.page2.rtkj151" />}
            #END add-point
 
         #----<<rtkj152>>----
         #Ctrlp:input.c.page2.rtkj152
         ON ACTION controlp INFIELD rtkj152
            #add-point:ON ACTION controlp INFIELD rtkj152
            {<point name="input.c.page2.rtkj152" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_rtki2_d[l_ac].* = g_rtki2_d_t.*
               END IF
               CLOSE artm740_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL artm740_unlock_b("rtkj_t","'2'")
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_rtki2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_rtki2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_rtki3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtki3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artm740_b_fill()
            LET g_rec_b = g_rtki3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtki3_d[l_ac].* TO NULL 
                  LET g_rtki3_d[l_ac].rtkl101 = "1"
      LET g_rtki3_d[l_ac].rtkl102 = "1"
      LET g_rtki3_d[l_ac].rtkl103 = "1"
      LET g_rtki3_d[l_ac].rtkl104 = "1"
      LET g_rtki3_d[l_ac].rtkl105 = "1"
      LET g_rtki3_d[l_ac].rtkl106 = "1"
      LET g_rtki3_d[l_ac].rtkl107 = "1"
 
 
            LET g_rtki3_d_t.* = g_rtki3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artm740_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL artm740_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtki3_d[li_reproduce_target].* = g_rtki3_d[li_reproduce].*
 
               LET g_rtki3_d[li_reproduce_target].rtkl002 = NULL
            END IF
            #公用欄位給值(單身3)
            
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artm740_cl USING g_enterprise,g_rtkh_m.rtkh001
            IF STATUS THEN
               CALL cl_err("OPEN artm740_cl:", STATUS, 1)
               CLOSE artm740_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_rtki3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtki3_d[l_ac].rtkl002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_rtki3_d_t.* = g_rtki3_d[l_ac].*  #BACKUP
               CALL artm740_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL artm740_set_no_entry_b(l_cmd)
               IF NOT artm740_lock_b("rtkl_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artm740_bcl3 INTO g_rtki3_d[l_ac].rtklunit,g_rtki3_d[l_ac].rtkl002,g_rtki3_d[l_ac].rtkl002_desc, 
                      g_rtki3_d[l_ac].rtkl101,g_rtki3_d[l_ac].rtkl102,g_rtki3_d[l_ac].rtkl103,g_rtki3_d[l_ac].rtkl104, 
                      g_rtki3_d[l_ac].rtkl105,g_rtki3_d[l_ac].rtkl106,g_rtki3_d[l_ac].rtkl107
                   IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL artm740_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_rtki3_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_rtki3_d.deleteElement(l_ac)
               NEXT FIELD rtkl002
            END IF
         
            IF g_rtki3_d[l_ac].rtkl002 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM rtkl_t
                WHERE rtklent = g_enterprise AND rtkl001 = g_rtkh_m.rtkh001 AND
                      rtkl002 = g_rtki3_d_t.rtkl002
                  
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("rtki_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身3刪除後
                  {<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE artm740_bcl
               LET l_count = g_rtki_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys[2] = g_rtki3_d[g_detail_idx].rtkl002
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body3.after_delete"/>}
            #end add-point
                           CALL artm740_delete_b('rtkl_t',gs_keys,"'3'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM rtkl_t 
             WHERE rtklent = g_enterprise AND rtkl001 = g_rtkh_m.rtkh001
               AND rtkl002 = g_rtki3_d[l_ac].rtkl002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys[2] = g_rtki3_d[g_detail_idx].rtkl002
               CALL artm740_insert_b('rtkl_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_rtki_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("rtkl_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artm740_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_rtki3_d[l_ac].* = g_rtki3_d_t.*
               CLOSE artm740_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_rtki3_d[l_ac].* = g_rtki3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               UPDATE rtkl_t SET (rtkl001,rtklunit,rtkl002,rtkl101,rtkl102,rtkl103,rtkl104,rtkl105,rtkl106, 
                   rtkl107) = (g_rtkh_m.rtkh001,g_rtki3_d[l_ac].rtklunit,g_rtki3_d[l_ac].rtkl002,g_rtki3_d[l_ac].rtkl101, 
                   g_rtki3_d[l_ac].rtkl102,g_rtki3_d[l_ac].rtkl103,g_rtki3_d[l_ac].rtkl104,g_rtki3_d[l_ac].rtkl105, 
                   g_rtki3_d[l_ac].rtkl106,g_rtki3_d[l_ac].rtkl107) #自訂欄位頁簽
                WHERE rtklent = g_enterprise AND rtkl001 = g_rtkh_m.rtkh001
                  AND rtkl002 = g_rtki3_d_t.rtkl002 #項次 
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("rtkl_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_rtki3_d[l_ac].* = g_rtki3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("rtkl_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_rtki3_d[l_ac].* = g_rtki3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys_bak[1] = g_rtkh001_t
               LET gs_keys[2] = g_rtki3_d[g_detail_idx].rtkl002
               LET gs_keys_bak[2] = g_rtki3_d_t.rtkl002
               CALL artm740_update_b('rtkl_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
         #---------------------<  Detail: page3  >---------------------
         #----<<rtklunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtklunit
            #add-point:BEFORE FIELD rtklunit
            {<point name="input.b.page3.rtklunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtklunit
            
            #add-point:AFTER FIELD rtklunit
            {<point name="input.a.page3.rtklunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtklunit
            #add-point:ON CHANGE rtklunit
            {<point name="input.g.page3.rtklunit" />}
            #END add-point
 
         #----<<rtkl002>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkl002
            
            #add-point:AFTER FIELD rtkl002
            {<point name="input.a.page3.rtkl002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkl002
            #add-point:BEFORE FIELD rtkl002
            {<point name="input.b.page3.rtkl002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkl002
            #add-point:ON CHANGE rtkl002
            {<point name="input.g.page3.rtkl002" />}
            #END add-point
 
         #----<<rtkl002_desc>>----
         #----<<rtkl101>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkl101
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki3_d[l_ac].rtkl101,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkl101
            END IF
 
 
            #add-point:AFTER FIELD rtkl101
            {<point name="input.a.page3.rtkl101" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkl101
            #add-point:BEFORE FIELD rtkl101
            {<point name="input.b.page3.rtkl101" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkl101
            #add-point:ON CHANGE rtkl101
            {<point name="input.g.page3.rtkl101" />}
            #END add-point
 
         #----<<rtkl102>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkl102
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki3_d[l_ac].rtkl102,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkl102
            END IF
 
 
            #add-point:AFTER FIELD rtkl102
            {<point name="input.a.page3.rtkl102" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkl102
            #add-point:BEFORE FIELD rtkl102
            {<point name="input.b.page3.rtkl102" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkl102
            #add-point:ON CHANGE rtkl102
            {<point name="input.g.page3.rtkl102" />}
            #END add-point
 
         #----<<rtkl103>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkl103
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki3_d[l_ac].rtkl103,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkl103
            END IF
 
 
            #add-point:AFTER FIELD rtkl103
            {<point name="input.a.page3.rtkl103" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkl103
            #add-point:BEFORE FIELD rtkl103
            {<point name="input.b.page3.rtkl103" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkl103
            #add-point:ON CHANGE rtkl103
            {<point name="input.g.page3.rtkl103" />}
            #END add-point
 
         #----<<rtkl104>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkl104
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki3_d[l_ac].rtkl104,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkl104
            END IF
 
 
            #add-point:AFTER FIELD rtkl104
            {<point name="input.a.page3.rtkl104" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkl104
            #add-point:BEFORE FIELD rtkl104
            {<point name="input.b.page3.rtkl104" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkl104
            #add-point:ON CHANGE rtkl104
            {<point name="input.g.page3.rtkl104" />}
            #END add-point
 
         #----<<rtkl105>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkl105
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki3_d[l_ac].rtkl105,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkl105
            END IF
 
 
            #add-point:AFTER FIELD rtkl105
            {<point name="input.a.page3.rtkl105" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkl105
            #add-point:BEFORE FIELD rtkl105
            {<point name="input.b.page3.rtkl105" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkl105
            #add-point:ON CHANGE rtkl105
            {<point name="input.g.page3.rtkl105" />}
            #END add-point
 
         #----<<rtkl106>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkl106
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki3_d[l_ac].rtkl106,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkl106
            END IF
 
 
            #add-point:AFTER FIELD rtkl106
            {<point name="input.a.page3.rtkl106" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkl106
            #add-point:BEFORE FIELD rtkl106
            {<point name="input.b.page3.rtkl106" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkl106
            #add-point:ON CHANGE rtkl106
            {<point name="input.g.page3.rtkl106" />}
            #END add-point
 
         #----<<rtkl107>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkl107
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki3_d[l_ac].rtkl107,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkl107
            END IF
 
 
            #add-point:AFTER FIELD rtkl107
            {<point name="input.a.page3.rtkl107" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkl107
            #add-point:BEFORE FIELD rtkl107
            {<point name="input.b.page3.rtkl107" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkl107
            #add-point:ON CHANGE rtkl107
            {<point name="input.g.page3.rtkl107" />}
            #END add-point
 
 
         #---------------------<  Detail: page3  >---------------------
         #----<<rtklunit>>----
         #Ctrlp:input.c.page3.rtklunit
         ON ACTION controlp INFIELD rtklunit
            #add-point:ON ACTION controlp INFIELD rtklunit
            {<point name="input.c.page3.rtklunit" />}
            #END add-point
 
         #----<<rtkl002>>----
         #Ctrlp:input.c.page3.rtkl002
         ON ACTION controlp INFIELD rtkl002
            #add-point:ON ACTION controlp INFIELD rtkl002
            {<point name="input.c.page3.rtkl002" />}
            #END add-point
 
         #----<<rtkl002_desc>>----
         #----<<rtkl101>>----
         #Ctrlp:input.c.page3.rtkl101
         ON ACTION controlp INFIELD rtkl101
            #add-point:ON ACTION controlp INFIELD rtkl101
            {<point name="input.c.page3.rtkl101" />}
            #END add-point
 
         #----<<rtkl102>>----
         #Ctrlp:input.c.page3.rtkl102
         ON ACTION controlp INFIELD rtkl102
            #add-point:ON ACTION controlp INFIELD rtkl102
            {<point name="input.c.page3.rtkl102" />}
            #END add-point
 
         #----<<rtkl103>>----
         #Ctrlp:input.c.page3.rtkl103
         ON ACTION controlp INFIELD rtkl103
            #add-point:ON ACTION controlp INFIELD rtkl103
            {<point name="input.c.page3.rtkl103" />}
            #END add-point
 
         #----<<rtkl104>>----
         #Ctrlp:input.c.page3.rtkl104
         ON ACTION controlp INFIELD rtkl104
            #add-point:ON ACTION controlp INFIELD rtkl104
            {<point name="input.c.page3.rtkl104" />}
            #END add-point
 
         #----<<rtkl105>>----
         #Ctrlp:input.c.page3.rtkl105
         ON ACTION controlp INFIELD rtkl105
            #add-point:ON ACTION controlp INFIELD rtkl105
            {<point name="input.c.page3.rtkl105" />}
            #END add-point
 
         #----<<rtkl106>>----
         #Ctrlp:input.c.page3.rtkl106
         ON ACTION controlp INFIELD rtkl106
            #add-point:ON ACTION controlp INFIELD rtkl106
            {<point name="input.c.page3.rtkl106" />}
            #END add-point
 
         #----<<rtkl107>>----
         #Ctrlp:input.c.page3.rtkl107
         ON ACTION controlp INFIELD rtkl107
            #add-point:ON ACTION controlp INFIELD rtkl107
            {<point name="input.c.page3.rtkl107" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_rtki3_d[l_ac].* = g_rtki3_d_t.*
               END IF
               CLOSE artm740_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL artm740_unlock_b("rtkl_t","'3'")
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_rtki3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_rtki3_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_rtki4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtki4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artm740_b_fill()
            LET g_rec_b = g_rtki4_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtki4_d[l_ac].* TO NULL 
            
            LET g_rtki4_d_t.* = g_rtki4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artm740_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL artm740_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtki4_d[li_reproduce_target].* = g_rtki4_d[li_reproduce].*
 
               LET g_rtki4_d[li_reproduce_target].rtkk002 = NULL
               LET g_rtki4_d[li_reproduce_target].rtkk003 = NULL
            END IF
            #公用欄位給值(單身4)
            
            
            #add-point:modify段before insert
            {<point name="input.body4.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artm740_cl USING g_enterprise,g_rtkh_m.rtkh001
            IF STATUS THEN
               CALL cl_err("OPEN artm740_cl:", STATUS, 1)
               CLOSE artm740_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_rtki4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtki4_d[l_ac].rtkk002 IS NOT NULL
               AND g_rtki4_d[l_ac].rtkk003 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_rtki4_d_t.* = g_rtki4_d[l_ac].*  #BACKUP
               CALL artm740_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL artm740_set_no_entry_b(l_cmd)
               IF NOT artm740_lock_b("rtkk_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artm740_bcl4 INTO g_rtki4_d[l_ac].rtkkunit,g_rtki4_d[l_ac].rtkk002,g_rtki4_d[l_ac].rtkk003, 
                      g_rtki4_d[l_ac].rtkk004
                   IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL artm740_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_rtki4_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_rtki4_d.deleteElement(l_ac)
               NEXT FIELD rtkk002
            END IF
         
            IF g_rtki4_d[l_ac].rtkk002 IS NOT NULL
               AND g_rtki4_d_t.rtkk003 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM rtkk_t
                WHERE rtkkent = g_enterprise AND rtkk001 = g_rtkh_m.rtkh001 AND
                      rtkk002 = g_rtki4_d_t.rtkk002
                  AND rtkk003 = g_rtki4_d_t.rtkk003
                  
               #add-point:單身4刪除中
               {<point name="input.body4.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("rtki_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身4刪除後
                  {<point name="input.body4.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE artm740_bcl
               LET l_count = g_rtki_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys[2] = g_rtki4_d[g_detail_idx].rtkk002
               LET gs_keys[3] = g_rtki4_d[g_detail_idx].rtkk003
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body4.after_delete"/>}
            #end add-point
                           CALL artm740_delete_b('rtkk_t',gs_keys,"'4'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM rtkk_t 
             WHERE rtkkent = g_enterprise AND rtkk001 = g_rtkh_m.rtkh001
               AND rtkk002 = g_rtki4_d[l_ac].rtkk002
               AND rtkk003 = g_rtki4_d[l_ac].rtkk003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys[2] = g_rtki4_d[g_detail_idx].rtkk002
               LET gs_keys[3] = g_rtki4_d[g_detail_idx].rtkk003
               CALL artm740_insert_b('rtkk_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_rtki_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("rtkk_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artm740_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_rtki4_d[l_ac].* = g_rtki4_d_t.*
               CLOSE artm740_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_rtki4_d[l_ac].* = g_rtki4_d_t.*
            ELSE
               #add-point:單身page4修改前
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               UPDATE rtkk_t SET (rtkk001,rtkkunit,rtkk002,rtkk003,rtkk004) = (g_rtkh_m.rtkh001,g_rtki4_d[l_ac].rtkkunit, 
                   g_rtki4_d[l_ac].rtkk002,g_rtki4_d[l_ac].rtkk003,g_rtki4_d[l_ac].rtkk004) #自訂欄位頁簽 

                WHERE rtkkent = g_enterprise AND rtkk001 = g_rtkh_m.rtkh001
                  AND rtkk002 = g_rtki4_d_t.rtkk002 #項次 
                  AND rtkk003 = g_rtki4_d_t.rtkk003
                  
               #add-point:單身page4修改中
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("rtkk_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_rtki4_d[l_ac].* = g_rtki4_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("rtkk_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_rtki4_d[l_ac].* = g_rtki4_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys_bak[1] = g_rtkh001_t
               LET gs_keys[2] = g_rtki4_d[g_detail_idx].rtkk002
               LET gs_keys_bak[2] = g_rtki4_d_t.rtkk002
               LET gs_keys[3] = g_rtki4_d[g_detail_idx].rtkk003
               LET gs_keys_bak[3] = g_rtki4_d_t.rtkk003
               CALL artm740_update_b('rtkk_t',gs_keys,gs_keys_bak,"'4'")
                     #資料多語言用-增/改
                     
               END CASE
               #add-point:單身page4修改後
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
         #---------------------<  Detail: page4  >---------------------
         #----<<rtkkunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkkunit
            #add-point:BEFORE FIELD rtkkunit
            {<point name="input.b.page4.rtkkunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkkunit
            
            #add-point:AFTER FIELD rtkkunit
            {<point name="input.a.page4.rtkkunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkkunit
            #add-point:ON CHANGE rtkkunit
            {<point name="input.g.page4.rtkkunit" />}
            #END add-point
 
         #----<<rtkk002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkk002
            #add-point:BEFORE FIELD rtkk002
            {<point name="input.b.page4.rtkk002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkk002
            
            #add-point:AFTER FIELD rtkk002
            {<point name="input.a.page4.rtkk002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkk002
            #add-point:ON CHANGE rtkk002
            {<point name="input.g.page4.rtkk002" />}
            #END add-point
 
         #----<<rtkk003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkk003
            #add-point:BEFORE FIELD rtkk003
            {<point name="input.b.page4.rtkk003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkk003
            
            #add-point:AFTER FIELD rtkk003
            {<point name="input.a.page4.rtkk003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkk003
            #add-point:ON CHANGE rtkk003
            {<point name="input.g.page4.rtkk003" />}
            #END add-point
 
         #----<<rtkk004>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkk004
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtki4_d[l_ac].rtkk004,"0.000","1","1.000","1","azz-00087",1) THEN 

               NEXT FIELD rtkk004
            END IF
 
 
            #add-point:AFTER FIELD rtkk004
            {<point name="input.a.page4.rtkk004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkk004
            #add-point:BEFORE FIELD rtkk004
            {<point name="input.b.page4.rtkk004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkk004
            #add-point:ON CHANGE rtkk004
            {<point name="input.g.page4.rtkk004" />}
            #END add-point
 
 
         #---------------------<  Detail: page4  >---------------------
         #----<<rtkkunit>>----
         #Ctrlp:input.c.page4.rtkkunit
         ON ACTION controlp INFIELD rtkkunit
            #add-point:ON ACTION controlp INFIELD rtkkunit
            {<point name="input.c.page4.rtkkunit" />}
            #END add-point
 
         #----<<rtkk002>>----
         #Ctrlp:input.c.page4.rtkk002
         ON ACTION controlp INFIELD rtkk002
            #add-point:ON ACTION controlp INFIELD rtkk002
            {<point name="input.c.page4.rtkk002" />}
            #END add-point
 
         #----<<rtkk003>>----
         #Ctrlp:input.c.page4.rtkk003
         ON ACTION controlp INFIELD rtkk003
            #add-point:ON ACTION controlp INFIELD rtkk003
            {<point name="input.c.page4.rtkk003" />}
            #END add-point
 
         #----<<rtkk004>>----
         #Ctrlp:input.c.page4.rtkk004
         ON ACTION controlp INFIELD rtkk004
            #add-point:ON ACTION controlp INFIELD rtkk004
            {<point name="input.c.page4.rtkk004" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_rtki4_d[l_ac].* = g_rtki4_d_t.*
               END IF
               CLOSE artm740_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL artm740_unlock_b("rtkk_t","'4'")
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body4.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_rtki4_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_rtki4_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="artm740.input.head" ver="8" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001,g_rtkh_m.rtkhl003,g_rtkh_m.rtkhl004,g_rtkh_m.rtkhstus, 
          g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007, 
          g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013, 
          g_rtkh_m.rtkh014 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            LET g_master_multi_table_t.rtkhl001 = g_rtkh_m.rtkh001
LET g_master_multi_table_t.rtkhl003 = g_rtkh_m.rtkhl003
LET g_master_multi_table_t.rtkhl004 = g_rtkh_m.rtkhl004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.rtkhl001 = ''
LET g_master_multi_table_t.rtkhl003 = ''
LET g_master_multi_table_t.rtkhl004 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
         #---------------------------<  Master  >---------------------------
         #----<<rtkhunit>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkhunit
            
            #add-point:AFTER FIELD rtkhunit
            {<point name="input.a.rtkhunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhunit
            #add-point:BEFORE FIELD rtkhunit
            {<point name="input.b.rtkhunit" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkhunit
            #add-point:ON CHANGE rtkhunit
            {<point name="input.g.rtkhunit" />}
            #END add-point
 
         #----<<rtkhunit_desc>>----
         #----<<rtkh001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh001
            #add-point:BEFORE FIELD rtkh001
            {<point name="input.b.rtkh001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh001
            
            #add-point:AFTER FIELD rtkh001
            {<point name="input.a.rtkh001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkh001
            #add-point:ON CHANGE rtkh001
            {<point name="input.g.rtkh001" />}
            #END add-point
 
         #----<<rtkhl003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhl003
            #add-point:BEFORE FIELD rtkhl003
            {<point name="input.b.rtkhl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkhl003
            
            #add-point:AFTER FIELD rtkhl003
            {<point name="input.a.rtkhl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkhl003
            #add-point:ON CHANGE rtkhl003
            {<point name="input.g.rtkhl003" />}
            #END add-point
 
         #----<<rtkhl004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhl004
            #add-point:BEFORE FIELD rtkhl004
            {<point name="input.b.rtkhl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkhl004
            
            #add-point:AFTER FIELD rtkhl004
            {<point name="input.a.rtkhl004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkhl004
            #add-point:ON CHANGE rtkhl004
            {<point name="input.g.rtkhl004" />}
            #END add-point
 
         #----<<rtkhstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkhstus
            #add-point:BEFORE FIELD rtkhstus
            {<point name="input.b.rtkhstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkhstus
            
            #add-point:AFTER FIELD rtkhstus
            {<point name="input.a.rtkhstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkhstus
            #add-point:ON CHANGE rtkhstus
            {<point name="input.g.rtkhstus" />}
            #END add-point
 
         #----<<rtkh002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh002
            #add-point:BEFORE FIELD rtkh002
            {<point name="input.b.rtkh002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh002
            
            #add-point:AFTER FIELD rtkh002
            {<point name="input.a.rtkh002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkh002
            #add-point:ON CHANGE rtkh002
            {<point name="input.g.rtkh002" />}
            #END add-point
 
         #----<<rtkh003>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkh003
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtkh_m.rtkh003,"0.000","1","1.000","1","azz-00087",1) THEN
               NEXT FIELD rtkh003
            END IF
 
 
            #add-point:AFTER FIELD rtkh003
            {<point name="input.a.rtkh003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh003
            #add-point:BEFORE FIELD rtkh003
            {<point name="input.b.rtkh003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkh003
            #add-point:ON CHANGE rtkh003
            {<point name="input.g.rtkh003" />}
            #END add-point
 
         #----<<rtkh004>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkh004
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtkh_m.rtkh004,"0.000","1","1.000","1","azz-00087",1) THEN
               NEXT FIELD rtkh004
            END IF
 
 
            #add-point:AFTER FIELD rtkh004
            {<point name="input.a.rtkh004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh004
            #add-point:BEFORE FIELD rtkh004
            {<point name="input.b.rtkh004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkh004
            #add-point:ON CHANGE rtkh004
            {<point name="input.g.rtkh004" />}
            #END add-point
 
         #----<<rtkh005>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkh005
            
            #add-point:AFTER FIELD rtkh005
            {<point name="input.a.rtkh005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh005
            #add-point:BEFORE FIELD rtkh005
            {<point name="input.b.rtkh005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkh005
            #add-point:ON CHANGE rtkh005
            {<point name="input.g.rtkh005" />}
            #END add-point
 
         #----<<rtkh005_desc>>----
         #----<<rtkh006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh006
            #add-point:BEFORE FIELD rtkh006
            {<point name="input.b.rtkh006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh006
            
            #add-point:AFTER FIELD rtkh006
            {<point name="input.a.rtkh006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkh006
            #add-point:ON CHANGE rtkh006
            {<point name="input.g.rtkh006" />}
            #END add-point
 
         #----<<rtkh007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh007
            #add-point:BEFORE FIELD rtkh007
            {<point name="input.b.rtkh007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh007
            
            #add-point:AFTER FIELD rtkh007
            {<point name="input.a.rtkh007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkh007
            #add-point:ON CHANGE rtkh007
            {<point name="input.g.rtkh007" />}
            #END add-point
 
         #----<<rtkh008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh008
            #add-point:BEFORE FIELD rtkh008
            {<point name="input.b.rtkh008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh008
            
            #add-point:AFTER FIELD rtkh008
            {<point name="input.a.rtkh008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkh008
            #add-point:ON CHANGE rtkh008
            {<point name="input.g.rtkh008" />}
            #END add-point
 
         #----<<rtkh009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh009
            #add-point:BEFORE FIELD rtkh009
            {<point name="input.b.rtkh009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh009
            
            #add-point:AFTER FIELD rtkh009
            {<point name="input.a.rtkh009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkh009
            #add-point:ON CHANGE rtkh009
            {<point name="input.g.rtkh009" />}
            #END add-point
 
         #----<<rtkh010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh010
            #add-point:BEFORE FIELD rtkh010
            {<point name="input.b.rtkh010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh010
            
            #add-point:AFTER FIELD rtkh010
            {<point name="input.a.rtkh010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkh010
            #add-point:ON CHANGE rtkh010
            {<point name="input.g.rtkh010" />}
            #END add-point
 
         #----<<rtkh011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh011
            #add-point:BEFORE FIELD rtkh011
            {<point name="input.b.rtkh011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkh011
            
            #add-point:AFTER FIELD rtkh011
            {<point name="input.a.rtkh011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkh011
            #add-point:ON CHANGE rtkh011
            {<point name="input.g.rtkh011" />}
            #END add-point
 
         #----<<rtkh012>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkh012
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtkh_m.rtkh012,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtkh012
            END IF
 
 
            #add-point:AFTER FIELD rtkh012
            {<point name="input.a.rtkh012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh012
            #add-point:BEFORE FIELD rtkh012
            {<point name="input.b.rtkh012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkh012
            #add-point:ON CHANGE rtkh012
            {<point name="input.g.rtkh012" />}
            #END add-point
 
         #----<<rtkh013>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkh013
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtkh_m.rtkh013,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtkh013
            END IF
 
 
            #add-point:AFTER FIELD rtkh013
            {<point name="input.a.rtkh013" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh013
            #add-point:BEFORE FIELD rtkh013
            {<point name="input.b.rtkh013" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkh013
            #add-point:ON CHANGE rtkh013
            {<point name="input.g.rtkh013" />}
            #END add-point
 
         #----<<rtkh014>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkh014
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtkh_m.rtkh014,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtkh014
            END IF
 
 
            #add-point:AFTER FIELD rtkh014
            {<point name="input.a.rtkh014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkh014
            #add-point:BEFORE FIELD rtkh014
            {<point name="input.b.rtkh014" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkh014
            #add-point:ON CHANGE rtkh014
            {<point name="input.g.rtkh014" />}
            #END add-point
 
         #----<<rtkhownid>>----
         #----<<rtkhownid_desc>>----
         #----<<rtkhowndp>>----
         #----<<rtkhowndp_desc>>----
         #----<<rtkhcrtid>>----
         #----<<rtkhcrtid_desc>>----
         #----<<rtkhcrtdp>>----
         #----<<rtkhcrtdp_desc>>----
         #----<<rtkhcrtdt>>----
         #----<<rtkhmodid>>----
         #----<<rtkhmodid_desc>>----
         #----<<rtkhcnfid>>----
         #----<<rtkhcnfid_desc>>----
         #----<<rtkhmoddt>>----
         #----<<rtkhcnfdt>>----
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<rtkhunit>>----
         #Ctrlp:input.c.rtkhunit
         ON ACTION controlp INFIELD rtkhunit
            #add-point:ON ACTION controlp INFIELD rtkhunit
            {<point name="input.c.rtkhunit" />}
            #END add-point
 
         #----<<rtkhunit_desc>>----
         #----<<rtkh001>>----
         #Ctrlp:input.c.rtkh001
         ON ACTION controlp INFIELD rtkh001
            #add-point:ON ACTION controlp INFIELD rtkh001
            {<point name="input.c.rtkh001" />}
            #END add-point
 
         #----<<rtkhl003>>----
         #Ctrlp:input.c.rtkhl003
         ON ACTION controlp INFIELD rtkhl003
            #add-point:ON ACTION controlp INFIELD rtkhl003
            {<point name="input.c.rtkhl003" />}
            #END add-point
 
         #----<<rtkhl004>>----
         #Ctrlp:input.c.rtkhl004
         ON ACTION controlp INFIELD rtkhl004
            #add-point:ON ACTION controlp INFIELD rtkhl004
            {<point name="input.c.rtkhl004" />}
            #END add-point
 
         #----<<rtkhstus>>----
         #Ctrlp:input.c.rtkhstus
         ON ACTION controlp INFIELD rtkhstus
            #add-point:ON ACTION controlp INFIELD rtkhstus
            {<point name="input.c.rtkhstus" />}
            #END add-point
 
         #----<<rtkh002>>----
         #Ctrlp:input.c.rtkh002
         ON ACTION controlp INFIELD rtkh002
            #add-point:ON ACTION controlp INFIELD rtkh002
            {<point name="input.c.rtkh002" />}
            #END add-point
 
         #----<<rtkh003>>----
         #Ctrlp:input.c.rtkh003
         ON ACTION controlp INFIELD rtkh003
            #add-point:ON ACTION controlp INFIELD rtkh003
            {<point name="input.c.rtkh003" />}
            #END add-point
 
         #----<<rtkh004>>----
         #Ctrlp:input.c.rtkh004
         ON ACTION controlp INFIELD rtkh004
            #add-point:ON ACTION controlp INFIELD rtkh004
            {<point name="input.c.rtkh004" />}
            #END add-point
 
         #----<<rtkh005>>----
         #Ctrlp:input.c.rtkh005
         ON ACTION controlp INFIELD rtkh005
            #add-point:ON ACTION controlp INFIELD rtkh005
            {<point name="input.c.rtkh005" />}
            #END add-point
 
         #----<<rtkh005_desc>>----
         #----<<rtkh006>>----
         #Ctrlp:input.c.rtkh006
         ON ACTION controlp INFIELD rtkh006
            #add-point:ON ACTION controlp INFIELD rtkh006
            {<point name="input.c.rtkh006" />}
            #END add-point
 
         #----<<rtkh007>>----
         #Ctrlp:input.c.rtkh007
         ON ACTION controlp INFIELD rtkh007
            #add-point:ON ACTION controlp INFIELD rtkh007
            {<point name="input.c.rtkh007" />}
            #END add-point
 
         #----<<rtkh008>>----
         #Ctrlp:input.c.rtkh008
         ON ACTION controlp INFIELD rtkh008
            #add-point:ON ACTION controlp INFIELD rtkh008
            {<point name="input.c.rtkh008" />}
            #END add-point
 
         #----<<rtkh009>>----
         #Ctrlp:input.c.rtkh009
         ON ACTION controlp INFIELD rtkh009
            #add-point:ON ACTION controlp INFIELD rtkh009
            {<point name="input.c.rtkh009" />}
            #END add-point
 
         #----<<rtkh010>>----
         #Ctrlp:input.c.rtkh010
         ON ACTION controlp INFIELD rtkh010
            #add-point:ON ACTION controlp INFIELD rtkh010
            {<point name="input.c.rtkh010" />}
            #END add-point
 
         #----<<rtkh011>>----
         #Ctrlp:input.c.rtkh011
         ON ACTION controlp INFIELD rtkh011
            #add-point:ON ACTION controlp INFIELD rtkh011
            {<point name="input.c.rtkh011" />}
            #END add-point
 
         #----<<rtkh012>>----
         #Ctrlp:input.c.rtkh012
         ON ACTION controlp INFIELD rtkh012
            #add-point:ON ACTION controlp INFIELD rtkh012
            {<point name="input.c.rtkh012" />}
            #END add-point
 
         #----<<rtkh013>>----
         #Ctrlp:input.c.rtkh013
         ON ACTION controlp INFIELD rtkh013
            #add-point:ON ACTION controlp INFIELD rtkh013
            {<point name="input.c.rtkh013" />}
            #END add-point
 
         #----<<rtkh014>>----
         #Ctrlp:input.c.rtkh014
         ON ACTION controlp INFIELD rtkh014
            #add-point:ON ACTION controlp INFIELD rtkh014
            {<point name="input.c.rtkh014" />}
            #END add-point
 
         #----<<rtkhownid>>----
         #----<<rtkhownid_desc>>----
         #----<<rtkhowndp>>----
         #----<<rtkhowndp_desc>>----
         #----<<rtkhcrtid>>----
         #----<<rtkhcrtid_desc>>----
         #----<<rtkhcrtdp>>----
         #----<<rtkhcrtdp_desc>>----
         #----<<rtkhcrtdt>>----
         #----<<rtkhmodid>>----
         #----<<rtkhmodid_desc>>----
         #----<<rtkhcnfid>>----
         #----<<rtkhcnfid_desc>>----
         #----<<rtkhmoddt>>----
         #----<<rtkhcnfdt>>----
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_rtkh_m.rtkh001             
 
                            
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO rtkh_t (rtkhent,rtkhunit,rtkh001,rtkhstus,rtkh002,rtkh003,rtkh004,rtkh005, 
                   rtkh006,rtkh007,rtkh008,rtkh009,rtkh010,rtkh011,rtkh012,rtkh013,rtkh014,rtkhownid, 
                   rtkhowndp,rtkhcrtid,rtkhcrtdp,rtkhcrtdt,rtkhmodid,rtkhcnfid,rtkhmoddt,rtkhcnfdt)
               VALUES (g_enterprise,g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001,g_rtkh_m.rtkhstus,g_rtkh_m.rtkh002, 
                   g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007, 
                   g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012, 
                   g_rtkh_m.rtkh013,g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhcrtid, 
                   g_rtkh_m.rtkhcrtdp,g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhcnfid,g_rtkh_m.rtkhmoddt, 
                   g_rtkh_m.rtkhcnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_rtkh_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_rtkh_m.rtkh001 = g_master_multi_table_t.rtkhl001 AND
         g_rtkh_m.rtkhl003 = g_master_multi_table_t.rtkhl003 AND 
         g_rtkh_m.rtkhl004 = g_master_multi_table_t.rtkhl004  THEN
         ELSE 
            LET l_var_keys[01] = g_rtkh_m.rtkh001
            LET l_field_keys[01] = 'rtkhl001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.rtkhl001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'rtkhl002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_rtkh_m.rtkhl003
            LET l_fields[01] = 'rtkhl003'
            LET l_vars[02] = g_rtkh_m.rtkhl004
            LET l_fields[02] = 'rtkhl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'rtkhlent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'rtkhl_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL artm740_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE rtkh_t SET (rtkhunit,rtkh001,rtkhstus,rtkh002,rtkh003,rtkh004,rtkh005,rtkh006, 
                   rtkh007,rtkh008,rtkh009,rtkh010,rtkh011,rtkh012,rtkh013,rtkh014,rtkhownid,rtkhowndp, 
                   rtkhcrtid,rtkhcrtdp,rtkhcrtdt,rtkhmodid,rtkhcnfid,rtkhmoddt,rtkhcnfdt) = (g_rtkh_m.rtkhunit, 
                   g_rtkh_m.rtkh001,g_rtkh_m.rtkhstus,g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004, 
                   g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007,g_rtkh_m.rtkh008,g_rtkh_m.rtkh009, 
                   g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013,g_rtkh_m.rtkh014, 
                   g_rtkh_m.rtkhownid,g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtdp,g_rtkh_m.rtkhcrtdt, 
                   g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhcnfid,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt)
                WHERE rtkhent = g_enterprise AND rtkh001 = g_rtkh001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("rtkh_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_rtkh_m.rtkh001 = g_master_multi_table_t.rtkhl001 AND
         g_rtkh_m.rtkhl003 = g_master_multi_table_t.rtkhl003 AND 
         g_rtkh_m.rtkhl004 = g_master_multi_table_t.rtkhl004  THEN
         ELSE 
            LET l_var_keys[01] = g_rtkh_m.rtkh001
            LET l_field_keys[01] = 'rtkhl001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.rtkhl001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'rtkhl002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_rtkh_m.rtkhl003
            LET l_fields[01] = 'rtkhl003'
            LET l_vars[02] = g_rtkh_m.rtkhl004
            LET l_fields[02] = 'rtkhl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'rtkhlent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'rtkhl_t')
         END IF 
 
               CALL s_transaction_end('Y','0')
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_rtkh001_t = g_rtkh_m.rtkh001
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="artm740.input.other" ver="1" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD rtkh001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD rtkiunit
               WHEN "s_detail2"
                  NEXT FIELD rtkjunit
               WHEN "s_detail3"
                  NEXT FIELD rtklunit
               WHEN "s_detail4"
                  NEXT FIELD rtkkunit
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="artm740.insert" ver="2" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION artm740_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_rtki_d.clear()   
   CALL g_rtki2_d.clear()  
   CALL g_rtki3_d.clear()  
   CALL g_rtki4_d.clear()  
 
 
   INITIALIZE g_rtkh_m.* LIKE rtkh_t.*             #DEFAULT 設定
   
   LET g_rtkh001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_rtkh_m.rtkhownid = g_user
      LET g_rtkh_m.rtkhowndp = g_dept
      LET g_rtkh_m.rtkhcrtid = g_user
      LET g_rtkh_m.rtkhcrtdp = g_dept 
      LET g_rtkh_m.rtkhcrtdt = cl_get_current()
      LET g_rtkh_m.rtkhmodid = ""
      LET g_rtkh_m.rtkhmoddt = ""
      LET g_rtkh_m.rtkhstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_rtkh_m.rtkhstus = "N"
      LET g_rtkh_m.rtkh002 = "01"
      LET g_rtkh_m.rtkh003 = "1"
      LET g_rtkh_m.rtkh004 = "1"
      LET g_rtkh_m.rtkh006 = "Y"
      LET g_rtkh_m.rtkh007 = "N"
      LET g_rtkh_m.rtkh008 = "N"
      LET g_rtkh_m.rtkh009 = "Y"
      LET g_rtkh_m.rtkh010 = "Y"
      LET g_rtkh_m.rtkh011 = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL artm740_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_rtkh_m.* = g_rtkh_m_t.*
         CALL artm740_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_rtki_d.clear()
      CALL g_rtki2_d.clear()
      CALL g_rtki3_d.clear()
      CALL g_rtki4_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1    
 
   LET g_rtkh001_t = g_rtkh_m.rtkh001
 
   
   LET g_wc = g_wc,  
              " OR ( rtkhent = '" ||g_enterprise|| "' AND",
              " rtkh001 = '", g_rtkh_m.rtkh001 CLIPPED, "' "
 
              , ") "
   
   CLOSE artm740_cl
   
END FUNCTION
]]>
  </section>
  <section id="artm740.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION artm740_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO rtki_t
                  (rtkient,
                   rtki001,
                   rtki002
                   ,rtkiunit,rtki003,rtki004,rtki005,rtki006,rtki007) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtki_d[g_detail_idx].rtkiunit,g_rtki_d[g_detail_idx].rtki003,g_rtki_d[g_detail_idx].rtki004, 
                       g_rtki_d[g_detail_idx].rtki005,g_rtki_d[g_detail_idx].rtki006,g_rtki_d[g_detail_idx].rtki007) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("rtki_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO rtkj_t
                  (rtkjent,
                   rtkj001,
                   rtkj002
                   ,rtkjunit,rtkj101,rtkj102,rtkj103,rtkj104,rtkj105,rtkj106,rtkj107,rtkj108,rtkj109,rtkj110,rtkj111,rtkj112,rtkj113,rtkj114,rtkj115,rtkj116,rtkj117,rtkj118,rtkj119,rtkj120,rtkj121,rtkj122,rtkj123,rtkj124,rtkj125,rtkj126,rtkj127,rtkj128,rtkj129,rtkj130,rtkj131,rtkj132,rtkj133,rtkj134,rtkj135,rtkj136,rtkj137,rtkj138,rtkj139,rtkj140,rtkj141,rtkj142,rtkj143,rtkj144,rtkj145,rtkj146,rtkj147,rtkj148,rtkj149,rtkj150,rtkj151,rtkj152) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtki2_d[g_detail_idx].rtkjunit,g_rtki2_d[g_detail_idx].rtkj101,g_rtki2_d[g_detail_idx].rtkj102, 
                       g_rtki2_d[g_detail_idx].rtkj103,g_rtki2_d[g_detail_idx].rtkj104,g_rtki2_d[g_detail_idx].rtkj105, 
                       g_rtki2_d[g_detail_idx].rtkj106,g_rtki2_d[g_detail_idx].rtkj107,g_rtki2_d[g_detail_idx].rtkj108, 
                       g_rtki2_d[g_detail_idx].rtkj109,g_rtki2_d[g_detail_idx].rtkj110,g_rtki2_d[g_detail_idx].rtkj111, 
                       g_rtki2_d[g_detail_idx].rtkj112,g_rtki2_d[g_detail_idx].rtkj113,g_rtki2_d[g_detail_idx].rtkj114, 
                       g_rtki2_d[g_detail_idx].rtkj115,g_rtki2_d[g_detail_idx].rtkj116,g_rtki2_d[g_detail_idx].rtkj117, 
                       g_rtki2_d[g_detail_idx].rtkj118,g_rtki2_d[g_detail_idx].rtkj119,g_rtki2_d[g_detail_idx].rtkj120, 
                       g_rtki2_d[g_detail_idx].rtkj121,g_rtki2_d[g_detail_idx].rtkj122,g_rtki2_d[g_detail_idx].rtkj123, 
                       g_rtki2_d[g_detail_idx].rtkj124,g_rtki2_d[g_detail_idx].rtkj125,g_rtki2_d[g_detail_idx].rtkj126, 
                       g_rtki2_d[g_detail_idx].rtkj127,g_rtki2_d[g_detail_idx].rtkj128,g_rtki2_d[g_detail_idx].rtkj129, 
                       g_rtki2_d[g_detail_idx].rtkj130,g_rtki2_d[g_detail_idx].rtkj131,g_rtki2_d[g_detail_idx].rtkj132, 
                       g_rtki2_d[g_detail_idx].rtkj133,g_rtki2_d[g_detail_idx].rtkj134,g_rtki2_d[g_detail_idx].rtkj135, 
                       g_rtki2_d[g_detail_idx].rtkj136,g_rtki2_d[g_detail_idx].rtkj137,g_rtki2_d[g_detail_idx].rtkj138, 
                       g_rtki2_d[g_detail_idx].rtkj139,g_rtki2_d[g_detail_idx].rtkj140,g_rtki2_d[g_detail_idx].rtkj141, 
                       g_rtki2_d[g_detail_idx].rtkj142,g_rtki2_d[g_detail_idx].rtkj143,g_rtki2_d[g_detail_idx].rtkj144, 
                       g_rtki2_d[g_detail_idx].rtkj145,g_rtki2_d[g_detail_idx].rtkj146,g_rtki2_d[g_detail_idx].rtkj147, 
                       g_rtki2_d[g_detail_idx].rtkj148,g_rtki2_d[g_detail_idx].rtkj149,g_rtki2_d[g_detail_idx].rtkj150, 
                       g_rtki2_d[g_detail_idx].rtkj151,g_rtki2_d[g_detail_idx].rtkj152)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("rtkj_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO rtkl_t
                  (rtklent,
                   rtkl001,
                   rtkl002
                   ,rtklunit,rtkl101,rtkl102,rtkl103,rtkl104,rtkl105,rtkl106,rtkl107) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtki3_d[g_detail_idx].rtklunit,g_rtki3_d[g_detail_idx].rtkl101,g_rtki3_d[g_detail_idx].rtkl102, 
                       g_rtki3_d[g_detail_idx].rtkl103,g_rtki3_d[g_detail_idx].rtkl104,g_rtki3_d[g_detail_idx].rtkl105, 
                       g_rtki3_d[g_detail_idx].rtkl106,g_rtki3_d[g_detail_idx].rtkl107)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("rtkl_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO rtkk_t
                  (rtkkent,
                   rtkk001,
                   rtkk002,rtkk003
                   ,rtkkunit,rtkk004) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_rtki4_d[g_detail_idx].rtkkunit,g_rtki4_d[g_detail_idx].rtkk004)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("rtkk_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="artm740.lock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION artm740_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL artm740_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "rtki_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN artm740_bcl USING g_enterprise,
                                       g_rtkh_m.rtkh001,g_rtki_d[g_detail_idx].rtki002     
      IF SQLCA.sqlcode THEN
         CALL cl_err("artm740_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "rtkj_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artm740_bcl2 USING g_enterprise,
                                             g_rtkh_m.rtkh001,g_rtki2_d[g_detail_idx].rtkj002
      IF SQLCA.sqlcode THEN
         CALL cl_err("artm740_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "rtkl_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artm740_bcl3 USING g_enterprise,
                                             g_rtkh_m.rtkh001,g_rtki3_d[g_detail_idx].rtkl002
      IF SQLCA.sqlcode THEN
         CALL cl_err("artm740_bcl3",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "rtkk_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artm740_bcl4 USING g_enterprise,
                                             g_rtkh_m.rtkh001,g_rtki4_d[g_detail_idx].rtkk002,g_rtki4_d[g_detail_idx].rtkk003 

      IF SQLCA.sqlcode THEN
         CALL cl_err("artm740_bcl4",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="artm740.main" ver="6" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT rtkhunit,'',rtkh001,'','',rtkhstus,rtkh002,rtkh003,rtkh004,rtkh005,'', 
       rtkh006,rtkh007,rtkh008,rtkh009,rtkh010,rtkh011,rtkh012,rtkh013,rtkh014,rtkhownid,'',rtkhowndp, 
       '',rtkhcrtid,'',rtkhcrtdp,'',rtkhcrtdt,rtkhmodid,'',rtkhcnfid,'',rtkhmoddt,rtkhcnfdt FROM rtkh_t  
       WHERE rtkhent= ? AND rtkh001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE artm740_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE rtkhunit,rtkh001,rtkhstus,rtkh002,rtkh003,rtkh004,rtkh005,rtkh006,rtkh007, 
       rtkh008,rtkh009,rtkh010,rtkh011,rtkh012,rtkh013,rtkh014,rtkhownid,rtkhowndp,rtkhcrtid,rtkhcrtdp, 
       rtkhcrtdt,rtkhmodid,rtkhcnfid,rtkhmoddt,rtkhcnfdt",
               " FROM rtkh_t",
               " WHERE rtkhent = '" ||g_enterprise|| "' AND rtkh001 = ?"
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE artm740_master_referesh FROM g_sql
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_artm740 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL artm740_init()   
 
      #進入選單 Menu (="N")
      CALL artm740_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_artm740
      
   END IF 
   
   CLOSE artm740_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="artm740.modify" ver="4" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION artm740_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_rtkh_m.rtkh001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE artm740_master_referesh USING g_rtkh_m.rtkh001 INTO g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001,g_rtkh_m.rtkhstus, 
       g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007, 
       g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013, 
       g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhcnfid,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt 

 
   ERROR ""
  
   LET g_rtkh001_t = g_rtkh_m.rtkh001
 
   CALL s_transaction_begin()
   
   OPEN artm740_cl USING g_enterprise,g_rtkh_m.rtkh001
 
   IF STATUS THEN
      CALL cl_err("OPEN artm740_cl:", STATUS, 1)
      CLOSE artm740_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH artm740_cl INTO g_rtkh_m.rtkhunit,g_rtkh_m.rtkhunit_desc,g_rtkh_m.rtkh001,g_rtkh_m.rtkhl003, 
       g_rtkh_m.rtkhl004,g_rtkh_m.rtkhstus,g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005, 
       g_rtkh_m.rtkh005_desc,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007,g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010, 
       g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013,g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhownid_desc, 
       g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhowndp_desc,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtid_desc,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdp_desc,g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhmodid_desc,g_rtkh_m.rtkhcnfid, 
       g_rtkh_m.rtkhcnfid_desc,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_rtkh_m.rtkh001,SQLCA.sqlcode,0)
      CLOSE artm740_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL artm740_show()
   WHILE TRUE
      LET g_rtkh001_t = g_rtkh_m.rtkh001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_rtkh_m.rtkhmodid = g_user 
LET g_rtkh_m.rtkhmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL artm740_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_rtkh_m.* = g_rtkh_m_t.*
         CALL artm740_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_rtkh_m.rtkh001 != g_rtkh001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE rtki_t SET rtki001 = g_rtkh_m.rtkh001
 
          WHERE rtkient = g_enterprise AND rtki001 = g_rtkh001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("rtki_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("rtki_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE rtkj_t
            SET rtkj001 = g_rtkh_m.rtkh001
 
          WHERE rtkjent = g_enterprise AND
                rtkj001 = g_rtkh001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("rtkj_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("rtkj_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE rtkl_t
            SET rtkl001 = g_rtkh_m.rtkh001
 
          WHERE rtklent = g_enterprise AND
                rtkl001 = g_rtkh001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("rtkl_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("rtkl_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         UPDATE rtkk_t
            SET rtkk001 = g_rtkh_m.rtkh001
 
          WHERE rtkkent = g_enterprise AND
                rtkk001 = g_rtkh001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("rtkk_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("rtkk_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_rtkh_m.rtkh001,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE artm740_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_rtkh_m.rtkh001,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="artm740.other_dialog" ver="1" status="" src="s">
    <![CDATA[ 
]]>
  </section>
  <section id="artm740.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="artm740.query" ver="1" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION artm740_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_rtki_d.clear()
   CALL g_rtki2_d.clear()
   CALL g_rtki3_d.clear()
   CALL g_rtki4_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL artm740_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL artm740_browser_fill("")
      CALL artm740_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL artm740_filter_show('rtkhunit')
   CALL artm740_filter_show('rtkh001')
   CALL artm740_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL artm740_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="artm740.reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION artm740_reproduce()
   DEFINE l_newno     LIKE rtkh_t.rtkh001 
   DEFINE l_oldno     LIKE rtkh_t.rtkh001 
 
   DEFINE l_master    RECORD LIKE rtkh_t.*
   DEFINE l_detail    RECORD LIKE rtki_t.*
   DEFINE l_detail2    RECORD LIKE rtkj_t.*
 
   DEFINE l_detail3    RECORD LIKE rtkl_t.*
 
   DEFINE l_detail4    RECORD LIKE rtkk_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_rtkh_m.rtkh001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_rtkh001_t = g_rtkh_m.rtkh001
 
    
   LET g_rtkh_m.rtkh001 = ""
 
    
   CALL artm740_set_entry('a')
   CALL artm740_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_rtkh_m.rtkhownid = g_user
      LET g_rtkh_m.rtkhowndp = g_dept
      LET g_rtkh_m.rtkhcrtid = g_user
      LET g_rtkh_m.rtkhcrtdp = g_dept 
      LET g_rtkh_m.rtkhcrtdt = cl_get_current()
      LET g_rtkh_m.rtkhmodid = ""
      LET g_rtkh_m.rtkhmoddt = ""
      LET g_rtkh_m.rtkhstus = "N"
 
 
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL artm740_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1    
 
   LET g_wc = g_wc,  
              " OR (",
              " rtkh001 = '", g_rtkh_m.rtkh001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="artm740.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION artm740_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("rtkh001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="artm740.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION artm740_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="artm740.set_no_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION artm740_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("rtkh001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="artm740.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION artm740_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="artm740.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION artm740_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_rtkh_m.rtkh001
   LET g_pk_array[1].column = 'rtkh001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="artm740.show" ver="2" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION artm740_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_rtkh_m_t.* = g_rtkh_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL artm740_b_fill() #單身填充
      CALL artm740_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_rtkh_m.rtkhownid_desc = cl_get_username(g_rtkh_m.rtkhownid)
      #LET g_rtkh_m.rtkhowndp_desc = cl_get_deptname(g_rtkh_m.rtkhowndp)
      #LET g_rtkh_m.rtkhcrtid_desc = cl_get_username(g_rtkh_m.rtkhcrtid)
      #LET g_rtkh_m.rtkhcrtdp_desc = cl_get_deptname(g_rtkh_m.rtkhcrtdp)
      #LET g_rtkh_m.rtkhmodid_desc = cl_get_username(g_rtkh_m.rtkhmodid)
      #LET g_rtkh_m.rtkhcnfid_desc = cl_get_deptname(g_rtkh_m.rtkhcnfid)
      ##LET g_rtkh_m.rtkhpstid_desc = cl_get_deptname(g_rtkh_m.rtkhpstid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL artm740_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtkh_m.rtkhunit,g_rtkh_m.rtkhunit_desc,g_rtkh_m.rtkh001,g_rtkh_m.rtkhl003,g_rtkh_m.rtkhl004, 
       g_rtkh_m.rtkhstus,g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh005_desc, 
       g_rtkh_m.rtkh006,g_rtkh_m.rtkh007,g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011, 
       g_rtkh_m.rtkh012,g_rtkh_m.rtkh013,g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhownid_desc, 
       g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhowndp_desc,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtid_desc,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdp_desc,g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhmodid_desc,g_rtkh_m.rtkhcnfid, 
       g_rtkh_m.rtkhcnfid_desc,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_rtkh_m.rtkhstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_rtki_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_rtki2_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_rtki3_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_rtki4_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL artm740_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="artm740.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="artm740.state_change" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION artm740_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_rtkh_m.rtkh001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_rtkh_m.rtkhstus
            WHEN "N"
               HIDE OPTION "open"
            WHEN "X"
               HIDE OPTION "void"
            WHEN "Y"
               HIDE OPTION "valid"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION open
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.open"/>}
         #end add-point
         EXIT MENU
      ON ACTION void
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.void"/>}
         #end add-point
         EXIT MENU
      ON ACTION valid
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.valid"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE rtkh_t SET rtkhstus = lc_state 
    WHERE rtkhent = g_enterprise AND rtkh001 = g_rtkh_m.rtkh001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
      LET g_rtkh_m.rtkhstus = lc_state
      DISPLAY BY NAME g_rtkh_m.rtkhstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="artm740.ui_browser_refresh" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION artm740_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_rtkh001 = g_rtkh_m.rtkh001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="artm740.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION artm740_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="artm740.ui_dialog" ver="12" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION artm740_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL artm740_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL artm740_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_rtkh001 = g_rtkh001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL artm740_fetch('') # reload data
               LET l_ac = 1
               CALL artm740_ui_detailshow() #Setting the current row 
      
               CALL artm740_idx_chk()
               #NEXT FIELD rtki002
         
         END DISPLAY
        
         DISPLAY ARRAY g_rtki_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL artm740_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL artm740_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_rtki2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL artm740_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL artm740_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_rtki3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL artm740_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               CALL artm740_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_rtki4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL artm740_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               CALL artm740_idx_chk()
               #add-point:page4自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL artm740_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL artm740_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL artm740_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
            
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD rtki002
            END IF
        
         ON ACTION statechange
            CALL artm740_statechange()
            LET g_action_choice = "statechange"
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL artm740_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL artm740_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL artm740_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL artm740_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL artm740_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artm740_idx_chk()
            
         ON ACTION previous
            CALL artm740_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artm740_idx_chk()
            
         ON ACTION jump
            CALL artm740_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artm740_idx_chk()
            
         ON ACTION next
            CALL artm740_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artm740_idx_chk()
            
         ON ACTION last
            CALL artm740_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artm740_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL artm740_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL artm740_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL artm740_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL artm740_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL artm740_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL artm740_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL artm740_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL artm740_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL artm740_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="artm740.ui_headershow" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION artm740_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_rtkh_m.rtkh001 = g_browser[g_current_idx].b_rtkh001   
 
   EXECUTE artm740_master_referesh USING g_rtkh_m.rtkh001 INTO g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001,g_rtkh_m.rtkhstus, 
       g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007, 
       g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013, 
       g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhcnfid,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt 

   CALL artm740_show()
   
END FUNCTION
]]>
  </section>
  <section id="artm740.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION artm740_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artm740_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artm740_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artm740_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artm740_bcl4
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="artm740.update_b" ver="2" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION artm740_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtki_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE rtki_t 
         SET (rtki001,
              rtki002
              ,rtkiunit,rtki003,rtki004,rtki005,rtki006,rtki007) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtki_d[g_detail_idx].rtkiunit,g_rtki_d[g_detail_idx].rtki003,g_rtki_d[g_detail_idx].rtki004, 
                  g_rtki_d[g_detail_idx].rtki005,g_rtki_d[g_detail_idx].rtki006,g_rtki_d[g_detail_idx].rtki007)  

         WHERE rtkient = g_enterprise AND rtki001 = ps_keys_bak[1] AND rtki002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("rtki_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("rtki_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtkj_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE rtkj_t 
         SET (rtkj001,
              rtkj002
              ,rtkjunit,rtkj101,rtkj102,rtkj103,rtkj104,rtkj105,rtkj106,rtkj107,rtkj108,rtkj109,rtkj110,rtkj111,rtkj112,rtkj113,rtkj114,rtkj115,rtkj116,rtkj117,rtkj118,rtkj119,rtkj120,rtkj121,rtkj122,rtkj123,rtkj124,rtkj125,rtkj126,rtkj127,rtkj128,rtkj129,rtkj130,rtkj131,rtkj132,rtkj133,rtkj134,rtkj135,rtkj136,rtkj137,rtkj138,rtkj139,rtkj140,rtkj141,rtkj142,rtkj143,rtkj144,rtkj145,rtkj146,rtkj147,rtkj148,rtkj149,rtkj150,rtkj151,rtkj152) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtki2_d[g_detail_idx].rtkjunit,g_rtki2_d[g_detail_idx].rtkj101,g_rtki2_d[g_detail_idx].rtkj102, 
                  g_rtki2_d[g_detail_idx].rtkj103,g_rtki2_d[g_detail_idx].rtkj104,g_rtki2_d[g_detail_idx].rtkj105, 
                  g_rtki2_d[g_detail_idx].rtkj106,g_rtki2_d[g_detail_idx].rtkj107,g_rtki2_d[g_detail_idx].rtkj108, 
                  g_rtki2_d[g_detail_idx].rtkj109,g_rtki2_d[g_detail_idx].rtkj110,g_rtki2_d[g_detail_idx].rtkj111, 
                  g_rtki2_d[g_detail_idx].rtkj112,g_rtki2_d[g_detail_idx].rtkj113,g_rtki2_d[g_detail_idx].rtkj114, 
                  g_rtki2_d[g_detail_idx].rtkj115,g_rtki2_d[g_detail_idx].rtkj116,g_rtki2_d[g_detail_idx].rtkj117, 
                  g_rtki2_d[g_detail_idx].rtkj118,g_rtki2_d[g_detail_idx].rtkj119,g_rtki2_d[g_detail_idx].rtkj120, 
                  g_rtki2_d[g_detail_idx].rtkj121,g_rtki2_d[g_detail_idx].rtkj122,g_rtki2_d[g_detail_idx].rtkj123, 
                  g_rtki2_d[g_detail_idx].rtkj124,g_rtki2_d[g_detail_idx].rtkj125,g_rtki2_d[g_detail_idx].rtkj126, 
                  g_rtki2_d[g_detail_idx].rtkj127,g_rtki2_d[g_detail_idx].rtkj128,g_rtki2_d[g_detail_idx].rtkj129, 
                  g_rtki2_d[g_detail_idx].rtkj130,g_rtki2_d[g_detail_idx].rtkj131,g_rtki2_d[g_detail_idx].rtkj132, 
                  g_rtki2_d[g_detail_idx].rtkj133,g_rtki2_d[g_detail_idx].rtkj134,g_rtki2_d[g_detail_idx].rtkj135, 
                  g_rtki2_d[g_detail_idx].rtkj136,g_rtki2_d[g_detail_idx].rtkj137,g_rtki2_d[g_detail_idx].rtkj138, 
                  g_rtki2_d[g_detail_idx].rtkj139,g_rtki2_d[g_detail_idx].rtkj140,g_rtki2_d[g_detail_idx].rtkj141, 
                  g_rtki2_d[g_detail_idx].rtkj142,g_rtki2_d[g_detail_idx].rtkj143,g_rtki2_d[g_detail_idx].rtkj144, 
                  g_rtki2_d[g_detail_idx].rtkj145,g_rtki2_d[g_detail_idx].rtkj146,g_rtki2_d[g_detail_idx].rtkj147, 
                  g_rtki2_d[g_detail_idx].rtkj148,g_rtki2_d[g_detail_idx].rtkj149,g_rtki2_d[g_detail_idx].rtkj150, 
                  g_rtki2_d[g_detail_idx].rtkj151,g_rtki2_d[g_detail_idx].rtkj152) 
         WHERE rtkjent = g_enterprise AND rtkj001 = ps_keys_bak[1] AND rtkj002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("rtkj_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("rtkj_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtkl_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point     
      UPDATE rtkl_t 
         SET (rtkl001,
              rtkl002
              ,rtklunit,rtkl101,rtkl102,rtkl103,rtkl104,rtkl105,rtkl106,rtkl107) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtki3_d[g_detail_idx].rtklunit,g_rtki3_d[g_detail_idx].rtkl101,g_rtki3_d[g_detail_idx].rtkl102, 
                  g_rtki3_d[g_detail_idx].rtkl103,g_rtki3_d[g_detail_idx].rtkl104,g_rtki3_d[g_detail_idx].rtkl105, 
                  g_rtki3_d[g_detail_idx].rtkl106,g_rtki3_d[g_detail_idx].rtkl107) 
         WHERE rtklent = g_enterprise AND rtkl001 = ps_keys_bak[1] AND rtkl002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("rtkl_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("rtkl_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtkk_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point     
      UPDATE rtkk_t 
         SET (rtkk001,
              rtkk002,rtkk003
              ,rtkkunit,rtkk004) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_rtki4_d[g_detail_idx].rtkkunit,g_rtki4_d[g_detail_idx].rtkk004) 
         WHERE rtkkent = g_enterprise AND rtkk001 = ps_keys_bak[1] AND rtkk002 = ps_keys_bak[2] AND rtkk003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("rtkk_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("rtkk_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
