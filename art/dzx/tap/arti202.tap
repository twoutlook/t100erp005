<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="arti202" std_prog="arti202" erpver="1.0" module="ART" ver="8" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="function.arti202_upd_child" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PUBLIC FUNCTION arti202_upd_child(p_rtax003)
 DEFINE p_rtax003 LIKE rtax_t.rtax003
   DEFINE l_rtax001 DYNAMIC ARRAY OF VARCHAR(100)
   DEFINE l_rtax004 LIKE rtax_t.rtax004
   DEFINE l_rtax006 LIKE rtax_t.rtax006
   DEFINE l_cnt     LIKE type_t.num5
   DEFINE l_i       LIKE type_t.num5
   DEFINE l_sql     STRING

   LET l_sql = " SELECT rtax001 FROM rtax_t",
               "  WHERE rtax003 ='",p_rtax003,"'",
               "    AND rtax001 !='",p_rtax003,"'",
               "    AND rtaxent =",g_enterprise

   PREPARE arti202_rtax001_prepare FROM l_sql
   DECLARE arti202_rtax001_cs CURSOR WITH HOLD FOR arti202_rtax001_prepare
   
   LET l_cnt = 1
   FOREACH arti202_rtax001_cs INTO l_rtax001[l_cnt]
      SELECT rtax004,rtax006 INTO l_rtax004,l_rtax006 
        FROM rtax_t
       WHERE rtax001 = p_rtax003      
         AND rtaxent = g_enterprise 

      UPDATE rtax_t SET rtax004 = l_rtax004 + 1,
                        rtax006 = l_rtax006
       WHERE rtax001 = l_rtax001[l_cnt]
         AND rtaxent = g_enterprise
      LET l_cnt = l_cnt + 1
   END FOREACH

   LET l_cnt = l_cnt - 1
   IF l_cnt > 0 THEN
      FOR l_i = 1 TO l_cnt  
         CALL arti202_upd_child(l_rtax001[l_i]) 
      END FOR
   END IF
END FUNCTION]]>
  </point>
  <point name="function.arti202_search_rtax006" order="2" ver="4" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PUBLIC FUNCTION arti202_search_rtax006()
 DEFINE l_rtax001    LIKE rtax_t.rtax001
   DEFINE l_rtax004    LIKE rtax_t.rtax004
   
   IF g_rtax_m.rtax001 != g_rtax_m.rtax003 THEN
      LET l_rtax001 = g_rtax_m.rtax003
      WHILE TRUE
         LET l_rtax004 = ''
         SELECT rtax003,rtax004 INTO l_rtax001,l_rtax004 FROM rtax_t
          WHERE rtax001 = l_rtax001 
            AND rtaxent = g_enterprise
         IF l_rtax004 = 1 OR cl_null(l_rtax004) THEN
            LET g_rtax_m.rtax006 = l_rtax001
            EXIT WHILE
         ELSE
            CONTINUE WHILE
         END IF      
      END WHILE
   ELSE
      LET g_rtax_m.rtax006 = g_rtax_m.rtax001
   END IF
END FUNCTION]]>
  </point>
  <point name="function.arti202_upd_rtax005" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PUBLIC FUNCTION arti202_upd_rtax005()
 DEFINE p_cmd  LIKE type_t.chr1
   DEFINE l_cnt  LIKE type_t.num5
   
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt FROM rtax_t
    WHERE rtax003 = g_rtax_m.rtax001
      AND rtax001 != g_rtax_m.rtax001
      AND rtaxent = g_enterprise

   UPDATE rtax_t SET rtax005 = l_cnt
    WHERE rtax001 = g_rtax_m.rtax001
      AND rtaxent = g_enterprise

   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt FROM rtax_t
    WHERE rtax003 = g_rtax_m.rtax003
      AND rtax001 != g_rtax_m.rtax003
      AND rtaxent = g_enterprise

   UPDATE rtax_t SET rtax005 = l_cnt
    WHERE rtax001 = g_rtax_m.rtax003
      AND rtaxent = g_enterprise

   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt FROM rtax_t
    WHERE rtax003 = g_rtax_m_t.rtax003
      AND rtax001 != g_rtax_m_t.rtax003
      AND rtaxent = g_enterprise

   UPDATE rtax_t SET rtax005 = l_cnt
    WHERE rtax001 = g_rtax_m_t.rtax003
      AND rtaxent = g_enterprise
END FUNCTION]]>
  </point>
  <point name="function.arti202_cal_rtax004" order="4" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PUBLIC FUNCTION arti202_cal_rtax004()
 DEFINE l_rtax004   LIKE rtax_t.rtax004
   
   IF g_rtax_m.rtax001 = g_rtax_m.rtax003 THEN
      LET g_rtax_m.rtax004 = 1
   ELSE
      LET l_rtax004 = ''
      SELECT rtax004 INTO l_rtax004 FROM rtax_t
       WHERE rtax001 = g_rtax_m.rtax003
         AND rtaxent = g_enterprise
      IF cl_null(l_rtax004) THEN
         LET g_rtax_m.rtax004 = 1
      ELSE
         LET g_rtax_m.rtax004 = l_rtax004 + 1
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.arti202_rtax003_ref" order="5" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PUBLIC FUNCTION arti202_rtax003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtax_m.rtax003
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtax_m.rtax003_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_rtax_m.rtax003_desc
END FUNCTION]]>
  </point>
  <point name="function.arti202_rtax007_ref" order="6" ver="5" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PUBLIC FUNCTION arti202_rtax007_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = '200'
   LET g_ref_fields[2] = g_rtax_m.rtax007
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001=? AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtax_m.rtax007_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_rtax_m.rtax007_desc
END FUNCTION]]>
  </point>
  <point name="function.arti202_rtax006_ref" order="7" ver="5" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PUBLIC FUNCTION arti202_rtax006_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtax_m.rtax006
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtax_m.rtax006_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_rtax_m.rtax006_desc
END FUNCTION]]>
  </point>
  <point name="function.arti202_chk_rtax001_using" order="8" ver="5" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 檢查此品類編號是否已被商品/料件主檔所使用
# Memo...........:
# Usage..........: CALL arti202_chk_rtax001_using (p_rtax001)
#                  RETURNING l_using
# Input parameter: p_rtax001      欲檢查之品類編號
# Return code....: r_using        回傳 Y/N 表示是否已被使用
# Date & Author..: 13/11/12 By benson
# Modify.........:
################################################################################
PUBLIC FUNCTION arti202_chk_rtax001_using(p_rtax001)
   DEFINE p_rtax001    LIKE rtax_t.rtax001
   DEFINE r_using      LIKE type_t.chr1
   DEFINE l_cnt        LIKE type_t.num5
   
   LET r_using = 'N'
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt FROM imaa_t 
    WHERE imaaent = g_enterprise
      AND imaa009 = p_rtax001
   IF l_cnt > 0 THEN
      LET r_using = 'Y'
   ELSE 
      SELECT COUNT(*) INTO l_cnt FROM imba_t
       WHERE imbaent = g_enterprise
         AND imba009 = p_rtax001
      IF l_cnt > 0 THEN
         LET r_using = 'Y'
      END IF      
   END IF
   
   RETURN r_using
   
END FUNCTION]]>
  </point>
  <point name="function.arti202_rtaxunit_ref" order="9" ver="5" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PUBLIC FUNCTION arti202_rtaxunit_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtax_m.rtaxunit
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtax_m.rtaxunit_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtax_m.rtaxunit_desc
END FUNCTION]]>
  </point>
  <point name="function.arti202_compute_rtaw" order="10" ver="8" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[#最尾階品類資料計算
PRIVATE FUNCTION arti202_compute_rtaw()
DEFINE l_rtax001          LIKE rtax_t.rtax001
DEFINE l_rtax004          LIKE rtax_t.rtax004   #150629-00027#4 By benson
DEFINE l_bottom_rtax001   DYNAMIC ARRAY OF LIKE rtax_t.rtax001
DEFINE l_i                LIKE type_t.num5 
DEFINE l_forupd_sql       STRING
DEFINE r_success          LIKE type_t.num5

   LET r_success = TRUE
   
   LET l_forupd_sql = " SELECT rtaw001 FROM rtaw_t",
                      " WHERE rtawent= ? FOR UPDATE"
   LET l_forupd_sql = cl_sql_forupd(l_forupd_sql)                #轉換不同資料庫語法
   LET l_forupd_sql = cl_sql_add_mask(l_forupd_sql)              #遮蔽特定資料
   DECLARE arti202_rtaw_cl CURSOR FROM l_forupd_sql  
   
   CALL s_transaction_begin()
   
   OPEN arti202_rtaw_cl USING g_enterprise
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN arti202_rtaw_cl" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE arti202_rtaw_cl
      CALL s_transaction_end("N","0")
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #刪除資料
   DELETE FROM rtaw_t 
    WHERE rtawent = g_enterprise
    
   #重新產生 
   DECLARE arti202_rtax_curs CURSOR WITH HOLD FOR
    SELECT UNIQUE rtax001,rtax004 FROM rtax_t            #150629-00027#4 By benson add rtax004
     WHERE rtaxent = g_enterprise
   
   FOREACH arti202_rtax_curs INTO l_rtax001,l_rtax004    #150629-00027#4 By benson add rtax004
      CALL l_bottom_rtax001.clear() 
      CALL s_arti202_search_bottom(l_rtax001) 
       RETURNING l_bottom_rtax001
       
      FOR l_i = 1 TO l_bottom_rtax001.getLength()
         #150629-00027#4 By benson --- S 
         #INSERT INTO rtaw_t (rtawent,rtaw001,rtaw002)
         # VALUES(g_enterprise,l_rtax001,l_bottom_rtax001[l_i])
         INSERT INTO rtaw_t (rtawent,rtaw001,rtaw002,rtaw003)
          VALUES(g_enterprise,l_rtax001,l_bottom_rtax001[l_i],l_rtax004)
         #150629-00027#4 By benson --- E
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Insert rtaw_t" 
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CLOSE arti202_rtaw_cl
            CALL s_transaction_end("N","0")
            LET r_success = FALSE
            RETURN r_success
         END IF
      END FOR
     
   END FOREACH
   
   CALL s_transaction_end("Y","0")
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="browser_fill.cnt_wc" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="browser_fill.sql_wc" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="construct.c.rtax001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtax001  #顯示到畫面上

            NEXT FIELD rtax001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtax003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_rtax003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtax003  #顯示到畫面上

            NEXT FIELD rtax003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtax006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_rtax006()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtax006  #顯示到畫面上

            NEXT FIELD rtax006                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtax007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_imca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtax007  #顯示到畫面上

            NEXT FIELD rtax007                     #返回原欄位]]>
  </point>
  <point name="construct.c.rtaxcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaxcrtdp  #顯示到畫面上

            NEXT FIELD rtaxcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtaxcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaxcrtid  #顯示到畫面上

            NEXT FIELD rtaxcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtaxmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaxmodid  #顯示到畫面上

            NEXT FIELD rtaxmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtaxowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaxowndp  #顯示到畫面上

            NEXT FIELD rtaxowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtaxownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaxownid  #顯示到畫面上

            NEXT FIELD rtaxownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.rtaxunit" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtax_m.rtaxunit
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtaxunit',g_site,'c')   #150308-00001#5  By benson add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO rtaxunit          #顯示到畫面上
            NEXT FIELD rtaxunit                              #返回原欄位  ]]>
  </point>
  <point name="default_search.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_wc = " 1=1"]]>
  </point>
  <point name="delete.before_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt FROM rtax_t
    WHERE rtaxent = g_enterprise AND rtax003 = g_rtax_m.rtax001 
      AND rtax001 != g_rtax_m.rtax001
   IF l_cnt > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axm-00002'
      LET g_errparam.extend = g_rtax_m.rtax001
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CALL s_transaction_end('N','0')
      CLOSE arti202_cl
      RETURN
   END IF]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_cnt            LIKE type_t.num5]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      DELETE FROM rtaxl_t 
       WHERE rtaxlent = g_enterprise AND rtaxl001 = g_rtax_m.rtax001 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "rtaxl_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
      END IF
      CALL arti202_upd_rtax005()]]>
  </point>
  <point name="delete.head.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="desc_show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_rtaxl003   LIKE rtaxl_t.rtaxl003]]>
  </point>
  <point name="desc_show.show" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET l_rtaxl003 = ''
      SELECT rtaxl003 INTO l_rtaxl003 FROM rtaxl_t
       WHERE rtaxlent = g_enterprise
         AND rtaxl001 = g_browser[l_ac].b_rtax001 
         AND rtaxl002 = g_dlang
      IF NOT cl_null(l_rtaxl003 ) THEN
         LET g_browser[l_ac].b_show = 
              g_browser[l_ac].b_rtax001,
                ' (',l_rtaxl003 CLIPPED,')'
      ELSE
         LET g_browser[l_ac].b_show =
              g_browser[l_ac].b_rtax001,
                ' (',g_browser[l_ac].b_rtax001 CLIPPED,')'
      END IF]]>
  </point>
  <point name="global.variable" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_modify_flag         LIKE type_t.num5  #儲存是否有做過修改的動作,如果有 在離開程式前 會進最低階品類重新計算的動作]]>
  </point>
  <point name="init.define" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_values        STRING             #ComboBox values
   DEFINE l_items         STRING             #ComboBox items
   DEFINE l_gzcb002       LIKE gzcb_t.gzcb002
   DEFINE l_gzcbl004      LIKE gzcbl_t.gzcbl004
   DEFINE l_success LIKE type_t.num5         #150308-00001#5  By benson 150309]]>
  </point>
  <point name="init.init" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_values = NULL
   LET l_items = NULL
   LET l_gzcb002 = NULL
   LET l_gzcbl004 = NULL
   
   DECLARE i110_gzcb_cs CURSOR FOR
    SELECT gzcb002,gzcbl004 FROM gzcb_t,gzcbl_t
     WHERE gzcb001 = gzcbl001 AND gzcb002 = gzcbl002
       AND gzcb001 = '2000'   AND gzcbl003 = g_dlang
     ORDER BY gzcb002
   FOREACH i110_gzcb_cs INTO l_gzcb002,l_gzcbl004
      IF cl_null(l_values) THEN
         LET l_values = l_gzcb002
      ELSE
         LET l_values = l_values CLIPPED ,",",l_gzcb002
      END IF 
      IF cl_null(l_items) THEN
         LET l_items = l_gzcb002 CLIPPED,':',l_gzcbl004
      ELSE
         LET l_items = l_items CLIPPED ,",",l_gzcb002 CLIPPED,':',l_gzcbl004
      END IF
   END FOREACH
   CALL cl_set_combo_items("rtax_t.rtax002",l_values,l_items)
   CALL cl_set_combo_items("b_rtax002",l_values,l_items)
   
   IF g_argv[1] = '1' THEN
      CALL cl_set_comp_visible("b_rtax007,lbl_rtax007,rtax007,rtax007_desc",FALSE)
   ELSE
      CALL cl_set_comp_visible("b_rtax002,lbl_rtax002,rtax002",FALSE)
      CALL cl_set_comp_visible("b_rtax005,lbl_rtax005,rtax005",FALSE)
      CALL cl_set_comp_visible("rtax009",FALSE) #sakura add
   END IF
   LET g_errshow = 1
   LET g_modify_flag = FALSE
   CALL s_aooi500_create_temp() RETURNING l_success    #150308-00001#5  By benson 150309]]>
  </point>
  <point name="input.a.rtax001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_rtax_m.rtax001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_rtax_m.rtax001 != g_rtax001_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtax_t WHERE "||"rtaxent = '" ||g_enterprise|| "' AND "||"rtax001 = '"||g_rtax_m.rtax001 ||"'",'std-00004',0) THEN 
                     LET g_rtax_m.rtax001 = g_rtax_m_t.rtax001
                     NEXT FIELD CURRENT
                  END IF
                  IF cl_null(g_rtax_m.rtax003) THEN
                     LET g_rtax_m.rtax003 = g_rtax_m.rtax001
                  ELSE
                     IF g_rtax_m.rtax003 <> g_rtax_m.rtax001 THEN 
                        IF NOT ap_chk_isExist(g_rtax_m.rtax003,"SELECT COUNT(*) FROM rtax_t WHERE rtax001 = ? ",'art-00121',1)  THEN
                           LET g_rtax_m.rtax003 = g_rtax_m_t.rtax003
                           NEXT FIELD rtax003
                        END IF
                     END IF
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.rtax003" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_rtax_m.rtax003_desc = ' '
            DISPLAY BY NAME g_rtax_m.rtax003_desc
            IF NOT cl_null(g_rtax_m.rtax003) THEN
               IF cl_null(g_rtax_m.rtax001)  OR g_rtax_m.rtax003 <> g_rtax_m.rtax001 THEN 
                  IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_rtax_m.rtax003 != g_rtax_m_t.rtax003 OR cl_null(g_rtax_m_t.rtax003)))) THEN
                     IF NOT ap_chk_isExist(g_rtax_m.rtax003,"SELECT COUNT(*) FROM rtax_t WHERE rtax001 = ? ",'art-00121',1)  THEN
                        LET g_rtax_m.rtax003 = g_rtax_m_t.rtax003
                        CALL arti202_rtax003_ref()
                        NEXT FIELD rtax003
                     END IF

                     CALL arti202_chk_rtax001_using(g_rtax_m.rtax003) RETURNING l_using
                     IF l_using = 'Y' THEN
                        INITIALIZE g_errparam TO NULL
                        #2014/12/15 by stellar add ----- (S)
                        LET l_msg = ''
                        IF g_argv[1] = '1' THEN
                           SELECT gzzal003 INTO l_msg FROM gzzal_t
                            WHERE gzzal001 = 'artm300'
                              AND gzzal002 = g_lang
                           LET l_msg = l_msg CLIPPED,'artm300'
                        ELSE
                           SELECT gzzal003 INTO l_msg FROM gzzal_t
                            WHERE gzzal001 = 'aimm200'
                              AND gzzal002 = g_lang
                           LET l_msg = l_msg CLIPPED,'aimm200'
                        END IF
                        LET g_errparam.replace[1] = l_msg
                        #2014/12/15 by stellar add ----- (E)
                        LET g_errparam.code = 'art-00123'
                        LET g_errparam.extend = g_rtax_m.rtax003
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
              
                        LET g_rtax_m.rtax003 = g_rtax_m_t.rtax003
                        CALL arti202_rtax003_ref()
                        NEXT FIELD rtax003
                     END IF
                  END IF
               END IF
            END IF

            CALL arti202_rtax003_ref()]]>
  </point>
  <point name="input.a.rtax006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtax_m.rtax006
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? ","") RETURNING g_rtn_fields
            LET g_rtax_m.rtax006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtax_m.rtax006_desc
]]>
  </point>
  <point name="input.a.rtax007" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_rtax_m.rtax007_desc = ' '
            DISPLAY BY NAME g_rtax_m.rtax007_desc
            IF NOT cl_null(g_rtax_m.rtax007) THEN
               IF NOT s_azzi650_chk_exist('200',g_rtax_m.rtax007) THEN
                  LET g_rtax_m.rtax007 = g_rtax_m_t.rtax007
                  CALL arti202_rtax007_ref()
                  NEXT FIELD rtax007
               END IF
            END IF
            CALL arti202_rtax007_ref()]]>
  </point>
  <point name="input.a.rtax008" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.rtaxcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtax_m.rtaxcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtax_m.rtaxcrtdp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtax_m.rtaxcrtdp_desc
]]>
  </point>
  <point name="input.a.rtaxcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtax_m.rtaxcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_rtax_m.rtaxcrtid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtax_m.rtaxcrtid_desc
]]>
  </point>
  <point name="input.a.rtaxmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtax_m.rtaxmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_rtax_m.rtaxmodid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtax_m.rtaxmodid_desc
]]>
  </point>
  <point name="input.a.rtaxowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtax_m.rtaxowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtax_m.rtaxowndp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtax_m.rtaxowndp_desc
]]>
  </point>
  <point name="input.a.rtaxownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtax_m.rtaxownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_rtax_m.rtaxownid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtax_m.rtaxownid_desc
]]>
  </point>
  <point name="input.a.rtaxunit" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_rtax_m.rtaxunit_desc = NULL
            DISPLAY BY NAME g_rtax_m.rtaxunit_desc
            IF NOT cl_null(g_rtax_m.rtaxunit) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_rtax_m.rtaxunit != g_rtax_m_t.rtaxunit OR g_rtax_m_t.rtaxunit IS null)) THEN
                  CALL s_aooi500_chk(g_prog,'rtaxunit',g_rtax_m.rtaxunit,g_site)
                   RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = g_rtax_m.rtaxunit
                     LET g_errparam.code   = l_errno
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     LET g_rtax_m.rtaxunit = g_rtax_m_t.rtaxunit
                     CALL arti202_rtaxunit_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL arti202_rtaxunit_ref()]]>
  </point>
  <point name="input.action" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.c.rtax003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtax_m.rtax003             #給予default值

            #給予arg

            CALL q_rtax001_1()                                #呼叫開窗

            LET g_rtax_m.rtax003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_rtax_m.rtax003 TO rtax003              #顯示到畫面上
            CALL arti202_rtax003_ref()
            NEXT FIELD rtax003                          #返回原欄位

]]>
  </point>
  <point name="input.c.rtax007" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtax_m.rtax007      #給予default值
            LET g_qryparam.arg1 = '200'
            CALL q_oocq002()                                #呼叫開窗
            LET g_rtax_m.rtax007 = g_qryparam.return1       #將開窗取得的值回傳到變數
            DISPLAY g_rtax_m.rtax007 TO rtax007             #顯示到畫面上
            CALL arti202_rtax007_ref()
            NEXT FIELD rtax007                              #返回原欄位]]>
  </point>
  <point name="input.c.rtaxunit" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtax_m.rtaxunit
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtaxunit',g_site,'i')   #150308-00001#5  By benson add 'i'
            CALL q_ooef001_24()
            LET g_rtax_m.rtaxunit = g_qryparam.return1   
            DISPLAY g_rtax_m.rtaxunit TO rtaxunit            #顯示到畫面上
            CALL arti202_rtaxunit_ref()  
            NEXT FIELD rtaxunit                              #返回原欄位  ]]>
  </point>
  <point name="input.define" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_using         LIKE type_t.chr1
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_errno         LIKE type_t.chr10
   DEFINE l_msg           LIKE type_t.chr50]]>
  </point>
  <point name="input.head.a_insert" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                     CALL arti202_upd_rtax005()
                     LET g_modify_flag = TRUE]]>
  </point>
  <point name="input.head.a_update" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        CALL arti202_upd_rtax005()
                        CALL arti202_upd_child(g_rtax_m.rtax001)
                        LET g_modify_flag = TRUE]]>
  </point>
  <point name="input.head.b_insert" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                     IF NOT s_transaction_chk('Y','0') THEN
                        CALL s_transaction_begin()
                     END IF
                     IF g_rtax_m.rtax001 = g_rtax_m.rtax003 AND g_rtax_m.rtax002 != '1' THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'axm-00001'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                    
                        CALL s_transaction_end('N','0')
                        NEXT FIELD CURRENT
                     END IF
                     CALL arti202_cal_rtax004()
                     CALL arti202_search_rtax006()]]>
  </point>
  <point name="input.head.b_update" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  IF NOT s_transaction_chk('Y','0') THEN
                     CALL s_transaction_begin()
                  END IF
                  
                  IF g_rtax_m.rtax001 = g_rtax_m.rtax003 AND g_rtax_m.rtax002 != '1' THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axm-00001'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                  
                     CALL s_transaction_end('N','0')
                     NEXT FIELD CURRENT
                  END IF
                  CALL arti202_cal_rtax004()
                  CALL arti202_search_rtax006()]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL n_rtaxl(g_rtax_m.rtax001)
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_rtax_m.rtax001
               CALL ap_ref_array2(g_ref_fields," SELECT rtaxl003,rtaxl004 FROM rtaxl_t WHERE rtaxlent = '"||g_enterprise||"' AND rtaxl001 = ? AND rtaxl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
               LET g_rtax_m.rtaxl003 = g_rtn_fields[1] 
               LET g_rtax_m.rtaxl004 = g_rtn_fields[2] 
               DISPLAY BY NAME g_rtax_m.rtaxl003,g_rtax_m.rtaxl004]]>
  </point>
  <point name="insert.default" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL s_aooi500_default(g_prog,'rtaxunit',g_site)
       RETURNING l_insert,g_rtax_m.rtaxunit
      IF NOT l_insert THEN
        RETURN
      END IF
      CALL arti202_rtaxunit_ref()
     IF g_current_idx = 0 THEN
         LET g_rtax_m.rtax003 = ''
      ELSE
         IF cl_null(g_browser[g_current_idx].b_rtax001) THEN
            LET g_rtax_m.rtax003 = ''
         ELSE
            CALL arti202_chk_rtax001_using(g_browser[g_current_idx].b_rtax001) RETURNING l_using
            IF l_using = 'Y' THEN
               LET g_rtax_m.rtax003 = ''
            ELSE
               LET g_rtax_m.rtax003 = g_browser[g_current_idx].b_rtax001
            END IF
         END IF
      END IF
      CALL arti202_rtax003_ref()
      CALL arti202_rtax006_ref()
      CALL arti202_rtax007_ref()
      LET g_rtax_m_t.* = g_rtax_m.*
      LET g_rtax_m.rtax009 = "N" #檢驗否]]>
  </point>
  <point name="insert.define" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_insert   LIKE type_t.num5
   DEFINE l_using    LIKE type_t.chr1]]>
  </point>
  <point name="main.define" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success     LIKE type_t.num5]]>
  </point>
  <point name="main.exit" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_modify_flag THEN
      CALL arti202_compute_rtaw()
       RETURNING l_success
   END IF
   CALL s_aooi500_drop_temp() RETURNING l_success      #150308-00001#5  By benson 150309]]>
  </point>
  <point name="menu.compute_rtaw" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt FROM rtaw_t
                WHERE rtawent = g_enterprise
               IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
               IF l_cnt > 0 THEN
                  CALL cl_ask_confirm('art-00475')
                   RETURNING l_flag   
               END IF      
               IF l_cnt = 0 OR l_flag = TRUE THEN            
                  IF arti202_compute_rtaw() THEN
                     CALL cl_ask_pressanykey('art-00473')
                     LET g_modify_flag = FALSE
                  ELSE
                     CALL cl_ask_pressanykey('art-00474')
                  END IF                     
               END IF   ]]>
  </point>
  <point name="menu2.compute_rtaw" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt FROM rtaw_t
                WHERE rtawent = g_enterprise
               IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
               IF l_cnt > 0 THEN
                  CALL cl_ask_confirm('art-00475')
                   RETURNING l_flag   
               END IF      
               IF l_cnt = 0 OR l_flag = TRUE THEN            
                  IF arti202_compute_rtaw() THEN
                     CALL cl_ask_pressanykey('art-00473')
                     LET g_modify_flag = FALSE
                  ELSE
                     CALL cl_ask_pressanykey('art-00474')
                  END IF                     
               END IF               ]]>
  </point>
  <point name="reproduce.a.rtax001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtax_t WHERE "||"rtaxent = '" ||g_enterprise|| "' AND "||"rtax001 = '"||l_newno ||"'",'std-00004',0) THEN 
            LET l_newno = ''
            DISPLAY l_newno TO rtax001
            NEXT FIELD CURRENT
         END IF]]>
  </point>
  <point name="reproduce.define" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_insert          LIKE type_t.num5
   DEFINE l_using    LIKE type_t.chr1]]>
  </point>
  <point name="reproduce.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_rtax_m.* = g_rtax_m_t.*]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_default(g_prog,'rtaxunit',g_site)
    RETURNING l_insert,g_rtax_m.rtaxunit
   IF NOT l_insert THEN
     RETURN
   END IF
   CALL arti202_rtaxunit_ref()
   
     IF g_current_idx = 0 THEN
         LET g_rtax_m.rtax003 = ''
      ELSE
         IF cl_null(g_browser[g_current_idx].b_rtax001) THEN
            LET g_rtax_m.rtax003 = ''
         ELSE
            CALL arti202_chk_rtax001_using(g_browser[g_current_idx].b_rtax001) RETURNING l_using
            IF l_using = 'Y' THEN
               LET g_rtax_m.rtax003 = ''
            ELSE
               LET g_rtax_m.rtax003 = g_browser[g_current_idx].b_rtax001
            END IF
         END IF
      END IF
   CALL arti202_rtax003_ref()    
   
   LET g_rtax_m.rtax001 = ''
   LET g_rtax_m_t.* = g_rtax_m.*]]>
  </point>
  <point name="reproduce.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_rtax_m_t.* = g_rtax_m.*
   LET g_rtax_m.rtax001 = l_master.rtax001
   LET g_rtax_m.rtax003 = l_master.rtax003
   LET g_rtax_m.rtax004 = l_master.rtax004
   CALL arti202_cal_rtax004()
   CALL arti202_search_rtax006()         
   LET l_master.rtax004 = g_rtax_m.rtax004
   LET l_master.rtax006 = g_rtax_m.rtax006
   LET l_master.rtaxstus = 'Y']]>
  </point>
  <point name="reproduce.head.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "rtax_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CALL s_transaction_end('N','1')
      RETURN
   END IF
   CALL arti202_upd_rtax005()
   CALL arti202_upd_child(g_rtax_m.rtax001)]]>
  </point>
  <point name="set_entry.after_control" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL  cl_set_comp_entry("rtaxunit",TRUE)]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT s_aooi500_comp_entry(g_prog,'rtaxunit') THEN
      CALL  cl_set_comp_entry("rtaxunit",FALSE)
   END IF]]>
  </point>
  <point name="show.after" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_rtaxl003    LIKE rtaxl_t.rtaxl003]]>
  </point>
  <point name="show.head.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtax_m.rtax001
   CALL ap_ref_array2(g_ref_fields," SELECT rtaxl003,rtaxl004 FROM rtaxl_t WHERE rtaxlent = '"||g_enterprise||"' AND rtaxl001 = ? AND rtaxl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_rtax_m.rtaxl003 = g_rtn_fields[1] 
   LET g_rtax_m.rtaxl004 = g_rtn_fields[2] 
   DISPLAY BY NAME g_rtax_m.rtaxl003,g_rtax_m.rtaxl004]]>
  </point>
  <point name="ui_dialog.define" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_cnt        LIKE type_t.num5
   DEFINE l_flag       LIKE type_t.num5]]>
  </point>
  <section id="arti202.action_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION arti202_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="arti202.browser_create" ver="11" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION arti202_browser_create(p_type)
   DEFINE p_type   LIKE type_t.chr50
   DEFINE l_pid    LIKE type_t.chr50
   #add-point:browser_create
   {<point name="browser_create.define" edit="s"/>}
   #end add-point
   #add-point:browser_create
   {<point name="browser_create.define_customerization" edit="c"/>}
   #end add-point
   
   #先找出所有的帳別資料
   
   LET l_ac = 1
      #確定root節點所在
      #此處為帳別部分(LV-1)
      
      #抓出LV2的所有資料
      #LET g_sql = " SELECT UNIQUE t0.rtax004,t0.rtax002,t0.rtax005,t0.rtax006,t0.rtax007,t0.rtax001, 
      #    t0.rtax003,exp_code FROM arti202_tmp a ",
      LET g_sql = " SELECT UNIQUE '','','','FALSE','','',exp_code,rtax004,rtax002,rtax005,rtax006,'', 
          rtax007,rtax001,rtax003,t1.rtaxl003 FROM arti202_tmp a ",
                                 " LEFT JOIN rtaxl_t t1 ON t1.rtaxlent='"||g_enterprise||"' AND t1.rtaxl001=rtax006 AND t1.rtaxl002='"||g_lang||"' ",
 
                  " WHERE ",
                  " (( SELECT COUNT(*) FROM arti202_tmp b WHERE a.rtax003 = b.rtax001 ", 
                  ") = 0 OR ", 
                  " a.rtax001 = a.rtax003 )", 
                  " ORDER BY a.rtax001"
      #add-point:browser_create.before_pre
      {<point name="browser_create.before_pre"/>}
      #end add-point
 
      PREPARE master_getLV2 FROM g_sql
      DECLARE master_getLV2cur CURSOR FOR master_getLV2
      
      #以下為一般資料root(LV-2)
      
      LET g_cnt = l_ac
      FOREACH master_getLV2cur INTO g_browser[g_cnt].*,g_browser[g_cnt].b_rtax006_desc 
         #去除多餘空白
         #LET g_browser[g_cnt].b_rtax001 = g_browser[g_cnt].b_rtax001 CLIPPED
         LET g_browser[g_cnt].b_pid = l_pid
         LET g_browser[g_cnt].b_id  = l_pid,".",g_cnt USING "<<<"
         LET g_browser[g_cnt].b_exp = FALSE
         LET g_browser[g_cnt].b_expcode = 2
         #CASE g_browser[g_cnt].b_expcode
         #   WHEN 2
         #      LET g_browser[g_cnt].b_hasC = arti202_chk_hasC(g_cnt)
         #   WHEN 1
         #      LET g_browser[g_cnt].b_hasC = arti202_chk_hasC(g_cnt)
         #   WHEN 0
         #      LET g_browser[g_cnt].b_hasC = FALSE
         #   WHEN -1
         #      #向下查找到展開值不等於-1得節點(temp table中查找)
         #      LET g_cnt = arti202_find_node(g_cnt)
         #END CASE
         IF cl_null("rtax003") THEN
            LET g_browser[g_cnt].b_hasC = FALSE
         ELSE
            LET g_browser[g_cnt].b_hasC = TRUE
         END IF
 
         LET g_cnt = g_cnt + 1
      END FOREACH
      LET l_ac = g_browser.getLength()
 
   
   #組合描述欄位&刪除多於資料
   FOR l_ac = 1 TO g_browser.getLength()
      IF cl_null(g_browser[l_ac].b_rtax001) THEN
         CALL g_browser.deleteElement(l_ac)
         LET l_ac = l_ac - 1
      ELSE
         CALL arti202_desc_show(l_ac)
      END IF
   END FOR
   CALL g_browser.deleteElement(l_ac)
 
   LET g_browser_cnt = g_browser.getLength() - g_browser_root.getLength()
 
   FREE tree_expand
   FREE master_getLV2
   
END FUNCTION
]]>
  </section>
  <section id="arti202.browser_expand" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ Tree子節點展開
PRIVATE FUNCTION arti202_browser_expand(p_id)
   DEFINE p_id          LIKE type_t.num10
   DEFINE l_id          LIKE type_t.num10
   DEFINE l_cnt         LIKE type_t.num10
   DEFINE l_keyvalue    LIKE type_t.chr50
   DEFINE l_typevalue   LIKE type_t.chr50
   DEFINE l_type        LIKE type_t.chr50
   DEFINE l_sql         STRING
   DEFINE ls_source     LIKE type_t.chr500
   DEFINE ls_exp_code   LIKE type_t.chr500
   DEFINE l_return      LIKE type_t.num5
   DEFINE ls_ent_wc     LIKE type_t.chr500
   #add-point:browser_expand段define
   {<point name="browser_expand.define" edit="s"/>}
   #end add-point
   #add-point:browser_expand段define
   {<point name="browser_expand.define_customerization" edit="c"/>}
   #end add-point
   
   #若已經展開
   IF g_browser[p_id].b_isExp = 1 THEN
      RETURN
   END IF
   
   LET l_return = FALSE
 
   LET l_keyvalue = g_browser[p_id].b_rtax001
   
   CASE g_browser[p_id].b_expcode
      WHEN -1
         CALL g_browser.deleteElement(p_id)
      WHEN 0
         RETURN
      WHEN 1
         LET ls_source = "arti202_tmp"
         LET ls_exp_code = "exp_code"
      WHEN 2
         LET ls_source = "rtax_t"
         LET ls_exp_code = "'2'"
         LET ls_ent_wc = " rtaxent = '" ||g_enterprise|| "' AND "
   END CASE
    
   LET l_sql = " SELECT UNIQUE '','','','FALSE','','',",ls_exp_code,",rtax004,rtax002,rtax005,rtax006, 
       '',rtax007,rtax001,rtax003,t1.rtaxl003 ",
               " FROM ",ls_source,
                              " LEFT JOIN rtaxl_t t1 ON t1.rtaxlent='"||g_enterprise||"' AND t1.rtaxl001=rtax006 AND t1.rtaxl002='"||g_lang||"' ",
 
               " WHERE ",ls_ent_wc,"rtax003 = '", l_keyvalue,
               "' AND rtax001 <> rtax003",
               " ORDER BY rtax001"
   
   #add-point:browser_expand段before_pre
   {<point name="browser_expand.before_pre"/>}
   #end add-point
   
   LET l_sql = cl_sql_add_mask(l_sql)              #遮蔽特定資料
   PREPARE tree_expand FROM l_sql
   DECLARE tree_ex_cur CURSOR FOR tree_expand
  
   LET l_id = p_id + 1
   LET g_cnt = p_id + 1
   CALL g_browser.insertElement(l_id)
   LET l_cnt = 1
   FOREACH tree_ex_cur INTO g_browser[l_id].*,g_browser[g_cnt].b_rtax006_desc 
      #pid=父節點id
      LET g_browser[l_id].b_pid = g_browser[p_id].b_id
      #id=本身節點id(採流水號遞增)
      LET g_browser[l_id].b_id = g_browser[p_id].b_id||"."||l_cnt
      #hasC=確認該節點是否有子孫
      CALL arti202_desc_show(l_id)
      LET g_browser[l_id].b_hasC = arti202_chk_hasC(l_id)
      LET l_id = l_id + 1
      LET g_cnt = l_id
      CALL g_browser.insertElement(l_id)
      LET l_cnt = l_cnt + 1
      LET l_return = TRUE
   END FOREACH
   
   #刪除空資料
   CALL g_browser.deleteElement(l_id)
   DISPLAY g_browser.getLength() TO FORMONLY.h_count 
 
END FUNCTION
]]>
  </section>
  <section id="arti202.browser_fill" ver="15" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽where條件組成
PRIVATE FUNCTION arti202_browser_fill(p_wc,p_type)
   DEFINE p_wc       STRING 
   DEFINE p_type     LIKE type_t.chr10
   DEFINE l_cnt      LIKE type_t.num10
   DEFINE l_cnt2     LIKE type_t.num10   
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point
   #add-point:browser_fill段define
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:browser_fill段fill資料前
   {<point name="browser_fill.before_fill"/>}
   #end add-point
 
   CALL g_browser.clear()
   CLEAR FORM
   LET l_cnt = 0
   LET l_cnt2 = 0
   
   DROP TABLE arti202_tmp
   
   #Create temp table
   CREATE TEMP TABLE arti202_tmp
   (
         rtax004 VARCHAR(500),
   rtax002 VARCHAR(500),
   rtax005 VARCHAR(500),
   rtax006 VARCHAR(500),
   rtax006_desc VARCHAR(500),
   rtax007 VARCHAR(500),
   rtax001 VARCHAR(500),
   rtax003 VARCHAR(500),
      #僅含browser的欄位
      exp_code  VARCHAR(5)
   );
 
   #先確定搜尋範圍(若無條件搜尋則只找root出來)
   SELECT COUNT(*) INTO l_cnt FROM rtax_t WHERE rtaxent = g_enterprise AND 1=1
   
   #取得符合p_wc的所有資料
   LET g_sql = "SELECT COUNT(*)",
               " FROM rtax_t ",
               "  LEFT JOIN rtaxl_t ON rtaxlent = '"||g_enterprise||"' AND rtax001 = rtaxl001 AND rtaxl002 = '",g_dlang,"' ",
               " WHERE rtaxent = '" ||g_enterprise|| "' AND ",p_wc ,cl_sql_add_filter("rtax_t")
   #add-point:browser_fill段cnt wc
   {<point name="browser_fill.cnt_wc"/>}
   #end add-point
              
   PREPARE master_cnt FROM g_sql
   DECLARE master_cntcur CURSOR FOR master_cnt
   OPEN master_cntcur
   FETCH master_cntcur INTO l_cnt2
   LET g_root_search = FALSE
   
   IF l_cnt2 = 0 THEN
      #INITIALIZE g_errparam TO NULL 
      #LET g_errparam.extend = "" 
      #LET g_errparam.code   = "-100" 
      #LET g_errparam.popup  = TRUE 
      #CALL cl_err()
      RETURN
   END IF
   
   IF l_cnt = l_cnt2 THEN
      #未輸入條件時則只查找root節點
      LET p_wc = " rtax001 = rtax003 "
      LET g_root_search = TRUE
   END IF
 
   #取得符合p_wc的所有資料
   LET g_sql = "SELECT rtax004,rtax002,rtax005,rtax006,'',rtax007,rtax001,rtax003 ",
               " FROM rtax_t",
               "  LEFT JOIN rtaxl_t ON rtaxlent = '"||g_enterprise||"' AND rtax001 = rtaxl001 AND rtaxl002 = '",g_dlang,"' ",
               " WHERE rtaxent = '" ||g_enterprise|| "' AND ",p_wc ,cl_sql_add_filter("rtax_t")
   #add-point:browser_fill段sql wc
   {<point name="browser_fill.sql_wc"/>}
   #end add-point
   #LET g_sql = cl_sql_add_tabid(g_sql,"rtax_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料           
   PREPARE master_ext FROM g_sql
   DECLARE master_extcur CURSOR FOR master_ext
 
   #搜尋建構樹所需的節點
   CASE p_type
      WHEN "1" #上推
         CALL arti202_match_node(p_wc,p_type) 
      WHEN "2" #下展
         #CALL arti202_find_speed_tbl(p_wc,p_type) 
         CALL arti202_match_node(p_wc,p_type) 
      WHEN "3" #全部
         CALL arti202_match_node(p_wc,p_type) 
   END CASE
 
   CALL arti202_browser_create(p_type)
     
END FUNCTION
]]>
  </section>
  <section id="arti202.check" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 避免資料錯誤
PRIVATE FUNCTION arti202_check(ps_id,ps_pid)
   DEFINE ps_id       STRING
   DEFINE ps_pid      STRING
   DEFINE ps_type     STRING
   DEFINE ls_pid      LIKE type_t.chr100
   DEFINE ls_id       LIKE type_t.chr100
   DEFINE ls_type     LIKE type_t.chr100
   DEFINE ls_return   LIKE type_t.num5
   DEFINE ls_sql      STRING
   DEFINE li_cnt      LIKE type_t.num10
   #add-point:check段define
   {<point name="check.define" edit="s"/>}
   #end add-point
   #add-point:check段define
   {<point name="check.define_customerization" edit="c"/>}
   #end add-point
   
   #從該節點往上檢查, 若出現ID重複的狀況代表會導致無限迴圈
   LET ls_sql = " SELECT rtax001,rtax003 FROM ",
                " (SELECT rtax001,rtax003 FROM rtax_t WHERE rtaxent = '" ||g_enterprise|| "' AND rtax001<>rtax003)", 

                " WHERE rtax001 = '",ps_id,"' OR rtax003 = '",ps_id,"'",
                " START WITH rtax001='",ps_pid,"'",
                " CONNECT BY PRIOR rtax003=rtax001 "
 
   PREPARE check_cnt FROM ls_sql
   DECLARE check_cntcur CURSOR FOR check_cnt
   OPEN check_cntcur
   FETCH check_cntcur INTO li_cnt
 
   IF li_cnt > 0 THEN
      LET ls_return = TRUE
   ELSE
      LET ls_return = FALSE
   END IF
   
   RETURN ls_return 
   
END FUNCTION
]]>
  </section>
  <section id="arti202.chk_hasC" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION arti202_chk_hasC(pi_id)
   DEFINE pi_id    LIKE type_t.num10
   DEFINE li_cnt   LIKE type_t.num10
   #add-point:chk_hasC段define
   {<point name="chk_hasC.define" edit="s"/>}
   #end add-point
   #add-point:chk_hasC段define
   {<point name="chk_hasC.define_customerization" edit="c"/>}
   #end add-point
   
   LET g_sql = "SELECT COUNT(rtax003) FROM arti202_tmp ",
               " WHERE ",
                "rtax003 = ? AND ",
                "exp_code <> '-1' AND rtax001 <> rtax003 "
 
   PREPARE arti202_temp_chk FROM g_sql
 
   LET g_sql = "SELECT COUNT(*) FROM rtax_t ",
               " WHERE rtaxent = '" ||g_enterprise|| "' AND ", 
               "rtax001 <> rtax003 AND ",
               "rtax003 = ? ",
               cl_sql_add_filter("rtax_t")
   
   PREPARE arti202_master_chk FROM g_sql
   
   CASE g_browser[pi_id].b_expcode 
      WHEN -1
         RETURN FALSE
      WHEN 0
         RETURN FALSE
      WHEN 1
         EXECUTE arti202_temp_chk 
           USING g_browser[pi_id].b_rtax001
            INTO li_cnt
         FREE arti202_temp_chk
      WHEN 2 
         EXECUTE arti202_master_chk 
           USING g_browser[pi_id].b_rtax001
            INTO li_cnt
         FREE arti202_master_chk
   END CASE
    
   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="arti202.construct" ver="11" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION arti202_construct()
   DEFINE ls_wc       STRING
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point
   #add-point:cs段define
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point
   
   #清除畫面
   CLEAR FORM
   INITIALIZE g_rtax_m.* TO NULL
   INITIALIZE g_wc TO NULL
   LET g_qryparam.state = "c"
    
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      CONSTRUCT BY NAME g_wc ON rtax001,rtaxl003,rtaxl004,rtax002,rtax003,rtax004,rtax005,rtax006,rtax007, 
          rtaxunit,rtax009,rtaxstus,rtaxownid,rtaxowndp,rtaxcrtid,rtaxcrtdt,rtaxcrtdp,rtaxmodid,rtaxmoddt  

      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
            
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<rtaxcrtdt>>----
         AFTER FIELD rtaxcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<rtaxmoddt>>----
         AFTER FIELD rtaxmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtaxcnfdt>>----
         
         #----<<rtaxpstdt>>----
 
 
 
                  #Ctrlp:construct.c.rtax001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtax001
            #add-point:ON ACTION controlp INFIELD rtax001
            {<point name="construct.c.rtax001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtax001
            #add-point:BEFORE FIELD rtax001
            {<point name="construct.b.rtax001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtax001
            
            #add-point:AFTER FIELD rtax001
            {<point name="construct.a.rtax001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaxl003
            #add-point:BEFORE FIELD rtaxl003
            {<point name="construct.b.rtaxl003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaxl003
            
            #add-point:AFTER FIELD rtaxl003
            {<point name="construct.a.rtaxl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtaxl003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaxl003
            #add-point:ON ACTION controlp INFIELD rtaxl003
            {<point name="construct.c.rtaxl003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaxl004
            #add-point:BEFORE FIELD rtaxl004
            {<point name="construct.b.rtaxl004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaxl004
            
            #add-point:AFTER FIELD rtaxl004
            {<point name="construct.a.rtaxl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtaxl004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaxl004
            #add-point:ON ACTION controlp INFIELD rtaxl004
            {<point name="construct.c.rtaxl004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtax002
            #add-point:BEFORE FIELD rtax002
            {<point name="construct.b.rtax002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtax002
            
            #add-point:AFTER FIELD rtax002
            {<point name="construct.a.rtax002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtax002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtax002
            #add-point:ON ACTION controlp INFIELD rtax002
            {<point name="construct.c.rtax002" />}
            #END add-point
 
         #Ctrlp:construct.c.rtax003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtax003
            #add-point:ON ACTION controlp INFIELD rtax003
            {<point name="construct.c.rtax003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtax003
            #add-point:BEFORE FIELD rtax003
            {<point name="construct.b.rtax003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtax003
            
            #add-point:AFTER FIELD rtax003
            {<point name="construct.a.rtax003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtax004
            #add-point:BEFORE FIELD rtax004
            {<point name="construct.b.rtax004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtax004
            
            #add-point:AFTER FIELD rtax004
            {<point name="construct.a.rtax004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtax004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtax004
            #add-point:ON ACTION controlp INFIELD rtax004
            {<point name="construct.c.rtax004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtax005
            #add-point:BEFORE FIELD rtax005
            {<point name="construct.b.rtax005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtax005
            
            #add-point:AFTER FIELD rtax005
            {<point name="construct.a.rtax005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtax005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtax005
            #add-point:ON ACTION controlp INFIELD rtax005
            {<point name="construct.c.rtax005" />}
            #END add-point
 
         #Ctrlp:construct.c.rtax006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtax006
            #add-point:ON ACTION controlp INFIELD rtax006
            {<point name="construct.c.rtax006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtax006
            #add-point:BEFORE FIELD rtax006
            {<point name="construct.b.rtax006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtax006
            
            #add-point:AFTER FIELD rtax006
            {<point name="construct.a.rtax006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtax007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtax007
            #add-point:ON ACTION controlp INFIELD rtax007
            {<point name="construct.c.rtax007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtax007
            #add-point:BEFORE FIELD rtax007
            {<point name="construct.b.rtax007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtax007
            
            #add-point:AFTER FIELD rtax007
            {<point name="construct.a.rtax007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaxunit
            #add-point:BEFORE FIELD rtaxunit
            {<point name="construct.b.rtaxunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaxunit
            
            #add-point:AFTER FIELD rtaxunit
            {<point name="construct.a.rtaxunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtaxunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaxunit
            #add-point:ON ACTION controlp INFIELD rtaxunit
            {<point name="construct.c.rtaxunit" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtax009
            #add-point:BEFORE FIELD rtax009
            {<point name="construct.b.rtax009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtax009
            
            #add-point:AFTER FIELD rtax009
            {<point name="construct.a.rtax009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtax009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtax009
            #add-point:ON ACTION controlp INFIELD rtax009
            {<point name="construct.c.rtax009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaxstus
            #add-point:BEFORE FIELD rtaxstus
            {<point name="construct.b.rtaxstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaxstus
            
            #add-point:AFTER FIELD rtaxstus
            {<point name="construct.a.rtaxstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtaxstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaxstus
            #add-point:ON ACTION controlp INFIELD rtaxstus
            {<point name="construct.c.rtaxstus" />}
            #END add-point
 
         #Ctrlp:construct.c.rtaxownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaxownid
            #add-point:ON ACTION controlp INFIELD rtaxownid
            {<point name="construct.c.rtaxownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaxownid
            #add-point:BEFORE FIELD rtaxownid
            {<point name="construct.b.rtaxownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaxownid
            
            #add-point:AFTER FIELD rtaxownid
            {<point name="construct.a.rtaxownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtaxowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaxowndp
            #add-point:ON ACTION controlp INFIELD rtaxowndp
            {<point name="construct.c.rtaxowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaxowndp
            #add-point:BEFORE FIELD rtaxowndp
            {<point name="construct.b.rtaxowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaxowndp
            
            #add-point:AFTER FIELD rtaxowndp
            {<point name="construct.a.rtaxowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtaxcrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaxcrtid
            #add-point:ON ACTION controlp INFIELD rtaxcrtid
            {<point name="construct.c.rtaxcrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaxcrtid
            #add-point:BEFORE FIELD rtaxcrtid
            {<point name="construct.b.rtaxcrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaxcrtid
            
            #add-point:AFTER FIELD rtaxcrtid
            {<point name="construct.a.rtaxcrtid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaxcrtdt
            #add-point:BEFORE FIELD rtaxcrtdt
            {<point name="construct.b.rtaxcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.rtaxcrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaxcrtdp
            #add-point:ON ACTION controlp INFIELD rtaxcrtdp
            {<point name="construct.c.rtaxcrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaxcrtdp
            #add-point:BEFORE FIELD rtaxcrtdp
            {<point name="construct.b.rtaxcrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaxcrtdp
            
            #add-point:AFTER FIELD rtaxcrtdp
            {<point name="construct.a.rtaxcrtdp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtaxmodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaxmodid
            #add-point:ON ACTION controlp INFIELD rtaxmodid
            {<point name="construct.c.rtaxmodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaxmodid
            #add-point:BEFORE FIELD rtaxmodid
            {<point name="construct.b.rtaxmodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaxmodid
            
            #add-point:AFTER FIELD rtaxmodid
            {<point name="construct.a.rtaxmodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaxmoddt
            #add-point:BEFORE FIELD rtaxmoddt
            {<point name="construct.b.rtaxmoddt" />}
            #END add-point
 
 
       
      END CONSTRUCT
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point
         
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段before dialog
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list('m') RETURNING ls_wc
      
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
      CONTINUE DIALOG
 
   END DIALOG
 
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="arti202.default_search" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數預設搜尋
PRIVATE FUNCTION arti202_default_search()
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point
   #add-point:default_search段define
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   IF g_searchtype = 0 OR cl_null(g_searchtype) THEN
      LET g_searchtype = 3
   END IF 
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " rtax001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc = ls_wc
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #CALL arti202_browser_fill(g_wc,g_searchtype)
 
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="arti202.delete" ver="13" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION arti202_delete(l_dialog)
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_dialog        ui.DIALOG
   DEFINE li_status       LIKE type_t.num5  #SQL實體資料刪除狀態
   DEFINE li_cnt          LIKE type_t.num10 #查看本階是否有兄弟資料
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point
   #add-point:delete段define
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point
   
   IF g_rtax_m.rtax001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:delete段before_delete
   {<point name="delete.before_delete"/>}
   #end add-point
 
   EXECUTE arti202_master_referesh USING g_rtax_m.rtax001 INTO g_rtax_m.rtax001,g_rtax_m.rtax002,g_rtax_m.rtax003, 
       g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax007,g_rtax_m.rtaxunit,g_rtax_m.rtax009, 
       g_rtax_m.rtaxstus,g_rtax_m.rtaxownid,g_rtax_m.rtaxowndp,g_rtax_m.rtaxcrtid,g_rtax_m.rtaxcrtdt, 
       g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxmodid,g_rtax_m.rtaxmoddt,g_rtax_m.rtax003_desc,g_rtax_m.rtax006_desc, 
       g_rtax_m.rtax007_desc,g_rtax_m.rtaxunit_desc,g_rtax_m.rtaxownid_desc,g_rtax_m.rtaxowndp_desc, 
       g_rtax_m.rtaxcrtid_desc,g_rtax_m.rtaxcrtdp_desc,g_rtax_m.rtaxmodid_desc
    
   #檢查是否允許此動作
   IF NOT arti202_action_chk() THEN
      RETURN
   END IF
    
   CALL arti202_show()
   
   #Transaction開始
   CALL s_transaction_begin()
   
   LET g_master_multi_table_t.rtaxl001 = g_rtax_m.rtax001
LET g_master_multi_table_t.rtaxl003 = g_rtax_m.rtaxl003
LET g_master_multi_table_t.rtaxl004 = g_rtax_m.rtaxl004
 
 
   OPEN arti202_cl USING g_enterprise,g_rtax_m.rtax001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN arti202_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE arti202_cl
      CALL s_transaction_end("N","0")
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH arti202_cl INTO g_rtax_m.rtax001,g_rtax_m.rtaxl003,g_rtax_m.rtaxl004,g_rtax_m.rtax002,g_rtax_m.rtax003, 
       g_rtax_m.rtax003_desc,g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax006_desc, 
       g_rtax_m.rtax007,g_rtax_m.rtax007_desc,g_rtax_m.rtaxunit,g_rtax_m.rtaxunit_desc,g_rtax_m.rtax009, 
       g_rtax_m.rtaxstus,g_rtax_m.rtaxownid,g_rtax_m.rtaxownid_desc,g_rtax_m.rtaxowndp,g_rtax_m.rtaxowndp_desc, 
       g_rtax_m.rtaxcrtid,g_rtax_m.rtaxcrtid_desc,g_rtax_m.rtaxcrtdt,g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxcrtdp_desc, 
       g_rtax_m.rtaxmodid,g_rtax_m.rtaxmodid_desc,g_rtax_m.rtaxmoddt
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_rtax_m.rtax001 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end("N","0")
      RETURN
   END IF
 
   #先判斷是否有子節點(hasC) 詢問是否砍除全部
   IF g_browser[g_current_idx].b_hasC THEN
      IF cl_ask_delete_all_node() THEN
         LET li_status = arti202_sql_delete(TRUE)
      ELSE
         LET li_status = FALSE
      END IF
   ELSE
      #如果沒有子節點,詢問是否刪除本筆資料
      IF cl_ask_delete() THEN
         LET li_status = arti202_sql_delete(FALSE)
      ELSE
         LET li_status = FALSE
      END IF
   END IF
 
   #檢查實體砍除是否發生意外中止
   IF NOT li_status THEN
      CALL s_transaction_end("N","0")
      CLOSE arti202_cl
      RETURN
   END IF
 
   #刪除節點與資料內容
   CALL l_dialog.deleteNode("s_browse",g_current_idx)  #deleteNode會順便幫忙做deleteElement
 
   #確認這一階還有沒有兄弟 (有:不異動上階屬性/否:上階hasC及exp設定成0)
   #SELECT COUNT(*) INTO li_cnt
   #  FROM rtax_t
   # WHERE rtax003 = g_rtax_m.rtax003
   #IF g_current_idx > 1 THEN
   #   IF li_cnt = 0  THEN
   #      LET g_browser[g_current_idx - 1].b_hasC = 0
   #      LET g_browser[g_current_idx - 1].b_exp = 0
   #   END IF
   #END IF
 
   #add-point:單頭刪除後
   {<point name="delete.head.a_delete"/>}
   #end add-point
   
   IF g_current_idx > 1 THEN
      LET g_current_idx = g_current_idx - 1
   END IF
   
   IF g_browser.getLength() > 0 THEN
      CALL arti202_fetch("")
   END IF
 
   IF NOT cl_log_modified_record('','') THEN 
      CLOSE arti202_cl
      CALL s_transaction_end('N','0')
   ELSE
      CLOSE arti202_cl
      CALL s_transaction_end('Y','0')
   END IF
 
   #功能已完成,通報訊息中心
   CALL arti202_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="arti202.desc_show" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 組合顯示在畫面上的資訊
PRIVATE FUNCTION arti202_desc_show(pi_ac)
   DEFINE pi_ac   LIKE type_t.num10
   DEFINE li_tmp  LIKE type_t.num10   
   #add-point:desc_show段define
   {<point name="desc_show.define" edit="s"/>}
   #end add-point
   #add-point:desc_show段define
   {<point name="desc_show.define_customerization" edit="c"/>}
   #end add-point
 
   LET li_tmp = l_ac
   LET l_ac = pi_ac
   
   
   #add-point:browser_create段desc處理
   {<point name="desc_show.show"/>} 
   #end add-point
 
   LET l_ac = li_tmp
 
END FUNCTION
]]>
  </section>
  <section id="arti202.description" ver="4" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:8,PR版次:8) Build-000255
#+ 
#+ Filename...: arti202
#+ Description: 品類維護作業
#+ Creator....: 01752(2013-07-01 00:00:00)
#+ Modifier...: 01752(2015-07-03 22:16:38) -SD/PR-
]]>
  </section>
  <section id="arti202.fetch" ver="13" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION arti202_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   DEFINE ls_chk     STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point
   #add-point:fetch段define
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fetch前
   {<point name="fetch.befroe_fetch"/>}
   #end add-point 
 
 
   #瀏覽頁筆數顯示
   LET li_idx = 1
   FOR li_idx = 1 TO g_browser_root.getLength()
      IF g_browser_root[li_idx] > g_current_idx THEN
       EXIT FOR
      END IF
   END FOR
   LET li_idx = g_current_idx - li_idx + 1
   #DISPLAY li_idx TO FORMONLY.h_index   #當下筆數
 
   IF p_flag = "/" THEN
      IF (NOT g_no_ask) THEN      
         CALL cl_getmsg("fetch",g_lang) RETURNING ls_msg
         LET INT_FLAG = 0
 
         PROMPT ls_msg CLIPPED,": " FOR g_jump
            #交談指令共用ACTION
            &include "common_action.4gl" 
         END PROMPT
 
         IF INT_FLAG THEN
            LET INT_FLAG = 0
         ELSE
            IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
               LET g_current_idx = g_jump
            END IF
            LET g_no_ask = FALSE  
         END IF           
      END IF
   END IF    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
 
   LET g_rtax_m.rtax001 = g_browser[g_current_idx].b_rtax001
   LET g_rtax_m.rtax003 = g_browser[g_current_idx].b_rtax003
    
   #add-point:fetch段refresh前
   {<point name="fetch.before_refresh"/>}
   #end add-point
    
   #重讀DB,因TEMP有不被更新特性
   EXECUTE arti202_master_referesh USING g_rtax_m.rtax001 INTO g_rtax_m.rtax001,g_rtax_m.rtax002,g_rtax_m.rtax003, 
       g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax007,g_rtax_m.rtaxunit,g_rtax_m.rtax009, 
       g_rtax_m.rtaxstus,g_rtax_m.rtaxownid,g_rtax_m.rtaxowndp,g_rtax_m.rtaxcrtid,g_rtax_m.rtaxcrtdt, 
       g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxmodid,g_rtax_m.rtaxmoddt,g_rtax_m.rtax003_desc,g_rtax_m.rtax006_desc, 
       g_rtax_m.rtax007_desc,g_rtax_m.rtaxunit_desc,g_rtax_m.rtaxownid_desc,g_rtax_m.rtaxowndp_desc, 
       g_rtax_m.rtaxcrtid_desc,g_rtax_m.rtaxcrtdp_desc,g_rtax_m.rtaxmodid_desc 
   
   IF SQLCA.sqlcode THEN
       INITIALIZE g_errparam TO NULL 
       LET g_errparam.extend = "rtax_t" 
       LET g_errparam.code   = SQLCA.sqlcode 
       LET g_errparam.popup  = TRUE 
       CALL cl_err()
       INITIALIZE g_rtax_m.* TO NULL
       RETURN
   END IF
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
   #add-point:fetch段after_fetch
   {<point name="fetch.after_fetch"/>}
   #end add-point
 
   
   
   #保存單頭舊值
   LET g_rtax_m_t.* = g_rtax_m.*
   LET g_rtax_m_o.* = g_rtax_m.*
   
   #重新顯示
   CALL arti202_show()
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   DISPLAY g_browser.getLength() TO FORMONLY.h_count 
 
   
   
END FUNCTION
]]>
  </section>
  <section id="arti202.find_node" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 尋找符合條件的節點
PRIVATE FUNCTION arti202_find_node(pi_ac)
   DEFINE pi_ac   LIKE type_t.num10
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_tmp  LIKE type_t.num10
   DEFINE ls_pid  STRING
   #add-point:find_node段define
   {<point name="find_node.define" edit="s"/>}
   #end add-point
   #add-point:find_node段define
   {<point name="find_node.define_customerization" edit="c"/>}
   #end add-point
   
   LET ls_pid = g_browser[pi_ac].b_pid
   
   LET g_sql = " SELECT UNIQUE '','','','FALSE','','',exp_code,rtax004,rtax002,rtax005,rtax006,'',rtax007, 
       rtax001,rtax003 ",
               " FROM arti202_tmp ",
               " WHERE rtax003 = ? AND rtax003 <> rtax001",
               " ORDER BY rtax001"
   PREPARE master_getNode FROM g_sql
   DECLARE master_getNodecur CURSOR FOR master_getNode
   
   LET li_idx = pi_ac
   WHILE li_idx <= g_browser.getLength()
      IF g_browser[li_idx].b_expcode = -1 THEN
         OPEN master_getNodecur USING g_browser[li_idx].b_rtax001
         FOREACH master_getNodecur INTO g_browser[g_browser.getLength()+1].*
            CALL arti202_desc_show(g_browser.getLength())
            LET g_browser[g_browser.getLength()].b_pid = ls_pid
            LET g_browser[g_browser.getLength()].b_id = g_browser.getLength()
            LET g_browser[g_browser.getLength()].b_hasC = arti202_chk_hasC(g_browser.getLength())
         END FOREACH
         CALL g_browser.deleteElement(li_idx)
         CALL g_browser.deleteElement(g_browser.getLength())
      ELSE
         LET li_idx = li_idx + 1
      END IF
   
   END WHILE
   
   FREE master_getNode
   
   RETURN g_browser.getLength()
 
END FUNCTION
]]>
  </section>
  <section id="arti202.global" ver="18" status="" src="s" readonly="">
    <![CDATA[#應用 i05 樣板自動產生(Version:17)
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_rtax_m RECORD
   rtax001 LIKE rtax_t.rtax001, 
   rtaxl003 LIKE rtaxl_t.rtaxl003, 
   rtaxl004 LIKE rtaxl_t.rtaxl004, 
   rtax002 LIKE rtax_t.rtax002, 
   rtax003 LIKE rtax_t.rtax003, 
   rtax003_desc LIKE type_t.chr80, 
   rtax004 LIKE rtax_t.rtax004, 
   rtax005 LIKE rtax_t.rtax005, 
   rtax006 LIKE rtax_t.rtax006, 
   rtax006_desc LIKE type_t.chr80, 
   rtax007 LIKE rtax_t.rtax007, 
   rtax007_desc LIKE type_t.chr80, 
   rtaxunit LIKE rtax_t.rtaxunit, 
   rtaxunit_desc LIKE type_t.chr80, 
   rtax009 LIKE rtax_t.rtax009, 
   rtaxstus LIKE rtax_t.rtaxstus, 
   rtaxownid LIKE rtax_t.rtaxownid, 
   rtaxownid_desc LIKE type_t.chr80, 
   rtaxowndp LIKE rtax_t.rtaxowndp, 
   rtaxowndp_desc LIKE type_t.chr80, 
   rtaxcrtid LIKE rtax_t.rtaxcrtid, 
   rtaxcrtid_desc LIKE type_t.chr80, 
   rtaxcrtdt LIKE rtax_t.rtaxcrtdt, 
   rtaxcrtdp LIKE rtax_t.rtaxcrtdp, 
   rtaxcrtdp_desc LIKE type_t.chr80, 
   rtaxmodid LIKE rtax_t.rtaxmodid, 
   rtaxmodid_desc LIKE type_t.chr80, 
   rtaxmoddt LIKE rtax_t.rtaxmoddt
                                  END RECORD
 
#模組變數(Module Variables)
DEFINE g_rtax_m          type_g_rtax_m
DEFINE g_rtax_m_t        type_g_rtax_m
DEFINE g_rtax_m_o        type_g_rtax_m
 
   DEFINE g_rtax001_t LIKE rtax_t.rtax001
 
 
#DEFINE g_rtax001_t        LIKE rtax_t.rtax001
DEFINE g_rtax003_t        LIKE rtax_t.rtax003
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位
       b_show          LIKE type_t.chr100,    #外顯欄位
       b_pid           LIKE type_t.chr100,    #父節點id
       b_id            LIKE type_t.chr100,    #本身節點id
       b_exp           LIKE type_t.chr100,    #是否展開
       b_hasC          LIKE type_t.num5,      #是否有子節點
       b_isExp         LIKE type_t.num5,      #是否已展開
       b_expcode       LIKE type_t.num5,      #展開值
       #tree自定義欄位
          b_rtax004 LIKE rtax_t.rtax004,
      b_rtax002 LIKE rtax_t.rtax002,
      b_rtax005 LIKE rtax_t.rtax005,
      b_rtax006 LIKE rtax_t.rtax006,
   b_rtax006_desc LIKE type_t.chr80,
      b_rtax007 LIKE rtax_t.rtax007,
      b_rtax001 LIKE rtax_t.rtax001,
      b_rtax003 LIKE rtax_t.rtax003
                   END RECORD
 
DEFINE g_browser_root  DYNAMIC ARRAY OF INTEGER    #root資料所在
       
#多table用變數
DEFINE g_master_multi_table_t    RECORD
      rtaxl001 LIKE rtaxl_t.rtaxl001,
      rtaxl003 LIKE rtaxl_t.rtaxl003,
      rtaxl004 LIKE rtaxl_t.rtaxl004
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_jump                LIKE type_t.num10
DEFINE g_no_ask              LIKE type_t.num5
DEFINE g_rec_b               LIKE type_t.num10
DEFINE l_ac                  LIKE type_t.num10
DEFINE g_curr_diag           ui.Dialog                #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10         
DEFINE gwin_curr             ui.Window                #Current Window
DEFINE gfrm_curr             ui.Form                  #Current Form
DEFINE g_page_action         STRING                   #page action
DEFINE g_header_hidden       LIKE type_t.num5         #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5         #隱藏工作Panel
DEFINE g_browser_cnt         LIKE type_t.num10        #total count
DEFINE g_page                STRING                   #第幾頁
DEFINE g_current_row         LIKE type_t.num10        #Browser所在筆數
DEFINE g_current_sw          LIKE type_t.num10        #Browser所在筆數用開關
 
DEFINE g_searchcol           LIKE type_t.chr200
DEFINE g_searchstr           LIKE type_t.chr200
DEFINE g_searchtype          LIKE type_t.chr200
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_row_index           LIKE type_t.num10
DEFINE g_root_search         BOOLEAN
DEFINE g_first               LIKE type_t.num5  #標示是否要啟動s_browse重查
DEFINE g_aw                  STRING            #確定當下點擊的單身
DEFINE g_log1                STRING            #log用
DEFINE g_log2                STRING            #log用
DEFINE g_add_browse          STRING            #新增填充用WC
DEFINE g_add_idx             LIKE type_t.num5  #新增資料指標
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="arti202.init" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION arti202_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point 
   #add-point:init段define
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point
   
      CALL cl_set_combo_scc_part('rtaxstus','17','N,Y')
 
   
   LET g_add_idx = 1
   LET g_current_idx = 1
    
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL arti202_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="arti202.input" ver="19" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION arti202_input(p_cmd)
   DEFINE p_cmd           LIKE type_t.chr1
   DEFINE l_cmd_t         LIKE type_t.chr1
   DEFINE l_ac_t          LIKE type_t.num10       #未取消的ARRAY CNT 
   DEFINE l_n             LIKE type_t.num10       #檢查重複用
   DEFINE l_cnt           LIKE type_t.num10       #檢查重複用
   DEFINE l_lock_sw       LIKE type_t.chr1        #單身鎖住否
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否
   DEFINE l_count         LIKE type_t.num10
   DEFINE l_i             LIKE type_t.num10
   DEFINE l_insert        LIKE type_t.num10
   DEFINE ls_return       STRING
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point
   #add-point:input段define
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtax_m.rtax001,g_rtax_m.rtaxl003,g_rtax_m.rtaxl004,g_rtax_m.rtax002,g_rtax_m.rtax003, 
       g_rtax_m.rtax003_desc,g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax006_desc, 
       g_rtax_m.rtax007,g_rtax_m.rtax007_desc,g_rtax_m.rtaxunit,g_rtax_m.rtaxunit_desc,g_rtax_m.rtax009, 
       g_rtax_m.rtaxstus,g_rtax_m.rtaxownid,g_rtax_m.rtaxownid_desc,g_rtax_m.rtaxowndp,g_rtax_m.rtaxowndp_desc, 
       g_rtax_m.rtaxcrtid,g_rtax_m.rtaxcrtid_desc,g_rtax_m.rtaxcrtdt,g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxcrtdp_desc, 
       g_rtax_m.rtaxmodid,g_rtax_m.rtaxmodid_desc,g_rtax_m.rtaxmoddt
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r' 
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF  
   
   CALL cl_set_head_visible("","YES")
 
   LET l_insert = FALSE
   LET g_action_choice = ""
   LET g_qryparam.state = "i"
   
   #控制key欄位可否輸入
   CALL arti202_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL arti202_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_rtax_m.rtax001,g_rtax_m.rtaxl003,g_rtax_m.rtaxl004,g_rtax_m.rtax002,g_rtax_m.rtax003, 
       g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax007,g_rtax_m.rtaxunit,g_rtax_m.rtaxstus 

   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_rtax_m.rtax001,g_rtax_m.rtaxl003,g_rtax_m.rtaxl004,g_rtax_m.rtax002,g_rtax_m.rtax003, 
          g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax007,g_rtax_m.rtaxunit,g_rtax_m.rtaxstus  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
 
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            #其他table資料備份(確定是否更改用)
            LET g_master_multi_table_t.rtaxl001 = g_rtax_m.rtax001
LET g_master_multi_table_t.rtaxl003 = g_rtax_m.rtaxl003
LET g_master_multi_table_t.rtaxl004 = g_rtax_m.rtaxl004
 
            
            #add-point:input段define
            {<point name="input.action"/>}
            #end add-point
          
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtax001
            #add-point:BEFORE FIELD rtax001
            {<point name="input.b.rtax001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtax001
            
            #add-point:AFTER FIELD rtax001
            {<point name="input.a.rtax001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtax001
            #add-point:ON CHANGE rtax001
            {<point name="input.g.rtax001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaxl003
            #add-point:BEFORE FIELD rtaxl003
            {<point name="input.b.rtaxl003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaxl003
            
            #add-point:AFTER FIELD rtaxl003
            {<point name="input.a.rtaxl003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtaxl003
            #add-point:ON CHANGE rtaxl003
            {<point name="input.g.rtaxl003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaxl004
            #add-point:BEFORE FIELD rtaxl004
            {<point name="input.b.rtaxl004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaxl004
            
            #add-point:AFTER FIELD rtaxl004
            {<point name="input.a.rtaxl004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtaxl004
            #add-point:ON CHANGE rtaxl004
            {<point name="input.g.rtaxl004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtax002
            #add-point:BEFORE FIELD rtax002
            {<point name="input.b.rtax002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtax002
            
            #add-point:AFTER FIELD rtax002
            {<point name="input.a.rtax002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtax002
            #add-point:ON CHANGE rtax002
            {<point name="input.g.rtax002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtax003
            
            #add-point:AFTER FIELD rtax003
            {<point name="input.a.rtax003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtax003
            #add-point:BEFORE FIELD rtax003
            {<point name="input.b.rtax003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtax003
            #add-point:ON CHANGE rtax003
            {<point name="input.g.rtax003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtax004
            #add-point:BEFORE FIELD rtax004
            {<point name="input.b.rtax004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtax004
            
            #add-point:AFTER FIELD rtax004
            {<point name="input.a.rtax004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtax004
            #add-point:ON CHANGE rtax004
            {<point name="input.g.rtax004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtax005
            #add-point:BEFORE FIELD rtax005
            {<point name="input.b.rtax005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtax005
            
            #add-point:AFTER FIELD rtax005
            {<point name="input.a.rtax005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtax005
            #add-point:ON CHANGE rtax005
            {<point name="input.g.rtax005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtax006
            
            #add-point:AFTER FIELD rtax006
            {<point name="input.a.rtax006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtax006
            #add-point:BEFORE FIELD rtax006
            {<point name="input.b.rtax006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtax006
            #add-point:ON CHANGE rtax006
            {<point name="input.g.rtax006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtax007
            
            #add-point:AFTER FIELD rtax007
            {<point name="input.a.rtax007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtax007
            #add-point:BEFORE FIELD rtax007
            {<point name="input.b.rtax007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtax007
            #add-point:ON CHANGE rtax007
            {<point name="input.g.rtax007" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaxunit
            
            #add-point:AFTER FIELD rtaxunit
            {<point name="input.a.rtaxunit" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaxunit
            #add-point:BEFORE FIELD rtaxunit
            {<point name="input.b.rtaxunit" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtaxunit
            #add-point:ON CHANGE rtaxunit
            {<point name="input.g.rtaxunit" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaxstus
            #add-point:BEFORE FIELD rtaxstus
            {<point name="input.b.rtaxstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaxstus
            
            #add-point:AFTER FIELD rtaxstus
            {<point name="input.a.rtaxstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtaxstus
            #add-point:ON CHANGE rtaxstus
            {<point name="input.g.rtaxstus" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.rtax001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtax001
            #add-point:ON ACTION controlp INFIELD rtax001
            {<point name="input.c.rtax001" />}
            #END add-point
 
         #Ctrlp:input.c.rtaxl003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaxl003
            #add-point:ON ACTION controlp INFIELD rtaxl003
            {<point name="input.c.rtaxl003" />}
            #END add-point
 
         #Ctrlp:input.c.rtaxl004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaxl004
            #add-point:ON ACTION controlp INFIELD rtaxl004
            {<point name="input.c.rtaxl004" />}
            #END add-point
 
         #Ctrlp:input.c.rtax002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtax002
            #add-point:ON ACTION controlp INFIELD rtax002
            {<point name="input.c.rtax002" />}
            #END add-point
 
         #Ctrlp:input.c.rtax003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtax003
            #add-point:ON ACTION controlp INFIELD rtax003
            {<point name="input.c.rtax003" />}
            #END add-point
 
         #Ctrlp:input.c.rtax004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtax004
            #add-point:ON ACTION controlp INFIELD rtax004
            {<point name="input.c.rtax004" />}
            #END add-point
 
         #Ctrlp:input.c.rtax005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtax005
            #add-point:ON ACTION controlp INFIELD rtax005
            {<point name="input.c.rtax005" />}
            #END add-point
 
         #Ctrlp:input.c.rtax006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtax006
            #add-point:ON ACTION controlp INFIELD rtax006
            {<point name="input.c.rtax006" />}
            #END add-point
 
         #Ctrlp:input.c.rtax007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtax007
            #add-point:ON ACTION controlp INFIELD rtax007
            {<point name="input.c.rtax007" />}
            #END add-point
 
         #Ctrlp:input.c.rtaxunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaxunit
            #add-point:ON ACTION controlp INFIELD rtaxunit
            {<point name="input.c.rtaxunit" />}
            #END add-point
 
         #Ctrlp:input.c.rtaxstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaxstus
            #add-point:ON ACTION controlp INFIELD rtaxstus
            {<point name="input.c.rtaxstus" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #避免資料錯誤的檢查
            IF arti202_check(g_rtax_m.rtax001,g_rtax_m.rtax003
               ) THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "" 
               LET g_errparam.code   = "std-00020" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               NEXT FIELD CURRENT
            END IF
 
            #CALL cl_err_collect_show()   #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_rtax_m.rtax001
 
            #實體新增/修改/複製段落的處理
            CASE
               WHEN p_cmd = "a" OR p_cmd = "r"
                  LET l_count = 1
 
                  SELECT COUNT(*) INTO l_count FROM rtax_t
                   WHERE rtaxent = g_enterprise AND rtax001 = g_rtax_m.rtax001
 
                         #
                  IF l_count = 0 THEN
                     #add-point:單頭新增前
                     {<point name="input.head.b_insert" mark="Y"/>}
                     #end add-point
 
                     INSERT INTO rtax_t (rtaxent,rtax001,rtax002,rtax003,rtax004,rtax005,rtax006,rtax007, 
                         rtaxunit,rtax009,rtaxstus,rtaxownid,rtaxowndp,rtaxcrtid,rtaxcrtdt,rtaxcrtdp, 
                         rtaxmodid,rtaxmoddt)
                     VALUES (g_enterprise,g_rtax_m.rtax001,g_rtax_m.rtax002,g_rtax_m.rtax003,g_rtax_m.rtax004, 
                         g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax007,g_rtax_m.rtaxunit,g_rtax_m.rtax009, 
                         g_rtax_m.rtaxstus,g_rtax_m.rtaxownid,g_rtax_m.rtaxowndp,g_rtax_m.rtaxcrtid, 
                         g_rtax_m.rtaxcrtdt,g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxmodid,g_rtax_m.rtaxmoddt)  

 
                     #add-point:單頭新增中
                     {<point name="input.head.m_insert"/>}
                     #end add-point
 
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "g_rtax_m" 
                        LET g_errparam.code   = SQLCA.sqlcode 
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                        CONTINUE DIALOG
                     END IF
                  
                     #提速檔資料建置
                     IF g_rtax_m.rtax001 <> g_rtax_m.rtax003 THEN
                        #CALL n_rtaxs_generate_child(g_rtax_m.rtax001,g_rtax_m.rtax003)
                     END IF
                     
                     #add-point:單頭新增後
                     {<point name="input.head.a_insert"/>}
                     #end add-point
                     
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_rtax_m.rtax001 = g_master_multi_table_t.rtaxl001 AND
         g_rtax_m.rtaxl003 = g_master_multi_table_t.rtaxl003 AND 
         g_rtax_m.rtaxl004 = g_master_multi_table_t.rtaxl004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'rtaxlent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_rtax_m.rtax001
            LET l_field_keys[02] = 'rtaxl001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.rtaxl001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'rtaxl002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_rtax_m.rtaxl003
            LET l_fields[01] = 'rtaxl003'
            LET l_vars[02] = g_rtax_m.rtaxl004
            LET l_fields[02] = 'rtaxl004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'rtaxl_t')
         END IF 
 
                     CALL s_transaction_end("Y","0")
                  ELSE
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend =  g_rtax_m.rtax001 
                     LET g_errparam.code   =  "std-00006" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end("N","0")
                  END IF 
 
               #修改段落
               WHEN p_cmd = "u"  
                  #add-point:單頭修改前
                  {<point name="input.head.b_update" mark="Y"/>}
                  #end add-point
                  UPDATE rtax_t SET (rtax001,rtax002,rtax003,rtax004,rtax005,rtax006,rtax007,rtaxunit, 
                      rtax009,rtaxstus,rtaxownid,rtaxowndp,rtaxcrtid,rtaxcrtdt,rtaxcrtdp,rtaxmodid,rtaxmoddt) = (g_rtax_m.rtax001, 
                      g_rtax_m.rtax002,g_rtax_m.rtax003,g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006, 
                      g_rtax_m.rtax007,g_rtax_m.rtaxunit,g_rtax_m.rtax009,g_rtax_m.rtaxstus,g_rtax_m.rtaxownid, 
                      g_rtax_m.rtaxowndp,g_rtax_m.rtaxcrtid,g_rtax_m.rtaxcrtdt,g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxmodid, 
                      g_rtax_m.rtaxmoddt)
                   WHERE rtaxent = g_enterprise AND rtax001 = g_rtax001_t #
 
                  #add-point:單頭修改中
                  {<point name="input.head.m_update"/>}
                  #end add-point
                  CASE
                     WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "rtax_t" 
                        LET g_errparam.code   = "std-00009" 
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                        CALL s_transaction_end('N','0')
                     WHEN SQLCA.sqlcode #其他錯誤
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "rtax_t" 
                        LET g_errparam.code   = SQLCA.sqlcode 
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                        CALL s_transaction_end('N','0')
                     OTHERWISE
                        #add-point:單頭修改後
                        {<point name="input.head.a_update"/>}
                        #end add-point
    
                        #資料多語言用-增/改
                                 INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_rtax_m.rtax001 = g_master_multi_table_t.rtaxl001 AND
         g_rtax_m.rtaxl003 = g_master_multi_table_t.rtaxl003 AND 
         g_rtax_m.rtaxl004 = g_master_multi_table_t.rtaxl004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'rtaxlent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_rtax_m.rtax001
            LET l_field_keys[02] = 'rtaxl001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.rtaxl001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'rtaxl002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_rtax_m.rtaxl003
            LET l_fields[01] = 'rtaxl003'
            LET l_vars[02] = g_rtax_m.rtaxl004
            LET l_fields[02] = 'rtaxl004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'rtaxl_t')
         END IF 
 
                        LET g_log1 = util.JSON.stringify(g_rtax_m_t)
                        LET g_log2 = util.JSON.stringify(g_rtax_m)
                        IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                           CALL s_transaction_end('N','0')
                        ELSE
                           CALL s_transaction_end('Y','0')
                        END IF
                  END CASE
 
               OTHERWISE 
            END CASE
 
           #controlp
      END INPUT
      
      #add-point:input段more input 
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:before dialog
         {<point name="input.before_dialog"/>}
         #end add-point
          
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name, g_fld_name, g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      #在dialog button (放棄)
      ON ACTION cancel
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #在dialog 右上角 (X)
      ON ACTION close       
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #toolbar 離開
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
           
   END DIALOG
   
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point
    
END FUNCTION
]]>
  </section>
  <section id="arti202.insert" ver="17" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION arti202_insert(l_dialog)
   DEFINE l_dialog   ui.DIALOG
   DEFINE li_addpos  LIKE type_t.num10 #新增節點時產出的畫面實際位置
   DEFINE li_idx     LIKE type_t.num10
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point
   #add-point:insert段define
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point
   
   LET g_rtax001_t = g_rtax_m.rtax001
 
   LET g_rtax001_t = g_rtax_m.rtax001
 
   #清畫面欄位內容
   CLEAR g_rtax_m.*
 
   #add-point:單頭預設值
   {<point name="insert.before_insert"/>}
   #end add-point 
 
   INITIALIZE g_rtax_m.* LIKE rtax_t.*
   DISPLAY BY NAME g_rtax_m.rtax001,g_rtax_m.rtaxl003,g_rtax_m.rtaxl004,g_rtax_m.rtax002,g_rtax_m.rtax003, 
       g_rtax_m.rtax003_desc,g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax006_desc, 
       g_rtax_m.rtax007,g_rtax_m.rtax007_desc,g_rtax_m.rtaxunit,g_rtax_m.rtaxunit_desc,g_rtax_m.rtax009, 
       g_rtax_m.rtaxstus,g_rtax_m.rtaxownid,g_rtax_m.rtaxownid_desc,g_rtax_m.rtaxowndp,g_rtax_m.rtaxowndp_desc, 
       g_rtax_m.rtaxcrtid,g_rtax_m.rtaxcrtid_desc,g_rtax_m.rtaxcrtdt,g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxcrtdp_desc, 
       g_rtax_m.rtaxmodid,g_rtax_m.rtaxmodid_desc,g_rtax_m.rtaxmoddt
   CALL s_transaction_begin()
 
   WHILE TRUE
      #給予pid,type預設值
      LET g_rtax_m.rtax003 = g_rtax001_t
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_rtax_m.rtaxownid = g_user
      LET g_rtax_m.rtaxowndp = g_dept
      LET g_rtax_m.rtaxcrtid = g_user
      LET g_rtax_m.rtaxcrtdp = g_dept 
      LET g_rtax_m.rtaxcrtdt = cl_get_current()
      LET g_rtax_m.rtaxmodid = g_user
      LET g_rtax_m.rtaxmoddt = cl_get_current()
      LET g_rtax_m.rtaxstus = 'Y'
 
 
      
      CALL gfrm_curr.setElementImage("statechange", "authstatus/valid.png")
  
      
      
      #單頭預設值
            LET g_rtax_m.rtax002 = "1"
      LET g_rtax_m.rtax005 = "0"
      LET g_rtax_m.rtax009 = "N"
      LET g_rtax_m.rtaxstus = "Y"
 
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL arti202_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_rtax_m.* = g_rtax_m_t.*
         CALL arti202_show()
         INITIALIZE g_errparam TO NULL
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         EXIT WHILE
      ELSE
         #分兩種狀況-1.根節點, 2.非根節點
         IF g_rtax_m.rtax003 = g_rtax_m.rtax001 THEN
            #為根節點
            LET li_addpos = g_browser.getLength() + 1
            LET g_browser[li_addpos].b_rtax003 = g_rtax_m.rtax003
            LET g_browser[li_addpos].b_rtax001 = g_rtax_m.rtax001
            LET g_browser[li_addpos].b_exp  = FALSE
            LET g_browser[li_addpos].b_hasC = FALSE
            LET g_browser[li_addpos].b_id  = '0.add',g_add_idx USING "<<<"
            LET g_browser[li_addpos].b_pid = '0',g_add_idx USING "<<<"
            LET g_add_idx = g_add_idx + 1
            CALL arti202_desc_show(li_addpos)
         ELSE
            #非根節點, 開始搜尋其父節點(已展開才做處理)
            IF g_browser.getLength() > 0 THEN
               FOR li_idx = 1 TO g_browser.getLength()
                  IF g_browser[li_idx].b_rtax001 = g_rtax_m.rtax003 THEN
                     LET li_addpos = l_dialog.appendNode("s_browse",li_idx)
                     LET g_browser[li_addpos].b_rtax003 = g_rtax_m.rtax003
                     LET g_browser[li_addpos].b_rtax001 = g_rtax_m.rtax001
                     LET g_browser[li_addpos].b_exp  = FALSE
                     LET g_browser[li_addpos].b_hasC = FALSE
                     LET g_browser[li_addpos].b_id  = g_browser[li_idx].b_id, '.add',g_add_idx USING "<<<"
                     LET g_browser[li_addpos].b_pid = g_browser[li_idx].b_id
                     LET g_add_idx = g_add_idx + 1
                     CALL arti202_desc_show(li_addpos)
                     #打開父節點
                     LET g_browser[li_idx].b_hasC = TRUE
                     LET g_browser[li_idx].b_exp = TRUE
                     EXIT FOR
                  END IF
               END FOR
            END IF
         END IF
      END IF
      
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE arti202_master_referesh USING g_rtax_m.rtax001 INTO g_rtax_m.rtax001,g_rtax_m.rtax002,g_rtax_m.rtax003, 
       g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax007,g_rtax_m.rtaxunit,g_rtax_m.rtax009, 
       g_rtax_m.rtaxstus,g_rtax_m.rtaxownid,g_rtax_m.rtaxowndp,g_rtax_m.rtaxcrtid,g_rtax_m.rtaxcrtdt, 
       g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxmodid,g_rtax_m.rtaxmoddt,g_rtax_m.rtax003_desc,g_rtax_m.rtax006_desc, 
       g_rtax_m.rtax007_desc,g_rtax_m.rtaxunit_desc,g_rtax_m.rtaxownid_desc,g_rtax_m.rtaxowndp_desc, 
       g_rtax_m.rtaxcrtid_desc,g_rtax_m.rtaxcrtdp_desc,g_rtax_m.rtaxmodid_desc
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtax_m.rtax001,g_rtax_m.rtaxl003,g_rtax_m.rtaxl004,g_rtax_m.rtax002,g_rtax_m.rtax003, 
       g_rtax_m.rtax003_desc,g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax006_desc, 
       g_rtax_m.rtax007,g_rtax_m.rtax007_desc,g_rtax_m.rtaxunit,g_rtax_m.rtaxunit_desc,g_rtax_m.rtax009, 
       g_rtax_m.rtaxstus,g_rtax_m.rtaxownid,g_rtax_m.rtaxownid_desc,g_rtax_m.rtaxowndp,g_rtax_m.rtaxowndp_desc, 
       g_rtax_m.rtaxcrtid,g_rtax_m.rtaxcrtid_desc,g_rtax_m.rtaxcrtdt,g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxcrtdp_desc, 
       g_rtax_m.rtaxmodid,g_rtax_m.rtaxmodid_desc,g_rtax_m.rtaxmoddt
   
   #功能已完成,通報訊息中心
   CALL arti202_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="arti202.main" ver="18" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT rtax001,'','',rtax002,rtax003,'',rtax004,rtax005,rtax006,'',rtax007,'', 
       rtaxunit,'',rtax009,rtaxstus,rtaxownid,'',rtaxowndp,'',rtaxcrtid,'',rtaxcrtdt,rtaxcrtdp,'',rtaxmodid, 
       '',rtaxmoddt", 
                      " FROM rtax_t",
                      " WHERE rtaxent= ? AND rtax001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE arti202_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.rtax001,t0.rtax002,t0.rtax003,t0.rtax004,t0.rtax005,t0.rtax006,t0.rtax007, 
       t0.rtaxunit,t0.rtax009,t0.rtaxstus,t0.rtaxownid,t0.rtaxowndp,t0.rtaxcrtid,t0.rtaxcrtdt,t0.rtaxcrtdp, 
       t0.rtaxmodid,t0.rtaxmoddt,t1.rtaxl003 ,t2.rtaxl003 ,t3.oocql004 ,t4.ooefl003 ,t5.ooag011 ,t6.ooefl003 , 
       t7.ooag011 ,t8.ooefl003 ,t9.ooag011",
               " FROM rtax_t t0",
                              " LEFT JOIN rtaxl_t t1 ON t1.rtaxlent='"||g_enterprise||"' AND t1.rtaxl001=rtax003 AND t1.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t2 ON t2.rtaxlent='"||g_enterprise||"' AND t2.rtaxl001=rtax006 AND t2.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='200' AND t3.oocql002=rtax007 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=rtaxunit AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=rtaxownid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=rtaxowndp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=rtaxcrtid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent='"||g_enterprise||"' AND t8.ooefl001=rtaxcrtdp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent='"||g_enterprise||"' AND t9.ooag001=rtaxmodid  ",
 
               " WHERE t0.rtaxent = '" ||g_enterprise|| "' AND t0.rtax001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE arti202_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_arti202 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL arti202_init()   
 
      #進入選單 Menu (="N")
      CALL arti202_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_arti202
      
   END IF 
   
   CLOSE arti202_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="arti202.match_node" ver="9" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION arti202_match_node(p_wc,p_type)
   DEFINE p_wc         LIKE type_t.chr200
   DEFINE p_type       LIKE type_t.chr10
   DEFINE ls_code      LIKE type_t.chr50
   DEFINE ls_code2     LIKE type_t.chr50
   DEFINE l_bstmp      RECORD    #body欄位
             rtax004 VARCHAR(500),
   rtax002 VARCHAR(500),
   rtax005 VARCHAR(500),
   rtax006 VARCHAR(500),
   rtax006_desc VARCHAR(500),
   rtax007 VARCHAR(500),
   rtax001 VARCHAR(500),
   rtax003 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD 
   DEFINE l_child_list DYNAMIC ARRAY OF RECORD    #body欄位
             rtax004 VARCHAR(500),
   rtax002 VARCHAR(500),
   rtax005 VARCHAR(500),
   rtax006 VARCHAR(500),
   rtax006_desc VARCHAR(500),
   rtax007 VARCHAR(500),
   rtax001 VARCHAR(500),
   rtax003 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD    
   #add-point:match_node段define
   {<point name="match_node.define" edit="s"/>}
   #end add-point
   #add-point:match_node段define
   {<point name="match_node.define_customerization" edit="c"/>}
   #end add-point
 
   #先找出符合條件的節點並給予展開值
   CASE p_type
      WHEN 1
         LET ls_code = "0" #展開值0則無法展開
      WHEN 2
         LET ls_code = "2"
      WHEN 3
         LET ls_code = "2"
   END CASE
   
   IF cl_null("rtax003") THEN
      LET ls_code = "0"
   END IF 
   
   CALL s_transaction_begin()
 
   LET g_sql = " INSERT INTO arti202_tmp (rtax004,rtax002,rtax005,rtax006,rtax006_desc,rtax007,rtax001, 
       rtax003,exp_code) VALUES (?,?,?,?,?,?,?,?,?)"
   PREPARE master_tmp FROM g_sql
   
   IF g_root_search THEN
      #DECLARE master_tmp_cur CURSOR FOR master_tmp
      #OPEN master_tmp_cur
      FOREACH master_extcur INTO l_bstmp.*
         EXECUTE master_tmp USING l_bstmp.*,ls_code
         #PUT master_tmp_cur FROM l_bstmp.*,ls_code
      END FOREACH
      #FLUSH master_tmp_cur
      CALL s_transaction_end("Y","0")
      RETURN
   END IF
 
   FOREACH master_extcur INTO l_bstmp.*
      IF arti202_tmp_tbl_chk(l_bstmp.rtax001,ls_code
                  ) THEN
         EXECUTE master_tmp USING l_bstmp.*,ls_code
      END IF
 
      LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
       
      #找出符合條件的節點的所有祖先並給予展開值
      CASE p_type
         WHEN 1
            LET ls_code2 = "1"
         WHEN 2
            LET ls_code2 = "-1"
         WHEN 3
            LET ls_code2 = "1"
      END CASE
      
      #若pid欄位存在才進行後續處理
      #擷取該節點的父節點到temp table中
      LET g_sql = " SELECT t0.rtax004,t0.rtax002,t0.rtax005,t0.rtax006,t0.rtax007,t0.rtax001,t0.rtax003 ", 

                  " FROM rtax_t t0",
                  " WHERE rtaxent = '" ||g_enterprise|| "' AND rtax001 = ? ",
                  cl_sql_add_filter("rtax_t")
      PREPARE master_getparent_up FROM g_sql
      
      #擷取該節點的所有父節點
      WHILE TRUE
         IF cl_null(l_child_list[1].rtax001) THEN
            IF l_child_list.getLength() = 1 THEN
               EXIT WHILE
            ELSE
               CALL l_child_list.deleteElement(1)
               CONTINUE WHILE
            END IF
         END IF
      
         EXECUTE master_getparent_up USING l_child_list[1].rtax003
                                           INTO l_bstmp.*
         IF SQLCA.sqlcode THEN
            FREE master_getparent_up
            EXIT WHILE
         END IF
         FREE master_getparent_up
      
      #確定該節點是否存在於temp table中
         IF STATUS = 0 AND arti202_tmp_tbl_chk(l_bstmp.rtax001,ls_code2
                     ) THEN
            EXECUTE master_tmp USING l_bstmp.*,ls_code2
            LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
         END IF
         CALL l_child_list.deleteElement(1)
      END WHILE
   
   END FOREACH
   
   CLOSE master_tmp
   
   CALL s_transaction_end("Y","0")
 
END FUNCTION
]]>
  </section>
  <section id="arti202.modify" ver="13" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION arti202_modify()
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point
   #add-point:modify段define
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point
   
   IF g_rtax_m.rtax001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF 
   
   EXECUTE arti202_master_referesh USING g_rtax_m.rtax001 INTO g_rtax_m.rtax001,g_rtax_m.rtax002,g_rtax_m.rtax003, 
       g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax007,g_rtax_m.rtaxunit,g_rtax_m.rtax009, 
       g_rtax_m.rtaxstus,g_rtax_m.rtaxownid,g_rtax_m.rtaxowndp,g_rtax_m.rtaxcrtid,g_rtax_m.rtaxcrtdt, 
       g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxmodid,g_rtax_m.rtaxmoddt,g_rtax_m.rtax003_desc,g_rtax_m.rtax006_desc, 
       g_rtax_m.rtax007_desc,g_rtax_m.rtaxunit_desc,g_rtax_m.rtaxownid_desc,g_rtax_m.rtaxowndp_desc, 
       g_rtax_m.rtaxcrtid_desc,g_rtax_m.rtaxcrtdp_desc,g_rtax_m.rtaxmodid_desc
 
   #檢查是否允許此動作
   IF NOT arti202_action_chk() THEN
      RETURN
   END IF
  
   LET g_rtax001_t = g_rtax_m.rtax001
 
   
   CALL s_transaction_begin()
   
   OPEN arti202_cl USING g_enterprise,g_rtax_m.rtax001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN arti202_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE arti202_cl
      CALL s_transaction_end("N","0")
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH arti202_cl INTO g_rtax_m.rtax001,g_rtax_m.rtaxl003,g_rtax_m.rtaxl004,g_rtax_m.rtax002,g_rtax_m.rtax003, 
       g_rtax_m.rtax003_desc,g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax006_desc, 
       g_rtax_m.rtax007,g_rtax_m.rtax007_desc,g_rtax_m.rtaxunit,g_rtax_m.rtaxunit_desc,g_rtax_m.rtax009, 
       g_rtax_m.rtaxstus,g_rtax_m.rtaxownid,g_rtax_m.rtaxownid_desc,g_rtax_m.rtaxowndp,g_rtax_m.rtaxowndp_desc, 
       g_rtax_m.rtaxcrtid,g_rtax_m.rtaxcrtid_desc,g_rtax_m.rtaxcrtdt,g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxcrtdp_desc, 
       g_rtax_m.rtaxmodid,g_rtax_m.rtaxmodid_desc,g_rtax_m.rtaxmoddt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_rtax_m.rtax001 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CLOSE arti202_cl
      CALL s_transaction_end("N","0")
      RETURN
   END IF
 
   CALL arti202_show()
   WHILE TRUE
      LET g_rtax_m.rtax001 = g_rtax001_t
 
      
      #寫入修改者/修改日期資訊
      LET g_rtax_m.rtaxmodid = g_user 
LET g_rtax_m.rtaxmoddt = cl_get_current()
LET g_rtax_m.rtaxmodid_desc = cl_get_username(g_rtax_m.rtaxmodid)
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL arti202_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_rtax_m.* = g_rtax_m_t.*
         CALL arti202_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         EXIT WHILE
      END IF
 
      #若有modid跟moddt則進行update
      UPDATE rtax_t SET (rtaxmodid,rtaxmoddt) = (g_rtax_m.rtaxmodid,g_rtax_m.rtaxmoddt)
       WHERE rtaxent = g_enterprise AND rtax001 = g_rtax001_t
 
      
      EXIT WHILE
  
   END WHILE
 
   CLOSE arti202_cl
   CALL s_transaction_end("Y","0")
 
   #功能已完成,通報訊息中心
   CALL arti202_msgcentre_notify('modify')
   
END FUNCTION
]]>
  </section>
  <section id="arti202.msgcentre_notify" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION arti202_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL arti202_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_rtax_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="arti202.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="arti202.query" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION arti202_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point
   #add-point:query段define
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:query段查詢前
   {<point name="query.before_query"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET INT_FLAG = 0
   LET ls_wc = g_wc
 
   #CLEAR FORM
   #CALL g_browser.clear()
 
   DISPLAY " " TO FORMONLY.h_count
 
   CALL arti202_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      #add-point:query段取消
      {<point name="query.cancel"/>}
      #end add-point
      #CALL arti202_browser_fill(g_wc,g_searchtype)
      CALL arti202_fetch("")
      RETURN
   ELSE
      LET g_current_row = 1
      LET g_browser_cnt = 0
      LET g_current_idx = 1
      CALL g_browser.clear()
      LET g_first = 0  #設定重新查詢資料後顯示
   END IF
 
   LET g_searchtype = "3"
   LET g_searchcol = "0"
   CALL arti202_browser_fill(g_wc,g_searchtype)
   
   IF g_browser_cnt > 0 THEN
      CALL arti202_fetch("")
   ELSE
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #第一層模糊搜尋
   #IF g_browser_cnt = 0 THEN
   #   LET g_wc = cl_wc_parser(g_wc)
   #   CALL arti202_browser_fill(g_wc,g_searchtype)
   #END IF
   
   #第二層速記碼搜尋
   #IF g_browser_cnt = 0 THEN
   #   INITIALIZE g_errparam TO NULL 
   #   LET g_errparam.extend = "" 
   #   LET g_errparam.code   = "-100" 
   #   LET g_errparam.popup  = TRUE 
   #   CALL cl_err()
   #END IF
 
END FUNCTION
]]>
  </section>
  <section id="arti202.reproduce" ver="17" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION arti202_reproduce(l_dialog)
   DEFINE l_dialog      ui.DIALOG
   DEFINE li_addpos     LIKE type_t.num10
   DEFINE l_newno           LIKE rtax_t.rtax001 
   DEFINE l_oldno           LIKE rtax_t.rtax001 
 
   DEFINE l_master          RECORD LIKE rtax_t.*
   DEFINE l_cnt             LIKE type_t.num10  
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point
   #add-point:reproduce段define
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
 
   #add-point:複製段開始前
   {<point name="reproduce.before_reproduce"/>}
   #end add-point
 
   #檢查PK欄位是否均有值,若全部為NULL時退出
   IF g_rtax_m.rtax001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF 
 
   EXECUTE arti202_master_referesh USING g_rtax_m.rtax001 INTO g_rtax_m.rtax001,g_rtax_m.rtax002,g_rtax_m.rtax003, 
       g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax007,g_rtax_m.rtaxunit,g_rtax_m.rtax009, 
       g_rtax_m.rtaxstus,g_rtax_m.rtaxownid,g_rtax_m.rtaxowndp,g_rtax_m.rtaxcrtid,g_rtax_m.rtaxcrtdt, 
       g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxmodid,g_rtax_m.rtaxmoddt,g_rtax_m.rtax003_desc,g_rtax_m.rtax006_desc, 
       g_rtax_m.rtax007_desc,g_rtax_m.rtaxunit_desc,g_rtax_m.rtaxownid_desc,g_rtax_m.rtaxowndp_desc, 
       g_rtax_m.rtaxcrtid_desc,g_rtax_m.rtaxcrtdp_desc,g_rtax_m.rtaxmodid_desc
 
   #檢查如果有子節點(hasC=1)則顯示錯誤訊息後退出
 
   ERROR ""
 
   CALL cl_set_head_visible("","YES")
 
   
   LET g_rtax_m.rtax003 = ""
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_rtax_m.rtaxownid = g_user
      LET g_rtax_m.rtaxowndp = g_dept
      LET g_rtax_m.rtaxcrtid = g_user
      LET g_rtax_m.rtaxcrtdp = g_dept 
      LET g_rtax_m.rtaxcrtdt = cl_get_current()
      LET g_rtax_m.rtaxmodid = g_user
      LET g_rtax_m.rtaxmoddt = cl_get_current()
      LET g_rtax_m.rtaxstus = 'Y'
 
 
   
   CALL s_transaction_begin()
 
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #直接呼叫輸入
   CALL arti202_input("r")
 
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      LET g_rtax_m.* = g_rtax_m_t.*
      CALL arti202_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      #檢查是否還有子節點,若有則做插入節點
      IF g_browser[g_current_idx].b_hasC THEN
         IF g_browser[g_current_idx].b_exp THEN
            LET li_addpos = l_dialog.appendNode("s_browse",g_current_idx)
            CALL arti202_desc_show(li_addpos)
         END IF
      ELSE
         IF g_browser[g_current_idx].b_exp THEN
            #此處要改成已展開
            LET g_browser[g_current_idx].b_hasC = 1
            LET g_browser[g_current_idx].b_exp = 1
            LET li_addpos = l_dialog.appendNode("s_browse",g_current_idx)
            CALL arti202_desc_show(li_addpos)
         END IF
      END IF
   END IF
 
   #功能已完成,通報訊息中心
   CALL arti202_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="arti202.set_entry" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION arti202_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1 
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point
   #add-point:set_entry段define
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point
   
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("rtax001",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="arti202.set_no_entry" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION arti202_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("rtax001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="arti202.set_pk_array" ver="5" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION arti202_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_rtax_m.rtax001
   LET g_pk_array[1].column = 'rtax001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="arti202.show" ver="14" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION arti202_show()
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point
   #add-point:show段define
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
       
   
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL arti202_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   #讀入ref值(單頭)
   #add-point:reference段之後
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtax_m.rtax001,g_rtax_m.rtaxl003,g_rtax_m.rtaxl004,g_rtax_m.rtax002,g_rtax_m.rtax003, 
       g_rtax_m.rtax003_desc,g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax006_desc, 
       g_rtax_m.rtax007,g_rtax_m.rtax007_desc,g_rtax_m.rtaxunit,g_rtax_m.rtaxunit_desc,g_rtax_m.rtax009, 
       g_rtax_m.rtaxstus,g_rtax_m.rtaxownid,g_rtax_m.rtaxownid_desc,g_rtax_m.rtaxowndp,g_rtax_m.rtaxowndp_desc, 
       g_rtax_m.rtaxcrtid,g_rtax_m.rtaxcrtid_desc,g_rtax_m.rtaxcrtdt,g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxcrtdp_desc, 
       g_rtax_m.rtaxmodid,g_rtax_m.rtaxmodid_desc,g_rtax_m.rtaxmoddt
 
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_rtax_m.rtaxstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
   #顯示有特殊格式設定的欄位或說明
   CALL cl_show_fld_cont()   
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="arti202.sql_delete" ver="11" status="" src="s" readonly="">
    <![CDATA[#+ 實體刪除FUNCTION 
PRIVATE FUNCTION arti202_sql_delete(li_node)
   DEFINE li_node         LIKE type_t.num5  #TRUE:砍除Node Tree/FALSE:砍除Single Node
   DEFINE li_return       LIKE type_t.num5
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE ls_sql          STRING
   #add-point:sql_delete段define
   {<point name="sql_delet.define" edit="s"/>}
   #end add-point
   #add-point:sql_delete段define
   {<point name="sql_delet.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_return = TRUE
 
   #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL arti202_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
 
   #add-point:單頭刪除前
   {<point name="delete.head.b_delete" mark="Y"/>}
   #end add-point
   
   IF li_node = TRUE THEN
      #砍除該節點以下所有節點
      LET ls_sql = " SELECT rtax001,rtax003 FROM ",
                   " (SELECT rtax001,rtax003 FROM rtax_t WHERE rtaxent = '" ||g_enterprise|| "' AND rtax001<>rtax003)", 

                   " START WITH rtax003='",g_rtax_m.rtax003,"'",
                   " CONNECT BY PRIOR rtax001 = rtax003"
 
   ELSE 
   
   END IF
 
   DELETE FROM rtax_t
    WHERE rtaxent = g_enterprise AND rtax001 = g_rtax_m.rtax001
 
 
   #add-point:單頭刪除中
   {<point name="delete.head.m_delete"/>}
   #end add-point
 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "rtax_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end("N","0")
   END IF
 
   INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'rtaxlent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.rtaxl001
   LET l_field_keys[02] = 'rtaxl001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'rtaxl_t')
 
 
   RETURN li_return
 
END FUNCTION
]]>
  </section>
  <section id="arti202.state_change" ver="13" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION arti202_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_rtax_m.rtax001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN arti202_cl USING g_enterprise,g_rtax_m.rtax001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN arti202_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE arti202_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE arti202_master_referesh USING g_rtax_m.rtax001 INTO g_rtax_m.rtax001,g_rtax_m.rtax002,g_rtax_m.rtax003, 
       g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax007,g_rtax_m.rtaxunit,g_rtax_m.rtax009, 
       g_rtax_m.rtaxstus,g_rtax_m.rtaxownid,g_rtax_m.rtaxowndp,g_rtax_m.rtaxcrtid,g_rtax_m.rtaxcrtdt, 
       g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxmodid,g_rtax_m.rtaxmoddt,g_rtax_m.rtax003_desc,g_rtax_m.rtax006_desc, 
       g_rtax_m.rtax007_desc,g_rtax_m.rtaxunit_desc,g_rtax_m.rtaxownid_desc,g_rtax_m.rtaxowndp_desc, 
       g_rtax_m.rtaxcrtid_desc,g_rtax_m.rtaxcrtdp_desc,g_rtax_m.rtaxmodid_desc
 
   #檢查是否允許此動作
   IF NOT arti202_action_chk() THEN
      CLOSE arti202_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtax_m.rtax001,g_rtax_m.rtaxl003,g_rtax_m.rtaxl004,g_rtax_m.rtax002,g_rtax_m.rtax003, 
       g_rtax_m.rtax003_desc,g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax006_desc, 
       g_rtax_m.rtax007,g_rtax_m.rtax007_desc,g_rtax_m.rtaxunit,g_rtax_m.rtaxunit_desc,g_rtax_m.rtax009, 
       g_rtax_m.rtaxstus,g_rtax_m.rtaxownid,g_rtax_m.rtaxownid_desc,g_rtax_m.rtaxowndp,g_rtax_m.rtaxowndp_desc, 
       g_rtax_m.rtaxcrtid,g_rtax_m.rtaxcrtid_desc,g_rtax_m.rtaxcrtdt,g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxcrtdp_desc, 
       g_rtax_m.rtaxmodid,g_rtax_m.rtaxmodid_desc,g_rtax_m.rtaxmoddt
 
   CASE g_rtax_m.rtaxstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_rtax_m.rtaxstus
            
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION inactive
         IF cl_auth_chk_act("inactive") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.inactive"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION active
         IF cl_auth_chk_act("active") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.active"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      g_rtax_m.rtaxstus = lc_state OR cl_null(lc_state) THEN
      CLOSE arti202_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_rtax_m.rtaxmodid = g_user
   LET g_rtax_m.rtaxmoddt = cl_get_current()
   LET g_rtax_m.rtaxstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE rtax_t 
      SET (rtaxstus,rtaxmodid,rtaxmoddt) 
        = (g_rtax_m.rtaxstus,g_rtax_m.rtaxmodid,g_rtax_m.rtaxmoddt)     
    WHERE rtaxent = g_enterprise AND rtax001 = g_rtax_m.rtax001
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE arti202_master_referesh USING g_rtax_m.rtax001 INTO g_rtax_m.rtax001,g_rtax_m.rtax002, 
          g_rtax_m.rtax003,g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax007,g_rtax_m.rtaxunit, 
          g_rtax_m.rtax009,g_rtax_m.rtaxstus,g_rtax_m.rtaxownid,g_rtax_m.rtaxowndp,g_rtax_m.rtaxcrtid, 
          g_rtax_m.rtaxcrtdt,g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxmodid,g_rtax_m.rtaxmoddt,g_rtax_m.rtax003_desc, 
          g_rtax_m.rtax006_desc,g_rtax_m.rtax007_desc,g_rtax_m.rtaxunit_desc,g_rtax_m.rtaxownid_desc, 
          g_rtax_m.rtaxowndp_desc,g_rtax_m.rtaxcrtid_desc,g_rtax_m.rtaxcrtdp_desc,g_rtax_m.rtaxmodid_desc 

      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_rtax_m.rtax001,g_rtax_m.rtaxl003,g_rtax_m.rtaxl004,g_rtax_m.rtax002,g_rtax_m.rtax003, 
          g_rtax_m.rtax003_desc,g_rtax_m.rtax004,g_rtax_m.rtax005,g_rtax_m.rtax006,g_rtax_m.rtax006_desc, 
          g_rtax_m.rtax007,g_rtax_m.rtax007_desc,g_rtax_m.rtaxunit,g_rtax_m.rtaxunit_desc,g_rtax_m.rtax009, 
          g_rtax_m.rtaxstus,g_rtax_m.rtaxownid,g_rtax_m.rtaxownid_desc,g_rtax_m.rtaxowndp,g_rtax_m.rtaxowndp_desc, 
          g_rtax_m.rtaxcrtid,g_rtax_m.rtaxcrtid_desc,g_rtax_m.rtaxcrtdt,g_rtax_m.rtaxcrtdp,g_rtax_m.rtaxcrtdp_desc, 
          g_rtax_m.rtaxmodid,g_rtax_m.rtaxmodid_desc,g_rtax_m.rtaxmoddt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE arti202_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL arti202_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="arti202.tmp_tbl_chk" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ TEMP TABLE CHK
PRIVATE FUNCTION arti202_tmp_tbl_chk(ps_id,pi_code)
   DEFINE ps_id       STRING
   DEFINE pi_code     LIKE type_t.num10
   DEFINE ps_type     STRING
   DEFINE ls_id       LIKE type_t.chr500
   DEFINE ls_search   LIKE type_t.chr500
   DEFINE ls_type     LIKE type_t.chr500
   DEFINE li_cnt      LIKE type_t.num10
   DEFINE li_code     LIKE type_t.num10   
   #add-point:tmp_tbl_chk段define
   {<point name="tmp_tbl_chk.define" edit="s"/>}
   #end add-point
   #add-point:tmp_tbl_chk段define
   {<point name="tmp_tbl_chk.define_customerization" edit="c"/>}
   #end add-point
   
   LET ls_id = ps_id
  
   IF cl_null(ls_id) THEN
      RETURN TRUE
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM arti202_tmp ", 
               " WHERE rtax001 = ? "
 
   PREPARE arti202_get_cnt FROM g_sql
   EXECUTE arti202_get_cnt USING ls_id 
                                     INTO li_cnt
   FREE arti202_get_cnt
 
   IF li_cnt = 0 OR SQLCA.sqlcode THEN
      RETURN TRUE
   ELSE
      #資料已存在, 確定是否需要更新展開值
      LET g_sql = " SELECT exp_code FROM arti202_tmp ",
                  " WHERE rtax001 = ? " 
 
      PREPARE arti202_chk_exp FROM g_sql
      EXECUTE arti202_chk_exp USING ls_id 
                                        INTO li_code
      FREE arti202_chk_exp
      
      #若新展開值>原展開值則做更新
      IF pi_code > li_code THEN
         LET g_sql = " UPDATE arti202_tmp SET (exp_code) = ('",pi_code,"') ",
                     " WHERE rtax001 = ? "
         PREPARE arti202_upd_exp FROM g_sql
         EXECUTE arti202_upd_exp USING ls_id 
         FREE arti202_upd_exp
      END IF
      
      RETURN FALSE
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="arti202.ui_dialog" ver="17" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION arti202_ui_dialog()
   DEFINE li_exit      LIKE type_t.num5    #判別是否為離開作業
   DEFINE la_param  RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
                    END RECORD
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm() 
 
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE li_exit = FALSE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_rtax_m.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         LET g_first = 1
         CALL arti202_init()
      END IF
 
      #當瀏覽頁簽被設定關閉時,使用MENU (開啟時使用DIALOG)
      IF g_worksheet_hidden = 1 THEN
 
         LET g_current_sw = FALSE
 
         #回歸舊筆數位置 (回到當時異動的筆數)
         LET g_current_idx = g_current_row
         LET g_current_sw = TRUE
         CALL cl_show_fld_cont() 
         CALL arti202_fetch("")    #當每次點任一筆資料都會需要用到
 
         MENU
            #add-point:ui_dialog段其他頁簽的 display array(in menu)
            {<point name="ui_dialog.more_displayarray_in_menu"/>}
            #end add-point
            
            ON ACTION statechange
               LET g_action_choice = "statechange"
               CALL arti202_statechange()
            
            #ACTION表單列
            ON ACTION first
               LET g_current_idx = 1
               CALL arti202_fetch("")
               LET g_current_row = g_current_idx
            
            ON ACTION next
               LET g_current_idx = g_current_idx + 1
               CALL arti202_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION jump
               CALL arti202_fetch("/")
               LET g_current_row = g_current_idx
 
            ON ACTION previous
               LET g_current_idx = g_current_idx - 1
               CALL arti202_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION last 
               LET g_current_idx = g_browser_cnt
               CALL arti202_fetch("") 
               LET g_current_row = g_current_idx
 
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU 
 
            ON ACTION close
               LET li_exit = TRUE
               EXIT MENU
 
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
         
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/mainhidden.png")
                  LET g_worksheet_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/mainhidden.png")
                  LET g_worksheet_hidden = 1
               END IF
               EXIT MENU
         
            ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden
               END IF
 
            
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL arti202_modify()
               #add-point:ON ACTION modify
               {<point name="menu2.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION compute_rtaw
            LET g_action_choice="compute_rtaw"
            IF cl_auth_chk_act("compute_rtaw") THEN
               
               #add-point:ON ACTION compute_rtaw
               {<point name="menu2.compute_rtaw" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL arti202_delete(DIALOG)
               #add-point:ON ACTION delete
               {<point name="menu2.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL arti202_insert(DIALOG)
               #add-point:ON ACTION insert
               {<point name="menu2.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu2.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL arti202_reproduce(DIALOG)
               #add-point:ON ACTION reproduce
               {<point name="menu2.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL arti202_query()
               #add-point:ON ACTION query
               {<point name="menu2.query" />}
               #END add-point
               
            END IF
 
 
 
 
            
 
            #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL arti202_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.menu.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL arti202_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.menu.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL arti202_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.menu.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
            
            &include "main_menu_exit_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
 
         END MENU
 
      ELSE
         #第一次進入程式, 或啟動重新查詢
         IF g_first = 0 THEN 
            CALL arti202_browser_fill(g_wc,g_searchtype)
            LET g_first = 1
         END IF
      
         DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         
            INPUT g_searchstr,g_searchcol,g_searchtype FROM formonly.searchstr,formonly.cbo_searchcol, 
                formonly.rdo_searchtype
               BEFORE INPUT
            END INPUT
            
            #左側瀏覽頁簽
            DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
 
               BEFORE DISPLAY
                  CALL DIALOG.setSelectionMode("s_browse",1) #設定為單選
 
               BEFORE ROW
                  #add-point:ui_dialog段before row1
                  {<point name="ui_dialog.before_row1"/>}
                  #end add-point
                  #回歸舊筆數位置 (回到當時異動的筆數)
                  LET g_current_idx = DIALOG.getCurrentRow("s_browse")
                  IF g_current_row > 1 AND g_current_sw = FALSE THEN
                     CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                     LET g_current_idx = g_current_row
                  END IF
                  #add-point:ui_dialog段before row2
                  {<point name="ui_dialog.before_row2"/>}
                  #end add-point
                  LET g_current_row = g_current_idx #目前指標
                  LET g_current_sw = TRUE
                  CALL cl_show_fld_cont() 
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
 
                  CALL arti202_fetch("")  #當每次點任一筆資料都會需要用到
 
               ON EXPAND (g_row_index)
                  #樹展開
                  CALL arti202_browser_expand(g_row_index)
                  LET g_browser[g_row_index].b_isExp = 1
 
               ON COLLAPSE (g_row_index)
                  #樹關閉
 
            END DISPLAY
 
            #add-point:ui_dialog段其他頁簽的 display array
            {<point name="ui_dialog.more_displayarray"/>}
            #end add-point
 
            BEFORE DIALOG
               #action default動作(判定是否要先執行特定動作)
               #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL arti202_insert(DIALOG)
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
               LET g_curr_diag = ui.DIALOG.getCurrent()
               LET g_current_sw = FALSE
 
               #add-point:ui_dialog,before dialog1
               {<point name="ui_dialog.b_dialog1"/>}
               #end add-point
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_sw = FALSE THEN
                  IF g_current_row > g_browser.getLength() THEN
                     LET g_current_row = g_browser.getLength()
                  END IF 
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               #add-point:ui_dialog,before dialog2
               {<point name="ui_dialog.b_dialog2"/>}
               #end add-point
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               CALL cl_show_fld_cont() 
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               CALL arti202_fetch("")            #當每次點任一筆資料都會需要用到
               #add-point:ui_dialog,before dialog
               {<point name="ui_dialog.b_dialog"/>}
               #end add-point
 
            AFTER DIALOG 
               #add-point:ui_dialog,after dialog
               {<point name="ui_dialog.a_dialog"/>}
               #end add-point
 
            ON ACTION statechange
               LET g_action_choice = "statechange"
               CALL arti202_statechange()
 
            #一般搜尋
            ON ACTION searchdata
               LET g_searchstr = GET_FLDBUF(searchstr)
               LET g_searchcol = GET_FLDBUF(cbo_searchcol)
               #若無輸入關鍵字則查找出所有資料
               IF g_searchcol="0" AND NOT cl_null(g_searchstr) THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "searchcol:" 
                  LET g_errparam.code   = "std-00001" 
                  LET g_errparam.popup  = FALSE 
                  CALL cl_err()
                  CONTINUE DIALOG
               END IF 
               IF NOT cl_null(g_searchstr) THEN
                  LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
                  LET g_wc = g_wc.toLowerCase()
               ELSE
                  LET g_wc = " 1=1 "
               END IF
               LET g_first = 0 #啟動重查
               EXIT DIALOG
 
            #進階搜尋
            #ON ACTION advancesearch
 
            #ACTION表單列
            ON ACTION first
               LET g_current_idx = 1
               CALL arti202_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION next
               LET g_current_idx = g_current_idx + 1
               CALL arti202_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION jump
               CALL arti202_fetch("/")
               LET g_current_row = g_current_idx
 
            ON ACTION previous
               LET g_current_idx = g_current_idx - 1
               CALL arti202_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION last 
               LET g_current_idx = g_browser_cnt
               CALL arti202_fetch("")
               LET g_current_row = g_current_idx
            
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
            
            ON ACTION close
               LET li_exit = TRUE
               EXIT DIALOG
            
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementImage("mainhidden","16/mainhidden.png")
                  LET g_main_hidden = 1
               END IF
               EXIT DIALOG
 
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/worksheethidden.png")
                  LET g_worksheet_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/worksheethidden.png")
                  LET g_worksheet_hidden = 1
               END IF
               EXIT DIALOG
 
            ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden
               END IF
 
            
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL arti202_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION compute_rtaw
            LET g_action_choice="compute_rtaw"
            IF cl_auth_chk_act("compute_rtaw") THEN
               
               #add-point:ON ACTION compute_rtaw
               {<point name="menu.compute_rtaw" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL arti202_delete(DIALOG)
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL arti202_insert(DIALOG)
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL arti202_reproduce(DIALOG)
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL arti202_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
 
 
            
            
            #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL arti202_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL arti202_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL arti202_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
            
            &include "main_menu_exit_dialog.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END DIALOG 
      
      END IF
      
   END WHILE
 
END FUNCTION 
]]>
  </section>
</add_points>
