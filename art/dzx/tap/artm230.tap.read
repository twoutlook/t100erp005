<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="artm230" std_prog="artm230" erpver="1.0" module="ART" ver="1" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtap_d[l_ac].rtap002
         CALL ap_ref_array2(g_ref_fields,"SELECT rtall003 FROM rtall_t WHERE rtallent='"||g_enterprise||"' AND rtall001=? AND rtall002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtap_d[l_ac].rtap002_desc = g_rtn_fields[1]
          
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtap_d[l_ac].rtap007
         CALL ap_ref_array2(g_ref_fields,"SELECT mhael023 FROM mhael_t WHERE mhaelent='"||g_enterprise||"' AND mhael001=? AND mhael022='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtap_d[l_ac].rtap007_desc = g_rtn_fields[1]

         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtap_d[l_ac].rtap008
         CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtap_d[l_ac].rtap008_desc = g_rtn_fields[1]
         
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtap_d[l_ac].rtap009
         CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtap_d[l_ac].rtap009_desc = g_rtn_fields[1]
         
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtap_d[l_ac].rtap010
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtap_d[l_ac].rtap010_desc = g_rtn_fields[1]

         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtap_d[l_ac].rtap011
         CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtap_d[l_ac].rtap011_desc = g_rtn_fields[1]]]>
  </point>
  <point name="construct.c.page1.rtap002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtal001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtap002  #顯示到畫面上
            NEXT FIELD rtap002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.rtap007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtap007  #顯示到畫面上
            NEXT FIELD rtap007                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.rtap008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "('1','3')"
            CALL q_pmaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtap008  #顯示到畫面上
            NEXT FIELD rtap008                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.rtap009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtap009  #顯示到畫面上
            NEXT FIELD rtap009                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.rtap010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtap010  #顯示到畫面上
            NEXT FIELD rtap010                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.rtap011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtap011  #顯示到畫面上
            NEXT FIELD rtap011                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtao001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtao001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtao001  #顯示到畫面上
            NEXT FIELD rtao001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtao003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_prcf001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtao003  #顯示到畫面上
            NEXT FIELD rtao003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtao004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtao004  #顯示到畫面上
            NEXT FIELD rtao004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtao005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtao005  #顯示到畫面上
            NEXT FIELD rtao005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtaocnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaocnfid  #顯示到畫面上
            NEXT FIELD rtaocnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtaocrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaocrtdp  #顯示到畫面上
            NEXT FIELD rtaocrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtaocrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaocrtid  #顯示到畫面上
            NEXT FIELD rtaocrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtaomodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaomodid  #顯示到畫面上
            NEXT FIELD rtaomodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtaoowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaoowndp  #顯示到畫面上
            NEXT FIELD rtaoowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtaoownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaoownid  #顯示到畫面上
            NEXT FIELD rtaoownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rtaosite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaosite  #顯示到畫面上
            NEXT FIELD rtaosite                     #返回原欄位
    

]]>
  </point>
  <point name="input.a.page1.rtapseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_rtao_m.rtao001 IS NOT NULL AND g_rtap_d[g_detail_idx].rtapseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtao_m.rtao001 != g_rtao001_t OR g_rtap_d[g_detail_idx].rtapseq != g_rtap_d_t.rtapseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtap_t WHERE "||"rtapent = '" ||g_enterprise|| "' AND "||"rtap001 = '"||g_rtao_m.rtao001 ||"' AND "|| "rtapseq = '"||g_rtap_d[g_detail_idx].rtapseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.rtao001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_rtao_m.rtao001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_rtao_m.rtao001 != g_rtao001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtao_t WHERE "||"rtaoent = '" ||g_enterprise|| "' AND "||"rtao001 = '"||g_rtao_m.rtao001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_rtao_m.rtaostus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

]]>
  </point>
  <point name="statechange.after_refresh" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   RETURN ]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CASE g_rtao_m.rtaostus
         WHEN "N"
            #HIDE OPTION "open"
            CALL cl_set_act_visible("unconfirmed",FALSE)
         WHEN "X"
            #HIDE OPTION "invalid"
            CALL cl_set_act_visible("invalid,unconfirmed,confirmed",FALSE)
       
         WHEN "Y"
            #HIDE OPTION "confirmed"
            CALL cl_set_act_visible("invalid,confirmed,unconfirmed",FALSE)
      END CASE]]>
  </point>
  <section id="artm230.action_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION artm230_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="artm230.b_fill" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION artm230_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_rtap_d.clear()    #g_rtap_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF artm230_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE rtapseq,rtap002,rtap003,rtap004,rtap005,rtap006,rtap007,rtap008, 
             rtap009,rtap010,rtap011,rtap012,rtap013,rtap014,rtap015,rtap016,rtap017,rtap018,rtap019, 
             rtap020,rtap021,rtap022,rtap023,rtapcomp,rtapsite  FROM rtap_t",   
                     " INNER JOIN rtao_t ON rtao001 = rtap001 ",
 
                     #"",
                     
                     "",
                     
                     " WHERE rtapent=? AND rtap001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtap_t.rtapseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artm230_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR artm230_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_rtao_m.rtao001
                                               
      FOREACH b_fill_cs INTO g_rtap_d[l_ac].rtapseq,g_rtap_d[l_ac].rtap002,g_rtap_d[l_ac].rtap003,g_rtap_d[l_ac].rtap004, 
          g_rtap_d[l_ac].rtap005,g_rtap_d[l_ac].rtap006,g_rtap_d[l_ac].rtap007,g_rtap_d[l_ac].rtap008, 
          g_rtap_d[l_ac].rtap009,g_rtap_d[l_ac].rtap010,g_rtap_d[l_ac].rtap011,g_rtap_d[l_ac].rtap012, 
          g_rtap_d[l_ac].rtap013,g_rtap_d[l_ac].rtap014,g_rtap_d[l_ac].rtap015,g_rtap_d[l_ac].rtap016, 
          g_rtap_d[l_ac].rtap017,g_rtap_d[l_ac].rtap018,g_rtap_d[l_ac].rtap019,g_rtap_d[l_ac].rtap020, 
          g_rtap_d[l_ac].rtap021,g_rtap_d[l_ac].rtap022,g_rtap_d[l_ac].rtap023,g_rtap_d[l_ac].rtapcomp, 
          g_rtap_d[l_ac].rtapsite
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_rtap_d.deleteElement(g_rtap_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE artm230_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_rtap_d.getLength()
      LET g_rtap_d_mask_o[l_ac].* =  g_rtap_d[l_ac].*
      CALL artm230_rtap_t_mask()
      LET g_rtap_d_mask_n[l_ac].* =  g_rtap_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="artm230.b_fill2" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION artm230_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL artm230_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="artm230.browser_fill" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION artm230_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE rtao001 ",
                      " FROM rtao_t ",
                      " ",
                      " LEFT JOIN rtap_t ON rtapent = rtaoent AND rtao001 = rtap001 ", "  ",
                      #add-point:browser_fill段sql(rtap_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
 
                      " ", 
                      " ", 
                      " WHERE rtaoent = '" ||g_enterprise|| "' AND rtapent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("rtao_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE rtao001 ",
                      " FROM rtao_t ", 
                      "  ",
                      "  ",
                      " WHERE rtaoent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("rtao_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_rtao_m.* TO NULL
      CALL g_rtap_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.rtaosite,t0.rtao001,t0.rtao003,t0.rtao004,t0.rtao005,t0.rtao006 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.rtaostus,t0.rtaosite,t0.rtao001,t0.rtao003,t0.rtao004,t0.rtao005, 
       t0.rtao006,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ",
               " FROM rtao_t t0",
               "  ",
               "  LEFT JOIN rtap_t ON rtapent = rtaoent AND rtao001 = rtap001 ", "  ", 
               #add-point:browser_fill段sql(rtap_t1)
               {<point name="browser_fill.join.rtap_t1"/>}
               #end add-point
 
 
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.rtaosite AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.rtao004  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.rtao005 AND t3.ooefl002='"||g_lang||"' ",
 
               " WHERE t0.rtaoent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("rtao_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY rtao001 ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"rtao_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_rtaosite,g_browser[g_cnt].b_rtao001, 
       g_browser[g_cnt].b_rtao003,g_browser[g_cnt].b_rtao004,g_browser[g_cnt].b_rtao005,g_browser[g_cnt].b_rtao006, 
       g_browser[g_cnt].b_rtaosite_desc,g_browser[g_cnt].b_rtao004_desc,g_browser[g_cnt].b_rtao005_desc 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL artm230_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_rtao001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="artm230.construct" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION artm230_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_rtao_m.* TO NULL
   CALL g_rtap_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON rtaosite,rtao001,rtao002,rtao003,rtao004,rtao005,rtao006,rtaounit,rtaostus, 
          rtaoownid,rtaoowndp,rtaocrtid,rtaocrtdp,rtaocrtdt,rtaomodid,rtaomoddt,rtaocnfid,rtaocnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<rtaocrtdt>>----
         AFTER FIELD rtaocrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<rtaomoddt>>----
         AFTER FIELD rtaomoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtaocnfdt>>----
         AFTER FIELD rtaocnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtaopstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.rtaosite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaosite
            #add-point:ON ACTION controlp INFIELD rtaosite
            {<point name="construct.c.rtaosite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaosite
            #add-point:BEFORE FIELD rtaosite
            {<point name="construct.b.rtaosite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaosite
            
            #add-point:AFTER FIELD rtaosite
            {<point name="construct.a.rtaosite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtao001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtao001
            #add-point:ON ACTION controlp INFIELD rtao001
            {<point name="construct.c.rtao001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtao001
            #add-point:BEFORE FIELD rtao001
            {<point name="construct.b.rtao001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtao001
            
            #add-point:AFTER FIELD rtao001
            {<point name="construct.a.rtao001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtao002
            #add-point:BEFORE FIELD rtao002
            {<point name="construct.b.rtao002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtao002
            
            #add-point:AFTER FIELD rtao002
            {<point name="construct.a.rtao002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtao002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtao002
            #add-point:ON ACTION controlp INFIELD rtao002
            {<point name="construct.c.rtao002" />}
            #END add-point
 
         #Ctrlp:construct.c.rtao003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtao003
            #add-point:ON ACTION controlp INFIELD rtao003
            {<point name="construct.c.rtao003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtao003
            #add-point:BEFORE FIELD rtao003
            {<point name="construct.b.rtao003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtao003
            
            #add-point:AFTER FIELD rtao003
            {<point name="construct.a.rtao003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtao004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtao004
            #add-point:ON ACTION controlp INFIELD rtao004
            {<point name="construct.c.rtao004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtao004
            #add-point:BEFORE FIELD rtao004
            {<point name="construct.b.rtao004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtao004
            
            #add-point:AFTER FIELD rtao004
            {<point name="construct.a.rtao004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtao005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtao005
            #add-point:ON ACTION controlp INFIELD rtao005
            {<point name="construct.c.rtao005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtao005
            #add-point:BEFORE FIELD rtao005
            {<point name="construct.b.rtao005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtao005
            
            #add-point:AFTER FIELD rtao005
            {<point name="construct.a.rtao005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtao006
            #add-point:BEFORE FIELD rtao006
            {<point name="construct.b.rtao006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtao006
            
            #add-point:AFTER FIELD rtao006
            {<point name="construct.a.rtao006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtao006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtao006
            #add-point:ON ACTION controlp INFIELD rtao006
            {<point name="construct.c.rtao006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaounit
            #add-point:BEFORE FIELD rtaounit
            {<point name="construct.b.rtaounit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaounit
            
            #add-point:AFTER FIELD rtaounit
            {<point name="construct.a.rtaounit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtaounit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaounit
            #add-point:ON ACTION controlp INFIELD rtaounit
            {<point name="construct.c.rtaounit" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaostus
            #add-point:BEFORE FIELD rtaostus
            {<point name="construct.b.rtaostus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaostus
            
            #add-point:AFTER FIELD rtaostus
            {<point name="construct.a.rtaostus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtaostus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaostus
            #add-point:ON ACTION controlp INFIELD rtaostus
            {<point name="construct.c.rtaostus" />}
            #END add-point
 
         #Ctrlp:construct.c.rtaoownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaoownid
            #add-point:ON ACTION controlp INFIELD rtaoownid
            {<point name="construct.c.rtaoownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaoownid
            #add-point:BEFORE FIELD rtaoownid
            {<point name="construct.b.rtaoownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaoownid
            
            #add-point:AFTER FIELD rtaoownid
            {<point name="construct.a.rtaoownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtaoowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaoowndp
            #add-point:ON ACTION controlp INFIELD rtaoowndp
            {<point name="construct.c.rtaoowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaoowndp
            #add-point:BEFORE FIELD rtaoowndp
            {<point name="construct.b.rtaoowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaoowndp
            
            #add-point:AFTER FIELD rtaoowndp
            {<point name="construct.a.rtaoowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtaocrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaocrtid
            #add-point:ON ACTION controlp INFIELD rtaocrtid
            {<point name="construct.c.rtaocrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaocrtid
            #add-point:BEFORE FIELD rtaocrtid
            {<point name="construct.b.rtaocrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaocrtid
            
            #add-point:AFTER FIELD rtaocrtid
            {<point name="construct.a.rtaocrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtaocrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaocrtdp
            #add-point:ON ACTION controlp INFIELD rtaocrtdp
            {<point name="construct.c.rtaocrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaocrtdp
            #add-point:BEFORE FIELD rtaocrtdp
            {<point name="construct.b.rtaocrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaocrtdp
            
            #add-point:AFTER FIELD rtaocrtdp
            {<point name="construct.a.rtaocrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaocrtdt
            #add-point:BEFORE FIELD rtaocrtdt
            {<point name="construct.b.rtaocrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.rtaomodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaomodid
            #add-point:ON ACTION controlp INFIELD rtaomodid
            {<point name="construct.c.rtaomodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaomodid
            #add-point:BEFORE FIELD rtaomodid
            {<point name="construct.b.rtaomodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaomodid
            
            #add-point:AFTER FIELD rtaomodid
            {<point name="construct.a.rtaomodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaomoddt
            #add-point:BEFORE FIELD rtaomoddt
            {<point name="construct.b.rtaomoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.rtaocnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaocnfid
            #add-point:ON ACTION controlp INFIELD rtaocnfid
            {<point name="construct.c.rtaocnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaocnfid
            #add-point:BEFORE FIELD rtaocnfid
            {<point name="construct.b.rtaocnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaocnfid
            
            #add-point:AFTER FIELD rtaocnfid
            {<point name="construct.a.rtaocnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaocnfdt
            #add-point:BEFORE FIELD rtaocnfdt
            {<point name="construct.b.rtaocnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON rtapseq,rtap002,rtap003,rtap004,rtap005,rtap006,rtap007,rtap008,rtap009, 
          rtap010,rtap011,rtap012,rtap013,rtap014,rtap015,rtap016,rtap017,rtap018,rtap019,rtap020,rtap021, 
          rtap022,rtap023,rtapcomp,rtapsite
           FROM s_detail1[1].rtapseq,s_detail1[1].rtap002,s_detail1[1].rtap003,s_detail1[1].rtap004, 
               s_detail1[1].rtap005,s_detail1[1].rtap006,s_detail1[1].rtap007,s_detail1[1].rtap008,s_detail1[1].rtap009, 
               s_detail1[1].rtap010,s_detail1[1].rtap011,s_detail1[1].rtap012,s_detail1[1].rtap013,s_detail1[1].rtap014, 
               s_detail1[1].rtap015,s_detail1[1].rtap016,s_detail1[1].rtap017,s_detail1[1].rtap018,s_detail1[1].rtap019, 
               s_detail1[1].rtap020,s_detail1[1].rtap021,s_detail1[1].rtap022,s_detail1[1].rtap023,s_detail1[1].rtapcomp, 
               s_detail1[1].rtapsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtapseq
            #add-point:BEFORE FIELD rtapseq
            {<point name="construct.b.page1.rtapseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtapseq
            
            #add-point:AFTER FIELD rtapseq
            {<point name="construct.a.page1.rtapseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtapseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtapseq
            #add-point:ON ACTION controlp INFIELD rtapseq
            {<point name="construct.c.page1.rtapseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.rtap002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap002
            #add-point:ON ACTION controlp INFIELD rtap002
            {<point name="construct.c.page1.rtap002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap002
            #add-point:BEFORE FIELD rtap002
            {<point name="construct.b.page1.rtap002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap002
            
            #add-point:AFTER FIELD rtap002
            {<point name="construct.a.page1.rtap002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap003
            #add-point:BEFORE FIELD rtap003
            {<point name="construct.b.page1.rtap003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap003
            
            #add-point:AFTER FIELD rtap003
            {<point name="construct.a.page1.rtap003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap003
            #add-point:ON ACTION controlp INFIELD rtap003
            {<point name="construct.c.page1.rtap003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap004
            #add-point:BEFORE FIELD rtap004
            {<point name="construct.b.page1.rtap004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap004
            
            #add-point:AFTER FIELD rtap004
            {<point name="construct.a.page1.rtap004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap004
            #add-point:ON ACTION controlp INFIELD rtap004
            {<point name="construct.c.page1.rtap004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap005
            #add-point:BEFORE FIELD rtap005
            {<point name="construct.b.page1.rtap005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap005
            
            #add-point:AFTER FIELD rtap005
            {<point name="construct.a.page1.rtap005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap005
            #add-point:ON ACTION controlp INFIELD rtap005
            {<point name="construct.c.page1.rtap005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap006
            #add-point:BEFORE FIELD rtap006
            {<point name="construct.b.page1.rtap006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap006
            
            #add-point:AFTER FIELD rtap006
            {<point name="construct.a.page1.rtap006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap006
            #add-point:ON ACTION controlp INFIELD rtap006
            {<point name="construct.c.page1.rtap006" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.rtap007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap007
            #add-point:ON ACTION controlp INFIELD rtap007
            {<point name="construct.c.page1.rtap007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap007
            #add-point:BEFORE FIELD rtap007
            {<point name="construct.b.page1.rtap007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap007
            
            #add-point:AFTER FIELD rtap007
            {<point name="construct.a.page1.rtap007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap008
            #add-point:ON ACTION controlp INFIELD rtap008
            {<point name="construct.c.page1.rtap008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap008
            #add-point:BEFORE FIELD rtap008
            {<point name="construct.b.page1.rtap008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap008
            
            #add-point:AFTER FIELD rtap008
            {<point name="construct.a.page1.rtap008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap009
            #add-point:ON ACTION controlp INFIELD rtap009
            {<point name="construct.c.page1.rtap009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap009
            #add-point:BEFORE FIELD rtap009
            {<point name="construct.b.page1.rtap009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap009
            
            #add-point:AFTER FIELD rtap009
            {<point name="construct.a.page1.rtap009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap010
            #add-point:ON ACTION controlp INFIELD rtap010
            {<point name="construct.c.page1.rtap010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap010
            #add-point:BEFORE FIELD rtap010
            {<point name="construct.b.page1.rtap010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap010
            
            #add-point:AFTER FIELD rtap010
            {<point name="construct.a.page1.rtap010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap011
            #add-point:ON ACTION controlp INFIELD rtap011
            {<point name="construct.c.page1.rtap011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap011
            #add-point:BEFORE FIELD rtap011
            {<point name="construct.b.page1.rtap011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap011
            
            #add-point:AFTER FIELD rtap011
            {<point name="construct.a.page1.rtap011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap012
            #add-point:BEFORE FIELD rtap012
            {<point name="construct.b.page1.rtap012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap012
            
            #add-point:AFTER FIELD rtap012
            {<point name="construct.a.page1.rtap012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap012
            #add-point:ON ACTION controlp INFIELD rtap012
            {<point name="construct.c.page1.rtap012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap013
            #add-point:BEFORE FIELD rtap013
            {<point name="construct.b.page1.rtap013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap013
            
            #add-point:AFTER FIELD rtap013
            {<point name="construct.a.page1.rtap013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap013
            #add-point:ON ACTION controlp INFIELD rtap013
            {<point name="construct.c.page1.rtap013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap014
            #add-point:BEFORE FIELD rtap014
            {<point name="construct.b.page1.rtap014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap014
            
            #add-point:AFTER FIELD rtap014
            {<point name="construct.a.page1.rtap014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap014
            #add-point:ON ACTION controlp INFIELD rtap014
            {<point name="construct.c.page1.rtap014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap015
            #add-point:BEFORE FIELD rtap015
            {<point name="construct.b.page1.rtap015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap015
            
            #add-point:AFTER FIELD rtap015
            {<point name="construct.a.page1.rtap015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap015
            #add-point:ON ACTION controlp INFIELD rtap015
            {<point name="construct.c.page1.rtap015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap016
            #add-point:BEFORE FIELD rtap016
            {<point name="construct.b.page1.rtap016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap016
            
            #add-point:AFTER FIELD rtap016
            {<point name="construct.a.page1.rtap016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap016
            #add-point:ON ACTION controlp INFIELD rtap016
            {<point name="construct.c.page1.rtap016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap017
            #add-point:BEFORE FIELD rtap017
            {<point name="construct.b.page1.rtap017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap017
            
            #add-point:AFTER FIELD rtap017
            {<point name="construct.a.page1.rtap017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap017
            #add-point:ON ACTION controlp INFIELD rtap017
            {<point name="construct.c.page1.rtap017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap018
            #add-point:BEFORE FIELD rtap018
            {<point name="construct.b.page1.rtap018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap018
            
            #add-point:AFTER FIELD rtap018
            {<point name="construct.a.page1.rtap018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap018
            #add-point:ON ACTION controlp INFIELD rtap018
            {<point name="construct.c.page1.rtap018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap019
            #add-point:BEFORE FIELD rtap019
            {<point name="construct.b.page1.rtap019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap019
            
            #add-point:AFTER FIELD rtap019
            {<point name="construct.a.page1.rtap019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap019
            #add-point:ON ACTION controlp INFIELD rtap019
            {<point name="construct.c.page1.rtap019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap020
            #add-point:BEFORE FIELD rtap020
            {<point name="construct.b.page1.rtap020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap020
            
            #add-point:AFTER FIELD rtap020
            {<point name="construct.a.page1.rtap020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap020
            #add-point:ON ACTION controlp INFIELD rtap020
            {<point name="construct.c.page1.rtap020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap021
            #add-point:BEFORE FIELD rtap021
            {<point name="construct.b.page1.rtap021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap021
            
            #add-point:AFTER FIELD rtap021
            {<point name="construct.a.page1.rtap021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap021
            #add-point:ON ACTION controlp INFIELD rtap021
            {<point name="construct.c.page1.rtap021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap022
            #add-point:BEFORE FIELD rtap022
            {<point name="construct.b.page1.rtap022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap022
            
            #add-point:AFTER FIELD rtap022
            {<point name="construct.a.page1.rtap022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap022
            #add-point:ON ACTION controlp INFIELD rtap022
            {<point name="construct.c.page1.rtap022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap023
            #add-point:BEFORE FIELD rtap023
            {<point name="construct.b.page1.rtap023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap023
            
            #add-point:AFTER FIELD rtap023
            {<point name="construct.a.page1.rtap023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtap023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap023
            #add-point:ON ACTION controlp INFIELD rtap023
            {<point name="construct.c.page1.rtap023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtapcomp
            #add-point:BEFORE FIELD rtapcomp
            {<point name="construct.b.page1.rtapcomp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtapcomp
            
            #add-point:AFTER FIELD rtapcomp
            {<point name="construct.a.page1.rtapcomp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtapcomp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtapcomp
            #add-point:ON ACTION controlp INFIELD rtapcomp
            {<point name="construct.c.page1.rtapcomp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtapsite
            #add-point:BEFORE FIELD rtapsite
            {<point name="construct.b.page1.rtapsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtapsite
            
            #add-point:AFTER FIELD rtapsite
            {<point name="construct.a.page1.rtapsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtapsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtapsite
            #add-point:ON ACTION controlp INFIELD rtapsite
            {<point name="construct.c.page1.rtapsite" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "rtao_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtap_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="artm230.default_search" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION artm230_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " rtao001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "rtao_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtap_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="artm230.delete" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION artm230_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_rtao_m.rtao001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN artm230_cl USING g_enterprise,g_rtao_m.rtao001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artm230_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE artm230_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artm230_master_referesh USING g_rtao_m.rtao001 INTO g_rtao_m.rtaosite,g_rtao_m.rtao001,g_rtao_m.rtao002, 
       g_rtao_m.rtao003,g_rtao_m.rtao004,g_rtao_m.rtao005,g_rtao_m.rtao006,g_rtao_m.rtaounit,g_rtao_m.rtaostus, 
       g_rtao_m.rtaoownid,g_rtao_m.rtaoowndp,g_rtao_m.rtaocrtid,g_rtao_m.rtaocrtdp,g_rtao_m.rtaocrtdt, 
       g_rtao_m.rtaomodid,g_rtao_m.rtaomoddt,g_rtao_m.rtaocnfid,g_rtao_m.rtaocnfdt,g_rtao_m.rtaosite_desc, 
       g_rtao_m.rtao004_desc,g_rtao_m.rtao005_desc,g_rtao_m.rtaoownid_desc,g_rtao_m.rtaoowndp_desc,g_rtao_m.rtaocrtid_desc, 
       g_rtao_m.rtaocrtdp_desc,g_rtao_m.rtaomodid_desc,g_rtao_m.rtaocnfid_desc
   
   #檢查是否允許此動作
   IF NOT artm230_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtao_m_mask_o.* =  g_rtao_m.*
   CALL artm230_rtao_t_mask()
   LET g_rtao_m_mask_n.* =  g_rtao_m.*
   
   CALL artm230_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL artm230_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_rtao001_t = g_rtao_m.rtao001
 
 
      DELETE FROM rtao_t
       WHERE rtaoent = g_enterprise AND rtao001 = g_rtao_m.rtao001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_rtao_m.rtao001 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM rtap_t
       WHERE rtapent = g_enterprise AND rtap001 = g_rtao_m.rtao001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtap_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE artm230_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_rtap_d.clear() 
 
     
      CALL artm230_ui_browser_refresh()  
      #CALL artm230_ui_headershow()  
      #CALL artm230_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL artm230_browser_fill("")
         CALL artm230_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE artm230_cl
 
   #功能已完成,通報訊息中心
   CALL artm230_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="artm230.delete_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION artm230_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM rtap_t
       WHERE rtapent = g_enterprise AND
         rtap001 = ps_keys_bak[1] AND rtapseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtap_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="artm230.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000000
#+ 
#+ Filename...: artm230
#+ Description: 門店資源協議維護作業
#+ Creator....: 02003(2015-07-08 13:48:33)
#+ Modifier...: 02003(2015-07-10 17:06:06) -SD/PR-
]]>
  </section>
  <section id="artm230.detail_reproduce" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION artm230_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE rtap_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE artm230_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE artm230_detail AS ",
                "SELECT * FROM rtap_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO artm230_detail SELECT * FROM rtap_t 
                                         WHERE rtapent = g_enterprise AND rtap001 = g_rtao001_t
 
   
   #將key修正為調整後   
   UPDATE artm230_detail 
      #更新key欄位
      SET rtap001 = g_rtao_m.rtao001
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO rtap_t SELECT * FROM artm230_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artm230_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_rtao001_t = g_rtao_m.rtao001
 
   
END FUNCTION
]]>
  </section>
  <section id="artm230.detail_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION artm230_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="artm230.fetch" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION artm230_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_rtao_m.rtao001 = g_browser[g_current_idx].b_rtao001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE artm230_master_referesh USING g_rtao_m.rtao001 INTO g_rtao_m.rtaosite,g_rtao_m.rtao001,g_rtao_m.rtao002, 
       g_rtao_m.rtao003,g_rtao_m.rtao004,g_rtao_m.rtao005,g_rtao_m.rtao006,g_rtao_m.rtaounit,g_rtao_m.rtaostus, 
       g_rtao_m.rtaoownid,g_rtao_m.rtaoowndp,g_rtao_m.rtaocrtid,g_rtao_m.rtaocrtdp,g_rtao_m.rtaocrtdt, 
       g_rtao_m.rtaomodid,g_rtao_m.rtaomoddt,g_rtao_m.rtaocnfid,g_rtao_m.rtaocnfdt,g_rtao_m.rtaosite_desc, 
       g_rtao_m.rtao004_desc,g_rtao_m.rtao005_desc,g_rtao_m.rtaoownid_desc,g_rtao_m.rtaoowndp_desc,g_rtao_m.rtaocrtid_desc, 
       g_rtao_m.rtaocrtdp_desc,g_rtao_m.rtaomodid_desc,g_rtao_m.rtaocnfid_desc
   
   #遮罩相關處理
   LET g_rtao_m_mask_o.* =  g_rtao_m.*
   CALL artm230_rtao_t_mask()
   LET g_rtao_m_mask_n.* =  g_rtao_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artm230_set_act_visible()   
   CALL artm230_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_rtao_m_t.* = g_rtao_m.*
   LET g_rtao_m_o.* = g_rtao_m.*
   
   LET g_data_owner = g_rtao_m.rtaoownid      
   LET g_data_dept  = g_rtao_m.rtaoowndp
   
   #重新顯示   
   CALL artm230_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="artm230.fill_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION artm230_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="artm230.filter" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION artm230_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON rtaosite,rtao001,rtao003,rtao004,rtao005,rtao006
                          FROM s_browse[1].b_rtaosite,s_browse[1].b_rtao001,s_browse[1].b_rtao003,s_browse[1].b_rtao004, 
                              s_browse[1].b_rtao005,s_browse[1].b_rtao006
 
         BEFORE CONSTRUCT
               DISPLAY artm230_filter_parser('rtaosite') TO s_browse[1].b_rtaosite
            DISPLAY artm230_filter_parser('rtao001') TO s_browse[1].b_rtao001
            DISPLAY artm230_filter_parser('rtao003') TO s_browse[1].b_rtao003
            DISPLAY artm230_filter_parser('rtao004') TO s_browse[1].b_rtao004
            DISPLAY artm230_filter_parser('rtao005') TO s_browse[1].b_rtao005
            DISPLAY artm230_filter_parser('rtao006') TO s_browse[1].b_rtao006
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL artm230_filter_show('rtaosite')
   CALL artm230_filter_show('rtao001')
   CALL artm230_filter_show('rtao003')
   CALL artm230_filter_show('rtao004')
   CALL artm230_filter_show('rtao005')
   CALL artm230_filter_show('rtao006')
 
END FUNCTION
]]>
  </section>
  <section id="artm230.filter_parser" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION artm230_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="artm230.filter_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION artm230_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = artm230_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="artm230.global" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:39)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_rtao_m        RECORD
       rtaosite LIKE rtao_t.rtaosite, 
   rtaosite_desc LIKE type_t.chr80, 
   rtao001 LIKE rtao_t.rtao001, 
   rtao002 LIKE rtao_t.rtao002, 
   rtao003 LIKE rtao_t.rtao003, 
   rtao004 LIKE rtao_t.rtao004, 
   rtao004_desc LIKE type_t.chr80, 
   rtao005 LIKE rtao_t.rtao005, 
   rtao005_desc LIKE type_t.chr80, 
   rtao006 LIKE rtao_t.rtao006, 
   rtaounit LIKE rtao_t.rtaounit, 
   rtaostus LIKE rtao_t.rtaostus, 
   rtaoownid LIKE rtao_t.rtaoownid, 
   rtaoownid_desc LIKE type_t.chr80, 
   rtaoowndp LIKE rtao_t.rtaoowndp, 
   rtaoowndp_desc LIKE type_t.chr80, 
   rtaocrtid LIKE rtao_t.rtaocrtid, 
   rtaocrtid_desc LIKE type_t.chr80, 
   rtaocrtdp LIKE rtao_t.rtaocrtdp, 
   rtaocrtdp_desc LIKE type_t.chr80, 
   rtaocrtdt LIKE rtao_t.rtaocrtdt, 
   rtaomodid LIKE rtao_t.rtaomodid, 
   rtaomodid_desc LIKE type_t.chr80, 
   rtaomoddt LIKE rtao_t.rtaomoddt, 
   rtaocnfid LIKE rtao_t.rtaocnfid, 
   rtaocnfid_desc LIKE type_t.chr80, 
   rtaocnfdt LIKE rtao_t.rtaocnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_rtap_d        RECORD
       rtapseq LIKE rtap_t.rtapseq, 
   rtap002 LIKE rtap_t.rtap002, 
   rtap002_desc LIKE type_t.chr500, 
   rtap003 LIKE rtap_t.rtap003, 
   rtap004 LIKE rtap_t.rtap004, 
   rtap005 LIKE rtap_t.rtap005, 
   rtap006 LIKE rtap_t.rtap006, 
   rtap007 LIKE rtap_t.rtap007, 
   rtap007_desc LIKE type_t.chr500, 
   rtap008 LIKE rtap_t.rtap008, 
   rtap008_desc LIKE type_t.chr500, 
   rtap009 LIKE rtap_t.rtap009, 
   rtap009_desc LIKE type_t.chr500, 
   rtap010 LIKE rtap_t.rtap010, 
   rtap010_desc LIKE type_t.chr500, 
   rtap011 LIKE rtap_t.rtap011, 
   rtap011_desc LIKE type_t.chr500, 
   rtap012 LIKE rtap_t.rtap012, 
   rtap013 LIKE rtap_t.rtap013, 
   rtap014 LIKE rtap_t.rtap014, 
   rtap015 LIKE rtap_t.rtap015, 
   rtap016 LIKE rtap_t.rtap016, 
   rtap017 LIKE rtap_t.rtap017, 
   rtap018 LIKE rtap_t.rtap018, 
   rtap019 LIKE rtap_t.rtap019, 
   rtap020 LIKE rtap_t.rtap020, 
   rtap021 LIKE rtap_t.rtap021, 
   rtap022 LIKE rtap_t.rtap022, 
   rtap023 LIKE rtap_t.rtap023, 
   rtapcomp LIKE rtap_t.rtapcomp, 
   rtapsite LIKE rtap_t.rtapsite
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_rtaosite LIKE rtao_t.rtaosite,
   b_rtaosite_desc LIKE type_t.chr80,
      b_rtao001 LIKE rtao_t.rtao001,
      b_rtao003 LIKE rtao_t.rtao003,
      b_rtao004 LIKE rtao_t.rtao004,
   b_rtao004_desc LIKE type_t.chr80,
      b_rtao005 LIKE rtao_t.rtao005,
   b_rtao005_desc LIKE type_t.chr80,
      b_rtao006 LIKE rtao_t.rtao006
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_rtao_m          type_g_rtao_m
DEFINE g_rtao_m_t        type_g_rtao_m
DEFINE g_rtao_m_o        type_g_rtao_m
DEFINE g_rtao_m_mask_o   type_g_rtao_m #轉換遮罩前資料
DEFINE g_rtao_m_mask_n   type_g_rtao_m #轉換遮罩後資料
 
   DEFINE g_rtao001_t LIKE rtao_t.rtao001
 
 
DEFINE g_rtap_d          DYNAMIC ARRAY OF type_g_rtap_d
DEFINE g_rtap_d_t        type_g_rtap_d
DEFINE g_rtap_d_o        type_g_rtap_d
DEFINE g_rtap_d_mask_o   DYNAMIC ARRAY OF type_g_rtap_d #轉換遮罩前資料
DEFINE g_rtap_d_mask_n   DYNAMIC ARRAY OF type_g_rtap_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="artm230.idx_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION artm230_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_rtap_d.getLength() THEN
         LET g_detail_idx = g_rtap_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtap_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtap_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="artm230.init" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION artm230_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('rtaostus','13','N,X,Y')
 
      CALL cl_set_combo_scc('rtap014','6006') 
   CALL cl_set_combo_scc('rtap015','6842') 
   CALL cl_set_combo_scc('rtap020','6841') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL artm230_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="artm230.input" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION artm230_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtao_m.rtaosite,g_rtao_m.rtaosite_desc,g_rtao_m.rtao001,g_rtao_m.rtao002,g_rtao_m.rtao003, 
       g_rtao_m.rtao004,g_rtao_m.rtao004_desc,g_rtao_m.rtao005,g_rtao_m.rtao005_desc,g_rtao_m.rtao006, 
       g_rtao_m.rtaounit,g_rtao_m.rtaostus,g_rtao_m.rtaoownid,g_rtao_m.rtaoownid_desc,g_rtao_m.rtaoowndp, 
       g_rtao_m.rtaoowndp_desc,g_rtao_m.rtaocrtid,g_rtao_m.rtaocrtid_desc,g_rtao_m.rtaocrtdp,g_rtao_m.rtaocrtdp_desc, 
       g_rtao_m.rtaocrtdt,g_rtao_m.rtaomodid,g_rtao_m.rtaomodid_desc,g_rtao_m.rtaomoddt,g_rtao_m.rtaocnfid, 
       g_rtao_m.rtaocnfid_desc,g_rtao_m.rtaocnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT rtapseq,rtap002,rtap003,rtap004,rtap005,rtap006,rtap007,rtap008,rtap009, 
       rtap010,rtap011,rtap012,rtap013,rtap014,rtap015,rtap016,rtap017,rtap018,rtap019,rtap020,rtap021, 
       rtap022,rtap023,rtapcomp,rtapsite FROM rtap_t WHERE rtapent=? AND rtap001=? AND rtapseq=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artm230_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL artm230_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL artm230_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_rtao_m.rtao001,g_rtao_m.rtao002,g_rtao_m.rtao003,g_rtao_m.rtao006,g_rtao_m.rtaounit, 
       g_rtao_m.rtaostus
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="artm230.input.body" ver="1" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_rtap_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtap_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artm230_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_rtap_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artm230_cl USING g_enterprise,g_rtao_m.rtao001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artm230_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE artm230_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_rtap_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtap_d[l_ac].rtapseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_rtap_d_t.* = g_rtap_d[l_ac].*  #BACKUP
               LET g_rtap_d_o.* = g_rtap_d[l_ac].*  #BACKUP
               CALL artm230_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL artm230_set_no_entry_b(l_cmd)
               IF NOT artm230_lock_b("rtap_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artm230_bcl INTO g_rtap_d[l_ac].rtapseq,g_rtap_d[l_ac].rtap002,g_rtap_d[l_ac].rtap003, 
                      g_rtap_d[l_ac].rtap004,g_rtap_d[l_ac].rtap005,g_rtap_d[l_ac].rtap006,g_rtap_d[l_ac].rtap007, 
                      g_rtap_d[l_ac].rtap008,g_rtap_d[l_ac].rtap009,g_rtap_d[l_ac].rtap010,g_rtap_d[l_ac].rtap011, 
                      g_rtap_d[l_ac].rtap012,g_rtap_d[l_ac].rtap013,g_rtap_d[l_ac].rtap014,g_rtap_d[l_ac].rtap015, 
                      g_rtap_d[l_ac].rtap016,g_rtap_d[l_ac].rtap017,g_rtap_d[l_ac].rtap018,g_rtap_d[l_ac].rtap019, 
                      g_rtap_d[l_ac].rtap020,g_rtap_d[l_ac].rtap021,g_rtap_d[l_ac].rtap022,g_rtap_d[l_ac].rtap023, 
                      g_rtap_d[l_ac].rtapcomp,g_rtap_d[l_ac].rtapsite
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_rtap_d_t.rtapseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rtap_d_mask_o[l_ac].* =  g_rtap_d[l_ac].*
                  CALL artm230_rtap_t_mask()
                  LET g_rtap_d_mask_n[l_ac].* =  g_rtap_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL artm230_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtap_d[l_ac].* TO NULL 
            INITIALIZE g_rtap_d_t.* TO NULL 
            INITIALIZE g_rtap_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_rtap_d[l_ac].rtap006 = "0"
      LET g_rtap_d[l_ac].rtap012 = "N"
      LET g_rtap_d[l_ac].rtap013 = "N"
      LET g_rtap_d[l_ac].rtap014 = "2"
      LET g_rtap_d[l_ac].rtap015 = "1"
      LET g_rtap_d[l_ac].rtap016 = "0"
      LET g_rtap_d[l_ac].rtap017 = "0"
      LET g_rtap_d[l_ac].rtap018 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_rtap_d_t.* = g_rtap_d[l_ac].*     #新輸入資料
            LET g_rtap_d_o.* = g_rtap_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artm230_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL artm230_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtap_d[li_reproduce_target].* = g_rtap_d[li_reproduce].*
 
               LET g_rtap_d[li_reproduce_target].rtapseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM rtap_t 
             WHERE rtapent = g_enterprise AND rtap001 = g_rtao_m.rtao001
 
               AND rtapseq = g_rtap_d[l_ac].rtapseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtao_m.rtao001
               LET gs_keys[2] = g_rtap_d[g_detail_idx].rtapseq
               CALL artm230_insert_b('rtap_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_rtap_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtap_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artm230_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtao_m.rtao001
 
               LET gs_keys[gs_keys.getLength()+1] = g_rtap_d_t.rtapseq
 
            
               #刪除同層單身
               IF NOT artm230_delete_b('rtap_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artm230_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT artm230_key_delete_b(gs_keys,'rtap_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artm230_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE artm230_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_rtap_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rtap_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtapseq
            #add-point:BEFORE FIELD rtapseq
            {<point name="input.b.page1.rtapseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtapseq
            
            #add-point:AFTER FIELD rtapseq
            {<point name="input.a.page1.rtapseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtapseq
            #add-point:ON CHANGE rtapseq
            {<point name="input.g.page1.rtapseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap002
            #add-point:BEFORE FIELD rtap002
            {<point name="input.b.page1.rtap002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap002
            
            #add-point:AFTER FIELD rtap002
            {<point name="input.a.page1.rtap002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap002
            #add-point:ON CHANGE rtap002
            {<point name="input.g.page1.rtap002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap003
            #add-point:BEFORE FIELD rtap003
            {<point name="input.b.page1.rtap003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap003
            
            #add-point:AFTER FIELD rtap003
            {<point name="input.a.page1.rtap003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap003
            #add-point:ON CHANGE rtap003
            {<point name="input.g.page1.rtap003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap004
            #add-point:BEFORE FIELD rtap004
            {<point name="input.b.page1.rtap004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap004
            
            #add-point:AFTER FIELD rtap004
            {<point name="input.a.page1.rtap004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap004
            #add-point:ON CHANGE rtap004
            {<point name="input.g.page1.rtap004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap005
            #add-point:BEFORE FIELD rtap005
            {<point name="input.b.page1.rtap005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap005
            
            #add-point:AFTER FIELD rtap005
            {<point name="input.a.page1.rtap005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap005
            #add-point:ON CHANGE rtap005
            {<point name="input.g.page1.rtap005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap006
            #add-point:BEFORE FIELD rtap006
            {<point name="input.b.page1.rtap006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap006
            
            #add-point:AFTER FIELD rtap006
            {<point name="input.a.page1.rtap006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap006
            #add-point:ON CHANGE rtap006
            {<point name="input.g.page1.rtap006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap007
            #add-point:BEFORE FIELD rtap007
            {<point name="input.b.page1.rtap007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap007
            
            #add-point:AFTER FIELD rtap007
            {<point name="input.a.page1.rtap007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap007
            #add-point:ON CHANGE rtap007
            {<point name="input.g.page1.rtap007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap008
            #add-point:BEFORE FIELD rtap008
            {<point name="input.b.page1.rtap008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap008
            
            #add-point:AFTER FIELD rtap008
            {<point name="input.a.page1.rtap008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap008
            #add-point:ON CHANGE rtap008
            {<point name="input.g.page1.rtap008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap009
            #add-point:BEFORE FIELD rtap009
            {<point name="input.b.page1.rtap009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap009
            
            #add-point:AFTER FIELD rtap009
            {<point name="input.a.page1.rtap009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap009
            #add-point:ON CHANGE rtap009
            {<point name="input.g.page1.rtap009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap010
            #add-point:BEFORE FIELD rtap010
            {<point name="input.b.page1.rtap010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap010
            
            #add-point:AFTER FIELD rtap010
            {<point name="input.a.page1.rtap010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap010
            #add-point:ON CHANGE rtap010
            {<point name="input.g.page1.rtap010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap011
            #add-point:BEFORE FIELD rtap011
            {<point name="input.b.page1.rtap011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap011
            
            #add-point:AFTER FIELD rtap011
            {<point name="input.a.page1.rtap011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap011
            #add-point:ON CHANGE rtap011
            {<point name="input.g.page1.rtap011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap012
            #add-point:BEFORE FIELD rtap012
            {<point name="input.b.page1.rtap012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap012
            
            #add-point:AFTER FIELD rtap012
            {<point name="input.a.page1.rtap012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap012
            #add-point:ON CHANGE rtap012
            {<point name="input.g.page1.rtap012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap013
            #add-point:BEFORE FIELD rtap013
            {<point name="input.b.page1.rtap013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap013
            
            #add-point:AFTER FIELD rtap013
            {<point name="input.a.page1.rtap013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap013
            #add-point:ON CHANGE rtap013
            {<point name="input.g.page1.rtap013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap014
            #add-point:BEFORE FIELD rtap014
            {<point name="input.b.page1.rtap014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap014
            
            #add-point:AFTER FIELD rtap014
            {<point name="input.a.page1.rtap014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap014
            #add-point:ON CHANGE rtap014
            {<point name="input.g.page1.rtap014" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap015
            #add-point:BEFORE FIELD rtap015
            {<point name="input.b.page1.rtap015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap015
            
            #add-point:AFTER FIELD rtap015
            {<point name="input.a.page1.rtap015" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap015
            #add-point:ON CHANGE rtap015
            {<point name="input.g.page1.rtap015" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap016
            #add-point:BEFORE FIELD rtap016
            {<point name="input.b.page1.rtap016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap016
            
            #add-point:AFTER FIELD rtap016
            {<point name="input.a.page1.rtap016" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap016
            #add-point:ON CHANGE rtap016
            {<point name="input.g.page1.rtap016" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap017
            #add-point:BEFORE FIELD rtap017
            {<point name="input.b.page1.rtap017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap017
            
            #add-point:AFTER FIELD rtap017
            {<point name="input.a.page1.rtap017" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap017
            #add-point:ON CHANGE rtap017
            {<point name="input.g.page1.rtap017" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap018
            #add-point:BEFORE FIELD rtap018
            {<point name="input.b.page1.rtap018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap018
            
            #add-point:AFTER FIELD rtap018
            {<point name="input.a.page1.rtap018" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap018
            #add-point:ON CHANGE rtap018
            {<point name="input.g.page1.rtap018" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap019
            #add-point:BEFORE FIELD rtap019
            {<point name="input.b.page1.rtap019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap019
            
            #add-point:AFTER FIELD rtap019
            {<point name="input.a.page1.rtap019" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap019
            #add-point:ON CHANGE rtap019
            {<point name="input.g.page1.rtap019" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap020
            #add-point:BEFORE FIELD rtap020
            {<point name="input.b.page1.rtap020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap020
            
            #add-point:AFTER FIELD rtap020
            {<point name="input.a.page1.rtap020" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap020
            #add-point:ON CHANGE rtap020
            {<point name="input.g.page1.rtap020" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap021
            #add-point:BEFORE FIELD rtap021
            {<point name="input.b.page1.rtap021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap021
            
            #add-point:AFTER FIELD rtap021
            {<point name="input.a.page1.rtap021" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap021
            #add-point:ON CHANGE rtap021
            {<point name="input.g.page1.rtap021" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap022
            #add-point:BEFORE FIELD rtap022
            {<point name="input.b.page1.rtap022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap022
            
            #add-point:AFTER FIELD rtap022
            {<point name="input.a.page1.rtap022" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap022
            #add-point:ON CHANGE rtap022
            {<point name="input.g.page1.rtap022" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtap023
            #add-point:BEFORE FIELD rtap023
            {<point name="input.b.page1.rtap023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtap023
            
            #add-point:AFTER FIELD rtap023
            {<point name="input.a.page1.rtap023" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtap023
            #add-point:ON CHANGE rtap023
            {<point name="input.g.page1.rtap023" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtapcomp
            #add-point:BEFORE FIELD rtapcomp
            {<point name="input.b.page1.rtapcomp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtapcomp
            
            #add-point:AFTER FIELD rtapcomp
            {<point name="input.a.page1.rtapcomp" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtapcomp
            #add-point:ON CHANGE rtapcomp
            {<point name="input.g.page1.rtapcomp" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtapsite
            #add-point:BEFORE FIELD rtapsite
            {<point name="input.b.page1.rtapsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtapsite
            
            #add-point:AFTER FIELD rtapsite
            {<point name="input.a.page1.rtapsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtapsite
            #add-point:ON CHANGE rtapsite
            {<point name="input.g.page1.rtapsite" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.rtapseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtapseq
            #add-point:ON ACTION controlp INFIELD rtapseq
            {<point name="input.c.page1.rtapseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap002
            #add-point:ON ACTION controlp INFIELD rtap002
            {<point name="input.c.page1.rtap002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap003
            #add-point:ON ACTION controlp INFIELD rtap003
            {<point name="input.c.page1.rtap003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap004
            #add-point:ON ACTION controlp INFIELD rtap004
            {<point name="input.c.page1.rtap004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap005
            #add-point:ON ACTION controlp INFIELD rtap005
            {<point name="input.c.page1.rtap005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap006
            #add-point:ON ACTION controlp INFIELD rtap006
            {<point name="input.c.page1.rtap006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap007
            #add-point:ON ACTION controlp INFIELD rtap007
            {<point name="input.c.page1.rtap007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap008
            #add-point:ON ACTION controlp INFIELD rtap008
            {<point name="input.c.page1.rtap008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap009
            #add-point:ON ACTION controlp INFIELD rtap009
            {<point name="input.c.page1.rtap009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap010
            #add-point:ON ACTION controlp INFIELD rtap010
            {<point name="input.c.page1.rtap010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap011
            #add-point:ON ACTION controlp INFIELD rtap011
            {<point name="input.c.page1.rtap011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap012
            #add-point:ON ACTION controlp INFIELD rtap012
            {<point name="input.c.page1.rtap012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap013
            #add-point:ON ACTION controlp INFIELD rtap013
            {<point name="input.c.page1.rtap013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap014
            #add-point:ON ACTION controlp INFIELD rtap014
            {<point name="input.c.page1.rtap014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap015
            #add-point:ON ACTION controlp INFIELD rtap015
            {<point name="input.c.page1.rtap015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap016
            #add-point:ON ACTION controlp INFIELD rtap016
            {<point name="input.c.page1.rtap016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap017
            #add-point:ON ACTION controlp INFIELD rtap017
            {<point name="input.c.page1.rtap017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap018
            #add-point:ON ACTION controlp INFIELD rtap018
            {<point name="input.c.page1.rtap018" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap019
            #add-point:ON ACTION controlp INFIELD rtap019
            {<point name="input.c.page1.rtap019" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap020
            #add-point:ON ACTION controlp INFIELD rtap020
            {<point name="input.c.page1.rtap020" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap021
            #add-point:ON ACTION controlp INFIELD rtap021
            {<point name="input.c.page1.rtap021" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap022
            #add-point:ON ACTION controlp INFIELD rtap022
            {<point name="input.c.page1.rtap022" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtap023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtap023
            #add-point:ON ACTION controlp INFIELD rtap023
            {<point name="input.c.page1.rtap023" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtapcomp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtapcomp
            #add-point:ON ACTION controlp INFIELD rtapcomp
            {<point name="input.c.page1.rtapcomp" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rtapsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtapsite
            #add-point:ON ACTION controlp INFIELD rtapsite
            {<point name="input.c.page1.rtapsite" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_rtap_d[l_ac].* = g_rtap_d_t.*
               CLOSE artm230_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_rtap_d[l_ac].rtapseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_rtap_d[l_ac].* = g_rtap_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL artm230_rtap_t_mask_restore('restore_mask_o')
      
               UPDATE rtap_t SET (rtap001,rtapseq,rtap002,rtap003,rtap004,rtap005,rtap006,rtap007,rtap008, 
                   rtap009,rtap010,rtap011,rtap012,rtap013,rtap014,rtap015,rtap016,rtap017,rtap018,rtap019, 
                   rtap020,rtap021,rtap022,rtap023,rtapcomp,rtapsite) = (g_rtao_m.rtao001,g_rtap_d[l_ac].rtapseq, 
                   g_rtap_d[l_ac].rtap002,g_rtap_d[l_ac].rtap003,g_rtap_d[l_ac].rtap004,g_rtap_d[l_ac].rtap005, 
                   g_rtap_d[l_ac].rtap006,g_rtap_d[l_ac].rtap007,g_rtap_d[l_ac].rtap008,g_rtap_d[l_ac].rtap009, 
                   g_rtap_d[l_ac].rtap010,g_rtap_d[l_ac].rtap011,g_rtap_d[l_ac].rtap012,g_rtap_d[l_ac].rtap013, 
                   g_rtap_d[l_ac].rtap014,g_rtap_d[l_ac].rtap015,g_rtap_d[l_ac].rtap016,g_rtap_d[l_ac].rtap017, 
                   g_rtap_d[l_ac].rtap018,g_rtap_d[l_ac].rtap019,g_rtap_d[l_ac].rtap020,g_rtap_d[l_ac].rtap021, 
                   g_rtap_d[l_ac].rtap022,g_rtap_d[l_ac].rtap023,g_rtap_d[l_ac].rtapcomp,g_rtap_d[l_ac].rtapsite) 

                WHERE rtapent = g_enterprise AND rtap001 = g_rtao_m.rtao001 
 
                  AND rtapseq = g_rtap_d_t.rtapseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtap_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_rtap_d[l_ac].* = g_rtap_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtap_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_rtap_d[l_ac].* = g_rtap_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtao_m.rtao001
               LET gs_keys_bak[1] = g_rtao001_t
               LET gs_keys[2] = g_rtap_d[g_detail_idx].rtapseq
               LET gs_keys_bak[2] = g_rtap_d_t.rtapseq
               CALL artm230_update_b('rtap_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL artm230_rtap_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_rtap_d[g_detail_idx].rtapseq = g_rtap_d_t.rtapseq 
 
                  ) THEN
                  LET gs_keys[01] = g_rtao_m.rtao001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_rtap_d_t.rtapseq
 
                  CALL artm230_key_update_b(gs_keys,'rtap_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtao_m),util.JSON.stringify(g_rtap_d_t)
               LET g_log2 = util.JSON.stringify(g_rtao_m),util.JSON.stringify(g_rtap_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL artm230_unlock_b("rtap_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_rtap_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_rtap_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
]]>
  </section>
  <section id="artm230.input.head" ver="1" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_rtao_m.rtao001,g_rtao_m.rtao002,g_rtao_m.rtao003,g_rtao_m.rtao006,g_rtao_m.rtaounit, 
          g_rtao_m.rtaostus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN artm230_cl USING g_enterprise,g_rtao_m.rtao001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artm230_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE artm230_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL artm230_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL artm230_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtao001
            #add-point:BEFORE FIELD rtao001
            {<point name="input.b.rtao001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtao001
            
            #add-point:AFTER FIELD rtao001
            {<point name="input.a.rtao001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtao001
            #add-point:ON CHANGE rtao001
            {<point name="input.g.rtao001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtao002
            #add-point:BEFORE FIELD rtao002
            {<point name="input.b.rtao002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtao002
            
            #add-point:AFTER FIELD rtao002
            {<point name="input.a.rtao002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtao002
            #add-point:ON CHANGE rtao002
            {<point name="input.g.rtao002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtao003
            #add-point:BEFORE FIELD rtao003
            {<point name="input.b.rtao003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtao003
            
            #add-point:AFTER FIELD rtao003
            {<point name="input.a.rtao003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtao003
            #add-point:ON CHANGE rtao003
            {<point name="input.g.rtao003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtao006
            #add-point:BEFORE FIELD rtao006
            {<point name="input.b.rtao006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtao006
            
            #add-point:AFTER FIELD rtao006
            {<point name="input.a.rtao006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtao006
            #add-point:ON CHANGE rtao006
            {<point name="input.g.rtao006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaounit
            #add-point:BEFORE FIELD rtaounit
            {<point name="input.b.rtaounit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaounit
            
            #add-point:AFTER FIELD rtaounit
            {<point name="input.a.rtaounit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtaounit
            #add-point:ON CHANGE rtaounit
            {<point name="input.g.rtaounit" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rtaostus
            #add-point:BEFORE FIELD rtaostus
            {<point name="input.b.rtaostus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rtaostus
            
            #add-point:AFTER FIELD rtaostus
            {<point name="input.a.rtaostus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rtaostus
            #add-point:ON CHANGE rtaostus
            {<point name="input.g.rtaostus" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.rtao001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtao001
            #add-point:ON ACTION controlp INFIELD rtao001
            {<point name="input.c.rtao001" />}
            #END add-point
 
         #Ctrlp:input.c.rtao002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtao002
            #add-point:ON ACTION controlp INFIELD rtao002
            {<point name="input.c.rtao002" />}
            #END add-point
 
         #Ctrlp:input.c.rtao003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtao003
            #add-point:ON ACTION controlp INFIELD rtao003
            {<point name="input.c.rtao003" />}
            #END add-point
 
         #Ctrlp:input.c.rtao006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtao006
            #add-point:ON ACTION controlp INFIELD rtao006
            {<point name="input.c.rtao006" />}
            #END add-point
 
         #Ctrlp:input.c.rtaounit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaounit
            #add-point:ON ACTION controlp INFIELD rtaounit
            {<point name="input.c.rtaounit" />}
            #END add-point
 
         #Ctrlp:input.c.rtaostus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rtaostus
            #add-point:ON ACTION controlp INFIELD rtaostus
            {<point name="input.c.rtaostus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_rtao_m.rtao001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO rtao_t (rtaoent,rtaosite,rtao001,rtao002,rtao003,rtao004,rtao005,rtao006, 
                   rtaounit,rtaostus,rtaoownid,rtaoowndp,rtaocrtid,rtaocrtdp,rtaocrtdt,rtaomodid,rtaomoddt, 
                   rtaocnfid,rtaocnfdt)
               VALUES (g_enterprise,g_rtao_m.rtaosite,g_rtao_m.rtao001,g_rtao_m.rtao002,g_rtao_m.rtao003, 
                   g_rtao_m.rtao004,g_rtao_m.rtao005,g_rtao_m.rtao006,g_rtao_m.rtaounit,g_rtao_m.rtaostus, 
                   g_rtao_m.rtaoownid,g_rtao_m.rtaoowndp,g_rtao_m.rtaocrtid,g_rtao_m.rtaocrtdp,g_rtao_m.rtaocrtdt, 
                   g_rtao_m.rtaomodid,g_rtao_m.rtaomoddt,g_rtao_m.rtaocnfid,g_rtao_m.rtaocnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_rtao_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL artm230_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL artm230_b_fill()
                  CALL artm230_b_fill2('0')
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL artm230_rtao_t_mask_restore('restore_mask_o')
               
               UPDATE rtao_t SET (rtaosite,rtao001,rtao002,rtao003,rtao004,rtao005,rtao006,rtaounit, 
                   rtaostus,rtaoownid,rtaoowndp,rtaocrtid,rtaocrtdp,rtaocrtdt,rtaomodid,rtaomoddt,rtaocnfid, 
                   rtaocnfdt) = (g_rtao_m.rtaosite,g_rtao_m.rtao001,g_rtao_m.rtao002,g_rtao_m.rtao003, 
                   g_rtao_m.rtao004,g_rtao_m.rtao005,g_rtao_m.rtao006,g_rtao_m.rtaounit,g_rtao_m.rtaostus, 
                   g_rtao_m.rtaoownid,g_rtao_m.rtaoowndp,g_rtao_m.rtaocrtid,g_rtao_m.rtaocrtdp,g_rtao_m.rtaocrtdt, 
                   g_rtao_m.rtaomodid,g_rtao_m.rtaomoddt,g_rtao_m.rtaocnfid,g_rtao_m.rtaocnfdt)
                WHERE rtaoent = g_enterprise AND rtao001 = g_rtao001_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "rtao_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL artm230_rtao_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_rtao_m_t)
               LET g_log2 = util.JSON.stringify(g_rtao_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_rtao001_t = g_rtao_m.rtao001
 
            
      END INPUT
   
]]>
  </section>
  <section id="artm230.input.other" ver="1" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD rtao001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD rtapseq
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="artm230.insert" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION artm230_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_rtap_d.clear()   
 
 
   INITIALIZE g_rtao_m.* LIKE rtao_t.*             #DEFAULT 設定
   
   LET g_rtao001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_rtao_m.rtaoownid = g_user
      LET g_rtao_m.rtaoowndp = g_dept
      LET g_rtao_m.rtaocrtid = g_user
      LET g_rtao_m.rtaocrtdp = g_dept 
      LET g_rtao_m.rtaocrtdt = cl_get_current()
      LET g_rtao_m.rtaomodid = g_user
      LET g_rtao_m.rtaomoddt = cl_get_current()
      LET g_rtao_m.rtaostus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_rtao_m_t.* = g_rtao_m.*
      LET g_rtao_m_o.* = g_rtao_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_rtao_m.rtaostus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
 
 
    
      CALL artm230_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_rtao_m.* TO NULL
         INITIALIZE g_rtap_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL artm230_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_rtap_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artm230_set_act_visible()   
   CALL artm230_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtao001_t = g_rtao_m.rtao001
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtaoent = '" ||g_enterprise|| "' AND",
                      " rtao001 = '", g_rtao_m.rtao001, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artm230_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE artm230_cl
   
   CALL artm230_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE artm230_master_referesh USING g_rtao_m.rtao001 INTO g_rtao_m.rtaosite,g_rtao_m.rtao001,g_rtao_m.rtao002, 
       g_rtao_m.rtao003,g_rtao_m.rtao004,g_rtao_m.rtao005,g_rtao_m.rtao006,g_rtao_m.rtaounit,g_rtao_m.rtaostus, 
       g_rtao_m.rtaoownid,g_rtao_m.rtaoowndp,g_rtao_m.rtaocrtid,g_rtao_m.rtaocrtdp,g_rtao_m.rtaocrtdt, 
       g_rtao_m.rtaomodid,g_rtao_m.rtaomoddt,g_rtao_m.rtaocnfid,g_rtao_m.rtaocnfdt,g_rtao_m.rtaosite_desc, 
       g_rtao_m.rtao004_desc,g_rtao_m.rtao005_desc,g_rtao_m.rtaoownid_desc,g_rtao_m.rtaoowndp_desc,g_rtao_m.rtaocrtid_desc, 
       g_rtao_m.rtaocrtdp_desc,g_rtao_m.rtaomodid_desc,g_rtao_m.rtaocnfid_desc
   
   #遮罩相關處理
   LET g_rtao_m_mask_o.* =  g_rtao_m.*
   CALL artm230_rtao_t_mask()
   LET g_rtao_m_mask_n.* =  g_rtao_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtao_m.rtaosite,g_rtao_m.rtaosite_desc,g_rtao_m.rtao001,g_rtao_m.rtao002,g_rtao_m.rtao003, 
       g_rtao_m.rtao004,g_rtao_m.rtao004_desc,g_rtao_m.rtao005,g_rtao_m.rtao005_desc,g_rtao_m.rtao006, 
       g_rtao_m.rtaounit,g_rtao_m.rtaostus,g_rtao_m.rtaoownid,g_rtao_m.rtaoownid_desc,g_rtao_m.rtaoowndp, 
       g_rtao_m.rtaoowndp_desc,g_rtao_m.rtaocrtid,g_rtao_m.rtaocrtid_desc,g_rtao_m.rtaocrtdp,g_rtao_m.rtaocrtdp_desc, 
       g_rtao_m.rtaocrtdt,g_rtao_m.rtaomodid,g_rtao_m.rtaomodid_desc,g_rtao_m.rtaomoddt,g_rtao_m.rtaocnfid, 
       g_rtao_m.rtaocnfid_desc,g_rtao_m.rtaocnfdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL artm230_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="artm230.insert_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION artm230_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO rtap_t
                  (rtapent,
                   rtap001,
                   rtapseq
                   ,rtap002,rtap003,rtap004,rtap005,rtap006,rtap007,rtap008,rtap009,rtap010,rtap011,rtap012,rtap013,rtap014,rtap015,rtap016,rtap017,rtap018,rtap019,rtap020,rtap021,rtap022,rtap023,rtapcomp,rtapsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtap_d[g_detail_idx].rtap002,g_rtap_d[g_detail_idx].rtap003,g_rtap_d[g_detail_idx].rtap004, 
                       g_rtap_d[g_detail_idx].rtap005,g_rtap_d[g_detail_idx].rtap006,g_rtap_d[g_detail_idx].rtap007, 
                       g_rtap_d[g_detail_idx].rtap008,g_rtap_d[g_detail_idx].rtap009,g_rtap_d[g_detail_idx].rtap010, 
                       g_rtap_d[g_detail_idx].rtap011,g_rtap_d[g_detail_idx].rtap012,g_rtap_d[g_detail_idx].rtap013, 
                       g_rtap_d[g_detail_idx].rtap014,g_rtap_d[g_detail_idx].rtap015,g_rtap_d[g_detail_idx].rtap016, 
                       g_rtap_d[g_detail_idx].rtap017,g_rtap_d[g_detail_idx].rtap018,g_rtap_d[g_detail_idx].rtap019, 
                       g_rtap_d[g_detail_idx].rtap020,g_rtap_d[g_detail_idx].rtap021,g_rtap_d[g_detail_idx].rtap022, 
                       g_rtap_d[g_detail_idx].rtap023,g_rtap_d[g_detail_idx].rtapcomp,g_rtap_d[g_detail_idx].rtapsite) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtap_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtap_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="artm230.key_delete_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION artm230_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="artm230.key_update_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION artm230_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="artm230.lock_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION artm230_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL artm230_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "rtap_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN artm230_bcl USING g_enterprise,
                                       g_rtao_m.rtao001,g_rtap_d[g_detail_idx].rtapseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artm230_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="artm230.main" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT rtaosite,'',rtao001,rtao002,rtao003,rtao004,'',rtao005,'',rtao006,rtaounit, 
       rtaostus,rtaoownid,'',rtaoowndp,'',rtaocrtid,'',rtaocrtdp,'',rtaocrtdt,rtaomodid,'',rtaomoddt, 
       rtaocnfid,'',rtaocnfdt", 
                      " FROM rtao_t",
                      " WHERE rtaoent= ? AND rtao001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artm230_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.rtaosite,t0.rtao001,t0.rtao002,t0.rtao003,t0.rtao004,t0.rtao005,t0.rtao006, 
       t0.rtaounit,t0.rtaostus,t0.rtaoownid,t0.rtaoowndp,t0.rtaocrtid,t0.rtaocrtdp,t0.rtaocrtdt,t0.rtaomodid, 
       t0.rtaomoddt,t0.rtaocnfid,t0.rtaocnfdt,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 , 
       t6.ooag011 ,t7.ooefl003 ,t8.ooag011 ,t9.ooag011",
               " FROM rtao_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.rtaosite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.rtao004  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.rtao005 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=t0.rtaoownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=t0.rtaoowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=t0.rtaocrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=t0.rtaocrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=t0.rtaomodid  ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent='"||g_enterprise||"' AND t9.ooag001=t0.rtaocnfid  ",
 
               " WHERE t0.rtaoent = '" ||g_enterprise|| "' AND t0.rtao001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE artm230_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_artm230 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL artm230_init()   
 
      #進入選單 Menu (="N")
      CALL artm230_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_artm230
      
   END IF 
   
   CLOSE artm230_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="artm230.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/art/artm230_mask.4gl"
]]>
  </section>
  <section id="artm230.modify" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION artm230_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_rtao_m_t.* = g_rtao_m.*
   LET g_rtao_m_o.* = g_rtao_m.*
   
   IF g_rtao_m.rtao001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_rtao001_t = g_rtao_m.rtao001
 
   CALL s_transaction_begin()
   
   OPEN artm230_cl USING g_enterprise,g_rtao_m.rtao001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artm230_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE artm230_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artm230_master_referesh USING g_rtao_m.rtao001 INTO g_rtao_m.rtaosite,g_rtao_m.rtao001,g_rtao_m.rtao002, 
       g_rtao_m.rtao003,g_rtao_m.rtao004,g_rtao_m.rtao005,g_rtao_m.rtao006,g_rtao_m.rtaounit,g_rtao_m.rtaostus, 
       g_rtao_m.rtaoownid,g_rtao_m.rtaoowndp,g_rtao_m.rtaocrtid,g_rtao_m.rtaocrtdp,g_rtao_m.rtaocrtdt, 
       g_rtao_m.rtaomodid,g_rtao_m.rtaomoddt,g_rtao_m.rtaocnfid,g_rtao_m.rtaocnfdt,g_rtao_m.rtaosite_desc, 
       g_rtao_m.rtao004_desc,g_rtao_m.rtao005_desc,g_rtao_m.rtaoownid_desc,g_rtao_m.rtaoowndp_desc,g_rtao_m.rtaocrtid_desc, 
       g_rtao_m.rtaocrtdp_desc,g_rtao_m.rtaomodid_desc,g_rtao_m.rtaocnfid_desc
   
   #檢查是否允許此動作
   IF NOT artm230_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtao_m_mask_o.* =  g_rtao_m.*
   CALL artm230_rtao_t_mask()
   LET g_rtao_m_mask_n.* =  g_rtao_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL artm230_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_rtao001_t = g_rtao_m.rtao001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_rtao_m.rtaomodid = g_user 
LET g_rtao_m.rtaomoddt = cl_get_current()
LET g_rtao_m.rtaomodid_desc = cl_get_username(g_rtao_m.rtaomodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL artm230_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE rtao_t SET (rtaomodid,rtaomoddt) = (g_rtao_m.rtaomodid,g_rtao_m.rtaomoddt)
          WHERE rtaoent = g_enterprise AND rtao001 = g_rtao001_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_rtao_m.* = g_rtao_m_t.*
         CALL artm230_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_rtao_m.rtao001 != g_rtao001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE rtap_t SET rtap001 = g_rtao_m.rtao001
 
          WHERE rtapent = g_enterprise AND rtap001 = g_rtao001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtap_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtap_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artm230_set_act_visible()   
   CALL artm230_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " rtaoent = '" ||g_enterprise|| "' AND",
                      " rtao001 = '", g_rtao_m.rtao001, "' "
 
   #填到對應位置
   CALL artm230_browser_fill("")
 
   CLOSE artm230_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artm230_msgcentre_notify('modify')
 
END FUNCTION   
]]>
  </section>
  <section id="artm230.msgcentre_notify" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION artm230_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL artm230_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_rtao_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="artm230.other_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="artm230.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="artm230.query" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION artm230_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_rtap_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL artm230_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL artm230_browser_fill("")
      CALL artm230_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL artm230_filter_show('rtaosite')
   CALL artm230_filter_show('rtao001')
   CALL artm230_filter_show('rtao003')
   CALL artm230_filter_show('rtao004')
   CALL artm230_filter_show('rtao005')
   CALL artm230_filter_show('rtao006')
   CALL artm230_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL artm230_fetch("F") 
      #顯示單身筆數
      CALL artm230_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="artm230.reproduce" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION artm230_reproduce()
   DEFINE l_newno     LIKE rtao_t.rtao001 
   DEFINE l_oldno     LIKE rtao_t.rtao001 
 
   DEFINE l_master    RECORD LIKE rtao_t.*
   DEFINE l_detail    RECORD LIKE rtap_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_rtao_m.rtao001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_rtao001_t = g_rtao_m.rtao001
 
    
   LET g_rtao_m.rtao001 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_rtao_m.rtaoownid = g_user
      LET g_rtao_m.rtaoowndp = g_dept
      LET g_rtao_m.rtaocrtid = g_user
      LET g_rtao_m.rtaocrtdp = g_dept 
      LET g_rtao_m.rtaocrtdt = cl_get_current()
      LET g_rtao_m.rtaomodid = g_user
      LET g_rtao_m.rtaomoddt = cl_get_current()
      LET g_rtao_m.rtaostus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_rtao_m.rtaostus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL artm230_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_rtao_m.* TO NULL
      INITIALIZE g_rtap_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL artm230_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artm230_set_act_visible()   
   CALL artm230_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtao001_t = g_rtao_m.rtao001
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtaoent = '" ||g_enterprise|| "' AND",
                      " rtao001 = '", g_rtao_m.rtao001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artm230_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL artm230_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL artm230_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="artm230.set_act_no_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION artm230_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="artm230.set_act_no_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION artm230_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="artm230.set_act_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION artm230_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="artm230.set_act_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION artm230_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="artm230.set_entry" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION artm230_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("rtao001",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="artm230.set_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION artm230_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="artm230.set_no_entry" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION artm230_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("rtao001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="artm230.set_no_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION artm230_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="artm230.set_pk_array" ver="1" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION artm230_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_rtao_m.rtao001
   LET g_pk_array[1].column = 'rtao001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="artm230.show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION artm230_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL artm230_b_fill() #單身填充
      CALL artm230_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL artm230_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_rtao_m_mask_o.* =  g_rtao_m.*
   CALL artm230_rtao_t_mask()
   LET g_rtao_m_mask_n.* =  g_rtao_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtao_m.rtaosite,g_rtao_m.rtaosite_desc,g_rtao_m.rtao001,g_rtao_m.rtao002,g_rtao_m.rtao003, 
       g_rtao_m.rtao004,g_rtao_m.rtao004_desc,g_rtao_m.rtao005,g_rtao_m.rtao005_desc,g_rtao_m.rtao006, 
       g_rtao_m.rtaounit,g_rtao_m.rtaostus,g_rtao_m.rtaoownid,g_rtao_m.rtaoownid_desc,g_rtao_m.rtaoowndp, 
       g_rtao_m.rtaoowndp_desc,g_rtao_m.rtaocrtid,g_rtao_m.rtaocrtid_desc,g_rtao_m.rtaocrtdp,g_rtao_m.rtaocrtdp_desc, 
       g_rtao_m.rtaocrtdt,g_rtao_m.rtaomodid,g_rtao_m.rtaomodid_desc,g_rtao_m.rtaomoddt,g_rtao_m.rtaocnfid, 
       g_rtao_m.rtaocnfid_desc,g_rtao_m.rtaocnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_rtao_m.rtaostus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_rtap_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL artm230_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="artm230.signature" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="artm230.state_change" ver="1" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION artm230_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_rtao_m.rtao001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN artm230_cl USING g_enterprise,g_rtao_m.rtao001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artm230_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE artm230_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE artm230_master_referesh USING g_rtao_m.rtao001 INTO g_rtao_m.rtaosite,g_rtao_m.rtao001,g_rtao_m.rtao002, 
       g_rtao_m.rtao003,g_rtao_m.rtao004,g_rtao_m.rtao005,g_rtao_m.rtao006,g_rtao_m.rtaounit,g_rtao_m.rtaostus, 
       g_rtao_m.rtaoownid,g_rtao_m.rtaoowndp,g_rtao_m.rtaocrtid,g_rtao_m.rtaocrtdp,g_rtao_m.rtaocrtdt, 
       g_rtao_m.rtaomodid,g_rtao_m.rtaomoddt,g_rtao_m.rtaocnfid,g_rtao_m.rtaocnfdt,g_rtao_m.rtaosite_desc, 
       g_rtao_m.rtao004_desc,g_rtao_m.rtao005_desc,g_rtao_m.rtaoownid_desc,g_rtao_m.rtaoowndp_desc,g_rtao_m.rtaocrtid_desc, 
       g_rtao_m.rtaocrtdp_desc,g_rtao_m.rtaomodid_desc,g_rtao_m.rtaocnfid_desc
 
   #檢查是否允許此動作
   IF NOT artm230_action_chk() THEN
      CLOSE artm230_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtao_m.rtaosite,g_rtao_m.rtaosite_desc,g_rtao_m.rtao001,g_rtao_m.rtao002,g_rtao_m.rtao003, 
       g_rtao_m.rtao004,g_rtao_m.rtao004_desc,g_rtao_m.rtao005,g_rtao_m.rtao005_desc,g_rtao_m.rtao006, 
       g_rtao_m.rtaounit,g_rtao_m.rtaostus,g_rtao_m.rtaoownid,g_rtao_m.rtaoownid_desc,g_rtao_m.rtaoowndp, 
       g_rtao_m.rtaoowndp_desc,g_rtao_m.rtaocrtid,g_rtao_m.rtaocrtid_desc,g_rtao_m.rtaocrtdp,g_rtao_m.rtaocrtdp_desc, 
       g_rtao_m.rtaocrtdt,g_rtao_m.rtaomodid,g_rtao_m.rtaomodid_desc,g_rtao_m.rtaomoddt,g_rtao_m.rtaocnfid, 
       g_rtao_m.rtaocnfid_desc,g_rtao_m.rtaocnfdt
 
   CASE g_rtao_m.rtaostus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_rtao_m.rtaostus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      g_rtao_m.rtaostus = lc_state OR cl_null(lc_state) THEN
      CLOSE artm230_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_rtao_m.rtaomodid = g_user
   LET g_rtao_m.rtaomoddt = cl_get_current()
   LET g_rtao_m.rtaostus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE rtao_t 
      SET (rtaostus,rtaomodid,rtaomoddt) 
        = (g_rtao_m.rtaostus,g_rtao_m.rtaomodid,g_rtao_m.rtaomoddt)     
    WHERE rtaoent = g_enterprise AND rtao001 = g_rtao_m.rtao001
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE artm230_master_referesh USING g_rtao_m.rtao001 INTO g_rtao_m.rtaosite,g_rtao_m.rtao001, 
          g_rtao_m.rtao002,g_rtao_m.rtao003,g_rtao_m.rtao004,g_rtao_m.rtao005,g_rtao_m.rtao006,g_rtao_m.rtaounit, 
          g_rtao_m.rtaostus,g_rtao_m.rtaoownid,g_rtao_m.rtaoowndp,g_rtao_m.rtaocrtid,g_rtao_m.rtaocrtdp, 
          g_rtao_m.rtaocrtdt,g_rtao_m.rtaomodid,g_rtao_m.rtaomoddt,g_rtao_m.rtaocnfid,g_rtao_m.rtaocnfdt, 
          g_rtao_m.rtaosite_desc,g_rtao_m.rtao004_desc,g_rtao_m.rtao005_desc,g_rtao_m.rtaoownid_desc, 
          g_rtao_m.rtaoowndp_desc,g_rtao_m.rtaocrtid_desc,g_rtao_m.rtaocrtdp_desc,g_rtao_m.rtaomodid_desc, 
          g_rtao_m.rtaocnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_rtao_m.rtaosite,g_rtao_m.rtaosite_desc,g_rtao_m.rtao001,g_rtao_m.rtao002,g_rtao_m.rtao003, 
          g_rtao_m.rtao004,g_rtao_m.rtao004_desc,g_rtao_m.rtao005,g_rtao_m.rtao005_desc,g_rtao_m.rtao006, 
          g_rtao_m.rtaounit,g_rtao_m.rtaostus,g_rtao_m.rtaoownid,g_rtao_m.rtaoownid_desc,g_rtao_m.rtaoowndp, 
          g_rtao_m.rtaoowndp_desc,g_rtao_m.rtaocrtid,g_rtao_m.rtaocrtid_desc,g_rtao_m.rtaocrtdp,g_rtao_m.rtaocrtdp_desc, 
          g_rtao_m.rtaocrtdt,g_rtao_m.rtaomodid,g_rtao_m.rtaomodid_desc,g_rtao_m.rtaomoddt,g_rtao_m.rtaocnfid, 
          g_rtao_m.rtaocnfid_desc,g_rtao_m.rtaocnfdt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE artm230_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artm230_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="artm230.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION artm230_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="artm230.ui_browser_refresh" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION artm230_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_rtao001 = g_rtao_m.rtao001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="artm230.ui_detailshow" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION artm230_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="artm230.ui_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION artm230_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_rtao_m.* TO NULL
         CALL g_rtap_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL artm230_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL artm230_fetch('') # reload data
               LET l_ac = 1
               CALL artm230_ui_detailshow() #Setting the current row 
         
               CALL artm230_idx_chk()
               #NEXT FIELD rtapseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_rtap_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artm230_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL artm230_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL artm230_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL artm230_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL artm230_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL artm230_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL artm230_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL artm230_set_act_visible()   
            CALL artm230_set_act_no_visible()
            IF NOT (g_rtao_m.rtao001 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " rtaoent = '" ||g_enterprise|| "' AND",
                                  " rtao001 = '", g_rtao_m.rtao001, "' "
 
               #填到對應位置
               CALL artm230_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtao_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtap_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL artm230_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtao_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtap_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL artm230_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL artm230_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL artm230_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL artm230_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artm230_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL artm230_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artm230_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL artm230_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artm230_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL artm230_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artm230_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL artm230_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artm230_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_rtap_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD rtapseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL artm230_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL artm230_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL artm230_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL artm230_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="artm230.ui_headershow" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION artm230_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_rtao_m.rtao001 = g_browser[g_current_idx].b_rtao001   
 
   EXECUTE artm230_master_referesh USING g_rtao_m.rtao001 INTO g_rtao_m.rtaosite,g_rtao_m.rtao001,g_rtao_m.rtao002, 
       g_rtao_m.rtao003,g_rtao_m.rtao004,g_rtao_m.rtao005,g_rtao_m.rtao006,g_rtao_m.rtaounit,g_rtao_m.rtaostus, 
       g_rtao_m.rtaoownid,g_rtao_m.rtaoowndp,g_rtao_m.rtaocrtid,g_rtao_m.rtaocrtdp,g_rtao_m.rtaocrtdt, 
       g_rtao_m.rtaomodid,g_rtao_m.rtaomoddt,g_rtao_m.rtaocnfid,g_rtao_m.rtaocnfdt,g_rtao_m.rtaosite_desc, 
       g_rtao_m.rtao004_desc,g_rtao_m.rtao005_desc,g_rtao_m.rtaoownid_desc,g_rtao_m.rtaoowndp_desc,g_rtao_m.rtaocrtid_desc, 
       g_rtao_m.rtaocrtdp_desc,g_rtao_m.rtaomodid_desc,g_rtao_m.rtaocnfid_desc
   CALL artm230_rtao_t_mask()
   CALL artm230_show()
      
END FUNCTION
]]>
  </section>
  <section id="artm230.unlock_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION artm230_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artm230_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="artm230.update_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION artm230_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtap_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL artm230_rtap_t_mask_restore('restore_mask_o')
               
      UPDATE rtap_t 
         SET (rtap001,
              rtapseq
              ,rtap002,rtap003,rtap004,rtap005,rtap006,rtap007,rtap008,rtap009,rtap010,rtap011,rtap012,rtap013,rtap014,rtap015,rtap016,rtap017,rtap018,rtap019,rtap020,rtap021,rtap022,rtap023,rtapcomp,rtapsite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtap_d[g_detail_idx].rtap002,g_rtap_d[g_detail_idx].rtap003,g_rtap_d[g_detail_idx].rtap004, 
                  g_rtap_d[g_detail_idx].rtap005,g_rtap_d[g_detail_idx].rtap006,g_rtap_d[g_detail_idx].rtap007, 
                  g_rtap_d[g_detail_idx].rtap008,g_rtap_d[g_detail_idx].rtap009,g_rtap_d[g_detail_idx].rtap010, 
                  g_rtap_d[g_detail_idx].rtap011,g_rtap_d[g_detail_idx].rtap012,g_rtap_d[g_detail_idx].rtap013, 
                  g_rtap_d[g_detail_idx].rtap014,g_rtap_d[g_detail_idx].rtap015,g_rtap_d[g_detail_idx].rtap016, 
                  g_rtap_d[g_detail_idx].rtap017,g_rtap_d[g_detail_idx].rtap018,g_rtap_d[g_detail_idx].rtap019, 
                  g_rtap_d[g_detail_idx].rtap020,g_rtap_d[g_detail_idx].rtap021,g_rtap_d[g_detail_idx].rtap022, 
                  g_rtap_d[g_detail_idx].rtap023,g_rtap_d[g_detail_idx].rtapcomp,g_rtap_d[g_detail_idx].rtapsite)  

         WHERE rtapent = g_enterprise AND rtap001 = ps_keys_bak[1] AND rtapseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtap_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtap_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artm230_rtap_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
