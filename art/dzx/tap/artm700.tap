<add_points prog="artm700" std_prog="artm700" erpver="1.0" module="ART" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.artm700_rtkf001_ref" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="1" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 門店編號帶出说明
# Memo...........:
# Usage..........: CALL artm700_rtkf001_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/08 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm700_rtkf001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkf_m.rtkf001
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtkf_m.rtkf001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtkf_m.rtkf001_desc
END FUNCTION]]>
</point>
  <point name="function.artm700_rtkf002_ref" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="2" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 商品編號帶出说明
# Memo...........:
# Usage..........: CALL artm700_rtkf002_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/08 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm700_rtkf002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkf_d[l_ac].rtkf002
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtkf_d[l_ac].rtkf002_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_rtkf_d[l_ac].rtkf002_desc
END FUNCTION]]>
</point>
  <point name="function.artm700_imaa009_ref" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="3" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 商品品類帶出说明
# Memo...........:
# Usage..........: CALL artm700_imaa009_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/08 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm700_imaa009_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkf_d[l_ac].imaa009
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtkf_d[l_ac].imaa009_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_rtkf_d[l_ac].imaa009_desc
END FUNCTION]]>
</point>
  <point name="function.artm700_rtkf003_ref" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="4" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 庫存單位帶出说明
# Memo...........:
# Usage..........: CALL artm700_rtkf003_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/08 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm700_rtkf003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkf_d[l_ac].rtkf003
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtkf_d[l_ac].rtkf003_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_rtkf_d[l_ac].rtkf003_desc
END FUNCTION]]>
</point>
  <point name="function.artm700_rtkf005_ref" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="5" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 供應商帶出说明
# Memo...........:
# Usage..........: CALL artm700_rtkf005_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/08 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm700_rtkf005_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkf_d[l_ac].rtkf005
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtkf_d[l_ac].rtkf005_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_rtkf_d[l_ac].rtkf005_desc
END FUNCTION]]>
</point>
  <point name="function.artm700_default_detail" cite_std="N" status="u" ver="1" src="s" new="Y" cite_ver="" order="6" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 預設單身
# Memo...........:
# Usage..........: CALL artm700_default_detail()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/08 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm700_default_detail()
DEFINE l_success          LIKE type_t.num5
DEFINE l_cnt              LIKE type_t.num5
DEFINE l_rtkf             RECORD
       rtkfent            LIKE rtkf_t.rtkfent,     #企業編號
       rtkfunit           LIKE rtkf_t.rtkfunit,    #應用組織
       rtkf001            LIKE rtkf_t.rtkf001,     #門店編號
       rtkf002            LIKE rtkf_t.rtkf002,     #商品編號
       rtkf003            LIKE rtkf_t.rtkf003,     #庫存單位
       rtkf004            LIKE rtkf_t.rtkf004,     #採購方式
       rtkf005            LIKE rtkf_t.rtkf005,     #主供應商
       rtkfstus           LIKE rtkf_t.rtkfstus,    #狀態碼
       rtkfownid          LIKE rtkf_t.rtkfownid,   #資料所有者
       rtkfowndp          LIKE rtkf_t.rtkfowndp,   #資料所屬部門
       rtkfcrtid          LIKE rtkf_t.rtkfcrtid,   #資料建立者
       rtkfcrtdp          LIKE rtkf_t.rtkfcrtdp,   #資料建立部門
       rtkfcrtdt          LIKE rtkf_t.rtkfcrtdt    #資料創建日
                          END RECORD
DEFINE l_rtdx             RECORD
       rtdx001            LIKE rtdx_t.rtdx001,
       rtdx027            LIKE rtdx_t.rtdx027,
       rtdx031            LIKE rtdx_t.rtdx031
                          END RECORD

   LET l_success = TRUE
   CALL s_transaction_begin()

   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM rtkf_t
    WHERE rtkfent = g_enterprise
      AND rtkf001 = g_rtkf_m.rtkf001
   IF l_cnt >= 1 THEN
      RETURN
   END IF
   
   #撈出門店清單裡此門店的商品
   LET g_sql = "SELECT rtdx001,rtdx027,rtdx031",
               "  FROM rtdx_t,imaa_t",
               " WHERE rtdxent = ",g_enterprise,
               "   AND rtdxsite = '",g_rtkf_m.rtkf001,"'",
               "   AND rtdxstus = 'Y'",
               "   AND rtdxent = imaaent",
               "   AND rtdx001 = imaa001",
               "   AND imaastus = 'Y'",
               " ORDER BY rtdx001"
   PREPARE artm700_rtdx FROM g_sql
   DECLARE artm700_rtdx_curs CURSOR FOR artm700_rtdx
   
   #撈出自動補貨排除條件設定檔
   LET g_sql = "SELECT COUNT(*)",
               "  FROM rtke_t",
               " WHERE rtkeent = ",g_enterprise,
               "   AND ((rtke001 = '1' AND rtke002 = '",g_rtaa001,"')",
               "    OR  (rtke001 = '2' AND rtke002 = '",g_rtkf_m.rtkf001,"'))",
               "   AND rtke004 = ?",          #商品編號
               "   AND rtkestus = 'Y'"
   PREPARE artm700_rtke FROM g_sql
   DECLARE artm700_rtke_curs CURSOR FOR artm700_rtke
   
   #商品的庫存單位
   LET g_sql = "SELECT imaa104",
               "  FROM imaa_t",
               " WHERE imaaent = ",g_enterprise,
               "   AND imaa001 = ?",
               "   AND imaastus = 'Y'"
   PREPARE artm700_imaa104 FROM g_sql
   DECLARE artm700_imaa104_curs CURSOR FOR artm700_imaa104
   
   #新增到 門店商品自動補貨參數檔
   LET g_sql = "INSERT INTO rtkf_t(rtkfent, rtkfunit, rtkf001, rtkf002, rtkf003, rtkf004, rtkf005,",
               "                   rtkfstus, rtkfownid, rtkfowndp, rtkfcrtid, rtkfcrtdp, rtkfcrtdt)",
               "   VALUES(?,?,?,?,?, ?,?,?,?,?, ?,?,?)"
   PREPARE artm700_ins_rtkf FROM g_sql
   DECLARE artm700_ins_rtkf_curs CURSOR FOR artm700_ins_rtkf
   
   INITIALIZE l_rtdx.* TO NULL
   FOREACH artm700_rtdx_curs INTO l_rtdx.*
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach artm700_rtdx_curs',SQLCA.sqlcode,1)
         LET l_success = FALSE
         EXIT FOREACH
      END IF
      
      LET l_cnt = 0
      #自動補貨排除條件設定檔 店群與門店裡是否有排除此商品
      EXECUTE artm700_rtke_curs USING l_rtdx.rtdx001 INTO l_cnt
      IF l_cnt >= 1 THEN
         CONTINUE FOREACH
      END IF
      
      INITIALIZE l_rtkf.* TO NULL
      #庫存單位
      EXECUTE artm700_imaa104_curs USING l_rtdx.rtdx001 INTO l_rtkf.rtkf003
      LET l_rtkf.rtkfent   = g_enterprise         #企業編號
      LET l_rtkf.rtkfunit  = g_site               #應用組織
      LET l_rtkf.rtkf001   = g_rtkf_m.rtkf001     #門店編號
      LET l_rtkf.rtkf002   = l_rtdx.rtdx001       #商品編號
      LET l_rtkf.rtkf004   = l_rtdx.rtdx027       #採購方式
      LET l_rtkf.rtkf005   = l_rtdx.rtdx031       #主供應商
      LET l_rtkf.rtkfstus  = 'Y'                  #狀態碼
      LET l_rtkf.rtkfownid = g_user               #資料所有者
      LET l_rtkf.rtkfowndp = g_dept               #資料所屬部門
      LET l_rtkf.rtkfcrtid = g_user               #資料建立者
      LET l_rtkf.rtkfcrtdp = g_dept               #資料建立部門
      LET l_rtkf.rtkfcrtdt = cl_get_current()     #資料創建日
      EXECUTE artm700_ins_rtkf_curs USING l_rtkf.rtkfent, l_rtkf.rtkfunit, l_rtkf.rtkf001,
         l_rtkf.rtkf002, l_rtkf.rtkf003, l_rtkf.rtkf004, l_rtkf.rtkf005, l_rtkf.rtkfstus,
         l_rtkf.rtkfownid, l_rtkf.rtkfowndp, l_rtkf.rtkfcrtid, l_rtkf.rtkfcrtdp, l_rtkf.rtkfcrtdt
      IF SQLCA.sqlcode THEN
         CALL cl_err('Ins rtkf_t',SQLCA.sqlcode,1)
      END IF
      INITIALIZE l_rtdx.* TO NULL
      INITIALIZE l_rtkf.* TO NULL
   END FOREACH
   
   IF NOT l_success THEN
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
END FUNCTION]]>
</point>
  <point name="function.artm700_rtaa001" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="7" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 此門店 是否有店群 且店群性質 = 2.採購店群
# Memo...........:
# Usage..........: CALL artm700_rtaa001()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/09 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm700_rtaa001()
   LET g_rtaa001 = ''
   SELECT rtaa001 INTO g_rtaa001
     FROM rtaa_t,rtab_t
    WHERE rtaaent = rtabent
      AND rtaa001 = rtab001
      AND rtaaent = g_enterprise
      AND rtaa002 = '2'
      AND rtaastus = 'Y'
      AND rtab002 = g_rtkf_m.rtkf001
END FUNCTION]]>
</point>
  <point name="function.artm700_imaa009" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="8" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 商品編號找出商品品類
# Memo...........:
# Usage..........: CALL artm700_imaa009()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/09 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm700_imaa009()
   SELECT imaa009 INTO g_rtkf_d[l_ac].imaa009
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_rtkf_d[l_ac].rtkf002
      
END FUNCTION]]>
</point>
  <point name="function.artm700_chk_rtkf001" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="9" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 商品編號 確認 並 帶出門店清單的資料和商品主檔資料
# Memo...........:
# Usage..........: CALL artm700_chk_rtkf001()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/04/09 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION artm700_chk_rtkf001()
DEFINE l_rtdx001        LIKE rtdx_t.rtdx001
DEFINE l_rtdx027        LIKE rtdx_t.rtdx027
DEFINE l_rtdx031        LIKE rtdx_t.rtdx031
DEFINE l_rtdxstus       LIKE rtdx_t.rtdxstus
DEFINE l_imaa104        LIKE imaa_t.imaa104
DEFINE l_imaastus       LIKE imaa_t.imaastus
DEFINE l_cnt            LIKE type_t.num5

   LET g_errno    = ''
   LET l_rtdx001  = ''
   LET l_rtdx027  = ''
   LET l_rtdx031  = ''
   LET l_rtdxstus = ''

   SELECT rtdx001,rtdx027,rtdx031,rtdxstus
     INTO l_rtdx001,l_rtdx027,l_rtdx031,l_rtdxstus
     FROM rtdx_t
    WHERE rtdxent = g_enterprise
      AND rtdxsite = g_rtkf_m.rtkf001
      AND rtdx001 = g_rtkf_d[l_ac].rtkf002
   CASE
      #輸入的商品編號不存在相應門店的 門店清單檔rtdx_t 中!;請至[門店清單查詢作業artq400]中查詢后重新錄入！
      WHEN SQLCA.sqlcode = 100
         LET g_errno = 'art-00151'
         RETURN
      #此商品編號 於相應門店的 門店商品清單檔中 已失效;請至[門店清單查詢作業artq400]中查詢后重新錄入！
      WHEN l_rtdxstus <> 'Y'
         LET g_errno = 'art-00156'
         RETURN
   END CASE
   LET l_imaa104  = ''
   LET l_imaastus = ''
   SELECT imaa104,imaastus INTO l_imaa104,l_imaastus
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_rtkf_d[l_ac].rtkf002
   CASE
      #輸入的商品編號不存在 商品/料件主檔 中;請查詢[料件主檔維護作業aimm200/商品主檔維護作業artm300]後,重新输入
      WHEN SQLCA.sqlcode = 100
         LET g_errno = 'art-00016'
         RETURN
      #輸入的 商品編號 無效;請查詢[料件主檔維護作業aimm200/商品主檔維護作業artm300]後,重新输入
      WHEN l_imaastus <> 'Y'
         LET g_errno = 'art-00125'
         RETURN
   END CASE
   #撈出自動補貨排除條件設定檔
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM rtke_t
    WHERE rtkeent = g_enterprise
      AND ((rtke001 = '1' AND rtke002 = g_rtaa001)
       OR  (rtke001 = '2' AND rtke002 = g_rtkf_m.rtkf001))
      AND rtke004 = g_rtkf_d[l_ac].rtkf002          #商品編號
      AND rtkestus = 'Y'
   IF l_cnt >= 1 THEN
      IF cl_null(g_rtaa001) THEN
         #此商品編號 存在門店編號：%1 自動補貨排除條件設定檔中！
         #請查詢[自動補貨排除條件設定維護作業arti725]後，重新輸入！
         LET g_errno = 'art-00336'
      ELSE
         #此商品編號 存在門店編號：%1或店群編號：%2 自動補貨排除條件設定檔中！
         #請查詢[自動補貨排除條件設定維護作業arti725]後，重新輸入！
         LET g_errno = 'art-00335'
      END IF
      RETURN
   END IF
   
   IF cl_null(g_errno) THEN
      LET g_rtkf_d[l_ac].rtkf003 = l_imaa104       #庫存單位
      LET g_rtkf_d[l_ac].rtkf004 = l_rtdx027       #採購方式
      LET g_rtkf_d[l_ac].rtkf005 = l_rtdx031       #主供應商
   END IF
END FUNCTION]]>
</point>
  <point name="construct.c.page1.rtkf002" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtdx001_13()                      #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkf002    #顯示到畫面上
            NEXT FIELD rtkf002                       #返回原欄位
]]>
</point>
  <point name="construct.c.page1.rtkf003" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkf003  #顯示到畫面上
            NEXT FIELD rtkf003                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.rtkf005" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " (pmaa002 = '1' OR pmaa002 = '3')"
            CALL q_pmaa001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkf005  #顯示到畫面上
            NEXT FIELD rtkf005                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.rtkf001" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = 'F'              #門店
            CALL q_ooef001_3()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkf001  #顯示到畫面上
            NEXT FIELD rtkf001                     #返回原欄位
    

]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[DEFINE g_rtkf_d_o            type_g_rtkf_d
DEFINE g_rtaa001             LIKE rtaa_t.rtaa001
DEFINE g_show                LIKE type_t.chr1]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   LET g_errshow = 1
   LET g_show = '0']]>
</point>
  <point name="input.a.page1.rtkf002" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            LET g_rtkf_d[g_detail_idx].rtkf002_desc = ''
            LET g_rtkf_d[g_detail_idx].imaa009 = ''
            LET g_rtkf_d[g_detail_idx].imaa009_desc = ''
            LET g_rtkf_d[g_detail_idx].rtkf003_desc = ''
            LET g_rtkf_d[g_detail_idx].rtkf005_desc = ''
            #此段落由子樣板a05產生
            IF  g_rtkf_m.rtkf001 IS NOT NULL AND g_rtkf_d[g_detail_idx].rtkf002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtkf_m.rtkf001 != g_rtkf001_t OR g_rtkf_d[g_detail_idx].rtkf002 != g_rtkf_d_o.rtkf002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtkf_t WHERE "||"rtkfent = '" ||g_enterprise|| "' AND "||"rtkf001 = '"||g_rtkf_m.rtkf001 ||"' AND "|| "rtkf002 = '"||g_rtkf_d[g_detail_idx].rtkf002 ||"'",'std-00004',0) THEN 
                     LET g_rtkf_d[l_ac].rtkf002 = g_rtkf_d_o.rtkf002
                     CALL artm700_rtkf002_ref()
                     CALL artm700_imaa009()
                     CALL artm700_imaa009_ref()
                     CALL artm700_rtkf003_ref()
                     CALL artm700_rtkf005_ref()
                     NEXT FIELD CURRENT
                  END IF
                  CALL artm700_chk_rtkf001()
                  IF NOT cl_null(g_errno) THEN
                     CASE g_errno
                          #此商品編號 存在門店編號：%1或店群編號：%2 自動補貨排除條件設定檔中！
                          WHEN 'art-00335'
                             CALL cl_err_msg(NULL,g_errno,g_rtkf_m.rtkf001|| "|" ||g_rtaa001, 10)
                          
                          #此商品編號 存在門店編號：%1 自動補貨排除條件設定檔中！
                          WHEN 'art-00336'
                             CALL cl_err_msg(NULL,g_errno,g_rtkf_m.rtkf001, 10)
                              
                          OTHERWISE
                             CALL cl_err('',g_errno,1)
                              
                     END CASE
                     LET g_rtkf_d[l_ac].rtkf002 = g_rtkf_d_o.rtkf002
                     CALL artm700_rtkf002_ref()
                     CALL artm700_imaa009()
                     CALL artm700_imaa009_ref()
                     CALL artm700_rtkf003_ref()
                     CALL artm700_rtkf005_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL artm700_rtkf002_ref()
            CALL artm700_imaa009()
            CALL artm700_imaa009_ref()
            CALL artm700_rtkf003_ref()
            CALL artm700_rtkf005_ref()
            LET g_rtkf_d_o.rtkf002 = g_rtkf_d[l_ac].rtkf002]]>
</point>
  <point name="input.a.page1.rtkf003" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            CALL artm700_rtkf003_ref()
]]>
</point>
  <point name="input.a.page1.rtkf005" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            CALL artm700_rtkf005_ref()

]]>
</point>
  <point name="input.a.page1.rtkf006" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_rtkf_d[l_ac].rtkf006) THEN 
            END IF 

]]>
</point>
  <point name="input.a.page1.rtkf007" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_rtkf_d[l_ac].rtkf007) THEN 
            END IF 

]]>
</point>
  <point name="input.a.page1.rtkf008" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_rtkf_d[l_ac].rtkf008) THEN 
            END IF 

]]>
</point>
  <point name="input.a.page1.rtkf009" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_rtkf_d[l_ac].rtkf009) THEN 
            END IF 

]]>
</point>
  <point name="input.a.page1.rtkf010" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_rtkf_d[l_ac].rtkf010) THEN 
            END IF 

]]>
</point>
  <point name="input.a.page1.rtkf011" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_rtkf_d[l_ac].rtkf011) THEN 
            END IF 

]]>
</point>
  <point name="input.a.page2.rtkf002_2" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_rtkf_m.rtkf001 IS NOT NULL AND g_rtkf2_d[g_detail_idx].rtkf002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtkf_m.rtkf001 != g_rtkf001_t OR g_rtkf2_d[g_detail_idx].rtkf002 != g_rtkf2_d_t.rtkf002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtkf_t WHERE "||"rtkfent = '" ||g_enterprise|| "' AND "||"rtkf001 = '"||g_rtkf_m.rtkf001 ||"' AND "|| "rtkf002 = '"||g_rtkf2_d[g_detail_idx].rtkf002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.rtkf001" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            LET g_rtkf_m.rtkf001_desc = ' '
            DISPLAY BY NAME g_rtkf_m.rtkf001_desc
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_rtkf_m.rtkf001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_rtkf_m.rtkf001 != g_rtkf001_t )) THEN 
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM rtkf_t
                   WHERE rtkfent = g_enterprise
                     AND rtkf001 = g_rtkf_m.rtkf001
                  IF l_cnt >= 1 THEN
                     LET g_show = '1'        
                     #NEXT FIELD CURRENT
                  ELSE
                     INITIALIZE g_chkparam.* TO NULL
                     LET g_chkparam.arg1 = g_rtkf_m.rtkf001
                     LET g_chkparam.arg2 = 'F'
                     IF NOT cl_chk_exist("v_ooef001_2") THEN
                        LET g_rtkf_m.rtkf001 = g_rtkf001_t
                        CALL artm700_rtkf001_ref()
                        NEXT FIELD CURRENT
                     END IF
                     CALL artm700_rtaa001()
                  END IF
               END IF
            END IF
            CALL artm700_rtkf001_ref()
            ]]>
</point>
  <point name="input.b.rtkf001" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[               LET g_rtkf_d[l_ac].rtkfunit = g_site]]>
</point>
  <point name="input.body.before_input" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            CALL artm700_rtaa001()]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            LET g_rtkf_d_o.* = g_rtkf_d[l_ac].*     #新輸入資料]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            LET g_rtkf_d_o.* = g_rtkf_d[l_ac].*  #BACKUP]]>
</point>
  <point name="input.c.page1.rtkf002" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtkf_d[l_ac].rtkf002   #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_rtkf_m.rtkf001             #門店編號
            LET g_qryparam.arg2 = g_rtaa001                    #店群編號
            CALL q_rtdx001_13()                                #呼叫開窗
            LET g_rtkf_d[l_ac].rtkf002 = g_qryparam.return1   
            DISPLAY g_rtkf_d[l_ac].rtkf002 TO rtkf002

            NEXT FIELD rtkf002                          #返回原欄位

]]>
</point>
  <point name="input.c.rtkf001" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtkf_m.rtkf001        #給予default值

            #給予arg
            LET g_qryparam.arg1 = 'F'                         #門店
            CALL q_ooef001_3()                                #呼叫開窗 
            LET g_rtkf_m.rtkf001 = g_qryparam.return1              
            DISPLAY g_rtkf_m.rtkf001 TO rtkf001

            NEXT FIELD rtkf001                                #返回原欄位
]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[               CALL artm700_default_detail()
               #控制key欄位可否輸入
               CALL artm700_set_entry(p_cmd)
               CALL artm700_set_no_entry(p_cmd)
               CALL artm700_b_fill("1=1")]]>
</point>
  <point name="input.head.b_input" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF g_show = '1' THEN
               CALL artm700_b_fill("1=1")
               LET g_show = '0'
            END IF]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[               #IF g_show = '1' THEN
               #   CALL artm700_modify()
               #   LET g_show = '0'
               #END IF]]>
</point>
  <point name="ref_show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[      CALL artm700_imaa009()
      CALL artm700_rtkf002_ref()
      CALL artm700_imaa009_ref()
      CALL artm700_rtkf003_ref()
      CALL artm700_rtkf005_ref()
 ]]>
</point>
  <point name="ref_show.head.reference" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[
   CALL artm700_rtkf001_ref()
]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM rtkf_t
    WHERE rtkfent = g_enterprise
      AND rtkf001 = g_rtkf_m.rtkf001
   IF l_cnt >= 1 THEN
      CALL cl_set_comp_entry("rtkf001",FALSE)
   END IF]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   DEFINE l_cnt   LIKE type_t.num5]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_row" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_row" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.action" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_browser_fill" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_sql_rank" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_pre" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.more" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.head.before" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.rtkf001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.rtkf001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.rtkfunit" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.rtkfunit" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.rtkfunit" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.rtkfstus" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.rtkfstus" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.rtkfstus" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.rtkf002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.rtkf002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.rtkf003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.rtkf003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.rtkf004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.rtkf004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.rtkf004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.rtkf006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.rtkf006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.rtkf006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.rtkf007" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.rtkf007" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.rtkf007" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.rtkf008" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.rtkf008" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.rtkf008" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.rtkf009" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.rtkf009" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.rtkf009" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.rtkf010" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.rtkf010" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.rtkf010" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.rtkf011" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.rtkf011" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.rtkf011" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.rtkf005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.rtkf005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.more_construct" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.before_dialog" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="query.befroe_query" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="fetch.before_fetch" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert.before" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert.after_insert2" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.b_key_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.m_key_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify.a_key_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.after_set_no_entry" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.rtkf001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.m_insert" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.after_insert" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.rtkfunit" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.rtkfunit" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.rtkfunit" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.rtkfstus" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.rtkfstus" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.rtkfstus" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.rtkf002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.rtkf002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.rtkf003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.rtkf003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.rtkf004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.rtkf004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.rtkf004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.rtkf006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.rtkf006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.rtkf007" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.rtkf007" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.rtkf008" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.rtkf008" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.rtkf009" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.rtkf009" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.rtkf010" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.rtkf010" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.rtkf011" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.rtkf011" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.rtkf005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.rtkf005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.rtkfunit" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.rtkfstus" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.rtkf003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.rtkf004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.rtkf006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.rtkf007" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.rtkf008" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.rtkf009" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.rtkf010" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.rtkf011" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.rtkf005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.body2.action" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.more_inputarray" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ref_show.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="ref_show.body2.reference" cite_std="N" status="u" ver="" src="" new="Y" cite_ver="">
<![CDATA[      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtkf2_d[l_ac].rtkfownid
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_rtkf2_d[l_ac].rtkfownid_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_rtkf2_d[l_ac].rtkfownid_desc
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtkf2_d[l_ac].rtkfowndp
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_rtkf2_d[l_ac].rtkfowndp_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_rtkf2_d[l_ac].rtkfowndp_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtkf2_d[l_ac].rtkfcrtid
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_rtkf2_d[l_ac].rtkfcrtid_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_rtkf2_d[l_ac].rtkfcrtid_desc
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtkf2_d[l_ac].rtkfcrtdp
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_rtkf2_d[l_ac].rtkfcrtdp_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_rtkf2_d[l_ac].rtkfcrtdp_desc
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtkf2_d[l_ac].rtkfmodid
      CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
      LET g_rtkf2_d[l_ac].rtkfmodid_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_rtkf2_d[l_ac].rtkfmodid_desc]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_after" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill.fill_before" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="bfill.foreach" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill.more" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="before_delete.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.body.b_single_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.body.m_single_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete.body.a_single_delete" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b段" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="fill_chk.other" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.define" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.before" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.page_control" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.after" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <section id="artm700.b_fill" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION artm700_b_fill(p_wc2)
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   #先清空單身變數內容
   CALL g_rtkf_d.clear()
   CALL g_rtkf2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
      LET g_sql = "SELECT  UNIQUE rtkfstus,rtkf002,'','','',rtkf003,'',rtkf004,rtkf006,rtkf007,rtkf008, 
          rtkf009,rtkf010,rtkf011,rtkf005,'',rtkf002,rtkfownid,'',rtkfowndp,'',rtkfcrtid,'',rtkfcrtdp, 
          '',rtkfcrtdt,rtkfmodid,'',rtkfmoddt,rtkfcnfid,'',rtkfcnfdt FROM rtkf_t",   
                  " LEFT JOIN imaa_t ON rtkf001 = imaa001rtkf002 =",
                  
                  " WHERE rtkfent= ? AND rtkf001=?"  
                  
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED
   END IF
   
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF artm700_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY rtkf_t.rtkf002"
      
      #add-point:b_fill段fill_before
      {<point name="b_fill.fill_before"/>}
      #end add-point
      
      PREPARE artm700_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR artm700_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_rtkf_m.rtkf001
 
                                               
      FOREACH b_fill_cs INTO g_rtkf_d[l_ac].rtkfstus,g_rtkf_d[l_ac].rtkf002,g_rtkf_d[l_ac].rtkf002_desc, 
          g_rtkf_d[l_ac].imaa009,g_rtkf_d[l_ac].imaa009_desc,g_rtkf_d[l_ac].rtkf003,g_rtkf_d[l_ac].rtkf003_desc, 
          g_rtkf_d[l_ac].rtkf004,g_rtkf_d[l_ac].rtkf006,g_rtkf_d[l_ac].rtkf007,g_rtkf_d[l_ac].rtkf008, 
          g_rtkf_d[l_ac].rtkf009,g_rtkf_d[l_ac].rtkf010,g_rtkf_d[l_ac].rtkf011,g_rtkf_d[l_ac].rtkf005, 
          g_rtkf_d[l_ac].rtkf005_desc,g_rtkf2_d[l_ac].rtkf002,g_rtkf2_d[l_ac].rtkfownid,g_rtkf2_d[l_ac].rtkfownid_desc, 
          g_rtkf2_d[l_ac].rtkfowndp,g_rtkf2_d[l_ac].rtkfowndp_desc,g_rtkf2_d[l_ac].rtkfcrtid,g_rtkf2_d[l_ac].rtkfcrtid_desc, 
          g_rtkf2_d[l_ac].rtkfcrtdp,g_rtkf2_d[l_ac].rtkfcrtdp_desc,g_rtkf2_d[l_ac].rtkfcrtdt,g_rtkf2_d[l_ac].rtkfmodid, 
          g_rtkf2_d[l_ac].rtkfmodid_desc,g_rtkf2_d[l_ac].rtkfmoddt,g_rtkf2_d[l_ac].rtkfcnfid,g_rtkf2_d[l_ac].rtkfcnfid_desc, 
          g_rtkf2_d[l_ac].rtkfcnfdt
                             ,g_rtkf_d[l_ac].rtkfstus,g_rtkf_d[l_ac].rtkf002,g_rtkf_d[l_ac].rtkf002_desc, 
                                 g_rtkf_d[l_ac].imaa009,g_rtkf_d[l_ac].imaa009_desc,g_rtkf_d[l_ac].rtkf003, 
                                 g_rtkf_d[l_ac].rtkf003_desc,g_rtkf_d[l_ac].rtkf004,g_rtkf_d[l_ac].rtkf006, 
                                 g_rtkf_d[l_ac].rtkf007,g_rtkf_d[l_ac].rtkf008,g_rtkf_d[l_ac].rtkf009, 
                                 g_rtkf_d[l_ac].rtkf010,g_rtkf_d[l_ac].rtkf011,g_rtkf_d[l_ac].rtkf005, 
                                 g_rtkf_d[l_ac].rtkf005_desc,g_rtkf2_d[l_ac].rtkf002,g_rtkf2_d[l_ac].rtkfownid, 
                                 g_rtkf2_d[l_ac].rtkfownid_desc,g_rtkf2_d[l_ac].rtkfowndp,g_rtkf2_d[l_ac].rtkfowndp_desc, 
                                 g_rtkf2_d[l_ac].rtkfcrtid,g_rtkf2_d[l_ac].rtkfcrtid_desc,g_rtkf2_d[l_ac].rtkfcrtdp, 
                                 g_rtkf2_d[l_ac].rtkfcrtdp_desc,g_rtkf2_d[l_ac].rtkfcrtdt,g_rtkf2_d[l_ac].rtkfmodid, 
                                 g_rtkf2_d[l_ac].rtkfmodid_desc,g_rtkf2_d[l_ac].rtkfmoddt,g_rtkf2_d[l_ac].rtkfcnfid, 
                                 g_rtkf2_d[l_ac].rtkfcnfid_desc,g_rtkf2_d[l_ac].rtkfcnfdt
 
                             
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         #帶出公用欄位reference值
         
         
         #此段落由子樣板a12產生
      #LET g_rtkf2_d[l_ac].rtkfownid_desc = cl_get_username(g_rtkf2_d[l_ac].rtkfownid)
      #LET g_rtkf2_d[l_ac].rtkfowndp_desc = cl_get_deptname(g_rtkf2_d[l_ac].rtkfowndp)
      #LET g_rtkf2_d[l_ac].rtkfcrtid_desc = cl_get_username(g_rtkf2_d[l_ac].rtkfcrtid)
      #LET g_rtkf2_d[l_ac].rtkfcrtdp_desc = cl_get_deptname(g_rtkf2_d[l_ac].rtkfcrtdp)
      #LET g_rtkf2_d[l_ac].rtkfmodid_desc = cl_get_username(g_rtkf2_d[l_ac].rtkfmodid)
      #LET g_rtkf2_d[l_ac].rtkfcnfid_desc = cl_get_deptname(g_rtkf2_d[l_ac].rtkfcnfid)
      ##LET .rtkfpstid_desc = cl_get_deptname(.rtkfpstid)
      
 
 
 
        
         #add-point:單身資料抓取
         {<point name="bfill.foreach"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_rtkf_d.deleteElement(g_rtkf_d.getLength())
      CALL g_rtkf2_d.deleteElement(g_rtkf2_d.getLength())
 
   END IF
   
   #add-point:b_fill段more
   {<point name="b_fill.more"/>}
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE artm700_pb   
   
END FUNCTION
]]>
</section>
  <section id="artm700.b_fill2" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION artm700_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
]]>
</section>
  <section id="artm700.before_delete" ver="1" status="" src="s">
<![CDATA[#+ 單身db資料刪除
PRIVATE FUNCTION artm700_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define"/>}
   #end add-point 
   
   #add-point:單筆刪除前
   {<point name="delete.body.b_single_delete" mark="Y"/>}
   #end add-point
   
   DELETE FROM rtkf_t
    WHERE rtkfent = g_enterprise AND rtkf001 = g_rtkf_m.rtkf001 AND
 
          rtkf002 = g_rtkf_d_t.rtkf002
 
      
   #add-point:單筆刪除中
   {<point name="delete.body.m_single_delete"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("rtkf_t",SQLCA.sqlcode,1)
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後
   {<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
]]>
</section>
  <section id="artm700.browser_fill" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION artm700_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point    
   
   CALL g_browser.clear()
 
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "rtkf001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   IF g_wc2 <> " 1=1" OR NOT cl_null(g_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE rtkf001 ",
 
                      " FROM rtkf_t ",
                      " ",
                      " LEFT JOIN imaa_t ON rtkf001 = imaa001 ",
 
                      " WHERE rtkfent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE rtkf001 ",
 
                      " FROM rtkf_t ",
                      " ",
                      " LEFT JOIN imaa_t ON rtkf001 = imaa001 ",
                      " WHERE rtkfent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   LET g_error_show = 0
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #LET g_page_action = ps_page_action          # Keep Action
   IF ps_page_action = "first" OR              
      ps_page_action = "prev"  OR
      ps_page_action = "next"  OR
      ps_page_action = "last"  THEN
      LET g_page_action = ps_page_action        #g_page_action 這個會影響 browser 下面四個button 的判斷 
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
             LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
         
   END CASE
   
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
 
      #依照rtkf001 Browser欄位定義(取代原本bs_sql功能)
      LET l_sub_sql  = "SELECT DISTINCT rtkf001 ",
                       " FROM rtkf_t ",
 
                       " ",
                       " WHERE rtkfent = '" ||g_enterprise|| "' AND ", g_wc," AND ",g_wc2
 
   ELSE
      #單身無輸入資料
      LET l_sub_sql  = "SELECT DISTINCT rtkf001 ",
                       " FROM rtkf_t ",
                       " WHERE rtkfent = '" ||g_enterprise|| "' AND ", g_wc
                 
   END IF
   
   #add-point:browser_fill,sql_rank前
   {<point name="browser_fill.before_sql_rank"/>}
   #end add-point
   
   LET l_sql_rank = "SELECT rtkf001,DENSE_RANK() OVER(ORDER BY rtkf001 ",g_order,") AS RANK ",
                    " FROM (",l_sub_sql,") "
                       
   #定義翻頁CURSOR
   LET g_sql= " SELECT rtkf001 FROM (",l_sql_rank,") WHERE RANK>=",g_pagestart,
              " AND RANK<",g_pagestart+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
                
   #add-point:browser_fill,pre前
   {<point name="browser_fill.before_pre"/>}
   #end add-point
                
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_rtkf001    
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point    
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   IF g_browser.getLength() = 0 AND g_wc THEN
      INITIALIZE g_rtkf_m.* TO NULL
      CALL g_rtkf_d.clear()
      CALL g_rtkf2_d.clear()
 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="artm700.browser_search" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION artm700_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1"
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY rtkf001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL artm700_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="artm700.construct" ver="1" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION artm700_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_rtkf_m.* TO NULL
   CALL g_rtkf_d.clear()
   CALL g_rtkf2_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外
   {<point name="cs.head.before"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON rtkf001,rtkfunit
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
        #---------------------------<  Master  >---------------------------
         #----<<rtkf001>>----
         #Ctrlp:construct.c.rtkf001
         ON ACTION controlp INFIELD rtkf001
            #add-point:ON ACTION controlp INFIELD rtkf001
            {<point name="construct.c.rtkf001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf001
            #add-point:BEFORE FIELD rtkf001
            {<point name="construct.b.rtkf001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkf001
            
            #add-point:AFTER FIELD rtkf001
            {<point name="construct.a.rtkf001" />}
            #END add-point
            
 
         #----<<rtkfunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkfunit
            #add-point:BEFORE FIELD rtkfunit
            {<point name="construct.b.rtkfunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkfunit
            
            #add-point:AFTER FIELD rtkfunit
            {<point name="construct.a.rtkfunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rtkfunit
         ON ACTION controlp INFIELD rtkfunit
            #add-point:ON ACTION controlp INFIELD rtkfunit
            {<point name="construct.c.rtkfunit" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON rtkfstus,rtkf002,rtkf003,rtkf004,rtkf006,rtkf007,rtkf008,rtkf009,rtkf010, 
          rtkf011,rtkf005,rtkfownid,rtkfowndp,rtkfcrtid,rtkfcrtdp,rtkfcrtdt,rtkfmodid,rtkfmoddt,rtkfcnfid, 
          rtkfcnfdt
           FROM s_detail1[1].rtkfstus,s_detail1[1].rtkf002,s_detail1[1].rtkf003,s_detail1[1].rtkf004, 
               s_detail1[1].rtkf006,s_detail1[1].rtkf007,s_detail1[1].rtkf008,s_detail1[1].rtkf009,s_detail1[1].rtkf010, 
               s_detail1[1].rtkf011,s_detail1[1].rtkf005,s_detail2[1].rtkfownid,s_detail2[1].rtkfowndp, 
               s_detail2[1].rtkfcrtid,s_detail2[1].rtkfcrtdp,s_detail2[1].rtkfcrtdt,s_detail2[1].rtkfmodid, 
               s_detail2[1].rtkfmoddt,s_detail2[1].rtkfcnfid,s_detail2[1].rtkfcnfdt
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
         #單身公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<rtkfownid>>----
         #ON ACTION controlp INFIELD rtkfownid
         #   CALL q_common('rtkf_t','rtkfownid',TRUE,FALSE,g_rtkf2_d[1].rtkfownid) RETURNING ls_return
         #   DISPLAY ls_return TO rtkfownid
         #   NEXT FIELD rtkfownid  
         #
         ##----<<rtkfowndp>>----
         #ON ACTION controlp INFIELD rtkfowndp
         #   CALL q_common('rtkf_t','rtkfowndp',TRUE,FALSE,g_rtkf2_d[1].rtkfowndp) RETURNING ls_return
         #   DISPLAY ls_return TO rtkfowndp
         #   NEXT FIELD rtkfowndp
         #
         ##----<<rtkfcrtid>>----
         #ON ACTION controlp INFIELD rtkfcrtid
         #   CALL q_common('rtkf_t','rtkfcrtid',TRUE,FALSE,g_rtkf2_d[1].rtkfcrtid) RETURNING ls_return
         #   DISPLAY ls_return TO rtkfcrtid
         #   NEXT FIELD rtkfcrtid
         #
         ##----<<rtkfcrtdp>>----
         #ON ACTION controlp INFIELD rtkfcrtdp
         #   CALL q_common('rtkf_t','rtkfcrtdp',TRUE,FALSE,g_rtkf2_d[1].rtkfcrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO rtkfcrtdp
         #   NEXT FIELD rtkfcrtdp
         #
         ##----<<rtkfmodid>>----
         #ON ACTION controlp INFIELD rtkfmodid
         #   CALL q_common('rtkf_t','rtkfmodid',TRUE,FALSE,g_rtkf2_d[1].rtkfmodid) RETURNING ls_return
         #   DISPLAY ls_return TO rtkfmodid
         #   NEXT FIELD rtkfmodid
         #
         ##----<<rtkfcnfid>>----
         #ON ACTION controlp INFIELD rtkfcnfid
         #   CALL q_common('rtkf_t','rtkfcnfid',TRUE,FALSE,g_rtkf2_d[1].rtkfcnfid) RETURNING ls_return
         #   DISPLAY ls_return TO rtkfcnfid
         #   NEXT FIELD rtkfcnfid
         #
         ##----<<rtkfpstid>>----
         ##ON ACTION controlp INFIELD rtkfpstid
         ##   CALL q_common('rtkf_t','rtkfpstid',TRUE,FALSE,.rtkfpstid) RETURNING ls_return
         ##   DISPLAY ls_return TO rtkfpstid
         ##   NEXT FIELD rtkfpstid
         
         ##----<<rtkfcrtdt>>----
         AFTER FIELD rtkfcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtkfmoddt>>----
         AFTER FIELD rtkfmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtkfcnfdt>>----
         AFTER FIELD rtkfcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtkfpstdt>>----
         #AFTER FIELD rtkfpstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
           
         #單身一般欄位開窗相關處理
         #---------------------<  Detail: page1  >---------------------
         #----<<rtkfstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkfstus
            #add-point:BEFORE FIELD rtkfstus
            {<point name="construct.b.page1.rtkfstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkfstus
            
            #add-point:AFTER FIELD rtkfstus
            {<point name="construct.a.page1.rtkfstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtkfstus
         ON ACTION controlp INFIELD rtkfstus
            #add-point:ON ACTION controlp INFIELD rtkfstus
            {<point name="construct.c.page1.rtkfstus" />}
            #END add-point
 
         #----<<rtkf002>>----
         #Ctrlp:construct.c.page1.rtkf002
         ON ACTION controlp INFIELD rtkf002
            #add-point:ON ACTION controlp INFIELD rtkf002
            {<point name="construct.c.page1.rtkf002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf002
            #add-point:BEFORE FIELD rtkf002
            {<point name="construct.b.page1.rtkf002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkf002
            
            #add-point:AFTER FIELD rtkf002
            {<point name="construct.a.page1.rtkf002" />}
            #END add-point
            
 
         #----<<rtkf003>>----
         #Ctrlp:construct.c.page1.rtkf003
         ON ACTION controlp INFIELD rtkf003
            #add-point:ON ACTION controlp INFIELD rtkf003
            {<point name="construct.c.page1.rtkf003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf003
            #add-point:BEFORE FIELD rtkf003
            {<point name="construct.b.page1.rtkf003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkf003
            
            #add-point:AFTER FIELD rtkf003
            {<point name="construct.a.page1.rtkf003" />}
            #END add-point
            
 
         #----<<rtkf004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf004
            #add-point:BEFORE FIELD rtkf004
            {<point name="construct.b.page1.rtkf004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkf004
            
            #add-point:AFTER FIELD rtkf004
            {<point name="construct.a.page1.rtkf004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtkf004
         ON ACTION controlp INFIELD rtkf004
            #add-point:ON ACTION controlp INFIELD rtkf004
            {<point name="construct.c.page1.rtkf004" />}
            #END add-point
 
         #----<<rtkf006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf006
            #add-point:BEFORE FIELD rtkf006
            {<point name="construct.b.page1.rtkf006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkf006
            
            #add-point:AFTER FIELD rtkf006
            {<point name="construct.a.page1.rtkf006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtkf006
         ON ACTION controlp INFIELD rtkf006
            #add-point:ON ACTION controlp INFIELD rtkf006
            {<point name="construct.c.page1.rtkf006" />}
            #END add-point
 
         #----<<rtkf007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf007
            #add-point:BEFORE FIELD rtkf007
            {<point name="construct.b.page1.rtkf007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkf007
            
            #add-point:AFTER FIELD rtkf007
            {<point name="construct.a.page1.rtkf007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtkf007
         ON ACTION controlp INFIELD rtkf007
            #add-point:ON ACTION controlp INFIELD rtkf007
            {<point name="construct.c.page1.rtkf007" />}
            #END add-point
 
         #----<<rtkf008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf008
            #add-point:BEFORE FIELD rtkf008
            {<point name="construct.b.page1.rtkf008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkf008
            
            #add-point:AFTER FIELD rtkf008
            {<point name="construct.a.page1.rtkf008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtkf008
         ON ACTION controlp INFIELD rtkf008
            #add-point:ON ACTION controlp INFIELD rtkf008
            {<point name="construct.c.page1.rtkf008" />}
            #END add-point
 
         #----<<rtkf009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf009
            #add-point:BEFORE FIELD rtkf009
            {<point name="construct.b.page1.rtkf009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkf009
            
            #add-point:AFTER FIELD rtkf009
            {<point name="construct.a.page1.rtkf009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtkf009
         ON ACTION controlp INFIELD rtkf009
            #add-point:ON ACTION controlp INFIELD rtkf009
            {<point name="construct.c.page1.rtkf009" />}
            #END add-point
 
         #----<<rtkf010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf010
            #add-point:BEFORE FIELD rtkf010
            {<point name="construct.b.page1.rtkf010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkf010
            
            #add-point:AFTER FIELD rtkf010
            {<point name="construct.a.page1.rtkf010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtkf010
         ON ACTION controlp INFIELD rtkf010
            #add-point:ON ACTION controlp INFIELD rtkf010
            {<point name="construct.c.page1.rtkf010" />}
            #END add-point
 
         #----<<rtkf011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf011
            #add-point:BEFORE FIELD rtkf011
            {<point name="construct.b.page1.rtkf011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkf011
            
            #add-point:AFTER FIELD rtkf011
            {<point name="construct.a.page1.rtkf011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rtkf011
         ON ACTION controlp INFIELD rtkf011
            #add-point:ON ACTION controlp INFIELD rtkf011
            {<point name="construct.c.page1.rtkf011" />}
            #END add-point
 
         #----<<rtkf005>>----
         #Ctrlp:construct.c.page1.rtkf005
         ON ACTION controlp INFIELD rtkf005
            #add-point:ON ACTION controlp INFIELD rtkf005
            {<point name="construct.c.page1.rtkf005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf005
            #add-point:BEFORE FIELD rtkf005
            {<point name="construct.b.page1.rtkf005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkf005
            
            #add-point:AFTER FIELD rtkf005
            {<point name="construct.a.page1.rtkf005" />}
            #END add-point
            
 
#---------------------<  Detail: page2  >---------------------
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
]]>
</section>
  <section id="artm700.default_search" ver="1" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION artm700_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " rtkf001 = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="artm700.delete" ver="1" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION artm700_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_rtkf_m.rtkf001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
    SELECT UNIQUE rtkf001,rtkfunit
 INTO g_rtkf_m.rtkf001,g_rtkf_m.rtkfunit
 FROM rtkf_t
 WHERE rtkfent = g_enterprise AND rtkf001 = g_rtkf_m.rtkf001
   
   CALL artm700_show()
   
   CALL s_transaction_begin()
   
   
 
   OPEN artm700_cl USING g_enterprise,g_rtkf_m.rtkf001
 
   IF STATUS THEN
      CALL cl_err("OPEN artm700_cl:", STATUS, 1)
      CLOSE artm700_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH artm700_cl INTO g_rtkf_m.rtkf001,g_rtkf_m.rtkf001_desc,g_rtkf_m.rtkfunit
   
   #若資料已被他人LOCK
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_rtkf_m.rtkf001,SQLCA.sqlcode,0)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL g_pk_array.clear()
      LET g_pk_array[1].values = g_rtkf_m.rtkf001
      LET g_pk_array[1].column = 'rtkf001'
 
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM rtkf_t WHERE rtkfent = g_enterprise AND rtkf001 = g_rtkf_m.rtkf001
 
                                                               
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         CALL cl_err("rtkf_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      END IF
 
      
  
      #add-point:單身刪除後 
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
 
      
      CLEAR FORM
      CALL g_rtkf_d.clear() 
      CALL g_rtkf2_d.clear()       
 
     
      CALL artm700_ui_browser_refresh()  
      CALL artm700_ui_headershow()  
      CALL artm700_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL artm700_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         LET g_wc2 = " 1=1"
         CALL artm700_browser_fill("F")
      END IF
       
   END IF
 
   CLOSE artm700_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_rtkf_m.rtkf001,'D')
    
END FUNCTION
]]>
</section>
  <section id="artm700.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION artm700_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
 
   
END FUNCTION
]]>
</section>
  <section id="artm700.description" ver="1" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000000
#+ 
#+ Filename...: artm700
#+ Description: 門店商品補貨參數維護作業
#+ Creator....: 04226(2014/04/08)
#+ Modifier...: 04226(2014/04/08)
#+ Buildtype..: 應用 i07 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="artm700.detail_reproduce" ver="1" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION artm700_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE rtkf_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE artm700_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE artm700_detail AS ",
                "SELECT * FROM rtkf_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO artm700_detail SELECT * FROM rtkf_t 
                                         WHERE rtkfent = g_enterprise AND rtkf001 = g_rtkf001_t
 
   
   #將key修正為調整後   
   UPDATE artm700_detail 
      #更新key欄位
      SET rtkf001 = g_rtkf_m.rtkf001
 
      #更新共用欄位
      #此段落由子樣板a13產生
       , rtkfownid = g_user
       , rtkfowndp = g_dept
       , rtkfcrtid = g_user
       , rtkfcrtdp = g_dept 
       , rtkfcrtdt = ld_date
       , rtkfmodid = "" 
       , rtkfmoddt = "" 
      #, rtkfstus = "Y"
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO rtkf_t SELECT * FROM artm700_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artm700_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
      #此段落由子樣板a38產生
   DROP TABLE artm700_detail_lang
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.lang0.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE artm700_detail_lang AS ",
                "SELECT * FROM imaa_t "
   PREPARE repro_imaa_t FROM ls_sql
   EXECUTE repro_imaa_t
   FREE repro_imaa_t
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO artm700_detail_lang SELECT * FROM imaa_t 
                                             WHERE imaaent = g_enterprise AND imaa001 = g_rtkf001_t
 
   
   #將key修正為調整後   
   UPDATE artm700_detail_lang 
      #更新key欄位
      SET imaa001 = g_rtkf_m.rtkf001
 
  
   #將資料塞回原table   
   INSERT INTO imaa_t SELECT * FROM artm700_detail_lang
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.lang0.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artm700_detail_lang
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.lang0.table1.a_insert"/>}
   #end add-point
 
 
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_rtkf001_t = g_rtkf_m.rtkf001
 
   
   DROP TABLE artm700_detail
   
END FUNCTION
]]>
</section>
  <section id="artm700.fetch" ver="1" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION artm700_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   #add-point:fetch段動作開始前
   {<point name="fetch.before_fetch"/>}
   #end add-point    
 
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   CALL artm700_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_rtkf_m.rtkf001 = g_browser[g_current_idx].b_rtkf001
 
   
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE rtkf001,rtkfunit
 INTO g_rtkf_m.rtkf001,g_rtkf_m.rtkfunit
 FROM rtkf_t
 WHERE rtkfent = g_enterprise AND rtkf001 = g_rtkf_m.rtkf001
   IF SQLCA.sqlcode THEN
      CALL cl_err("rtkf_t",SQLCA.sqlcode,1)
      INITIALIZE g_rtkf_m.* TO NULL
      RETURN
   END IF
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL artm700_show()
 
END FUNCTION
]]>
</section>
  <section id="artm700.fill_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION artm700_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   
   #add-point:fill_chk段other
   {<point name="fill_chk.other"/>}
   #end add-point
   
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="artm700.filter" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION artm700_filter()
 
 
 
 
 
 
 
 
                            #add-point:filter段cs_ctrl
                            {<point name="filter.cs_ctrl"/>}
                            #end add-point
                         
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
 
 
   
 
 
END FUNCTION
]]>
</section>
  <section id="artm700.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION artm700_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
 
 
 
 
 
END FUNCTION
]]>
</section>
  <section id="artm700.global" ver="1" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_rtkf_m        RECORD
       rtkf001 LIKE rtkf_t.rtkf001, 
   rtkf001_desc LIKE type_t.chr80, 
   rtkfunit LIKE rtkf_t.rtkfunit
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_rtkf_d        RECORD
       rtkfstus LIKE rtkf_t.rtkfstus, 
   rtkf002 LIKE rtkf_t.rtkf002, 
   rtkf002_desc LIKE type_t.chr500, 
   imaa009 LIKE imaa_t.imaa009, 
   imaa009_desc LIKE type_t.chr500, 
   rtkf003 LIKE rtkf_t.rtkf003, 
   rtkf003_desc LIKE type_t.chr500, 
   rtkf004 LIKE rtkf_t.rtkf004, 
   rtkf006 LIKE rtkf_t.rtkf006, 
   rtkf007 LIKE rtkf_t.rtkf007, 
   rtkf008 LIKE rtkf_t.rtkf008, 
   rtkf009 LIKE rtkf_t.rtkf009, 
   rtkf010 LIKE rtkf_t.rtkf010, 
   rtkf011 LIKE rtkf_t.rtkf011, 
   rtkf005 LIKE rtkf_t.rtkf005, 
   rtkf005_desc LIKE type_t.chr500
       END RECORD
PRIVATE TYPE type_g_rtkf2_d RECORD
       rtkf002 LIKE rtkf_t.rtkf002, 
   rtkfownid LIKE rtkf_t.rtkfownid, 
   rtkfownid_desc LIKE type_t.chr500, 
   rtkfowndp LIKE rtkf_t.rtkfowndp, 
   rtkfowndp_desc LIKE type_t.chr500, 
   rtkfcrtid LIKE rtkf_t.rtkfcrtid, 
   rtkfcrtid_desc LIKE type_t.chr500, 
   rtkfcrtdp LIKE rtkf_t.rtkfcrtdp, 
   rtkfcrtdp_desc LIKE type_t.chr500, 
   rtkfcrtdt DATETIME YEAR TO SECOND, 
   rtkfmodid LIKE rtkf_t.rtkfmodid, 
   rtkfmodid_desc LIKE type_t.chr500, 
   rtkfmoddt DATETIME YEAR TO SECOND, 
   rtkfcnfid LIKE rtkf_t.rtkfcnfid, 
   rtkfcnfid_desc LIKE type_t.chr500, 
   rtkfcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
 
#無單頭append欄位定義
DEFINE g_detail_multi_table_t    RECORD
      imaa001 LIKE imaa_t.imaa001,
      imaa009 LIKE imaa_t.imaa009
      END RECORD
 
#模組變數(Module Variables)
DEFINE g_rtkf_m          type_g_rtkf_m
DEFINE g_rtkf_m_t        type_g_rtkf_m
 
   DEFINE g_rtkf001_t LIKE rtkf_t.rtkf001
 
 
DEFINE g_rtkf_d          DYNAMIC ARRAY OF type_g_rtkf_d
DEFINE g_rtkf_d_t        type_g_rtkf_d
DEFINE g_rtkf2_d   DYNAMIC ARRAY OF type_g_rtkf2_d
DEFINE g_rtkf2_d_t type_g_rtkf2_d
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_rtkf001 LIKE rtkf_t.rtkf001
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="artm700.init" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION artm700_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
  
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
      CALL cl_set_combo_scc_part('rtkfstus','50','N,X,Y')
 
      CALL cl_set_combo_scc('rtkf004','6014') 
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL artm700_default_search()
    
END FUNCTION
]]>
</section>
  <section id="artm700.input" ver="1" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION artm700_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point    
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT rtkfstus,rtkf002,'','','',rtkf003,'',rtkf004,rtkf006,rtkf007,rtkf008,rtkf009, 
       rtkf010,rtkf011,rtkf005,'','',rtkfownid,'',rtkfowndp,'',rtkfcrtid,'',rtkfcrtdp,'',rtkfcrtdt,rtkfmodid, 
       '',rtkfmoddt,rtkfcnfid,'',rtkfcnfdt FROM rtkf_t WHERE rtkfent=? AND rtkf001=? AND rtkf002=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE artm700_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL artm700_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL artm700_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_rtkf_m.rtkf001,g_rtkf_m.rtkfunit
   
   LET lb_reproduce = FALSE
   
   #add-point:進入修改段前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
</section>
  <section id="artm700.input.body" ver="1" status="" src="s">
<![CDATA[      #Page1 預設值產生於此處
      INPUT ARRAY g_rtkf_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtkf_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artm700_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
            {<point name="input.body.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN artm700_cl USING g_enterprise,
                                               g_rtkf_m.rtkf001
 
                                               
               IF STATUS THEN
                  CALL cl_err("OPEN artm700_cl:", STATUS, 1)
                  CLOSE artm700_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_rtkf_d[l_ac].rtkf002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_rtkf_d_t.* = g_rtkf_d[l_ac].*  #BACKUP
               CALL artm700_set_entry_b(l_cmd)
               CALL artm700_set_no_entry_b(l_cmd)
               OPEN artm700_bcl USING g_enterprise,g_rtkf_m.rtkf001,
 
                                                g_rtkf_d_t.rtkf002
 
               IF STATUS THEN
                  CALL cl_err("OPEN artm700_bcl:", STATUS, 1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artm700_bcl INTO g_rtkf_d[l_ac].rtkfstus,g_rtkf_d[l_ac].rtkf002,g_rtkf_d[l_ac].rtkf002_desc, 
                      g_rtkf_d[l_ac].imaa009,g_rtkf_d[l_ac].imaa009_desc,g_rtkf_d[l_ac].rtkf003,g_rtkf_d[l_ac].rtkf003_desc, 
                      g_rtkf_d[l_ac].rtkf004,g_rtkf_d[l_ac].rtkf006,g_rtkf_d[l_ac].rtkf007,g_rtkf_d[l_ac].rtkf008, 
                      g_rtkf_d[l_ac].rtkf009,g_rtkf_d[l_ac].rtkf010,g_rtkf_d[l_ac].rtkf011,g_rtkf_d[l_ac].rtkf005, 
                      g_rtkf_d[l_ac].rtkf005_desc,g_rtkf2_d[l_ac].rtkf002,g_rtkf2_d[l_ac].rtkfownid, 
                      g_rtkf2_d[l_ac].rtkfownid_desc,g_rtkf2_d[l_ac].rtkfowndp,g_rtkf2_d[l_ac].rtkfowndp_desc, 
                      g_rtkf2_d[l_ac].rtkfcrtid,g_rtkf2_d[l_ac].rtkfcrtid_desc,g_rtkf2_d[l_ac].rtkfcrtdp, 
                      g_rtkf2_d[l_ac].rtkfcrtdp_desc,g_rtkf2_d[l_ac].rtkfcrtdt,g_rtkf2_d[l_ac].rtkfmodid, 
                      g_rtkf2_d[l_ac].rtkfmodid_desc,g_rtkf2_d[l_ac].rtkfmoddt,g_rtkf2_d[l_ac].rtkfcnfid, 
                      g_rtkf2_d[l_ac].rtkfcnfid_desc,g_rtkf2_d[l_ac].rtkfcnfdt
                  IF SQLCA.sqlcode THEN
                      CALL cl_err(g_rtkf_d_t.rtkf002,SQLCA.sqlcode,1)
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL artm700_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            LET g_detail_multi_table_t.imaa001 = g_rtkf_m.rtkf001
LET g_detail_multi_table_t.imaa009 = g_rtkf_d[l_ac].rtkf002
 
        
         BEFORE INSERT
            
            INITIALIZE g_rtkf_d_t.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtkf_d[l_ac].* TO NULL
            
            #公用欄位預設值
            #此段落由子樣板a14產生    
      LET g_rtkf2_d[l_ac].rtkfownid = g_user
      LET g_rtkf2_d[l_ac].rtkfowndp = g_dept
      LET g_rtkf2_d[l_ac].rtkfcrtid = g_user
      LET g_rtkf2_d[l_ac].rtkfcrtdp = g_dept 
      LET g_rtkf2_d[l_ac].rtkfcrtdt = cl_get_current()
      LET g_rtkf2_d[l_ac].rtkfmodid = ""
      LET g_rtkf2_d[l_ac].rtkfmoddt = ""
      #LET g_rtkf_d[l_ac].rtkfstus = ""
 
  
            
            #一般欄位預設值
                  LET g_rtkf_d[l_ac].rtkfstus = "Y"
 
 
            
            
            LET g_rtkf_d_t.* = g_rtkf_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artm700_set_entry_b(l_cmd)
            CALL artm700_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtkf_d[li_reproduce_target].* = g_rtkf_d[li_reproduce].*
               LET g_rtkf2_d[li_reproduce_target].* = g_rtkf2_d[li_reproduce].*
 
               LET g_rtkf_d[g_rtkf_d.getLength()].rtkf002 = NULL
 
            END IF
            LET g_detail_multi_table_t.imaa001 = g_rtkf_m.rtkf001
LET g_detail_multi_table_t.imaa009 = g_rtkf_d[l_ac].rtkf002
 
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM rtkf_t 
             WHERE rtkfent = g_enterprise AND rtkf001 = g_rtkf_m.rtkf001
 
               AND rtkf002 = g_rtkf_d[l_ac].rtkf002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               {<point name="input.body.b_insert" mark="Y"/>}
               #end add-point
               INSERT INTO rtkf_t
                           (rtkfent,
                            rtkf001,rtkfunit,
                            rtkf002
                            ,rtkfstus,rtkf003,rtkf004,rtkf006,rtkf007,rtkf008,rtkf009,rtkf010,rtkf011,rtkf005,rtkfownid,rtkfowndp,rtkfcrtid,rtkfcrtdp,rtkfcrtdt,rtkfmodid,rtkfmoddt,rtkfcnfid,rtkfcnfdt) 
                     VALUES(g_enterprise,
                            g_rtkf_m.rtkf001,g_rtkf_m.rtkfunit,
                            g_rtkf_d[l_ac].rtkf002
                            ,g_rtkf_d[l_ac].rtkfstus,g_rtkf_d[l_ac].rtkf003,g_rtkf_d[l_ac].rtkf004,g_rtkf_d[l_ac].rtkf006, 
                                g_rtkf_d[l_ac].rtkf007,g_rtkf_d[l_ac].rtkf008,g_rtkf_d[l_ac].rtkf009, 
                                g_rtkf_d[l_ac].rtkf010,g_rtkf_d[l_ac].rtkf011,g_rtkf_d[l_ac].rtkf005, 
                                g_rtkf2_d[l_ac].rtkfownid,g_rtkf2_d[l_ac].rtkfowndp,g_rtkf2_d[l_ac].rtkfcrtid, 
                                g_rtkf2_d[l_ac].rtkfcrtdp,g_rtkf2_d[l_ac].rtkfcrtdt,g_rtkf2_d[l_ac].rtkfmodid, 
                                g_rtkf2_d[l_ac].rtkfmoddt,g_rtkf2_d[l_ac].rtkfcnfid,g_rtkf2_d[l_ac].rtkfcnfdt) 

               #add-point:單身新增中
               {<point name="input.body.m_insert"/>}
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_rtkf_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("rtkf_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_rtkf_m.rtkf001 = g_detail_multi_table_t.imaa001 AND
         g_rtkf_d[l_ac].rtkf002 = g_detail_multi_table_t.imaa009 AND
         g_rtkf_d[l_ac].imaa009 =  THEN
         ELSE 
            LET l_var_keys[01] = g_rtkf_m.rtkf001
            LET l_field_keys[01] = 'imaa001'
            LET l_vars[01] = g_rtkf_d[l_ac].imaa009
            LET l_fields[01] = 'imaa009'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'imaaent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.imaa001
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imaa_t')
         END IF 
 
               #add-point:input段-after_insert
               {<point name="input.body.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
            {<point name="input.body.after_insert"/>}
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_rtkf_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_rtkf_d.deleteElement(l_ac)
               NEXT FIELD rtkf002
            END IF
            IF g_rtkf_d_t.rtkf002 IS NOT NULL
 
               THEN
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete"/>}
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               IF artm700_before_delete() THEN 
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE artm700_bcl
               LET l_count = g_rtkf_d.getLength()
            END IF 
            
            #add-point:單身刪除後
            {<point name="input.body.a_delete"/>}
            #end add-point
              
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body.after_delete"/>}
            #end add-point
 
         #---------------------<  Detail: page1  >---------------------
         #----<<rtkfstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkfstus
            #add-point:BEFORE FIELD rtkfstus
            {<point name="input.b.page1.rtkfstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkfstus
            
            #add-point:AFTER FIELD rtkfstus
            {<point name="input.a.page1.rtkfstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkfstus
            #add-point:ON CHANGE rtkfstus
            {<point name="input.g.page1.rtkfstus" />}
            #END add-point
 
         #----<<rtkf002>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkf002
            
            #add-point:AFTER FIELD rtkf002
            {<point name="input.a.page1.rtkf002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf002
            #add-point:BEFORE FIELD rtkf002
            {<point name="input.b.page1.rtkf002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkf002
            #add-point:ON CHANGE rtkf002
            {<point name="input.g.page1.rtkf002" />}
            #END add-point
 
         #----<<rtkf003>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkf003
            
            #add-point:AFTER FIELD rtkf003
            {<point name="input.a.page1.rtkf003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf003
            #add-point:BEFORE FIELD rtkf003
            {<point name="input.b.page1.rtkf003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkf003
            #add-point:ON CHANGE rtkf003
            {<point name="input.g.page1.rtkf003" />}
            #END add-point
 
         #----<<rtkf004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf004
            #add-point:BEFORE FIELD rtkf004
            {<point name="input.b.page1.rtkf004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkf004
            
            #add-point:AFTER FIELD rtkf004
            {<point name="input.a.page1.rtkf004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkf004
            #add-point:ON CHANGE rtkf004
            {<point name="input.g.page1.rtkf004" />}
            #END add-point
 
         #----<<rtkf006>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkf006
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtkf_d[l_ac].rtkf006,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtkf006
            END IF
 
 
            #add-point:AFTER FIELD rtkf006
            {<point name="input.a.page1.rtkf006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf006
            #add-point:BEFORE FIELD rtkf006
            {<point name="input.b.page1.rtkf006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkf006
            #add-point:ON CHANGE rtkf006
            {<point name="input.g.page1.rtkf006" />}
            #END add-point
 
         #----<<rtkf007>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkf007
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtkf_d[l_ac].rtkf007,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtkf007
            END IF
 
 
            #add-point:AFTER FIELD rtkf007
            {<point name="input.a.page1.rtkf007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf007
            #add-point:BEFORE FIELD rtkf007
            {<point name="input.b.page1.rtkf007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkf007
            #add-point:ON CHANGE rtkf007
            {<point name="input.g.page1.rtkf007" />}
            #END add-point
 
         #----<<rtkf008>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkf008
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtkf_d[l_ac].rtkf008,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtkf008
            END IF
 
 
            #add-point:AFTER FIELD rtkf008
            {<point name="input.a.page1.rtkf008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf008
            #add-point:BEFORE FIELD rtkf008
            {<point name="input.b.page1.rtkf008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkf008
            #add-point:ON CHANGE rtkf008
            {<point name="input.g.page1.rtkf008" />}
            #END add-point
 
         #----<<rtkf009>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkf009
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtkf_d[l_ac].rtkf009,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtkf009
            END IF
 
 
            #add-point:AFTER FIELD rtkf009
            {<point name="input.a.page1.rtkf009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf009
            #add-point:BEFORE FIELD rtkf009
            {<point name="input.b.page1.rtkf009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkf009
            #add-point:ON CHANGE rtkf009
            {<point name="input.g.page1.rtkf009" />}
            #END add-point
 
         #----<<rtkf010>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkf010
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtkf_d[l_ac].rtkf010,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtkf010
            END IF
 
 
            #add-point:AFTER FIELD rtkf010
            {<point name="input.a.page1.rtkf010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf010
            #add-point:BEFORE FIELD rtkf010
            {<point name="input.b.page1.rtkf010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkf010
            #add-point:ON CHANGE rtkf010
            {<point name="input.g.page1.rtkf010" />}
            #END add-point
 
         #----<<rtkf011>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkf011
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_rtkf_d[l_ac].rtkf011,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtkf011
            END IF
 
 
            #add-point:AFTER FIELD rtkf011
            {<point name="input.a.page1.rtkf011" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf011
            #add-point:BEFORE FIELD rtkf011
            {<point name="input.b.page1.rtkf011" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkf011
            #add-point:ON CHANGE rtkf011
            {<point name="input.g.page1.rtkf011" />}
            #END add-point
 
         #----<<rtkf005>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkf005
            
            #add-point:AFTER FIELD rtkf005
            {<point name="input.a.page1.rtkf005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf005
            #add-point:BEFORE FIELD rtkf005
            {<point name="input.b.page1.rtkf005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkf005
            #add-point:ON CHANGE rtkf005
            {<point name="input.g.page1.rtkf005" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<rtkfstus>>----
         #Ctrlp:input.c.page1.rtkfstus
         ON ACTION controlp INFIELD rtkfstus
            #add-point:ON ACTION controlp INFIELD rtkfstus
            {<point name="input.c.page1.rtkfstus" />}
            #END add-point
 
         #----<<rtkf002>>----
         #Ctrlp:input.c.page1.rtkf002
         ON ACTION controlp INFIELD rtkf002
            #add-point:ON ACTION controlp INFIELD rtkf002
            {<point name="input.c.page1.rtkf002" />}
            #END add-point
 
         #----<<rtkf003>>----
         #Ctrlp:input.c.page1.rtkf003
         ON ACTION controlp INFIELD rtkf003
            #add-point:ON ACTION controlp INFIELD rtkf003
            {<point name="input.c.page1.rtkf003" />}
            #END add-point
 
         #----<<rtkf004>>----
         #Ctrlp:input.c.page1.rtkf004
         ON ACTION controlp INFIELD rtkf004
            #add-point:ON ACTION controlp INFIELD rtkf004
            {<point name="input.c.page1.rtkf004" />}
            #END add-point
 
         #----<<rtkf006>>----
         #Ctrlp:input.c.page1.rtkf006
         ON ACTION controlp INFIELD rtkf006
            #add-point:ON ACTION controlp INFIELD rtkf006
            {<point name="input.c.page1.rtkf006" />}
            #END add-point
 
         #----<<rtkf007>>----
         #Ctrlp:input.c.page1.rtkf007
         ON ACTION controlp INFIELD rtkf007
            #add-point:ON ACTION controlp INFIELD rtkf007
            {<point name="input.c.page1.rtkf007" />}
            #END add-point
 
         #----<<rtkf008>>----
         #Ctrlp:input.c.page1.rtkf008
         ON ACTION controlp INFIELD rtkf008
            #add-point:ON ACTION controlp INFIELD rtkf008
            {<point name="input.c.page1.rtkf008" />}
            #END add-point
 
         #----<<rtkf009>>----
         #Ctrlp:input.c.page1.rtkf009
         ON ACTION controlp INFIELD rtkf009
            #add-point:ON ACTION controlp INFIELD rtkf009
            {<point name="input.c.page1.rtkf009" />}
            #END add-point
 
         #----<<rtkf010>>----
         #Ctrlp:input.c.page1.rtkf010
         ON ACTION controlp INFIELD rtkf010
            #add-point:ON ACTION controlp INFIELD rtkf010
            {<point name="input.c.page1.rtkf010" />}
            #END add-point
 
         #----<<rtkf011>>----
         #Ctrlp:input.c.page1.rtkf011
         ON ACTION controlp INFIELD rtkf011
            #add-point:ON ACTION controlp INFIELD rtkf011
            {<point name="input.c.page1.rtkf011" />}
            #END add-point
 
         #----<<rtkf005>>----
         #Ctrlp:input.c.page1.rtkf005
         ON ACTION controlp INFIELD rtkf005
            #add-point:ON ACTION controlp INFIELD rtkf005
            {<point name="input.c.page1.rtkf005" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_rtkf_d[l_ac].* = g_rtkf_d_t.*
               CLOSE artm700_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_rtkf_d[l_ac].rtkf002,-263,1)
               LET g_rtkf_d[l_ac].* = g_rtkf_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_rtkf2_d[l_ac].rtkfmodid = g_user 
LET g_rtkf2_d[l_ac].rtkfmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
         
               UPDATE rtkf_t SET (rtkf001,rtkfstus,rtkf002,rtkf003,rtkf004,rtkf006,rtkf007,rtkf008,rtkf009, 
                   rtkf010,rtkf011,rtkf005,rtkfownid,rtkfowndp,rtkfcrtid,rtkfcrtdp,rtkfcrtdt,rtkfmodid, 
                   rtkfmoddt,rtkfcnfid,rtkfcnfdt) = (g_rtkf_m.rtkf001,g_rtkf_d[l_ac].rtkfstus,g_rtkf_d[l_ac].rtkf002, 
                   g_rtkf_d[l_ac].rtkf003,g_rtkf_d[l_ac].rtkf004,g_rtkf_d[l_ac].rtkf006,g_rtkf_d[l_ac].rtkf007, 
                   g_rtkf_d[l_ac].rtkf008,g_rtkf_d[l_ac].rtkf009,g_rtkf_d[l_ac].rtkf010,g_rtkf_d[l_ac].rtkf011, 
                   g_rtkf_d[l_ac].rtkf005,g_rtkf2_d[l_ac].rtkfownid,g_rtkf2_d[l_ac].rtkfowndp,g_rtkf2_d[l_ac].rtkfcrtid, 
                   g_rtkf2_d[l_ac].rtkfcrtdp,g_rtkf2_d[l_ac].rtkfcrtdt,g_rtkf2_d[l_ac].rtkfmodid,g_rtkf2_d[l_ac].rtkfmoddt, 
                   g_rtkf2_d[l_ac].rtkfcnfid,g_rtkf2_d[l_ac].rtkfcnfdt)
                WHERE rtkfent = g_enterprise AND rtkf001 = g_rtkf_m.rtkf001 
 
                 AND rtkf002 = g_rtkf_d_t.rtkf002 #項次   
 
                 
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("rtkf_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   CALL cl_err("rtkf_t",SQLCA.sqlcode,1)  
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkf_m.rtkf001
               LET gs_keys_bak[1] = g_rtkf001_t
               LET gs_keys[2] = g_rtkf_d[g_detail_idx].rtkf002
               LET gs_keys_bak[2] = g_rtkf_d_t.rtkf002
               CALL artm700_update_b('rtkf_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_rtkf_m.rtkf001 = g_detail_multi_table_t.imaa001 AND
         g_rtkf_d[l_ac].rtkf002 = g_detail_multi_table_t.imaa009 AND
         g_rtkf_d[l_ac].imaa009 =  THEN
         ELSE 
            LET l_var_keys[01] = g_rtkf_m.rtkf001
            LET l_field_keys[01] = 'imaa001'
            LET l_vars[01] = g_rtkf_d[l_ac].imaa009
            LET l_fields[01] = 'imaa009'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'imaaent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.imaa001
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imaa_t')
         END IF 
 
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF cl_null(g_rtkf_d[1].rtkf002) THEN
               CALL g_rtkf_d.deleteElement(1)
               NEXT FIELD rtkf002
            END IF
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_rtkf_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_rtkf_d.getLength()+1
            
      END INPUT
 
 
      
      DISPLAY ARRAY g_rtkf2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL artm700_b_fill(g_wc2) 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL artm700_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
         
      END DISPLAY
 
      
 
      
      #add-point:input段more_input
      {<point name="input.more_inputarray"/>}
      #end add-point    
      
      BEFORE DIALOG
         #add-point:input段before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD rtkf001
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD rtkfstus
               WHEN "s_detail2"
                  NEXT FIELD rtkf002_2
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #add-point:input段after_input
   {<point name="input.after_input"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="artm700.input.head" ver="1" status="" src="s">
<![CDATA[   
      #單頭段
      INPUT BY NAME g_rtkf_m.rtkf001,g_rtkf_m.rtkfunit 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前
            {<point name="input.head.b_input"/>}
            #end add-point
          
         #---------------------------<  Master  >---------------------------
         #----<<rtkf001>>----
         #此段落由子樣板a02產生
         AFTER FIELD rtkf001
            
            #add-point:AFTER FIELD rtkf001
            {<point name="input.a.rtkf001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD rtkf001
            #add-point:BEFORE FIELD rtkf001
            {<point name="input.b.rtkf001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE rtkf001
            #add-point:ON CHANGE rtkf001
            {<point name="input.g.rtkf001" />}
            #END add-point
 
         #----<<rtkfunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rtkfunit
            #add-point:BEFORE FIELD rtkfunit
            {<point name="input.b.rtkfunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD rtkfunit
            
            #add-point:AFTER FIELD rtkfunit
            {<point name="input.a.rtkfunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE rtkfunit
            #add-point:ON CHANGE rtkfunit
            {<point name="input.g.rtkfunit" />}
            #END add-point
 
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<rtkf001>>----
         #Ctrlp:input.c.rtkf001
         ON ACTION controlp INFIELD rtkf001
            #add-point:ON ACTION controlp INFIELD rtkf001
            {<point name="input.c.rtkf001" />}
            #END add-point
 
         #----<<rtkfunit>>----
         #Ctrlp:input.c.rtkfunit
         ON ACTION controlp INFIELD rtkfunit
            #add-point:ON ACTION controlp INFIELD rtkfunit
            {<point name="input.c.rtkfunit" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
 
            #多語言處理
            
                
            CALL cl_showmsg()
            DISPLAY BY NAME g_rtkf_m.rtkf001             
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
            
               UPDATE rtkf_t SET (rtkf001,rtkfunit) = (g_rtkf_m.rtkf001,g_rtkf_m.rtkfunit)
                WHERE rtkfent = g_enterprise AND rtkf001 = g_rtkf001_t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("rtkf_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("rtkf_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkf_m.rtkf001
               LET gs_keys_bak[1] = g_rtkf001_t
               LET gs_keys[2] = g_rtkf_d[g_detail_idx].rtkf002
               LET gs_keys_bak[2] = g_rtkf_d_t.rtkf002
               CALL artm700_update_b('rtkf_t',gs_keys,gs_keys_bak,"'1'")
                     
                     LET g_rtkf001_t = g_rtkf_m.rtkf001
 
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     CALL s_transaction_end('Y','0')
               END CASE
            
            ELSE    
               #add-point:單頭新增
               {<point name="input.head.a_insert"/>}
               #end add-point
                                 
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL artm700_detail_reproduce()
               END IF
            END IF
           #controlp
                     
           LET g_rtkf001_t = g_rtkf_m.rtkf001
 
           
           #若單身還沒有輸入資料, 強制切換至單身
           IF cl_null(g_rtkf_d[1].rtkf002) THEN
              CALL g_rtkf_d.deleteElement(1)
              NEXT FIELD rtkf002
           END IF
 
      END INPUT
]]>
</section>
  <section id="artm700.insert" ver="1" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION artm700_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_rtkf_d.clear()
   CALL g_rtkf2_d.clear()
 
 
   INITIALIZE g_rtkf_m.* LIKE rtkf_t.*             #DEFAULT 設定
   LET g_rtkf001_t = NULL
 
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL artm700_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_rtkf_m.* = g_rtkf_m_t.*
         CALL artm700_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      CALL g_rtkf_d.clear()
      CALL g_rtkf2_d.clear()
 
      
      #add-point:單頭輸入後2
      {<point name="insert.after_insert2"/>}
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   LET g_state = "Y"
   
   LET g_rtkf001_t = g_rtkf_m.rtkf001
 
   
   LET g_wc = g_wc,  
              " OR ( rtkfent = '" ||g_enterprise|| "' AND ",
              " rtkf001 = '", g_rtkf_m.rtkf001 CLIPPED, "' "
 
              , ") "
   
END FUNCTION
]]>
</section>
  <section id="artm700.insert_b" ver="1" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION artm700_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
 
   
END FUNCTION
]]>
</section>
  <section id="artm700.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION artm700_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL artm700_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="artm700.main" ver="1" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT rtkf001,'',rtkfunit FROM rtkf_t WHERE rtkfent= ? AND rtkf001=? FOR UPDATE" 

   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE artm700_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_artm700 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL artm700_init()   
 
      #進入選單 Menu (="N")
      CALL artm700_ui_dialog() 
	  
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_artm700
      
   END IF 
   
   CLOSE artm700_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="artm700.modify" ver="1" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION artm700_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_rtkf_m.rtkf001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
    SELECT UNIQUE rtkf001,rtkfunit
 INTO g_rtkf_m.rtkf001,g_rtkf_m.rtkfunit
 FROM rtkf_t
 WHERE rtkfent = g_enterprise AND rtkf001 = g_rtkf_m.rtkf001
 
   ERROR ""
  
   LET g_rtkf001_t = g_rtkf_m.rtkf001
 
   CALL s_transaction_begin()
   
   OPEN artm700_cl USING g_enterprise,g_rtkf_m.rtkf001
 
   IF STATUS THEN
      CALL cl_err("OPEN artm700_cl:", STATUS, 1)
      CLOSE artm700_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH artm700_cl INTO g_rtkf_m.rtkf001,g_rtkf_m.rtkf001_desc,g_rtkf_m.rtkfunit
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_rtkf_m.rtkf001,SQLCA.sqlcode,0)
      CLOSE artm700_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CALL s_transaction_end('Y','0')
 
   CALL artm700_show()
   WHILE TRUE
      LET g_rtkf001_t = g_rtkf_m.rtkf001
 
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL artm700_input("u")     #欄位更改
      
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_rtkf_m.* = g_rtkf_m_t.*
         CALL artm700_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_rtkf_m.rtkf001 != g_rtkf001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前
         {<point name="modify.b_key_update" mark="Y"/>}
         #end add-point
         
         #更新單頭key值
         UPDATE rtkf_t SET rtkf001 = g_rtkf_m.rtkf001
 
          WHERE rtkfent = g_enterprise AND rtkf001 = g_rtkf001_t
 
         #add-point:單頭(偽)修改中
         {<point name="modify.m_key_update"/>}
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("rtkf_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("rtkf_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
 
 
         
         #add-point:單頭(偽)修改後
         {<point name="modify.a_key_update"/>}
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_rtkf_m.rtkf001,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE artm700_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_rtkf_m.rtkf001,'U')
 
   CALL artm700_b_fill("1=1")
   
END FUNCTION   
]]>
</section>
  <section id="artm700.modify_detail_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION artm700_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "rtkfstus"
      WHEN "s_detail2"
         LET ls_return = "rtkf002_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
</section>
  <section id="artm700.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="artm700.query" ver="1" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION artm700_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #add-point:query開始前
   {<point name="query.befroe_query"/>}
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_rtkf_d.clear()
   CALL g_rtkf2_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL artm700_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL artm700_browser_fill(g_wc)
      CALL artm700_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL artm700_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL artm700_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
]]>
</section>
  <section id="artm700.ref_show" ver="1" status="" src="s">
<![CDATA[#+ 帶出reference資料
PRIVATE FUNCTION artm700_ref_show()
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define
   {<point name="ref_show.define"/>}
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_rtkf_d.getLength()
      #add-point:ref_show段d_reference
      {<point name="ref_show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_rtkf2_d.getLength()
      #add-point:ref_show段d2_reference
      {<point name="ref_show.body2.reference"/>}
      #end add-point
   END FOR
 
   
   LET l_ac = l_ac_t
 
END FUNCTION
]]>
</section>
  <section id="artm700.reproduce" ver="1" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION artm700_reproduce()
   DEFINE l_newno     LIKE rtkf_t.rtkf001 
   DEFINE l_oldno     LIKE rtkf_t.rtkf001 
 
   DEFINE l_master    RECORD LIKE rtkf_t.*
   DEFINE l_detail    RECORD LIKE rtkf_t.*
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_rtkf_m.rtkf001 IS NULL
 
      THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_rtkf001_t = g_rtkf_m.rtkf001
 
   
   LET g_rtkf_m.rtkf001 = ""
 
    
   CALL artm700_set_entry('a')
   CALL artm700_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL artm700_input("r")
   
      LET g_rtkf_m.rtkf001_desc = ''
   DISPLAY BY NAME g_rtkf_m.rtkf001_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              " rtkf001 = '", l_newno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="artm700.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION artm700_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("rtkf001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="artm700.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION artm700_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="artm700.set_no_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION artm700_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("rtkf001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="artm700.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION artm700_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b段"/>}
   #end add-point 
   
END FUNCTION
]]>
</section>
  <section id="artm700.show" ver="1" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION artm700_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL artm700_b_fill(g_wc2) #單身填充
      CALL artm700_b_fill2('0') #單身填充
   END IF
   
   
 
   LET g_rtkf_m_t.* = g_rtkf_m.*      #保存單頭舊值
   
   DISPLAY BY NAME g_rtkf_m.rtkf001,g_rtkf_m.rtkf001_desc,g_rtkf_m.rtkfunit
   CALL artm700_b_fill(g_wc2_table1)                 #單身
   CALL artm700_b_fill2('0') #單身填充
 
   CALL artm700_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point   
   
END FUNCTION
]]>
</section>
  <section id="artm700.state_change" ver="1" status="" src="s">
<![CDATA[    
]]>
</section>
  <section id="artm700.ui_browser_refresh" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION artm700_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_rtkf001 = g_rtkf_m.rtkf001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="artm700.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION artm700_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
      #add-point:ui_detailshow段more
      {<point name="ui_detailshow.more"/>}
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point 
   
END FUNCTION
]]>
</section>
  <section id="artm700.ui_dialog" ver="1" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION artm700_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx   LIKE type_t.num5
   DEFINE ls_wc    STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point  
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL artm700_browser_fill("")
 
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_rtkf001 = g_rtkf001_t
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_rtkf_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL artm700_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_rtkf2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL artm700_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)      
            
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段define
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL artm700_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL artm700_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #ACTION表單列
         
         ON ACTION first
            CALL artm700_fetch('F')
            LET g_current_row = g_current_idx         
          
         ON ACTION previous
            CALL artm700_fetch('P')
            LET g_current_row = g_current_idx
          
         ON ACTION jump
            CALL artm700_fetch('/')
            LET g_current_row = g_current_idx
        
         ON ACTION next
            CALL artm700_fetch('N')
            LET g_current_row = g_current_idx
         
         ON ACTION last
            CALL artm700_fetch('L')
            LET g_current_row = g_current_idx
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL artm700_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL artm700_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL artm700_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
 
         ON ACTION delete
 
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN 
               CALL artm700_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
            END IF
 
 
         ON ACTION insert
 
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN 
               CALL artm700_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify
 
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL artm700_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify_detail
 
            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL artm700_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL artm700_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
 
         ON ACTION reproduce
 
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN 
               CALL artm700_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
         
         
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL g_pk_array.clear()
            LET g_pk_array[1].values = g_rtkf_m.rtkf001
            LET g_pk_array[1].column = 'rtkf001'
 
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL g_pk_array.clear()
            LET g_pk_array[1].values = g_rtkf_m.rtkf001
            LET g_pk_array[1].column = 'rtkf001'
 
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
         
         ON ACTION followup
            CALL g_pk_array.clear()
            LET g_pk_array[1].values = g_rtkf_m.rtkf001
            LET g_pk_array[1].column = 'rtkf001'
 
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(cl_get_today())
            CALL cl_user_overview_set_follow_pic()
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
]]>
</section>
  <section id="artm700.ui_headershow" ver="1" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION artm700_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_rtkf_m.rtkf001 = g_browser[g_current_idx].b_rtkf001   
 
    SELECT UNIQUE rtkf001,rtkfunit
 INTO g_rtkf_m.rtkf001,g_rtkf_m.rtkfunit
 FROM rtkf_t
 WHERE rtkfent = g_enterprise AND rtkf001 = g_rtkf_m.rtkf001
   CALL artm700_show()
   
END FUNCTION
]]>
</section>
  <section id="artm700.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION artm700_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
 
 
END FUNCTION
]]>
</section>
  <section id="artm700.update_b" ver="1" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION artm700_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
 
   
END FUNCTION
]]>
</section>
</add_points>