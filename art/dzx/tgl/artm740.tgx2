{<section id="artm740.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0011(2016-05-23 17:15:35), PR版次:
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:
#+ Build......: 000256
#+ Filename...: artm740
#+ Description: 自動補貨補貨資料模型維護作業
#+ Creator....: 04226(2014-04-21 15:40:19)
#+ Modifier...: 08172 -SD/PR-
{</section>}
 
 
 
{<section id="artm740.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"
{<point name="global.import"/>}
#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_rtkh_m        RECORD
       rtkhunit LIKE rtkh_t.rtkhunit, 
   rtkhunit_desc LIKE type_t.chr80, 
   rtkh001 LIKE rtkh_t.rtkh001, 
   rtkhl003 LIKE type_t.chr500, 
   rtkhl004 LIKE type_t.chr500, 
   rtkhstus LIKE rtkh_t.rtkhstus, 
   rtkh002 LIKE rtkh_t.rtkh002, 
   rtkh003 LIKE rtkh_t.rtkh003, 
   rtkh004 LIKE rtkh_t.rtkh004, 
   rtkh005 LIKE rtkh_t.rtkh005, 
   rtkh005_desc LIKE type_t.chr80, 
   rtkh006 LIKE rtkh_t.rtkh006, 
   rtkh007 LIKE rtkh_t.rtkh007, 
   rtkh008 LIKE rtkh_t.rtkh008, 
   rtkh009 LIKE rtkh_t.rtkh009, 
   rtkh010 LIKE rtkh_t.rtkh010, 
   rtkh011 LIKE rtkh_t.rtkh011, 
   rtkh012 LIKE rtkh_t.rtkh012, 
   rtkh013 LIKE rtkh_t.rtkh013, 
   rtkh014 LIKE rtkh_t.rtkh014, 
   rtkhownid LIKE rtkh_t.rtkhownid, 
   rtkhownid_desc LIKE type_t.chr80, 
   rtkhowndp LIKE rtkh_t.rtkhowndp, 
   rtkhowndp_desc LIKE type_t.chr80, 
   rtkhcrtid LIKE rtkh_t.rtkhcrtid, 
   rtkhcrtid_desc LIKE type_t.chr80, 
   rtkhcrtdp LIKE rtkh_t.rtkhcrtdp, 
   rtkhcrtdp_desc LIKE type_t.chr80, 
   rtkhcrtdt LIKE rtkh_t.rtkhcrtdt, 
   rtkhmodid LIKE rtkh_t.rtkhmodid, 
   rtkhmodid_desc LIKE type_t.chr80, 
   rtkhcnfid LIKE rtkh_t.rtkhcnfid, 
   rtkhcnfid_desc LIKE type_t.chr80, 
   rtkhmoddt LIKE rtkh_t.rtkhmoddt, 
   rtkhcnfdt LIKE rtkh_t.rtkhcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_rtki_d        RECORD
       rtkiunit LIKE rtki_t.rtkiunit, 
   rtki002 LIKE rtki_t.rtki002, 
   rtki002_desc LIKE type_t.chr500, 
   rtki003 LIKE rtki_t.rtki003, 
   rtki004 LIKE rtki_t.rtki004, 
   rtki005 LIKE rtki_t.rtki005, 
   rtki006 LIKE rtki_t.rtki006, 
   rtki007 LIKE rtki_t.rtki007
       END RECORD
PRIVATE TYPE type_g_rtki2_d RECORD
       rtkjunit LIKE rtkj_t.rtkjunit, 
   rtkj002 LIKE rtkj_t.rtkj002, 
   rtkj002_desc LIKE type_t.chr500, 
   rtkj101 LIKE rtkj_t.rtkj101, 
   rtkj102 LIKE rtkj_t.rtkj102, 
   rtkj103 LIKE rtkj_t.rtkj103, 
   rtkj104 LIKE rtkj_t.rtkj104, 
   rtkj105 LIKE rtkj_t.rtkj105, 
   rtkj106 LIKE rtkj_t.rtkj106, 
   rtkj107 LIKE rtkj_t.rtkj107, 
   rtkj108 LIKE rtkj_t.rtkj108, 
   rtkj109 LIKE rtkj_t.rtkj109, 
   rtkj110 LIKE rtkj_t.rtkj110, 
   rtkj111 LIKE rtkj_t.rtkj111, 
   rtkj112 LIKE rtkj_t.rtkj112, 
   rtkj113 LIKE rtkj_t.rtkj113, 
   rtkj114 LIKE rtkj_t.rtkj114, 
   rtkj115 LIKE rtkj_t.rtkj115, 
   rtkj116 LIKE rtkj_t.rtkj116, 
   rtkj117 LIKE rtkj_t.rtkj117, 
   rtkj118 LIKE rtkj_t.rtkj118, 
   rtkj119 LIKE rtkj_t.rtkj119, 
   rtkj120 LIKE rtkj_t.rtkj120, 
   rtkj121 LIKE rtkj_t.rtkj121, 
   rtkj122 LIKE rtkj_t.rtkj122, 
   rtkj123 LIKE rtkj_t.rtkj123, 
   rtkj124 LIKE rtkj_t.rtkj124, 
   rtkj125 LIKE rtkj_t.rtkj125, 
   rtkj126 LIKE rtkj_t.rtkj126, 
   rtkj127 LIKE rtkj_t.rtkj127, 
   rtkj128 LIKE rtkj_t.rtkj128, 
   rtkj129 LIKE rtkj_t.rtkj129, 
   rtkj130 LIKE rtkj_t.rtkj130, 
   rtkj131 LIKE rtkj_t.rtkj131, 
   rtkj132 LIKE rtkj_t.rtkj132, 
   rtkj133 LIKE rtkj_t.rtkj133, 
   rtkj134 LIKE rtkj_t.rtkj134, 
   rtkj135 LIKE rtkj_t.rtkj135, 
   rtkj136 LIKE rtkj_t.rtkj136, 
   rtkj137 LIKE rtkj_t.rtkj137, 
   rtkj138 LIKE rtkj_t.rtkj138, 
   rtkj139 LIKE rtkj_t.rtkj139, 
   rtkj140 LIKE rtkj_t.rtkj140, 
   rtkj141 LIKE rtkj_t.rtkj141, 
   rtkj142 LIKE rtkj_t.rtkj142, 
   rtkj143 LIKE rtkj_t.rtkj143, 
   rtkj144 LIKE rtkj_t.rtkj144, 
   rtkj145 LIKE rtkj_t.rtkj145, 
   rtkj146 LIKE rtkj_t.rtkj146, 
   rtkj147 LIKE rtkj_t.rtkj147, 
   rtkj148 LIKE rtkj_t.rtkj148, 
   rtkj149 LIKE rtkj_t.rtkj149, 
   rtkj150 LIKE rtkj_t.rtkj150, 
   rtkj151 LIKE rtkj_t.rtkj151, 
   rtkj152 LIKE rtkj_t.rtkj152
       END RECORD
PRIVATE TYPE type_g_rtki3_d RECORD
       rtklunit LIKE rtkl_t.rtklunit, 
   rtkl002 LIKE rtkl_t.rtkl002, 
   rtkl002_desc LIKE type_t.chr500, 
   rtkl101 LIKE rtkl_t.rtkl101, 
   rtkl102 LIKE rtkl_t.rtkl102, 
   rtkl103 LIKE rtkl_t.rtkl103, 
   rtkl104 LIKE rtkl_t.rtkl104, 
   rtkl105 LIKE rtkl_t.rtkl105, 
   rtkl106 LIKE rtkl_t.rtkl106, 
   rtkl107 LIKE rtkl_t.rtkl107
       END RECORD
PRIVATE TYPE type_g_rtki4_d RECORD
       rtkkunit LIKE rtkk_t.rtkkunit, 
   rtkk002 LIKE rtkk_t.rtkk002, 
   rtkk003 LIKE rtkk_t.rtkk003, 
   rtkk004 LIKE rtkk_t.rtkk004
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_rtkhunit LIKE rtkh_t.rtkhunit,
   b_rtkhunit_desc LIKE type_t.chr80,
      b_rtkh001 LIKE rtkh_t.rtkh001,
   b_rtkh001_desc LIKE type_t.chr80,
   b_rtkh001_desc_desc LIKE type_t.chr80
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>} 
#end add-point
       
#模組變數(Module Variables)
DEFINE g_rtkh_m          type_g_rtkh_m
DEFINE g_rtkh_m_t        type_g_rtkh_m
DEFINE g_rtkh_m_o        type_g_rtkh_m
DEFINE g_rtkh_m_mask_o   type_g_rtkh_m #轉換遮罩前資料
DEFINE g_rtkh_m_mask_n   type_g_rtkh_m #轉換遮罩後資料
 
   DEFINE g_rtkh001_t LIKE rtkh_t.rtkh001
 
 
DEFINE g_rtki_d          DYNAMIC ARRAY OF type_g_rtki_d
DEFINE g_rtki_d_t        type_g_rtki_d
DEFINE g_rtki_d_o        type_g_rtki_d
DEFINE g_rtki_d_mask_o   DYNAMIC ARRAY OF type_g_rtki_d #轉換遮罩前資料
DEFINE g_rtki_d_mask_n   DYNAMIC ARRAY OF type_g_rtki_d #轉換遮罩後資料
DEFINE g_rtki2_d          DYNAMIC ARRAY OF type_g_rtki2_d
DEFINE g_rtki2_d_t        type_g_rtki2_d
DEFINE g_rtki2_d_o        type_g_rtki2_d
DEFINE g_rtki2_d_mask_o   DYNAMIC ARRAY OF type_g_rtki2_d #轉換遮罩前資料
DEFINE g_rtki2_d_mask_n   DYNAMIC ARRAY OF type_g_rtki2_d #轉換遮罩後資料
DEFINE g_rtki3_d          DYNAMIC ARRAY OF type_g_rtki3_d
DEFINE g_rtki3_d_t        type_g_rtki3_d
DEFINE g_rtki3_d_o        type_g_rtki3_d
DEFINE g_rtki3_d_mask_o   DYNAMIC ARRAY OF type_g_rtki3_d #轉換遮罩前資料
DEFINE g_rtki3_d_mask_n   DYNAMIC ARRAY OF type_g_rtki3_d #轉換遮罩後資料
DEFINE g_rtki4_d          DYNAMIC ARRAY OF type_g_rtki4_d
DEFINE g_rtki4_d_t        type_g_rtki4_d
DEFINE g_rtki4_d_o        type_g_rtki4_d
DEFINE g_rtki4_d_mask_o   DYNAMIC ARRAY OF type_g_rtki4_d #轉換遮罩前資料
DEFINE g_rtki4_d_mask_n   DYNAMIC ARRAY OF type_g_rtki4_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
DEFINE g_master_multi_table_t    RECORD
      rtkhl001 LIKE rtkhl_t.rtkhl001,
      rtkhl003 LIKE rtkhl_t.rtkhl003,
      rtkhl004 LIKE rtkhl_t.rtkhl004
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
{<point name="global.argv"/>}
#end add-point
{</section>}
 
{<section id="artm740.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT rtkhunit,'',rtkh001,'','',rtkhstus,rtkh002,rtkh003,rtkh004,rtkh005,'', 
       rtkh006,rtkh007,rtkh008,rtkh009,rtkh010,rtkh011,rtkh012,rtkh013,rtkh014,rtkhownid,'',rtkhowndp, 
       '',rtkhcrtid,'',rtkhcrtdp,'',rtkhcrtdt,rtkhmodid,'',rtkhcnfid,'',rtkhmoddt,rtkhcnfdt", 
                      " FROM rtkh_t",
                      " WHERE rtkhent= ? AND rtkh001=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artm740_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.rtkhunit,t0.rtkh001,t0.rtkhstus,t0.rtkh002,t0.rtkh003,t0.rtkh004, 
       t0.rtkh005,t0.rtkh006,t0.rtkh007,t0.rtkh008,t0.rtkh009,t0.rtkh010,t0.rtkh011,t0.rtkh012,t0.rtkh013, 
       t0.rtkh014,t0.rtkhownid,t0.rtkhowndp,t0.rtkhcrtid,t0.rtkhcrtdp,t0.rtkhcrtdt,t0.rtkhmodid,t0.rtkhcnfid, 
       t0.rtkhmoddt,t0.rtkhcnfdt,t1.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 ,t6.ooefl003 ,t7.ooag011 , 
       t8.ooag011",
               " FROM rtkh_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtkhunit AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.rtkhownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.rtkhowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=t0.rtkhcrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent="||g_enterprise||" AND t6.ooefl001=t0.rtkhcrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=t0.rtkhmodid  ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent="||g_enterprise||" AND t8.ooag001=t0.rtkhcnfid  ",
 
               " WHERE t0.rtkhent = " ||g_enterprise|| " AND t0.rtkh001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE artm740_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_artm740 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL artm740_init()   
 
      #進入選單 Menu (="N")
      CALL artm740_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_artm740
      
   END IF 
   
   CLOSE artm740_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
{</section>}
 
{<section id="artm740.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION artm740_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   {<point name="init.pre_function"/>}
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('rtkhstus','50','N,Y,X')
 
      CALL cl_set_combo_scc('rtkh002','6301') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
   CALL g_idx_group.addAttribute("'4',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL artm740_default_search()
    
END FUNCTION
{</section>}
 
{<section id="artm740.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION artm740_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   {<point name="ui_dialog.pre_function"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL artm740_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_rtkh_m.* TO NULL
         CALL g_rtki_d.clear()
         CALL g_rtki2_d.clear()
         CALL g_rtki3_d.clear()
         CALL g_rtki4_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL artm740_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL artm740_fetch('') # reload data
               LET l_ac = 1
               CALL artm740_ui_detailshow() #Setting the current row 
         
               CALL artm740_idx_chk()
               #NEXT FIELD rtki002
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_rtki_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artm740_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL artm740_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_rtki2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artm740_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL artm740_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_rtki3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artm740_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body3.before_row"
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL artm740_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body3.before_display"
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為 name="ui_dialog.body3.action"
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_rtki4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artm740_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[4] = l_ac
               CALL g_idx_group.addAttribute("'4',",l_ac)
               
               #add-point:page4, before row動作 name="ui_dialog.body4.before_row"
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               #顯示單身筆數
               CALL artm740_idx_chk()
               #add-point:page4自定義行為 name="ui_dialog.body4.before_display"
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為 name="ui_dialog.body4.action"
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL artm740_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL artm740_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL artm740_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL artm740_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL artm740_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL artm740_set_act_visible()   
            CALL artm740_set_act_no_visible()
            IF NOT (g_rtkh_m.rtkh001 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " rtkhent = " ||g_enterprise|| " AND",
                                  " rtkh001 = '", g_rtkh_m.rtkh001, "' "
 
               #填到對應位置
               CALL artm740_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtkh_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtki_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtkj_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtkl_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtkk_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL artm740_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtkh_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtki_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtkj_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtkl_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtkk_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL artm740_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL artm740_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL artm740_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL artm740_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artm740_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL artm740_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artm740_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL artm740_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artm740_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL artm740_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artm740_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL artm740_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artm740_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_rtki_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_rtki2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_rtki3_d)
                  LET g_export_id[3]   = "s_detail3"
                  LET g_export_node[4] = base.typeInfo.create(g_rtki4_d)
                  LET g_export_id[4]   = "s_detail4"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD rtki002
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL artm740_modify()
               #add-point:ON ACTION modify name="menu.modify"
               {<point name="menu.modify" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL artm740_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               {<point name="menu.modify_detail" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL artm740_delete()
               #add-point:ON ACTION delete name="menu.delete"
               {<point name="menu.delete" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL artm740_insert()
               #add-point:ON ACTION insert name="menu.insert"
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               {<point name="menu.quickprint" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL artm740_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               {<point name="menu.reproduce" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL artm740_query()
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL artm740_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL artm740_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL artm740_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      {<point name="ui_dialog.exit_dialog"/>}
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
{</section>}
 
{<section id="artm740.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION artm740_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   {<point name="browser_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   {<point name="browser_fill.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT rtkh001 ",
                      " FROM rtkh_t ",
                      " ",
                      " LEFT JOIN rtki_t ON rtkient = rtkhent AND rtkh001 = rtki001 ", "  ",
                      #add-point:browser_fill段sql(rtki_t1) name="browser_fill.cnt.join.}"
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN rtkj_t ON rtkjent = rtkhent AND rtkh001 = rtkj001", "  ",
                      #add-point:browser_fill段sql(rtkj_t1) name="browser_fill.cnt.join.rtkj_t1"
                      {<point name="browser_fill.cnt.join.rtkj_t1"/>}
                      #end add-point
 
                      " LEFT JOIN rtkl_t ON rtklent = rtkhent AND rtkh001 = rtkl001", "  ",
                      #add-point:browser_fill段sql(rtkl_t1) name="browser_fill.cnt.join.rtkl_t1"
                      {<point name="browser_fill.cnt.join.rtkl_t1"/>}
                      #end add-point
 
                      " LEFT JOIN rtkk_t ON rtkkent = rtkhent AND rtkh001 = rtkk001", "  ",
                      #add-point:browser_fill段sql(rtkk_t1) name="browser_fill.cnt.join.rtkk_t1"
                      {<point name="browser_fill.cnt.join.rtkk_t1"/>}
                      #end add-point
 
 
 
                      " LEFT JOIN rtkhl_t ON rtkhlent = "||g_enterprise||" AND rtkh001 = rtkhl001 AND rtkhl002 = '",g_dlang,"' ", 
                      " ", 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
 
 
                      " WHERE rtkhent = " ||g_enterprise|| " AND rtkient = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("rtkh_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT rtkh001 ",
                      " FROM rtkh_t ", 
                      "  ",
                      "  LEFT JOIN rtkhl_t ON rtkhlent = "||g_enterprise||" AND rtkh001 = rtkhl001 AND rtkhl002 = '",g_dlang,"' ",
                      " WHERE rtkhent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("rtkh_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_rtkh_m.* TO NULL
      CALL g_rtki_d.clear()        
      CALL g_rtki2_d.clear() 
      CALL g_rtki3_d.clear() 
      CALL g_rtki4_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.rtkhunit,t0.rtkh001 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.rtkhstus,t0.rtkhunit,t0.rtkh001,t1.ooefl003 ,t2.rtkhl003 ,t3.rtkhl004 ", 

                  " FROM rtkh_t t0",
                  "  ",
                  "  LEFT JOIN rtki_t ON rtkient = rtkhent AND rtkh001 = rtki001 ", "  ", 
                  #add-point:browser_fill段sql(rtki_t1) name="browser_fill.join.rtki_t1"
                  {<point name="browser_fill.join.rtki_t1"/>}
                  #end add-point
                  "  LEFT JOIN rtkj_t ON rtkjent = rtkhent AND rtkh001 = rtkj001", "  ", 
                  #add-point:browser_fill段sql(rtkj_t1) name="browser_fill.join.rtkj_t1"
                  {<point name="browser_fill.join.rtkj_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN rtkl_t ON rtklent = rtkhent AND rtkh001 = rtkl001", "  ", 
                  #add-point:browser_fill段sql(rtkl_t1) name="browser_fill.join.rtkl_t1"
                  {<point name="browser_fill.join.rtkl_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN rtkk_t ON rtkkent = rtkhent AND rtkh001 = rtkk001", "  ", 
                  #add-point:browser_fill段sql(rtkk_t1) name="browser_fill.join.rtkk_t1"
                  {<point name="browser_fill.join.rtkk_t1"/>}
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
 
 
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtkhunit AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN rtkhl_t t2 ON t2.rtkhlent="||g_enterprise||" AND t2.rtkhl001=t0.rtkh001 AND t2.rtkhl002='"||g_dlang||"' ",
               " LEFT JOIN rtkhl_t t3 ON t3.rtkhlent="||g_enterprise||" AND t3.rtkhl001=t0.rtkh001 AND t3.rtkhl002='"||g_dlang||"' ",
 
                  " WHERE t0.rtkhent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("rtkh_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.rtkhstus,t0.rtkhunit,t0.rtkh001,t1.ooefl003 ,t2.rtkhl003 ,t3.rtkhl004 ", 

                  " FROM rtkh_t t0",
                  "  ",
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtkhunit AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN rtkhl_t t2 ON t2.rtkhlent="||g_enterprise||" AND t2.rtkhl001=t0.rtkh001 AND t2.rtkhl002='"||g_dlang||"' ",
               " LEFT JOIN rtkhl_t t3 ON t3.rtkhlent="||g_enterprise||" AND t3.rtkhl001=t0.rtkh001 AND t3.rtkhl002='"||g_dlang||"' ",
 
                  " WHERE t0.rtkhent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("rtkh_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY rtkh001 ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"rtkh_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      {<point name="browser_fill.open"/>}
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_rtkhunit,g_browser[g_cnt].b_rtkh001, 
          g_browser[g_cnt].b_rtkhunit_desc,g_browser[g_cnt].b_rtkh001_desc,g_browser[g_cnt].b_rtkh001_desc_desc 

         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         {<point name="browser_fill.reference"/>}
         #end add-point
      
         #遮罩相關處理
         CALL artm740_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/valid.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/void.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_rtkh001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
{</section>}
 
{<section id="artm740.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION artm740_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   {<point name="ui_headershow.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   {<point name="ui_headershow.define"/>} 
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   {<point name="ui_headershow.pre_function"/>}
   #end add-point
   
   LET g_rtkh_m.rtkh001 = g_browser[g_current_idx].b_rtkh001   
 
   EXECUTE artm740_master_referesh USING g_rtkh_m.rtkh001 INTO g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001,g_rtkh_m.rtkhstus, 
       g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007, 
       g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013, 
       g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhcnfid,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt, 
       g_rtkh_m.rtkhunit_desc,g_rtkh_m.rtkhownid_desc,g_rtkh_m.rtkhowndp_desc,g_rtkh_m.rtkhcrtid_desc, 
       g_rtkh_m.rtkhcrtdp_desc,g_rtkh_m.rtkhmodid_desc,g_rtkh_m.rtkhcnfid_desc
   
   CALL artm740_rtkh_t_mask()
   CALL artm740_show()
      
END FUNCTION
{</section>}
 
{<section id="artm740.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION artm740_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   {<point name="ui_detailshow.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   {<point name="ui_detailshow.define"/>} 
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
{</section>}
 
{<section id="artm740.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION artm740_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   {<point name="ui_browser_refresh.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   {<point name="ui_browser_refresh.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   {<point name="ui_browser_refresh.pre_function"/>}
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_rtkh001 = g_rtkh_m.rtkh001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
{</section>}
 
{<section id="artm740.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION artm740_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   {<point name="cs.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   {<point name="cs.pre_function"/>}
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_rtkh_m.* TO NULL
   CALL g_rtki_d.clear()        
   CALL g_rtki2_d.clear() 
   CALL g_rtki3_d.clear() 
   CALL g_rtki4_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON rtkhunit,rtkh001,rtkhl003,rtkhl004,rtkhstus,rtkh002,rtkh003,rtkh004, 
          rtkh005,rtkh006,rtkh007,rtkh008,rtkh009,rtkh010,rtkh011,rtkh012,rtkh013,rtkh014,rtkhownid, 
          rtkhowndp,rtkhcrtid,rtkhcrtdp,rtkhcrtdt,rtkhmodid,rtkhcnfid,rtkhmoddt,rtkhcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<rtkhcrtdt>>----
         AFTER FIELD rtkhcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<rtkhmoddt>>----
         AFTER FIELD rtkhmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtkhcnfdt>>----
         AFTER FIELD rtkhcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtkhpstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.rtkhunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkhunit
            #add-point:ON ACTION controlp INFIELD rtkhunit name="construct.c.rtkhunit"
            {<point name="construct.c.rtkhunit" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhunit
            #add-point:BEFORE FIELD rtkhunit name="construct.b.rtkhunit"
            {<point name="construct.b.rtkhunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkhunit
            
            #add-point:AFTER FIELD rtkhunit name="construct.a.rtkhunit"
            {<point name="construct.a.rtkhunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkh001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh001
            #add-point:ON ACTION controlp INFIELD rtkh001 name="construct.c.rtkh001"
            {<point name="construct.c.rtkh001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh001
            #add-point:BEFORE FIELD rtkh001 name="construct.b.rtkh001"
            {<point name="construct.b.rtkh001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh001
            
            #add-point:AFTER FIELD rtkh001 name="construct.a.rtkh001"
            {<point name="construct.a.rtkh001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhl003
            #add-point:BEFORE FIELD rtkhl003 name="construct.b.rtkhl003"
            {<point name="construct.b.rtkhl003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkhl003
            
            #add-point:AFTER FIELD rtkhl003 name="construct.a.rtkhl003"
            {<point name="construct.a.rtkhl003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkhl003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkhl003
            #add-point:ON ACTION controlp INFIELD rtkhl003 name="construct.c.rtkhl003"
            {<point name="construct.c.rtkhl003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhl004
            #add-point:BEFORE FIELD rtkhl004 name="construct.b.rtkhl004"
            {<point name="construct.b.rtkhl004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkhl004
            
            #add-point:AFTER FIELD rtkhl004 name="construct.a.rtkhl004"
            {<point name="construct.a.rtkhl004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkhl004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkhl004
            #add-point:ON ACTION controlp INFIELD rtkhl004 name="construct.c.rtkhl004"
            {<point name="construct.c.rtkhl004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhstus
            #add-point:BEFORE FIELD rtkhstus name="construct.b.rtkhstus"
            {<point name="construct.b.rtkhstus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkhstus
            
            #add-point:AFTER FIELD rtkhstus name="construct.a.rtkhstus"
            {<point name="construct.a.rtkhstus" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkhstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkhstus
            #add-point:ON ACTION controlp INFIELD rtkhstus name="construct.c.rtkhstus"
            {<point name="construct.c.rtkhstus" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh002
            #add-point:BEFORE FIELD rtkh002 name="construct.b.rtkh002"
            {<point name="construct.b.rtkh002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh002
            
            #add-point:AFTER FIELD rtkh002 name="construct.a.rtkh002"
            {<point name="construct.a.rtkh002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkh002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh002
            #add-point:ON ACTION controlp INFIELD rtkh002 name="construct.c.rtkh002"
            {<point name="construct.c.rtkh002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh003
            #add-point:BEFORE FIELD rtkh003 name="construct.b.rtkh003"
            {<point name="construct.b.rtkh003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh003
            
            #add-point:AFTER FIELD rtkh003 name="construct.a.rtkh003"
            {<point name="construct.a.rtkh003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkh003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh003
            #add-point:ON ACTION controlp INFIELD rtkh003 name="construct.c.rtkh003"
            {<point name="construct.c.rtkh003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh004
            #add-point:BEFORE FIELD rtkh004 name="construct.b.rtkh004"
            {<point name="construct.b.rtkh004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh004
            
            #add-point:AFTER FIELD rtkh004 name="construct.a.rtkh004"
            {<point name="construct.a.rtkh004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkh004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh004
            #add-point:ON ACTION controlp INFIELD rtkh004 name="construct.c.rtkh004"
            {<point name="construct.c.rtkh004" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtkh005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh005
            #add-point:ON ACTION controlp INFIELD rtkh005 name="construct.c.rtkh005"
            {<point name="construct.c.rtkh005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh005
            #add-point:BEFORE FIELD rtkh005 name="construct.b.rtkh005"
            {<point name="construct.b.rtkh005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh005
            
            #add-point:AFTER FIELD rtkh005 name="construct.a.rtkh005"
            {<point name="construct.a.rtkh005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh006
            #add-point:BEFORE FIELD rtkh006 name="construct.b.rtkh006"
            {<point name="construct.b.rtkh006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh006
            
            #add-point:AFTER FIELD rtkh006 name="construct.a.rtkh006"
            {<point name="construct.a.rtkh006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkh006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh006
            #add-point:ON ACTION controlp INFIELD rtkh006 name="construct.c.rtkh006"
            {<point name="construct.c.rtkh006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh007
            #add-point:BEFORE FIELD rtkh007 name="construct.b.rtkh007"
            {<point name="construct.b.rtkh007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh007
            
            #add-point:AFTER FIELD rtkh007 name="construct.a.rtkh007"
            {<point name="construct.a.rtkh007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkh007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh007
            #add-point:ON ACTION controlp INFIELD rtkh007 name="construct.c.rtkh007"
            {<point name="construct.c.rtkh007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh008
            #add-point:BEFORE FIELD rtkh008 name="construct.b.rtkh008"
            {<point name="construct.b.rtkh008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh008
            
            #add-point:AFTER FIELD rtkh008 name="construct.a.rtkh008"
            {<point name="construct.a.rtkh008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkh008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh008
            #add-point:ON ACTION controlp INFIELD rtkh008 name="construct.c.rtkh008"
            {<point name="construct.c.rtkh008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh009
            #add-point:BEFORE FIELD rtkh009 name="construct.b.rtkh009"
            {<point name="construct.b.rtkh009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh009
            
            #add-point:AFTER FIELD rtkh009 name="construct.a.rtkh009"
            {<point name="construct.a.rtkh009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkh009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh009
            #add-point:ON ACTION controlp INFIELD rtkh009 name="construct.c.rtkh009"
            {<point name="construct.c.rtkh009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh010
            #add-point:BEFORE FIELD rtkh010 name="construct.b.rtkh010"
            {<point name="construct.b.rtkh010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh010
            
            #add-point:AFTER FIELD rtkh010 name="construct.a.rtkh010"
            {<point name="construct.a.rtkh010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkh010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh010
            #add-point:ON ACTION controlp INFIELD rtkh010 name="construct.c.rtkh010"
            {<point name="construct.c.rtkh010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh011
            #add-point:BEFORE FIELD rtkh011 name="construct.b.rtkh011"
            {<point name="construct.b.rtkh011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh011
            
            #add-point:AFTER FIELD rtkh011 name="construct.a.rtkh011"
            {<point name="construct.a.rtkh011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkh011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh011
            #add-point:ON ACTION controlp INFIELD rtkh011 name="construct.c.rtkh011"
            {<point name="construct.c.rtkh011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh012
            #add-point:BEFORE FIELD rtkh012 name="construct.b.rtkh012"
            {<point name="construct.b.rtkh012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh012
            
            #add-point:AFTER FIELD rtkh012 name="construct.a.rtkh012"
            {<point name="construct.a.rtkh012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkh012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh012
            #add-point:ON ACTION controlp INFIELD rtkh012 name="construct.c.rtkh012"
            {<point name="construct.c.rtkh012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh013
            #add-point:BEFORE FIELD rtkh013 name="construct.b.rtkh013"
            {<point name="construct.b.rtkh013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh013
            
            #add-point:AFTER FIELD rtkh013 name="construct.a.rtkh013"
            {<point name="construct.a.rtkh013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkh013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh013
            #add-point:ON ACTION controlp INFIELD rtkh013 name="construct.c.rtkh013"
            {<point name="construct.c.rtkh013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh014
            #add-point:BEFORE FIELD rtkh014 name="construct.b.rtkh014"
            {<point name="construct.b.rtkh014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh014
            
            #add-point:AFTER FIELD rtkh014 name="construct.a.rtkh014"
            {<point name="construct.a.rtkh014" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkh014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh014
            #add-point:ON ACTION controlp INFIELD rtkh014 name="construct.c.rtkh014"
            {<point name="construct.c.rtkh014" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtkhownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkhownid
            #add-point:ON ACTION controlp INFIELD rtkhownid name="construct.c.rtkhownid"
            {<point name="construct.c.rtkhownid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhownid
            #add-point:BEFORE FIELD rtkhownid name="construct.b.rtkhownid"
            {<point name="construct.b.rtkhownid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkhownid
            
            #add-point:AFTER FIELD rtkhownid name="construct.a.rtkhownid"
            {<point name="construct.a.rtkhownid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkhowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkhowndp
            #add-point:ON ACTION controlp INFIELD rtkhowndp name="construct.c.rtkhowndp"
            {<point name="construct.c.rtkhowndp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhowndp
            #add-point:BEFORE FIELD rtkhowndp name="construct.b.rtkhowndp"
            {<point name="construct.b.rtkhowndp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkhowndp
            
            #add-point:AFTER FIELD rtkhowndp name="construct.a.rtkhowndp"
            {<point name="construct.a.rtkhowndp" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkhcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkhcrtid
            #add-point:ON ACTION controlp INFIELD rtkhcrtid name="construct.c.rtkhcrtid"
            {<point name="construct.c.rtkhcrtid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhcrtid
            #add-point:BEFORE FIELD rtkhcrtid name="construct.b.rtkhcrtid"
            {<point name="construct.b.rtkhcrtid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkhcrtid
            
            #add-point:AFTER FIELD rtkhcrtid name="construct.a.rtkhcrtid"
            {<point name="construct.a.rtkhcrtid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkhcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkhcrtdp
            #add-point:ON ACTION controlp INFIELD rtkhcrtdp name="construct.c.rtkhcrtdp"
            {<point name="construct.c.rtkhcrtdp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhcrtdp
            #add-point:BEFORE FIELD rtkhcrtdp name="construct.b.rtkhcrtdp"
            {<point name="construct.b.rtkhcrtdp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkhcrtdp
            
            #add-point:AFTER FIELD rtkhcrtdp name="construct.a.rtkhcrtdp"
            {<point name="construct.a.rtkhcrtdp" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhcrtdt
            #add-point:BEFORE FIELD rtkhcrtdt name="construct.b.rtkhcrtdt"
            {<point name="construct.b.rtkhcrtdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtkhmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkhmodid
            #add-point:ON ACTION controlp INFIELD rtkhmodid name="construct.c.rtkhmodid"
            {<point name="construct.c.rtkhmodid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhmodid
            #add-point:BEFORE FIELD rtkhmodid name="construct.b.rtkhmodid"
            {<point name="construct.b.rtkhmodid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkhmodid
            
            #add-point:AFTER FIELD rtkhmodid name="construct.a.rtkhmodid"
            {<point name="construct.a.rtkhmodid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkhcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkhcnfid
            #add-point:ON ACTION controlp INFIELD rtkhcnfid name="construct.c.rtkhcnfid"
            {<point name="construct.c.rtkhcnfid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhcnfid
            #add-point:BEFORE FIELD rtkhcnfid name="construct.b.rtkhcnfid"
            {<point name="construct.b.rtkhcnfid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkhcnfid
            
            #add-point:AFTER FIELD rtkhcnfid name="construct.a.rtkhcnfid"
            {<point name="construct.a.rtkhcnfid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhmoddt
            #add-point:BEFORE FIELD rtkhmoddt name="construct.b.rtkhmoddt"
            {<point name="construct.b.rtkhmoddt" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhcnfdt
            #add-point:BEFORE FIELD rtkhcnfdt name="construct.b.rtkhcnfdt"
            {<point name="construct.b.rtkhcnfdt" />}
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON rtkiunit,rtki002,rtki003,rtki004,rtki005,rtki006,rtki007
           FROM s_detail1[1].rtkiunit,s_detail1[1].rtki002,s_detail1[1].rtki003,s_detail1[1].rtki004, 
               s_detail1[1].rtki005,s_detail1[1].rtki006,s_detail1[1].rtki007
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkiunit
            #add-point:BEFORE FIELD rtkiunit name="construct.b.page1.rtkiunit"
            {<point name="construct.b.page1.rtkiunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkiunit
            
            #add-point:AFTER FIELD rtkiunit name="construct.a.page1.rtkiunit"
            {<point name="construct.a.page1.rtkiunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtkiunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkiunit
            #add-point:ON ACTION controlp INFIELD rtkiunit name="construct.c.page1.rtkiunit"
            {<point name="construct.c.page1.rtkiunit" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.rtki002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtki002
            #add-point:ON ACTION controlp INFIELD rtki002 name="construct.c.page1.rtki002"
            {<point name="construct.c.page1.rtki002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtki002
            #add-point:BEFORE FIELD rtki002 name="construct.b.page1.rtki002"
            {<point name="construct.b.page1.rtki002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtki002
            
            #add-point:AFTER FIELD rtki002 name="construct.a.page1.rtki002"
            {<point name="construct.a.page1.rtki002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtki003
            #add-point:BEFORE FIELD rtki003 name="construct.b.page1.rtki003"
            {<point name="construct.b.page1.rtki003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtki003
            
            #add-point:AFTER FIELD rtki003 name="construct.a.page1.rtki003"
            {<point name="construct.a.page1.rtki003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtki003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtki003
            #add-point:ON ACTION controlp INFIELD rtki003 name="construct.c.page1.rtki003"
            {<point name="construct.c.page1.rtki003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtki004
            #add-point:BEFORE FIELD rtki004 name="construct.b.page1.rtki004"
            {<point name="construct.b.page1.rtki004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtki004
            
            #add-point:AFTER FIELD rtki004 name="construct.a.page1.rtki004"
            {<point name="construct.a.page1.rtki004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtki004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtki004
            #add-point:ON ACTION controlp INFIELD rtki004 name="construct.c.page1.rtki004"
            {<point name="construct.c.page1.rtki004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtki005
            #add-point:BEFORE FIELD rtki005 name="construct.b.page1.rtki005"
            {<point name="construct.b.page1.rtki005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtki005
            
            #add-point:AFTER FIELD rtki005 name="construct.a.page1.rtki005"
            {<point name="construct.a.page1.rtki005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtki005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtki005
            #add-point:ON ACTION controlp INFIELD rtki005 name="construct.c.page1.rtki005"
            {<point name="construct.c.page1.rtki005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtki006
            #add-point:BEFORE FIELD rtki006 name="construct.b.page1.rtki006"
            {<point name="construct.b.page1.rtki006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtki006
            
            #add-point:AFTER FIELD rtki006 name="construct.a.page1.rtki006"
            {<point name="construct.a.page1.rtki006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtki006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtki006
            #add-point:ON ACTION controlp INFIELD rtki006 name="construct.c.page1.rtki006"
            {<point name="construct.c.page1.rtki006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtki007
            #add-point:BEFORE FIELD rtki007 name="construct.b.page1.rtki007"
            {<point name="construct.b.page1.rtki007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtki007
            
            #add-point:AFTER FIELD rtki007 name="construct.a.page1.rtki007"
            {<point name="construct.a.page1.rtki007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtki007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtki007
            #add-point:ON ACTION controlp INFIELD rtki007 name="construct.c.page1.rtki007"
            {<point name="construct.c.page1.rtki007" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON rtkjunit,rtkj002,rtkj101,rtkj102,rtkj103,rtkj104,rtkj105,rtkj106,rtkj107, 
          rtkj108,rtkj109,rtkj110,rtkj111,rtkj112,rtkj113,rtkj114,rtkj115,rtkj116,rtkj117,rtkj118,rtkj119, 
          rtkj120,rtkj121,rtkj122,rtkj123,rtkj124,rtkj125,rtkj126,rtkj127,rtkj128,rtkj129,rtkj130,rtkj131, 
          rtkj132,rtkj133,rtkj134,rtkj135,rtkj136,rtkj137,rtkj138,rtkj139,rtkj140,rtkj141,rtkj142,rtkj143, 
          rtkj144,rtkj145,rtkj146,rtkj147,rtkj148,rtkj149,rtkj150,rtkj151,rtkj152
           FROM s_detail2[1].rtkjunit,s_detail2[1].rtkj002,s_detail2[1].rtkj101,s_detail2[1].rtkj102, 
               s_detail2[1].rtkj103,s_detail2[1].rtkj104,s_detail2[1].rtkj105,s_detail2[1].rtkj106,s_detail2[1].rtkj107, 
               s_detail2[1].rtkj108,s_detail2[1].rtkj109,s_detail2[1].rtkj110,s_detail2[1].rtkj111,s_detail2[1].rtkj112, 
               s_detail2[1].rtkj113,s_detail2[1].rtkj114,s_detail2[1].rtkj115,s_detail2[1].rtkj116,s_detail2[1].rtkj117, 
               s_detail2[1].rtkj118,s_detail2[1].rtkj119,s_detail2[1].rtkj120,s_detail2[1].rtkj121,s_detail2[1].rtkj122, 
               s_detail2[1].rtkj123,s_detail2[1].rtkj124,s_detail2[1].rtkj125,s_detail2[1].rtkj126,s_detail2[1].rtkj127, 
               s_detail2[1].rtkj128,s_detail2[1].rtkj129,s_detail2[1].rtkj130,s_detail2[1].rtkj131,s_detail2[1].rtkj132, 
               s_detail2[1].rtkj133,s_detail2[1].rtkj134,s_detail2[1].rtkj135,s_detail2[1].rtkj136,s_detail2[1].rtkj137, 
               s_detail2[1].rtkj138,s_detail2[1].rtkj139,s_detail2[1].rtkj140,s_detail2[1].rtkj141,s_detail2[1].rtkj142, 
               s_detail2[1].rtkj143,s_detail2[1].rtkj144,s_detail2[1].rtkj145,s_detail2[1].rtkj146,s_detail2[1].rtkj147, 
               s_detail2[1].rtkj148,s_detail2[1].rtkj149,s_detail2[1].rtkj150,s_detail2[1].rtkj151,s_detail2[1].rtkj152 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkjunit
            #add-point:BEFORE FIELD rtkjunit name="construct.b.page2.rtkjunit"
            {<point name="construct.b.page2.rtkjunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkjunit
            
            #add-point:AFTER FIELD rtkjunit name="construct.a.page2.rtkjunit"
            {<point name="construct.a.page2.rtkjunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkjunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkjunit
            #add-point:ON ACTION controlp INFIELD rtkjunit name="construct.c.page2.rtkjunit"
            {<point name="construct.c.page2.rtkjunit" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.rtkj002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj002
            #add-point:ON ACTION controlp INFIELD rtkj002 name="construct.c.page2.rtkj002"
            {<point name="construct.c.page2.rtkj002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj002
            #add-point:BEFORE FIELD rtkj002 name="construct.b.page2.rtkj002"
            {<point name="construct.b.page2.rtkj002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj002
            
            #add-point:AFTER FIELD rtkj002 name="construct.a.page2.rtkj002"
            {<point name="construct.a.page2.rtkj002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj101
            #add-point:BEFORE FIELD rtkj101 name="construct.b.page2.rtkj101"
            {<point name="construct.b.page2.rtkj101" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj101
            
            #add-point:AFTER FIELD rtkj101 name="construct.a.page2.rtkj101"
            {<point name="construct.a.page2.rtkj101" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj101
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj101
            #add-point:ON ACTION controlp INFIELD rtkj101 name="construct.c.page2.rtkj101"
            {<point name="construct.c.page2.rtkj101" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj102
            #add-point:BEFORE FIELD rtkj102 name="construct.b.page2.rtkj102"
            {<point name="construct.b.page2.rtkj102" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj102
            
            #add-point:AFTER FIELD rtkj102 name="construct.a.page2.rtkj102"
            {<point name="construct.a.page2.rtkj102" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj102
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj102
            #add-point:ON ACTION controlp INFIELD rtkj102 name="construct.c.page2.rtkj102"
            {<point name="construct.c.page2.rtkj102" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj103
            #add-point:BEFORE FIELD rtkj103 name="construct.b.page2.rtkj103"
            {<point name="construct.b.page2.rtkj103" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj103
            
            #add-point:AFTER FIELD rtkj103 name="construct.a.page2.rtkj103"
            {<point name="construct.a.page2.rtkj103" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj103
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj103
            #add-point:ON ACTION controlp INFIELD rtkj103 name="construct.c.page2.rtkj103"
            {<point name="construct.c.page2.rtkj103" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj104
            #add-point:BEFORE FIELD rtkj104 name="construct.b.page2.rtkj104"
            {<point name="construct.b.page2.rtkj104" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj104
            
            #add-point:AFTER FIELD rtkj104 name="construct.a.page2.rtkj104"
            {<point name="construct.a.page2.rtkj104" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj104
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj104
            #add-point:ON ACTION controlp INFIELD rtkj104 name="construct.c.page2.rtkj104"
            {<point name="construct.c.page2.rtkj104" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj105
            #add-point:BEFORE FIELD rtkj105 name="construct.b.page2.rtkj105"
            {<point name="construct.b.page2.rtkj105" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj105
            
            #add-point:AFTER FIELD rtkj105 name="construct.a.page2.rtkj105"
            {<point name="construct.a.page2.rtkj105" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj105
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj105
            #add-point:ON ACTION controlp INFIELD rtkj105 name="construct.c.page2.rtkj105"
            {<point name="construct.c.page2.rtkj105" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj106
            #add-point:BEFORE FIELD rtkj106 name="construct.b.page2.rtkj106"
            {<point name="construct.b.page2.rtkj106" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj106
            
            #add-point:AFTER FIELD rtkj106 name="construct.a.page2.rtkj106"
            {<point name="construct.a.page2.rtkj106" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj106
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj106
            #add-point:ON ACTION controlp INFIELD rtkj106 name="construct.c.page2.rtkj106"
            {<point name="construct.c.page2.rtkj106" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj107
            #add-point:BEFORE FIELD rtkj107 name="construct.b.page2.rtkj107"
            {<point name="construct.b.page2.rtkj107" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj107
            
            #add-point:AFTER FIELD rtkj107 name="construct.a.page2.rtkj107"
            {<point name="construct.a.page2.rtkj107" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj107
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj107
            #add-point:ON ACTION controlp INFIELD rtkj107 name="construct.c.page2.rtkj107"
            {<point name="construct.c.page2.rtkj107" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj108
            #add-point:BEFORE FIELD rtkj108 name="construct.b.page2.rtkj108"
            {<point name="construct.b.page2.rtkj108" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj108
            
            #add-point:AFTER FIELD rtkj108 name="construct.a.page2.rtkj108"
            {<point name="construct.a.page2.rtkj108" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj108
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj108
            #add-point:ON ACTION controlp INFIELD rtkj108 name="construct.c.page2.rtkj108"
            {<point name="construct.c.page2.rtkj108" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj109
            #add-point:BEFORE FIELD rtkj109 name="construct.b.page2.rtkj109"
            {<point name="construct.b.page2.rtkj109" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj109
            
            #add-point:AFTER FIELD rtkj109 name="construct.a.page2.rtkj109"
            {<point name="construct.a.page2.rtkj109" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj109
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj109
            #add-point:ON ACTION controlp INFIELD rtkj109 name="construct.c.page2.rtkj109"
            {<point name="construct.c.page2.rtkj109" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj110
            #add-point:BEFORE FIELD rtkj110 name="construct.b.page2.rtkj110"
            {<point name="construct.b.page2.rtkj110" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj110
            
            #add-point:AFTER FIELD rtkj110 name="construct.a.page2.rtkj110"
            {<point name="construct.a.page2.rtkj110" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj110
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj110
            #add-point:ON ACTION controlp INFIELD rtkj110 name="construct.c.page2.rtkj110"
            {<point name="construct.c.page2.rtkj110" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj111
            #add-point:BEFORE FIELD rtkj111 name="construct.b.page2.rtkj111"
            {<point name="construct.b.page2.rtkj111" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj111
            
            #add-point:AFTER FIELD rtkj111 name="construct.a.page2.rtkj111"
            {<point name="construct.a.page2.rtkj111" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj111
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj111
            #add-point:ON ACTION controlp INFIELD rtkj111 name="construct.c.page2.rtkj111"
            {<point name="construct.c.page2.rtkj111" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj112
            #add-point:BEFORE FIELD rtkj112 name="construct.b.page2.rtkj112"
            {<point name="construct.b.page2.rtkj112" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj112
            
            #add-point:AFTER FIELD rtkj112 name="construct.a.page2.rtkj112"
            {<point name="construct.a.page2.rtkj112" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj112
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj112
            #add-point:ON ACTION controlp INFIELD rtkj112 name="construct.c.page2.rtkj112"
            {<point name="construct.c.page2.rtkj112" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj113
            #add-point:BEFORE FIELD rtkj113 name="construct.b.page2.rtkj113"
            {<point name="construct.b.page2.rtkj113" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj113
            
            #add-point:AFTER FIELD rtkj113 name="construct.a.page2.rtkj113"
            {<point name="construct.a.page2.rtkj113" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj113
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj113
            #add-point:ON ACTION controlp INFIELD rtkj113 name="construct.c.page2.rtkj113"
            {<point name="construct.c.page2.rtkj113" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj114
            #add-point:BEFORE FIELD rtkj114 name="construct.b.page2.rtkj114"
            {<point name="construct.b.page2.rtkj114" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj114
            
            #add-point:AFTER FIELD rtkj114 name="construct.a.page2.rtkj114"
            {<point name="construct.a.page2.rtkj114" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj114
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj114
            #add-point:ON ACTION controlp INFIELD rtkj114 name="construct.c.page2.rtkj114"
            {<point name="construct.c.page2.rtkj114" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj115
            #add-point:BEFORE FIELD rtkj115 name="construct.b.page2.rtkj115"
            {<point name="construct.b.page2.rtkj115" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj115
            
            #add-point:AFTER FIELD rtkj115 name="construct.a.page2.rtkj115"
            {<point name="construct.a.page2.rtkj115" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj115
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj115
            #add-point:ON ACTION controlp INFIELD rtkj115 name="construct.c.page2.rtkj115"
            {<point name="construct.c.page2.rtkj115" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj116
            #add-point:BEFORE FIELD rtkj116 name="construct.b.page2.rtkj116"
            {<point name="construct.b.page2.rtkj116" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj116
            
            #add-point:AFTER FIELD rtkj116 name="construct.a.page2.rtkj116"
            {<point name="construct.a.page2.rtkj116" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj116
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj116
            #add-point:ON ACTION controlp INFIELD rtkj116 name="construct.c.page2.rtkj116"
            {<point name="construct.c.page2.rtkj116" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj117
            #add-point:BEFORE FIELD rtkj117 name="construct.b.page2.rtkj117"
            {<point name="construct.b.page2.rtkj117" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj117
            
            #add-point:AFTER FIELD rtkj117 name="construct.a.page2.rtkj117"
            {<point name="construct.a.page2.rtkj117" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj117
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj117
            #add-point:ON ACTION controlp INFIELD rtkj117 name="construct.c.page2.rtkj117"
            {<point name="construct.c.page2.rtkj117" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj118
            #add-point:BEFORE FIELD rtkj118 name="construct.b.page2.rtkj118"
            {<point name="construct.b.page2.rtkj118" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj118
            
            #add-point:AFTER FIELD rtkj118 name="construct.a.page2.rtkj118"
            {<point name="construct.a.page2.rtkj118" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj118
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj118
            #add-point:ON ACTION controlp INFIELD rtkj118 name="construct.c.page2.rtkj118"
            {<point name="construct.c.page2.rtkj118" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj119
            #add-point:BEFORE FIELD rtkj119 name="construct.b.page2.rtkj119"
            {<point name="construct.b.page2.rtkj119" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj119
            
            #add-point:AFTER FIELD rtkj119 name="construct.a.page2.rtkj119"
            {<point name="construct.a.page2.rtkj119" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj119
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj119
            #add-point:ON ACTION controlp INFIELD rtkj119 name="construct.c.page2.rtkj119"
            {<point name="construct.c.page2.rtkj119" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj120
            #add-point:BEFORE FIELD rtkj120 name="construct.b.page2.rtkj120"
            {<point name="construct.b.page2.rtkj120" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj120
            
            #add-point:AFTER FIELD rtkj120 name="construct.a.page2.rtkj120"
            {<point name="construct.a.page2.rtkj120" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj120
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj120
            #add-point:ON ACTION controlp INFIELD rtkj120 name="construct.c.page2.rtkj120"
            {<point name="construct.c.page2.rtkj120" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj121
            #add-point:BEFORE FIELD rtkj121 name="construct.b.page2.rtkj121"
            {<point name="construct.b.page2.rtkj121" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj121
            
            #add-point:AFTER FIELD rtkj121 name="construct.a.page2.rtkj121"
            {<point name="construct.a.page2.rtkj121" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj121
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj121
            #add-point:ON ACTION controlp INFIELD rtkj121 name="construct.c.page2.rtkj121"
            {<point name="construct.c.page2.rtkj121" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj122
            #add-point:BEFORE FIELD rtkj122 name="construct.b.page2.rtkj122"
            {<point name="construct.b.page2.rtkj122" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj122
            
            #add-point:AFTER FIELD rtkj122 name="construct.a.page2.rtkj122"
            {<point name="construct.a.page2.rtkj122" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj122
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj122
            #add-point:ON ACTION controlp INFIELD rtkj122 name="construct.c.page2.rtkj122"
            {<point name="construct.c.page2.rtkj122" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj123
            #add-point:BEFORE FIELD rtkj123 name="construct.b.page2.rtkj123"
            {<point name="construct.b.page2.rtkj123" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj123
            
            #add-point:AFTER FIELD rtkj123 name="construct.a.page2.rtkj123"
            {<point name="construct.a.page2.rtkj123" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj123
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj123
            #add-point:ON ACTION controlp INFIELD rtkj123 name="construct.c.page2.rtkj123"
            {<point name="construct.c.page2.rtkj123" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj124
            #add-point:BEFORE FIELD rtkj124 name="construct.b.page2.rtkj124"
            {<point name="construct.b.page2.rtkj124" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj124
            
            #add-point:AFTER FIELD rtkj124 name="construct.a.page2.rtkj124"
            {<point name="construct.a.page2.rtkj124" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj124
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj124
            #add-point:ON ACTION controlp INFIELD rtkj124 name="construct.c.page2.rtkj124"
            {<point name="construct.c.page2.rtkj124" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj125
            #add-point:BEFORE FIELD rtkj125 name="construct.b.page2.rtkj125"
            {<point name="construct.b.page2.rtkj125" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj125
            
            #add-point:AFTER FIELD rtkj125 name="construct.a.page2.rtkj125"
            {<point name="construct.a.page2.rtkj125" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj125
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj125
            #add-point:ON ACTION controlp INFIELD rtkj125 name="construct.c.page2.rtkj125"
            {<point name="construct.c.page2.rtkj125" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj126
            #add-point:BEFORE FIELD rtkj126 name="construct.b.page2.rtkj126"
            {<point name="construct.b.page2.rtkj126" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj126
            
            #add-point:AFTER FIELD rtkj126 name="construct.a.page2.rtkj126"
            {<point name="construct.a.page2.rtkj126" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj126
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj126
            #add-point:ON ACTION controlp INFIELD rtkj126 name="construct.c.page2.rtkj126"
            {<point name="construct.c.page2.rtkj126" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj127
            #add-point:BEFORE FIELD rtkj127 name="construct.b.page2.rtkj127"
            {<point name="construct.b.page2.rtkj127" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj127
            
            #add-point:AFTER FIELD rtkj127 name="construct.a.page2.rtkj127"
            {<point name="construct.a.page2.rtkj127" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj127
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj127
            #add-point:ON ACTION controlp INFIELD rtkj127 name="construct.c.page2.rtkj127"
            {<point name="construct.c.page2.rtkj127" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj128
            #add-point:BEFORE FIELD rtkj128 name="construct.b.page2.rtkj128"
            {<point name="construct.b.page2.rtkj128" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj128
            
            #add-point:AFTER FIELD rtkj128 name="construct.a.page2.rtkj128"
            {<point name="construct.a.page2.rtkj128" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj128
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj128
            #add-point:ON ACTION controlp INFIELD rtkj128 name="construct.c.page2.rtkj128"
            {<point name="construct.c.page2.rtkj128" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj129
            #add-point:BEFORE FIELD rtkj129 name="construct.b.page2.rtkj129"
            {<point name="construct.b.page2.rtkj129" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj129
            
            #add-point:AFTER FIELD rtkj129 name="construct.a.page2.rtkj129"
            {<point name="construct.a.page2.rtkj129" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj129
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj129
            #add-point:ON ACTION controlp INFIELD rtkj129 name="construct.c.page2.rtkj129"
            {<point name="construct.c.page2.rtkj129" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj130
            #add-point:BEFORE FIELD rtkj130 name="construct.b.page2.rtkj130"
            {<point name="construct.b.page2.rtkj130" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj130
            
            #add-point:AFTER FIELD rtkj130 name="construct.a.page2.rtkj130"
            {<point name="construct.a.page2.rtkj130" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj130
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj130
            #add-point:ON ACTION controlp INFIELD rtkj130 name="construct.c.page2.rtkj130"
            {<point name="construct.c.page2.rtkj130" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj131
            #add-point:BEFORE FIELD rtkj131 name="construct.b.page2.rtkj131"
            {<point name="construct.b.page2.rtkj131" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj131
            
            #add-point:AFTER FIELD rtkj131 name="construct.a.page2.rtkj131"
            {<point name="construct.a.page2.rtkj131" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj131
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj131
            #add-point:ON ACTION controlp INFIELD rtkj131 name="construct.c.page2.rtkj131"
            {<point name="construct.c.page2.rtkj131" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj132
            #add-point:BEFORE FIELD rtkj132 name="construct.b.page2.rtkj132"
            {<point name="construct.b.page2.rtkj132" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj132
            
            #add-point:AFTER FIELD rtkj132 name="construct.a.page2.rtkj132"
            {<point name="construct.a.page2.rtkj132" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj132
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj132
            #add-point:ON ACTION controlp INFIELD rtkj132 name="construct.c.page2.rtkj132"
            {<point name="construct.c.page2.rtkj132" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj133
            #add-point:BEFORE FIELD rtkj133 name="construct.b.page2.rtkj133"
            {<point name="construct.b.page2.rtkj133" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj133
            
            #add-point:AFTER FIELD rtkj133 name="construct.a.page2.rtkj133"
            {<point name="construct.a.page2.rtkj133" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj133
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj133
            #add-point:ON ACTION controlp INFIELD rtkj133 name="construct.c.page2.rtkj133"
            {<point name="construct.c.page2.rtkj133" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj134
            #add-point:BEFORE FIELD rtkj134 name="construct.b.page2.rtkj134"
            {<point name="construct.b.page2.rtkj134" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj134
            
            #add-point:AFTER FIELD rtkj134 name="construct.a.page2.rtkj134"
            {<point name="construct.a.page2.rtkj134" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj134
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj134
            #add-point:ON ACTION controlp INFIELD rtkj134 name="construct.c.page2.rtkj134"
            {<point name="construct.c.page2.rtkj134" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj135
            #add-point:BEFORE FIELD rtkj135 name="construct.b.page2.rtkj135"
            {<point name="construct.b.page2.rtkj135" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj135
            
            #add-point:AFTER FIELD rtkj135 name="construct.a.page2.rtkj135"
            {<point name="construct.a.page2.rtkj135" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj135
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj135
            #add-point:ON ACTION controlp INFIELD rtkj135 name="construct.c.page2.rtkj135"
            {<point name="construct.c.page2.rtkj135" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj136
            #add-point:BEFORE FIELD rtkj136 name="construct.b.page2.rtkj136"
            {<point name="construct.b.page2.rtkj136" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj136
            
            #add-point:AFTER FIELD rtkj136 name="construct.a.page2.rtkj136"
            {<point name="construct.a.page2.rtkj136" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj136
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj136
            #add-point:ON ACTION controlp INFIELD rtkj136 name="construct.c.page2.rtkj136"
            {<point name="construct.c.page2.rtkj136" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj137
            #add-point:BEFORE FIELD rtkj137 name="construct.b.page2.rtkj137"
            {<point name="construct.b.page2.rtkj137" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj137
            
            #add-point:AFTER FIELD rtkj137 name="construct.a.page2.rtkj137"
            {<point name="construct.a.page2.rtkj137" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj137
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj137
            #add-point:ON ACTION controlp INFIELD rtkj137 name="construct.c.page2.rtkj137"
            {<point name="construct.c.page2.rtkj137" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj138
            #add-point:BEFORE FIELD rtkj138 name="construct.b.page2.rtkj138"
            {<point name="construct.b.page2.rtkj138" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj138
            
            #add-point:AFTER FIELD rtkj138 name="construct.a.page2.rtkj138"
            {<point name="construct.a.page2.rtkj138" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj138
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj138
            #add-point:ON ACTION controlp INFIELD rtkj138 name="construct.c.page2.rtkj138"
            {<point name="construct.c.page2.rtkj138" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj139
            #add-point:BEFORE FIELD rtkj139 name="construct.b.page2.rtkj139"
            {<point name="construct.b.page2.rtkj139" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj139
            
            #add-point:AFTER FIELD rtkj139 name="construct.a.page2.rtkj139"
            {<point name="construct.a.page2.rtkj139" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj139
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj139
            #add-point:ON ACTION controlp INFIELD rtkj139 name="construct.c.page2.rtkj139"
            {<point name="construct.c.page2.rtkj139" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj140
            #add-point:BEFORE FIELD rtkj140 name="construct.b.page2.rtkj140"
            {<point name="construct.b.page2.rtkj140" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj140
            
            #add-point:AFTER FIELD rtkj140 name="construct.a.page2.rtkj140"
            {<point name="construct.a.page2.rtkj140" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj140
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj140
            #add-point:ON ACTION controlp INFIELD rtkj140 name="construct.c.page2.rtkj140"
            {<point name="construct.c.page2.rtkj140" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj141
            #add-point:BEFORE FIELD rtkj141 name="construct.b.page2.rtkj141"
            {<point name="construct.b.page2.rtkj141" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj141
            
            #add-point:AFTER FIELD rtkj141 name="construct.a.page2.rtkj141"
            {<point name="construct.a.page2.rtkj141" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj141
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj141
            #add-point:ON ACTION controlp INFIELD rtkj141 name="construct.c.page2.rtkj141"
            {<point name="construct.c.page2.rtkj141" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj142
            #add-point:BEFORE FIELD rtkj142 name="construct.b.page2.rtkj142"
            {<point name="construct.b.page2.rtkj142" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj142
            
            #add-point:AFTER FIELD rtkj142 name="construct.a.page2.rtkj142"
            {<point name="construct.a.page2.rtkj142" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj142
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj142
            #add-point:ON ACTION controlp INFIELD rtkj142 name="construct.c.page2.rtkj142"
            {<point name="construct.c.page2.rtkj142" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj143
            #add-point:BEFORE FIELD rtkj143 name="construct.b.page2.rtkj143"
            {<point name="construct.b.page2.rtkj143" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj143
            
            #add-point:AFTER FIELD rtkj143 name="construct.a.page2.rtkj143"
            {<point name="construct.a.page2.rtkj143" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj143
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj143
            #add-point:ON ACTION controlp INFIELD rtkj143 name="construct.c.page2.rtkj143"
            {<point name="construct.c.page2.rtkj143" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj144
            #add-point:BEFORE FIELD rtkj144 name="construct.b.page2.rtkj144"
            {<point name="construct.b.page2.rtkj144" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj144
            
            #add-point:AFTER FIELD rtkj144 name="construct.a.page2.rtkj144"
            {<point name="construct.a.page2.rtkj144" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj144
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj144
            #add-point:ON ACTION controlp INFIELD rtkj144 name="construct.c.page2.rtkj144"
            {<point name="construct.c.page2.rtkj144" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj145
            #add-point:BEFORE FIELD rtkj145 name="construct.b.page2.rtkj145"
            {<point name="construct.b.page2.rtkj145" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj145
            
            #add-point:AFTER FIELD rtkj145 name="construct.a.page2.rtkj145"
            {<point name="construct.a.page2.rtkj145" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj145
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj145
            #add-point:ON ACTION controlp INFIELD rtkj145 name="construct.c.page2.rtkj145"
            {<point name="construct.c.page2.rtkj145" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj146
            #add-point:BEFORE FIELD rtkj146 name="construct.b.page2.rtkj146"
            {<point name="construct.b.page2.rtkj146" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj146
            
            #add-point:AFTER FIELD rtkj146 name="construct.a.page2.rtkj146"
            {<point name="construct.a.page2.rtkj146" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj146
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj146
            #add-point:ON ACTION controlp INFIELD rtkj146 name="construct.c.page2.rtkj146"
            {<point name="construct.c.page2.rtkj146" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj147
            #add-point:BEFORE FIELD rtkj147 name="construct.b.page2.rtkj147"
            {<point name="construct.b.page2.rtkj147" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj147
            
            #add-point:AFTER FIELD rtkj147 name="construct.a.page2.rtkj147"
            {<point name="construct.a.page2.rtkj147" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj147
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj147
            #add-point:ON ACTION controlp INFIELD rtkj147 name="construct.c.page2.rtkj147"
            {<point name="construct.c.page2.rtkj147" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj148
            #add-point:BEFORE FIELD rtkj148 name="construct.b.page2.rtkj148"
            {<point name="construct.b.page2.rtkj148" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj148
            
            #add-point:AFTER FIELD rtkj148 name="construct.a.page2.rtkj148"
            {<point name="construct.a.page2.rtkj148" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj148
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj148
            #add-point:ON ACTION controlp INFIELD rtkj148 name="construct.c.page2.rtkj148"
            {<point name="construct.c.page2.rtkj148" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj149
            #add-point:BEFORE FIELD rtkj149 name="construct.b.page2.rtkj149"
            {<point name="construct.b.page2.rtkj149" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj149
            
            #add-point:AFTER FIELD rtkj149 name="construct.a.page2.rtkj149"
            {<point name="construct.a.page2.rtkj149" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj149
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj149
            #add-point:ON ACTION controlp INFIELD rtkj149 name="construct.c.page2.rtkj149"
            {<point name="construct.c.page2.rtkj149" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj150
            #add-point:BEFORE FIELD rtkj150 name="construct.b.page2.rtkj150"
            {<point name="construct.b.page2.rtkj150" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj150
            
            #add-point:AFTER FIELD rtkj150 name="construct.a.page2.rtkj150"
            {<point name="construct.a.page2.rtkj150" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj150
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj150
            #add-point:ON ACTION controlp INFIELD rtkj150 name="construct.c.page2.rtkj150"
            {<point name="construct.c.page2.rtkj150" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj151
            #add-point:BEFORE FIELD rtkj151 name="construct.b.page2.rtkj151"
            {<point name="construct.b.page2.rtkj151" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj151
            
            #add-point:AFTER FIELD rtkj151 name="construct.a.page2.rtkj151"
            {<point name="construct.a.page2.rtkj151" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj151
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj151
            #add-point:ON ACTION controlp INFIELD rtkj151 name="construct.c.page2.rtkj151"
            {<point name="construct.c.page2.rtkj151" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj152
            #add-point:BEFORE FIELD rtkj152 name="construct.b.page2.rtkj152"
            {<point name="construct.b.page2.rtkj152" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj152
            
            #add-point:AFTER FIELD rtkj152 name="construct.a.page2.rtkj152"
            {<point name="construct.a.page2.rtkj152" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtkj152
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj152
            #add-point:ON ACTION controlp INFIELD rtkj152 name="construct.c.page2.rtkj152"
            {<point name="construct.c.page2.rtkj152" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON rtklunit,rtkl002,rtkl101,rtkl102,rtkl103,rtkl104,rtkl105,rtkl106,rtkl107 

           FROM s_detail3[1].rtklunit,s_detail3[1].rtkl002,s_detail3[1].rtkl101,s_detail3[1].rtkl102, 
               s_detail3[1].rtkl103,s_detail3[1].rtkl104,s_detail3[1].rtkl105,s_detail3[1].rtkl106,s_detail3[1].rtkl107 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body3.before_construct"
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtklunit
            #add-point:BEFORE FIELD rtklunit name="construct.b.page3.rtklunit"
            {<point name="construct.b.page3.rtklunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtklunit
            
            #add-point:AFTER FIELD rtklunit name="construct.a.page3.rtklunit"
            {<point name="construct.a.page3.rtklunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.rtklunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtklunit
            #add-point:ON ACTION controlp INFIELD rtklunit name="construct.c.page3.rtklunit"
            {<point name="construct.c.page3.rtklunit" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page3.rtkl002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkl002
            #add-point:ON ACTION controlp INFIELD rtkl002 name="construct.c.page3.rtkl002"
            {<point name="construct.c.page3.rtkl002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkl002
            #add-point:BEFORE FIELD rtkl002 name="construct.b.page3.rtkl002"
            {<point name="construct.b.page3.rtkl002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkl002
            
            #add-point:AFTER FIELD rtkl002 name="construct.a.page3.rtkl002"
            {<point name="construct.a.page3.rtkl002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkl101
            #add-point:BEFORE FIELD rtkl101 name="construct.b.page3.rtkl101"
            {<point name="construct.b.page3.rtkl101" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkl101
            
            #add-point:AFTER FIELD rtkl101 name="construct.a.page3.rtkl101"
            {<point name="construct.a.page3.rtkl101" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.rtkl101
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkl101
            #add-point:ON ACTION controlp INFIELD rtkl101 name="construct.c.page3.rtkl101"
            {<point name="construct.c.page3.rtkl101" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkl102
            #add-point:BEFORE FIELD rtkl102 name="construct.b.page3.rtkl102"
            {<point name="construct.b.page3.rtkl102" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkl102
            
            #add-point:AFTER FIELD rtkl102 name="construct.a.page3.rtkl102"
            {<point name="construct.a.page3.rtkl102" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.rtkl102
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkl102
            #add-point:ON ACTION controlp INFIELD rtkl102 name="construct.c.page3.rtkl102"
            {<point name="construct.c.page3.rtkl102" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkl103
            #add-point:BEFORE FIELD rtkl103 name="construct.b.page3.rtkl103"
            {<point name="construct.b.page3.rtkl103" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkl103
            
            #add-point:AFTER FIELD rtkl103 name="construct.a.page3.rtkl103"
            {<point name="construct.a.page3.rtkl103" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.rtkl103
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkl103
            #add-point:ON ACTION controlp INFIELD rtkl103 name="construct.c.page3.rtkl103"
            {<point name="construct.c.page3.rtkl103" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkl104
            #add-point:BEFORE FIELD rtkl104 name="construct.b.page3.rtkl104"
            {<point name="construct.b.page3.rtkl104" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkl104
            
            #add-point:AFTER FIELD rtkl104 name="construct.a.page3.rtkl104"
            {<point name="construct.a.page3.rtkl104" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.rtkl104
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkl104
            #add-point:ON ACTION controlp INFIELD rtkl104 name="construct.c.page3.rtkl104"
            {<point name="construct.c.page3.rtkl104" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkl105
            #add-point:BEFORE FIELD rtkl105 name="construct.b.page3.rtkl105"
            {<point name="construct.b.page3.rtkl105" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkl105
            
            #add-point:AFTER FIELD rtkl105 name="construct.a.page3.rtkl105"
            {<point name="construct.a.page3.rtkl105" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.rtkl105
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkl105
            #add-point:ON ACTION controlp INFIELD rtkl105 name="construct.c.page3.rtkl105"
            {<point name="construct.c.page3.rtkl105" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkl106
            #add-point:BEFORE FIELD rtkl106 name="construct.b.page3.rtkl106"
            {<point name="construct.b.page3.rtkl106" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkl106
            
            #add-point:AFTER FIELD rtkl106 name="construct.a.page3.rtkl106"
            {<point name="construct.a.page3.rtkl106" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.rtkl106
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkl106
            #add-point:ON ACTION controlp INFIELD rtkl106 name="construct.c.page3.rtkl106"
            {<point name="construct.c.page3.rtkl106" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkl107
            #add-point:BEFORE FIELD rtkl107 name="construct.b.page3.rtkl107"
            {<point name="construct.b.page3.rtkl107" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkl107
            
            #add-point:AFTER FIELD rtkl107 name="construct.a.page3.rtkl107"
            {<point name="construct.a.page3.rtkl107" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.rtkl107
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkl107
            #add-point:ON ACTION controlp INFIELD rtkl107 name="construct.c.page3.rtkl107"
            {<point name="construct.c.page3.rtkl107" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON rtkkunit,rtkk002,rtkk003,rtkk004
           FROM s_detail4[1].rtkkunit,s_detail4[1].rtkk002,s_detail4[1].rtkk003,s_detail4[1].rtkk004
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body4.before_construct"
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkkunit
            #add-point:BEFORE FIELD rtkkunit name="construct.b.page4.rtkkunit"
            {<point name="construct.b.page4.rtkkunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkkunit
            
            #add-point:AFTER FIELD rtkkunit name="construct.a.page4.rtkkunit"
            {<point name="construct.a.page4.rtkkunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.rtkkunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkkunit
            #add-point:ON ACTION controlp INFIELD rtkkunit name="construct.c.page4.rtkkunit"
            {<point name="construct.c.page4.rtkkunit" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkk002
            #add-point:BEFORE FIELD rtkk002 name="construct.b.page4.rtkk002"
            {<point name="construct.b.page4.rtkk002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkk002
            
            #add-point:AFTER FIELD rtkk002 name="construct.a.page4.rtkk002"
            {<point name="construct.a.page4.rtkk002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.rtkk002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkk002
            #add-point:ON ACTION controlp INFIELD rtkk002 name="construct.c.page4.rtkk002"
            {<point name="construct.c.page4.rtkk002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkk003
            #add-point:BEFORE FIELD rtkk003 name="construct.b.page4.rtkk003"
            {<point name="construct.b.page4.rtkk003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkk003
            
            #add-point:AFTER FIELD rtkk003 name="construct.a.page4.rtkk003"
            {<point name="construct.a.page4.rtkk003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.rtkk003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkk003
            #add-point:ON ACTION controlp INFIELD rtkk003 name="construct.c.page4.rtkk003"
            {<point name="construct.c.page4.rtkk003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkk004
            #add-point:BEFORE FIELD rtkk004 name="construct.b.page4.rtkk004"
            {<point name="construct.b.page4.rtkk004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkk004
            
            #add-point:AFTER FIELD rtkk004 name="construct.a.page4.rtkk004"
            {<point name="construct.a.page4.rtkk004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.rtkk004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkk004
            #add-point:ON ACTION controlp INFIELD rtkk004 name="construct.c.page4.rtkk004"
            {<point name="construct.c.page4.rtkk004" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
            INITIALIZE g_wc2_table4 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "rtkh_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtki_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtkj_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "rtkl_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "rtkk_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
{</section>}
 
{<section id="artm740.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION artm740_filter()
   #add-point:filter段define name="filter.define_customerization"
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   {<point name="filter.define"/>}
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   {<point name="filter.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON rtkhunit,rtkh001
                          FROM s_browse[1].b_rtkhunit,s_browse[1].b_rtkh001
 
         BEFORE CONSTRUCT
               DISPLAY artm740_filter_parser('rtkhunit') TO s_browse[1].b_rtkhunit
            DISPLAY artm740_filter_parser('rtkh001') TO s_browse[1].b_rtkh001
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL artm740_filter_show('rtkhunit')
   CALL artm740_filter_show('rtkh001')
 
END FUNCTION
{</section>}
 
{<section id="artm740.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION artm740_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   {<point name="filter_parser.define"/>}
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
{</section>}
 
{<section id="artm740.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION artm740_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = artm740_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
{</section>}
 
 
 
 
 
{<section id="artm740.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION artm740_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   {<point name="query.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_rtki_d.clear()
   CALL g_rtki2_d.clear()
   CALL g_rtki3_d.clear()
   CALL g_rtki4_d.clear()
 
   
   #add-point:query段other name="query.other"
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL artm740_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL artm740_browser_fill("")
      CALL artm740_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL artm740_filter_show('rtkhunit')
   CALL artm740_filter_show('rtkh001')
   CALL artm740_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL artm740_fetch("F") 
      #顯示單身筆數
      CALL artm740_idx_chk()
   END IF
 
END FUNCTION
{</section>}
 
{<section id="artm740.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION artm740_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   {<point name="fetch.pre_function"/>}
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_rtkh_m.rtkh001 = g_browser[g_current_idx].b_rtkh001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE artm740_master_referesh USING g_rtkh_m.rtkh001 INTO g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001,g_rtkh_m.rtkhstus, 
       g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007, 
       g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013, 
       g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhcnfid,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt, 
       g_rtkh_m.rtkhunit_desc,g_rtkh_m.rtkhownid_desc,g_rtkh_m.rtkhowndp_desc,g_rtkh_m.rtkhcrtid_desc, 
       g_rtkh_m.rtkhcrtdp_desc,g_rtkh_m.rtkhmodid_desc,g_rtkh_m.rtkhcnfid_desc
   
   #遮罩相關處理
   LET g_rtkh_m_mask_o.* =  g_rtkh_m.*
   CALL artm740_rtkh_t_mask()
   LET g_rtkh_m_mask_n.* =  g_rtkh_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artm740_set_act_visible()   
   CALL artm740_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_rtkh_m_t.* = g_rtkh_m.*
   LET g_rtkh_m_o.* = g_rtkh_m.*
   
   LET g_data_owner = g_rtkh_m.rtkhownid      
   LET g_data_dept  = g_rtkh_m.rtkhowndp
   
   #重新顯示   
   CALL artm740_show()
 
   
 
END FUNCTION
{</section>}
 
{<section id="artm740.insert" >}
#+ 資料新增
PRIVATE FUNCTION artm740_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   {<point name="insert.pre_function"/>}
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_rtki_d.clear()   
   CALL g_rtki2_d.clear()  
   CALL g_rtki3_d.clear()  
   CALL g_rtki4_d.clear()  
 
 
   INITIALIZE g_rtkh_m.* TO NULL             #DEFAULT 設定
   
   LET g_rtkh001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rtkh_m.rtkhownid = g_user
      LET g_rtkh_m.rtkhowndp = g_dept
      LET g_rtkh_m.rtkhcrtid = g_user
      LET g_rtkh_m.rtkhcrtdp = g_dept 
      LET g_rtkh_m.rtkhcrtdt = cl_get_current()
      LET g_rtkh_m.rtkhmodid = g_user
      LET g_rtkh_m.rtkhmoddt = cl_get_current()
      LET g_rtkh_m.rtkhstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_rtkh_m.rtkhstus = "N"
      LET g_rtkh_m.rtkh002 = "01"
      LET g_rtkh_m.rtkh003 = "1"
      LET g_rtkh_m.rtkh004 = "1"
      LET g_rtkh_m.rtkh006 = "Y"
      LET g_rtkh_m.rtkh007 = "N"
      LET g_rtkh_m.rtkh008 = "N"
      LET g_rtkh_m.rtkh009 = "Y"
      LET g_rtkh_m.rtkh010 = "Y"
      LET g_rtkh_m.rtkh011 = "N"
 
  
      #add-point:單頭預設值 name="insert.default"
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_rtkh_m_t.* = g_rtkh_m.*
      LET g_rtkh_m_o.* = g_rtkh_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtkh_m.rtkhstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         
      END CASE
 
 
 
    
      CALL artm740_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_rtkh_m.* TO NULL
         INITIALIZE g_rtki_d TO NULL
         INITIALIZE g_rtki2_d TO NULL
         INITIALIZE g_rtki3_d TO NULL
         INITIALIZE g_rtki4_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL artm740_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_rtki_d.clear()
      #CALL g_rtki2_d.clear()
      #CALL g_rtki3_d.clear()
      #CALL g_rtki4_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artm740_set_act_visible()   
   CALL artm740_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtkh001_t = g_rtkh_m.rtkh001
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtkhent = " ||g_enterprise|| " AND",
                      " rtkh001 = '", g_rtkh_m.rtkh001, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artm740_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE artm740_cl
   
   CALL artm740_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE artm740_master_referesh USING g_rtkh_m.rtkh001 INTO g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001,g_rtkh_m.rtkhstus, 
       g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007, 
       g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013, 
       g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhcnfid,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt, 
       g_rtkh_m.rtkhunit_desc,g_rtkh_m.rtkhownid_desc,g_rtkh_m.rtkhowndp_desc,g_rtkh_m.rtkhcrtid_desc, 
       g_rtkh_m.rtkhcrtdp_desc,g_rtkh_m.rtkhmodid_desc,g_rtkh_m.rtkhcnfid_desc
   
   
   #遮罩相關處理
   LET g_rtkh_m_mask_o.* =  g_rtkh_m.*
   CALL artm740_rtkh_t_mask()
   LET g_rtkh_m_mask_n.* =  g_rtkh_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtkh_m.rtkhunit,g_rtkh_m.rtkhunit_desc,g_rtkh_m.rtkh001,g_rtkh_m.rtkhl003,g_rtkh_m.rtkhl004, 
       g_rtkh_m.rtkhstus,g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh005_desc, 
       g_rtkh_m.rtkh006,g_rtkh_m.rtkh007,g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011, 
       g_rtkh_m.rtkh012,g_rtkh_m.rtkh013,g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhownid_desc, 
       g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhowndp_desc,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtid_desc,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdp_desc,g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhmodid_desc,g_rtkh_m.rtkhcnfid, 
       g_rtkh_m.rtkhcnfid_desc,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt
   
   #add-point:新增結束後 name="insert.after"
   {<point name="insert.after"/>}
   #end add-point 
   
   LET g_data_owner = g_rtkh_m.rtkhownid      
   LET g_data_dept  = g_rtkh_m.rtkhowndp
   
   #功能已完成,通報訊息中心
   CALL artm740_msgcentre_notify('insert')
   
END FUNCTION
{</section>}
 
{<section id="artm740.modify" >}
#+ 資料修改
PRIVATE FUNCTION artm740_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   {<point name="modify.pre_function"/>}
   #end add-point
   
   #保存單頭舊值
   LET g_rtkh_m_t.* = g_rtkh_m.*
   LET g_rtkh_m_o.* = g_rtkh_m.*
   
   IF g_rtkh_m.rtkh001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_rtkh001_t = g_rtkh_m.rtkh001
 
   CALL s_transaction_begin()
   
   OPEN artm740_cl USING g_enterprise,g_rtkh_m.rtkh001
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artm740_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE artm740_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artm740_master_referesh USING g_rtkh_m.rtkh001 INTO g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001,g_rtkh_m.rtkhstus, 
       g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007, 
       g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013, 
       g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhcnfid,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt, 
       g_rtkh_m.rtkhunit_desc,g_rtkh_m.rtkhownid_desc,g_rtkh_m.rtkhowndp_desc,g_rtkh_m.rtkhcrtid_desc, 
       g_rtkh_m.rtkhcrtdp_desc,g_rtkh_m.rtkhmodid_desc,g_rtkh_m.rtkhcnfid_desc
   
   #檢查是否允許此動作
   IF NOT artm740_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtkh_m_mask_o.* =  g_rtkh_m.*
   CALL artm740_rtkh_t_mask()
   LET g_rtkh_m_mask_n.* =  g_rtkh_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
 
 
   
   CALL artm740_show()
   #add-point:modify段show之後 name="modify.after_show"
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
 
 
    
   WHILE TRUE
      LET g_rtkh001_t = g_rtkh_m.rtkh001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_rtkh_m.rtkhmodid = g_user 
LET g_rtkh_m.rtkhmoddt = cl_get_current()
LET g_rtkh_m.rtkhmodid_desc = cl_get_username(g_rtkh_m.rtkhmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL artm740_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE rtkh_t SET (rtkhmodid,rtkhmoddt) = (g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhmoddt)
          WHERE rtkhent = g_enterprise AND rtkh001 = g_rtkh001_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_rtkh_m.* = g_rtkh_m_t.*
            CALL artm740_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_rtkh_m.rtkh001 != g_rtkh_m_t.rtkh001
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE rtki_t SET rtki001 = g_rtkh_m.rtkh001
 
          WHERE rtkient = g_enterprise AND rtki001 = g_rtkh_m_t.rtkh001
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtki_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtki_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE rtkj_t
            SET rtkj001 = g_rtkh_m.rtkh001
 
          WHERE rtkjent = g_enterprise AND
                rtkj001 = g_rtkh001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtkj_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtkj_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update3"
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         
         UPDATE rtkl_t
            SET rtkl001 = g_rtkh_m.rtkh001
 
          WHERE rtklent = g_enterprise AND
                rtkl001 = g_rtkh001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update3"
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtkl_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtkl_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update3"
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update4"
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         
         UPDATE rtkk_t
            SET rtkk001 = g_rtkh_m.rtkh001
 
          WHERE rtkkent = g_enterprise AND
                rtkk001 = g_rtkh001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update4"
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtkk_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtkk_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update4"
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artm740_set_act_visible()   
   CALL artm740_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " rtkhent = " ||g_enterprise|| " AND",
                      " rtkh001 = '", g_rtkh_m.rtkh001, "' "
 
   #填到對應位置
   CALL artm740_browser_fill("")
 
   CLOSE artm740_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artm740_msgcentre_notify('modify')
 
END FUNCTION 
{</section>}
 
{<section id="artm740.input" >}
#+ 資料輸入
PRIVATE FUNCTION artm740_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   {<point name="input.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   {<point name="input.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   {<point name="input.pre_function"/>}
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtkh_m.rtkhunit,g_rtkh_m.rtkhunit_desc,g_rtkh_m.rtkh001,g_rtkh_m.rtkhl003,g_rtkh_m.rtkhl004, 
       g_rtkh_m.rtkhstus,g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh005_desc, 
       g_rtkh_m.rtkh006,g_rtkh_m.rtkh007,g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011, 
       g_rtkh_m.rtkh012,g_rtkh_m.rtkh013,g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhownid_desc, 
       g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhowndp_desc,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtid_desc,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdp_desc,g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhmodid_desc,g_rtkh_m.rtkhcnfid, 
       g_rtkh_m.rtkhcnfid_desc,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT rtkiunit,rtki002,rtki003,rtki004,rtki005,rtki006,rtki007 FROM rtki_t WHERE  
       rtkient=? AND rtki001=? AND rtki002=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artm740_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rtkjunit,rtkj002,rtkj101,rtkj102,rtkj103,rtkj104,rtkj105,rtkj106,rtkj107, 
       rtkj108,rtkj109,rtkj110,rtkj111,rtkj112,rtkj113,rtkj114,rtkj115,rtkj116,rtkj117,rtkj118,rtkj119, 
       rtkj120,rtkj121,rtkj122,rtkj123,rtkj124,rtkj125,rtkj126,rtkj127,rtkj128,rtkj129,rtkj130,rtkj131, 
       rtkj132,rtkj133,rtkj134,rtkj135,rtkj136,rtkj137,rtkj138,rtkj139,rtkj140,rtkj141,rtkj142,rtkj143, 
       rtkj144,rtkj145,rtkj146,rtkj147,rtkj148,rtkj149,rtkj150,rtkj151,rtkj152 FROM rtkj_t WHERE rtkjent=?  
       AND rtkj001=? AND rtkj002=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artm740_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql3"
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rtklunit,rtkl002,rtkl101,rtkl102,rtkl103,rtkl104,rtkl105,rtkl106,rtkl107  
       FROM rtkl_t WHERE rtklent=? AND rtkl001=? AND rtkl002=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql3"
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artm740_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql4"
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rtkkunit,rtkk002,rtkk003,rtkk004 FROM rtkk_t WHERE rtkkent=? AND rtkk001=?  
       AND rtkk002=? AND rtkk003=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql4"
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artm740_bcl4 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL artm740_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL artm740_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001,g_rtkh_m.rtkhl003,g_rtkh_m.rtkhl004,g_rtkh_m.rtkhstus, 
       g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007, 
       g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013, 
       g_rtkh_m.rtkh014
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
{</section>}
 
{<section id="artm740.input.head" >}
      #單頭段
      INPUT BY NAME g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001,g_rtkh_m.rtkhl003,g_rtkh_m.rtkhl004,g_rtkh_m.rtkhstus, 
          g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007, 
          g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013, 
          g_rtkh_m.rtkh014 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item name="input.master_input.update_item"
               {<point name="input.master_input.update_item" mark="Y"/>}
               #END add-point
            END IF
 
 
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN artm740_cl USING g_enterprise,g_rtkh_m.rtkh001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artm740_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE artm740_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            LET g_master_multi_table_t.rtkhl001 = g_rtkh_m.rtkh001
LET g_master_multi_table_t.rtkhl003 = g_rtkh_m.rtkhl003
LET g_master_multi_table_t.rtkhl004 = g_rtkh_m.rtkhl004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.rtkhl001 = ''
LET g_master_multi_table_t.rtkhl003 = ''
LET g_master_multi_table_t.rtkhl004 = ''
 
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL artm740_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL artm740_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkhunit
            
            #add-point:AFTER FIELD rtkhunit name="input.a.rtkhunit"
            {<point name="input.a.rtkhunit" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhunit
            #add-point:BEFORE FIELD rtkhunit name="input.b.rtkhunit"
            {<point name="input.b.rtkhunit" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkhunit
            #add-point:ON CHANGE rtkhunit name="input.g.rtkhunit"
            {<point name="input.g.rtkhunit" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh001
            #add-point:BEFORE FIELD rtkh001 name="input.b.rtkh001"
            {<point name="input.b.rtkh001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh001
            
            #add-point:AFTER FIELD rtkh001 name="input.a.rtkh001"
            {<point name="input.a.rtkh001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkh001
            #add-point:ON CHANGE rtkh001 name="input.g.rtkh001"
            {<point name="input.g.rtkh001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhl003
            #add-point:BEFORE FIELD rtkhl003 name="input.b.rtkhl003"
            {<point name="input.b.rtkhl003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkhl003
            
            #add-point:AFTER FIELD rtkhl003 name="input.a.rtkhl003"
            {<point name="input.a.rtkhl003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkhl003
            #add-point:ON CHANGE rtkhl003 name="input.g.rtkhl003"
            {<point name="input.g.rtkhl003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhl004
            #add-point:BEFORE FIELD rtkhl004 name="input.b.rtkhl004"
            {<point name="input.b.rtkhl004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkhl004
            
            #add-point:AFTER FIELD rtkhl004 name="input.a.rtkhl004"
            {<point name="input.a.rtkhl004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkhl004
            #add-point:ON CHANGE rtkhl004 name="input.g.rtkhl004"
            {<point name="input.g.rtkhl004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkhstus
            #add-point:BEFORE FIELD rtkhstus name="input.b.rtkhstus"
            {<point name="input.b.rtkhstus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkhstus
            
            #add-point:AFTER FIELD rtkhstus name="input.a.rtkhstus"
            {<point name="input.a.rtkhstus" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkhstus
            #add-point:ON CHANGE rtkhstus name="input.g.rtkhstus"
            {<point name="input.g.rtkhstus" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh002
            #add-point:BEFORE FIELD rtkh002 name="input.b.rtkh002"
            {<point name="input.b.rtkh002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh002
            
            #add-point:AFTER FIELD rtkh002 name="input.a.rtkh002"
            {<point name="input.a.rtkh002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkh002
            #add-point:ON CHANGE rtkh002 name="input.g.rtkh002"
            {<point name="input.g.rtkh002" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh003
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtkh_m.rtkh003,"0.000","1","1.00","1","azz-00087",1) THEN
               NEXT FIELD rtkh003
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkh003 name="input.a.rtkh003"
            {<point name="input.a.rtkh003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh003
            #add-point:BEFORE FIELD rtkh003 name="input.b.rtkh003"
            {<point name="input.b.rtkh003" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkh003
            #add-point:ON CHANGE rtkh003 name="input.g.rtkh003"
            {<point name="input.g.rtkh003" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh004
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtkh_m.rtkh004,"0.000","1","1.00","1","azz-00087",1) THEN
               NEXT FIELD rtkh004
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkh004 name="input.a.rtkh004"
            {<point name="input.a.rtkh004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh004
            #add-point:BEFORE FIELD rtkh004 name="input.b.rtkh004"
            {<point name="input.b.rtkh004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkh004
            #add-point:ON CHANGE rtkh004 name="input.g.rtkh004"
            {<point name="input.g.rtkh004" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh005
            
            #add-point:AFTER FIELD rtkh005 name="input.a.rtkh005"
            {<point name="input.a.rtkh005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh005
            #add-point:BEFORE FIELD rtkh005 name="input.b.rtkh005"
            {<point name="input.b.rtkh005" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkh005
            #add-point:ON CHANGE rtkh005 name="input.g.rtkh005"
            {<point name="input.g.rtkh005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh006
            #add-point:BEFORE FIELD rtkh006 name="input.b.rtkh006"
            {<point name="input.b.rtkh006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh006
            
            #add-point:AFTER FIELD rtkh006 name="input.a.rtkh006"
            {<point name="input.a.rtkh006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkh006
            #add-point:ON CHANGE rtkh006 name="input.g.rtkh006"
            {<point name="input.g.rtkh006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh007
            #add-point:BEFORE FIELD rtkh007 name="input.b.rtkh007"
            {<point name="input.b.rtkh007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh007
            
            #add-point:AFTER FIELD rtkh007 name="input.a.rtkh007"
            {<point name="input.a.rtkh007" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkh007
            #add-point:ON CHANGE rtkh007 name="input.g.rtkh007"
            {<point name="input.g.rtkh007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh008
            #add-point:BEFORE FIELD rtkh008 name="input.b.rtkh008"
            {<point name="input.b.rtkh008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh008
            
            #add-point:AFTER FIELD rtkh008 name="input.a.rtkh008"
            {<point name="input.a.rtkh008" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkh008
            #add-point:ON CHANGE rtkh008 name="input.g.rtkh008"
            {<point name="input.g.rtkh008" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh009
            #add-point:BEFORE FIELD rtkh009 name="input.b.rtkh009"
            {<point name="input.b.rtkh009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh009
            
            #add-point:AFTER FIELD rtkh009 name="input.a.rtkh009"
            {<point name="input.a.rtkh009" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkh009
            #add-point:ON CHANGE rtkh009 name="input.g.rtkh009"
            {<point name="input.g.rtkh009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh010
            #add-point:BEFORE FIELD rtkh010 name="input.b.rtkh010"
            {<point name="input.b.rtkh010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh010
            
            #add-point:AFTER FIELD rtkh010 name="input.a.rtkh010"
            {<point name="input.a.rtkh010" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkh010
            #add-point:ON CHANGE rtkh010 name="input.g.rtkh010"
            {<point name="input.g.rtkh010" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh011
            #add-point:BEFORE FIELD rtkh011 name="input.b.rtkh011"
            {<point name="input.b.rtkh011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh011
            
            #add-point:AFTER FIELD rtkh011 name="input.a.rtkh011"
            {<point name="input.a.rtkh011" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkh011
            #add-point:ON CHANGE rtkh011 name="input.g.rtkh011"
            {<point name="input.g.rtkh011" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh012
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtkh_m.rtkh012,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtkh012
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkh012 name="input.a.rtkh012"
            {<point name="input.a.rtkh012" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh012
            #add-point:BEFORE FIELD rtkh012 name="input.b.rtkh012"
            {<point name="input.b.rtkh012" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkh012
            #add-point:ON CHANGE rtkh012 name="input.g.rtkh012"
            {<point name="input.g.rtkh012" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh013
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtkh_m.rtkh013,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtkh013
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkh013 name="input.a.rtkh013"
            {<point name="input.a.rtkh013" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh013
            #add-point:BEFORE FIELD rtkh013 name="input.b.rtkh013"
            {<point name="input.b.rtkh013" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkh013
            #add-point:ON CHANGE rtkh013 name="input.g.rtkh013"
            {<point name="input.g.rtkh013" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkh014
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtkh_m.rtkh014,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtkh014
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkh014 name="input.a.rtkh014"
            {<point name="input.a.rtkh014" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkh014
            #add-point:BEFORE FIELD rtkh014 name="input.b.rtkh014"
            {<point name="input.b.rtkh014" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkh014
            #add-point:ON CHANGE rtkh014 name="input.g.rtkh014"
            {<point name="input.g.rtkh014" />}
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.rtkhunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkhunit
            #add-point:ON ACTION controlp INFIELD rtkhunit name="input.c.rtkhunit"
            {<point name="input.c.rtkhunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkh001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh001
            #add-point:ON ACTION controlp INFIELD rtkh001 name="input.c.rtkh001"
            {<point name="input.c.rtkh001" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkhl003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkhl003
            #add-point:ON ACTION controlp INFIELD rtkhl003 name="input.c.rtkhl003"
            {<point name="input.c.rtkhl003" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkhl004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkhl004
            #add-point:ON ACTION controlp INFIELD rtkhl004 name="input.c.rtkhl004"
            {<point name="input.c.rtkhl004" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkhstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkhstus
            #add-point:ON ACTION controlp INFIELD rtkhstus name="input.c.rtkhstus"
            {<point name="input.c.rtkhstus" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkh002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh002
            #add-point:ON ACTION controlp INFIELD rtkh002 name="input.c.rtkh002"
            {<point name="input.c.rtkh002" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkh003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh003
            #add-point:ON ACTION controlp INFIELD rtkh003 name="input.c.rtkh003"
            {<point name="input.c.rtkh003" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkh004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh004
            #add-point:ON ACTION controlp INFIELD rtkh004 name="input.c.rtkh004"
            {<point name="input.c.rtkh004" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkh005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh005
            #add-point:ON ACTION controlp INFIELD rtkh005 name="input.c.rtkh005"
            {<point name="input.c.rtkh005" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkh006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh006
            #add-point:ON ACTION controlp INFIELD rtkh006 name="input.c.rtkh006"
            {<point name="input.c.rtkh006" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkh007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh007
            #add-point:ON ACTION controlp INFIELD rtkh007 name="input.c.rtkh007"
            {<point name="input.c.rtkh007" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkh008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh008
            #add-point:ON ACTION controlp INFIELD rtkh008 name="input.c.rtkh008"
            {<point name="input.c.rtkh008" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkh009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh009
            #add-point:ON ACTION controlp INFIELD rtkh009 name="input.c.rtkh009"
            {<point name="input.c.rtkh009" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkh010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh010
            #add-point:ON ACTION controlp INFIELD rtkh010 name="input.c.rtkh010"
            {<point name="input.c.rtkh010" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkh011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh011
            #add-point:ON ACTION controlp INFIELD rtkh011 name="input.c.rtkh011"
            {<point name="input.c.rtkh011" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkh012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh012
            #add-point:ON ACTION controlp INFIELD rtkh012 name="input.c.rtkh012"
            {<point name="input.c.rtkh012" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkh013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh013
            #add-point:ON ACTION controlp INFIELD rtkh013 name="input.c.rtkh013"
            {<point name="input.c.rtkh013" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtkh014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkh014
            #add-point:ON ACTION controlp INFIELD rtkh014 name="input.c.rtkh014"
            {<point name="input.c.rtkh014" />}
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_rtkh_m.rtkh001
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO rtkh_t (rtkhent,rtkhunit,rtkh001,rtkhstus,rtkh002,rtkh003,rtkh004,rtkh005, 
                   rtkh006,rtkh007,rtkh008,rtkh009,rtkh010,rtkh011,rtkh012,rtkh013,rtkh014,rtkhownid, 
                   rtkhowndp,rtkhcrtid,rtkhcrtdp,rtkhcrtdt,rtkhmodid,rtkhcnfid,rtkhmoddt,rtkhcnfdt)
               VALUES (g_enterprise,g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001,g_rtkh_m.rtkhstus,g_rtkh_m.rtkh002, 
                   g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007, 
                   g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012, 
                   g_rtkh_m.rtkh013,g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhcrtid, 
                   g_rtkh_m.rtkhcrtdp,g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhcnfid,g_rtkh_m.rtkhmoddt, 
                   g_rtkh_m.rtkhcnfdt) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_rtkh_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_rtkh_m.rtkh001 = g_master_multi_table_t.rtkhl001 AND
         g_rtkh_m.rtkhl003 = g_master_multi_table_t.rtkhl003 AND 
         g_rtkh_m.rtkhl004 = g_master_multi_table_t.rtkhl004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'rtkhlent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_rtkh_m.rtkh001
            LET l_field_keys[02] = 'rtkhl001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.rtkhl001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'rtkhl002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_rtkh_m.rtkhl003
            LET l_fields[01] = 'rtkhl003'
            LET l_vars[02] = g_rtkh_m.rtkhl004
            LET l_fields[02] = 'rtkhl004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'rtkhl_t')
         END IF 
 
               
               #add-point:單頭新增後 name="input.head.a_insert"
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL artm740_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL artm740_b_fill()
                  CALL artm740_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL artm740_rtkh_t_mask_restore('restore_mask_o')
               
               UPDATE rtkh_t SET (rtkhunit,rtkh001,rtkhstus,rtkh002,rtkh003,rtkh004,rtkh005,rtkh006, 
                   rtkh007,rtkh008,rtkh009,rtkh010,rtkh011,rtkh012,rtkh013,rtkh014,rtkhownid,rtkhowndp, 
                   rtkhcrtid,rtkhcrtdp,rtkhcrtdt,rtkhmodid,rtkhcnfid,rtkhmoddt,rtkhcnfdt) = (g_rtkh_m.rtkhunit, 
                   g_rtkh_m.rtkh001,g_rtkh_m.rtkhstus,g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004, 
                   g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007,g_rtkh_m.rtkh008,g_rtkh_m.rtkh009, 
                   g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013,g_rtkh_m.rtkh014, 
                   g_rtkh_m.rtkhownid,g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtdp,g_rtkh_m.rtkhcrtdt, 
                   g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhcnfid,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt)
                WHERE rtkhent = g_enterprise AND rtkh001 = g_rtkh001_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "rtkh_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_rtkh_m.rtkh001 = g_master_multi_table_t.rtkhl001 AND
         g_rtkh_m.rtkhl003 = g_master_multi_table_t.rtkhl003 AND 
         g_rtkh_m.rtkhl004 = g_master_multi_table_t.rtkhl004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'rtkhlent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_rtkh_m.rtkh001
            LET l_field_keys[02] = 'rtkhl001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.rtkhl001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'rtkhl002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_rtkh_m.rtkhl003
            LET l_fields[01] = 'rtkhl003'
            LET l_vars[02] = g_rtkh_m.rtkhl004
            LET l_fields[02] = 'rtkhl004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'rtkhl_t')
         END IF 
 
               
               #將遮罩欄位進行遮蔽
               CALL artm740_rtkh_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_rtkh_m_t)
               LET g_log2 = util.JSON.stringify(g_rtkh_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_rtkh001_t = g_rtkh_m.rtkh001
 
            
      END INPUT
   
{</section>}
 
{<section id="artm740.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_rtki_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtki_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artm740_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_rtki_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artm740_cl USING g_enterprise,g_rtkh_m.rtkh001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artm740_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE artm740_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_rtki_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtki_d[l_ac].rtki002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_rtki_d_t.* = g_rtki_d[l_ac].*  #BACKUP
               LET g_rtki_d_o.* = g_rtki_d[l_ac].*  #BACKUP
               CALL artm740_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL artm740_set_no_entry_b(l_cmd)
               IF NOT artm740_lock_b("rtki_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artm740_bcl INTO g_rtki_d[l_ac].rtkiunit,g_rtki_d[l_ac].rtki002,g_rtki_d[l_ac].rtki003, 
                      g_rtki_d[l_ac].rtki004,g_rtki_d[l_ac].rtki005,g_rtki_d[l_ac].rtki006,g_rtki_d[l_ac].rtki007 

                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_rtki_d_t.rtki002,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rtki_d_mask_o[l_ac].* =  g_rtki_d[l_ac].*
                  CALL artm740_rtki_t_mask()
                  LET g_rtki_d_mask_n[l_ac].* =  g_rtki_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL artm740_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtki_d[l_ac].* TO NULL 
            INITIALIZE g_rtki_d_t.* TO NULL 
            INITIALIZE g_rtki_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_rtki_d[l_ac].rtki003 = "1"
      LET g_rtki_d[l_ac].rtki004 = "1"
      LET g_rtki_d[l_ac].rtki005 = "1"
      LET g_rtki_d[l_ac].rtki006 = "1"
      LET g_rtki_d[l_ac].rtki007 = "1"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_rtki_d_t.* = g_rtki_d[l_ac].*     #新輸入資料
            LET g_rtki_d_o.* = g_rtki_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artm740_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL artm740_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtki_d[li_reproduce_target].* = g_rtki_d[li_reproduce].*
 
               LET g_rtki_d[li_reproduce_target].rtki002 = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM rtki_t 
             WHERE rtkient = g_enterprise AND rtki001 = g_rtkh_m.rtkh001
 
               AND rtki002 = g_rtki_d[l_ac].rtki002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys[2] = g_rtki_d[g_detail_idx].rtki002
               CALL artm740_insert_b('rtki_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_rtki_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtki_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artm740_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               {<point name="input.body.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtkh_m.rtkh001
 
               LET gs_keys[gs_keys.getLength()+1] = g_rtki_d_t.rtki002
 
            
               #刪除同層單身
               IF NOT artm740_delete_b('rtki_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artm740_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT artm740_key_delete_b(gs_keys,'rtki_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artm740_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE artm740_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_rtki_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rtki_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkiunit
            #add-point:BEFORE FIELD rtkiunit name="input.b.page1.rtkiunit"
            {<point name="input.b.page1.rtkiunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkiunit
            
            #add-point:AFTER FIELD rtkiunit name="input.a.page1.rtkiunit"
            {<point name="input.a.page1.rtkiunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkiunit
            #add-point:ON CHANGE rtkiunit name="input.g.page1.rtkiunit"
            {<point name="input.g.page1.rtkiunit" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtki002
            
            #add-point:AFTER FIELD rtki002 name="input.a.page1.rtki002"
            {<point name="input.a.page1.rtki002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtki002
            #add-point:BEFORE FIELD rtki002 name="input.b.page1.rtki002"
            {<point name="input.b.page1.rtki002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtki002
            #add-point:ON CHANGE rtki002 name="input.g.page1.rtki002"
            {<point name="input.g.page1.rtki002" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtki003
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki_d[l_ac].rtki003,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtki003
            END IF 
 
 
 
            #add-point:AFTER FIELD rtki003 name="input.a.page1.rtki003"
            {<point name="input.a.page1.rtki003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtki003
            #add-point:BEFORE FIELD rtki003 name="input.b.page1.rtki003"
            {<point name="input.b.page1.rtki003" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtki003
            #add-point:ON CHANGE rtki003 name="input.g.page1.rtki003"
            {<point name="input.g.page1.rtki003" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtki004
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki_d[l_ac].rtki004,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtki004
            END IF 
 
 
 
            #add-point:AFTER FIELD rtki004 name="input.a.page1.rtki004"
            {<point name="input.a.page1.rtki004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtki004
            #add-point:BEFORE FIELD rtki004 name="input.b.page1.rtki004"
            {<point name="input.b.page1.rtki004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtki004
            #add-point:ON CHANGE rtki004 name="input.g.page1.rtki004"
            {<point name="input.g.page1.rtki004" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtki005
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki_d[l_ac].rtki005,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtki005
            END IF 
 
 
 
            #add-point:AFTER FIELD rtki005 name="input.a.page1.rtki005"
            {<point name="input.a.page1.rtki005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtki005
            #add-point:BEFORE FIELD rtki005 name="input.b.page1.rtki005"
            {<point name="input.b.page1.rtki005" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtki005
            #add-point:ON CHANGE rtki005 name="input.g.page1.rtki005"
            {<point name="input.g.page1.rtki005" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtki006
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki_d[l_ac].rtki006,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtki006
            END IF 
 
 
 
            #add-point:AFTER FIELD rtki006 name="input.a.page1.rtki006"
            {<point name="input.a.page1.rtki006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtki006
            #add-point:BEFORE FIELD rtki006 name="input.b.page1.rtki006"
            {<point name="input.b.page1.rtki006" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtki006
            #add-point:ON CHANGE rtki006 name="input.g.page1.rtki006"
            {<point name="input.g.page1.rtki006" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtki007
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki_d[l_ac].rtki007,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD rtki007
            END IF 
 
 
 
            #add-point:AFTER FIELD rtki007 name="input.a.page1.rtki007"
            {<point name="input.a.page1.rtki007" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtki007
            #add-point:BEFORE FIELD rtki007 name="input.b.page1.rtki007"
            {<point name="input.b.page1.rtki007" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtki007
            #add-point:ON CHANGE rtki007 name="input.g.page1.rtki007"
            {<point name="input.g.page1.rtki007" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.rtkiunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkiunit
            #add-point:ON ACTION controlp INFIELD rtkiunit name="input.c.page1.rtkiunit"
            {<point name="input.c.page1.rtkiunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtki002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtki002
            #add-point:ON ACTION controlp INFIELD rtki002 name="input.c.page1.rtki002"
            {<point name="input.c.page1.rtki002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtki003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtki003
            #add-point:ON ACTION controlp INFIELD rtki003 name="input.c.page1.rtki003"
            {<point name="input.c.page1.rtki003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtki004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtki004
            #add-point:ON ACTION controlp INFIELD rtki004 name="input.c.page1.rtki004"
            {<point name="input.c.page1.rtki004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtki005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtki005
            #add-point:ON ACTION controlp INFIELD rtki005 name="input.c.page1.rtki005"
            {<point name="input.c.page1.rtki005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtki006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtki006
            #add-point:ON ACTION controlp INFIELD rtki006 name="input.c.page1.rtki006"
            {<point name="input.c.page1.rtki006" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtki007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtki007
            #add-point:ON ACTION controlp INFIELD rtki007 name="input.c.page1.rtki007"
            {<point name="input.c.page1.rtki007" />}
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_rtki_d[l_ac].* = g_rtki_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE artm740_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_rtki_d[l_ac].rtki002 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_rtki_d[l_ac].* = g_rtki_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL artm740_rtki_t_mask_restore('restore_mask_o')
      
               UPDATE rtki_t SET (rtki001,rtkiunit,rtki002,rtki003,rtki004,rtki005,rtki006,rtki007) = (g_rtkh_m.rtkh001, 
                   g_rtki_d[l_ac].rtkiunit,g_rtki_d[l_ac].rtki002,g_rtki_d[l_ac].rtki003,g_rtki_d[l_ac].rtki004, 
                   g_rtki_d[l_ac].rtki005,g_rtki_d[l_ac].rtki006,g_rtki_d[l_ac].rtki007)
                WHERE rtkient = g_enterprise AND rtki001 = g_rtkh_m.rtkh001 
 
                  AND rtki002 = g_rtki_d_t.rtki002 #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_rtki_d[l_ac].* = g_rtki_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtki_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_rtki_d[l_ac].* = g_rtki_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtki_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys_bak[1] = g_rtkh001_t
               LET gs_keys[2] = g_rtki_d[g_detail_idx].rtki002
               LET gs_keys_bak[2] = g_rtki_d_t.rtki002
               CALL artm740_update_b('rtki_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL artm740_rtki_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_rtki_d[g_detail_idx].rtki002 = g_rtki_d_t.rtki002 
 
                  ) THEN
                  LET gs_keys[01] = g_rtkh_m.rtkh001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_rtki_d_t.rtki002
 
                  CALL artm740_key_update_b(gs_keys,'rtki_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtkh_m),util.JSON.stringify(g_rtki_d_t)
               LET g_log2 = util.JSON.stringify(g_rtkh_m),util.JSON.stringify(g_rtki_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL artm740_unlock_b("rtki_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            {<point name="input.body.after_input"/>}
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_rtki_d[li_reproduce_target].* = g_rtki_d[li_reproduce].*
 
               LET g_rtki_d[li_reproduce_target].rtki002 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_rtki_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_rtki_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_rtki2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtki2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artm740_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_rtki2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtki2_d[l_ac].* TO NULL 
            INITIALIZE g_rtki2_d_t.* TO NULL 
            INITIALIZE g_rtki2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_rtki2_d[l_ac].rtkj101 = "1"
      LET g_rtki2_d[l_ac].rtkj102 = "1"
      LET g_rtki2_d[l_ac].rtkj103 = "1"
      LET g_rtki2_d[l_ac].rtkj104 = "1"
      LET g_rtki2_d[l_ac].rtkj105 = "1"
      LET g_rtki2_d[l_ac].rtkj106 = "1"
      LET g_rtki2_d[l_ac].rtkj107 = "1"
      LET g_rtki2_d[l_ac].rtkj108 = "1"
      LET g_rtki2_d[l_ac].rtkj109 = "1"
      LET g_rtki2_d[l_ac].rtkj110 = "1"
      LET g_rtki2_d[l_ac].rtkj111 = "1"
      LET g_rtki2_d[l_ac].rtkj112 = "1"
      LET g_rtki2_d[l_ac].rtkj113 = "1"
      LET g_rtki2_d[l_ac].rtkj114 = "1"
      LET g_rtki2_d[l_ac].rtkj115 = "1"
      LET g_rtki2_d[l_ac].rtkj116 = "1"
      LET g_rtki2_d[l_ac].rtkj117 = "1"
      LET g_rtki2_d[l_ac].rtkj118 = "1"
      LET g_rtki2_d[l_ac].rtkj119 = "1"
      LET g_rtki2_d[l_ac].rtkj120 = "1"
      LET g_rtki2_d[l_ac].rtkj121 = "1"
      LET g_rtki2_d[l_ac].rtkj122 = "1"
      LET g_rtki2_d[l_ac].rtkj123 = "1"
      LET g_rtki2_d[l_ac].rtkj124 = "1"
      LET g_rtki2_d[l_ac].rtkj125 = "1"
      LET g_rtki2_d[l_ac].rtkj126 = "1"
      LET g_rtki2_d[l_ac].rtkj127 = "1"
      LET g_rtki2_d[l_ac].rtkj128 = "1"
      LET g_rtki2_d[l_ac].rtkj129 = "1"
      LET g_rtki2_d[l_ac].rtkj130 = "1"
      LET g_rtki2_d[l_ac].rtkj131 = "1"
      LET g_rtki2_d[l_ac].rtkj132 = "1"
      LET g_rtki2_d[l_ac].rtkj133 = "1"
      LET g_rtki2_d[l_ac].rtkj134 = "1"
      LET g_rtki2_d[l_ac].rtkj135 = "1"
      LET g_rtki2_d[l_ac].rtkj136 = "1"
      LET g_rtki2_d[l_ac].rtkj137 = "1"
      LET g_rtki2_d[l_ac].rtkj138 = "1"
      LET g_rtki2_d[l_ac].rtkj139 = "1"
      LET g_rtki2_d[l_ac].rtkj140 = "1"
      LET g_rtki2_d[l_ac].rtkj141 = "1"
      LET g_rtki2_d[l_ac].rtkj142 = "1"
      LET g_rtki2_d[l_ac].rtkj143 = "1"
      LET g_rtki2_d[l_ac].rtkj144 = "1"
      LET g_rtki2_d[l_ac].rtkj145 = "1"
      LET g_rtki2_d[l_ac].rtkj146 = "1"
      LET g_rtki2_d[l_ac].rtkj147 = "1"
      LET g_rtki2_d[l_ac].rtkj148 = "1"
      LET g_rtki2_d[l_ac].rtkj149 = "1"
      LET g_rtki2_d[l_ac].rtkj150 = "1"
      LET g_rtki2_d[l_ac].rtkj151 = "1"
      LET g_rtki2_d[l_ac].rtkj152 = "1"
 
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_rtki2_d_t.* = g_rtki2_d[l_ac].*     #新輸入資料
            LET g_rtki2_d_o.* = g_rtki2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artm740_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL artm740_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtki2_d[li_reproduce_target].* = g_rtki2_d[li_reproduce].*
 
               LET g_rtki2_d[li_reproduce_target].rtkj002 = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body2.before_insert"
            {<point name="input.body2.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[2] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artm740_cl USING g_enterprise,g_rtkh_m.rtkh001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artm740_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE artm740_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_rtki2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtki2_d[l_ac].rtkj002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_rtki2_d_t.* = g_rtki2_d[l_ac].*  #BACKUP
               LET g_rtki2_d_o.* = g_rtki2_d[l_ac].*  #BACKUP
               CALL artm740_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL artm740_set_no_entry_b(l_cmd)
               IF NOT artm740_lock_b("rtkj_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artm740_bcl2 INTO g_rtki2_d[l_ac].rtkjunit,g_rtki2_d[l_ac].rtkj002,g_rtki2_d[l_ac].rtkj101, 
                      g_rtki2_d[l_ac].rtkj102,g_rtki2_d[l_ac].rtkj103,g_rtki2_d[l_ac].rtkj104,g_rtki2_d[l_ac].rtkj105, 
                      g_rtki2_d[l_ac].rtkj106,g_rtki2_d[l_ac].rtkj107,g_rtki2_d[l_ac].rtkj108,g_rtki2_d[l_ac].rtkj109, 
                      g_rtki2_d[l_ac].rtkj110,g_rtki2_d[l_ac].rtkj111,g_rtki2_d[l_ac].rtkj112,g_rtki2_d[l_ac].rtkj113, 
                      g_rtki2_d[l_ac].rtkj114,g_rtki2_d[l_ac].rtkj115,g_rtki2_d[l_ac].rtkj116,g_rtki2_d[l_ac].rtkj117, 
                      g_rtki2_d[l_ac].rtkj118,g_rtki2_d[l_ac].rtkj119,g_rtki2_d[l_ac].rtkj120,g_rtki2_d[l_ac].rtkj121, 
                      g_rtki2_d[l_ac].rtkj122,g_rtki2_d[l_ac].rtkj123,g_rtki2_d[l_ac].rtkj124,g_rtki2_d[l_ac].rtkj125, 
                      g_rtki2_d[l_ac].rtkj126,g_rtki2_d[l_ac].rtkj127,g_rtki2_d[l_ac].rtkj128,g_rtki2_d[l_ac].rtkj129, 
                      g_rtki2_d[l_ac].rtkj130,g_rtki2_d[l_ac].rtkj131,g_rtki2_d[l_ac].rtkj132,g_rtki2_d[l_ac].rtkj133, 
                      g_rtki2_d[l_ac].rtkj134,g_rtki2_d[l_ac].rtkj135,g_rtki2_d[l_ac].rtkj136,g_rtki2_d[l_ac].rtkj137, 
                      g_rtki2_d[l_ac].rtkj138,g_rtki2_d[l_ac].rtkj139,g_rtki2_d[l_ac].rtkj140,g_rtki2_d[l_ac].rtkj141, 
                      g_rtki2_d[l_ac].rtkj142,g_rtki2_d[l_ac].rtkj143,g_rtki2_d[l_ac].rtkj144,g_rtki2_d[l_ac].rtkj145, 
                      g_rtki2_d[l_ac].rtkj146,g_rtki2_d[l_ac].rtkj147,g_rtki2_d[l_ac].rtkj148,g_rtki2_d[l_ac].rtkj149, 
                      g_rtki2_d[l_ac].rtkj150,g_rtki2_d[l_ac].rtkj151,g_rtki2_d[l_ac].rtkj152
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rtki2_d_mask_o[l_ac].* =  g_rtki2_d[l_ac].*
                  CALL artm740_rtkj_t_mask()
                  LET g_rtki2_d_mask_n[l_ac].* =  g_rtki2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL artm740_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               {<point name="input.body2.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body2.b_delete"
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtkh_m.rtkh001
               LET gs_keys[gs_keys.getLength()+1] = g_rtki2_d_t.rtkj002
            
               #刪除同層單身
               IF NOT artm740_delete_b('rtkj_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artm740_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT artm740_key_delete_b(gs_keys,'rtkj_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artm740_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身2刪除中 name="input.body2.m_delete"
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE artm740_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body2.a_delete"
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_rtki_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rtki2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body2.b_a_insert"
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM rtkj_t 
             WHERE rtkjent = g_enterprise AND rtkj001 = g_rtkh_m.rtkh001
               AND rtkj002 = g_rtki2_d[l_ac].rtkj002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body2.b_insert"
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys[2] = g_rtki2_d[g_detail_idx].rtkj002
               CALL artm740_insert_b('rtkj_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body2.a_insert"
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_rtki_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtkj_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artm740_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_rtki2_d[l_ac].* = g_rtki2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE artm740_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_rtki2_d[l_ac].* = g_rtki2_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body2.b_update"
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL artm740_rtkj_t_mask_restore('restore_mask_o')
                              
               UPDATE rtkj_t SET (rtkj001,rtkjunit,rtkj002,rtkj101,rtkj102,rtkj103,rtkj104,rtkj105,rtkj106, 
                   rtkj107,rtkj108,rtkj109,rtkj110,rtkj111,rtkj112,rtkj113,rtkj114,rtkj115,rtkj116,rtkj117, 
                   rtkj118,rtkj119,rtkj120,rtkj121,rtkj122,rtkj123,rtkj124,rtkj125,rtkj126,rtkj127,rtkj128, 
                   rtkj129,rtkj130,rtkj131,rtkj132,rtkj133,rtkj134,rtkj135,rtkj136,rtkj137,rtkj138,rtkj139, 
                   rtkj140,rtkj141,rtkj142,rtkj143,rtkj144,rtkj145,rtkj146,rtkj147,rtkj148,rtkj149,rtkj150, 
                   rtkj151,rtkj152) = (g_rtkh_m.rtkh001,g_rtki2_d[l_ac].rtkjunit,g_rtki2_d[l_ac].rtkj002, 
                   g_rtki2_d[l_ac].rtkj101,g_rtki2_d[l_ac].rtkj102,g_rtki2_d[l_ac].rtkj103,g_rtki2_d[l_ac].rtkj104, 
                   g_rtki2_d[l_ac].rtkj105,g_rtki2_d[l_ac].rtkj106,g_rtki2_d[l_ac].rtkj107,g_rtki2_d[l_ac].rtkj108, 
                   g_rtki2_d[l_ac].rtkj109,g_rtki2_d[l_ac].rtkj110,g_rtki2_d[l_ac].rtkj111,g_rtki2_d[l_ac].rtkj112, 
                   g_rtki2_d[l_ac].rtkj113,g_rtki2_d[l_ac].rtkj114,g_rtki2_d[l_ac].rtkj115,g_rtki2_d[l_ac].rtkj116, 
                   g_rtki2_d[l_ac].rtkj117,g_rtki2_d[l_ac].rtkj118,g_rtki2_d[l_ac].rtkj119,g_rtki2_d[l_ac].rtkj120, 
                   g_rtki2_d[l_ac].rtkj121,g_rtki2_d[l_ac].rtkj122,g_rtki2_d[l_ac].rtkj123,g_rtki2_d[l_ac].rtkj124, 
                   g_rtki2_d[l_ac].rtkj125,g_rtki2_d[l_ac].rtkj126,g_rtki2_d[l_ac].rtkj127,g_rtki2_d[l_ac].rtkj128, 
                   g_rtki2_d[l_ac].rtkj129,g_rtki2_d[l_ac].rtkj130,g_rtki2_d[l_ac].rtkj131,g_rtki2_d[l_ac].rtkj132, 
                   g_rtki2_d[l_ac].rtkj133,g_rtki2_d[l_ac].rtkj134,g_rtki2_d[l_ac].rtkj135,g_rtki2_d[l_ac].rtkj136, 
                   g_rtki2_d[l_ac].rtkj137,g_rtki2_d[l_ac].rtkj138,g_rtki2_d[l_ac].rtkj139,g_rtki2_d[l_ac].rtkj140, 
                   g_rtki2_d[l_ac].rtkj141,g_rtki2_d[l_ac].rtkj142,g_rtki2_d[l_ac].rtkj143,g_rtki2_d[l_ac].rtkj144, 
                   g_rtki2_d[l_ac].rtkj145,g_rtki2_d[l_ac].rtkj146,g_rtki2_d[l_ac].rtkj147,g_rtki2_d[l_ac].rtkj148, 
                   g_rtki2_d[l_ac].rtkj149,g_rtki2_d[l_ac].rtkj150,g_rtki2_d[l_ac].rtkj151,g_rtki2_d[l_ac].rtkj152)  
                   #自訂欄位頁簽
                WHERE rtkjent = g_enterprise AND rtkj001 = g_rtkh_m.rtkh001
                  AND rtkj002 = g_rtki2_d_t.rtkj002 #項次 
                  
               #add-point:單身page2修改中 name="input.body2.m_update"
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_rtki2_d[l_ac].* = g_rtki2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtkj_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_rtki2_d[l_ac].* = g_rtki2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtkj_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys_bak[1] = g_rtkh001_t
               LET gs_keys[2] = g_rtki2_d[g_detail_idx].rtkj002
               LET gs_keys_bak[2] = g_rtki2_d_t.rtkj002
               CALL artm740_update_b('rtkj_t',gs_keys,gs_keys_bak,"'2'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL artm740_rtkj_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_rtki2_d[g_detail_idx].rtkj002 = g_rtki2_d_t.rtkj002 
                  ) THEN
                  LET gs_keys[01] = g_rtkh_m.rtkh001
                  LET gs_keys[gs_keys.getLength()+1] = g_rtki2_d_t.rtkj002
                  CALL artm740_key_update_b(gs_keys,'rtkj_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtkh_m),util.JSON.stringify(g_rtki2_d_t)
               LET g_log2 = util.JSON.stringify(g_rtkh_m),util.JSON.stringify(g_rtki2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body2.a_update"
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkjunit
            #add-point:BEFORE FIELD rtkjunit name="input.b.page2.rtkjunit"
            {<point name="input.b.page2.rtkjunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkjunit
            
            #add-point:AFTER FIELD rtkjunit name="input.a.page2.rtkjunit"
            {<point name="input.a.page2.rtkjunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkjunit
            #add-point:ON CHANGE rtkjunit name="input.g.page2.rtkjunit"
            {<point name="input.g.page2.rtkjunit" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj002
            
            #add-point:AFTER FIELD rtkj002 name="input.a.page2.rtkj002"
            {<point name="input.a.page2.rtkj002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj002
            #add-point:BEFORE FIELD rtkj002 name="input.b.page2.rtkj002"
            {<point name="input.b.page2.rtkj002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj002
            #add-point:ON CHANGE rtkj002 name="input.g.page2.rtkj002"
            {<point name="input.g.page2.rtkj002" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj101
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj101,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj101
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj101 name="input.a.page2.rtkj101"
            {<point name="input.a.page2.rtkj101" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj101
            #add-point:BEFORE FIELD rtkj101 name="input.b.page2.rtkj101"
            {<point name="input.b.page2.rtkj101" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj101
            #add-point:ON CHANGE rtkj101 name="input.g.page2.rtkj101"
            {<point name="input.g.page2.rtkj101" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj102
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj102,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj102
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj102 name="input.a.page2.rtkj102"
            {<point name="input.a.page2.rtkj102" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj102
            #add-point:BEFORE FIELD rtkj102 name="input.b.page2.rtkj102"
            {<point name="input.b.page2.rtkj102" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj102
            #add-point:ON CHANGE rtkj102 name="input.g.page2.rtkj102"
            {<point name="input.g.page2.rtkj102" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj103
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj103,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj103
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj103 name="input.a.page2.rtkj103"
            {<point name="input.a.page2.rtkj103" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj103
            #add-point:BEFORE FIELD rtkj103 name="input.b.page2.rtkj103"
            {<point name="input.b.page2.rtkj103" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj103
            #add-point:ON CHANGE rtkj103 name="input.g.page2.rtkj103"
            {<point name="input.g.page2.rtkj103" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj104
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj104,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj104
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj104 name="input.a.page2.rtkj104"
            {<point name="input.a.page2.rtkj104" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj104
            #add-point:BEFORE FIELD rtkj104 name="input.b.page2.rtkj104"
            {<point name="input.b.page2.rtkj104" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj104
            #add-point:ON CHANGE rtkj104 name="input.g.page2.rtkj104"
            {<point name="input.g.page2.rtkj104" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj105
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj105,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj105
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj105 name="input.a.page2.rtkj105"
            {<point name="input.a.page2.rtkj105" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj105
            #add-point:BEFORE FIELD rtkj105 name="input.b.page2.rtkj105"
            {<point name="input.b.page2.rtkj105" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj105
            #add-point:ON CHANGE rtkj105 name="input.g.page2.rtkj105"
            {<point name="input.g.page2.rtkj105" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj106
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj106,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj106
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj106 name="input.a.page2.rtkj106"
            {<point name="input.a.page2.rtkj106" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj106
            #add-point:BEFORE FIELD rtkj106 name="input.b.page2.rtkj106"
            {<point name="input.b.page2.rtkj106" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj106
            #add-point:ON CHANGE rtkj106 name="input.g.page2.rtkj106"
            {<point name="input.g.page2.rtkj106" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj107
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj107,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj107
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj107 name="input.a.page2.rtkj107"
            {<point name="input.a.page2.rtkj107" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj107
            #add-point:BEFORE FIELD rtkj107 name="input.b.page2.rtkj107"
            {<point name="input.b.page2.rtkj107" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj107
            #add-point:ON CHANGE rtkj107 name="input.g.page2.rtkj107"
            {<point name="input.g.page2.rtkj107" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj108
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj108,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj108
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj108 name="input.a.page2.rtkj108"
            {<point name="input.a.page2.rtkj108" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj108
            #add-point:BEFORE FIELD rtkj108 name="input.b.page2.rtkj108"
            {<point name="input.b.page2.rtkj108" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj108
            #add-point:ON CHANGE rtkj108 name="input.g.page2.rtkj108"
            {<point name="input.g.page2.rtkj108" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj109
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj109,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj109
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj109 name="input.a.page2.rtkj109"
            {<point name="input.a.page2.rtkj109" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj109
            #add-point:BEFORE FIELD rtkj109 name="input.b.page2.rtkj109"
            {<point name="input.b.page2.rtkj109" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj109
            #add-point:ON CHANGE rtkj109 name="input.g.page2.rtkj109"
            {<point name="input.g.page2.rtkj109" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj110
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj110,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj110
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj110 name="input.a.page2.rtkj110"
            {<point name="input.a.page2.rtkj110" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj110
            #add-point:BEFORE FIELD rtkj110 name="input.b.page2.rtkj110"
            {<point name="input.b.page2.rtkj110" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj110
            #add-point:ON CHANGE rtkj110 name="input.g.page2.rtkj110"
            {<point name="input.g.page2.rtkj110" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj111
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj111,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj111
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj111 name="input.a.page2.rtkj111"
            {<point name="input.a.page2.rtkj111" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj111
            #add-point:BEFORE FIELD rtkj111 name="input.b.page2.rtkj111"
            {<point name="input.b.page2.rtkj111" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj111
            #add-point:ON CHANGE rtkj111 name="input.g.page2.rtkj111"
            {<point name="input.g.page2.rtkj111" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj112
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj112,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj112
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj112 name="input.a.page2.rtkj112"
            {<point name="input.a.page2.rtkj112" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj112
            #add-point:BEFORE FIELD rtkj112 name="input.b.page2.rtkj112"
            {<point name="input.b.page2.rtkj112" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj112
            #add-point:ON CHANGE rtkj112 name="input.g.page2.rtkj112"
            {<point name="input.g.page2.rtkj112" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj113
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj113,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj113
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj113 name="input.a.page2.rtkj113"
            {<point name="input.a.page2.rtkj113" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj113
            #add-point:BEFORE FIELD rtkj113 name="input.b.page2.rtkj113"
            {<point name="input.b.page2.rtkj113" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj113
            #add-point:ON CHANGE rtkj113 name="input.g.page2.rtkj113"
            {<point name="input.g.page2.rtkj113" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj114
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj114,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj114
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj114 name="input.a.page2.rtkj114"
            {<point name="input.a.page2.rtkj114" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj114
            #add-point:BEFORE FIELD rtkj114 name="input.b.page2.rtkj114"
            {<point name="input.b.page2.rtkj114" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj114
            #add-point:ON CHANGE rtkj114 name="input.g.page2.rtkj114"
            {<point name="input.g.page2.rtkj114" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj115
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj115,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj115
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj115 name="input.a.page2.rtkj115"
            {<point name="input.a.page2.rtkj115" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj115
            #add-point:BEFORE FIELD rtkj115 name="input.b.page2.rtkj115"
            {<point name="input.b.page2.rtkj115" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj115
            #add-point:ON CHANGE rtkj115 name="input.g.page2.rtkj115"
            {<point name="input.g.page2.rtkj115" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj116
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj116,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj116
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj116 name="input.a.page2.rtkj116"
            {<point name="input.a.page2.rtkj116" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj116
            #add-point:BEFORE FIELD rtkj116 name="input.b.page2.rtkj116"
            {<point name="input.b.page2.rtkj116" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj116
            #add-point:ON CHANGE rtkj116 name="input.g.page2.rtkj116"
            {<point name="input.g.page2.rtkj116" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj117
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj117,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj117
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj117 name="input.a.page2.rtkj117"
            {<point name="input.a.page2.rtkj117" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj117
            #add-point:BEFORE FIELD rtkj117 name="input.b.page2.rtkj117"
            {<point name="input.b.page2.rtkj117" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj117
            #add-point:ON CHANGE rtkj117 name="input.g.page2.rtkj117"
            {<point name="input.g.page2.rtkj117" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj118
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj118,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj118
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj118 name="input.a.page2.rtkj118"
            {<point name="input.a.page2.rtkj118" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj118
            #add-point:BEFORE FIELD rtkj118 name="input.b.page2.rtkj118"
            {<point name="input.b.page2.rtkj118" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj118
            #add-point:ON CHANGE rtkj118 name="input.g.page2.rtkj118"
            {<point name="input.g.page2.rtkj118" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj119
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj119,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj119
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj119 name="input.a.page2.rtkj119"
            {<point name="input.a.page2.rtkj119" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj119
            #add-point:BEFORE FIELD rtkj119 name="input.b.page2.rtkj119"
            {<point name="input.b.page2.rtkj119" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj119
            #add-point:ON CHANGE rtkj119 name="input.g.page2.rtkj119"
            {<point name="input.g.page2.rtkj119" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj120
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj120,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj120
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj120 name="input.a.page2.rtkj120"
            {<point name="input.a.page2.rtkj120" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj120
            #add-point:BEFORE FIELD rtkj120 name="input.b.page2.rtkj120"
            {<point name="input.b.page2.rtkj120" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj120
            #add-point:ON CHANGE rtkj120 name="input.g.page2.rtkj120"
            {<point name="input.g.page2.rtkj120" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj121
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj121,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj121
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj121 name="input.a.page2.rtkj121"
            {<point name="input.a.page2.rtkj121" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj121
            #add-point:BEFORE FIELD rtkj121 name="input.b.page2.rtkj121"
            {<point name="input.b.page2.rtkj121" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj121
            #add-point:ON CHANGE rtkj121 name="input.g.page2.rtkj121"
            {<point name="input.g.page2.rtkj121" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj122
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj122,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj122
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj122 name="input.a.page2.rtkj122"
            {<point name="input.a.page2.rtkj122" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj122
            #add-point:BEFORE FIELD rtkj122 name="input.b.page2.rtkj122"
            {<point name="input.b.page2.rtkj122" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj122
            #add-point:ON CHANGE rtkj122 name="input.g.page2.rtkj122"
            {<point name="input.g.page2.rtkj122" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj123
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj123,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj123
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj123 name="input.a.page2.rtkj123"
            {<point name="input.a.page2.rtkj123" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj123
            #add-point:BEFORE FIELD rtkj123 name="input.b.page2.rtkj123"
            {<point name="input.b.page2.rtkj123" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj123
            #add-point:ON CHANGE rtkj123 name="input.g.page2.rtkj123"
            {<point name="input.g.page2.rtkj123" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj124
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj124,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj124
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj124 name="input.a.page2.rtkj124"
            {<point name="input.a.page2.rtkj124" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj124
            #add-point:BEFORE FIELD rtkj124 name="input.b.page2.rtkj124"
            {<point name="input.b.page2.rtkj124" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj124
            #add-point:ON CHANGE rtkj124 name="input.g.page2.rtkj124"
            {<point name="input.g.page2.rtkj124" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj125
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj125,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj125
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj125 name="input.a.page2.rtkj125"
            {<point name="input.a.page2.rtkj125" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj125
            #add-point:BEFORE FIELD rtkj125 name="input.b.page2.rtkj125"
            {<point name="input.b.page2.rtkj125" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj125
            #add-point:ON CHANGE rtkj125 name="input.g.page2.rtkj125"
            {<point name="input.g.page2.rtkj125" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj126
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj126,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj126
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj126 name="input.a.page2.rtkj126"
            {<point name="input.a.page2.rtkj126" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj126
            #add-point:BEFORE FIELD rtkj126 name="input.b.page2.rtkj126"
            {<point name="input.b.page2.rtkj126" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj126
            #add-point:ON CHANGE rtkj126 name="input.g.page2.rtkj126"
            {<point name="input.g.page2.rtkj126" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj127
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj127,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj127
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj127 name="input.a.page2.rtkj127"
            {<point name="input.a.page2.rtkj127" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj127
            #add-point:BEFORE FIELD rtkj127 name="input.b.page2.rtkj127"
            {<point name="input.b.page2.rtkj127" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj127
            #add-point:ON CHANGE rtkj127 name="input.g.page2.rtkj127"
            {<point name="input.g.page2.rtkj127" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj128
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj128,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj128
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj128 name="input.a.page2.rtkj128"
            {<point name="input.a.page2.rtkj128" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj128
            #add-point:BEFORE FIELD rtkj128 name="input.b.page2.rtkj128"
            {<point name="input.b.page2.rtkj128" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj128
            #add-point:ON CHANGE rtkj128 name="input.g.page2.rtkj128"
            {<point name="input.g.page2.rtkj128" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj129
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj129,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj129
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj129 name="input.a.page2.rtkj129"
            {<point name="input.a.page2.rtkj129" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj129
            #add-point:BEFORE FIELD rtkj129 name="input.b.page2.rtkj129"
            {<point name="input.b.page2.rtkj129" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj129
            #add-point:ON CHANGE rtkj129 name="input.g.page2.rtkj129"
            {<point name="input.g.page2.rtkj129" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj130
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj130,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj130
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj130 name="input.a.page2.rtkj130"
            {<point name="input.a.page2.rtkj130" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj130
            #add-point:BEFORE FIELD rtkj130 name="input.b.page2.rtkj130"
            {<point name="input.b.page2.rtkj130" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj130
            #add-point:ON CHANGE rtkj130 name="input.g.page2.rtkj130"
            {<point name="input.g.page2.rtkj130" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj131
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj131,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj131
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj131 name="input.a.page2.rtkj131"
            {<point name="input.a.page2.rtkj131" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj131
            #add-point:BEFORE FIELD rtkj131 name="input.b.page2.rtkj131"
            {<point name="input.b.page2.rtkj131" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj131
            #add-point:ON CHANGE rtkj131 name="input.g.page2.rtkj131"
            {<point name="input.g.page2.rtkj131" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj132
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj132,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj132
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj132 name="input.a.page2.rtkj132"
            {<point name="input.a.page2.rtkj132" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj132
            #add-point:BEFORE FIELD rtkj132 name="input.b.page2.rtkj132"
            {<point name="input.b.page2.rtkj132" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj132
            #add-point:ON CHANGE rtkj132 name="input.g.page2.rtkj132"
            {<point name="input.g.page2.rtkj132" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj133
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj133,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj133
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj133 name="input.a.page2.rtkj133"
            {<point name="input.a.page2.rtkj133" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj133
            #add-point:BEFORE FIELD rtkj133 name="input.b.page2.rtkj133"
            {<point name="input.b.page2.rtkj133" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj133
            #add-point:ON CHANGE rtkj133 name="input.g.page2.rtkj133"
            {<point name="input.g.page2.rtkj133" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj134
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj134,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj134
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj134 name="input.a.page2.rtkj134"
            {<point name="input.a.page2.rtkj134" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj134
            #add-point:BEFORE FIELD rtkj134 name="input.b.page2.rtkj134"
            {<point name="input.b.page2.rtkj134" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj134
            #add-point:ON CHANGE rtkj134 name="input.g.page2.rtkj134"
            {<point name="input.g.page2.rtkj134" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj135
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj135,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj135
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj135 name="input.a.page2.rtkj135"
            {<point name="input.a.page2.rtkj135" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj135
            #add-point:BEFORE FIELD rtkj135 name="input.b.page2.rtkj135"
            {<point name="input.b.page2.rtkj135" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj135
            #add-point:ON CHANGE rtkj135 name="input.g.page2.rtkj135"
            {<point name="input.g.page2.rtkj135" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj136
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj136,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj136
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj136 name="input.a.page2.rtkj136"
            {<point name="input.a.page2.rtkj136" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj136
            #add-point:BEFORE FIELD rtkj136 name="input.b.page2.rtkj136"
            {<point name="input.b.page2.rtkj136" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj136
            #add-point:ON CHANGE rtkj136 name="input.g.page2.rtkj136"
            {<point name="input.g.page2.rtkj136" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj137
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj137,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj137
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj137 name="input.a.page2.rtkj137"
            {<point name="input.a.page2.rtkj137" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj137
            #add-point:BEFORE FIELD rtkj137 name="input.b.page2.rtkj137"
            {<point name="input.b.page2.rtkj137" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj137
            #add-point:ON CHANGE rtkj137 name="input.g.page2.rtkj137"
            {<point name="input.g.page2.rtkj137" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj138
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj138,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj138
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj138 name="input.a.page2.rtkj138"
            {<point name="input.a.page2.rtkj138" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj138
            #add-point:BEFORE FIELD rtkj138 name="input.b.page2.rtkj138"
            {<point name="input.b.page2.rtkj138" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj138
            #add-point:ON CHANGE rtkj138 name="input.g.page2.rtkj138"
            {<point name="input.g.page2.rtkj138" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj139
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj139,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj139
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj139 name="input.a.page2.rtkj139"
            {<point name="input.a.page2.rtkj139" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj139
            #add-point:BEFORE FIELD rtkj139 name="input.b.page2.rtkj139"
            {<point name="input.b.page2.rtkj139" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj139
            #add-point:ON CHANGE rtkj139 name="input.g.page2.rtkj139"
            {<point name="input.g.page2.rtkj139" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj140
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj140,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj140
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj140 name="input.a.page2.rtkj140"
            {<point name="input.a.page2.rtkj140" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj140
            #add-point:BEFORE FIELD rtkj140 name="input.b.page2.rtkj140"
            {<point name="input.b.page2.rtkj140" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj140
            #add-point:ON CHANGE rtkj140 name="input.g.page2.rtkj140"
            {<point name="input.g.page2.rtkj140" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj141
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj141,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj141
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj141 name="input.a.page2.rtkj141"
            {<point name="input.a.page2.rtkj141" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj141
            #add-point:BEFORE FIELD rtkj141 name="input.b.page2.rtkj141"
            {<point name="input.b.page2.rtkj141" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj141
            #add-point:ON CHANGE rtkj141 name="input.g.page2.rtkj141"
            {<point name="input.g.page2.rtkj141" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj142
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj142,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj142
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj142 name="input.a.page2.rtkj142"
            {<point name="input.a.page2.rtkj142" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj142
            #add-point:BEFORE FIELD rtkj142 name="input.b.page2.rtkj142"
            {<point name="input.b.page2.rtkj142" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj142
            #add-point:ON CHANGE rtkj142 name="input.g.page2.rtkj142"
            {<point name="input.g.page2.rtkj142" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj143
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj143,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj143
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj143 name="input.a.page2.rtkj143"
            {<point name="input.a.page2.rtkj143" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj143
            #add-point:BEFORE FIELD rtkj143 name="input.b.page2.rtkj143"
            {<point name="input.b.page2.rtkj143" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj143
            #add-point:ON CHANGE rtkj143 name="input.g.page2.rtkj143"
            {<point name="input.g.page2.rtkj143" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj144
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj144,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj144
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj144 name="input.a.page2.rtkj144"
            {<point name="input.a.page2.rtkj144" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj144
            #add-point:BEFORE FIELD rtkj144 name="input.b.page2.rtkj144"
            {<point name="input.b.page2.rtkj144" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj144
            #add-point:ON CHANGE rtkj144 name="input.g.page2.rtkj144"
            {<point name="input.g.page2.rtkj144" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj145
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj145,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj145
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj145 name="input.a.page2.rtkj145"
            {<point name="input.a.page2.rtkj145" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj145
            #add-point:BEFORE FIELD rtkj145 name="input.b.page2.rtkj145"
            {<point name="input.b.page2.rtkj145" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj145
            #add-point:ON CHANGE rtkj145 name="input.g.page2.rtkj145"
            {<point name="input.g.page2.rtkj145" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj146
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj146,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj146
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj146 name="input.a.page2.rtkj146"
            {<point name="input.a.page2.rtkj146" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj146
            #add-point:BEFORE FIELD rtkj146 name="input.b.page2.rtkj146"
            {<point name="input.b.page2.rtkj146" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj146
            #add-point:ON CHANGE rtkj146 name="input.g.page2.rtkj146"
            {<point name="input.g.page2.rtkj146" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj147
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj147,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj147
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj147 name="input.a.page2.rtkj147"
            {<point name="input.a.page2.rtkj147" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj147
            #add-point:BEFORE FIELD rtkj147 name="input.b.page2.rtkj147"
            {<point name="input.b.page2.rtkj147" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj147
            #add-point:ON CHANGE rtkj147 name="input.g.page2.rtkj147"
            {<point name="input.g.page2.rtkj147" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj148
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj148,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj148
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj148 name="input.a.page2.rtkj148"
            {<point name="input.a.page2.rtkj148" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj148
            #add-point:BEFORE FIELD rtkj148 name="input.b.page2.rtkj148"
            {<point name="input.b.page2.rtkj148" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj148
            #add-point:ON CHANGE rtkj148 name="input.g.page2.rtkj148"
            {<point name="input.g.page2.rtkj148" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj149
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj149,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj149
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj149 name="input.a.page2.rtkj149"
            {<point name="input.a.page2.rtkj149" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj149
            #add-point:BEFORE FIELD rtkj149 name="input.b.page2.rtkj149"
            {<point name="input.b.page2.rtkj149" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj149
            #add-point:ON CHANGE rtkj149 name="input.g.page2.rtkj149"
            {<point name="input.g.page2.rtkj149" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj150
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj150,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj150
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj150 name="input.a.page2.rtkj150"
            {<point name="input.a.page2.rtkj150" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj150
            #add-point:BEFORE FIELD rtkj150 name="input.b.page2.rtkj150"
            {<point name="input.b.page2.rtkj150" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj150
            #add-point:ON CHANGE rtkj150 name="input.g.page2.rtkj150"
            {<point name="input.g.page2.rtkj150" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj151
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj151,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj151
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj151 name="input.a.page2.rtkj151"
            {<point name="input.a.page2.rtkj151" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj151
            #add-point:BEFORE FIELD rtkj151 name="input.b.page2.rtkj151"
            {<point name="input.b.page2.rtkj151" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj151
            #add-point:ON CHANGE rtkj151 name="input.g.page2.rtkj151"
            {<point name="input.g.page2.rtkj151" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkj152
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki2_d[l_ac].rtkj152,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkj152
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkj152 name="input.a.page2.rtkj152"
            {<point name="input.a.page2.rtkj152" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkj152
            #add-point:BEFORE FIELD rtkj152 name="input.b.page2.rtkj152"
            {<point name="input.b.page2.rtkj152" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkj152
            #add-point:ON CHANGE rtkj152 name="input.g.page2.rtkj152"
            {<point name="input.g.page2.rtkj152" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.rtkjunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkjunit
            #add-point:ON ACTION controlp INFIELD rtkjunit name="input.c.page2.rtkjunit"
            {<point name="input.c.page2.rtkjunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj002
            #add-point:ON ACTION controlp INFIELD rtkj002 name="input.c.page2.rtkj002"
            {<point name="input.c.page2.rtkj002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj101
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj101
            #add-point:ON ACTION controlp INFIELD rtkj101 name="input.c.page2.rtkj101"
            {<point name="input.c.page2.rtkj101" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj102
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj102
            #add-point:ON ACTION controlp INFIELD rtkj102 name="input.c.page2.rtkj102"
            {<point name="input.c.page2.rtkj102" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj103
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj103
            #add-point:ON ACTION controlp INFIELD rtkj103 name="input.c.page2.rtkj103"
            {<point name="input.c.page2.rtkj103" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj104
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj104
            #add-point:ON ACTION controlp INFIELD rtkj104 name="input.c.page2.rtkj104"
            {<point name="input.c.page2.rtkj104" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj105
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj105
            #add-point:ON ACTION controlp INFIELD rtkj105 name="input.c.page2.rtkj105"
            {<point name="input.c.page2.rtkj105" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj106
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj106
            #add-point:ON ACTION controlp INFIELD rtkj106 name="input.c.page2.rtkj106"
            {<point name="input.c.page2.rtkj106" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj107
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj107
            #add-point:ON ACTION controlp INFIELD rtkj107 name="input.c.page2.rtkj107"
            {<point name="input.c.page2.rtkj107" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj108
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj108
            #add-point:ON ACTION controlp INFIELD rtkj108 name="input.c.page2.rtkj108"
            {<point name="input.c.page2.rtkj108" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj109
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj109
            #add-point:ON ACTION controlp INFIELD rtkj109 name="input.c.page2.rtkj109"
            {<point name="input.c.page2.rtkj109" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj110
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj110
            #add-point:ON ACTION controlp INFIELD rtkj110 name="input.c.page2.rtkj110"
            {<point name="input.c.page2.rtkj110" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj111
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj111
            #add-point:ON ACTION controlp INFIELD rtkj111 name="input.c.page2.rtkj111"
            {<point name="input.c.page2.rtkj111" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj112
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj112
            #add-point:ON ACTION controlp INFIELD rtkj112 name="input.c.page2.rtkj112"
            {<point name="input.c.page2.rtkj112" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj113
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj113
            #add-point:ON ACTION controlp INFIELD rtkj113 name="input.c.page2.rtkj113"
            {<point name="input.c.page2.rtkj113" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj114
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj114
            #add-point:ON ACTION controlp INFIELD rtkj114 name="input.c.page2.rtkj114"
            {<point name="input.c.page2.rtkj114" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj115
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj115
            #add-point:ON ACTION controlp INFIELD rtkj115 name="input.c.page2.rtkj115"
            {<point name="input.c.page2.rtkj115" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj116
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj116
            #add-point:ON ACTION controlp INFIELD rtkj116 name="input.c.page2.rtkj116"
            {<point name="input.c.page2.rtkj116" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj117
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj117
            #add-point:ON ACTION controlp INFIELD rtkj117 name="input.c.page2.rtkj117"
            {<point name="input.c.page2.rtkj117" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj118
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj118
            #add-point:ON ACTION controlp INFIELD rtkj118 name="input.c.page2.rtkj118"
            {<point name="input.c.page2.rtkj118" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj119
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj119
            #add-point:ON ACTION controlp INFIELD rtkj119 name="input.c.page2.rtkj119"
            {<point name="input.c.page2.rtkj119" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj120
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj120
            #add-point:ON ACTION controlp INFIELD rtkj120 name="input.c.page2.rtkj120"
            {<point name="input.c.page2.rtkj120" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj121
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj121
            #add-point:ON ACTION controlp INFIELD rtkj121 name="input.c.page2.rtkj121"
            {<point name="input.c.page2.rtkj121" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj122
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj122
            #add-point:ON ACTION controlp INFIELD rtkj122 name="input.c.page2.rtkj122"
            {<point name="input.c.page2.rtkj122" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj123
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj123
            #add-point:ON ACTION controlp INFIELD rtkj123 name="input.c.page2.rtkj123"
            {<point name="input.c.page2.rtkj123" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj124
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj124
            #add-point:ON ACTION controlp INFIELD rtkj124 name="input.c.page2.rtkj124"
            {<point name="input.c.page2.rtkj124" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj125
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj125
            #add-point:ON ACTION controlp INFIELD rtkj125 name="input.c.page2.rtkj125"
            {<point name="input.c.page2.rtkj125" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj126
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj126
            #add-point:ON ACTION controlp INFIELD rtkj126 name="input.c.page2.rtkj126"
            {<point name="input.c.page2.rtkj126" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj127
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj127
            #add-point:ON ACTION controlp INFIELD rtkj127 name="input.c.page2.rtkj127"
            {<point name="input.c.page2.rtkj127" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj128
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj128
            #add-point:ON ACTION controlp INFIELD rtkj128 name="input.c.page2.rtkj128"
            {<point name="input.c.page2.rtkj128" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj129
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj129
            #add-point:ON ACTION controlp INFIELD rtkj129 name="input.c.page2.rtkj129"
            {<point name="input.c.page2.rtkj129" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj130
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj130
            #add-point:ON ACTION controlp INFIELD rtkj130 name="input.c.page2.rtkj130"
            {<point name="input.c.page2.rtkj130" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj131
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj131
            #add-point:ON ACTION controlp INFIELD rtkj131 name="input.c.page2.rtkj131"
            {<point name="input.c.page2.rtkj131" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj132
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj132
            #add-point:ON ACTION controlp INFIELD rtkj132 name="input.c.page2.rtkj132"
            {<point name="input.c.page2.rtkj132" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj133
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj133
            #add-point:ON ACTION controlp INFIELD rtkj133 name="input.c.page2.rtkj133"
            {<point name="input.c.page2.rtkj133" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj134
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj134
            #add-point:ON ACTION controlp INFIELD rtkj134 name="input.c.page2.rtkj134"
            {<point name="input.c.page2.rtkj134" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj135
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj135
            #add-point:ON ACTION controlp INFIELD rtkj135 name="input.c.page2.rtkj135"
            {<point name="input.c.page2.rtkj135" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj136
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj136
            #add-point:ON ACTION controlp INFIELD rtkj136 name="input.c.page2.rtkj136"
            {<point name="input.c.page2.rtkj136" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj137
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj137
            #add-point:ON ACTION controlp INFIELD rtkj137 name="input.c.page2.rtkj137"
            {<point name="input.c.page2.rtkj137" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj138
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj138
            #add-point:ON ACTION controlp INFIELD rtkj138 name="input.c.page2.rtkj138"
            {<point name="input.c.page2.rtkj138" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj139
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj139
            #add-point:ON ACTION controlp INFIELD rtkj139 name="input.c.page2.rtkj139"
            {<point name="input.c.page2.rtkj139" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj140
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj140
            #add-point:ON ACTION controlp INFIELD rtkj140 name="input.c.page2.rtkj140"
            {<point name="input.c.page2.rtkj140" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj141
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj141
            #add-point:ON ACTION controlp INFIELD rtkj141 name="input.c.page2.rtkj141"
            {<point name="input.c.page2.rtkj141" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj142
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj142
            #add-point:ON ACTION controlp INFIELD rtkj142 name="input.c.page2.rtkj142"
            {<point name="input.c.page2.rtkj142" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj143
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj143
            #add-point:ON ACTION controlp INFIELD rtkj143 name="input.c.page2.rtkj143"
            {<point name="input.c.page2.rtkj143" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj144
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj144
            #add-point:ON ACTION controlp INFIELD rtkj144 name="input.c.page2.rtkj144"
            {<point name="input.c.page2.rtkj144" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj145
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj145
            #add-point:ON ACTION controlp INFIELD rtkj145 name="input.c.page2.rtkj145"
            {<point name="input.c.page2.rtkj145" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj146
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj146
            #add-point:ON ACTION controlp INFIELD rtkj146 name="input.c.page2.rtkj146"
            {<point name="input.c.page2.rtkj146" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj147
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj147
            #add-point:ON ACTION controlp INFIELD rtkj147 name="input.c.page2.rtkj147"
            {<point name="input.c.page2.rtkj147" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj148
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj148
            #add-point:ON ACTION controlp INFIELD rtkj148 name="input.c.page2.rtkj148"
            {<point name="input.c.page2.rtkj148" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj149
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj149
            #add-point:ON ACTION controlp INFIELD rtkj149 name="input.c.page2.rtkj149"
            {<point name="input.c.page2.rtkj149" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj150
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj150
            #add-point:ON ACTION controlp INFIELD rtkj150 name="input.c.page2.rtkj150"
            {<point name="input.c.page2.rtkj150" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj151
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj151
            #add-point:ON ACTION controlp INFIELD rtkj151 name="input.c.page2.rtkj151"
            {<point name="input.c.page2.rtkj151" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtkj152
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkj152
            #add-point:ON ACTION controlp INFIELD rtkj152 name="input.c.page2.rtkj152"
            {<point name="input.c.page2.rtkj152" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row name="input.body2.after_row"
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_rtki2_d[l_ac].* = g_rtki2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE artm740_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL artm740_unlock_b("rtkj_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2 name="input.body2.after_row2"
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_rtki2_d[li_reproduce_target].* = g_rtki2_d[li_reproduce].*
 
               LET g_rtki2_d[li_reproduce_target].rtkj002 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_rtki2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_rtki2_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_rtki3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body3.before_input2"
            {<point name="input.body3.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtki3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artm740_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_rtki3_d.getLength()
            #add-point:資料輸入前 name="input.body3.before_input"
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtki3_d[l_ac].* TO NULL 
            INITIALIZE g_rtki3_d_t.* TO NULL 
            INITIALIZE g_rtki3_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
                  LET g_rtki3_d[l_ac].rtkl101 = "1"
      LET g_rtki3_d[l_ac].rtkl102 = "1"
      LET g_rtki3_d[l_ac].rtkl103 = "1"
      LET g_rtki3_d[l_ac].rtkl104 = "1"
      LET g_rtki3_d[l_ac].rtkl105 = "1"
      LET g_rtki3_d[l_ac].rtkl106 = "1"
      LET g_rtki3_d[l_ac].rtkl107 = "1"
 
            #add-point:modify段before備份 name="input.body3.insert.before_bak"
            {<point name="input.body3.insert.before_bak"/>}
            #end add-point
            LET g_rtki3_d_t.* = g_rtki3_d[l_ac].*     #新輸入資料
            LET g_rtki3_d_o.* = g_rtki3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artm740_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body3.insert.after_set_entry_b"
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL artm740_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtki3_d[li_reproduce_target].* = g_rtki3_d[li_reproduce].*
 
               LET g_rtki3_d[li_reproduce_target].rtkl002 = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body3.before_insert"
            {<point name="input.body3.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body3.before_row2"
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[3] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artm740_cl USING g_enterprise,g_rtkh_m.rtkh001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artm740_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE artm740_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_rtki3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtki3_d[l_ac].rtkl002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_rtki3_d_t.* = g_rtki3_d[l_ac].*  #BACKUP
               LET g_rtki3_d_o.* = g_rtki3_d[l_ac].*  #BACKUP
               CALL artm740_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body3.after_set_entry_b"
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL artm740_set_no_entry_b(l_cmd)
               IF NOT artm740_lock_b("rtkl_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artm740_bcl3 INTO g_rtki3_d[l_ac].rtklunit,g_rtki3_d[l_ac].rtkl002,g_rtki3_d[l_ac].rtkl101, 
                      g_rtki3_d[l_ac].rtkl102,g_rtki3_d[l_ac].rtkl103,g_rtki3_d[l_ac].rtkl104,g_rtki3_d[l_ac].rtkl105, 
                      g_rtki3_d[l_ac].rtkl106,g_rtki3_d[l_ac].rtkl107
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rtki3_d_mask_o[l_ac].* =  g_rtki3_d[l_ac].*
                  CALL artm740_rtkl_t_mask()
                  LET g_rtki3_d_mask_n[l_ac].* =  g_rtki3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL artm740_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body3.before_row"
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body3.after_delete_d"
               {<point name="input.body3.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body3.b_delete_ask"
               {<point name="input.body3.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前 name="input.body3.b_delete"
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtkh_m.rtkh001
               LET gs_keys[gs_keys.getLength()+1] = g_rtki3_d_t.rtkl002
            
               #刪除同層單身
               IF NOT artm740_delete_b('rtkl_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artm740_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT artm740_key_delete_b(gs_keys,'rtkl_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artm740_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身3刪除中 name="input.body3.m_delete"
               {<point name="input.body3.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE artm740_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身3刪除後 name="input.body3.a_delete"
               {<point name="input.body3.a_delete"/>}
               #end add-point
               LET l_count = g_rtki_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body3.after_delete"
               {<point name="input.body3.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rtki3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前 name="input.body3.b_a_insert"
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM rtkl_t 
             WHERE rtklent = g_enterprise AND rtkl001 = g_rtkh_m.rtkh001
               AND rtkl002 = g_rtki3_d[l_ac].rtkl002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前 name="input.body3.b_insert"
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys[2] = g_rtki3_d[g_detail_idx].rtkl002
               CALL artm740_insert_b('rtkl_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3 name="input.body3.a_insert"
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_rtki_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtkl_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artm740_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body3.after_insert"
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_rtki3_d[l_ac].* = g_rtki3_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE artm740_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_rtki3_d[l_ac].* = g_rtki3_d_t.*
            ELSE
               #add-point:單身page3修改前 name="input.body3.b_update"
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL artm740_rtkl_t_mask_restore('restore_mask_o')
                              
               UPDATE rtkl_t SET (rtkl001,rtklunit,rtkl002,rtkl101,rtkl102,rtkl103,rtkl104,rtkl105,rtkl106, 
                   rtkl107) = (g_rtkh_m.rtkh001,g_rtki3_d[l_ac].rtklunit,g_rtki3_d[l_ac].rtkl002,g_rtki3_d[l_ac].rtkl101, 
                   g_rtki3_d[l_ac].rtkl102,g_rtki3_d[l_ac].rtkl103,g_rtki3_d[l_ac].rtkl104,g_rtki3_d[l_ac].rtkl105, 
                   g_rtki3_d[l_ac].rtkl106,g_rtki3_d[l_ac].rtkl107) #自訂欄位頁簽
                WHERE rtklent = g_enterprise AND rtkl001 = g_rtkh_m.rtkh001
                  AND rtkl002 = g_rtki3_d_t.rtkl002 #項次 
                  
               #add-point:單身page3修改中 name="input.body3.m_update"
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_rtki3_d[l_ac].* = g_rtki3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtkl_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_rtki3_d[l_ac].* = g_rtki3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtkl_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys_bak[1] = g_rtkh001_t
               LET gs_keys[2] = g_rtki3_d[g_detail_idx].rtkl002
               LET gs_keys_bak[2] = g_rtki3_d_t.rtkl002
               CALL artm740_update_b('rtkl_t',gs_keys,gs_keys_bak,"'3'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL artm740_rtkl_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_rtki3_d[g_detail_idx].rtkl002 = g_rtki3_d_t.rtkl002 
                  ) THEN
                  LET gs_keys[01] = g_rtkh_m.rtkh001
                  LET gs_keys[gs_keys.getLength()+1] = g_rtki3_d_t.rtkl002
                  CALL artm740_key_update_b(gs_keys,'rtkl_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtkh_m),util.JSON.stringify(g_rtki3_d_t)
               LET g_log2 = util.JSON.stringify(g_rtkh_m),util.JSON.stringify(g_rtki3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後 name="input.body3.a_update"
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtklunit
            #add-point:BEFORE FIELD rtklunit name="input.b.page3.rtklunit"
            {<point name="input.b.page3.rtklunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtklunit
            
            #add-point:AFTER FIELD rtklunit name="input.a.page3.rtklunit"
            {<point name="input.a.page3.rtklunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtklunit
            #add-point:ON CHANGE rtklunit name="input.g.page3.rtklunit"
            {<point name="input.g.page3.rtklunit" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkl002
            
            #add-point:AFTER FIELD rtkl002 name="input.a.page3.rtkl002"
            {<point name="input.a.page3.rtkl002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkl002
            #add-point:BEFORE FIELD rtkl002 name="input.b.page3.rtkl002"
            {<point name="input.b.page3.rtkl002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkl002
            #add-point:ON CHANGE rtkl002 name="input.g.page3.rtkl002"
            {<point name="input.g.page3.rtkl002" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkl101
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki3_d[l_ac].rtkl101,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkl101
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkl101 name="input.a.page3.rtkl101"
            {<point name="input.a.page3.rtkl101" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkl101
            #add-point:BEFORE FIELD rtkl101 name="input.b.page3.rtkl101"
            {<point name="input.b.page3.rtkl101" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkl101
            #add-point:ON CHANGE rtkl101 name="input.g.page3.rtkl101"
            {<point name="input.g.page3.rtkl101" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkl102
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki3_d[l_ac].rtkl102,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkl102
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkl102 name="input.a.page3.rtkl102"
            {<point name="input.a.page3.rtkl102" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkl102
            #add-point:BEFORE FIELD rtkl102 name="input.b.page3.rtkl102"
            {<point name="input.b.page3.rtkl102" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkl102
            #add-point:ON CHANGE rtkl102 name="input.g.page3.rtkl102"
            {<point name="input.g.page3.rtkl102" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkl103
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki3_d[l_ac].rtkl103,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkl103
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkl103 name="input.a.page3.rtkl103"
            {<point name="input.a.page3.rtkl103" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkl103
            #add-point:BEFORE FIELD rtkl103 name="input.b.page3.rtkl103"
            {<point name="input.b.page3.rtkl103" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkl103
            #add-point:ON CHANGE rtkl103 name="input.g.page3.rtkl103"
            {<point name="input.g.page3.rtkl103" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkl104
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki3_d[l_ac].rtkl104,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkl104
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkl104 name="input.a.page3.rtkl104"
            {<point name="input.a.page3.rtkl104" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkl104
            #add-point:BEFORE FIELD rtkl104 name="input.b.page3.rtkl104"
            {<point name="input.b.page3.rtkl104" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkl104
            #add-point:ON CHANGE rtkl104 name="input.g.page3.rtkl104"
            {<point name="input.g.page3.rtkl104" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkl105
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki3_d[l_ac].rtkl105,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkl105
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkl105 name="input.a.page3.rtkl105"
            {<point name="input.a.page3.rtkl105" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkl105
            #add-point:BEFORE FIELD rtkl105 name="input.b.page3.rtkl105"
            {<point name="input.b.page3.rtkl105" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkl105
            #add-point:ON CHANGE rtkl105 name="input.g.page3.rtkl105"
            {<point name="input.g.page3.rtkl105" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkl106
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki3_d[l_ac].rtkl106,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkl106
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkl106 name="input.a.page3.rtkl106"
            {<point name="input.a.page3.rtkl106" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkl106
            #add-point:BEFORE FIELD rtkl106 name="input.b.page3.rtkl106"
            {<point name="input.b.page3.rtkl106" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkl106
            #add-point:ON CHANGE rtkl106 name="input.g.page3.rtkl106"
            {<point name="input.g.page3.rtkl106" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkl107
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki3_d[l_ac].rtkl107,"0.000","0","100.000","1","azz-00087",1)  
                THEN
               NEXT FIELD rtkl107
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkl107 name="input.a.page3.rtkl107"
            {<point name="input.a.page3.rtkl107" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkl107
            #add-point:BEFORE FIELD rtkl107 name="input.b.page3.rtkl107"
            {<point name="input.b.page3.rtkl107" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkl107
            #add-point:ON CHANGE rtkl107 name="input.g.page3.rtkl107"
            {<point name="input.g.page3.rtkl107" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page3.rtklunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtklunit
            #add-point:ON ACTION controlp INFIELD rtklunit name="input.c.page3.rtklunit"
            {<point name="input.c.page3.rtklunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.rtkl002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkl002
            #add-point:ON ACTION controlp INFIELD rtkl002 name="input.c.page3.rtkl002"
            {<point name="input.c.page3.rtkl002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.rtkl101
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkl101
            #add-point:ON ACTION controlp INFIELD rtkl101 name="input.c.page3.rtkl101"
            {<point name="input.c.page3.rtkl101" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.rtkl102
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkl102
            #add-point:ON ACTION controlp INFIELD rtkl102 name="input.c.page3.rtkl102"
            {<point name="input.c.page3.rtkl102" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.rtkl103
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkl103
            #add-point:ON ACTION controlp INFIELD rtkl103 name="input.c.page3.rtkl103"
            {<point name="input.c.page3.rtkl103" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.rtkl104
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkl104
            #add-point:ON ACTION controlp INFIELD rtkl104 name="input.c.page3.rtkl104"
            {<point name="input.c.page3.rtkl104" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.rtkl105
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkl105
            #add-point:ON ACTION controlp INFIELD rtkl105 name="input.c.page3.rtkl105"
            {<point name="input.c.page3.rtkl105" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.rtkl106
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkl106
            #add-point:ON ACTION controlp INFIELD rtkl106 name="input.c.page3.rtkl106"
            {<point name="input.c.page3.rtkl106" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.rtkl107
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkl107
            #add-point:ON ACTION controlp INFIELD rtkl107 name="input.c.page3.rtkl107"
            {<point name="input.c.page3.rtkl107" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row name="input.body3.after_row"
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_rtki3_d[l_ac].* = g_rtki3_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE artm740_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL artm740_unlock_b("rtkl_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2 name="input.body3.after_row2"
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body3.after_input"
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_rtki3_d[li_reproduce_target].* = g_rtki3_d[li_reproduce].*
 
               LET g_rtki3_d[li_reproduce_target].rtkl002 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_rtki3_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_rtki3_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_rtki4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body4.before_input2"
            {<point name="input.body4.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtki4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artm740_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_rtki4_d.getLength()
            #add-point:資料輸入前 name="input.body4.before_input"
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtki4_d[l_ac].* TO NULL 
            INITIALIZE g_rtki4_d_t.* TO NULL 
            INITIALIZE g_rtki4_d_o.* TO NULL 
            #公用欄位給值(單身4)
            
            #自定義預設值(單身4)
            
            #add-point:modify段before備份 name="input.body4.insert.before_bak"
            {<point name="input.body4.insert.before_bak"/>}
            #end add-point
            LET g_rtki4_d_t.* = g_rtki4_d[l_ac].*     #新輸入資料
            LET g_rtki4_d_o.* = g_rtki4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artm740_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body4.insert.after_set_entry_b"
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL artm740_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtki4_d[li_reproduce_target].* = g_rtki4_d[li_reproduce].*
 
               LET g_rtki4_d[li_reproduce_target].rtkk002 = NULL
               LET g_rtki4_d[li_reproduce_target].rtkk003 = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body4.before_insert"
            {<point name="input.body4.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body4.before_row2"
            {<point name="input.body4.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[4] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 4
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artm740_cl USING g_enterprise,g_rtkh_m.rtkh001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artm740_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE artm740_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_rtki4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtki4_d[l_ac].rtkk002 IS NOT NULL
               AND g_rtki4_d[l_ac].rtkk003 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_rtki4_d_t.* = g_rtki4_d[l_ac].*  #BACKUP
               LET g_rtki4_d_o.* = g_rtki4_d[l_ac].*  #BACKUP
               CALL artm740_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body4.after_set_entry_b"
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL artm740_set_no_entry_b(l_cmd)
               IF NOT artm740_lock_b("rtkk_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artm740_bcl4 INTO g_rtki4_d[l_ac].rtkkunit,g_rtki4_d[l_ac].rtkk002,g_rtki4_d[l_ac].rtkk003, 
                      g_rtki4_d[l_ac].rtkk004
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rtki4_d_mask_o[l_ac].* =  g_rtki4_d[l_ac].*
                  CALL artm740_rtkk_t_mask()
                  LET g_rtki4_d_mask_n[l_ac].* =  g_rtki4_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL artm740_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body4.before_row"
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body4.after_delete_d"
               {<point name="input.body4.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body4.b_delete_ask"
               {<point name="input.body4.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前 name="input.body4.b_delete"
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtkh_m.rtkh001
               LET gs_keys[gs_keys.getLength()+1] = g_rtki4_d_t.rtkk002
               LET gs_keys[gs_keys.getLength()+1] = g_rtki4_d_t.rtkk003
            
               #刪除同層單身
               IF NOT artm740_delete_b('rtkk_t',gs_keys,"'4'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artm740_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT artm740_key_delete_b(gs_keys,'rtkk_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artm740_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身4刪除中 name="input.body4.m_delete"
               {<point name="input.body4.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE artm740_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身4刪除後 name="input.body4.a_delete"
               {<point name="input.body4.a_delete"/>}
               #end add-point
               LET l_count = g_rtki_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body4.after_delete"
               {<point name="input.body4.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rtki4_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前 name="input.body4.b_a_insert"
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM rtkk_t 
             WHERE rtkkent = g_enterprise AND rtkk001 = g_rtkh_m.rtkh001
               AND rtkk002 = g_rtki4_d[l_ac].rtkk002
               AND rtkk003 = g_rtki4_d[l_ac].rtkk003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前 name="input.body4.b_insert"
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys[2] = g_rtki4_d[g_detail_idx].rtkk002
               LET gs_keys[3] = g_rtki4_d[g_detail_idx].rtkk003
               CALL artm740_insert_b('rtkk_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4 name="input.body4.a_insert"
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_rtki_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtkk_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artm740_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body4.after_insert"
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_rtki4_d[l_ac].* = g_rtki4_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE artm740_bcl4
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_rtki4_d[l_ac].* = g_rtki4_d_t.*
            ELSE
               #add-point:單身page4修改前 name="input.body4.b_update"
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               #將遮罩欄位還原
               CALL artm740_rtkk_t_mask_restore('restore_mask_o')
                              
               UPDATE rtkk_t SET (rtkk001,rtkkunit,rtkk002,rtkk003,rtkk004) = (g_rtkh_m.rtkh001,g_rtki4_d[l_ac].rtkkunit, 
                   g_rtki4_d[l_ac].rtkk002,g_rtki4_d[l_ac].rtkk003,g_rtki4_d[l_ac].rtkk004) #自訂欄位頁簽 

                WHERE rtkkent = g_enterprise AND rtkk001 = g_rtkh_m.rtkh001
                  AND rtkk002 = g_rtki4_d_t.rtkk002 #項次 
                  AND rtkk003 = g_rtki4_d_t.rtkk003
                  
               #add-point:單身page4修改中 name="input.body4.m_update"
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_rtki4_d[l_ac].* = g_rtki4_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtkk_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_rtki4_d[l_ac].* = g_rtki4_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtkk_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtkh_m.rtkh001
               LET gs_keys_bak[1] = g_rtkh001_t
               LET gs_keys[2] = g_rtki4_d[g_detail_idx].rtkk002
               LET gs_keys_bak[2] = g_rtki4_d_t.rtkk002
               LET gs_keys[3] = g_rtki4_d[g_detail_idx].rtkk003
               LET gs_keys_bak[3] = g_rtki4_d_t.rtkk003
               CALL artm740_update_b('rtkk_t',gs_keys,gs_keys_bak,"'4'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL artm740_rtkk_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_rtki4_d[g_detail_idx].rtkk002 = g_rtki4_d_t.rtkk002 
                  AND g_rtki4_d[g_detail_idx].rtkk003 = g_rtki4_d_t.rtkk003 
                  ) THEN
                  LET gs_keys[01] = g_rtkh_m.rtkh001
                  LET gs_keys[gs_keys.getLength()+1] = g_rtki4_d_t.rtkk002
                  LET gs_keys[gs_keys.getLength()+1] = g_rtki4_d_t.rtkk003
                  CALL artm740_key_update_b(gs_keys,'rtkk_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtkh_m),util.JSON.stringify(g_rtki4_d_t)
               LET g_log2 = util.JSON.stringify(g_rtkh_m),util.JSON.stringify(g_rtki4_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後 name="input.body4.a_update"
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkkunit
            #add-point:BEFORE FIELD rtkkunit name="input.b.page4.rtkkunit"
            {<point name="input.b.page4.rtkkunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkkunit
            
            #add-point:AFTER FIELD rtkkunit name="input.a.page4.rtkkunit"
            {<point name="input.a.page4.rtkkunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkkunit
            #add-point:ON CHANGE rtkkunit name="input.g.page4.rtkkunit"
            {<point name="input.g.page4.rtkkunit" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkk002
            #add-point:BEFORE FIELD rtkk002 name="input.b.page4.rtkk002"
            {<point name="input.b.page4.rtkk002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkk002
            
            #add-point:AFTER FIELD rtkk002 name="input.a.page4.rtkk002"
            {<point name="input.a.page4.rtkk002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkk002
            #add-point:ON CHANGE rtkk002 name="input.g.page4.rtkk002"
            {<point name="input.g.page4.rtkk002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkk003
            #add-point:BEFORE FIELD rtkk003 name="input.b.page4.rtkk003"
            {<point name="input.b.page4.rtkk003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkk003
            
            #add-point:AFTER FIELD rtkk003 name="input.a.page4.rtkk003"
            {<point name="input.a.page4.rtkk003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkk003
            #add-point:ON CHANGE rtkk003 name="input.g.page4.rtkk003"
            {<point name="input.g.page4.rtkk003" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkk004
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtki4_d[l_ac].rtkk004,"0.000","1","1.000","1","azz-00087",1) THEN 

               NEXT FIELD rtkk004
            END IF 
 
 
 
            #add-point:AFTER FIELD rtkk004 name="input.a.page4.rtkk004"
            {<point name="input.a.page4.rtkk004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkk004
            #add-point:BEFORE FIELD rtkk004 name="input.b.page4.rtkk004"
            {<point name="input.b.page4.rtkk004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkk004
            #add-point:ON CHANGE rtkk004 name="input.g.page4.rtkk004"
            {<point name="input.g.page4.rtkk004" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page4.rtkkunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkkunit
            #add-point:ON ACTION controlp INFIELD rtkkunit name="input.c.page4.rtkkunit"
            {<point name="input.c.page4.rtkkunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.page4.rtkk002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkk002
            #add-point:ON ACTION controlp INFIELD rtkk002 name="input.c.page4.rtkk002"
            {<point name="input.c.page4.rtkk002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page4.rtkk003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkk003
            #add-point:ON ACTION controlp INFIELD rtkk003 name="input.c.page4.rtkk003"
            {<point name="input.c.page4.rtkk003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page4.rtkk004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkk004
            #add-point:ON ACTION controlp INFIELD rtkk004 name="input.c.page4.rtkk004"
            {<point name="input.c.page4.rtkk004" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row name="input.body4.after_row"
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_rtki4_d[l_ac].* = g_rtki4_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE artm740_bcl4
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL artm740_unlock_b("rtkk_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2 name="input.body4.after_row2"
            {<point name="input.body4.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body4.after_input"
            {<point name="input.body4.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_rtki4_d[li_reproduce_target].* = g_rtki4_d[li_reproduce].*
 
               LET g_rtki4_d[li_reproduce_target].rtkk002 = NULL
               LET g_rtki4_d[li_reproduce_target].rtkk003 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_rtki4_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_rtki4_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
 
 
{</section>}
 
{<section id="artm740.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'2',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue("'3',"))
         CALL DIALOG.setCurrentRow("s_detail4",g_idx_group.getValue("'4',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD rtkh001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD rtkiunit
               WHEN "s_detail2"
                  NEXT FIELD rtkjunit
               WHEN "s_detail3"
                  NEXT FIELD rtklunit
               WHEN "s_detail4"
                  NEXT FIELD rtkkunit
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
{</section>}
 
{<section id="artm740.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION artm740_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   {<point name="show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL artm740_b_fill() #單身填充
      CALL artm740_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL artm740_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_rtkh_m_mask_o.* =  g_rtkh_m.*
   CALL artm740_rtkh_t_mask()
   LET g_rtkh_m_mask_n.* =  g_rtkh_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtkh_m.rtkhunit,g_rtkh_m.rtkhunit_desc,g_rtkh_m.rtkh001,g_rtkh_m.rtkhl003,g_rtkh_m.rtkhl004, 
       g_rtkh_m.rtkhstus,g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh005_desc, 
       g_rtkh_m.rtkh006,g_rtkh_m.rtkh007,g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011, 
       g_rtkh_m.rtkh012,g_rtkh_m.rtkh013,g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhownid_desc, 
       g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhowndp_desc,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtid_desc,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdp_desc,g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhmodid_desc,g_rtkh_m.rtkhcnfid, 
       g_rtkh_m.rtkhcnfid_desc,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtkh_m.rtkhstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_rtki_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_rtki2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_rtki3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_rtki4_d.getLength()
      #add-point:show段單身reference name="show.body4.reference"
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL artm740_detail_show()
 
   #add-point:show段之後 name="show.after"
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
{</section>}
 
{<section id="artm740.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION artm740_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   {<point name="detail_show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
{</section>}
 
{<section id="artm740.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION artm740_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE l_newno     LIKE rtkh_t.rtkh001 
   DEFINE l_oldno     LIKE rtkh_t.rtkh001 
 
   DEFINE l_master    RECORD LIKE rtkh_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE rtki_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE rtkj_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE rtkl_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE rtkk_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   {<point name="reproduce.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_rtkh_m.rtkh001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_rtkh001_t = g_rtkh_m.rtkh001
 
    
   LET g_rtkh_m.rtkh001 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rtkh_m.rtkhownid = g_user
      LET g_rtkh_m.rtkhowndp = g_dept
      LET g_rtkh_m.rtkhcrtid = g_user
      LET g_rtkh_m.rtkhcrtdp = g_dept 
      LET g_rtkh_m.rtkhcrtdt = cl_get_current()
      LET g_rtkh_m.rtkhmodid = g_user
      LET g_rtkh_m.rtkhmoddt = cl_get_current()
      LET g_rtkh_m.rtkhstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtkh_m.rtkhstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL artm740_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_rtkh_m.* TO NULL
      INITIALIZE g_rtki_d TO NULL
      INITIALIZE g_rtki2_d TO NULL
      INITIALIZE g_rtki3_d TO NULL
      INITIALIZE g_rtki4_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL artm740_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artm740_set_act_visible()   
   CALL artm740_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtkh001_t = g_rtkh_m.rtkh001
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtkhent = " ||g_enterprise|| " AND",
                      " rtkh001 = '", g_rtkh_m.rtkh001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artm740_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL artm740_idx_chk()
   
   LET g_data_owner = g_rtkh_m.rtkhownid      
   LET g_data_dept  = g_rtkh_m.rtkhowndp
   
   #功能已完成,通報訊息中心
   CALL artm740_msgcentre_notify('reproduce')
 
END FUNCTION
{</section>}
 
{<section id="artm740.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION artm740_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   {<point name="detail_reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE rtki_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE rtkj_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE rtkl_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE rtkk_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   {<point name="detail_reproduce.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   {<point name="detail_reproduce.pre_function"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE artm740_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtki_t
    WHERE rtkient = g_enterprise AND rtki001 = g_rtkh001_t
 
    INTO TEMP artm740_detail
 
   #將key修正為調整後   
   UPDATE artm740_detail 
      #更新key欄位
      SET rtki001 = g_rtkh_m.rtkh001
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO rtki_t SELECT * FROM artm740_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artm740_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtkj_t 
    WHERE rtkjent = g_enterprise AND rtkj001 = g_rtkh001_t
 
    INTO TEMP artm740_detail
 
   #將key修正為調整後   
   UPDATE artm740_detail SET rtkj001 = g_rtkh_m.rtkh001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   {<point name="detail_reproduce.body.table2.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtkj_t SELECT * FROM artm740_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artm740_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table3.b_insert"
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtkl_t 
    WHERE rtklent = g_enterprise AND rtkl001 = g_rtkh001_t
 
    INTO TEMP artm740_detail
 
   #將key修正為調整後   
   UPDATE artm740_detail SET rtkl001 = g_rtkh_m.rtkh001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table3.b_update"
   {<point name="detail_reproduce.body.table3.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtkl_t SELECT * FROM artm740_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table3.m_insert"
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artm740_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table3.a_insert"
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table4.b_insert"
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtkk_t 
    WHERE rtkkent = g_enterprise AND rtkk001 = g_rtkh001_t
 
    INTO TEMP artm740_detail
 
   #將key修正為調整後   
   UPDATE artm740_detail SET rtkk001 = g_rtkh_m.rtkh001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table4.b_update"
   {<point name="detail_reproduce.body.table4.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtkk_t SELECT * FROM artm740_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table4.m_insert"
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artm740_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table4.a_insert"
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_rtkh001_t = g_rtkh_m.rtkh001
 
   
END FUNCTION
{</section>}
 
{<section id="artm740.delete" >}
#+ 資料刪除
PRIVATE FUNCTION artm740_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   {<point name="delete.pre_function"/>}
   #end add-point
   
   IF g_rtkh_m.rtkh001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_master_multi_table_t.rtkhl001 = g_rtkh_m.rtkh001
LET g_master_multi_table_t.rtkhl003 = g_rtkh_m.rtkhl003
LET g_master_multi_table_t.rtkhl004 = g_rtkh_m.rtkhl004
 
   
   CALL s_transaction_begin()
 
   OPEN artm740_cl USING g_enterprise,g_rtkh_m.rtkh001
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artm740_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE artm740_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artm740_master_referesh USING g_rtkh_m.rtkh001 INTO g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001,g_rtkh_m.rtkhstus, 
       g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007, 
       g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013, 
       g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhcnfid,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt, 
       g_rtkh_m.rtkhunit_desc,g_rtkh_m.rtkhownid_desc,g_rtkh_m.rtkhowndp_desc,g_rtkh_m.rtkhcrtid_desc, 
       g_rtkh_m.rtkhcrtdp_desc,g_rtkh_m.rtkhmodid_desc,g_rtkh_m.rtkhcnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT artm740_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtkh_m_mask_o.* =  g_rtkh_m.*
   CALL artm740_rtkh_t_mask()
   LET g_rtkh_m_mask_n.* =  g_rtkh_m.*
   
   CALL artm740_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL artm740_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_rtkh001_t = g_rtkh_m.rtkh001
 
 
      DELETE FROM rtkh_t
       WHERE rtkhent = g_enterprise AND rtkh001 = g_rtkh_m.rtkh001
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_rtkh_m.rtkh001,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM rtki_t
       WHERE rtkient = g_enterprise AND rtki001 = g_rtkh_m.rtkh001
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtki_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM rtkj_t
       WHERE rtkjent = g_enterprise AND
             rtkj001 = g_rtkh_m.rtkh001
      #add-point:單身刪除中 name="delete.body.m_delete2"
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtkj_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete3"
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM rtkl_t
       WHERE rtklent = g_enterprise AND
             rtkl001 = g_rtkh_m.rtkh001
      #add-point:單身刪除中 name="delete.body.m_delete3"
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtkl_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete3"
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete4"
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM rtkk_t
       WHERE rtkkent = g_enterprise AND
             rtkk001 = g_rtkh_m.rtkh001
      #add-point:單身刪除中 name="delete.body.m_delete4"
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtkk_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete4"
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_rtkh_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE artm740_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_rtki_d.clear() 
      CALL g_rtki2_d.clear()       
      CALL g_rtki3_d.clear()       
      CALL g_rtki4_d.clear()       
 
     
      CALL artm740_ui_browser_refresh()  
      #CALL artm740_ui_headershow()  
      #CALL artm740_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'rtkhlent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.rtkhl001
   LET l_field_keys[02] = 'rtkhl001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'rtkhl_t')
 
      
      #單身多語言刪除
      
      
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      {<point name="delete.lang.delete"/>}
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL artm740_browser_fill("")
         CALL artm740_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE artm740_cl
 
   #功能已完成,通報訊息中心
   CALL artm740_msgcentre_notify('delete')
    
END FUNCTION
{</section>}
 
{<section id="artm740.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION artm740_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   {<point name="b_fill.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   {<point name="b_fill.pre_function"/>}
   #end add-point
   
   #清空第一階單身
   CALL g_rtki_d.clear()
   CALL g_rtki2_d.clear()
   CALL g_rtki3_d.clear()
   CALL g_rtki4_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF artm740_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      {<point name="b_fill.long_sql_if"/>}
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtkiunit,rtki002,rtki003,rtki004,rtki005,rtki006,rtki007 ,t1.rtaxl003 FROM rtki_t", 
                
                     " INNER JOIN rtkh_t ON rtkhent = " ||g_enterprise|| " AND rtkh001 = rtki001 ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN rtaxl_t t1 ON t1.rtaxlent="||g_enterprise||" AND t1.rtaxl001=rtki002 AND t1.rtaxl002='"||g_dlang||"' ",
 
                     " WHERE rtkient=? AND rtki001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtki_t.rtki002"
         
         #add-point:單身填充控制 name="b_fill.sql"
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artm740_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR artm740_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_rtkh_m.rtkh001   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_rtkh_m.rtkh001 INTO g_rtki_d[l_ac].rtkiunit,g_rtki_d[l_ac].rtki002, 
          g_rtki_d[l_ac].rtki003,g_rtki_d[l_ac].rtki004,g_rtki_d[l_ac].rtki005,g_rtki_d[l_ac].rtki006, 
          g_rtki_d[l_ac].rtki007,g_rtki_d[l_ac].rtki002_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF artm740_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         {<point name="b_fill.body2.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtkjunit,rtkj002,rtkj101,rtkj102,rtkj103,rtkj104,rtkj105,rtkj106, 
             rtkj107,rtkj108,rtkj109,rtkj110,rtkj111,rtkj112,rtkj113,rtkj114,rtkj115,rtkj116,rtkj117, 
             rtkj118,rtkj119,rtkj120,rtkj121,rtkj122,rtkj123,rtkj124,rtkj125,rtkj126,rtkj127,rtkj128, 
             rtkj129,rtkj130,rtkj131,rtkj132,rtkj133,rtkj134,rtkj135,rtkj136,rtkj137,rtkj138,rtkj139, 
             rtkj140,rtkj141,rtkj142,rtkj143,rtkj144,rtkj145,rtkj146,rtkj147,rtkj148,rtkj149,rtkj150, 
             rtkj151,rtkj152 ,t2.rtaxl003 FROM rtkj_t",   
                     " INNER JOIN  rtkh_t ON rtkhent = " ||g_enterprise|| " AND rtkh001 = rtkj001 ",
 
                     "",
                     
                                    " LEFT JOIN rtaxl_t t2 ON t2.rtaxlent="||g_enterprise||" AND t2.rtaxl001=rtkj002 AND t2.rtaxl002='"||g_dlang||"' ",
 
                     " WHERE rtkjent=? AND rtkj001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtkj_t.rtkj002"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artm740_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR artm740_pb2
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs2 USING g_enterprise,g_rtkh_m.rtkh001   #(ver:78)
                                               
      FOREACH b_fill_cs2 USING g_enterprise,g_rtkh_m.rtkh001 INTO g_rtki2_d[l_ac].rtkjunit,g_rtki2_d[l_ac].rtkj002, 
          g_rtki2_d[l_ac].rtkj101,g_rtki2_d[l_ac].rtkj102,g_rtki2_d[l_ac].rtkj103,g_rtki2_d[l_ac].rtkj104, 
          g_rtki2_d[l_ac].rtkj105,g_rtki2_d[l_ac].rtkj106,g_rtki2_d[l_ac].rtkj107,g_rtki2_d[l_ac].rtkj108, 
          g_rtki2_d[l_ac].rtkj109,g_rtki2_d[l_ac].rtkj110,g_rtki2_d[l_ac].rtkj111,g_rtki2_d[l_ac].rtkj112, 
          g_rtki2_d[l_ac].rtkj113,g_rtki2_d[l_ac].rtkj114,g_rtki2_d[l_ac].rtkj115,g_rtki2_d[l_ac].rtkj116, 
          g_rtki2_d[l_ac].rtkj117,g_rtki2_d[l_ac].rtkj118,g_rtki2_d[l_ac].rtkj119,g_rtki2_d[l_ac].rtkj120, 
          g_rtki2_d[l_ac].rtkj121,g_rtki2_d[l_ac].rtkj122,g_rtki2_d[l_ac].rtkj123,g_rtki2_d[l_ac].rtkj124, 
          g_rtki2_d[l_ac].rtkj125,g_rtki2_d[l_ac].rtkj126,g_rtki2_d[l_ac].rtkj127,g_rtki2_d[l_ac].rtkj128, 
          g_rtki2_d[l_ac].rtkj129,g_rtki2_d[l_ac].rtkj130,g_rtki2_d[l_ac].rtkj131,g_rtki2_d[l_ac].rtkj132, 
          g_rtki2_d[l_ac].rtkj133,g_rtki2_d[l_ac].rtkj134,g_rtki2_d[l_ac].rtkj135,g_rtki2_d[l_ac].rtkj136, 
          g_rtki2_d[l_ac].rtkj137,g_rtki2_d[l_ac].rtkj138,g_rtki2_d[l_ac].rtkj139,g_rtki2_d[l_ac].rtkj140, 
          g_rtki2_d[l_ac].rtkj141,g_rtki2_d[l_ac].rtkj142,g_rtki2_d[l_ac].rtkj143,g_rtki2_d[l_ac].rtkj144, 
          g_rtki2_d[l_ac].rtkj145,g_rtki2_d[l_ac].rtkj146,g_rtki2_d[l_ac].rtkj147,g_rtki2_d[l_ac].rtkj148, 
          g_rtki2_d[l_ac].rtkj149,g_rtki2_d[l_ac].rtkj150,g_rtki2_d[l_ac].rtkj151,g_rtki2_d[l_ac].rtkj152, 
          g_rtki2_d[l_ac].rtkj002_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF artm740_fill_chk(3) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body3.long_sql_if"
         {<point name="b_fill.body3.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtklunit,rtkl002,rtkl101,rtkl102,rtkl103,rtkl104,rtkl105,rtkl106, 
             rtkl107 ,t3.rtaxl003 FROM rtkl_t",   
                     " INNER JOIN  rtkh_t ON rtkhent = " ||g_enterprise|| " AND rtkh001 = rtkl001 ",
 
                     "",
                     
                                    " LEFT JOIN rtaxl_t t3 ON t3.rtaxlent="||g_enterprise||" AND t3.rtaxl001=rtkl002 AND t3.rtaxl002='"||g_dlang||"' ",
 
                     " WHERE rtklent=? AND rtkl001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body3.fill_sql"
         {<point name="b_fill.body3.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtkl_t.rtkl002"
         
         #add-point:單身填充控制 name="b_fill.sql3"
         {<point name="b_fill.sql3"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artm740_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR artm740_pb3
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs3 USING g_enterprise,g_rtkh_m.rtkh001   #(ver:78)
                                               
      FOREACH b_fill_cs3 USING g_enterprise,g_rtkh_m.rtkh001 INTO g_rtki3_d[l_ac].rtklunit,g_rtki3_d[l_ac].rtkl002, 
          g_rtki3_d[l_ac].rtkl101,g_rtki3_d[l_ac].rtkl102,g_rtki3_d[l_ac].rtkl103,g_rtki3_d[l_ac].rtkl104, 
          g_rtki3_d[l_ac].rtkl105,g_rtki3_d[l_ac].rtkl106,g_rtki3_d[l_ac].rtkl107,g_rtki3_d[l_ac].rtkl002_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill3.fill"
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF artm740_fill_chk(4) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body4.long_sql_if"
         {<point name="b_fill.body4.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtkkunit,rtkk002,rtkk003,rtkk004  FROM rtkk_t",   
                     " INNER JOIN  rtkh_t ON rtkhent = " ||g_enterprise|| " AND rtkh001 = rtkk001 ",
 
                     "",
                     
                     
                     " WHERE rtkkent=? AND rtkk001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body4.fill_sql"
         {<point name="b_fill.body4.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtkk_t.rtkk002,rtkk_t.rtkk003"
         
         #add-point:單身填充控制 name="b_fill.sql4"
         {<point name="b_fill.sql4"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artm740_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR artm740_pb4
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs4 USING g_enterprise,g_rtkh_m.rtkh001   #(ver:78)
                                               
      FOREACH b_fill_cs4 USING g_enterprise,g_rtkh_m.rtkh001 INTO g_rtki4_d[l_ac].rtkkunit,g_rtki4_d[l_ac].rtkk002, 
          g_rtki4_d[l_ac].rtkk003,g_rtki4_d[l_ac].rtkk004   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill4.fill"
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_rtki_d.deleteElement(g_rtki_d.getLength())
   CALL g_rtki2_d.deleteElement(g_rtki2_d.getLength())
   CALL g_rtki3_d.deleteElement(g_rtki3_d.getLength())
   CALL g_rtki4_d.deleteElement(g_rtki4_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE artm740_pb
   FREE artm740_pb2
 
   FREE artm740_pb3
 
   FREE artm740_pb4
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_rtki_d.getLength()
      LET g_rtki_d_mask_o[l_ac].* =  g_rtki_d[l_ac].*
      CALL artm740_rtki_t_mask()
      LET g_rtki_d_mask_n[l_ac].* =  g_rtki_d[l_ac].*
   END FOR
   
   LET g_rtki2_d_mask_o.* =  g_rtki2_d.*
   FOR l_ac = 1 TO g_rtki2_d.getLength()
      LET g_rtki2_d_mask_o[l_ac].* =  g_rtki2_d[l_ac].*
      CALL artm740_rtkj_t_mask()
      LET g_rtki2_d_mask_n[l_ac].* =  g_rtki2_d[l_ac].*
   END FOR
   LET g_rtki3_d_mask_o.* =  g_rtki3_d.*
   FOR l_ac = 1 TO g_rtki3_d.getLength()
      LET g_rtki3_d_mask_o[l_ac].* =  g_rtki3_d[l_ac].*
      CALL artm740_rtkl_t_mask()
      LET g_rtki3_d_mask_n[l_ac].* =  g_rtki3_d[l_ac].*
   END FOR
   LET g_rtki4_d_mask_o.* =  g_rtki4_d.*
   FOR l_ac = 1 TO g_rtki4_d.getLength()
      LET g_rtki4_d_mask_o[l_ac].* =  g_rtki4_d[l_ac].*
      CALL artm740_rtkk_t_mask()
      LET g_rtki4_d_mask_n[l_ac].* =  g_rtki4_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
{</section>}
 
{<section id="artm740.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION artm740_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   {<point name="delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   {<point name="delete_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   {<point name="delete_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM rtki_t
       WHERE rtkient = g_enterprise AND
         rtki001 = ps_keys_bak[1] AND rtki002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtki_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM rtkj_t
       WHERE rtkjent = g_enterprise AND
             rtkj001 = ps_keys_bak[1] AND rtkj002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtkj_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_rtki2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete3"
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM rtkl_t
       WHERE rtklent = g_enterprise AND
             rtkl001 = ps_keys_bak[1] AND rtkl002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete3"
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtkl_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_rtki3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete3"
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete4"
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM rtkk_t
       WHERE rtkkent = g_enterprise AND
             rtkk001 = ps_keys_bak[1] AND rtkk002 = ps_keys_bak[2] AND rtkk003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete4"
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtkk_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_rtki4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete4"
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
{</section>}
 
{<section id="artm740.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION artm740_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   {<point name="insert_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   {<point name="insert_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   {<point name="insert_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO rtki_t
                  (rtkient,
                   rtki001,
                   rtki002
                   ,rtkiunit,rtki003,rtki004,rtki005,rtki006,rtki007) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtki_d[g_detail_idx].rtkiunit,g_rtki_d[g_detail_idx].rtki003,g_rtki_d[g_detail_idx].rtki004, 
                       g_rtki_d[g_detail_idx].rtki005,g_rtki_d[g_detail_idx].rtki006,g_rtki_d[g_detail_idx].rtki007) 

      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtki_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtki_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO rtkj_t
                  (rtkjent,
                   rtkj001,
                   rtkj002
                   ,rtkjunit,rtkj101,rtkj102,rtkj103,rtkj104,rtkj105,rtkj106,rtkj107,rtkj108,rtkj109,rtkj110,rtkj111,rtkj112,rtkj113,rtkj114,rtkj115,rtkj116,rtkj117,rtkj118,rtkj119,rtkj120,rtkj121,rtkj122,rtkj123,rtkj124,rtkj125,rtkj126,rtkj127,rtkj128,rtkj129,rtkj130,rtkj131,rtkj132,rtkj133,rtkj134,rtkj135,rtkj136,rtkj137,rtkj138,rtkj139,rtkj140,rtkj141,rtkj142,rtkj143,rtkj144,rtkj145,rtkj146,rtkj147,rtkj148,rtkj149,rtkj150,rtkj151,rtkj152) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtki2_d[g_detail_idx].rtkjunit,g_rtki2_d[g_detail_idx].rtkj101,g_rtki2_d[g_detail_idx].rtkj102, 
                       g_rtki2_d[g_detail_idx].rtkj103,g_rtki2_d[g_detail_idx].rtkj104,g_rtki2_d[g_detail_idx].rtkj105, 
                       g_rtki2_d[g_detail_idx].rtkj106,g_rtki2_d[g_detail_idx].rtkj107,g_rtki2_d[g_detail_idx].rtkj108, 
                       g_rtki2_d[g_detail_idx].rtkj109,g_rtki2_d[g_detail_idx].rtkj110,g_rtki2_d[g_detail_idx].rtkj111, 
                       g_rtki2_d[g_detail_idx].rtkj112,g_rtki2_d[g_detail_idx].rtkj113,g_rtki2_d[g_detail_idx].rtkj114, 
                       g_rtki2_d[g_detail_idx].rtkj115,g_rtki2_d[g_detail_idx].rtkj116,g_rtki2_d[g_detail_idx].rtkj117, 
                       g_rtki2_d[g_detail_idx].rtkj118,g_rtki2_d[g_detail_idx].rtkj119,g_rtki2_d[g_detail_idx].rtkj120, 
                       g_rtki2_d[g_detail_idx].rtkj121,g_rtki2_d[g_detail_idx].rtkj122,g_rtki2_d[g_detail_idx].rtkj123, 
                       g_rtki2_d[g_detail_idx].rtkj124,g_rtki2_d[g_detail_idx].rtkj125,g_rtki2_d[g_detail_idx].rtkj126, 
                       g_rtki2_d[g_detail_idx].rtkj127,g_rtki2_d[g_detail_idx].rtkj128,g_rtki2_d[g_detail_idx].rtkj129, 
                       g_rtki2_d[g_detail_idx].rtkj130,g_rtki2_d[g_detail_idx].rtkj131,g_rtki2_d[g_detail_idx].rtkj132, 
                       g_rtki2_d[g_detail_idx].rtkj133,g_rtki2_d[g_detail_idx].rtkj134,g_rtki2_d[g_detail_idx].rtkj135, 
                       g_rtki2_d[g_detail_idx].rtkj136,g_rtki2_d[g_detail_idx].rtkj137,g_rtki2_d[g_detail_idx].rtkj138, 
                       g_rtki2_d[g_detail_idx].rtkj139,g_rtki2_d[g_detail_idx].rtkj140,g_rtki2_d[g_detail_idx].rtkj141, 
                       g_rtki2_d[g_detail_idx].rtkj142,g_rtki2_d[g_detail_idx].rtkj143,g_rtki2_d[g_detail_idx].rtkj144, 
                       g_rtki2_d[g_detail_idx].rtkj145,g_rtki2_d[g_detail_idx].rtkj146,g_rtki2_d[g_detail_idx].rtkj147, 
                       g_rtki2_d[g_detail_idx].rtkj148,g_rtki2_d[g_detail_idx].rtkj149,g_rtki2_d[g_detail_idx].rtkj150, 
                       g_rtki2_d[g_detail_idx].rtkj151,g_rtki2_d[g_detail_idx].rtkj152)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtkj_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_rtki2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert3"
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO rtkl_t
                  (rtklent,
                   rtkl001,
                   rtkl002
                   ,rtklunit,rtkl101,rtkl102,rtkl103,rtkl104,rtkl105,rtkl106,rtkl107) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtki3_d[g_detail_idx].rtklunit,g_rtki3_d[g_detail_idx].rtkl101,g_rtki3_d[g_detail_idx].rtkl102, 
                       g_rtki3_d[g_detail_idx].rtkl103,g_rtki3_d[g_detail_idx].rtkl104,g_rtki3_d[g_detail_idx].rtkl105, 
                       g_rtki3_d[g_detail_idx].rtkl106,g_rtki3_d[g_detail_idx].rtkl107)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert3"
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtkl_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_rtki3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert3"
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert4"
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO rtkk_t
                  (rtkkent,
                   rtkk001,
                   rtkk002,rtkk003
                   ,rtkkunit,rtkk004) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_rtki4_d[g_detail_idx].rtkkunit,g_rtki4_d[g_detail_idx].rtkk004)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert4"
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtkk_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_rtki4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert4"
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
{</section>}
 
{<section id="artm740.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION artm740_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   {<point name="update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   {<point name="update_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   {<point name="update_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtki_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL artm740_rtki_t_mask_restore('restore_mask_o')
               
      UPDATE rtki_t 
         SET (rtki001,
              rtki002
              ,rtkiunit,rtki003,rtki004,rtki005,rtki006,rtki007) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtki_d[g_detail_idx].rtkiunit,g_rtki_d[g_detail_idx].rtki003,g_rtki_d[g_detail_idx].rtki004, 
                  g_rtki_d[g_detail_idx].rtki005,g_rtki_d[g_detail_idx].rtki006,g_rtki_d[g_detail_idx].rtki007)  

         WHERE rtkient = g_enterprise AND rtki001 = ps_keys_bak[1] AND rtki002 = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtki_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtki_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artm740_rtki_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtkj_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL artm740_rtkj_t_mask_restore('restore_mask_o')
               
      UPDATE rtkj_t 
         SET (rtkj001,
              rtkj002
              ,rtkjunit,rtkj101,rtkj102,rtkj103,rtkj104,rtkj105,rtkj106,rtkj107,rtkj108,rtkj109,rtkj110,rtkj111,rtkj112,rtkj113,rtkj114,rtkj115,rtkj116,rtkj117,rtkj118,rtkj119,rtkj120,rtkj121,rtkj122,rtkj123,rtkj124,rtkj125,rtkj126,rtkj127,rtkj128,rtkj129,rtkj130,rtkj131,rtkj132,rtkj133,rtkj134,rtkj135,rtkj136,rtkj137,rtkj138,rtkj139,rtkj140,rtkj141,rtkj142,rtkj143,rtkj144,rtkj145,rtkj146,rtkj147,rtkj148,rtkj149,rtkj150,rtkj151,rtkj152) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtki2_d[g_detail_idx].rtkjunit,g_rtki2_d[g_detail_idx].rtkj101,g_rtki2_d[g_detail_idx].rtkj102, 
                  g_rtki2_d[g_detail_idx].rtkj103,g_rtki2_d[g_detail_idx].rtkj104,g_rtki2_d[g_detail_idx].rtkj105, 
                  g_rtki2_d[g_detail_idx].rtkj106,g_rtki2_d[g_detail_idx].rtkj107,g_rtki2_d[g_detail_idx].rtkj108, 
                  g_rtki2_d[g_detail_idx].rtkj109,g_rtki2_d[g_detail_idx].rtkj110,g_rtki2_d[g_detail_idx].rtkj111, 
                  g_rtki2_d[g_detail_idx].rtkj112,g_rtki2_d[g_detail_idx].rtkj113,g_rtki2_d[g_detail_idx].rtkj114, 
                  g_rtki2_d[g_detail_idx].rtkj115,g_rtki2_d[g_detail_idx].rtkj116,g_rtki2_d[g_detail_idx].rtkj117, 
                  g_rtki2_d[g_detail_idx].rtkj118,g_rtki2_d[g_detail_idx].rtkj119,g_rtki2_d[g_detail_idx].rtkj120, 
                  g_rtki2_d[g_detail_idx].rtkj121,g_rtki2_d[g_detail_idx].rtkj122,g_rtki2_d[g_detail_idx].rtkj123, 
                  g_rtki2_d[g_detail_idx].rtkj124,g_rtki2_d[g_detail_idx].rtkj125,g_rtki2_d[g_detail_idx].rtkj126, 
                  g_rtki2_d[g_detail_idx].rtkj127,g_rtki2_d[g_detail_idx].rtkj128,g_rtki2_d[g_detail_idx].rtkj129, 
                  g_rtki2_d[g_detail_idx].rtkj130,g_rtki2_d[g_detail_idx].rtkj131,g_rtki2_d[g_detail_idx].rtkj132, 
                  g_rtki2_d[g_detail_idx].rtkj133,g_rtki2_d[g_detail_idx].rtkj134,g_rtki2_d[g_detail_idx].rtkj135, 
                  g_rtki2_d[g_detail_idx].rtkj136,g_rtki2_d[g_detail_idx].rtkj137,g_rtki2_d[g_detail_idx].rtkj138, 
                  g_rtki2_d[g_detail_idx].rtkj139,g_rtki2_d[g_detail_idx].rtkj140,g_rtki2_d[g_detail_idx].rtkj141, 
                  g_rtki2_d[g_detail_idx].rtkj142,g_rtki2_d[g_detail_idx].rtkj143,g_rtki2_d[g_detail_idx].rtkj144, 
                  g_rtki2_d[g_detail_idx].rtkj145,g_rtki2_d[g_detail_idx].rtkj146,g_rtki2_d[g_detail_idx].rtkj147, 
                  g_rtki2_d[g_detail_idx].rtkj148,g_rtki2_d[g_detail_idx].rtkj149,g_rtki2_d[g_detail_idx].rtkj150, 
                  g_rtki2_d[g_detail_idx].rtkj151,g_rtki2_d[g_detail_idx].rtkj152) 
         WHERE rtkjent = g_enterprise AND rtkj001 = ps_keys_bak[1] AND rtkj002 = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update2"
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtkj_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtkj_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artm740_rtkj_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtkl_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update3"
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL artm740_rtkl_t_mask_restore('restore_mask_o')
               
      UPDATE rtkl_t 
         SET (rtkl001,
              rtkl002
              ,rtklunit,rtkl101,rtkl102,rtkl103,rtkl104,rtkl105,rtkl106,rtkl107) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtki3_d[g_detail_idx].rtklunit,g_rtki3_d[g_detail_idx].rtkl101,g_rtki3_d[g_detail_idx].rtkl102, 
                  g_rtki3_d[g_detail_idx].rtkl103,g_rtki3_d[g_detail_idx].rtkl104,g_rtki3_d[g_detail_idx].rtkl105, 
                  g_rtki3_d[g_detail_idx].rtkl106,g_rtki3_d[g_detail_idx].rtkl107) 
         WHERE rtklent = g_enterprise AND rtkl001 = ps_keys_bak[1] AND rtkl002 = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update3"
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtkl_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtkl_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artm740_rtkl_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update3"
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtkk_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update4"
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL artm740_rtkk_t_mask_restore('restore_mask_o')
               
      UPDATE rtkk_t 
         SET (rtkk001,
              rtkk002,rtkk003
              ,rtkkunit,rtkk004) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_rtki4_d[g_detail_idx].rtkkunit,g_rtki4_d[g_detail_idx].rtkk004) 
         WHERE rtkkent = g_enterprise AND rtkk001 = ps_keys_bak[1] AND rtkk002 = ps_keys_bak[2] AND rtkk003 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update4"
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtkk_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtkk_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artm740_rtkk_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update4"
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
{</section>}
 
{<section id="artm740.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION artm740_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   {<point name="key_update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   {<point name="key_update_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   {<point name="key_update_b.pre_function"/>}
   #end add-point
   
 
   
END FUNCTION
{</section>}
 
{<section id="artm740.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION artm740_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   {<point name="key_delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   {<point name="key_delete_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   {<point name="key_delete_b.pre_function"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
{</section>}
 
{<section id="artm740.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION artm740_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   {<point name="lock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   {<point name="lock_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   {<point name="lock_b.pre_function"/>}
   #end add-point
    
   #先刷新資料
   #CALL artm740_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "rtki_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN artm740_bcl USING g_enterprise,
                                       g_rtkh_m.rtkh001,g_rtki_d[g_detail_idx].rtki002     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artm740_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "rtkj_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artm740_bcl2 USING g_enterprise,
                                             g_rtkh_m.rtkh001,g_rtki2_d[g_detail_idx].rtkj002
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artm740_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "rtkl_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artm740_bcl3 USING g_enterprise,
                                             g_rtkh_m.rtkh001,g_rtki3_d[g_detail_idx].rtkl002
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artm740_bcl3:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "rtkk_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artm740_bcl4 USING g_enterprise,
                                             g_rtkh_m.rtkh001,g_rtki4_d[g_detail_idx].rtkk002,g_rtki4_d[g_detail_idx].rtkk003 

      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artm740_bcl4:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
{</section>}
 
{<section id="artm740.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION artm740_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   {<point name="unlock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   {<point name="unlock_b.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   {<point name="unlock_b.pre_function"/>}
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artm740_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artm740_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artm740_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artm740_bcl4
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
{</section>}
 
{<section id="artm740.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION artm740_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   {<point name="set_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   {<point name="set_entry.define"/>} 
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   {<point name="set_entry.pre_function"/>}
   #end add-point
   
   CALL cl_set_comp_entry("",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("rtkh001",TRUE)
      CALL cl_set_comp_entry("",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
{</section>}
 
{<section id="artm740.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION artm740_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   {<point name="set_no_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   {<point name="set_no_entry.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   {<point name="set_no_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("rtkh001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
{</section>}
 
{<section id="artm740.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION artm740_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   {<point name="set_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   {<point name="set_entry_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   {<point name="set_entry_b.pre_function"/>}
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
{</section>}
 
{<section id="artm740.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION artm740_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   {<point name="set_no_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   {<point name="set_no_entry_b.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   {<point name="set_no_entry_b.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
{</section>}
 
{<section id="artm740.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION artm740_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   {<point name="set_act_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   {<point name="set_act_visible.define"/>} 
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
{</section>}
 
{<section id="artm740.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION artm740_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   {<point name="set_act_no_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   {<point name="set_act_no_visible.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
{</section>}
 
{<section id="artm740.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION artm740_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   {<point name="set_act_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   {<point name="set_act_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
{</section>}
 
{<section id="artm740.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION artm740_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   {<point name="set_act_no_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   {<point name="set_act_no_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
{</section>}
 
{<section id="artm740.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION artm740_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " rtkh001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
         INITIALIZE g_wc2_table4 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "rtkh_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtki_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtkj_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "rtkl_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "rtkk_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
            OR NOT cl_null(g_wc2_table4)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
{</section>}
 
{<section id="artm740.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION artm740_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   {<point name="statechange.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_rtkh_m.rtkh001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN artm740_cl USING g_enterprise,g_rtkh_m.rtkh001
   IF STATUS THEN
      CLOSE artm740_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artm740_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE artm740_master_referesh USING g_rtkh_m.rtkh001 INTO g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001,g_rtkh_m.rtkhstus, 
       g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006,g_rtkh_m.rtkh007, 
       g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012,g_rtkh_m.rtkh013, 
       g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhcnfid,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt, 
       g_rtkh_m.rtkhunit_desc,g_rtkh_m.rtkhownid_desc,g_rtkh_m.rtkhowndp_desc,g_rtkh_m.rtkhcrtid_desc, 
       g_rtkh_m.rtkhcrtdp_desc,g_rtkh_m.rtkhmodid_desc,g_rtkh_m.rtkhcnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT artm740_action_chk() THEN
      CLOSE artm740_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtkh_m.rtkhunit,g_rtkh_m.rtkhunit_desc,g_rtkh_m.rtkh001,g_rtkh_m.rtkhl003,g_rtkh_m.rtkhl004, 
       g_rtkh_m.rtkhstus,g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh005_desc, 
       g_rtkh_m.rtkh006,g_rtkh_m.rtkh007,g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011, 
       g_rtkh_m.rtkh012,g_rtkh_m.rtkh013,g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhownid_desc, 
       g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhowndp_desc,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtid_desc,g_rtkh_m.rtkhcrtdp, 
       g_rtkh_m.rtkhcrtdp_desc,g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhmodid_desc,g_rtkh_m.rtkhcnfid, 
       g_rtkh_m.rtkhcnfid_desc,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt
 
   CASE g_rtkh_m.rtkhstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_rtkh_m.rtkhstus
            
            WHEN "N"
               HIDE OPTION "open"
            WHEN "Y"
               HIDE OPTION "valid"
            WHEN "X"
               HIDE OPTION "void"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION open
         IF cl_auth_chk_act("open") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.open"
            {<point name="statechange.open"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION valid
         IF cl_auth_chk_act("valid") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.valid"
            {<point name="statechange.valid"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION void
         IF cl_auth_chk_act("void") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.void"
            {<point name="statechange.void"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "X"
      ) OR 
      g_rtkh_m.rtkhstus = lc_state OR cl_null(lc_state) THEN
      CLOSE artm740_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_rtkh_m.rtkhmodid = g_user
   LET g_rtkh_m.rtkhmoddt = cl_get_current()
   LET g_rtkh_m.rtkhstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE rtkh_t 
      SET (rtkhstus,rtkhmodid,rtkhmoddt) 
        = (g_rtkh_m.rtkhstus,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhmoddt)     
    WHERE rtkhent = g_enterprise AND rtkh001 = g_rtkh_m.rtkh001
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE artm740_master_referesh USING g_rtkh_m.rtkh001 INTO g_rtkh_m.rtkhunit,g_rtkh_m.rtkh001, 
          g_rtkh_m.rtkhstus,g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh006, 
          g_rtkh_m.rtkh007,g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011,g_rtkh_m.rtkh012, 
          g_rtkh_m.rtkh013,g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhcrtid, 
          g_rtkh_m.rtkhcrtdp,g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhcnfid,g_rtkh_m.rtkhmoddt, 
          g_rtkh_m.rtkhcnfdt,g_rtkh_m.rtkhunit_desc,g_rtkh_m.rtkhownid_desc,g_rtkh_m.rtkhowndp_desc, 
          g_rtkh_m.rtkhcrtid_desc,g_rtkh_m.rtkhcrtdp_desc,g_rtkh_m.rtkhmodid_desc,g_rtkh_m.rtkhcnfid_desc 

      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_rtkh_m.rtkhunit,g_rtkh_m.rtkhunit_desc,g_rtkh_m.rtkh001,g_rtkh_m.rtkhl003,g_rtkh_m.rtkhl004, 
          g_rtkh_m.rtkhstus,g_rtkh_m.rtkh002,g_rtkh_m.rtkh003,g_rtkh_m.rtkh004,g_rtkh_m.rtkh005,g_rtkh_m.rtkh005_desc, 
          g_rtkh_m.rtkh006,g_rtkh_m.rtkh007,g_rtkh_m.rtkh008,g_rtkh_m.rtkh009,g_rtkh_m.rtkh010,g_rtkh_m.rtkh011, 
          g_rtkh_m.rtkh012,g_rtkh_m.rtkh013,g_rtkh_m.rtkh014,g_rtkh_m.rtkhownid,g_rtkh_m.rtkhownid_desc, 
          g_rtkh_m.rtkhowndp,g_rtkh_m.rtkhowndp_desc,g_rtkh_m.rtkhcrtid,g_rtkh_m.rtkhcrtid_desc,g_rtkh_m.rtkhcrtdp, 
          g_rtkh_m.rtkhcrtdp_desc,g_rtkh_m.rtkhcrtdt,g_rtkh_m.rtkhmodid,g_rtkh_m.rtkhmodid_desc,g_rtkh_m.rtkhcnfid, 
          g_rtkh_m.rtkhcnfid_desc,g_rtkh_m.rtkhmoddt,g_rtkh_m.rtkhcnfdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE artm740_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artm740_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
{</section>}
 
{<section id="artm740.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION artm740_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   {<point name="idx_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   {<point name="idx_chk.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   {<point name="idx_chk.pre_function"/>}
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_rtki_d.getLength() THEN
         LET g_detail_idx = g_rtki_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtki_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtki_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_rtki2_d.getLength() THEN
         LET g_detail_idx = g_rtki2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtki2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtki2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_rtki3_d.getLength() THEN
         LET g_detail_idx = g_rtki3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtki3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtki3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_rtki4_d.getLength() THEN
         LET g_detail_idx = g_rtki4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtki4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtki4_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
{</section>}
 
{<section id="artm740.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION artm740_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   {<point name="b_fill2.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   {<point name="b_fill2.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   {<point name="b_fill2.pre_function"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL artm740_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
{</section>}
 
{<section id="artm740.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION artm740_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   {<point name="fill_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   {<point name="fill_chk.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
{</section>}
 
{<section id="artm740.status_show" >}
PRIVATE FUNCTION artm740_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   {<point name="status_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   {<point name="status_show.define"/>} 
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
{</section>}
 
{<section id="artm740.mask_functions" >}
&include "erp/art/artm740_mask.4gl"
{</section>}
 
{<section id="artm740.signature" >}
   
{</section>}
 
{<section id="artm740.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION artm740_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   {<point name="set_pk_array.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_rtkh_m.rtkh001
   LET g_pk_array[1].column = 'rtkh001'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
 
{</section>}
 
{<section id="artm740.other_dialog" readonly="Y" >}
   
{</section>}
 
{<section id="artm740.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION artm740_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   {<point name="msgcentre_notify.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   {<point name="msgcentre_notify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   {<point name="msgcentre_notify.pre_function"/>}
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL artm740_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_rtkh_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
{</section>}
 
{<section id="artm740.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION artm740_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   {<point name="action_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   {<point name="action_chk.define"/>} 
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   {<point name="action_chk.action_chk"/>}
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
{</section>}
 
{<section id="artm740.other_function" readonly="Y" >}
{<point name="other.function"/>}
{</section>}
 
 
 
