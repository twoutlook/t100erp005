#該程式已解開Section, 不再透過樣板產出!
{<section id="artq622.description" >}
#應用 a00 樣板自動產生(Version:2)
#+ Version..: T100-ERP-1.01.00(SD版次:1,PR版次:1) Build-000021
#+ 
#+ Filename...: artq622
#+ Description: 積分兌換清單查詢作業
#+ Creator....: 07142(2016-06-22 17:10:53)
#+ Modifier...: 07142(2016-06-23 21:52:46) -SD/PR-

{</section>}

{<section id="artq622.global" >}
#應用 q01 樣板自動產生(Version:30)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" />}
#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_rtdx_d RECORD
       
        
   rtiasite LIKE rtia_t.rtiasite, 
   rtiadocdt LIKE rtia_t.rtiadocdt, 
   rtiadocno LIKE rtia_t.rtiadocno, 
   rtia001 LIKE rtia_t.rtia001, 
   mmaa001 LIKE mmaa_t.mmaa001,
   mmaf024 like mmaf_t.mmaf024,
   mmaf025 like mmaf_t.mmaf025,
   mmaf026 like mmaf_t.mmaf026,
   mmaf027 like mmaf_t.mmaf027,
   mmaf028 like mmaf_t.mmaf028,
   l_rtia004 LIKE type_t.chr20, 
   l_rtia005 LIKE type_t.chr10, 
   l_rtia048 LIKE type_t.chr1, 
   l_rtia107 LIKE type_t.chr1, 
   l_rtia043 LIKE type_t.num15_3, 
   l_rtia047 LIKE type_t.num15_3, 
   l_sy LIKE type_t.num15_3,
   seq LIKE rtib_t.rtibseq,   
   l_rtib003 LIKE type_t.chr500, 
   l_rtib004 LIKE type_t.chr500, 
   l_rtib004_desc LIKE type_t.chr500, 
   l_imaal004 LIKE type_t.chr500, 
   l_rtib013 LIKE type_t.chr10, 
   l_oocal003 LIKE type_t.chr500, 
   l_rtib106 LIKE type_t.num26_10, 
   l_rtib107 LIKE type_t.num26_10, 
   l_rtib012 LIKE type_t.num20_6, 
   l_rtib108 LIKE type_t.num26_10, 
   l_rtib010 LIKE type_t.num20_6, 
   l_rtib025 LIKE type_t.chr10, 
   l_inayl003 LIKE type_t.chr500, 
   rtiastus LIKE rtia_t.rtiastus
       END RECORD
 
 
#add-point:自定義模組變數-標準(Module Variable)  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
 
#模組變數(Module Variables)
DEFINE g_rtdx_d            DYNAMIC ARRAY OF type_g_rtdx_d
DEFINE g_rtdx_d_t          type_g_rtdx_d
 
 
 
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                 STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE l_ac                  LIKE type_t.num10             #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_current_row         LIKE type_t.num10             #目前所在筆數
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_page                STRING                        #第幾頁
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_row_index           LIKE type_t.num10
DEFINE g_master_idx          LIKE type_t.num10
DEFINE g_detail_idx          LIKE type_t.num10             #單身 所在筆數(所有資料)
DEFINE g_detail_idx2         LIKE type_t.num10
DEFINE g_hyper_url           STRING                        #hyperlink的主要網址
DEFINE g_qbe_hidden          LIKE type_t.num5              #qbe頁籤折疊
DEFINE g_tot_cnt             LIKE type_t.num10             #計算總筆數
DEFINE g_num_in_page         LIKE type_t.num10             #每頁筆數
DEFINE g_page_act_list       STRING                        #分頁ACTION清單
DEFINE g_current_row_tot     LIKE type_t.num10             #目前所在總筆數
DEFINE g_page_start_num      LIKE type_t.num10             #目前頁面起始筆數
DEFINE g_page_end_num        LIKE type_t.num10             #目前頁面結束筆數
 
#多table用wc
DEFINE g_wc_table           STRING
DEFINE g_detail_page_action STRING
DEFINE g_pagestart          LIKE type_t.num10
 
 
 
DEFINE g_wc_filter_table           STRING
 
 
 
#add-point:自定義模組變數-客製(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明 name="global.argv"
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="artq622.main" >}
 #應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " ", 
                      " FROM ",
                      " "
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artq622_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT  ",
               " FROM  t0",
               
               " WHERE  "
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE artq622_master_referesh FROM g_sql
 
   #add-point:main段define_sql name="main.body.define_sql"
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = ""
   #add-point:main段define_sql name="main.body.after_define_sql"
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artq622_bcl CURSOR FROM g_forupd_sql
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_artq622 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL artq622_init()   
 
      #進入選單 Menu (="N")
      CALL artq622_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_artq622
      
   END IF 
   
   CLOSE artq622_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 

{</section>}

{<section id="artq622.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION artq622_init()
   #add-point:init段define-客製 name="init.define_customerization"
{<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:init段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
{<point name="init.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="init.before_function"
{<point name="init.before_function" />}
   #end add-point
 
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1" 
   LET g_error_show  = 1
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   CALL cl_set_combo_scc_part('b_rtiastus','13','N,Y,S,Z,A,D,R,W,X')
   #CALL artq622_mmaf024_scc()
   #CALL artq622_mmaf025_scc()
   #CALL artq622_mmaf026_scc()
   #CALL artq622_mmaf027_scc()
   #CALL artq622_mmaf028_scc()
 
     
 
   #add-point:畫面資料初始化 name="init.init"
{<point name="init.init" />}
   #end add-point
 
   CALL artq622_default_search()
END FUNCTION

{</section>}

{<section id="artq622.default_search" >}
PRIVATE FUNCTION artq622_default_search()
   #add-point:default_search段define-客製 name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:default_search段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>}
   #end add-point
 
 
   #add-point:default_search段開始前 name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point
 
   #應用 qs27 樣板自動產生(Version:3)
   #+ 組承接外部參數時資料庫欄位對應條件(單身)
   IF NOT cl_null(g_argv[01]) THEN
      LET g_wc = g_wc, " rtdx001 = '", g_argv[01], "' AND "
   END IF
 
 
 
 
 
 
 
   IF NOT cl_null(g_wc) THEN
      LET g_wc = g_wc.subString(1,g_wc.getLength()-5)
   ELSE
      #預設查詢條件
      LET g_wc = " 1=2"
   END IF
 
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="artq622.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION artq622_ui_dialog() 
   #add-point:ui_dialog段define-客製 name="ui_dialog.define_customerization"
{<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num10
   DEFINE ls_result STRING
   DEFINE ls_wc     STRING
   DEFINE lc_action_choice_old   STRING
   DEFINE ls_js     STRING
   DEFINE la_param  RECORD
                    prog       STRING,
                    actionid   STRING,
                    background LIKE type_t.chr1,
                    param      DYNAMIC ARRAY OF STRING
                    END RECORD
   #add-point:ui_dialog段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
{<point name="ui_dialog.define"/>}
   #end add-point
   
 
   #add-point:FUNCTION前置處理 name="ui_dialog.before_function"
{<point name="ui_dialog.before_function" />}
   #end add-point
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   CALL cl_get_num_in_page() RETURNING g_num_in_page
 
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   LET g_current_idx = 1
   LET g_action_choice = " "
   LET lc_action_choice_old = ""
   LET g_current_row_tot = 0
   LET g_page_start_num = 1
   LET g_page_end_num = g_num_in_page
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   LET l_ac = 1
 
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   
   CALL artq622_b_fill()
  
   WHILE li_exit = FALSE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_rtdx_d.clear()
 
         LET g_wc  = " 1=2"
         LET g_wc2 = " 1=1"
         LET g_action_choice = ""
         LET g_detail_page_action = "detail_first"
         LET g_pagestart = 1
         LET g_current_row_tot = 0
         LET g_page_start_num = 1
         LET g_page_end_num = g_num_in_page
         LET g_detail_idx = 1
         LET g_detail_idx2 = 1
 
         CALL artq622_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:input段落 name="ui_dialog.input"
{<point name="ui_dialog.input"/>}
         #end add-point
 
         #add-point:construct段落 name="ui_dialog.construct"
{<point name="ui_dialog.construct" mark="Y"/>}
         #end add-point
     
         DISPLAY ARRAY g_rtdx_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL artq622_detail_action_trans()
 
               LET g_master_idx = l_ac
               #為避免按上下筆時影響執行效能，所以做一些處理
               LET lc_action_choice_old = g_action_choice
               LET g_action_choice = "fetch"
               CALL artq622_b_fill2()
               LET g_action_choice = lc_action_choice_old
 
               #add-point:input段before row name="input.body.before_row"
{<point name="input.body.before_row" mark="Y"/>}
               #end add-point
 
            
 
            #自訂ACTION(detail_show,page_1)
            
 
            #add-point:page1自定義行為 name="ui_dialog.body.page1.action"
{<point name="ui_dialog.body.page1.action" mark="Y"/>}
            #end add-point
 
         END DISPLAY
 
         #add-point:第一頁籤程式段mark結束用 name="ui_dialog.page1.mark.end"
{<point name="ui_dialog.page1.mark.end"/>}
         #end add-point
 
 
 
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         BEFORE DIALOG
           #LET g_curr_diag = ui.DIALOG.getCurrent()
           #CALL DIALOG.setSelectionMode("s_detail1", 1)
           #LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
           #CALL artq622_detail_action_trans()
           CALL cl_qbe_init()
            #add-point:ui_dialog段before dialog name="ui_dialog.bef_dialog"
{<point name="ui_dialog.bef_dialog"/>}
            #end add-point
            #NEXT FIELD rtiasite
 
         AFTER DIALOG
            #add-point:ui_dialog段 after dialog name="ui_dialog.after_dialog"
{<point name="ui_dialog.after_dialog"/>}
            #end add-point
            
         ON ACTION exit
            LET g_action_choice="exit"
            LET INT_FLAG = FALSE
            LET li_exit = TRUE
            EXIT DIALOG 
      
         ON ACTION close
            LET INT_FLAG=FALSE
            LET li_exit = TRUE
            EXIT DIALOG
 
         ON ACTION accept
            INITIALIZE g_wc_filter TO NULL
            IF cl_null(g_wc) THEN
               LET g_wc = " 1=1"
            END IF
 
 
         
            #IF cl_null(g_wc2) THEN
            #   LET g_wc2 = " 1=1"
           # END IF
           #LET li_exit = TRUE
           #ACCEPT DIALOG
 
 
            #add-point:ON ACTION accept name="ui_dialog.accept"
{<point name="ui_dialog.accept"/>}
            #end add-poin
 
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum name="ui_dialog.agendum"
{<point name="ui_dialog.agendum"/>}
            #end add-point
            CALL cl_user_overview()
 
         ON ACTION exporttoexcel   #匯出excel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_rtdx_d)
               LET g_export_id[1]   = "s_detail1"
 
               #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
{<point name="menu.exporttoexcel" />}
               #END add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
 
         ON ACTION datarefresh   # 重新整理
            CALL artq622_b_fill()
 
         ON ACTION qbehidden     #qbe頁籤折疊
            IF g_qbe_hidden THEN
               CALL gfrm_curr.setElementHidden("qbe",0)
               CALL gfrm_curr.setElementImage("qbehidden","16/mainhidden.png")
               LET g_qbe_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("qbe",1)
               CALL gfrm_curr.setElementImage("qbehidden","16/worksheethidden.png")
               LET g_qbe_hidden = 1     #hidden
            END IF
 
         ON ACTION detail_first               #page first
            LET g_action_choice = "detail_first"
            LET g_detail_page_action = "detail_first"
            CALL artq622_b_fill()
 
         ON ACTION detail_previous                #page previous
            LET g_action_choice = "detail_previous"
            LET g_detail_page_action = "detail_previous"
            CALL artq622_b_fill()
 
         ON ACTION detail_next               #page next
            LET g_action_choice = "detail_next"
            LET g_detail_page_action = "detail_next"
            CALL artq622_b_fill()
 
         ON ACTION detail_last               #page last
            LET g_action_choice = "detail_last"
            LET g_detail_page_action = "detail_last"
            CALL artq622_b_fill()
 
         
         #應用 qs16 樣板自動產生(Version:3)
         ON ACTION filter
            LET g_action_choice="filter"
            CALL artq622_filter()
            #add-point:ON ACTION filter name="menu.filter"
{<point name="menu.filter" />}
            #END add-point
            EXIT DIALOG
 
 
 
 
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION print
            LET g_action_choice="print"
            IF cl_auth_chk_act("print") THEN
               
               #add-point:ON ACTION print name="menu.print"
{<point name="menu.print" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
{<point name="menu.output" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION excel_download
            LET g_action_choice="excel_download"
            IF cl_auth_chk_act("excel_download") THEN
               
               #add-point:ON ACTION excel_download name="menu.excel_download"
{<point name="menu.excel_download" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               
               #add-point:ON ACTION query name="menu.query"
{<point name="menu.query" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo name="menu.datainfo"
{<point name="menu.datainfo" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION excel_upload
            LET g_action_choice="excel_upload"
            IF cl_auth_chk_act("excel_upload") THEN
               
               #add-point:ON ACTION excel_upload name="menu.excel_upload"
{<point name="menu.excel_upload" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
      
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
 
         #add-point:查詢方案相關ACTION設定前 name="ui_dialog.set_qbe_action_before"
{<point name="ui_dialog.set_qbe_action_before" mark="Y"/>}
         #end add-point
 
         ON ACTION qbeclear   # 條件清除
            CLEAR FORM
            #add-point:條件清除後 name="ui_dialog.qbeclear"
{<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         #add-point:查詢方案相關ACTION設定後 name="ui_dialog.set_qbe_action_after"
{<point name="ui_dialog.set_qbe_action_after"/>}
         #end add-point
 
      END DIALOG 
      LET g_detail_idx = 1
          LET g_detail_idx2 = 1
          CALL artq622_b_fill()
 
         IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ""
               LET g_errparam.code   = -100
               LET g_errparam.popup  = TRUE
               CALL cl_err()
         END IF
   END WHILE
   
END FUNCTION

{</section>}

{<section id="artq622.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION artq622_b_fill()
   #add-point:b_fill段define-客製 name="b_fill.define_customerization"
{<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ls_wc           STRING
   DEFINE l_pid           LIKE type_t.chr50
   DEFINE ls_sql_rank     STRING
   #add-point:b_fill段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
{<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
{<point name="b_fill.sql_before"/>}
   #end add-point
 
 
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
 
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter
 
   CALL g_rtdx_d.clear()
 
   #add-point:陣列清空 name="b_fill.array_clear"
{<point name="b_fill.array_clear" />}
   #end add-point
 
   LET g_cnt = l_ac
   IF g_cnt = 0 THEN
      LET g_cnt = 1
   END IF
   LET l_ac = 1
 
   # b_fill段sql組成及FOREACH撰寫
   #應用 qs04 樣板自動產生(Version:9)
   #+ b_fill段資料取得(包含sql組成及FOREACH段撰寫)
   LET ls_sql_rank = "SELECT  UNIQUE '','','','','','','','','','','','','','','','','','','','','', 
       '','','','','',''  ,DENSE_RANK() OVER( ORDER BY rtdx_t.rtdx001) AS RANK FROM rtdx_t",
 
 
                     "",
                     " WHERE rtdxent= ? AND rtdxsite= ? AND 1=1 AND ", ls_wc
   LET ls_sql_rank = ls_sql_rank, cl_sql_add_filter("rtdx_t"),
                     " ORDER BY rtdx_t.rtdx001"
 
   #add-point:b_fill段rank_sql_after name="b_fill.rank_sql_after"
{<point name="b_fill.rank_sql_after"/>}
   #end add-point
 
   LET g_sql = "SELECT COUNT(1) FROM (",ls_sql_rank,")"
 
   PREPARE b_fill_cnt_pre FROM g_sql  #總筆數
   EXECUTE b_fill_cnt_pre USING g_enterprise, g_site INTO g_tot_cnt
   FREE b_fill_cnt_pre
 
   #add-point:b_fill段rank_sql_after_count name="b_fill.rank_sql_after_count"
{<point name="b_fill.rank_sql_after_count"/>}
   #end add-point
 
   CASE g_detail_page_action
      WHEN "detail_first"
          LET g_pagestart = 1
 
      WHEN "detail_previous"
          LET g_pagestart = g_pagestart - g_num_in_page
          IF g_pagestart < 1 THEN
              LET g_pagestart = 1
          END IF
 
      WHEN "detail_next"
         LET g_pagestart = g_pagestart + g_num_in_page
         IF g_pagestart > g_tot_cnt THEN
            LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
            WHILE g_pagestart > g_tot_cnt
               LET g_pagestart = g_pagestart - g_num_in_page
            END WHILE
         END IF
 
      WHEN "detail_last"
         LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
         WHILE g_pagestart > g_tot_cnt
            LET g_pagestart = g_pagestart - g_num_in_page
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
 
   END CASE
 
   LET g_sql = "SELECT '','','','','','','','','','','','','','','','','','','','','','','','','','', 
       ''",
               " FROM (",ls_sql_rank,")",
              " WHERE RANK >= ",g_pagestart,
                " AND RANK < ",g_pagestart + g_num_in_page
 
   #add-point:b_fill段sql_after name="b_fill.sql_after"
{<point name="b_fill.sql_after"/>}
   #end add-point
 
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE artq622_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR artq622_pb
 
   OPEN b_fill_curs USING g_enterprise, g_site
 
   FOREACH b_fill_curs INTO g_rtdx_d[l_ac].seq,g_rtdx_d[l_ac].rtiasite,g_rtdx_d[l_ac].rtiadocdt,g_rtdx_d[l_ac].rtiadocno, 
       g_rtdx_d[l_ac].rtia001,g_rtdx_d[l_ac].mmaa001,g_rtdx_d[l_ac].mmaf024,g_rtdx_d[l_ac].mmaf025,
       g_rtdx_d[l_ac].mmaf026,g_rtdx_d[l_ac].mmaf027,g_rtdx_d[l_ac].mmaf028,g_rtdx_d[l_ac].l_rtia004,g_rtdx_d[l_ac].l_rtia005, 
       g_rtdx_d[l_ac].l_rtia048,g_rtdx_d[l_ac].l_rtia107,g_rtdx_d[l_ac].l_rtia043,g_rtdx_d[l_ac].l_rtia047, 
       g_rtdx_d[l_ac].l_sy,g_rtdx_d[l_ac].l_rtib003,g_rtdx_d[l_ac].l_rtib004,g_rtdx_d[l_ac].l_rtib004_desc, 
       g_rtdx_d[l_ac].l_imaal004,g_rtdx_d[l_ac].l_rtib013,g_rtdx_d[l_ac].l_oocal003,g_rtdx_d[l_ac].l_rtib106, 
       g_rtdx_d[l_ac].l_rtib107,g_rtdx_d[l_ac].l_rtib012,g_rtdx_d[l_ac].l_rtib108,g_rtdx_d[l_ac].l_rtib010, 
       g_rtdx_d[l_ac].l_rtib025,g_rtdx_d[l_ac].l_inayl003,g_rtdx_d[l_ac].rtiastus
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
 
      
 
      #add-point:b_fill段資料填充 name="b_fill.fill"
{<point name="b_fill.fill"/>}
      #end add-point
 
      CALL artq622_detail_show("'1'")
 
      CALL artq622_rtdx_t_mask()
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
 
   END FOREACH
 
 
 
 
 
   #應用 qs05 樣板自動產生(Version:3)
   #+ b_fill段其他table資料取得(包含sql組成及資料填充)
 
 
 
 
 
 
   #add-point:b_fill段資料填充(其他單身) name="b_fill.others.fill"
{<point name="b_fill.others.fill"/>}
   #end add-point
 
   CALL g_rtdx_d.deleteElement(g_rtdx_d.getLength())
 
   #add-point:陣列長度調整 name="b_fill.array_deleteElement"
{<point name="b_fill.array_deleteElement" />}
   #end add-point
 
   LET g_error_show = 0
 
   LET g_detail_cnt = g_rtdx_d.getLength()
   LET l_ac = g_cnt
   LET g_cnt = 0
 
   #應用 qs06 樣板自動產生(Version:3)
   #+ b_fill段CURSOR釋放
   CLOSE b_fill_curs
   FREE artq622_pb
 
 
 
 
 
 
   #調整單身index指標，避免翻頁後指到空白筆數
   CALL artq622_detail_index_setting()
 
   #重新計算單身筆數並呈現
   CALL artq622_detail_action_trans()
 
   LET l_ac = 1
   IF g_rtdx_d.getLength() > 0 THEN
      CALL artq622_b_fill2()
   END IF
 
      CALL artq622_filter_show('seq','b_seq')
   CALL artq622_filter_show('rtiasite','b_rtiasite')
   CALL artq622_filter_show('rtiadocdt','b_rtiadocdt')
   CALL artq622_filter_show('rtiadocno','b_rtiadocno')
   CALL artq622_filter_show('rtia001','b_rtia001')
   CALL artq622_filter_show('mmaa001','b_mmaa001')
   CALL artq622_filter_show('rtiastus','b_rtiastus')
 
 
END FUNCTION

{</section>}

{<section id="artq622.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION artq622_b_fill2()
   #add-point:b_fill2段define-客製 name="b_fill2.define_customerization"
   {<point name="b_fill2.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   {<point name="b_fill2.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="b_fill2.before_function"
   {<point name="b_fill2.before_function" />}
   #end add-point
 
   LET li_ac = l_ac
 
   #單身組成
   #應用 qs07 樣板自動產生(Version:6)
   #+ b_fill2段table資料取得(包含sql組成及資料填充)
 
   #add-point:陣列清空 name="b_fill2.array_clear"
   {<point name="b_fill2.array_clear" />}
   #end add-point
 
 
 
 
   #add-point:陣列長度調整 name="b_fill2.array_deleteElement"
   {<point name="b_fill2.array_deleteElement" />}
   #end add-point
 
 
   DISPLAY li_ac TO FORMONLY.cnt
   LET g_detail_idx2 = 1
   DISPLAY g_detail_idx2 TO FORMONLY.idx
 
 
 
 
 
   #add-point:單身填充後 name="b_fill2.after_fill"
   {<point name="b_fill2.after_fill" />}
   #end add-point
 
   LET l_ac = li_ac
 
END FUNCTION

{</section>}

{<section id="artq622.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION artq622_detail_show(ps_page)
   #add-point:show段define-客製 name="detail_show.define_customerization"
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_page    STRING
   DEFINE ls_sql     STRING
   #add-point:show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前 name="detail_show.before"
   {<point name="detail_show.before"/>}
   #end add-point
 
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      
 
      #add-point:show段單身reference name="detail_show.body.reference"
      {<point name="detail_show.body.reference"/>}
      #end add-point
   END IF
 
 
 
   #add-point:detail_show段之後 name="detail_show.after"
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="artq622.filter" >}
#應用 qs13 樣板自動產生(Version:8)
#+ filter段相關程式段
#+ filter過濾功能
PRIVATE FUNCTION artq622_filter()
   #add-point:filter段define-客製 name="filter.define_customerization"
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE  ls_result   STRING
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   {<point name="filter.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter.before_function"
   {<point name="filter.before_function" />}
   #end add-point
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", TRUE)
 
   
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   #應用 qs08 樣板自動產生(Version:5)
   #+ filter段DIALOG段的組成
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON seq,rtiasite,rtiadocdt,rtiadocno,rtia001,mmaa001,rtiastus
                          FROM s_detail1[1].b_seq,s_detail1[1].b_rtiasite,s_detail1[1].b_rtiadocdt,s_detail1[1].b_rtiadocno, 
                              s_detail1[1].b_rtia001,s_detail1[1].b_mmaa001,s_detail1[1].b_rtiastus
 
         BEFORE CONSTRUCT
                     DISPLAY artq622_filter_parser('seq') TO s_detail1[1].b_seq
            DISPLAY artq622_filter_parser('rtiasite') TO s_detail1[1].b_rtiasite
            DISPLAY artq622_filter_parser('rtiadocdt') TO s_detail1[1].b_rtiadocdt
            DISPLAY artq622_filter_parser('rtiadocno') TO s_detail1[1].b_rtiadocno
            DISPLAY artq622_filter_parser('rtia001') TO s_detail1[1].b_rtia001
            DISPLAY artq622_filter_parser('mmaa001') TO s_detail1[1].b_mmaa001
            DISPLAY artq622_filter_parser('rtiastus') TO s_detail1[1].b_rtiastus
 
 
         #單身公用欄位開窗相關處理
         
 
         #單身一般欄位開窗相關處理
                  #----<<b_seq>>----
         #Ctrlp:construct.c.filter.page1.b_seq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_seq
            #add-point:ON ACTION controlp INFIELD b_seq name="construct.c.filter.page1.b_seq"
            {<point name="construct.c.filter.page1.b_seq" />}
            #END add-point
 
 
         #----<<b_rtiasite>>----
         #Ctrlp:construct.c.filter.page1.b_rtiasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_rtiasite
            #add-point:ON ACTION controlp INFIELD b_rtiasite name="construct.c.filter.page1.b_rtiasite"
            {<point name="construct.c.filter.page1.b_rtiasite" />}
            #END add-point
 
 
         #----<<b_rtiadocdt>>----
         #Ctrlp:construct.c.filter.page1.b_rtiadocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_rtiadocdt
            #add-point:ON ACTION controlp INFIELD b_rtiadocdt name="construct.c.filter.page1.b_rtiadocdt"
            {<point name="construct.c.filter.page1.b_rtiadocdt" />}
            #END add-point
 
 
         #----<<b_rtiadocno>>----
         #Ctrlp:construct.c.page1.b_rtiadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_rtiadocno
            #add-point:ON ACTION controlp INFIELD b_rtiadocno name="construct.c.filter.page1.b_rtiadocno"
            {<point name="construct.c.filter.page1.b_rtiadocno" />}
            #END add-point
 
 
         #----<<b_rtia001>>----
         #Ctrlp:construct.c.page1.b_rtia001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_rtia001
            #add-point:ON ACTION controlp INFIELD b_rtia001 name="construct.c.filter.page1.b_rtia001"
            {<point name="construct.c.filter.page1.b_rtia001" />}
            #END add-point
 
 
         #----<<b_mmaa001>>----
         #Ctrlp:construct.c.page1.b_mmaa001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_mmaa001
            #add-point:ON ACTION controlp INFIELD b_mmaa001 name="construct.c.filter.page1.b_mmaa001"
            {<point name="construct.c.filter.page1.b_mmaa001" />}
            #END add-point
 
 
         #----<<l_rtia004>>----
         #----<<l_rtia005>>----
         #----<<l_rtia048>>----
         #----<<l_rtia107>>----
         #----<<l_rtia043>>----
         #----<<l_rtia047>>----
         #----<<l_sy>>----
         #----<<l_rtib003>>----
         #----<<l_rtib004>>----
         #----<<l_rtib004_desc>>----
         #----<<l_imaal004>>----
         #----<<l_rtib013>>----
         #----<<l_oocal003>>----
         #----<<l_rtib106>>----
         #----<<l_rtib107>>----
         #----<<l_rtib012>>----
         #----<<l_rtib108>>----
         #----<<l_rtib010>>----
         #----<<l_rtib025>>----
         #----<<l_inayl003>>----
         #----<<b_rtiastus>>----
         #Ctrlp:construct.c.filter.page1.b_rtiastus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_rtiastus
            #add-point:ON ACTION controlp INFIELD b_rtiastus name="construct.c.filter.page1.b_rtiastus"
            {<point name="construct.c.filter.page1.b_rtiastus" />}
            #END add-point
 
 
 
 
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         {<point name="filter.b_dialog"/>}
         #end add-point
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
 
   END DIALOG
 
 
 
 
 
   
 
   #add-point:離開DIALOG後相關處理 name="filter.after_dialog"
   {<point name="filter.after_dialog" />}
   #end add-point
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
 
      CALL artq622_filter_show('seq','b_seq')
   CALL artq622_filter_show('rtiasite','b_rtiasite')
   CALL artq622_filter_show('rtiadocdt','b_rtiadocdt')
   CALL artq622_filter_show('rtiadocno','b_rtiadocno')
   CALL artq622_filter_show('rtia001','b_rtia001')
   CALL artq622_filter_show('mmaa001','b_mmaa001')
   CALL artq622_filter_show('rtiastus','b_rtiastus')
 
 
   CALL artq622_b_fill()
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", FALSE)
 
END FUNCTION

{</section>}

{<section id="artq622.filter_parser" >}
#應用 qs14 樣板自動產生(Version:6)
#+ filter pasara段
#+ filter欄位解析
PRIVATE FUNCTION artq622_filter_parser(ps_field)
   #add-point:filter段define-客製 name="filter_parser.define_customerization"
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   {<point name="filter_parser.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_parser.before_function"
   {<point name="filter_parser.before_function" />}
   #end add-point
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 

{</section>}

{<section id="artq622.filter_show" >}
#應用 qs15 樣板自動產生(Version:6)
#+ filter標題欄位顯示搜尋條件
PRIVATE FUNCTION artq622_filter_show(ps_field,ps_object)
   #add-point:filter_show段define-客製 name="filter_show.define_customerization"
   {<point name="filter_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
   #add-point:filter_show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_show.define"
   {<point name="filter_show.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_show.before_function"
   {<point name="filter_show.before_function" />}
   #end add-point
 
   LET ls_name = "formonly.", ps_object
 
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LET ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = artq622_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 

{</section>}

{<section id="artq622.detail_action_trans" >}
#+ 單身分頁筆數顯示及action圖片顯示切換功能
PRIVATE FUNCTION artq622_detail_action_trans()
   #add-point:detail_action_trans段define-客製 name="detail_action_trans.define_customerization"
   {<point name="detail_action_trans.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:detail_action_trans段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_action_trans.define"
   {<point name="detail_action_trans.define"/>}
   #end add-point
 
 
   #add-point:FUNCTION前置處理 name="detail_action_trans.before_function"
   {<point name="detail_action_trans.before_function" />}
   #end add-point
 
   #因應單身切頁功能，筆數計算方式調整
   LET g_current_row_tot = g_pagestart + g_detail_idx - 1
   DISPLAY g_current_row_tot TO FORMONLY.h_index
   DISPLAY g_tot_cnt TO FORMONLY.h_count
 
   #顯示單身頁面的起始與結束筆數
   LET g_page_start_num = g_pagestart
   LET g_page_end_num = g_pagestart + g_num_in_page - 1
   DISPLAY g_page_start_num TO FORMONLY.p_start
   DISPLAY g_page_end_num TO FORMONLY.p_end
 
   #目前不支援跳頁功能
   LET g_page_act_list = "detail_first,detail_previous,'',detail_next,detail_last"
   CALL cl_navigator_detail_page_setting(g_page_act_list,g_current_row_tot,g_pagestart,g_num_in_page,g_tot_cnt)
 
END FUNCTION

{</section>}

{<section id="artq622.detail_index_setting" >}
#+ 單身切頁後，index重新調整，避免翻頁後指到空白筆數
PRIVATE FUNCTION artq622_detail_index_setting()
   #add-point:detail_index_setting段define-客製 name="detail_index_setting.define_customerization"
   {<point name="detail_index_setting.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_redirect     BOOLEAN
   DEFINE ldig_curr       ui.Dialog
   #add-point:detail_index_setting段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_index_setting.define"
   {<point name="detail_index_setting.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="detail_index_setting.before_function"
   {<point name="detail_index_setting.before_function" />}
   #end add-point
 
   IF g_curr_diag IS NOT NULL THEN
      CASE
         WHEN g_curr_diag.getCurrentRow("s_detail1") <= "0"
            LET g_detail_idx = 1
            IF g_rtdx_d.getLength() > 0 THEN
               LET li_redirect = TRUE
            END IF
         WHEN g_curr_diag.getCurrentRow("s_detail1") > g_rtdx_d.getLength() AND g_rtdx_d.getLength() > 0
            LET g_detail_idx = g_rtdx_d.getLength()
            LET li_redirect = TRUE
         WHEN g_curr_diag.getCurrentRow("s_detail1") != g_detail_idx
            IF g_detail_idx > g_rtdx_d.getLength() THEN
               LET g_detail_idx = g_rtdx_d.getLength()
            END IF
            LET li_redirect = TRUE
      END CASE
   END IF
 
   IF li_redirect THEN
      LET ldig_curr = ui.Dialog.getCurrent()
      CALL ldig_curr.setCurrentRow("s_detail1", g_detail_idx)
   END IF
 
END FUNCTION

{</section>}

{<section id="artq622.mask_functions" >}
 &include "erp/art/artq622_mask.4gl"

{</section>}

{<section id="artq622.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

