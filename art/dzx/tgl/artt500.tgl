#該程式未解開Section, 採用最新樣板產出!
{<section id="artt500.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0017(2016-06-02 19:11:08), PR版次:
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:
#+ Build......: 000077
#+ Filename...: artt500
#+ Description: 零售訂單維護作業
#+ Creator....: 03247(2015-04-28 16:43:37)
#+ Modifier...: 08172 -SD/PR-

{</section>}

{<section id="artt500.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"
{<point name="global.import"/>}
#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_rtil_m        RECORD
       rtilsite LIKE rtil_t.rtilsite, 
   rtilsite_desc LIKE type_t.chr80, 
   rtildocdt LIKE rtil_t.rtildocdt, 
   rtildocno LIKE rtil_t.rtildocno, 
   rtil042 LIKE rtil_t.rtil042, 
   rtil001 LIKE rtil_t.rtil001, 
   rtil001_desc LIKE type_t.chr80, 
   rtil002 LIKE rtil_t.rtil002, 
   rtil002_desc LIKE type_t.chr80, 
   rtil004 LIKE rtil_t.rtil004, 
   rtil004_desc LIKE type_t.chr80, 
   rtil005 LIKE rtil_t.rtil005, 
   rtil005_desc LIKE type_t.chr80, 
   rtil037 LIKE rtil_t.rtil037, 
   rtilstus LIKE rtil_t.rtilstus, 
   rtil041 LIKE rtil_t.rtil041, 
   rtil007 LIKE rtil_t.rtil007, 
   rtil007_desc LIKE type_t.chr80, 
   rtil008 LIKE rtil_t.rtil008, 
   rtil008_desc LIKE type_t.chr80, 
   rtil009 LIKE rtil_t.rtil009, 
   rtil009_desc LIKE type_t.chr80, 
   rtil010 LIKE rtil_t.rtil010, 
   rtil011 LIKE rtil_t.rtil011, 
   rtil012 LIKE rtil_t.rtil012, 
   rtil013 LIKE rtil_t.rtil013, 
   rtil006 LIKE rtil_t.rtil006, 
   rtil006_desc LIKE type_t.chr80, 
   rtil038 LIKE rtil_t.rtil038, 
   rtil014 LIKE rtil_t.rtil014, 
   rtil020 LIKE rtil_t.rtil020, 
   rtil021 LIKE rtil_t.rtil021, 
   rtil021_desc LIKE type_t.chr80, 
   rtil015 LIKE rtil_t.rtil015, 
   rtil015_desc LIKE type_t.chr80, 
   rtil018 LIKE rtil_t.rtil018, 
   rtil019 LIKE rtil_t.rtil019, 
   rtil016 LIKE rtil_t.rtil016, 
   rtil017 LIKE rtil_t.rtil017, 
   rtil022 LIKE rtil_t.rtil022, 
   rtil022_desc LIKE type_t.chr80, 
   rtil023 LIKE rtil_t.rtil023, 
   rtil024 LIKE rtil_t.rtil024, 
   rtil025 LIKE rtil_t.rtil025, 
   rtil026 LIKE rtil_t.rtil026, 
   rtil027 LIKE rtil_t.rtil027, 
   rtil040 LIKE rtil_t.rtil040, 
   rtil039 LIKE rtil_t.rtil039, 
   rtil029 LIKE rtil_t.rtil029, 
   rtil030 LIKE rtil_t.rtil030, 
   rtil031 LIKE rtil_t.rtil031, 
   rtil032 LIKE rtil_t.rtil032, 
   rtil033 LIKE rtil_t.rtil033, 
   rtil033_desc LIKE type_t.chr80, 
   rtil034 LIKE rtil_t.rtil034, 
   rtil034_desc LIKE type_t.chr80, 
   rtil035 LIKE rtil_t.rtil035, 
   rtil035_desc LIKE type_t.chr80, 
   rtil036 LIKE rtil_t.rtil036, 
   isaf009 LIKE isaf_t.isaf009, 
   isaf010 LIKE isaf_t.isaf010, 
   isaf044 LIKE isaf_t.isaf044, 
   isaf202 LIKE isaf_t.isaf202, 
   isaf203 LIKE isaf_t.isaf203, 
   isaf204 LIKE isaf_t.isaf204, 
   isaf201 LIKE isaf_t.isaf201, 
   isaf207 LIKE isaf_t.isaf207, 
   rtilownid LIKE rtil_t.rtilownid, 
   rtilownid_desc LIKE type_t.chr80, 
   rtilowndp LIKE rtil_t.rtilowndp, 
   rtilowndp_desc LIKE type_t.chr80, 
   rtilcrtid LIKE rtil_t.rtilcrtid, 
   rtilcrtid_desc LIKE type_t.chr80, 
   rtilcrtdp LIKE rtil_t.rtilcrtdp, 
   rtilcrtdp_desc LIKE type_t.chr80, 
   rtilcrtdt LIKE rtil_t.rtilcrtdt, 
   rtilmodid LIKE rtil_t.rtilmodid, 
   rtilmodid_desc LIKE type_t.chr80, 
   rtilmoddt LIKE rtil_t.rtilmoddt, 
   rtilcnfid LIKE rtil_t.rtilcnfid, 
   rtilcnfid_desc LIKE type_t.chr80, 
   rtilcnfdt LIKE rtil_t.rtilcnfdt, 
   snum LIKE type_t.chr500, 
   amount LIKE type_t.chr500, 
   amount2 LIKE type_t.chr500, 
   amount3 LIKE type_t.chr500
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_rtim_d        RECORD
       rtimsite LIKE rtim_t.rtimsite, 
   rtimunit LIKE rtim_t.rtimunit, 
   rtimorga LIKE rtim_t.rtimorga, 
   rtimseq LIKE rtim_t.rtimseq, 
   rtim003 LIKE rtim_t.rtim003, 
   rtim004 LIKE rtim_t.rtim004, 
   rtim005 LIKE rtim_t.rtim005, 
   rtim004_desc LIKE type_t.chr500, 
   rtim004_desc_desc LIKE type_t.chr500, 
   rtim006 LIKE rtim_t.rtim006, 
   rtim006_desc LIKE type_t.chr500, 
   rtim008 LIKE rtim_t.rtim008, 
   rtim009 LIKE rtim_t.rtim009, 
   rtim010 LIKE rtim_t.rtim010, 
   rtim012 LIKE rtim_t.rtim012, 
   rtim013 LIKE rtim_t.rtim013, 
   rtim013_desc LIKE type_t.chr500, 
   rtim014 LIKE rtim_t.rtim014, 
   rtim015 LIKE rtim_t.rtim015, 
   rtim016 LIKE rtim_t.rtim016, 
   rtim018 LIKE rtim_t.rtim018, 
   rtim018_desc LIKE type_t.chr500, 
   rtim017 LIKE rtim_t.rtim017, 
   rtim019 LIKE rtim_t.rtim019, 
   rtim020 LIKE rtim_t.rtim020, 
   rtim021 LIKE rtim_t.rtim021, 
   rtim029 LIKE type_t.num20_6, 
   rtim022 LIKE rtim_t.rtim022, 
   rtim024 LIKE rtim_t.rtim024, 
   rtim024_desc LIKE type_t.chr500, 
   rtim025 LIKE rtim_t.rtim025, 
   rtim026 LIKE rtim_t.rtim026, 
   rtim027 LIKE rtim_t.rtim027, 
   rtim028 LIKE rtim_t.rtim028
       END RECORD
PRIVATE TYPE type_g_rtim2_d RECORD
       rticseq LIKE rtic_t.rticseq, 
   rtim003 LIKE rtim_t.rtim003, 
   rtim004 LIKE rtim_t.rtim004, 
   imaal003 LIKE imaal_t.imaal003, 
   imaal004 LIKE imaal_t.imaal004, 
   rtim013 LIKE rtim_t.rtim013, 
   rtim013_01_desc LIKE type_t.chr500, 
   rtim012 LIKE rtim_t.rtim012, 
   rtim008 LIKE rtim_t.rtim008, 
   rtim010 LIKE rtim_t.rtim010, 
   rtim021 LIKE rtim_t.rtim021, 
   rticseq1 LIKE rtic_t.rticseq1, 
   rtic001 LIKE rtic_t.rtic001, 
   rtic002 LIKE rtic_t.rtic002, 
   rtic003 LIKE rtic_t.rtic003, 
   rtic004 LIKE rtic_t.rtic004, 
   rtic005 LIKE rtic_t.rtic005, 
   rtic006 LIKE rtic_t.rtic006, 
   rtic007 LIKE rtic_t.rtic007, 
   rtic008 LIKE rtic_t.rtic008, 
   rtic009 LIKE rtic_t.rtic009, 
   rtic010 LIKE rtic_t.rtic010, 
   rtic011 LIKE rtic_t.rtic011, 
   rtic012 LIKE rtic_t.rtic012, 
   rtic013 LIKE rtic_t.rtic013, 
   rtic014 LIKE rtic_t.rtic014, 
   rtic015 LIKE rtic_t.rtic015, 
   rtic016 LIKE rtic_t.rtic016, 
   rtic017 LIKE rtic_t.rtic017, 
   rtic018 LIKE rtic_t.rtic018, 
   rtic020 LIKE rtic_t.rtic020
       END RECORD
PRIVATE TYPE type_g_rtim3_d RECORD
       xrcd007 LIKE xrcd_t.xrcd007, 
   xrcdld LIKE xrcd_t.xrcdld, 
   xrcdseq LIKE xrcd_t.xrcdseq, 
   rtim003 LIKE rtim_t.rtim003, 
   rtim004 LIKE rtim_t.rtim004, 
   rtim006 LIKE rtim_t.rtim006, 
   rtim006_02_desc LIKE type_t.chr500, 
   xrcdseq2 LIKE xrcd_t.xrcdseq2, 
   xrcd002 LIKE xrcd_t.xrcd002, 
   xrcd002_desc LIKE type_t.chr500, 
   xrcd003 LIKE xrcd_t.xrcd003, 
   xrcd006 LIKE xrcd_t.xrcd006, 
   xrcd004 LIKE xrcd_t.xrcd004, 
   xrcd104 LIKE xrcd_t.xrcd104
       END RECORD
PRIVATE TYPE type_g_rtim4_d RECORD
       rtieseq LIKE rtie_t.rtieseq, 
   rtim003 LIKE rtim_t.rtim003, 
   rtim004 LIKE rtim_t.rtim004, 
   rtieseq1 LIKE rtie_t.rtieseq1, 
   rtie001 LIKE rtie_t.rtie001, 
   rtie002 LIKE rtie_t.rtie002, 
   rtie002_desc LIKE type_t.chr500, 
   rtie006 LIKE rtie_t.rtie006
       END RECORD
PRIVATE TYPE type_g_rtim5_d RECORD
       rtiksite LIKE type_t.chr10, 
   rtikunit LIKE type_t.chr10, 
   rtikorg LIKE type_t.chr10, 
   rtikseq LIKE type_t.num10, 
   rtik001 LIKE type_t.chr20, 
   rtik002 LIKE type_t.num10, 
   rtik003 LIKE type_t.chr500, 
   rtik003_desc LIKE type_t.chr500, 
   rtik004 LIKE type_t.chr500, 
   rtik005 LIKE type_t.chr500, 
   rtik006 LIKE type_t.chr10, 
   rtik006_desc LIKE type_t.chr500, 
   rtik007 LIKE type_t.chr1, 
   rtik013 LIKE type_t.chr10, 
   rtik013_desc LIKE type_t.chr500, 
   rtik012 LIKE type_t.num20_6, 
   rtik008 LIKE type_t.num20_6, 
   rtik009 LIKE type_t.num20_6, 
   rtik010 LIKE type_t.num20_6, 
   rtik011 LIKE type_t.num20_6, 
   rtik014 LIKE type_t.num20_6, 
   rtik015 LIKE type_t.num20_6, 
   rtik016 LIKE type_t.num20_6, 
   rtik017 LIKE type_t.num20_6, 
   rtik018 LIKE type_t.chr10, 
   rtik019 LIKE type_t.chr10, 
   rtik019_desc LIKE type_t.chr500, 
   rtik020 LIKE type_t.chr10, 
   rtik020_desc LIKE type_t.chr500, 
   rtik021 LIKE type_t.chr30, 
   rtik022 LIKE type_t.chr20, 
   rtik023 LIKE type_t.num15_3
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_rtilsite LIKE rtil_t.rtilsite,
   b_rtilsite_desc LIKE type_t.chr80,
      b_rtildocdt LIKE rtil_t.rtildocdt,
      b_rtildocno LIKE rtil_t.rtildocno,
      b_rtil002 LIKE rtil_t.rtil002,
   b_rtil002_desc LIKE type_t.chr80
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>} 
#end add-point
       
#模組變數(Module Variables)
DEFINE g_rtil_m          type_g_rtil_m
DEFINE g_rtil_m_t        type_g_rtil_m
DEFINE g_rtil_m_o        type_g_rtil_m
DEFINE g_rtil_m_mask_o   type_g_rtil_m #轉換遮罩前資料
DEFINE g_rtil_m_mask_n   type_g_rtil_m #轉換遮罩後資料
 
   DEFINE g_rtildocno_t LIKE rtil_t.rtildocno
 
 
DEFINE g_rtim_d          DYNAMIC ARRAY OF type_g_rtim_d
DEFINE g_rtim_d_t        type_g_rtim_d
DEFINE g_rtim_d_o        type_g_rtim_d
DEFINE g_rtim_d_mask_o   DYNAMIC ARRAY OF type_g_rtim_d #轉換遮罩前資料
DEFINE g_rtim_d_mask_n   DYNAMIC ARRAY OF type_g_rtim_d #轉換遮罩後資料
DEFINE g_rtim2_d          DYNAMIC ARRAY OF type_g_rtim2_d
DEFINE g_rtim2_d_t        type_g_rtim2_d
DEFINE g_rtim2_d_o        type_g_rtim2_d
DEFINE g_rtim2_d_mask_o   DYNAMIC ARRAY OF type_g_rtim2_d #轉換遮罩前資料
DEFINE g_rtim2_d_mask_n   DYNAMIC ARRAY OF type_g_rtim2_d #轉換遮罩後資料
DEFINE g_rtim3_d          DYNAMIC ARRAY OF type_g_rtim3_d
DEFINE g_rtim3_d_t        type_g_rtim3_d
DEFINE g_rtim3_d_o        type_g_rtim3_d
DEFINE g_rtim3_d_mask_o   DYNAMIC ARRAY OF type_g_rtim3_d #轉換遮罩前資料
DEFINE g_rtim3_d_mask_n   DYNAMIC ARRAY OF type_g_rtim3_d #轉換遮罩後資料
DEFINE g_rtim4_d          DYNAMIC ARRAY OF type_g_rtim4_d
DEFINE g_rtim4_d_t        type_g_rtim4_d
DEFINE g_rtim4_d_o        type_g_rtim4_d
DEFINE g_rtim4_d_mask_o   DYNAMIC ARRAY OF type_g_rtim4_d #轉換遮罩前資料
DEFINE g_rtim4_d_mask_n   DYNAMIC ARRAY OF type_g_rtim4_d #轉換遮罩後資料
DEFINE g_rtim5_d          DYNAMIC ARRAY OF type_g_rtim5_d
DEFINE g_rtim5_d_t        type_g_rtim5_d
DEFINE g_rtim5_d_o        type_g_rtim5_d
DEFINE g_rtim5_d_mask_o   DYNAMIC ARRAY OF type_g_rtim5_d #轉換遮罩前資料
DEFINE g_rtim5_d_mask_n   DYNAMIC ARRAY OF type_g_rtim5_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
DEFINE g_wc2_table5   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="artt500.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT rtilsite,'',rtildocdt,rtildocno,rtil042,rtil001,'',rtil002,'',rtil004, 
       '',rtil005,'',rtil037,rtilstus,rtil041,rtil007,'',rtil008,'',rtil009,'',rtil010,rtil011,rtil012, 
       rtil013,rtil006,'',rtil038,rtil014,rtil020,rtil021,'',rtil015,'',rtil018,rtil019,rtil016,rtil017, 
       rtil022,'',rtil023,rtil024,rtil025,rtil026,rtil027,rtil040,rtil039,rtil029,rtil030,rtil031,rtil032, 
       rtil033,'',rtil034,'',rtil035,'',rtil036,'','','','','','','','',rtilownid,'',rtilowndp,'',rtilcrtid, 
       '',rtilcrtdp,'',rtilcrtdt,rtilmodid,'',rtilmoddt,rtilcnfid,'',rtilcnfdt,'','','',''", 
                      " FROM rtil_t",
                      " WHERE rtilent= ? AND rtildocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt500_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.rtilsite,t0.rtildocdt,t0.rtildocno,t0.rtil042,t0.rtil001,t0.rtil002, 
       t0.rtil004,t0.rtil005,t0.rtil037,t0.rtilstus,t0.rtil041,t0.rtil007,t0.rtil008,t0.rtil009,t0.rtil010, 
       t0.rtil011,t0.rtil012,t0.rtil013,t0.rtil006,t0.rtil038,t0.rtil014,t0.rtil020,t0.rtil021,t0.rtil015, 
       t0.rtil018,t0.rtil019,t0.rtil016,t0.rtil017,t0.rtil022,t0.rtil023,t0.rtil024,t0.rtil025,t0.rtil026, 
       t0.rtil027,t0.rtil040,t0.rtil039,t0.rtil029,t0.rtil030,t0.rtil031,t0.rtil032,t0.rtil033,t0.rtil034, 
       t0.rtil035,t0.rtil036,t0.rtilownid,t0.rtilowndp,t0.rtilcrtid,t0.rtilcrtdp,t0.rtilcrtdt,t0.rtilmodid, 
       t0.rtilmoddt,t0.rtilcnfid,t0.rtilcnfdt,t1.ooefl003 ,t2.pmaal004 ,t3.ooag011 ,t4.ooefl003 ,t5.pmaal004 , 
       t6.pmaal004 ,t7.pmaal004 ,t8.oocql004 ,t9.ooefl003 ,t10.ooefl003 ,t11.ooibl004 ,t12.pcaal003 , 
       t13.pcab003 ,t14.oogd002 ,t15.ooag011 ,t16.ooefl003 ,t17.ooag011 ,t18.ooefl003 ,t19.ooag011 , 
       t20.ooag011",
               " FROM rtil_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtilsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent="||g_enterprise||" AND t2.pmaal001=t0.rtil002 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.rtil004  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.rtil005 AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t5 ON t5.pmaalent="||g_enterprise||" AND t5.pmaal001=t0.rtil007 AND t5.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t6 ON t6.pmaalent="||g_enterprise||" AND t6.pmaal001=t0.rtil008 AND t6.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t7 ON t7.pmaalent="||g_enterprise||" AND t7.pmaal001=t0.rtil009 AND t7.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t8 ON t8.oocqlent="||g_enterprise||" AND t8.oocql001='295' AND t8.oocql002=t0.rtil006 AND t8.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent="||g_enterprise||" AND t9.ooefl001=t0.rtil021 AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t10 ON t10.ooeflent="||g_enterprise||" AND t10.ooefl001=t0.rtil015 AND t10.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t11 ON t11.ooiblent="||g_enterprise||" AND t11.ooibl002=t0.rtil022 AND t11.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN pcaal_t t12 ON t12.pcaalent="||g_enterprise||" AND t12.pcaalsite=t0.rtilsite AND t12.pcaal001=t0.rtil033 AND t12.pcaal002='"||g_dlang||"' ",
               " LEFT JOIN pcab_t t13 ON t13.pcabent="||g_enterprise||" AND t13.pcab001=t0.rtil034  ",
               " LEFT JOIN oogd_t t14 ON t14.oogdent="||g_enterprise||" AND t14.oogd001=t0.rtil035 AND t14.oogdsite=t0.rtilsite  ",
               " LEFT JOIN ooag_t t15 ON t15.ooagent="||g_enterprise||" AND t15.ooag001=t0.rtilownid  ",
               " LEFT JOIN ooefl_t t16 ON t16.ooeflent="||g_enterprise||" AND t16.ooefl001=t0.rtilowndp AND t16.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t17 ON t17.ooagent="||g_enterprise||" AND t17.ooag001=t0.rtilcrtid  ",
               " LEFT JOIN ooefl_t t18 ON t18.ooeflent="||g_enterprise||" AND t18.ooefl001=t0.rtilcrtdp AND t18.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t19 ON t19.ooagent="||g_enterprise||" AND t19.ooag001=t0.rtilmodid  ",
               " LEFT JOIN ooag_t t20 ON t20.ooagent="||g_enterprise||" AND t20.ooag001=t0.rtilcnfid  ",
 
               " WHERE t0.rtilent = " ||g_enterprise|| " AND t0.rtildocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE artt500_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_artt500 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL artt500_init()   
 
      #進入選單 Menu (="N")
      CALL artt500_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_artt500
      
   END IF 
   
   CLOSE artt500_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 

{</section>}

{<section id="artt500.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION artt500_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   {<point name="init.pre_function"/>}
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('rtilstus','13','N,Y,C,X')
 
      CALL cl_set_combo_scc('rtil042','6824') 
   CALL cl_set_combo_scc('rtil014','6545') 
   CALL cl_set_combo_scc('rtil020','6546') 
   CALL cl_set_combo_scc('rtil029','6544') 
   CALL cl_set_combo_scc('rtil036','6202') 
   CALL cl_set_combo_scc('rtic001','6707') 
   CALL cl_set_combo_scc('rtic002','6708') 
   CALL cl_set_combo_scc('rtic006','6564') 
   CALL cl_set_combo_scc('rtic007','6565') 
   CALL cl_set_combo_scc('rtie001','8310') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
   CALL g_idx_group.addAttribute("'4',","1")
   CALL g_idx_group.addAttribute("'5',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL artt500_default_search()
    
END FUNCTION

{</section>}

{<section id="artt500.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION artt500_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   {<point name="ui_dialog.pre_function"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL artt500_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_rtil_m.* TO NULL
         CALL g_rtim_d.clear()
         CALL g_rtim2_d.clear()
         CALL g_rtim3_d.clear()
         CALL g_rtim4_d.clear()
         CALL g_rtim5_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL artt500_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL artt500_fetch('') # reload data
               LET l_ac = 1
               CALL artt500_ui_detailshow() #Setting the current row 
         
               CALL artt500_idx_chk()
               #NEXT FIELD rtimseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_rtim_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt500_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL artt500_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_rtim2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL artt500_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_rtim3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body3.before_row"
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL artt500_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body3.before_display"
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為 name="ui_dialog.body3.action"
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_rtim4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[4] = l_ac
               CALL g_idx_group.addAttribute("'4',",l_ac)
               
               #add-point:page4, before row動作 name="ui_dialog.body4.before_row"
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               #顯示單身筆數
               CALL artt500_idx_chk()
               #add-point:page4自定義行為 name="ui_dialog.body4.before_display"
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為 name="ui_dialog.body4.action"
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_rtim5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[5] = l_ac
               CALL g_idx_group.addAttribute("'5',",l_ac)
               
               #add-point:page5, before row動作 name="ui_dialog.body5.before_row"
               {<point name="ui_dialog.body5.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_current_page = 5
               #顯示單身筆數
               CALL artt500_idx_chk()
               #add-point:page5自定義行為 name="ui_dialog.body5.before_display"
               {<point name="ui_dialog.body5.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_5)
            
         
            #add-point:page5自定義行為 name="ui_dialog.body5.action"
            {<point name="ui_dialog.body5.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL artt500_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL artt500_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL artt500_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL artt500_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL artt500_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL artt500_set_act_visible()   
            CALL artt500_set_act_no_visible()
            IF NOT (g_rtil_m.rtildocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " rtilent = " ||g_enterprise|| " AND",
                                  " rtildocno = '", g_rtil_m.rtildocno, "' "
 
               #填到對應位置
               CALL artt500_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtil_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtim_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtic_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xrcd_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtie_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtik_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL artt500_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtil_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtim_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtic_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xrcd_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtie_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtik_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL artt500_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL artt500_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL artt500_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL artt500_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt500_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL artt500_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt500_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL artt500_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt500_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL artt500_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt500_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL artt500_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt500_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_rtim_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_rtim2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_rtim3_d)
                  LET g_export_id[3]   = "s_detail3"
                  LET g_export_node[4] = base.typeInfo.create(g_rtim4_d)
                  LET g_export_id[4]   = "s_detail4"
                  LET g_export_node[5] = base.typeInfo.create(g_rtim5_d)
                  LET g_export_id[5]   = "s_detail5"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD rtimseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION artt500_pay
            LET g_action_choice="artt500_pay"
            IF cl_auth_chk_act("artt500_pay") THEN
               
               #add-point:ON ACTION artt500_pay name="menu.artt500_pay"
               {<point name="menu.artt500_pay" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL artt500_modify()
               #add-point:ON ACTION modify name="menu.modify"
               {<point name="menu.modify" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL artt500_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               {<point name="menu.modify_detail" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION note_create
            LET g_action_choice="note_create"
            IF cl_auth_chk_act("note_create") THEN
               
               #add-point:ON ACTION note_create name="menu.note_create"
               {<point name="menu.note_create" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION artt500_pay_detail
            LET g_action_choice="artt500_pay_detail"
            IF cl_auth_chk_act("artt500_pay_detail") THEN
               
               #add-point:ON ACTION artt500_pay_detail name="menu.artt500_pay_detail"
               {<point name="menu.artt500_pay_detail" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION ship_addr_input
            LET g_action_choice="ship_addr_input"
            IF cl_auth_chk_act("ship_addr_input") THEN
               
               #add-point:ON ACTION ship_addr_input name="menu.ship_addr_input"
               {<point name="menu.ship_addr_input" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL artt500_delete()
               #add-point:ON ACTION delete name="menu.delete"
               {<point name="menu.delete" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL artt500_insert()
               #add-point:ON ACTION insert name="menu.insert"
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION note
            LET g_action_choice="note"
            IF cl_auth_chk_act("note") THEN
               
               #add-point:ON ACTION note name="menu.note"
               {<point name="menu.note" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION artt500_discount
            LET g_action_choice="artt500_discount"
            IF cl_auth_chk_act("artt500_discount") THEN
               
               #add-point:ON ACTION artt500_discount name="menu.artt500_discount"
               {<point name="menu.artt500_discount" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               &include "erp/art/artt500_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               {<point name="menu.after_output" />}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               {<point name="menu.quickprint" mark="Y"/>}
               #END add-point
               &include "erp/art/artt500_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               {<point name="menu.after_quickprint" />}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL artt500_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               {<point name="menu.reproduce" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION note_void
            LET g_action_choice="note_void"
            IF cl_auth_chk_act("note_void") THEN
               
               #add-point:ON ACTION note_void name="menu.note_void"
               {<point name="menu.note_void" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL artt500_query()
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
               CALL g_curr_diag.setCurrentRow("s_detail5",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION artt500_gift
            LET g_action_choice="artt500_gift"
            IF cl_auth_chk_act("artt500_gift") THEN
               
               #add-point:ON ACTION artt500_gift name="menu.artt500_gift"
               {<point name="menu.artt500_gift" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL artt500_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL artt500_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL artt500_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_rtil_m.rtildocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      {<point name="ui_dialog.exit_dialog"/>}
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION

{</section>}

{<section id="artt500.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION artt500_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   {<point name="browser_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   {<point name="browser_fill.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT rtildocno ",
                      " FROM rtil_t ",
                      " ",
                      " LEFT JOIN rtim_t ON rtiment = rtilent AND rtildocno = rtimdocno ", "  ",
                      #add-point:browser_fill段sql(rtim_t1) name="browser_fill.cnt.join.}"
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN rtic_t ON rticent = rtilent AND rtildocno = rticdocno", "  ",
                      #add-point:browser_fill段sql(rtic_t1) name="browser_fill.cnt.join.rtic_t1"
                      {<point name="browser_fill.cnt.join.rtic_t1"/>}
                      #end add-point
 
                      " LEFT JOIN xrcd_t ON xrcdent = rtilent AND rtildocno = xrcddocno", "  ",
                      #add-point:browser_fill段sql(xrcd_t1) name="browser_fill.cnt.join.xrcd_t1"
                      {<point name="browser_fill.cnt.join.xrcd_t1"/>}
                      #end add-point
 
                      " LEFT JOIN rtie_t ON rtieent = rtilent AND rtildocno = rtiedocno", "  ",
                      #add-point:browser_fill段sql(rtie_t1) name="browser_fill.cnt.join.rtie_t1"
                      {<point name="browser_fill.cnt.join.rtie_t1"/>}
                      #end add-point
 
                      " LEFT JOIN rtik_t ON rtikent = rtilent AND rtildocno = rtikdocno", "  ",
                      #add-point:browser_fill段sql(rtik_t1) name="browser_fill.cnt.join.rtik_t1"
                      {<point name="browser_fill.cnt.join.rtik_t1"/>}
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
 
 
                      " WHERE rtilent = " ||g_enterprise|| " AND rtiment = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("rtil_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT rtildocno ",
                      " FROM rtil_t ", 
                      "  ",
                      "  ",
                      " WHERE rtilent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("rtil_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_rtil_m.* TO NULL
      CALL g_rtim_d.clear()        
      CALL g_rtim2_d.clear() 
      CALL g_rtim3_d.clear() 
      CALL g_rtim4_d.clear() 
      CALL g_rtim5_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.rtilsite,t0.rtildocdt,t0.rtildocno,t0.rtil002 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.rtilstus,t0.rtilsite,t0.rtildocdt,t0.rtildocno,t0.rtil002,t1.ooefl003 ", 

                  " FROM rtil_t t0",
                  "  ",
                  "  LEFT JOIN rtim_t ON rtiment = rtilent AND rtildocno = rtimdocno ", "  ", 
                  #add-point:browser_fill段sql(rtim_t1) name="browser_fill.join.rtim_t1"
                  {<point name="browser_fill.join.rtim_t1"/>}
                  #end add-point
                  "  LEFT JOIN rtic_t ON rticent = rtilent AND rtildocno = rticdocno", "  ", 
                  #add-point:browser_fill段sql(rtic_t1) name="browser_fill.join.rtic_t1"
                  {<point name="browser_fill.join.rtic_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN xrcd_t ON xrcdent = rtilent AND rtildocno = xrcddocno", "  ", 
                  #add-point:browser_fill段sql(xrcd_t1) name="browser_fill.join.xrcd_t1"
                  {<point name="browser_fill.join.xrcd_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN rtie_t ON rtieent = rtilent AND rtildocno = rtiedocno", "  ", 
                  #add-point:browser_fill段sql(rtie_t1) name="browser_fill.join.rtie_t1"
                  {<point name="browser_fill.join.rtie_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN rtik_t ON rtikent = rtilent AND rtildocno = rtikdocno", "  ", 
                  #add-point:browser_fill段sql(rtik_t1) name="browser_fill.join.rtik_t1"
                  {<point name="browser_fill.join.rtik_t1"/>}
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
 
 
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtilsite AND t1.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.rtilent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("rtil_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.rtilstus,t0.rtilsite,t0.rtildocdt,t0.rtildocno,t0.rtil002,t1.ooefl003 ", 

                  " FROM rtil_t t0",
                  "  ",
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtilsite AND t1.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.rtilent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("rtil_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY rtildocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"rtil_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      {<point name="browser_fill.open"/>}
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_rtilsite,g_browser[g_cnt].b_rtildocdt, 
          g_browser[g_cnt].b_rtildocno,g_browser[g_cnt].b_rtil002,g_browser[g_cnt].b_rtilsite_desc
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         {<point name="browser_fill.reference"/>}
         #end add-point
      
         #遮罩相關處理
         CALL artt500_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "C"
            LET g_browser[g_cnt].b_statepic = "stus/16/closed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_rtildocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION

{</section>}

{<section id="artt500.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION artt500_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   {<point name="ui_headershow.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   {<point name="ui_headershow.define"/>} 
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   {<point name="ui_headershow.pre_function"/>}
   #end add-point
   
   LET g_rtil_m.rtildocno = g_browser[g_current_idx].b_rtildocno   
 
   EXECUTE artt500_master_referesh USING g_rtil_m.rtildocno INTO g_rtil_m.rtilsite,g_rtil_m.rtildocdt, 
       g_rtil_m.rtildocno,g_rtil_m.rtil042,g_rtil_m.rtil001,g_rtil_m.rtil002,g_rtil_m.rtil004,g_rtil_m.rtil005, 
       g_rtil_m.rtil037,g_rtil_m.rtilstus,g_rtil_m.rtil041,g_rtil_m.rtil007,g_rtil_m.rtil008,g_rtil_m.rtil009, 
       g_rtil_m.rtil010,g_rtil_m.rtil011,g_rtil_m.rtil012,g_rtil_m.rtil013,g_rtil_m.rtil006,g_rtil_m.rtil038, 
       g_rtil_m.rtil014,g_rtil_m.rtil020,g_rtil_m.rtil021,g_rtil_m.rtil015,g_rtil_m.rtil018,g_rtil_m.rtil019, 
       g_rtil_m.rtil016,g_rtil_m.rtil017,g_rtil_m.rtil022,g_rtil_m.rtil023,g_rtil_m.rtil024,g_rtil_m.rtil025, 
       g_rtil_m.rtil026,g_rtil_m.rtil027,g_rtil_m.rtil040,g_rtil_m.rtil039,g_rtil_m.rtil029,g_rtil_m.rtil030, 
       g_rtil_m.rtil031,g_rtil_m.rtil032,g_rtil_m.rtil033,g_rtil_m.rtil034,g_rtil_m.rtil035,g_rtil_m.rtil036, 
       g_rtil_m.rtilownid,g_rtil_m.rtilowndp,g_rtil_m.rtilcrtid,g_rtil_m.rtilcrtdp,g_rtil_m.rtilcrtdt, 
       g_rtil_m.rtilmodid,g_rtil_m.rtilmoddt,g_rtil_m.rtilcnfid,g_rtil_m.rtilcnfdt,g_rtil_m.rtilsite_desc, 
       g_rtil_m.rtil002_desc,g_rtil_m.rtil004_desc,g_rtil_m.rtil005_desc,g_rtil_m.rtil007_desc,g_rtil_m.rtil008_desc, 
       g_rtil_m.rtil009_desc,g_rtil_m.rtil006_desc,g_rtil_m.rtil021_desc,g_rtil_m.rtil015_desc,g_rtil_m.rtil022_desc, 
       g_rtil_m.rtil033_desc,g_rtil_m.rtil034_desc,g_rtil_m.rtil035_desc,g_rtil_m.rtilownid_desc,g_rtil_m.rtilowndp_desc, 
       g_rtil_m.rtilcrtid_desc,g_rtil_m.rtilcrtdp_desc,g_rtil_m.rtilmodid_desc,g_rtil_m.rtilcnfid_desc 

   
   CALL artt500_rtil_t_mask()
   CALL artt500_show()
      
END FUNCTION

{</section>}

{<section id="artt500.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION artt500_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   {<point name="ui_detailshow.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   {<point name="ui_detailshow.define"/>} 
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="artt500.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION artt500_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   {<point name="ui_browser_refresh.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   {<point name="ui_browser_refresh.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   {<point name="ui_browser_refresh.pre_function"/>}
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_rtildocno = g_rtil_m.rtildocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="artt500.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION artt500_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   {<point name="cs.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   {<point name="cs.pre_function"/>}
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_rtil_m.* TO NULL
   CALL g_rtim_d.clear()        
   CALL g_rtim2_d.clear() 
   CALL g_rtim3_d.clear() 
   CALL g_rtim4_d.clear() 
   CALL g_rtim5_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
   INITIALIZE g_wc2_table5 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON rtilsite,rtildocdt,rtildocno,rtil042,rtil001,rtil002,rtil004,rtil005, 
          rtil037,rtilstus,rtil041,rtil007,rtil008,rtil009,rtil010,rtil011,rtil012,rtil013,rtil006,rtil038, 
          rtil014,rtil020,rtil021,rtil015,rtil018,rtil019,rtil016,rtil017,rtil022,rtil023,rtil024,rtil025, 
          rtil026,rtil027,rtil040,rtil039,rtil029,rtil030,rtil031,rtil032,rtil033,rtil034,rtil035,rtil036, 
          isaf009,isaf010,isaf044,isaf202,isaf203,isaf204,isaf201,isaf207,rtilownid,rtilowndp,rtilcrtid, 
          rtilcrtdp,rtilcrtdt,rtilmodid,rtilmoddt,rtilcnfid,rtilcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<rtilcrtdt>>----
         AFTER FIELD rtilcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<rtilmoddt>>----
         AFTER FIELD rtilmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtilcnfdt>>----
         AFTER FIELD rtilcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtilpstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.rtilsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtilsite
            #add-point:ON ACTION controlp INFIELD rtilsite name="construct.c.rtilsite"
            {<point name="construct.c.rtilsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtilsite
            #add-point:BEFORE FIELD rtilsite name="construct.b.rtilsite"
            {<point name="construct.b.rtilsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtilsite
            
            #add-point:AFTER FIELD rtilsite name="construct.a.rtilsite"
            {<point name="construct.a.rtilsite" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtildocdt
            #add-point:BEFORE FIELD rtildocdt name="construct.b.rtildocdt"
            {<point name="construct.b.rtildocdt" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtildocdt
            
            #add-point:AFTER FIELD rtildocdt name="construct.a.rtildocdt"
            {<point name="construct.a.rtildocdt" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtildocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtildocdt
            #add-point:ON ACTION controlp INFIELD rtildocdt name="construct.c.rtildocdt"
            {<point name="construct.c.rtildocdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtildocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtildocno
            #add-point:ON ACTION controlp INFIELD rtildocno name="construct.c.rtildocno"
            {<point name="construct.c.rtildocno" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtildocno
            #add-point:BEFORE FIELD rtildocno name="construct.b.rtildocno"
            {<point name="construct.b.rtildocno" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtildocno
            
            #add-point:AFTER FIELD rtildocno name="construct.a.rtildocno"
            {<point name="construct.a.rtildocno" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil042
            #add-point:BEFORE FIELD rtil042 name="construct.b.rtil042"
            {<point name="construct.b.rtil042" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil042
            
            #add-point:AFTER FIELD rtil042 name="construct.a.rtil042"
            {<point name="construct.a.rtil042" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil042
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil042
            #add-point:ON ACTION controlp INFIELD rtil042 name="construct.c.rtil042"
            {<point name="construct.c.rtil042" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtil001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil001
            #add-point:ON ACTION controlp INFIELD rtil001 name="construct.c.rtil001"
            {<point name="construct.c.rtil001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil001
            #add-point:BEFORE FIELD rtil001 name="construct.b.rtil001"
            {<point name="construct.b.rtil001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil001
            
            #add-point:AFTER FIELD rtil001 name="construct.a.rtil001"
            {<point name="construct.a.rtil001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil002
            #add-point:ON ACTION controlp INFIELD rtil002 name="construct.c.rtil002"
            {<point name="construct.c.rtil002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil002
            #add-point:BEFORE FIELD rtil002 name="construct.b.rtil002"
            {<point name="construct.b.rtil002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil002
            
            #add-point:AFTER FIELD rtil002 name="construct.a.rtil002"
            {<point name="construct.a.rtil002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil004
            #add-point:ON ACTION controlp INFIELD rtil004 name="construct.c.rtil004"
            {<point name="construct.c.rtil004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil004
            #add-point:BEFORE FIELD rtil004 name="construct.b.rtil004"
            {<point name="construct.b.rtil004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil004
            
            #add-point:AFTER FIELD rtil004 name="construct.a.rtil004"
            {<point name="construct.a.rtil004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil005
            #add-point:ON ACTION controlp INFIELD rtil005 name="construct.c.rtil005"
            {<point name="construct.c.rtil005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil005
            #add-point:BEFORE FIELD rtil005 name="construct.b.rtil005"
            {<point name="construct.b.rtil005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil005
            
            #add-point:AFTER FIELD rtil005 name="construct.a.rtil005"
            {<point name="construct.a.rtil005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil037
            #add-point:BEFORE FIELD rtil037 name="construct.b.rtil037"
            {<point name="construct.b.rtil037" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil037
            
            #add-point:AFTER FIELD rtil037 name="construct.a.rtil037"
            {<point name="construct.a.rtil037" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil037
            #add-point:ON ACTION controlp INFIELD rtil037 name="construct.c.rtil037"
            {<point name="construct.c.rtil037" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtilstus
            #add-point:BEFORE FIELD rtilstus name="construct.b.rtilstus"
            {<point name="construct.b.rtilstus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtilstus
            
            #add-point:AFTER FIELD rtilstus name="construct.a.rtilstus"
            {<point name="construct.a.rtilstus" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtilstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtilstus
            #add-point:ON ACTION controlp INFIELD rtilstus name="construct.c.rtilstus"
            {<point name="construct.c.rtilstus" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil041
            #add-point:BEFORE FIELD rtil041 name="construct.b.rtil041"
            {<point name="construct.b.rtil041" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil041
            
            #add-point:AFTER FIELD rtil041 name="construct.a.rtil041"
            {<point name="construct.a.rtil041" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil041
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil041
            #add-point:ON ACTION controlp INFIELD rtil041 name="construct.c.rtil041"
            {<point name="construct.c.rtil041" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtil007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil007
            #add-point:ON ACTION controlp INFIELD rtil007 name="construct.c.rtil007"
            {<point name="construct.c.rtil007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil007
            #add-point:BEFORE FIELD rtil007 name="construct.b.rtil007"
            {<point name="construct.b.rtil007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil007
            
            #add-point:AFTER FIELD rtil007 name="construct.a.rtil007"
            {<point name="construct.a.rtil007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil008
            #add-point:ON ACTION controlp INFIELD rtil008 name="construct.c.rtil008"
            {<point name="construct.c.rtil008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil008
            #add-point:BEFORE FIELD rtil008 name="construct.b.rtil008"
            {<point name="construct.b.rtil008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil008
            
            #add-point:AFTER FIELD rtil008 name="construct.a.rtil008"
            {<point name="construct.a.rtil008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil009
            #add-point:ON ACTION controlp INFIELD rtil009 name="construct.c.rtil009"
            {<point name="construct.c.rtil009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil009
            #add-point:BEFORE FIELD rtil009 name="construct.b.rtil009"
            {<point name="construct.b.rtil009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil009
            
            #add-point:AFTER FIELD rtil009 name="construct.a.rtil009"
            {<point name="construct.a.rtil009" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil010
            #add-point:BEFORE FIELD rtil010 name="construct.b.rtil010"
            {<point name="construct.b.rtil010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil010
            
            #add-point:AFTER FIELD rtil010 name="construct.a.rtil010"
            {<point name="construct.a.rtil010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil010
            #add-point:ON ACTION controlp INFIELD rtil010 name="construct.c.rtil010"
            {<point name="construct.c.rtil010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil011
            #add-point:BEFORE FIELD rtil011 name="construct.b.rtil011"
            {<point name="construct.b.rtil011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil011
            
            #add-point:AFTER FIELD rtil011 name="construct.a.rtil011"
            {<point name="construct.a.rtil011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil011
            #add-point:ON ACTION controlp INFIELD rtil011 name="construct.c.rtil011"
            {<point name="construct.c.rtil011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil012
            #add-point:BEFORE FIELD rtil012 name="construct.b.rtil012"
            {<point name="construct.b.rtil012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil012
            
            #add-point:AFTER FIELD rtil012 name="construct.a.rtil012"
            {<point name="construct.a.rtil012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil012
            #add-point:ON ACTION controlp INFIELD rtil012 name="construct.c.rtil012"
            {<point name="construct.c.rtil012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil013
            #add-point:BEFORE FIELD rtil013 name="construct.b.rtil013"
            {<point name="construct.b.rtil013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil013
            
            #add-point:AFTER FIELD rtil013 name="construct.a.rtil013"
            {<point name="construct.a.rtil013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil013
            #add-point:ON ACTION controlp INFIELD rtil013 name="construct.c.rtil013"
            {<point name="construct.c.rtil013" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtil006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil006
            #add-point:ON ACTION controlp INFIELD rtil006 name="construct.c.rtil006"
            {<point name="construct.c.rtil006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil006
            #add-point:BEFORE FIELD rtil006 name="construct.b.rtil006"
            {<point name="construct.b.rtil006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil006
            
            #add-point:AFTER FIELD rtil006 name="construct.a.rtil006"
            {<point name="construct.a.rtil006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil038
            #add-point:BEFORE FIELD rtil038 name="construct.b.rtil038"
            {<point name="construct.b.rtil038" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil038
            
            #add-point:AFTER FIELD rtil038 name="construct.a.rtil038"
            {<point name="construct.a.rtil038" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil038
            #add-point:ON ACTION controlp INFIELD rtil038 name="construct.c.rtil038"
            {<point name="construct.c.rtil038" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil014
            #add-point:BEFORE FIELD rtil014 name="construct.b.rtil014"
            {<point name="construct.b.rtil014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil014
            
            #add-point:AFTER FIELD rtil014 name="construct.a.rtil014"
            {<point name="construct.a.rtil014" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil014
            #add-point:ON ACTION controlp INFIELD rtil014 name="construct.c.rtil014"
            {<point name="construct.c.rtil014" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil020
            #add-point:BEFORE FIELD rtil020 name="construct.b.rtil020"
            {<point name="construct.b.rtil020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil020
            
            #add-point:AFTER FIELD rtil020 name="construct.a.rtil020"
            {<point name="construct.a.rtil020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil020
            #add-point:ON ACTION controlp INFIELD rtil020 name="construct.c.rtil020"
            {<point name="construct.c.rtil020" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtil021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil021
            #add-point:ON ACTION controlp INFIELD rtil021 name="construct.c.rtil021"
            {<point name="construct.c.rtil021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil021
            #add-point:BEFORE FIELD rtil021 name="construct.b.rtil021"
            {<point name="construct.b.rtil021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil021
            
            #add-point:AFTER FIELD rtil021 name="construct.a.rtil021"
            {<point name="construct.a.rtil021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil015
            #add-point:ON ACTION controlp INFIELD rtil015 name="construct.c.rtil015"
            {<point name="construct.c.rtil015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil015
            #add-point:BEFORE FIELD rtil015 name="construct.b.rtil015"
            {<point name="construct.b.rtil015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil015
            
            #add-point:AFTER FIELD rtil015 name="construct.a.rtil015"
            {<point name="construct.a.rtil015" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil018
            #add-point:BEFORE FIELD rtil018 name="construct.b.rtil018"
            {<point name="construct.b.rtil018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil018
            
            #add-point:AFTER FIELD rtil018 name="construct.a.rtil018"
            {<point name="construct.a.rtil018" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil018
            #add-point:ON ACTION controlp INFIELD rtil018 name="construct.c.rtil018"
            {<point name="construct.c.rtil018" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil019
            #add-point:BEFORE FIELD rtil019 name="construct.b.rtil019"
            {<point name="construct.b.rtil019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil019
            
            #add-point:AFTER FIELD rtil019 name="construct.a.rtil019"
            {<point name="construct.a.rtil019" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil019
            #add-point:ON ACTION controlp INFIELD rtil019 name="construct.c.rtil019"
            {<point name="construct.c.rtil019" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtil016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil016
            #add-point:ON ACTION controlp INFIELD rtil016 name="construct.c.rtil016"
            {<point name="construct.c.rtil016" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil016
            #add-point:BEFORE FIELD rtil016 name="construct.b.rtil016"
            {<point name="construct.b.rtil016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil016
            
            #add-point:AFTER FIELD rtil016 name="construct.a.rtil016"
            {<point name="construct.a.rtil016" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil017
            #add-point:BEFORE FIELD rtil017 name="construct.b.rtil017"
            {<point name="construct.b.rtil017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil017
            
            #add-point:AFTER FIELD rtil017 name="construct.a.rtil017"
            {<point name="construct.a.rtil017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil017
            #add-point:ON ACTION controlp INFIELD rtil017 name="construct.c.rtil017"
            {<point name="construct.c.rtil017" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtil022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil022
            #add-point:ON ACTION controlp INFIELD rtil022 name="construct.c.rtil022"
            {<point name="construct.c.rtil022" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil022
            #add-point:BEFORE FIELD rtil022 name="construct.b.rtil022"
            {<point name="construct.b.rtil022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil022
            
            #add-point:AFTER FIELD rtil022 name="construct.a.rtil022"
            {<point name="construct.a.rtil022" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil023
            #add-point:ON ACTION controlp INFIELD rtil023 name="construct.c.rtil023"
            {<point name="construct.c.rtil023" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil023
            #add-point:BEFORE FIELD rtil023 name="construct.b.rtil023"
            {<point name="construct.b.rtil023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil023
            
            #add-point:AFTER FIELD rtil023 name="construct.a.rtil023"
            {<point name="construct.a.rtil023" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil024
            #add-point:BEFORE FIELD rtil024 name="construct.b.rtil024"
            {<point name="construct.b.rtil024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil024
            
            #add-point:AFTER FIELD rtil024 name="construct.a.rtil024"
            {<point name="construct.a.rtil024" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil024
            #add-point:ON ACTION controlp INFIELD rtil024 name="construct.c.rtil024"
            {<point name="construct.c.rtil024" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtil025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil025
            #add-point:ON ACTION controlp INFIELD rtil025 name="construct.c.rtil025"
            {<point name="construct.c.rtil025" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil025
            #add-point:BEFORE FIELD rtil025 name="construct.b.rtil025"
            {<point name="construct.b.rtil025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil025
            
            #add-point:AFTER FIELD rtil025 name="construct.a.rtil025"
            {<point name="construct.a.rtil025" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil026
            #add-point:BEFORE FIELD rtil026 name="construct.b.rtil026"
            {<point name="construct.b.rtil026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil026
            
            #add-point:AFTER FIELD rtil026 name="construct.a.rtil026"
            {<point name="construct.a.rtil026" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil026
            #add-point:ON ACTION controlp INFIELD rtil026 name="construct.c.rtil026"
            {<point name="construct.c.rtil026" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil027
            #add-point:BEFORE FIELD rtil027 name="construct.b.rtil027"
            {<point name="construct.b.rtil027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil027
            
            #add-point:AFTER FIELD rtil027 name="construct.a.rtil027"
            {<point name="construct.a.rtil027" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil027
            #add-point:ON ACTION controlp INFIELD rtil027 name="construct.c.rtil027"
            {<point name="construct.c.rtil027" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil040
            #add-point:BEFORE FIELD rtil040 name="construct.b.rtil040"
            {<point name="construct.b.rtil040" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil040
            
            #add-point:AFTER FIELD rtil040 name="construct.a.rtil040"
            {<point name="construct.a.rtil040" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil040
            #add-point:ON ACTION controlp INFIELD rtil040 name="construct.c.rtil040"
            {<point name="construct.c.rtil040" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil039
            #add-point:BEFORE FIELD rtil039 name="construct.b.rtil039"
            {<point name="construct.b.rtil039" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil039
            
            #add-point:AFTER FIELD rtil039 name="construct.a.rtil039"
            {<point name="construct.a.rtil039" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil039
            #add-point:ON ACTION controlp INFIELD rtil039 name="construct.c.rtil039"
            {<point name="construct.c.rtil039" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil029
            #add-point:BEFORE FIELD rtil029 name="construct.b.rtil029"
            {<point name="construct.b.rtil029" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil029
            
            #add-point:AFTER FIELD rtil029 name="construct.a.rtil029"
            {<point name="construct.a.rtil029" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil029
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil029
            #add-point:ON ACTION controlp INFIELD rtil029 name="construct.c.rtil029"
            {<point name="construct.c.rtil029" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil030
            #add-point:BEFORE FIELD rtil030 name="construct.b.rtil030"
            {<point name="construct.b.rtil030" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil030
            
            #add-point:AFTER FIELD rtil030 name="construct.a.rtil030"
            {<point name="construct.a.rtil030" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil030
            #add-point:ON ACTION controlp INFIELD rtil030 name="construct.c.rtil030"
            {<point name="construct.c.rtil030" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil031
            #add-point:BEFORE FIELD rtil031 name="construct.b.rtil031"
            {<point name="construct.b.rtil031" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil031
            
            #add-point:AFTER FIELD rtil031 name="construct.a.rtil031"
            {<point name="construct.a.rtil031" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil031
            #add-point:ON ACTION controlp INFIELD rtil031 name="construct.c.rtil031"
            {<point name="construct.c.rtil031" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil032
            #add-point:BEFORE FIELD rtil032 name="construct.b.rtil032"
            {<point name="construct.b.rtil032" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil032
            
            #add-point:AFTER FIELD rtil032 name="construct.a.rtil032"
            {<point name="construct.a.rtil032" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil032
            #add-point:ON ACTION controlp INFIELD rtil032 name="construct.c.rtil032"
            {<point name="construct.c.rtil032" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtil033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil033
            #add-point:ON ACTION controlp INFIELD rtil033 name="construct.c.rtil033"
            {<point name="construct.c.rtil033" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil033
            #add-point:BEFORE FIELD rtil033 name="construct.b.rtil033"
            {<point name="construct.b.rtil033" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil033
            
            #add-point:AFTER FIELD rtil033 name="construct.a.rtil033"
            {<point name="construct.a.rtil033" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil034
            #add-point:BEFORE FIELD rtil034 name="construct.b.rtil034"
            {<point name="construct.b.rtil034" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil034
            
            #add-point:AFTER FIELD rtil034 name="construct.a.rtil034"
            {<point name="construct.a.rtil034" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil034
            #add-point:ON ACTION controlp INFIELD rtil034 name="construct.c.rtil034"
            {<point name="construct.c.rtil034" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtil035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil035
            #add-point:ON ACTION controlp INFIELD rtil035 name="construct.c.rtil035"
            {<point name="construct.c.rtil035" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil035
            #add-point:BEFORE FIELD rtil035 name="construct.b.rtil035"
            {<point name="construct.b.rtil035" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil035
            
            #add-point:AFTER FIELD rtil035 name="construct.a.rtil035"
            {<point name="construct.a.rtil035" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil036
            #add-point:BEFORE FIELD rtil036 name="construct.b.rtil036"
            {<point name="construct.b.rtil036" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil036
            
            #add-point:AFTER FIELD rtil036 name="construct.a.rtil036"
            {<point name="construct.a.rtil036" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtil036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil036
            #add-point:ON ACTION controlp INFIELD rtil036 name="construct.c.rtil036"
            {<point name="construct.c.rtil036" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isaf009
            #add-point:BEFORE FIELD isaf009 name="construct.b.isaf009"
            {<point name="construct.b.isaf009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isaf009
            
            #add-point:AFTER FIELD isaf009 name="construct.a.isaf009"
            {<point name="construct.a.isaf009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.isaf009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isaf009
            #add-point:ON ACTION controlp INFIELD isaf009 name="construct.c.isaf009"
            {<point name="construct.c.isaf009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isaf010
            #add-point:BEFORE FIELD isaf010 name="construct.b.isaf010"
            {<point name="construct.b.isaf010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isaf010
            
            #add-point:AFTER FIELD isaf010 name="construct.a.isaf010"
            {<point name="construct.a.isaf010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.isaf010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isaf010
            #add-point:ON ACTION controlp INFIELD isaf010 name="construct.c.isaf010"
            {<point name="construct.c.isaf010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isaf044
            #add-point:BEFORE FIELD isaf044 name="construct.b.isaf044"
            {<point name="construct.b.isaf044" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isaf044
            
            #add-point:AFTER FIELD isaf044 name="construct.a.isaf044"
            {<point name="construct.a.isaf044" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.isaf044
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isaf044
            #add-point:ON ACTION controlp INFIELD isaf044 name="construct.c.isaf044"
            {<point name="construct.c.isaf044" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isaf202
            #add-point:BEFORE FIELD isaf202 name="construct.b.isaf202"
            {<point name="construct.b.isaf202" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isaf202
            
            #add-point:AFTER FIELD isaf202 name="construct.a.isaf202"
            {<point name="construct.a.isaf202" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.isaf202
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isaf202
            #add-point:ON ACTION controlp INFIELD isaf202 name="construct.c.isaf202"
            {<point name="construct.c.isaf202" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isaf203
            #add-point:BEFORE FIELD isaf203 name="construct.b.isaf203"
            {<point name="construct.b.isaf203" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isaf203
            
            #add-point:AFTER FIELD isaf203 name="construct.a.isaf203"
            {<point name="construct.a.isaf203" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.isaf203
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isaf203
            #add-point:ON ACTION controlp INFIELD isaf203 name="construct.c.isaf203"
            {<point name="construct.c.isaf203" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isaf204
            #add-point:BEFORE FIELD isaf204 name="construct.b.isaf204"
            {<point name="construct.b.isaf204" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isaf204
            
            #add-point:AFTER FIELD isaf204 name="construct.a.isaf204"
            {<point name="construct.a.isaf204" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.isaf204
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isaf204
            #add-point:ON ACTION controlp INFIELD isaf204 name="construct.c.isaf204"
            {<point name="construct.c.isaf204" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isaf201
            #add-point:BEFORE FIELD isaf201 name="construct.b.isaf201"
            {<point name="construct.b.isaf201" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isaf201
            
            #add-point:AFTER FIELD isaf201 name="construct.a.isaf201"
            {<point name="construct.a.isaf201" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.isaf201
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isaf201
            #add-point:ON ACTION controlp INFIELD isaf201 name="construct.c.isaf201"
            {<point name="construct.c.isaf201" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isaf207
            #add-point:BEFORE FIELD isaf207 name="construct.b.isaf207"
            {<point name="construct.b.isaf207" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isaf207
            
            #add-point:AFTER FIELD isaf207 name="construct.a.isaf207"
            {<point name="construct.a.isaf207" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.isaf207
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isaf207
            #add-point:ON ACTION controlp INFIELD isaf207 name="construct.c.isaf207"
            {<point name="construct.c.isaf207" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtilownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtilownid
            #add-point:ON ACTION controlp INFIELD rtilownid name="construct.c.rtilownid"
            {<point name="construct.c.rtilownid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtilownid
            #add-point:BEFORE FIELD rtilownid name="construct.b.rtilownid"
            {<point name="construct.b.rtilownid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtilownid
            
            #add-point:AFTER FIELD rtilownid name="construct.a.rtilownid"
            {<point name="construct.a.rtilownid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtilowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtilowndp
            #add-point:ON ACTION controlp INFIELD rtilowndp name="construct.c.rtilowndp"
            {<point name="construct.c.rtilowndp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtilowndp
            #add-point:BEFORE FIELD rtilowndp name="construct.b.rtilowndp"
            {<point name="construct.b.rtilowndp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtilowndp
            
            #add-point:AFTER FIELD rtilowndp name="construct.a.rtilowndp"
            {<point name="construct.a.rtilowndp" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtilcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtilcrtid
            #add-point:ON ACTION controlp INFIELD rtilcrtid name="construct.c.rtilcrtid"
            {<point name="construct.c.rtilcrtid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtilcrtid
            #add-point:BEFORE FIELD rtilcrtid name="construct.b.rtilcrtid"
            {<point name="construct.b.rtilcrtid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtilcrtid
            
            #add-point:AFTER FIELD rtilcrtid name="construct.a.rtilcrtid"
            {<point name="construct.a.rtilcrtid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtilcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtilcrtdp
            #add-point:ON ACTION controlp INFIELD rtilcrtdp name="construct.c.rtilcrtdp"
            {<point name="construct.c.rtilcrtdp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtilcrtdp
            #add-point:BEFORE FIELD rtilcrtdp name="construct.b.rtilcrtdp"
            {<point name="construct.b.rtilcrtdp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtilcrtdp
            
            #add-point:AFTER FIELD rtilcrtdp name="construct.a.rtilcrtdp"
            {<point name="construct.a.rtilcrtdp" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtilcrtdt
            #add-point:BEFORE FIELD rtilcrtdt name="construct.b.rtilcrtdt"
            {<point name="construct.b.rtilcrtdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtilmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtilmodid
            #add-point:ON ACTION controlp INFIELD rtilmodid name="construct.c.rtilmodid"
            {<point name="construct.c.rtilmodid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtilmodid
            #add-point:BEFORE FIELD rtilmodid name="construct.b.rtilmodid"
            {<point name="construct.b.rtilmodid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtilmodid
            
            #add-point:AFTER FIELD rtilmodid name="construct.a.rtilmodid"
            {<point name="construct.a.rtilmodid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtilmoddt
            #add-point:BEFORE FIELD rtilmoddt name="construct.b.rtilmoddt"
            {<point name="construct.b.rtilmoddt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtilcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtilcnfid
            #add-point:ON ACTION controlp INFIELD rtilcnfid name="construct.c.rtilcnfid"
            {<point name="construct.c.rtilcnfid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtilcnfid
            #add-point:BEFORE FIELD rtilcnfid name="construct.b.rtilcnfid"
            {<point name="construct.b.rtilcnfid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtilcnfid
            
            #add-point:AFTER FIELD rtilcnfid name="construct.a.rtilcnfid"
            {<point name="construct.a.rtilcnfid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtilcnfdt
            #add-point:BEFORE FIELD rtilcnfdt name="construct.b.rtilcnfdt"
            {<point name="construct.b.rtilcnfdt" />}
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON rtimsite,rtimunit,rtimorga,rtimseq,rtim003,rtim004,rtim005,rtim006,rtim008, 
          rtim009,rtim010,rtim012,rtim013,rtim014,rtim015,rtim016,rtim018,rtim017,rtim019,rtim020,rtim021, 
          rtim029,rtim022,rtim024,rtim025,rtim026,rtim027,rtim028
           FROM s_detail1[1].rtimsite,s_detail1[1].rtimunit,s_detail1[1].rtimorga,s_detail1[1].rtimseq, 
               s_detail1[1].rtim003,s_detail1[1].rtim004,s_detail1[1].rtim005,s_detail1[1].rtim006,s_detail1[1].rtim008, 
               s_detail1[1].rtim009,s_detail1[1].rtim010,s_detail1[1].rtim012,s_detail1[1].rtim013,s_detail1[1].rtim014, 
               s_detail1[1].rtim015,s_detail1[1].rtim016,s_detail1[1].rtim018,s_detail1[1].rtim017,s_detail1[1].rtim019, 
               s_detail1[1].rtim020,s_detail1[1].rtim021,s_detail1[1].rtim029,s_detail1[1].rtim022,s_detail1[1].rtim024, 
               s_detail1[1].rtim025,s_detail1[1].rtim026,s_detail1[1].rtim027,s_detail1[1].rtim028
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #Ctrlp:construct.c.page1.rtimsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtimsite
            #add-point:ON ACTION controlp INFIELD rtimsite name="construct.c.page1.rtimsite"
            {<point name="construct.c.page1.rtimsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtimsite
            #add-point:BEFORE FIELD rtimsite name="construct.b.page1.rtimsite"
            {<point name="construct.b.page1.rtimsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtimsite
            
            #add-point:AFTER FIELD rtimsite name="construct.a.page1.rtimsite"
            {<point name="construct.a.page1.rtimsite" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtimunit
            #add-point:BEFORE FIELD rtimunit name="construct.b.page1.rtimunit"
            {<point name="construct.b.page1.rtimunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtimunit
            
            #add-point:AFTER FIELD rtimunit name="construct.a.page1.rtimunit"
            {<point name="construct.a.page1.rtimunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtimunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtimunit
            #add-point:ON ACTION controlp INFIELD rtimunit name="construct.c.page1.rtimunit"
            {<point name="construct.c.page1.rtimunit" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtimorga
            #add-point:BEFORE FIELD rtimorga name="construct.b.page1.rtimorga"
            {<point name="construct.b.page1.rtimorga" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtimorga
            
            #add-point:AFTER FIELD rtimorga name="construct.a.page1.rtimorga"
            {<point name="construct.a.page1.rtimorga" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtimorga
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtimorga
            #add-point:ON ACTION controlp INFIELD rtimorga name="construct.c.page1.rtimorga"
            {<point name="construct.c.page1.rtimorga" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtimseq
            #add-point:BEFORE FIELD rtimseq name="construct.b.page1.rtimseq"
            {<point name="construct.b.page1.rtimseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtimseq
            
            #add-point:AFTER FIELD rtimseq name="construct.a.page1.rtimseq"
            {<point name="construct.a.page1.rtimseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtimseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtimseq
            #add-point:ON ACTION controlp INFIELD rtimseq name="construct.c.page1.rtimseq"
            {<point name="construct.c.page1.rtimseq" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.rtim003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim003
            #add-point:ON ACTION controlp INFIELD rtim003 name="construct.c.page1.rtim003"
            {<point name="construct.c.page1.rtim003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim003
            #add-point:BEFORE FIELD rtim003 name="construct.b.page1.rtim003"
            {<point name="construct.b.page1.rtim003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim003
            
            #add-point:AFTER FIELD rtim003 name="construct.a.page1.rtim003"
            {<point name="construct.a.page1.rtim003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim004
            #add-point:ON ACTION controlp INFIELD rtim004 name="construct.c.page1.rtim004"
            {<point name="construct.c.page1.rtim004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim004
            #add-point:BEFORE FIELD rtim004 name="construct.b.page1.rtim004"
            {<point name="construct.b.page1.rtim004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim004
            
            #add-point:AFTER FIELD rtim004 name="construct.a.page1.rtim004"
            {<point name="construct.a.page1.rtim004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim005
            #add-point:BEFORE FIELD rtim005 name="construct.b.page1.rtim005"
            {<point name="construct.b.page1.rtim005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim005
            
            #add-point:AFTER FIELD rtim005 name="construct.a.page1.rtim005"
            {<point name="construct.a.page1.rtim005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim005
            #add-point:ON ACTION controlp INFIELD rtim005 name="construct.c.page1.rtim005"
            {<point name="construct.c.page1.rtim005" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.rtim006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim006
            #add-point:ON ACTION controlp INFIELD rtim006 name="construct.c.page1.rtim006"
            {<point name="construct.c.page1.rtim006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim006
            #add-point:BEFORE FIELD rtim006 name="construct.b.page1.rtim006"
            {<point name="construct.b.page1.rtim006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim006
            
            #add-point:AFTER FIELD rtim006 name="construct.a.page1.rtim006"
            {<point name="construct.a.page1.rtim006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim008
            #add-point:BEFORE FIELD rtim008 name="construct.b.page1.rtim008"
            {<point name="construct.b.page1.rtim008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim008
            
            #add-point:AFTER FIELD rtim008 name="construct.a.page1.rtim008"
            {<point name="construct.a.page1.rtim008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim008
            #add-point:ON ACTION controlp INFIELD rtim008 name="construct.c.page1.rtim008"
            {<point name="construct.c.page1.rtim008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim009
            #add-point:BEFORE FIELD rtim009 name="construct.b.page1.rtim009"
            {<point name="construct.b.page1.rtim009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim009
            
            #add-point:AFTER FIELD rtim009 name="construct.a.page1.rtim009"
            {<point name="construct.a.page1.rtim009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim009
            #add-point:ON ACTION controlp INFIELD rtim009 name="construct.c.page1.rtim009"
            {<point name="construct.c.page1.rtim009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim010
            #add-point:BEFORE FIELD rtim010 name="construct.b.page1.rtim010"
            {<point name="construct.b.page1.rtim010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim010
            
            #add-point:AFTER FIELD rtim010 name="construct.a.page1.rtim010"
            {<point name="construct.a.page1.rtim010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim010
            #add-point:ON ACTION controlp INFIELD rtim010 name="construct.c.page1.rtim010"
            {<point name="construct.c.page1.rtim010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim012
            #add-point:BEFORE FIELD rtim012 name="construct.b.page1.rtim012"
            {<point name="construct.b.page1.rtim012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim012
            
            #add-point:AFTER FIELD rtim012 name="construct.a.page1.rtim012"
            {<point name="construct.a.page1.rtim012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim012
            #add-point:ON ACTION controlp INFIELD rtim012 name="construct.c.page1.rtim012"
            {<point name="construct.c.page1.rtim012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim013
            #add-point:BEFORE FIELD rtim013 name="construct.b.page1.rtim013"
            {<point name="construct.b.page1.rtim013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim013
            
            #add-point:AFTER FIELD rtim013 name="construct.a.page1.rtim013"
            {<point name="construct.a.page1.rtim013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim013
            #add-point:ON ACTION controlp INFIELD rtim013 name="construct.c.page1.rtim013"
            {<point name="construct.c.page1.rtim013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim014
            #add-point:BEFORE FIELD rtim014 name="construct.b.page1.rtim014"
            {<point name="construct.b.page1.rtim014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim014
            
            #add-point:AFTER FIELD rtim014 name="construct.a.page1.rtim014"
            {<point name="construct.a.page1.rtim014" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim014
            #add-point:ON ACTION controlp INFIELD rtim014 name="construct.c.page1.rtim014"
            {<point name="construct.c.page1.rtim014" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.rtim015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim015
            #add-point:ON ACTION controlp INFIELD rtim015 name="construct.c.page1.rtim015"
            {<point name="construct.c.page1.rtim015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim015
            #add-point:BEFORE FIELD rtim015 name="construct.b.page1.rtim015"
            {<point name="construct.b.page1.rtim015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim015
            
            #add-point:AFTER FIELD rtim015 name="construct.a.page1.rtim015"
            {<point name="construct.a.page1.rtim015" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim016
            #add-point:BEFORE FIELD rtim016 name="construct.b.page1.rtim016"
            {<point name="construct.b.page1.rtim016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim016
            
            #add-point:AFTER FIELD rtim016 name="construct.a.page1.rtim016"
            {<point name="construct.a.page1.rtim016" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim016
            #add-point:ON ACTION controlp INFIELD rtim016 name="construct.c.page1.rtim016"
            {<point name="construct.c.page1.rtim016" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim018
            #add-point:BEFORE FIELD rtim018 name="construct.b.page1.rtim018"
            {<point name="construct.b.page1.rtim018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim018
            
            #add-point:AFTER FIELD rtim018 name="construct.a.page1.rtim018"
            {<point name="construct.a.page1.rtim018" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim018
            #add-point:ON ACTION controlp INFIELD rtim018 name="construct.c.page1.rtim018"
            {<point name="construct.c.page1.rtim018" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim017
            #add-point:BEFORE FIELD rtim017 name="construct.b.page1.rtim017"
            {<point name="construct.b.page1.rtim017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim017
            
            #add-point:AFTER FIELD rtim017 name="construct.a.page1.rtim017"
            {<point name="construct.a.page1.rtim017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim017
            #add-point:ON ACTION controlp INFIELD rtim017 name="construct.c.page1.rtim017"
            {<point name="construct.c.page1.rtim017" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim019
            #add-point:BEFORE FIELD rtim019 name="construct.b.page1.rtim019"
            {<point name="construct.b.page1.rtim019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim019
            
            #add-point:AFTER FIELD rtim019 name="construct.a.page1.rtim019"
            {<point name="construct.a.page1.rtim019" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim019
            #add-point:ON ACTION controlp INFIELD rtim019 name="construct.c.page1.rtim019"
            {<point name="construct.c.page1.rtim019" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim020
            #add-point:BEFORE FIELD rtim020 name="construct.b.page1.rtim020"
            {<point name="construct.b.page1.rtim020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim020
            
            #add-point:AFTER FIELD rtim020 name="construct.a.page1.rtim020"
            {<point name="construct.a.page1.rtim020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim020
            #add-point:ON ACTION controlp INFIELD rtim020 name="construct.c.page1.rtim020"
            {<point name="construct.c.page1.rtim020" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim021
            #add-point:BEFORE FIELD rtim021 name="construct.b.page1.rtim021"
            {<point name="construct.b.page1.rtim021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim021
            
            #add-point:AFTER FIELD rtim021 name="construct.a.page1.rtim021"
            {<point name="construct.a.page1.rtim021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim021
            #add-point:ON ACTION controlp INFIELD rtim021 name="construct.c.page1.rtim021"
            {<point name="construct.c.page1.rtim021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim029
            #add-point:BEFORE FIELD rtim029 name="construct.b.page1.rtim029"
            {<point name="construct.b.page1.rtim029" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim029
            
            #add-point:AFTER FIELD rtim029 name="construct.a.page1.rtim029"
            {<point name="construct.a.page1.rtim029" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim029
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim029
            #add-point:ON ACTION controlp INFIELD rtim029 name="construct.c.page1.rtim029"
            {<point name="construct.c.page1.rtim029" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim022
            #add-point:BEFORE FIELD rtim022 name="construct.b.page1.rtim022"
            {<point name="construct.b.page1.rtim022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim022
            
            #add-point:AFTER FIELD rtim022 name="construct.a.page1.rtim022"
            {<point name="construct.a.page1.rtim022" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim022
            #add-point:ON ACTION controlp INFIELD rtim022 name="construct.c.page1.rtim022"
            {<point name="construct.c.page1.rtim022" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.rtim024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim024
            #add-point:ON ACTION controlp INFIELD rtim024 name="construct.c.page1.rtim024"
            {<point name="construct.c.page1.rtim024" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim024
            #add-point:BEFORE FIELD rtim024 name="construct.b.page1.rtim024"
            {<point name="construct.b.page1.rtim024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim024
            
            #add-point:AFTER FIELD rtim024 name="construct.a.page1.rtim024"
            {<point name="construct.a.page1.rtim024" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim025
            #add-point:ON ACTION controlp INFIELD rtim025 name="construct.c.page1.rtim025"
            {<point name="construct.c.page1.rtim025" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim025
            #add-point:BEFORE FIELD rtim025 name="construct.b.page1.rtim025"
            {<point name="construct.b.page1.rtim025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim025
            
            #add-point:AFTER FIELD rtim025 name="construct.a.page1.rtim025"
            {<point name="construct.a.page1.rtim025" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim026
            #add-point:ON ACTION controlp INFIELD rtim026 name="construct.c.page1.rtim026"
            {<point name="construct.c.page1.rtim026" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim026
            #add-point:BEFORE FIELD rtim026 name="construct.b.page1.rtim026"
            {<point name="construct.b.page1.rtim026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim026
            
            #add-point:AFTER FIELD rtim026 name="construct.a.page1.rtim026"
            {<point name="construct.a.page1.rtim026" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim027
            #add-point:ON ACTION controlp INFIELD rtim027 name="construct.c.page1.rtim027"
            {<point name="construct.c.page1.rtim027" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim027
            #add-point:BEFORE FIELD rtim027 name="construct.b.page1.rtim027"
            {<point name="construct.b.page1.rtim027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim027
            
            #add-point:AFTER FIELD rtim027 name="construct.a.page1.rtim027"
            {<point name="construct.a.page1.rtim027" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtim028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim028
            #add-point:ON ACTION controlp INFIELD rtim028 name="construct.c.page1.rtim028"
            {<point name="construct.c.page1.rtim028" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim028
            #add-point:BEFORE FIELD rtim028 name="construct.b.page1.rtim028"
            {<point name="construct.b.page1.rtim028" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim028
            
            #add-point:AFTER FIELD rtim028 name="construct.a.page1.rtim028"
            {<point name="construct.a.page1.rtim028" />}
            #END add-point
            
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON rticseq,rticseq1,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007, 
          rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic020 

           FROM s_detail2[1].rticseq,s_detail2[1].rticseq1,s_detail2[1].rtic001,s_detail2[1].rtic002, 
               s_detail2[1].rtic003,s_detail2[1].rtic004,s_detail2[1].rtic005,s_detail2[1].rtic006,s_detail2[1].rtic007, 
               s_detail2[1].rtic008,s_detail2[1].rtic009,s_detail2[1].rtic010,s_detail2[1].rtic011,s_detail2[1].rtic012, 
               s_detail2[1].rtic013,s_detail2[1].rtic014,s_detail2[1].rtic015,s_detail2[1].rtic016,s_detail2[1].rtic017, 
               s_detail2[1].rtic018,s_detail2[1].rtic020
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rticseq
            #add-point:BEFORE FIELD rticseq name="construct.b.page2.rticseq"
            {<point name="construct.b.page2.rticseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rticseq
            
            #add-point:AFTER FIELD rticseq name="construct.a.page2.rticseq"
            {<point name="construct.a.page2.rticseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rticseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rticseq
            #add-point:ON ACTION controlp INFIELD rticseq name="construct.c.page2.rticseq"
            {<point name="construct.c.page2.rticseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rticseq1
            #add-point:BEFORE FIELD rticseq1 name="construct.b.page2.rticseq1"
            {<point name="construct.b.page2.rticseq1" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rticseq1
            
            #add-point:AFTER FIELD rticseq1 name="construct.a.page2.rticseq1"
            {<point name="construct.a.page2.rticseq1" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rticseq1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rticseq1
            #add-point:ON ACTION controlp INFIELD rticseq1 name="construct.c.page2.rticseq1"
            {<point name="construct.c.page2.rticseq1" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic001
            #add-point:BEFORE FIELD rtic001 name="construct.b.page2.rtic001"
            {<point name="construct.b.page2.rtic001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic001
            
            #add-point:AFTER FIELD rtic001 name="construct.a.page2.rtic001"
            {<point name="construct.a.page2.rtic001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic001
            #add-point:ON ACTION controlp INFIELD rtic001 name="construct.c.page2.rtic001"
            {<point name="construct.c.page2.rtic001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic002
            #add-point:BEFORE FIELD rtic002 name="construct.b.page2.rtic002"
            {<point name="construct.b.page2.rtic002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic002
            
            #add-point:AFTER FIELD rtic002 name="construct.a.page2.rtic002"
            {<point name="construct.a.page2.rtic002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic002
            #add-point:ON ACTION controlp INFIELD rtic002 name="construct.c.page2.rtic002"
            {<point name="construct.c.page2.rtic002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic003
            #add-point:BEFORE FIELD rtic003 name="construct.b.page2.rtic003"
            {<point name="construct.b.page2.rtic003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic003
            
            #add-point:AFTER FIELD rtic003 name="construct.a.page2.rtic003"
            {<point name="construct.a.page2.rtic003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic003
            #add-point:ON ACTION controlp INFIELD rtic003 name="construct.c.page2.rtic003"
            {<point name="construct.c.page2.rtic003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic004
            #add-point:BEFORE FIELD rtic004 name="construct.b.page2.rtic004"
            {<point name="construct.b.page2.rtic004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic004
            
            #add-point:AFTER FIELD rtic004 name="construct.a.page2.rtic004"
            {<point name="construct.a.page2.rtic004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic004
            #add-point:ON ACTION controlp INFIELD rtic004 name="construct.c.page2.rtic004"
            {<point name="construct.c.page2.rtic004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic005
            #add-point:BEFORE FIELD rtic005 name="construct.b.page2.rtic005"
            {<point name="construct.b.page2.rtic005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic005
            
            #add-point:AFTER FIELD rtic005 name="construct.a.page2.rtic005"
            {<point name="construct.a.page2.rtic005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic005
            #add-point:ON ACTION controlp INFIELD rtic005 name="construct.c.page2.rtic005"
            {<point name="construct.c.page2.rtic005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic006
            #add-point:BEFORE FIELD rtic006 name="construct.b.page2.rtic006"
            {<point name="construct.b.page2.rtic006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic006
            
            #add-point:AFTER FIELD rtic006 name="construct.a.page2.rtic006"
            {<point name="construct.a.page2.rtic006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic006
            #add-point:ON ACTION controlp INFIELD rtic006 name="construct.c.page2.rtic006"
            {<point name="construct.c.page2.rtic006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic007
            #add-point:BEFORE FIELD rtic007 name="construct.b.page2.rtic007"
            {<point name="construct.b.page2.rtic007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic007
            
            #add-point:AFTER FIELD rtic007 name="construct.a.page2.rtic007"
            {<point name="construct.a.page2.rtic007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic007
            #add-point:ON ACTION controlp INFIELD rtic007 name="construct.c.page2.rtic007"
            {<point name="construct.c.page2.rtic007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic008
            #add-point:BEFORE FIELD rtic008 name="construct.b.page2.rtic008"
            {<point name="construct.b.page2.rtic008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic008
            
            #add-point:AFTER FIELD rtic008 name="construct.a.page2.rtic008"
            {<point name="construct.a.page2.rtic008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic008
            #add-point:ON ACTION controlp INFIELD rtic008 name="construct.c.page2.rtic008"
            {<point name="construct.c.page2.rtic008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic009
            #add-point:BEFORE FIELD rtic009 name="construct.b.page2.rtic009"
            {<point name="construct.b.page2.rtic009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic009
            
            #add-point:AFTER FIELD rtic009 name="construct.a.page2.rtic009"
            {<point name="construct.a.page2.rtic009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic009
            #add-point:ON ACTION controlp INFIELD rtic009 name="construct.c.page2.rtic009"
            {<point name="construct.c.page2.rtic009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic010
            #add-point:BEFORE FIELD rtic010 name="construct.b.page2.rtic010"
            {<point name="construct.b.page2.rtic010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic010
            
            #add-point:AFTER FIELD rtic010 name="construct.a.page2.rtic010"
            {<point name="construct.a.page2.rtic010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic010
            #add-point:ON ACTION controlp INFIELD rtic010 name="construct.c.page2.rtic010"
            {<point name="construct.c.page2.rtic010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic011
            #add-point:BEFORE FIELD rtic011 name="construct.b.page2.rtic011"
            {<point name="construct.b.page2.rtic011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic011
            
            #add-point:AFTER FIELD rtic011 name="construct.a.page2.rtic011"
            {<point name="construct.a.page2.rtic011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic011
            #add-point:ON ACTION controlp INFIELD rtic011 name="construct.c.page2.rtic011"
            {<point name="construct.c.page2.rtic011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic012
            #add-point:BEFORE FIELD rtic012 name="construct.b.page2.rtic012"
            {<point name="construct.b.page2.rtic012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic012
            
            #add-point:AFTER FIELD rtic012 name="construct.a.page2.rtic012"
            {<point name="construct.a.page2.rtic012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic012
            #add-point:ON ACTION controlp INFIELD rtic012 name="construct.c.page2.rtic012"
            {<point name="construct.c.page2.rtic012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic013
            #add-point:BEFORE FIELD rtic013 name="construct.b.page2.rtic013"
            {<point name="construct.b.page2.rtic013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic013
            
            #add-point:AFTER FIELD rtic013 name="construct.a.page2.rtic013"
            {<point name="construct.a.page2.rtic013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic013
            #add-point:ON ACTION controlp INFIELD rtic013 name="construct.c.page2.rtic013"
            {<point name="construct.c.page2.rtic013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic014
            #add-point:BEFORE FIELD rtic014 name="construct.b.page2.rtic014"
            {<point name="construct.b.page2.rtic014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic014
            
            #add-point:AFTER FIELD rtic014 name="construct.a.page2.rtic014"
            {<point name="construct.a.page2.rtic014" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic014
            #add-point:ON ACTION controlp INFIELD rtic014 name="construct.c.page2.rtic014"
            {<point name="construct.c.page2.rtic014" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic015
            #add-point:BEFORE FIELD rtic015 name="construct.b.page2.rtic015"
            {<point name="construct.b.page2.rtic015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic015
            
            #add-point:AFTER FIELD rtic015 name="construct.a.page2.rtic015"
            {<point name="construct.a.page2.rtic015" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic015
            #add-point:ON ACTION controlp INFIELD rtic015 name="construct.c.page2.rtic015"
            {<point name="construct.c.page2.rtic015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic016
            #add-point:BEFORE FIELD rtic016 name="construct.b.page2.rtic016"
            {<point name="construct.b.page2.rtic016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic016
            
            #add-point:AFTER FIELD rtic016 name="construct.a.page2.rtic016"
            {<point name="construct.a.page2.rtic016" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic016
            #add-point:ON ACTION controlp INFIELD rtic016 name="construct.c.page2.rtic016"
            {<point name="construct.c.page2.rtic016" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic017
            #add-point:BEFORE FIELD rtic017 name="construct.b.page2.rtic017"
            {<point name="construct.b.page2.rtic017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic017
            
            #add-point:AFTER FIELD rtic017 name="construct.a.page2.rtic017"
            {<point name="construct.a.page2.rtic017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic017
            #add-point:ON ACTION controlp INFIELD rtic017 name="construct.c.page2.rtic017"
            {<point name="construct.c.page2.rtic017" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic018
            #add-point:BEFORE FIELD rtic018 name="construct.b.page2.rtic018"
            {<point name="construct.b.page2.rtic018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic018
            
            #add-point:AFTER FIELD rtic018 name="construct.a.page2.rtic018"
            {<point name="construct.a.page2.rtic018" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic018
            #add-point:ON ACTION controlp INFIELD rtic018 name="construct.c.page2.rtic018"
            {<point name="construct.c.page2.rtic018" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic020
            #add-point:BEFORE FIELD rtic020 name="construct.b.page2.rtic020"
            {<point name="construct.b.page2.rtic020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic020
            
            #add-point:AFTER FIELD rtic020 name="construct.a.page2.rtic020"
            {<point name="construct.a.page2.rtic020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic020
            #add-point:ON ACTION controlp INFIELD rtic020 name="construct.c.page2.rtic020"
            {<point name="construct.c.page2.rtic020" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON xrcd007,xrcdld,xrcdseq,xrcdseq2,xrcd002,xrcd003,xrcd006,xrcd004,xrcd104 

           FROM s_detail3[1].xrcd007,s_detail3[1].xrcdld,s_detail3[1].xrcdseq,s_detail3[1].xrcdseq2, 
               s_detail3[1].xrcd002,s_detail3[1].xrcd003,s_detail3[1].xrcd006,s_detail3[1].xrcd004,s_detail3[1].xrcd104 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body3.before_construct"
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd007
            #add-point:BEFORE FIELD xrcd007 name="construct.b.page3.xrcd007"
            {<point name="construct.b.page3.xrcd007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd007
            
            #add-point:AFTER FIELD xrcd007 name="construct.a.page3.xrcd007"
            {<point name="construct.a.page3.xrcd007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcd007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd007
            #add-point:ON ACTION controlp INFIELD xrcd007 name="construct.c.page3.xrcd007"
            {<point name="construct.c.page3.xrcd007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcdld
            #add-point:BEFORE FIELD xrcdld name="construct.b.page3.xrcdld"
            {<point name="construct.b.page3.xrcdld" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcdld
            
            #add-point:AFTER FIELD xrcdld name="construct.a.page3.xrcdld"
            {<point name="construct.a.page3.xrcdld" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcdld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcdld
            #add-point:ON ACTION controlp INFIELD xrcdld name="construct.c.page3.xrcdld"
            {<point name="construct.c.page3.xrcdld" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcdseq
            #add-point:BEFORE FIELD xrcdseq name="construct.b.page3.xrcdseq"
            {<point name="construct.b.page3.xrcdseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcdseq
            
            #add-point:AFTER FIELD xrcdseq name="construct.a.page3.xrcdseq"
            {<point name="construct.a.page3.xrcdseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcdseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcdseq
            #add-point:ON ACTION controlp INFIELD xrcdseq name="construct.c.page3.xrcdseq"
            {<point name="construct.c.page3.xrcdseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcdseq2
            #add-point:BEFORE FIELD xrcdseq2 name="construct.b.page3.xrcdseq2"
            {<point name="construct.b.page3.xrcdseq2" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcdseq2
            
            #add-point:AFTER FIELD xrcdseq2 name="construct.a.page3.xrcdseq2"
            {<point name="construct.a.page3.xrcdseq2" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcdseq2
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcdseq2
            #add-point:ON ACTION controlp INFIELD xrcdseq2 name="construct.c.page3.xrcdseq2"
            {<point name="construct.c.page3.xrcdseq2" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd002
            #add-point:BEFORE FIELD xrcd002 name="construct.b.page3.xrcd002"
            {<point name="construct.b.page3.xrcd002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd002
            
            #add-point:AFTER FIELD xrcd002 name="construct.a.page3.xrcd002"
            {<point name="construct.a.page3.xrcd002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcd002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd002
            #add-point:ON ACTION controlp INFIELD xrcd002 name="construct.c.page3.xrcd002"
            {<point name="construct.c.page3.xrcd002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd003
            #add-point:BEFORE FIELD xrcd003 name="construct.b.page3.xrcd003"
            {<point name="construct.b.page3.xrcd003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd003
            
            #add-point:AFTER FIELD xrcd003 name="construct.a.page3.xrcd003"
            {<point name="construct.a.page3.xrcd003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcd003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd003
            #add-point:ON ACTION controlp INFIELD xrcd003 name="construct.c.page3.xrcd003"
            {<point name="construct.c.page3.xrcd003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd006
            #add-point:BEFORE FIELD xrcd006 name="construct.b.page3.xrcd006"
            {<point name="construct.b.page3.xrcd006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd006
            
            #add-point:AFTER FIELD xrcd006 name="construct.a.page3.xrcd006"
            {<point name="construct.a.page3.xrcd006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcd006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd006
            #add-point:ON ACTION controlp INFIELD xrcd006 name="construct.c.page3.xrcd006"
            {<point name="construct.c.page3.xrcd006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd004
            #add-point:BEFORE FIELD xrcd004 name="construct.b.page3.xrcd004"
            {<point name="construct.b.page3.xrcd004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd004
            
            #add-point:AFTER FIELD xrcd004 name="construct.a.page3.xrcd004"
            {<point name="construct.a.page3.xrcd004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcd004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd004
            #add-point:ON ACTION controlp INFIELD xrcd004 name="construct.c.page3.xrcd004"
            {<point name="construct.c.page3.xrcd004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd104
            #add-point:BEFORE FIELD xrcd104 name="construct.b.page3.xrcd104"
            {<point name="construct.b.page3.xrcd104" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd104
            
            #add-point:AFTER FIELD xrcd104 name="construct.a.page3.xrcd104"
            {<point name="construct.a.page3.xrcd104" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcd104
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd104
            #add-point:ON ACTION controlp INFIELD xrcd104 name="construct.c.page3.xrcd104"
            {<point name="construct.c.page3.xrcd104" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON rtieseq,rtieseq1,rtie001,rtie002,rtie006
           FROM s_detail4[1].rtieseq,s_detail4[1].rtieseq1,s_detail4[1].rtie001,s_detail4[1].rtie002, 
               s_detail4[1].rtie006
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body4.before_construct"
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtieseq
            #add-point:BEFORE FIELD rtieseq name="construct.b.page4.rtieseq"
            {<point name="construct.b.page4.rtieseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtieseq
            
            #add-point:AFTER FIELD rtieseq name="construct.a.page4.rtieseq"
            {<point name="construct.a.page4.rtieseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.rtieseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtieseq
            #add-point:ON ACTION controlp INFIELD rtieseq name="construct.c.page4.rtieseq"
            {<point name="construct.c.page4.rtieseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtieseq1
            #add-point:BEFORE FIELD rtieseq1 name="construct.b.page4.rtieseq1"
            {<point name="construct.b.page4.rtieseq1" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtieseq1
            
            #add-point:AFTER FIELD rtieseq1 name="construct.a.page4.rtieseq1"
            {<point name="construct.a.page4.rtieseq1" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.rtieseq1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtieseq1
            #add-point:ON ACTION controlp INFIELD rtieseq1 name="construct.c.page4.rtieseq1"
            {<point name="construct.c.page4.rtieseq1" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtie001
            #add-point:BEFORE FIELD rtie001 name="construct.b.page4.rtie001"
            {<point name="construct.b.page4.rtie001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtie001
            
            #add-point:AFTER FIELD rtie001 name="construct.a.page4.rtie001"
            {<point name="construct.a.page4.rtie001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.rtie001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtie001
            #add-point:ON ACTION controlp INFIELD rtie001 name="construct.c.page4.rtie001"
            {<point name="construct.c.page4.rtie001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtie002
            #add-point:BEFORE FIELD rtie002 name="construct.b.page4.rtie002"
            {<point name="construct.b.page4.rtie002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtie002
            
            #add-point:AFTER FIELD rtie002 name="construct.a.page4.rtie002"
            {<point name="construct.a.page4.rtie002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.rtie002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtie002
            #add-point:ON ACTION controlp INFIELD rtie002 name="construct.c.page4.rtie002"
            {<point name="construct.c.page4.rtie002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtie006
            #add-point:BEFORE FIELD rtie006 name="construct.b.page4.rtie006"
            {<point name="construct.b.page4.rtie006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtie006
            
            #add-point:AFTER FIELD rtie006 name="construct.a.page4.rtie006"
            {<point name="construct.a.page4.rtie006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.rtie006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtie006
            #add-point:ON ACTION controlp INFIELD rtie006 name="construct.c.page4.rtie006"
            {<point name="construct.c.page4.rtie006" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table5 ON rtiksite,rtikunit,rtikorg,rtikseq,rtik001,rtik002,rtik003,rtik004,rtik005, 
          rtik006,rtik006_desc,rtik007,rtik013,rtik012,rtik008,rtik009,rtik010,rtik011,rtik014,rtik015, 
          rtik016,rtik017,rtik018,rtik019,rtik020,rtik021,rtik022,rtik023
           FROM s_detail5[1].rtiksite,s_detail5[1].rtikunit,s_detail5[1].rtikorg,s_detail5[1].rtikseq, 
               s_detail5[1].rtik001,s_detail5[1].rtik002,s_detail5[1].rtik003,s_detail5[1].rtik004,s_detail5[1].rtik005, 
               s_detail5[1].rtik006,s_detail5[1].rtik006_desc,s_detail5[1].rtik007,s_detail5[1].rtik013, 
               s_detail5[1].rtik012,s_detail5[1].rtik008,s_detail5[1].rtik009,s_detail5[1].rtik010,s_detail5[1].rtik011, 
               s_detail5[1].rtik014,s_detail5[1].rtik015,s_detail5[1].rtik016,s_detail5[1].rtik017,s_detail5[1].rtik018, 
               s_detail5[1].rtik019,s_detail5[1].rtik020,s_detail5[1].rtik021,s_detail5[1].rtik022,s_detail5[1].rtik023 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body5.before_construct"
            {<point name="cs.body5.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 5)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiksite
            #add-point:BEFORE FIELD rtiksite name="construct.b.page5.rtiksite"
            {<point name="construct.b.page5.rtiksite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiksite
            
            #add-point:AFTER FIELD rtiksite name="construct.a.page5.rtiksite"
            {<point name="construct.a.page5.rtiksite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtiksite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiksite
            #add-point:ON ACTION controlp INFIELD rtiksite name="construct.c.page5.rtiksite"
            {<point name="construct.c.page5.rtiksite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtikunit
            #add-point:BEFORE FIELD rtikunit name="construct.b.page5.rtikunit"
            {<point name="construct.b.page5.rtikunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtikunit
            
            #add-point:AFTER FIELD rtikunit name="construct.a.page5.rtikunit"
            {<point name="construct.a.page5.rtikunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtikunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtikunit
            #add-point:ON ACTION controlp INFIELD rtikunit name="construct.c.page5.rtikunit"
            {<point name="construct.c.page5.rtikunit" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtikorg
            #add-point:BEFORE FIELD rtikorg name="construct.b.page5.rtikorg"
            {<point name="construct.b.page5.rtikorg" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtikorg
            
            #add-point:AFTER FIELD rtikorg name="construct.a.page5.rtikorg"
            {<point name="construct.a.page5.rtikorg" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtikorg
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtikorg
            #add-point:ON ACTION controlp INFIELD rtikorg name="construct.c.page5.rtikorg"
            {<point name="construct.c.page5.rtikorg" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtikseq
            #add-point:BEFORE FIELD rtikseq name="construct.b.page5.rtikseq"
            {<point name="construct.b.page5.rtikseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtikseq
            
            #add-point:AFTER FIELD rtikseq name="construct.a.page5.rtikseq"
            {<point name="construct.a.page5.rtikseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtikseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtikseq
            #add-point:ON ACTION controlp INFIELD rtikseq name="construct.c.page5.rtikseq"
            {<point name="construct.c.page5.rtikseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik001
            #add-point:BEFORE FIELD rtik001 name="construct.b.page5.rtik001"
            {<point name="construct.b.page5.rtik001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik001
            
            #add-point:AFTER FIELD rtik001 name="construct.a.page5.rtik001"
            {<point name="construct.a.page5.rtik001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik001
            #add-point:ON ACTION controlp INFIELD rtik001 name="construct.c.page5.rtik001"
            {<point name="construct.c.page5.rtik001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik002
            #add-point:BEFORE FIELD rtik002 name="construct.b.page5.rtik002"
            {<point name="construct.b.page5.rtik002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik002
            
            #add-point:AFTER FIELD rtik002 name="construct.a.page5.rtik002"
            {<point name="construct.a.page5.rtik002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik002
            #add-point:ON ACTION controlp INFIELD rtik002 name="construct.c.page5.rtik002"
            {<point name="construct.c.page5.rtik002" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page5.rtik003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik003
            #add-point:ON ACTION controlp INFIELD rtik003 name="construct.c.page5.rtik003"
            {<point name="construct.c.page5.rtik003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik003
            #add-point:BEFORE FIELD rtik003 name="construct.b.page5.rtik003"
            {<point name="construct.b.page5.rtik003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik003
            
            #add-point:AFTER FIELD rtik003 name="construct.a.page5.rtik003"
            {<point name="construct.a.page5.rtik003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik004
            #add-point:BEFORE FIELD rtik004 name="construct.b.page5.rtik004"
            {<point name="construct.b.page5.rtik004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik004
            
            #add-point:AFTER FIELD rtik004 name="construct.a.page5.rtik004"
            {<point name="construct.a.page5.rtik004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik004
            #add-point:ON ACTION controlp INFIELD rtik004 name="construct.c.page5.rtik004"
            {<point name="construct.c.page5.rtik004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik005
            #add-point:BEFORE FIELD rtik005 name="construct.b.page5.rtik005"
            {<point name="construct.b.page5.rtik005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik005
            
            #add-point:AFTER FIELD rtik005 name="construct.a.page5.rtik005"
            {<point name="construct.a.page5.rtik005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik005
            #add-point:ON ACTION controlp INFIELD rtik005 name="construct.c.page5.rtik005"
            {<point name="construct.c.page5.rtik005" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page5.rtik006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik006
            #add-point:ON ACTION controlp INFIELD rtik006 name="construct.c.page5.rtik006"
            {<point name="construct.c.page5.rtik006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik006
            #add-point:BEFORE FIELD rtik006 name="construct.b.page5.rtik006"
            {<point name="construct.b.page5.rtik006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik006
            
            #add-point:AFTER FIELD rtik006 name="construct.a.page5.rtik006"
            {<point name="construct.a.page5.rtik006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik006_desc
            #add-point:BEFORE FIELD rtik006_desc name="construct.b.page5.rtik006_desc"
            {<point name="construct.b.page5.rtik006_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik006_desc
            
            #add-point:AFTER FIELD rtik006_desc name="construct.a.page5.rtik006_desc"
            {<point name="construct.a.page5.rtik006_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik006_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik006_desc
            #add-point:ON ACTION controlp INFIELD rtik006_desc name="construct.c.page5.rtik006_desc"
            {<point name="construct.c.page5.rtik006_desc" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik007
            #add-point:BEFORE FIELD rtik007 name="construct.b.page5.rtik007"
            {<point name="construct.b.page5.rtik007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik007
            
            #add-point:AFTER FIELD rtik007 name="construct.a.page5.rtik007"
            {<point name="construct.a.page5.rtik007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik007
            #add-point:ON ACTION controlp INFIELD rtik007 name="construct.c.page5.rtik007"
            {<point name="construct.c.page5.rtik007" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page5.rtik013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik013
            #add-point:ON ACTION controlp INFIELD rtik013 name="construct.c.page5.rtik013"
            {<point name="construct.c.page5.rtik013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik013
            #add-point:BEFORE FIELD rtik013 name="construct.b.page5.rtik013"
            {<point name="construct.b.page5.rtik013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik013
            
            #add-point:AFTER FIELD rtik013 name="construct.a.page5.rtik013"
            {<point name="construct.a.page5.rtik013" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik012
            #add-point:BEFORE FIELD rtik012 name="construct.b.page5.rtik012"
            {<point name="construct.b.page5.rtik012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik012
            
            #add-point:AFTER FIELD rtik012 name="construct.a.page5.rtik012"
            {<point name="construct.a.page5.rtik012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik012
            #add-point:ON ACTION controlp INFIELD rtik012 name="construct.c.page5.rtik012"
            {<point name="construct.c.page5.rtik012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik008
            #add-point:BEFORE FIELD rtik008 name="construct.b.page5.rtik008"
            {<point name="construct.b.page5.rtik008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik008
            
            #add-point:AFTER FIELD rtik008 name="construct.a.page5.rtik008"
            {<point name="construct.a.page5.rtik008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik008
            #add-point:ON ACTION controlp INFIELD rtik008 name="construct.c.page5.rtik008"
            {<point name="construct.c.page5.rtik008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik009
            #add-point:BEFORE FIELD rtik009 name="construct.b.page5.rtik009"
            {<point name="construct.b.page5.rtik009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik009
            
            #add-point:AFTER FIELD rtik009 name="construct.a.page5.rtik009"
            {<point name="construct.a.page5.rtik009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik009
            #add-point:ON ACTION controlp INFIELD rtik009 name="construct.c.page5.rtik009"
            {<point name="construct.c.page5.rtik009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik010
            #add-point:BEFORE FIELD rtik010 name="construct.b.page5.rtik010"
            {<point name="construct.b.page5.rtik010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik010
            
            #add-point:AFTER FIELD rtik010 name="construct.a.page5.rtik010"
            {<point name="construct.a.page5.rtik010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik010
            #add-point:ON ACTION controlp INFIELD rtik010 name="construct.c.page5.rtik010"
            {<point name="construct.c.page5.rtik010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik011
            #add-point:BEFORE FIELD rtik011 name="construct.b.page5.rtik011"
            {<point name="construct.b.page5.rtik011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik011
            
            #add-point:AFTER FIELD rtik011 name="construct.a.page5.rtik011"
            {<point name="construct.a.page5.rtik011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik011
            #add-point:ON ACTION controlp INFIELD rtik011 name="construct.c.page5.rtik011"
            {<point name="construct.c.page5.rtik011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik014
            #add-point:BEFORE FIELD rtik014 name="construct.b.page5.rtik014"
            {<point name="construct.b.page5.rtik014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik014
            
            #add-point:AFTER FIELD rtik014 name="construct.a.page5.rtik014"
            {<point name="construct.a.page5.rtik014" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik014
            #add-point:ON ACTION controlp INFIELD rtik014 name="construct.c.page5.rtik014"
            {<point name="construct.c.page5.rtik014" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik015
            #add-point:BEFORE FIELD rtik015 name="construct.b.page5.rtik015"
            {<point name="construct.b.page5.rtik015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik015
            
            #add-point:AFTER FIELD rtik015 name="construct.a.page5.rtik015"
            {<point name="construct.a.page5.rtik015" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik015
            #add-point:ON ACTION controlp INFIELD rtik015 name="construct.c.page5.rtik015"
            {<point name="construct.c.page5.rtik015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik016
            #add-point:BEFORE FIELD rtik016 name="construct.b.page5.rtik016"
            {<point name="construct.b.page5.rtik016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik016
            
            #add-point:AFTER FIELD rtik016 name="construct.a.page5.rtik016"
            {<point name="construct.a.page5.rtik016" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik016
            #add-point:ON ACTION controlp INFIELD rtik016 name="construct.c.page5.rtik016"
            {<point name="construct.c.page5.rtik016" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik017
            #add-point:BEFORE FIELD rtik017 name="construct.b.page5.rtik017"
            {<point name="construct.b.page5.rtik017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik017
            
            #add-point:AFTER FIELD rtik017 name="construct.a.page5.rtik017"
            {<point name="construct.a.page5.rtik017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik017
            #add-point:ON ACTION controlp INFIELD rtik017 name="construct.c.page5.rtik017"
            {<point name="construct.c.page5.rtik017" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik018
            #add-point:BEFORE FIELD rtik018 name="construct.b.page5.rtik018"
            {<point name="construct.b.page5.rtik018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik018
            
            #add-point:AFTER FIELD rtik018 name="construct.a.page5.rtik018"
            {<point name="construct.a.page5.rtik018" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik018
            #add-point:ON ACTION controlp INFIELD rtik018 name="construct.c.page5.rtik018"
            {<point name="construct.c.page5.rtik018" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page5.rtik019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik019
            #add-point:ON ACTION controlp INFIELD rtik019 name="construct.c.page5.rtik019"
            {<point name="construct.c.page5.rtik019" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik019
            #add-point:BEFORE FIELD rtik019 name="construct.b.page5.rtik019"
            {<point name="construct.b.page5.rtik019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik019
            
            #add-point:AFTER FIELD rtik019 name="construct.a.page5.rtik019"
            {<point name="construct.a.page5.rtik019" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik020
            #add-point:ON ACTION controlp INFIELD rtik020 name="construct.c.page5.rtik020"
            {<point name="construct.c.page5.rtik020" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik020
            #add-point:BEFORE FIELD rtik020 name="construct.b.page5.rtik020"
            {<point name="construct.b.page5.rtik020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik020
            
            #add-point:AFTER FIELD rtik020 name="construct.a.page5.rtik020"
            {<point name="construct.a.page5.rtik020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik021
            #add-point:ON ACTION controlp INFIELD rtik021 name="construct.c.page5.rtik021"
            {<point name="construct.c.page5.rtik021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik021
            #add-point:BEFORE FIELD rtik021 name="construct.b.page5.rtik021"
            {<point name="construct.b.page5.rtik021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik021
            
            #add-point:AFTER FIELD rtik021 name="construct.a.page5.rtik021"
            {<point name="construct.a.page5.rtik021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik022
            #add-point:ON ACTION controlp INFIELD rtik022 name="construct.c.page5.rtik022"
            {<point name="construct.c.page5.rtik022" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik022
            #add-point:BEFORE FIELD rtik022 name="construct.b.page5.rtik022"
            {<point name="construct.b.page5.rtik022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik022
            
            #add-point:AFTER FIELD rtik022 name="construct.a.page5.rtik022"
            {<point name="construct.a.page5.rtik022" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik023
            #add-point:BEFORE FIELD rtik023 name="construct.b.page5.rtik023"
            {<point name="construct.b.page5.rtik023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik023
            
            #add-point:AFTER FIELD rtik023 name="construct.a.page5.rtik023"
            {<point name="construct.a.page5.rtik023" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik023
            #add-point:ON ACTION controlp INFIELD rtik023 name="construct.c.page5.rtik023"
            {<point name="construct.c.page5.rtik023" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
            INITIALIZE g_wc2_table4 TO NULL
 
            INITIALIZE g_wc2_table5 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "rtil_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtim_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtic_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xrcd_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "rtie_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "rtik_t" 
                     LET g_wc2_table5 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
   IF g_wc2_table5 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION

{</section>}

{<section id="artt500.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION artt500_filter()
   #add-point:filter段define name="filter.define_customerization"
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   {<point name="filter.define"/>}
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   {<point name="filter.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON rtilsite,rtildocdt,rtildocno,rtil002
                          FROM s_browse[1].b_rtilsite,s_browse[1].b_rtildocdt,s_browse[1].b_rtildocno, 
                              s_browse[1].b_rtil002
 
         BEFORE CONSTRUCT
               DISPLAY artt500_filter_parser('rtilsite') TO s_browse[1].b_rtilsite
            DISPLAY artt500_filter_parser('rtildocdt') TO s_browse[1].b_rtildocdt
            DISPLAY artt500_filter_parser('rtildocno') TO s_browse[1].b_rtildocno
            DISPLAY artt500_filter_parser('rtil002') TO s_browse[1].b_rtil002
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL artt500_filter_show('rtilsite')
   CALL artt500_filter_show('rtildocdt')
   CALL artt500_filter_show('rtildocno')
   CALL artt500_filter_show('rtil002')
 
END FUNCTION

{</section>}

{<section id="artt500.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION artt500_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   {<point name="filter_parser.define"/>}
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION

{</section>}

{<section id="artt500.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION artt500_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = artt500_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION

{</section>}

{<section id="artt500.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION artt500_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   {<point name="query.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_rtim_d.clear()
   CALL g_rtim2_d.clear()
   CALL g_rtim3_d.clear()
   CALL g_rtim4_d.clear()
   CALL g_rtim5_d.clear()
 
   
   #add-point:query段other name="query.other"
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL artt500_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL artt500_browser_fill("")
      CALL artt500_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL artt500_filter_show('rtilsite')
   CALL artt500_filter_show('rtildocdt')
   CALL artt500_filter_show('rtildocno')
   CALL artt500_filter_show('rtil002')
   CALL artt500_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL artt500_fetch("F") 
      #顯示單身筆數
      CALL artt500_idx_chk()
   END IF
 
END FUNCTION

{</section>}

{<section id="artt500.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION artt500_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   {<point name="fetch.pre_function"/>}
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_rtil_m.rtildocno = g_browser[g_current_idx].b_rtildocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE artt500_master_referesh USING g_rtil_m.rtildocno INTO g_rtil_m.rtilsite,g_rtil_m.rtildocdt, 
       g_rtil_m.rtildocno,g_rtil_m.rtil042,g_rtil_m.rtil001,g_rtil_m.rtil002,g_rtil_m.rtil004,g_rtil_m.rtil005, 
       g_rtil_m.rtil037,g_rtil_m.rtilstus,g_rtil_m.rtil041,g_rtil_m.rtil007,g_rtil_m.rtil008,g_rtil_m.rtil009, 
       g_rtil_m.rtil010,g_rtil_m.rtil011,g_rtil_m.rtil012,g_rtil_m.rtil013,g_rtil_m.rtil006,g_rtil_m.rtil038, 
       g_rtil_m.rtil014,g_rtil_m.rtil020,g_rtil_m.rtil021,g_rtil_m.rtil015,g_rtil_m.rtil018,g_rtil_m.rtil019, 
       g_rtil_m.rtil016,g_rtil_m.rtil017,g_rtil_m.rtil022,g_rtil_m.rtil023,g_rtil_m.rtil024,g_rtil_m.rtil025, 
       g_rtil_m.rtil026,g_rtil_m.rtil027,g_rtil_m.rtil040,g_rtil_m.rtil039,g_rtil_m.rtil029,g_rtil_m.rtil030, 
       g_rtil_m.rtil031,g_rtil_m.rtil032,g_rtil_m.rtil033,g_rtil_m.rtil034,g_rtil_m.rtil035,g_rtil_m.rtil036, 
       g_rtil_m.rtilownid,g_rtil_m.rtilowndp,g_rtil_m.rtilcrtid,g_rtil_m.rtilcrtdp,g_rtil_m.rtilcrtdt, 
       g_rtil_m.rtilmodid,g_rtil_m.rtilmoddt,g_rtil_m.rtilcnfid,g_rtil_m.rtilcnfdt,g_rtil_m.rtilsite_desc, 
       g_rtil_m.rtil002_desc,g_rtil_m.rtil004_desc,g_rtil_m.rtil005_desc,g_rtil_m.rtil007_desc,g_rtil_m.rtil008_desc, 
       g_rtil_m.rtil009_desc,g_rtil_m.rtil006_desc,g_rtil_m.rtil021_desc,g_rtil_m.rtil015_desc,g_rtil_m.rtil022_desc, 
       g_rtil_m.rtil033_desc,g_rtil_m.rtil034_desc,g_rtil_m.rtil035_desc,g_rtil_m.rtilownid_desc,g_rtil_m.rtilowndp_desc, 
       g_rtil_m.rtilcrtid_desc,g_rtil_m.rtilcrtdp_desc,g_rtil_m.rtilmodid_desc,g_rtil_m.rtilcnfid_desc 

   
   #遮罩相關處理
   LET g_rtil_m_mask_o.* =  g_rtil_m.*
   CALL artt500_rtil_t_mask()
   LET g_rtil_m_mask_n.* =  g_rtil_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt500_set_act_visible()   
   CALL artt500_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_rtil_m_t.* = g_rtil_m.*
   LET g_rtil_m_o.* = g_rtil_m.*
   
   LET g_data_owner = g_rtil_m.rtilownid      
   LET g_data_dept  = g_rtil_m.rtilowndp
   
   #重新顯示   
   CALL artt500_show()
 
   
 
END FUNCTION

{</section>}

{<section id="artt500.insert" >}
#+ 資料新增
PRIVATE FUNCTION artt500_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   {<point name="insert.pre_function"/>}
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_rtim_d.clear()   
   CALL g_rtim2_d.clear()  
   CALL g_rtim3_d.clear()  
   CALL g_rtim4_d.clear()  
   CALL g_rtim5_d.clear()  
 
 
   INITIALIZE g_rtil_m.* TO NULL             #DEFAULT 設定
   
   LET g_rtildocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rtil_m.rtilownid = g_user
      LET g_rtil_m.rtilowndp = g_dept
      LET g_rtil_m.rtilcrtid = g_user
      LET g_rtil_m.rtilcrtdp = g_dept 
      LET g_rtil_m.rtilcrtdt = cl_get_current()
      LET g_rtil_m.rtilmodid = g_user
      LET g_rtil_m.rtilmoddt = cl_get_current()
      LET g_rtil_m.rtilstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_rtil_m.rtil042 = "1"
      LET g_rtil_m.rtil037 = "N"
      LET g_rtil_m.rtilstus = "N"
      LET g_rtil_m.rtil010 = "100"
      LET g_rtil_m.rtil013 = "0"
      LET g_rtil_m.rtil014 = "1"
      LET g_rtil_m.rtil020 = "1"
      LET g_rtil_m.rtil027 = "N"
      LET g_rtil_m.rtil040 = "100"
      LET g_rtil_m.rtil039 = "0"
      LET g_rtil_m.rtil029 = "1"
      LET g_rtil_m.rtil036 = "1"
      LET g_rtil_m.isaf009 = "N"
 
  
      #add-point:單頭預設值 name="insert.default"
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_rtil_m_t.* = g_rtil_m.*
      LET g_rtil_m_o.* = g_rtil_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtil_m.rtilstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL artt500_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_rtil_m.* TO NULL
         INITIALIZE g_rtim_d TO NULL
         INITIALIZE g_rtim2_d TO NULL
         INITIALIZE g_rtim3_d TO NULL
         INITIALIZE g_rtim4_d TO NULL
         INITIALIZE g_rtim5_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL artt500_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_rtim_d.clear()
      #CALL g_rtim2_d.clear()
      #CALL g_rtim3_d.clear()
      #CALL g_rtim4_d.clear()
      #CALL g_rtim5_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt500_set_act_visible()   
   CALL artt500_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtildocno_t = g_rtil_m.rtildocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtilent = " ||g_enterprise|| " AND",
                      " rtildocno = '", g_rtil_m.rtildocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artt500_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE artt500_cl
   
   CALL artt500_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE artt500_master_referesh USING g_rtil_m.rtildocno INTO g_rtil_m.rtilsite,g_rtil_m.rtildocdt, 
       g_rtil_m.rtildocno,g_rtil_m.rtil042,g_rtil_m.rtil001,g_rtil_m.rtil002,g_rtil_m.rtil004,g_rtil_m.rtil005, 
       g_rtil_m.rtil037,g_rtil_m.rtilstus,g_rtil_m.rtil041,g_rtil_m.rtil007,g_rtil_m.rtil008,g_rtil_m.rtil009, 
       g_rtil_m.rtil010,g_rtil_m.rtil011,g_rtil_m.rtil012,g_rtil_m.rtil013,g_rtil_m.rtil006,g_rtil_m.rtil038, 
       g_rtil_m.rtil014,g_rtil_m.rtil020,g_rtil_m.rtil021,g_rtil_m.rtil015,g_rtil_m.rtil018,g_rtil_m.rtil019, 
       g_rtil_m.rtil016,g_rtil_m.rtil017,g_rtil_m.rtil022,g_rtil_m.rtil023,g_rtil_m.rtil024,g_rtil_m.rtil025, 
       g_rtil_m.rtil026,g_rtil_m.rtil027,g_rtil_m.rtil040,g_rtil_m.rtil039,g_rtil_m.rtil029,g_rtil_m.rtil030, 
       g_rtil_m.rtil031,g_rtil_m.rtil032,g_rtil_m.rtil033,g_rtil_m.rtil034,g_rtil_m.rtil035,g_rtil_m.rtil036, 
       g_rtil_m.rtilownid,g_rtil_m.rtilowndp,g_rtil_m.rtilcrtid,g_rtil_m.rtilcrtdp,g_rtil_m.rtilcrtdt, 
       g_rtil_m.rtilmodid,g_rtil_m.rtilmoddt,g_rtil_m.rtilcnfid,g_rtil_m.rtilcnfdt,g_rtil_m.rtilsite_desc, 
       g_rtil_m.rtil002_desc,g_rtil_m.rtil004_desc,g_rtil_m.rtil005_desc,g_rtil_m.rtil007_desc,g_rtil_m.rtil008_desc, 
       g_rtil_m.rtil009_desc,g_rtil_m.rtil006_desc,g_rtil_m.rtil021_desc,g_rtil_m.rtil015_desc,g_rtil_m.rtil022_desc, 
       g_rtil_m.rtil033_desc,g_rtil_m.rtil034_desc,g_rtil_m.rtil035_desc,g_rtil_m.rtilownid_desc,g_rtil_m.rtilowndp_desc, 
       g_rtil_m.rtilcrtid_desc,g_rtil_m.rtilcrtdp_desc,g_rtil_m.rtilmodid_desc,g_rtil_m.rtilcnfid_desc 

   
   
   #遮罩相關處理
   LET g_rtil_m_mask_o.* =  g_rtil_m.*
   CALL artt500_rtil_t_mask()
   LET g_rtil_m_mask_n.* =  g_rtil_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtil_m.rtilsite,g_rtil_m.rtilsite_desc,g_rtil_m.rtildocdt,g_rtil_m.rtildocno,g_rtil_m.rtil042, 
       g_rtil_m.rtil001,g_rtil_m.rtil001_desc,g_rtil_m.rtil002,g_rtil_m.rtil002_desc,g_rtil_m.rtil004, 
       g_rtil_m.rtil004_desc,g_rtil_m.rtil005,g_rtil_m.rtil005_desc,g_rtil_m.rtil037,g_rtil_m.rtilstus, 
       g_rtil_m.rtil041,g_rtil_m.rtil007,g_rtil_m.rtil007_desc,g_rtil_m.rtil008,g_rtil_m.rtil008_desc, 
       g_rtil_m.rtil009,g_rtil_m.rtil009_desc,g_rtil_m.rtil010,g_rtil_m.rtil011,g_rtil_m.rtil012,g_rtil_m.rtil013, 
       g_rtil_m.rtil006,g_rtil_m.rtil006_desc,g_rtil_m.rtil038,g_rtil_m.rtil014,g_rtil_m.rtil020,g_rtil_m.rtil021, 
       g_rtil_m.rtil021_desc,g_rtil_m.rtil015,g_rtil_m.rtil015_desc,g_rtil_m.rtil018,g_rtil_m.rtil019, 
       g_rtil_m.rtil016,g_rtil_m.rtil017,g_rtil_m.rtil022,g_rtil_m.rtil022_desc,g_rtil_m.rtil023,g_rtil_m.rtil024, 
       g_rtil_m.rtil025,g_rtil_m.rtil026,g_rtil_m.rtil027,g_rtil_m.rtil040,g_rtil_m.rtil039,g_rtil_m.rtil029, 
       g_rtil_m.rtil030,g_rtil_m.rtil031,g_rtil_m.rtil032,g_rtil_m.rtil033,g_rtil_m.rtil033_desc,g_rtil_m.rtil034, 
       g_rtil_m.rtil034_desc,g_rtil_m.rtil035,g_rtil_m.rtil035_desc,g_rtil_m.rtil036,g_rtil_m.isaf009, 
       g_rtil_m.isaf010,g_rtil_m.isaf044,g_rtil_m.isaf202,g_rtil_m.isaf203,g_rtil_m.isaf204,g_rtil_m.isaf201, 
       g_rtil_m.isaf207,g_rtil_m.rtilownid,g_rtil_m.rtilownid_desc,g_rtil_m.rtilowndp,g_rtil_m.rtilowndp_desc, 
       g_rtil_m.rtilcrtid,g_rtil_m.rtilcrtid_desc,g_rtil_m.rtilcrtdp,g_rtil_m.rtilcrtdp_desc,g_rtil_m.rtilcrtdt, 
       g_rtil_m.rtilmodid,g_rtil_m.rtilmodid_desc,g_rtil_m.rtilmoddt,g_rtil_m.rtilcnfid,g_rtil_m.rtilcnfid_desc, 
       g_rtil_m.rtilcnfdt,g_rtil_m.snum,g_rtil_m.amount,g_rtil_m.amount2,g_rtil_m.amount3
   
   #add-point:新增結束後 name="insert.after"
   {<point name="insert.after"/>}
   #end add-point 
   
   LET g_data_owner = g_rtil_m.rtilownid      
   LET g_data_dept  = g_rtil_m.rtilowndp
   
   #功能已完成,通報訊息中心
   CALL artt500_msgcentre_notify('insert')
   
END FUNCTION

{</section>}

{<section id="artt500.modify" >}
#+ 資料修改
PRIVATE FUNCTION artt500_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
   DEFINE l_wc2_table5   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   {<point name="modify.pre_function"/>}
   #end add-point
   
   #保存單頭舊值
   LET g_rtil_m_t.* = g_rtil_m.*
   LET g_rtil_m_o.* = g_rtil_m.*
   
   IF g_rtil_m.rtildocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_rtildocno_t = g_rtil_m.rtildocno
 
   CALL s_transaction_begin()
   
   OPEN artt500_cl USING g_enterprise,g_rtil_m.rtildocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt500_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE artt500_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artt500_master_referesh USING g_rtil_m.rtildocno INTO g_rtil_m.rtilsite,g_rtil_m.rtildocdt, 
       g_rtil_m.rtildocno,g_rtil_m.rtil042,g_rtil_m.rtil001,g_rtil_m.rtil002,g_rtil_m.rtil004,g_rtil_m.rtil005, 
       g_rtil_m.rtil037,g_rtil_m.rtilstus,g_rtil_m.rtil041,g_rtil_m.rtil007,g_rtil_m.rtil008,g_rtil_m.rtil009, 
       g_rtil_m.rtil010,g_rtil_m.rtil011,g_rtil_m.rtil012,g_rtil_m.rtil013,g_rtil_m.rtil006,g_rtil_m.rtil038, 
       g_rtil_m.rtil014,g_rtil_m.rtil020,g_rtil_m.rtil021,g_rtil_m.rtil015,g_rtil_m.rtil018,g_rtil_m.rtil019, 
       g_rtil_m.rtil016,g_rtil_m.rtil017,g_rtil_m.rtil022,g_rtil_m.rtil023,g_rtil_m.rtil024,g_rtil_m.rtil025, 
       g_rtil_m.rtil026,g_rtil_m.rtil027,g_rtil_m.rtil040,g_rtil_m.rtil039,g_rtil_m.rtil029,g_rtil_m.rtil030, 
       g_rtil_m.rtil031,g_rtil_m.rtil032,g_rtil_m.rtil033,g_rtil_m.rtil034,g_rtil_m.rtil035,g_rtil_m.rtil036, 
       g_rtil_m.rtilownid,g_rtil_m.rtilowndp,g_rtil_m.rtilcrtid,g_rtil_m.rtilcrtdp,g_rtil_m.rtilcrtdt, 
       g_rtil_m.rtilmodid,g_rtil_m.rtilmoddt,g_rtil_m.rtilcnfid,g_rtil_m.rtilcnfdt,g_rtil_m.rtilsite_desc, 
       g_rtil_m.rtil002_desc,g_rtil_m.rtil004_desc,g_rtil_m.rtil005_desc,g_rtil_m.rtil007_desc,g_rtil_m.rtil008_desc, 
       g_rtil_m.rtil009_desc,g_rtil_m.rtil006_desc,g_rtil_m.rtil021_desc,g_rtil_m.rtil015_desc,g_rtil_m.rtil022_desc, 
       g_rtil_m.rtil033_desc,g_rtil_m.rtil034_desc,g_rtil_m.rtil035_desc,g_rtil_m.rtilownid_desc,g_rtil_m.rtilowndp_desc, 
       g_rtil_m.rtilcrtid_desc,g_rtil_m.rtilcrtdp_desc,g_rtil_m.rtilmodid_desc,g_rtil_m.rtilcnfid_desc 

   
   #檢查是否允許此動作
   IF NOT artt500_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtil_m_mask_o.* =  g_rtil_m.*
   CALL artt500_rtil_t_mask()
   LET g_rtil_m_mask_n.* =  g_rtil_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
   #LET l_wc2_table5 = g_wc2_table5
   #LET l_wc2_table5 = " 1=1"
 
 
 
   
   CALL artt500_show()
   #add-point:modify段show之後 name="modify.after_show"
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
   #LET  g_wc2_table5 = l_wc2_table5 
 
 
 
    
   WHILE TRUE
      LET g_rtildocno_t = g_rtil_m.rtildocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_rtil_m.rtilmodid = g_user 
LET g_rtil_m.rtilmoddt = cl_get_current()
LET g_rtil_m.rtilmodid_desc = cl_get_username(g_rtil_m.rtilmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL artt500_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE rtil_t SET (rtilmodid,rtilmoddt) = (g_rtil_m.rtilmodid,g_rtil_m.rtilmoddt)
          WHERE rtilent = g_enterprise AND rtildocno = g_rtildocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_rtil_m.* = g_rtil_m_t.*
            CALL artt500_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_rtil_m.rtildocno != g_rtil_m_t.rtildocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE rtim_t SET rtimdocno = g_rtil_m.rtildocno
 
          WHERE rtiment = g_enterprise AND rtimdocno = g_rtil_m_t.rtildocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtim_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtim_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE rtic_t
            SET rticdocno = g_rtil_m.rtildocno
 
          WHERE rticent = g_enterprise AND
                rticdocno = g_rtildocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtic_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update3"
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         
         UPDATE xrcd_t
            SET xrcddocno = g_rtil_m.rtildocno
 
          WHERE xrcdent = g_enterprise AND
                xrcddocno = g_rtildocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update3"
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xrcd_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update3"
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update4"
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         
         UPDATE rtie_t
            SET rtiedocno = g_rtil_m.rtildocno
 
          WHERE rtieent = g_enterprise AND
                rtiedocno = g_rtildocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update4"
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtie_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update4"
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update5"
         {<point name="modify.body.b_fk_update5" mark="Y"/>}
         #end add-point
         
         UPDATE rtik_t
            SET rtikdocno = g_rtil_m.rtildocno
 
          WHERE rtikent = g_enterprise AND
                rtikdocno = g_rtildocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update5"
         {<point name="modify.body.m_fk_update5"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtik_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtik_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update5"
         {<point name="modify.body.a_fk_update5"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt500_set_act_visible()   
   CALL artt500_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " rtilent = " ||g_enterprise|| " AND",
                      " rtildocno = '", g_rtil_m.rtildocno, "' "
 
   #填到對應位置
   CALL artt500_browser_fill("")
 
   CLOSE artt500_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artt500_msgcentre_notify('modify')
 
END FUNCTION 

{</section>}

{<section id="artt500.input" >}
#+ 資料輸入
PRIVATE FUNCTION artt500_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   {<point name="input.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   {<point name="input.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   {<point name="input.pre_function"/>}
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtil_m.rtilsite,g_rtil_m.rtilsite_desc,g_rtil_m.rtildocdt,g_rtil_m.rtildocno,g_rtil_m.rtil042, 
       g_rtil_m.rtil001,g_rtil_m.rtil001_desc,g_rtil_m.rtil002,g_rtil_m.rtil002_desc,g_rtil_m.rtil004, 
       g_rtil_m.rtil004_desc,g_rtil_m.rtil005,g_rtil_m.rtil005_desc,g_rtil_m.rtil037,g_rtil_m.rtilstus, 
       g_rtil_m.rtil041,g_rtil_m.rtil007,g_rtil_m.rtil007_desc,g_rtil_m.rtil008,g_rtil_m.rtil008_desc, 
       g_rtil_m.rtil009,g_rtil_m.rtil009_desc,g_rtil_m.rtil010,g_rtil_m.rtil011,g_rtil_m.rtil012,g_rtil_m.rtil013, 
       g_rtil_m.rtil006,g_rtil_m.rtil006_desc,g_rtil_m.rtil038,g_rtil_m.rtil014,g_rtil_m.rtil020,g_rtil_m.rtil021, 
       g_rtil_m.rtil021_desc,g_rtil_m.rtil015,g_rtil_m.rtil015_desc,g_rtil_m.rtil018,g_rtil_m.rtil019, 
       g_rtil_m.rtil016,g_rtil_m.rtil017,g_rtil_m.rtil022,g_rtil_m.rtil022_desc,g_rtil_m.rtil023,g_rtil_m.rtil024, 
       g_rtil_m.rtil025,g_rtil_m.rtil026,g_rtil_m.rtil027,g_rtil_m.rtil040,g_rtil_m.rtil039,g_rtil_m.rtil029, 
       g_rtil_m.rtil030,g_rtil_m.rtil031,g_rtil_m.rtil032,g_rtil_m.rtil033,g_rtil_m.rtil033_desc,g_rtil_m.rtil034, 
       g_rtil_m.rtil034_desc,g_rtil_m.rtil035,g_rtil_m.rtil035_desc,g_rtil_m.rtil036,g_rtil_m.isaf009, 
       g_rtil_m.isaf010,g_rtil_m.isaf044,g_rtil_m.isaf202,g_rtil_m.isaf203,g_rtil_m.isaf204,g_rtil_m.isaf201, 
       g_rtil_m.isaf207,g_rtil_m.rtilownid,g_rtil_m.rtilownid_desc,g_rtil_m.rtilowndp,g_rtil_m.rtilowndp_desc, 
       g_rtil_m.rtilcrtid,g_rtil_m.rtilcrtid_desc,g_rtil_m.rtilcrtdp,g_rtil_m.rtilcrtdp_desc,g_rtil_m.rtilcrtdt, 
       g_rtil_m.rtilmodid,g_rtil_m.rtilmodid_desc,g_rtil_m.rtilmoddt,g_rtil_m.rtilcnfid,g_rtil_m.rtilcnfid_desc, 
       g_rtil_m.rtilcnfdt,g_rtil_m.snum,g_rtil_m.amount,g_rtil_m.amount2,g_rtil_m.amount3
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT rtimsite,rtimunit,rtimorga,rtimseq,rtim003,rtim004,rtim005,rtim006,rtim008, 
       rtim009,rtim010,rtim012,rtim013,rtim014,rtim015,rtim016,rtim018,rtim017,rtim019,rtim020,rtim021, 
       rtim029,rtim022,rtim024,rtim025,rtim026,rtim027,rtim028 FROM rtim_t WHERE rtiment=? AND rtimdocno=?  
       AND rtimseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt500_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rticseq,rticseq1,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007, 
       rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic020  
       FROM rtic_t WHERE rticent=? AND rticdocno=? AND rticseq=? AND rticseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt500_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql3"
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xrcd007,xrcdld,xrcdseq,xrcdseq2,xrcd002,xrcd003,xrcd006,xrcd004,xrcd104  
       FROM xrcd_t WHERE xrcdent=? AND xrcddocno=? AND xrcdld=? AND xrcdseq=? AND xrcdseq2=? AND xrcd007=?  
       FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql3"
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt500_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql4"
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rtieseq,rtieseq1,rtie001,rtie002,rtie006 FROM rtie_t WHERE rtieent=? AND  
       rtiedocno=? AND rtieseq=? AND rtieseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql4"
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt500_bcl4 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql5"
   {<point name="input.define_sql5" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rtiksite,rtikunit,rtikorg,rtikseq,rtik001,rtik002,rtik003,rtik004,rtik005, 
       rtik006,rtik007,rtik013,rtik012,rtik008,rtik009,rtik010,rtik011,rtik014,rtik015,rtik016,rtik017, 
       rtik018,rtik019,rtik020,rtik021,rtik022,rtik023 FROM rtik_t WHERE rtikent=? AND rtikdocno=? AND  
       rtikseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql5"
   {<point name="input.after_define_sql5"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt500_bcl5 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL artt500_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL artt500_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_rtil_m.rtilsite,g_rtil_m.rtildocdt,g_rtil_m.rtildocno,g_rtil_m.rtil042,g_rtil_m.rtil001, 
       g_rtil_m.rtil002,g_rtil_m.rtil004,g_rtil_m.rtil005,g_rtil_m.rtilstus,g_rtil_m.rtil041,g_rtil_m.rtil007, 
       g_rtil_m.rtil008,g_rtil_m.rtil009,g_rtil_m.rtil006,g_rtil_m.rtil038,g_rtil_m.rtil014,g_rtil_m.rtil020, 
       g_rtil_m.rtil021,g_rtil_m.rtil015,g_rtil_m.rtil018,g_rtil_m.rtil019,g_rtil_m.rtil016,g_rtil_m.rtil017, 
       g_rtil_m.rtil022,g_rtil_m.rtil023,g_rtil_m.rtil024,g_rtil_m.rtil025,g_rtil_m.rtil026,g_rtil_m.rtil027, 
       g_rtil_m.rtil040,g_rtil_m.rtil039,g_rtil_m.rtil029,g_rtil_m.rtil030,g_rtil_m.rtil031,g_rtil_m.rtil032, 
       g_rtil_m.rtil033,g_rtil_m.rtil034,g_rtil_m.rtil035
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

{</section>}

{<section id="artt500.input.head" >}
      #單頭段
      INPUT BY NAME g_rtil_m.rtilsite,g_rtil_m.rtildocdt,g_rtil_m.rtildocno,g_rtil_m.rtil042,g_rtil_m.rtil001, 
          g_rtil_m.rtil002,g_rtil_m.rtil004,g_rtil_m.rtil005,g_rtil_m.rtilstus,g_rtil_m.rtil041,g_rtil_m.rtil007, 
          g_rtil_m.rtil008,g_rtil_m.rtil009,g_rtil_m.rtil006,g_rtil_m.rtil038,g_rtil_m.rtil014,g_rtil_m.rtil020, 
          g_rtil_m.rtil021,g_rtil_m.rtil015,g_rtil_m.rtil018,g_rtil_m.rtil019,g_rtil_m.rtil016,g_rtil_m.rtil017, 
          g_rtil_m.rtil022,g_rtil_m.rtil023,g_rtil_m.rtil024,g_rtil_m.rtil025,g_rtil_m.rtil026,g_rtil_m.rtil027, 
          g_rtil_m.rtil040,g_rtil_m.rtil039,g_rtil_m.rtil029,g_rtil_m.rtil030,g_rtil_m.rtil031,g_rtil_m.rtil032, 
          g_rtil_m.rtil033,g_rtil_m.rtil034,g_rtil_m.rtil035 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN artt500_cl USING g_enterprise,g_rtil_m.rtildocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt500_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE artt500_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL artt500_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL artt500_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtilsite
            
            #add-point:AFTER FIELD rtilsite name="input.a.rtilsite"
            {<point name="input.a.rtilsite" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtilsite
            #add-point:BEFORE FIELD rtilsite name="input.b.rtilsite"
            {<point name="input.b.rtilsite" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtilsite
            #add-point:ON CHANGE rtilsite name="input.g.rtilsite"
            {<point name="input.g.rtilsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtildocdt
            #add-point:BEFORE FIELD rtildocdt name="input.b.rtildocdt"
            {<point name="input.b.rtildocdt" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtildocdt
            
            #add-point:AFTER FIELD rtildocdt name="input.a.rtildocdt"
            {<point name="input.a.rtildocdt" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtildocdt
            #add-point:ON CHANGE rtildocdt name="input.g.rtildocdt"
            {<point name="input.g.rtildocdt" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtildocno
            #add-point:BEFORE FIELD rtildocno name="input.b.rtildocno"
            {<point name="input.b.rtildocno" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtildocno
            
            #add-point:AFTER FIELD rtildocno name="input.a.rtildocno"
            {<point name="input.a.rtildocno" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtildocno
            #add-point:ON CHANGE rtildocno name="input.g.rtildocno"
            {<point name="input.g.rtildocno" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil042
            #add-point:BEFORE FIELD rtil042 name="input.b.rtil042"
            {<point name="input.b.rtil042" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil042
            
            #add-point:AFTER FIELD rtil042 name="input.a.rtil042"
            {<point name="input.a.rtil042" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil042
            #add-point:ON CHANGE rtil042 name="input.g.rtil042"
            {<point name="input.g.rtil042" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil001
            
            #add-point:AFTER FIELD rtil001 name="input.a.rtil001"
            {<point name="input.a.rtil001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil001
            #add-point:BEFORE FIELD rtil001 name="input.b.rtil001"
            {<point name="input.b.rtil001" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil001
            #add-point:ON CHANGE rtil001 name="input.g.rtil001"
            {<point name="input.g.rtil001" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil002
            
            #add-point:AFTER FIELD rtil002 name="input.a.rtil002"
            {<point name="input.a.rtil002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil002
            #add-point:BEFORE FIELD rtil002 name="input.b.rtil002"
            {<point name="input.b.rtil002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil002
            #add-point:ON CHANGE rtil002 name="input.g.rtil002"
            {<point name="input.g.rtil002" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil004
            
            #add-point:AFTER FIELD rtil004 name="input.a.rtil004"
            {<point name="input.a.rtil004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil004
            #add-point:BEFORE FIELD rtil004 name="input.b.rtil004"
            {<point name="input.b.rtil004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil004
            #add-point:ON CHANGE rtil004 name="input.g.rtil004"
            {<point name="input.g.rtil004" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil005
            
            #add-point:AFTER FIELD rtil005 name="input.a.rtil005"
            {<point name="input.a.rtil005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil005
            #add-point:BEFORE FIELD rtil005 name="input.b.rtil005"
            {<point name="input.b.rtil005" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil005
            #add-point:ON CHANGE rtil005 name="input.g.rtil005"
            {<point name="input.g.rtil005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtilstus
            #add-point:BEFORE FIELD rtilstus name="input.b.rtilstus"
            {<point name="input.b.rtilstus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtilstus
            
            #add-point:AFTER FIELD rtilstus name="input.a.rtilstus"
            {<point name="input.a.rtilstus" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtilstus
            #add-point:ON CHANGE rtilstus name="input.g.rtilstus"
            {<point name="input.g.rtilstus" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil041
            #add-point:BEFORE FIELD rtil041 name="input.b.rtil041"
            {<point name="input.b.rtil041" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil041
            
            #add-point:AFTER FIELD rtil041 name="input.a.rtil041"
            {<point name="input.a.rtil041" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil041
            #add-point:ON CHANGE rtil041 name="input.g.rtil041"
            {<point name="input.g.rtil041" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil007
            
            #add-point:AFTER FIELD rtil007 name="input.a.rtil007"
            {<point name="input.a.rtil007" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil007
            #add-point:BEFORE FIELD rtil007 name="input.b.rtil007"
            {<point name="input.b.rtil007" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil007
            #add-point:ON CHANGE rtil007 name="input.g.rtil007"
            {<point name="input.g.rtil007" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil008
            
            #add-point:AFTER FIELD rtil008 name="input.a.rtil008"
            {<point name="input.a.rtil008" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil008
            #add-point:BEFORE FIELD rtil008 name="input.b.rtil008"
            {<point name="input.b.rtil008" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil008
            #add-point:ON CHANGE rtil008 name="input.g.rtil008"
            {<point name="input.g.rtil008" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil009
            
            #add-point:AFTER FIELD rtil009 name="input.a.rtil009"
            {<point name="input.a.rtil009" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil009
            #add-point:BEFORE FIELD rtil009 name="input.b.rtil009"
            {<point name="input.b.rtil009" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil009
            #add-point:ON CHANGE rtil009 name="input.g.rtil009"
            {<point name="input.g.rtil009" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil006
            
            #add-point:AFTER FIELD rtil006 name="input.a.rtil006"
            {<point name="input.a.rtil006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil006
            #add-point:BEFORE FIELD rtil006 name="input.b.rtil006"
            {<point name="input.b.rtil006" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil006
            #add-point:ON CHANGE rtil006 name="input.g.rtil006"
            {<point name="input.g.rtil006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil038
            #add-point:BEFORE FIELD rtil038 name="input.b.rtil038"
            {<point name="input.b.rtil038" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil038
            
            #add-point:AFTER FIELD rtil038 name="input.a.rtil038"
            {<point name="input.a.rtil038" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil038
            #add-point:ON CHANGE rtil038 name="input.g.rtil038"
            {<point name="input.g.rtil038" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil014
            #add-point:BEFORE FIELD rtil014 name="input.b.rtil014"
            {<point name="input.b.rtil014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil014
            
            #add-point:AFTER FIELD rtil014 name="input.a.rtil014"
            {<point name="input.a.rtil014" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil014
            #add-point:ON CHANGE rtil014 name="input.g.rtil014"
            {<point name="input.g.rtil014" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil020
            #add-point:BEFORE FIELD rtil020 name="input.b.rtil020"
            {<point name="input.b.rtil020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil020
            
            #add-point:AFTER FIELD rtil020 name="input.a.rtil020"
            {<point name="input.a.rtil020" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil020
            #add-point:ON CHANGE rtil020 name="input.g.rtil020"
            {<point name="input.g.rtil020" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil021
            
            #add-point:AFTER FIELD rtil021 name="input.a.rtil021"
            {<point name="input.a.rtil021" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil021
            #add-point:BEFORE FIELD rtil021 name="input.b.rtil021"
            {<point name="input.b.rtil021" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil021
            #add-point:ON CHANGE rtil021 name="input.g.rtil021"
            {<point name="input.g.rtil021" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil015
            
            #add-point:AFTER FIELD rtil015 name="input.a.rtil015"
            {<point name="input.a.rtil015" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil015
            #add-point:BEFORE FIELD rtil015 name="input.b.rtil015"
            {<point name="input.b.rtil015" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil015
            #add-point:ON CHANGE rtil015 name="input.g.rtil015"
            {<point name="input.g.rtil015" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil018
            #add-point:BEFORE FIELD rtil018 name="input.b.rtil018"
            {<point name="input.b.rtil018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil018
            
            #add-point:AFTER FIELD rtil018 name="input.a.rtil018"
            {<point name="input.a.rtil018" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil018
            #add-point:ON CHANGE rtil018 name="input.g.rtil018"
            {<point name="input.g.rtil018" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil019
            #add-point:BEFORE FIELD rtil019 name="input.b.rtil019"
            {<point name="input.b.rtil019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil019
            
            #add-point:AFTER FIELD rtil019 name="input.a.rtil019"
            {<point name="input.a.rtil019" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil019
            #add-point:ON CHANGE rtil019 name="input.g.rtil019"
            {<point name="input.g.rtil019" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil016
            #add-point:BEFORE FIELD rtil016 name="input.b.rtil016"
            {<point name="input.b.rtil016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil016
            
            #add-point:AFTER FIELD rtil016 name="input.a.rtil016"
            {<point name="input.a.rtil016" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil016
            #add-point:ON CHANGE rtil016 name="input.g.rtil016"
            {<point name="input.g.rtil016" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil017
            #add-point:BEFORE FIELD rtil017 name="input.b.rtil017"
            {<point name="input.b.rtil017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil017
            
            #add-point:AFTER FIELD rtil017 name="input.a.rtil017"
            {<point name="input.a.rtil017" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil017
            #add-point:ON CHANGE rtil017 name="input.g.rtil017"
            {<point name="input.g.rtil017" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil022
            
            #add-point:AFTER FIELD rtil022 name="input.a.rtil022"
            {<point name="input.a.rtil022" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil022
            #add-point:BEFORE FIELD rtil022 name="input.b.rtil022"
            {<point name="input.b.rtil022" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil022
            #add-point:ON CHANGE rtil022 name="input.g.rtil022"
            {<point name="input.g.rtil022" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil023
            #add-point:BEFORE FIELD rtil023 name="input.b.rtil023"
            {<point name="input.b.rtil023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil023
            
            #add-point:AFTER FIELD rtil023 name="input.a.rtil023"
            {<point name="input.a.rtil023" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil023
            #add-point:ON CHANGE rtil023 name="input.g.rtil023"
            {<point name="input.g.rtil023" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil024
            #add-point:BEFORE FIELD rtil024 name="input.b.rtil024"
            {<point name="input.b.rtil024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil024
            
            #add-point:AFTER FIELD rtil024 name="input.a.rtil024"
            {<point name="input.a.rtil024" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil024
            #add-point:ON CHANGE rtil024 name="input.g.rtil024"
            {<point name="input.g.rtil024" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil025
            #add-point:BEFORE FIELD rtil025 name="input.b.rtil025"
            {<point name="input.b.rtil025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil025
            
            #add-point:AFTER FIELD rtil025 name="input.a.rtil025"
            {<point name="input.a.rtil025" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil025
            #add-point:ON CHANGE rtil025 name="input.g.rtil025"
            {<point name="input.g.rtil025" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil026
            #add-point:BEFORE FIELD rtil026 name="input.b.rtil026"
            {<point name="input.b.rtil026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil026
            
            #add-point:AFTER FIELD rtil026 name="input.a.rtil026"
            {<point name="input.a.rtil026" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil026
            #add-point:ON CHANGE rtil026 name="input.g.rtil026"
            {<point name="input.g.rtil026" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil027
            #add-point:BEFORE FIELD rtil027 name="input.b.rtil027"
            {<point name="input.b.rtil027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil027
            
            #add-point:AFTER FIELD rtil027 name="input.a.rtil027"
            {<point name="input.a.rtil027" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil027
            #add-point:ON CHANGE rtil027 name="input.g.rtil027"
            {<point name="input.g.rtil027" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil040
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtil_m.rtil040,"0","1","100","1","azz-00087",1) THEN
               NEXT FIELD rtil040
            END IF 
 
 
 
            #add-point:AFTER FIELD rtil040 name="input.a.rtil040"
            {<point name="input.a.rtil040" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil040
            #add-point:BEFORE FIELD rtil040 name="input.b.rtil040"
            {<point name="input.b.rtil040" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil040
            #add-point:ON CHANGE rtil040 name="input.g.rtil040"
            {<point name="input.g.rtil040" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil039
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtil_m.rtil039,"0","1","","","azz-00079",1) THEN
               NEXT FIELD rtil039
            END IF 
 
 
 
            #add-point:AFTER FIELD rtil039 name="input.a.rtil039"
            {<point name="input.a.rtil039" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil039
            #add-point:BEFORE FIELD rtil039 name="input.b.rtil039"
            {<point name="input.b.rtil039" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil039
            #add-point:ON CHANGE rtil039 name="input.g.rtil039"
            {<point name="input.g.rtil039" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil029
            #add-point:BEFORE FIELD rtil029 name="input.b.rtil029"
            {<point name="input.b.rtil029" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil029
            
            #add-point:AFTER FIELD rtil029 name="input.a.rtil029"
            {<point name="input.a.rtil029" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil029
            #add-point:ON CHANGE rtil029 name="input.g.rtil029"
            {<point name="input.g.rtil029" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil030
            #add-point:BEFORE FIELD rtil030 name="input.b.rtil030"
            {<point name="input.b.rtil030" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil030
            
            #add-point:AFTER FIELD rtil030 name="input.a.rtil030"
            {<point name="input.a.rtil030" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil030
            #add-point:ON CHANGE rtil030 name="input.g.rtil030"
            {<point name="input.g.rtil030" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil031
            #add-point:BEFORE FIELD rtil031 name="input.b.rtil031"
            {<point name="input.b.rtil031" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil031
            
            #add-point:AFTER FIELD rtil031 name="input.a.rtil031"
            {<point name="input.a.rtil031" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil031
            #add-point:ON CHANGE rtil031 name="input.g.rtil031"
            {<point name="input.g.rtil031" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil032
            #add-point:BEFORE FIELD rtil032 name="input.b.rtil032"
            {<point name="input.b.rtil032" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil032
            
            #add-point:AFTER FIELD rtil032 name="input.a.rtil032"
            {<point name="input.a.rtil032" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil032
            #add-point:ON CHANGE rtil032 name="input.g.rtil032"
            {<point name="input.g.rtil032" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil033
            
            #add-point:AFTER FIELD rtil033 name="input.a.rtil033"
            {<point name="input.a.rtil033" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil033
            #add-point:BEFORE FIELD rtil033 name="input.b.rtil033"
            {<point name="input.b.rtil033" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil033
            #add-point:ON CHANGE rtil033 name="input.g.rtil033"
            {<point name="input.g.rtil033" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil034
            
            #add-point:AFTER FIELD rtil034 name="input.a.rtil034"
            {<point name="input.a.rtil034" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil034
            #add-point:BEFORE FIELD rtil034 name="input.b.rtil034"
            {<point name="input.b.rtil034" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil034
            #add-point:ON CHANGE rtil034 name="input.g.rtil034"
            {<point name="input.g.rtil034" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtil035
            
            #add-point:AFTER FIELD rtil035 name="input.a.rtil035"
            {<point name="input.a.rtil035" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtil035
            #add-point:BEFORE FIELD rtil035 name="input.b.rtil035"
            {<point name="input.b.rtil035" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtil035
            #add-point:ON CHANGE rtil035 name="input.g.rtil035"
            {<point name="input.g.rtil035" />}
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.rtilsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtilsite
            #add-point:ON ACTION controlp INFIELD rtilsite name="input.c.rtilsite"
            {<point name="input.c.rtilsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtildocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtildocdt
            #add-point:ON ACTION controlp INFIELD rtildocdt name="input.c.rtildocdt"
            {<point name="input.c.rtildocdt" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtildocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtildocno
            #add-point:ON ACTION controlp INFIELD rtildocno name="input.c.rtildocno"
            {<point name="input.c.rtildocno" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil042
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil042
            #add-point:ON ACTION controlp INFIELD rtil042 name="input.c.rtil042"
            {<point name="input.c.rtil042" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil001
            #add-point:ON ACTION controlp INFIELD rtil001 name="input.c.rtil001"
            {<point name="input.c.rtil001" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil002
            #add-point:ON ACTION controlp INFIELD rtil002 name="input.c.rtil002"
            {<point name="input.c.rtil002" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil004
            #add-point:ON ACTION controlp INFIELD rtil004 name="input.c.rtil004"
            {<point name="input.c.rtil004" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil005
            #add-point:ON ACTION controlp INFIELD rtil005 name="input.c.rtil005"
            {<point name="input.c.rtil005" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtilstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtilstus
            #add-point:ON ACTION controlp INFIELD rtilstus name="input.c.rtilstus"
            {<point name="input.c.rtilstus" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil041
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil041
            #add-point:ON ACTION controlp INFIELD rtil041 name="input.c.rtil041"
            {<point name="input.c.rtil041" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil007
            #add-point:ON ACTION controlp INFIELD rtil007 name="input.c.rtil007"
            {<point name="input.c.rtil007" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil008
            #add-point:ON ACTION controlp INFIELD rtil008 name="input.c.rtil008"
            {<point name="input.c.rtil008" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil009
            #add-point:ON ACTION controlp INFIELD rtil009 name="input.c.rtil009"
            {<point name="input.c.rtil009" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil006
            #add-point:ON ACTION controlp INFIELD rtil006 name="input.c.rtil006"
            {<point name="input.c.rtil006" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil038
            #add-point:ON ACTION controlp INFIELD rtil038 name="input.c.rtil038"
            {<point name="input.c.rtil038" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil014
            #add-point:ON ACTION controlp INFIELD rtil014 name="input.c.rtil014"
            {<point name="input.c.rtil014" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil020
            #add-point:ON ACTION controlp INFIELD rtil020 name="input.c.rtil020"
            {<point name="input.c.rtil020" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil021
            #add-point:ON ACTION controlp INFIELD rtil021 name="input.c.rtil021"
            {<point name="input.c.rtil021" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil015
            #add-point:ON ACTION controlp INFIELD rtil015 name="input.c.rtil015"
            {<point name="input.c.rtil015" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil018
            #add-point:ON ACTION controlp INFIELD rtil018 name="input.c.rtil018"
            {<point name="input.c.rtil018" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil019
            #add-point:ON ACTION controlp INFIELD rtil019 name="input.c.rtil019"
            {<point name="input.c.rtil019" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil016
            #add-point:ON ACTION controlp INFIELD rtil016 name="input.c.rtil016"
            {<point name="input.c.rtil016" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil017
            #add-point:ON ACTION controlp INFIELD rtil017 name="input.c.rtil017"
            {<point name="input.c.rtil017" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil022
            #add-point:ON ACTION controlp INFIELD rtil022 name="input.c.rtil022"
            {<point name="input.c.rtil022" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil023
            #add-point:ON ACTION controlp INFIELD rtil023 name="input.c.rtil023"
            {<point name="input.c.rtil023" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil024
            #add-point:ON ACTION controlp INFIELD rtil024 name="input.c.rtil024"
            {<point name="input.c.rtil024" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil025
            #add-point:ON ACTION controlp INFIELD rtil025 name="input.c.rtil025"
            {<point name="input.c.rtil025" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil026
            #add-point:ON ACTION controlp INFIELD rtil026 name="input.c.rtil026"
            {<point name="input.c.rtil026" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil027
            #add-point:ON ACTION controlp INFIELD rtil027 name="input.c.rtil027"
            {<point name="input.c.rtil027" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil040
            #add-point:ON ACTION controlp INFIELD rtil040 name="input.c.rtil040"
            {<point name="input.c.rtil040" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil039
            #add-point:ON ACTION controlp INFIELD rtil039 name="input.c.rtil039"
            {<point name="input.c.rtil039" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil029
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil029
            #add-point:ON ACTION controlp INFIELD rtil029 name="input.c.rtil029"
            {<point name="input.c.rtil029" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil030
            #add-point:ON ACTION controlp INFIELD rtil030 name="input.c.rtil030"
            {<point name="input.c.rtil030" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil031
            #add-point:ON ACTION controlp INFIELD rtil031 name="input.c.rtil031"
            {<point name="input.c.rtil031" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil032
            #add-point:ON ACTION controlp INFIELD rtil032 name="input.c.rtil032"
            {<point name="input.c.rtil032" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil033
            #add-point:ON ACTION controlp INFIELD rtil033 name="input.c.rtil033"
            {<point name="input.c.rtil033" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil034
            #add-point:ON ACTION controlp INFIELD rtil034 name="input.c.rtil034"
            {<point name="input.c.rtil034" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtil035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtil035
            #add-point:ON ACTION controlp INFIELD rtil035 name="input.c.rtil035"
            {<point name="input.c.rtil035" />}
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_rtil_m.rtildocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO rtil_t (rtilent,rtilsite,rtildocdt,rtildocno,rtil042,rtil001,rtil002,rtil004, 
                   rtil005,rtil037,rtilstus,rtil041,rtil007,rtil008,rtil009,rtil010,rtil011,rtil012, 
                   rtil013,rtil006,rtil038,rtil014,rtil020,rtil021,rtil015,rtil018,rtil019,rtil016,rtil017, 
                   rtil022,rtil023,rtil024,rtil025,rtil026,rtil027,rtil040,rtil039,rtil029,rtil030,rtil031, 
                   rtil032,rtil033,rtil034,rtil035,rtil036,rtilownid,rtilowndp,rtilcrtid,rtilcrtdp,rtilcrtdt, 
                   rtilmodid,rtilmoddt,rtilcnfid,rtilcnfdt)
               VALUES (g_enterprise,g_rtil_m.rtilsite,g_rtil_m.rtildocdt,g_rtil_m.rtildocno,g_rtil_m.rtil042, 
                   g_rtil_m.rtil001,g_rtil_m.rtil002,g_rtil_m.rtil004,g_rtil_m.rtil005,g_rtil_m.rtil037, 
                   g_rtil_m.rtilstus,g_rtil_m.rtil041,g_rtil_m.rtil007,g_rtil_m.rtil008,g_rtil_m.rtil009, 
                   g_rtil_m.rtil010,g_rtil_m.rtil011,g_rtil_m.rtil012,g_rtil_m.rtil013,g_rtil_m.rtil006, 
                   g_rtil_m.rtil038,g_rtil_m.rtil014,g_rtil_m.rtil020,g_rtil_m.rtil021,g_rtil_m.rtil015, 
                   g_rtil_m.rtil018,g_rtil_m.rtil019,g_rtil_m.rtil016,g_rtil_m.rtil017,g_rtil_m.rtil022, 
                   g_rtil_m.rtil023,g_rtil_m.rtil024,g_rtil_m.rtil025,g_rtil_m.rtil026,g_rtil_m.rtil027, 
                   g_rtil_m.rtil040,g_rtil_m.rtil039,g_rtil_m.rtil029,g_rtil_m.rtil030,g_rtil_m.rtil031, 
                   g_rtil_m.rtil032,g_rtil_m.rtil033,g_rtil_m.rtil034,g_rtil_m.rtil035,g_rtil_m.rtil036, 
                   g_rtil_m.rtilownid,g_rtil_m.rtilowndp,g_rtil_m.rtilcrtid,g_rtil_m.rtilcrtdp,g_rtil_m.rtilcrtdt, 
                   g_rtil_m.rtilmodid,g_rtil_m.rtilmoddt,g_rtil_m.rtilcnfid,g_rtil_m.rtilcnfdt) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_rtil_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL artt500_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL artt500_b_fill()
                  CALL artt500_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL artt500_rtil_t_mask_restore('restore_mask_o')
               
               UPDATE rtil_t SET (rtilsite,rtildocdt,rtildocno,rtil042,rtil001,rtil002,rtil004,rtil005, 
                   rtil037,rtilstus,rtil041,rtil007,rtil008,rtil009,rtil010,rtil011,rtil012,rtil013, 
                   rtil006,rtil038,rtil014,rtil020,rtil021,rtil015,rtil018,rtil019,rtil016,rtil017,rtil022, 
                   rtil023,rtil024,rtil025,rtil026,rtil027,rtil040,rtil039,rtil029,rtil030,rtil031,rtil032, 
                   rtil033,rtil034,rtil035,rtil036,rtilownid,rtilowndp,rtilcrtid,rtilcrtdp,rtilcrtdt, 
                   rtilmodid,rtilmoddt,rtilcnfid,rtilcnfdt) = (g_rtil_m.rtilsite,g_rtil_m.rtildocdt, 
                   g_rtil_m.rtildocno,g_rtil_m.rtil042,g_rtil_m.rtil001,g_rtil_m.rtil002,g_rtil_m.rtil004, 
                   g_rtil_m.rtil005,g_rtil_m.rtil037,g_rtil_m.rtilstus,g_rtil_m.rtil041,g_rtil_m.rtil007, 
                   g_rtil_m.rtil008,g_rtil_m.rtil009,g_rtil_m.rtil010,g_rtil_m.rtil011,g_rtil_m.rtil012, 
                   g_rtil_m.rtil013,g_rtil_m.rtil006,g_rtil_m.rtil038,g_rtil_m.rtil014,g_rtil_m.rtil020, 
                   g_rtil_m.rtil021,g_rtil_m.rtil015,g_rtil_m.rtil018,g_rtil_m.rtil019,g_rtil_m.rtil016, 
                   g_rtil_m.rtil017,g_rtil_m.rtil022,g_rtil_m.rtil023,g_rtil_m.rtil024,g_rtil_m.rtil025, 
                   g_rtil_m.rtil026,g_rtil_m.rtil027,g_rtil_m.rtil040,g_rtil_m.rtil039,g_rtil_m.rtil029, 
                   g_rtil_m.rtil030,g_rtil_m.rtil031,g_rtil_m.rtil032,g_rtil_m.rtil033,g_rtil_m.rtil034, 
                   g_rtil_m.rtil035,g_rtil_m.rtil036,g_rtil_m.rtilownid,g_rtil_m.rtilowndp,g_rtil_m.rtilcrtid, 
                   g_rtil_m.rtilcrtdp,g_rtil_m.rtilcrtdt,g_rtil_m.rtilmodid,g_rtil_m.rtilmoddt,g_rtil_m.rtilcnfid, 
                   g_rtil_m.rtilcnfdt)
                WHERE rtilent = g_enterprise AND rtildocno = g_rtildocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "rtil_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL artt500_rtil_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_rtil_m_t)
               LET g_log2 = util.JSON.stringify(g_rtil_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_rtildocno_t = g_rtil_m.rtildocno
 
            
      END INPUT
   

{</section>}

{<section id="artt500.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_rtim_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtim_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artt500_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_rtim_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artt500_cl USING g_enterprise,g_rtil_m.rtildocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt500_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE artt500_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_rtim_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtim_d[l_ac].rtimseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_rtim_d_t.* = g_rtim_d[l_ac].*  #BACKUP
               LET g_rtim_d_o.* = g_rtim_d[l_ac].*  #BACKUP
               CALL artt500_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL artt500_set_no_entry_b(l_cmd)
               IF NOT artt500_lock_b("rtim_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artt500_bcl INTO g_rtim_d[l_ac].rtimsite,g_rtim_d[l_ac].rtimunit,g_rtim_d[l_ac].rtimorga, 
                      g_rtim_d[l_ac].rtimseq,g_rtim_d[l_ac].rtim003,g_rtim_d[l_ac].rtim004,g_rtim_d[l_ac].rtim005, 
                      g_rtim_d[l_ac].rtim006,g_rtim_d[l_ac].rtim008,g_rtim_d[l_ac].rtim009,g_rtim_d[l_ac].rtim010, 
                      g_rtim_d[l_ac].rtim012,g_rtim_d[l_ac].rtim013,g_rtim_d[l_ac].rtim014,g_rtim_d[l_ac].rtim015, 
                      g_rtim_d[l_ac].rtim016,g_rtim_d[l_ac].rtim018,g_rtim_d[l_ac].rtim017,g_rtim_d[l_ac].rtim019, 
                      g_rtim_d[l_ac].rtim020,g_rtim_d[l_ac].rtim021,g_rtim_d[l_ac].rtim029,g_rtim_d[l_ac].rtim022, 
                      g_rtim_d[l_ac].rtim024,g_rtim_d[l_ac].rtim025,g_rtim_d[l_ac].rtim026,g_rtim_d[l_ac].rtim027, 
                      g_rtim_d[l_ac].rtim028
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_rtim_d_t.rtimseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rtim_d_mask_o[l_ac].* =  g_rtim_d[l_ac].*
                  CALL artt500_rtim_t_mask()
                  LET g_rtim_d_mask_n[l_ac].* =  g_rtim_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL artt500_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtim_d[l_ac].* TO NULL 
            INITIALIZE g_rtim_d_t.* TO NULL 
            INITIALIZE g_rtim_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_rtim_d[l_ac].rtim020 = "0"
      LET g_rtim_d[l_ac].rtim029 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_rtim_d_t.* = g_rtim_d[l_ac].*     #新輸入資料
            LET g_rtim_d_o.* = g_rtim_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artt500_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL artt500_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtim_d[li_reproduce_target].* = g_rtim_d[li_reproduce].*
 
               LET g_rtim_d[li_reproduce_target].rtimseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM rtim_t 
             WHERE rtiment = g_enterprise AND rtimdocno = g_rtil_m.rtildocno
 
               AND rtimseq = g_rtim_d[l_ac].rtimseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtil_m.rtildocno
               LET gs_keys[2] = g_rtim_d[g_detail_idx].rtimseq
               CALL artt500_insert_b('rtim_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_rtim_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtim_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artt500_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               {<point name="input.body.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtil_m.rtildocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_rtim_d_t.rtimseq
 
            
               #刪除同層單身
               IF NOT artt500_delete_b('rtim_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt500_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT artt500_key_delete_b(gs_keys,'rtim_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt500_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE artt500_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_rtim_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rtim_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtimsite
            #add-point:BEFORE FIELD rtimsite name="input.b.page1.rtimsite"
            {<point name="input.b.page1.rtimsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtimsite
            
            #add-point:AFTER FIELD rtimsite name="input.a.page1.rtimsite"
            {<point name="input.a.page1.rtimsite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtimsite
            #add-point:ON CHANGE rtimsite name="input.g.page1.rtimsite"
            {<point name="input.g.page1.rtimsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtimunit
            #add-point:BEFORE FIELD rtimunit name="input.b.page1.rtimunit"
            {<point name="input.b.page1.rtimunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtimunit
            
            #add-point:AFTER FIELD rtimunit name="input.a.page1.rtimunit"
            {<point name="input.a.page1.rtimunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtimunit
            #add-point:ON CHANGE rtimunit name="input.g.page1.rtimunit"
            {<point name="input.g.page1.rtimunit" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtimorga
            #add-point:BEFORE FIELD rtimorga name="input.b.page1.rtimorga"
            {<point name="input.b.page1.rtimorga" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtimorga
            
            #add-point:AFTER FIELD rtimorga name="input.a.page1.rtimorga"
            {<point name="input.a.page1.rtimorga" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtimorga
            #add-point:ON CHANGE rtimorga name="input.g.page1.rtimorga"
            {<point name="input.g.page1.rtimorga" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtimseq
            #add-point:BEFORE FIELD rtimseq name="input.b.page1.rtimseq"
            {<point name="input.b.page1.rtimseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtimseq
            
            #add-point:AFTER FIELD rtimseq name="input.a.page1.rtimseq"
            {<point name="input.a.page1.rtimseq" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtimseq
            #add-point:ON CHANGE rtimseq name="input.g.page1.rtimseq"
            {<point name="input.g.page1.rtimseq" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim003
            #add-point:BEFORE FIELD rtim003 name="input.b.page1.rtim003"
            {<point name="input.b.page1.rtim003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim003
            
            #add-point:AFTER FIELD rtim003 name="input.a.page1.rtim003"
            {<point name="input.a.page1.rtim003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim003
            #add-point:ON CHANGE rtim003 name="input.g.page1.rtim003"
            {<point name="input.g.page1.rtim003" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim004
            
            #add-point:AFTER FIELD rtim004 name="input.a.page1.rtim004"
            {<point name="input.a.page1.rtim004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim004
            #add-point:BEFORE FIELD rtim004 name="input.b.page1.rtim004"
            {<point name="input.b.page1.rtim004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim004
            #add-point:ON CHANGE rtim004 name="input.g.page1.rtim004"
            {<point name="input.g.page1.rtim004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim005
            #add-point:BEFORE FIELD rtim005 name="input.b.page1.rtim005"
            {<point name="input.b.page1.rtim005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim005
            
            #add-point:AFTER FIELD rtim005 name="input.a.page1.rtim005"
            {<point name="input.a.page1.rtim005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim005
            #add-point:ON CHANGE rtim005 name="input.g.page1.rtim005"
            {<point name="input.g.page1.rtim005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim008
            #add-point:BEFORE FIELD rtim008 name="input.b.page1.rtim008"
            {<point name="input.b.page1.rtim008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim008
            
            #add-point:AFTER FIELD rtim008 name="input.a.page1.rtim008"
            {<point name="input.a.page1.rtim008" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim008
            #add-point:ON CHANGE rtim008 name="input.g.page1.rtim008"
            {<point name="input.g.page1.rtim008" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim009
            #add-point:BEFORE FIELD rtim009 name="input.b.page1.rtim009"
            {<point name="input.b.page1.rtim009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim009
            
            #add-point:AFTER FIELD rtim009 name="input.a.page1.rtim009"
            {<point name="input.a.page1.rtim009" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim009
            #add-point:ON CHANGE rtim009 name="input.g.page1.rtim009"
            {<point name="input.g.page1.rtim009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim010
            #add-point:BEFORE FIELD rtim010 name="input.b.page1.rtim010"
            {<point name="input.b.page1.rtim010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim010
            
            #add-point:AFTER FIELD rtim010 name="input.a.page1.rtim010"
            {<point name="input.a.page1.rtim010" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim010
            #add-point:ON CHANGE rtim010 name="input.g.page1.rtim010"
            {<point name="input.g.page1.rtim010" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim012
            #add-point:BEFORE FIELD rtim012 name="input.b.page1.rtim012"
            {<point name="input.b.page1.rtim012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim012
            
            #add-point:AFTER FIELD rtim012 name="input.a.page1.rtim012"
            {<point name="input.a.page1.rtim012" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim012
            #add-point:ON CHANGE rtim012 name="input.g.page1.rtim012"
            {<point name="input.g.page1.rtim012" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim013
            
            #add-point:AFTER FIELD rtim013 name="input.a.page1.rtim013"
            {<point name="input.a.page1.rtim013" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim013
            #add-point:BEFORE FIELD rtim013 name="input.b.page1.rtim013"
            {<point name="input.b.page1.rtim013" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim013
            #add-point:ON CHANGE rtim013 name="input.g.page1.rtim013"
            {<point name="input.g.page1.rtim013" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim015
            #add-point:BEFORE FIELD rtim015 name="input.b.page1.rtim015"
            {<point name="input.b.page1.rtim015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim015
            
            #add-point:AFTER FIELD rtim015 name="input.a.page1.rtim015"
            {<point name="input.a.page1.rtim015" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim015
            #add-point:ON CHANGE rtim015 name="input.g.page1.rtim015"
            {<point name="input.g.page1.rtim015" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim016
            #add-point:BEFORE FIELD rtim016 name="input.b.page1.rtim016"
            {<point name="input.b.page1.rtim016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim016
            
            #add-point:AFTER FIELD rtim016 name="input.a.page1.rtim016"
            {<point name="input.a.page1.rtim016" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim016
            #add-point:ON CHANGE rtim016 name="input.g.page1.rtim016"
            {<point name="input.g.page1.rtim016" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim019
            #add-point:BEFORE FIELD rtim019 name="input.b.page1.rtim019"
            {<point name="input.b.page1.rtim019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim019
            
            #add-point:AFTER FIELD rtim019 name="input.a.page1.rtim019"
            {<point name="input.a.page1.rtim019" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim019
            #add-point:ON CHANGE rtim019 name="input.g.page1.rtim019"
            {<point name="input.g.page1.rtim019" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim020
            #add-point:BEFORE FIELD rtim020 name="input.b.page1.rtim020"
            {<point name="input.b.page1.rtim020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim020
            
            #add-point:AFTER FIELD rtim020 name="input.a.page1.rtim020"
            {<point name="input.a.page1.rtim020" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim020
            #add-point:ON CHANGE rtim020 name="input.g.page1.rtim020"
            {<point name="input.g.page1.rtim020" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim021
            #add-point:BEFORE FIELD rtim021 name="input.b.page1.rtim021"
            {<point name="input.b.page1.rtim021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim021
            
            #add-point:AFTER FIELD rtim021 name="input.a.page1.rtim021"
            {<point name="input.a.page1.rtim021" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim021
            #add-point:ON CHANGE rtim021 name="input.g.page1.rtim021"
            {<point name="input.g.page1.rtim021" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim029
            #add-point:BEFORE FIELD rtim029 name="input.b.page1.rtim029"
            {<point name="input.b.page1.rtim029" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim029
            
            #add-point:AFTER FIELD rtim029 name="input.a.page1.rtim029"
            {<point name="input.a.page1.rtim029" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim029
            #add-point:ON CHANGE rtim029 name="input.g.page1.rtim029"
            {<point name="input.g.page1.rtim029" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim022
            #add-point:BEFORE FIELD rtim022 name="input.b.page1.rtim022"
            {<point name="input.b.page1.rtim022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim022
            
            #add-point:AFTER FIELD rtim022 name="input.a.page1.rtim022"
            {<point name="input.a.page1.rtim022" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim022
            #add-point:ON CHANGE rtim022 name="input.g.page1.rtim022"
            {<point name="input.g.page1.rtim022" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim024
            
            #add-point:AFTER FIELD rtim024 name="input.a.page1.rtim024"
            {<point name="input.a.page1.rtim024" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim024
            #add-point:BEFORE FIELD rtim024 name="input.b.page1.rtim024"
            {<point name="input.b.page1.rtim024" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim024
            #add-point:ON CHANGE rtim024 name="input.g.page1.rtim024"
            {<point name="input.g.page1.rtim024" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim025
            #add-point:BEFORE FIELD rtim025 name="input.b.page1.rtim025"
            {<point name="input.b.page1.rtim025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim025
            
            #add-point:AFTER FIELD rtim025 name="input.a.page1.rtim025"
            {<point name="input.a.page1.rtim025" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim025
            #add-point:ON CHANGE rtim025 name="input.g.page1.rtim025"
            {<point name="input.g.page1.rtim025" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim026
            #add-point:BEFORE FIELD rtim026 name="input.b.page1.rtim026"
            {<point name="input.b.page1.rtim026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim026
            
            #add-point:AFTER FIELD rtim026 name="input.a.page1.rtim026"
            {<point name="input.a.page1.rtim026" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim026
            #add-point:ON CHANGE rtim026 name="input.g.page1.rtim026"
            {<point name="input.g.page1.rtim026" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim027
            #add-point:BEFORE FIELD rtim027 name="input.b.page1.rtim027"
            {<point name="input.b.page1.rtim027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim027
            
            #add-point:AFTER FIELD rtim027 name="input.a.page1.rtim027"
            {<point name="input.a.page1.rtim027" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim027
            #add-point:ON CHANGE rtim027 name="input.g.page1.rtim027"
            {<point name="input.g.page1.rtim027" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtim028
            #add-point:BEFORE FIELD rtim028 name="input.b.page1.rtim028"
            {<point name="input.b.page1.rtim028" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtim028
            
            #add-point:AFTER FIELD rtim028 name="input.a.page1.rtim028"
            {<point name="input.a.page1.rtim028" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtim028
            #add-point:ON CHANGE rtim028 name="input.g.page1.rtim028"
            {<point name="input.g.page1.rtim028" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.rtimsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtimsite
            #add-point:ON ACTION controlp INFIELD rtimsite name="input.c.page1.rtimsite"
            {<point name="input.c.page1.rtimsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtimunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtimunit
            #add-point:ON ACTION controlp INFIELD rtimunit name="input.c.page1.rtimunit"
            {<point name="input.c.page1.rtimunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtimorga
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtimorga
            #add-point:ON ACTION controlp INFIELD rtimorga name="input.c.page1.rtimorga"
            {<point name="input.c.page1.rtimorga" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtimseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtimseq
            #add-point:ON ACTION controlp INFIELD rtimseq name="input.c.page1.rtimseq"
            {<point name="input.c.page1.rtimseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim003
            #add-point:ON ACTION controlp INFIELD rtim003 name="input.c.page1.rtim003"
            {<point name="input.c.page1.rtim003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim004
            #add-point:ON ACTION controlp INFIELD rtim004 name="input.c.page1.rtim004"
            {<point name="input.c.page1.rtim004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim005
            #add-point:ON ACTION controlp INFIELD rtim005 name="input.c.page1.rtim005"
            {<point name="input.c.page1.rtim005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim008
            #add-point:ON ACTION controlp INFIELD rtim008 name="input.c.page1.rtim008"
            {<point name="input.c.page1.rtim008" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim009
            #add-point:ON ACTION controlp INFIELD rtim009 name="input.c.page1.rtim009"
            {<point name="input.c.page1.rtim009" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim010
            #add-point:ON ACTION controlp INFIELD rtim010 name="input.c.page1.rtim010"
            {<point name="input.c.page1.rtim010" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim012
            #add-point:ON ACTION controlp INFIELD rtim012 name="input.c.page1.rtim012"
            {<point name="input.c.page1.rtim012" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim013
            #add-point:ON ACTION controlp INFIELD rtim013 name="input.c.page1.rtim013"
            {<point name="input.c.page1.rtim013" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim015
            #add-point:ON ACTION controlp INFIELD rtim015 name="input.c.page1.rtim015"
            {<point name="input.c.page1.rtim015" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim016
            #add-point:ON ACTION controlp INFIELD rtim016 name="input.c.page1.rtim016"
            {<point name="input.c.page1.rtim016" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim019
            #add-point:ON ACTION controlp INFIELD rtim019 name="input.c.page1.rtim019"
            {<point name="input.c.page1.rtim019" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim020
            #add-point:ON ACTION controlp INFIELD rtim020 name="input.c.page1.rtim020"
            {<point name="input.c.page1.rtim020" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim021
            #add-point:ON ACTION controlp INFIELD rtim021 name="input.c.page1.rtim021"
            {<point name="input.c.page1.rtim021" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim029
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim029
            #add-point:ON ACTION controlp INFIELD rtim029 name="input.c.page1.rtim029"
            {<point name="input.c.page1.rtim029" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim022
            #add-point:ON ACTION controlp INFIELD rtim022 name="input.c.page1.rtim022"
            {<point name="input.c.page1.rtim022" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim024
            #add-point:ON ACTION controlp INFIELD rtim024 name="input.c.page1.rtim024"
            {<point name="input.c.page1.rtim024" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim025
            #add-point:ON ACTION controlp INFIELD rtim025 name="input.c.page1.rtim025"
            {<point name="input.c.page1.rtim025" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim026
            #add-point:ON ACTION controlp INFIELD rtim026 name="input.c.page1.rtim026"
            {<point name="input.c.page1.rtim026" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim027
            #add-point:ON ACTION controlp INFIELD rtim027 name="input.c.page1.rtim027"
            {<point name="input.c.page1.rtim027" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtim028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtim028
            #add-point:ON ACTION controlp INFIELD rtim028 name="input.c.page1.rtim028"
            {<point name="input.c.page1.rtim028" />}
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_rtim_d[l_ac].* = g_rtim_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE artt500_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_rtim_d[l_ac].rtimseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_rtim_d[l_ac].* = g_rtim_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL artt500_rtim_t_mask_restore('restore_mask_o')
      
               UPDATE rtim_t SET (rtimdocno,rtimsite,rtimunit,rtimorga,rtimseq,rtim003,rtim004,rtim005, 
                   rtim006,rtim008,rtim009,rtim010,rtim012,rtim013,rtim014,rtim015,rtim016,rtim018,rtim017, 
                   rtim019,rtim020,rtim021,rtim029,rtim022,rtim024,rtim025,rtim026,rtim027,rtim028) = (g_rtil_m.rtildocno, 
                   g_rtim_d[l_ac].rtimsite,g_rtim_d[l_ac].rtimunit,g_rtim_d[l_ac].rtimorga,g_rtim_d[l_ac].rtimseq, 
                   g_rtim_d[l_ac].rtim003,g_rtim_d[l_ac].rtim004,g_rtim_d[l_ac].rtim005,g_rtim_d[l_ac].rtim006, 
                   g_rtim_d[l_ac].rtim008,g_rtim_d[l_ac].rtim009,g_rtim_d[l_ac].rtim010,g_rtim_d[l_ac].rtim012, 
                   g_rtim_d[l_ac].rtim013,g_rtim_d[l_ac].rtim014,g_rtim_d[l_ac].rtim015,g_rtim_d[l_ac].rtim016, 
                   g_rtim_d[l_ac].rtim018,g_rtim_d[l_ac].rtim017,g_rtim_d[l_ac].rtim019,g_rtim_d[l_ac].rtim020, 
                   g_rtim_d[l_ac].rtim021,g_rtim_d[l_ac].rtim029,g_rtim_d[l_ac].rtim022,g_rtim_d[l_ac].rtim024, 
                   g_rtim_d[l_ac].rtim025,g_rtim_d[l_ac].rtim026,g_rtim_d[l_ac].rtim027,g_rtim_d[l_ac].rtim028) 

                WHERE rtiment = g_enterprise AND rtimdocno = g_rtil_m.rtildocno 
 
                  AND rtimseq = g_rtim_d_t.rtimseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_rtim_d[l_ac].* = g_rtim_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtim_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_rtim_d[l_ac].* = g_rtim_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtim_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtil_m.rtildocno
               LET gs_keys_bak[1] = g_rtildocno_t
               LET gs_keys[2] = g_rtim_d[g_detail_idx].rtimseq
               LET gs_keys_bak[2] = g_rtim_d_t.rtimseq
               CALL artt500_update_b('rtim_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL artt500_rtim_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_rtim_d[g_detail_idx].rtimseq = g_rtim_d_t.rtimseq 
 
                  ) THEN
                  LET gs_keys[01] = g_rtil_m.rtildocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_rtim_d_t.rtimseq
 
                  CALL artt500_key_update_b(gs_keys,'rtim_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtil_m),util.JSON.stringify(g_rtim_d_t)
               LET g_log2 = util.JSON.stringify(g_rtil_m),util.JSON.stringify(g_rtim_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL artt500_unlock_b("rtim_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            {<point name="input.body.after_input"/>}
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_rtim_d[li_reproduce_target].* = g_rtim_d[li_reproduce].*
 
               LET g_rtim_d[li_reproduce_target].rtimseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_rtim_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_rtim_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      DISPLAY ARRAY g_rtim2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL artt500_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx = l_ac
            
            #add-point:page2, before row動作 name="input.body2.before_row"
            {<point name="input.body2.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL artt500_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為 name="input.body2.action"
         {<point name="input.body2.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_rtim3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL artt500_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            LET g_detail_idx = l_ac
            
            #add-point:page3, before row動作 name="input.body3.before_row"
            {<point name="input.body3.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            CALL artt500_idx_chk()
            LET g_current_page = 3
      
         #add-point:page3自定義行為 name="input.body3.action"
         {<point name="input.body3.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_rtim4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL artt500_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail4")
            LET g_detail_idx = l_ac
            
            #add-point:page4, before row動作 name="input.body4.before_row"
            {<point name="input.body4.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail4")
            CALL artt500_idx_chk()
            LET g_current_page = 4
      
         #add-point:page4自定義行為 name="input.body4.action"
         {<point name="input.body4.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_rtim5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL artt500_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail5")
            LET g_detail_idx = l_ac
            
            #add-point:page5, before row動作 name="input.body5.before_row"
            {<point name="input.body5.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail5")
            CALL artt500_idx_chk()
            LET g_current_page = 5
      
         #add-point:page5自定義行為 name="input.body5.action"
         {<point name="input.body5.action"/>}
         #end add-point
      
      END DISPLAY
 
 

{</section>}

{<section id="artt500.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'2',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue("'3',"))
         CALL DIALOG.setCurrentRow("s_detail4",g_idx_group.getValue("'4',"))
         CALL DIALOG.setCurrentRow("s_detail5",g_idx_group.getValue("'5',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD rtildocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD rtimsite
               WHEN "s_detail2"
                  NEXT FIELD rticseq
               WHEN "s_detail3"
                  NEXT FIELD xrcd007
               WHEN "s_detail4"
                  NEXT FIELD rtieseq
               WHEN "s_detail5"
                  NEXT FIELD rtiksite
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION

{</section>}

{<section id="artt500.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION artt500_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   {<point name="show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL artt500_b_fill() #單身填充
      CALL artt500_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL artt500_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_rtil_m_mask_o.* =  g_rtil_m.*
   CALL artt500_rtil_t_mask()
   LET g_rtil_m_mask_n.* =  g_rtil_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtil_m.rtilsite,g_rtil_m.rtilsite_desc,g_rtil_m.rtildocdt,g_rtil_m.rtildocno,g_rtil_m.rtil042, 
       g_rtil_m.rtil001,g_rtil_m.rtil001_desc,g_rtil_m.rtil002,g_rtil_m.rtil002_desc,g_rtil_m.rtil004, 
       g_rtil_m.rtil004_desc,g_rtil_m.rtil005,g_rtil_m.rtil005_desc,g_rtil_m.rtil037,g_rtil_m.rtilstus, 
       g_rtil_m.rtil041,g_rtil_m.rtil007,g_rtil_m.rtil007_desc,g_rtil_m.rtil008,g_rtil_m.rtil008_desc, 
       g_rtil_m.rtil009,g_rtil_m.rtil009_desc,g_rtil_m.rtil010,g_rtil_m.rtil011,g_rtil_m.rtil012,g_rtil_m.rtil013, 
       g_rtil_m.rtil006,g_rtil_m.rtil006_desc,g_rtil_m.rtil038,g_rtil_m.rtil014,g_rtil_m.rtil020,g_rtil_m.rtil021, 
       g_rtil_m.rtil021_desc,g_rtil_m.rtil015,g_rtil_m.rtil015_desc,g_rtil_m.rtil018,g_rtil_m.rtil019, 
       g_rtil_m.rtil016,g_rtil_m.rtil017,g_rtil_m.rtil022,g_rtil_m.rtil022_desc,g_rtil_m.rtil023,g_rtil_m.rtil024, 
       g_rtil_m.rtil025,g_rtil_m.rtil026,g_rtil_m.rtil027,g_rtil_m.rtil040,g_rtil_m.rtil039,g_rtil_m.rtil029, 
       g_rtil_m.rtil030,g_rtil_m.rtil031,g_rtil_m.rtil032,g_rtil_m.rtil033,g_rtil_m.rtil033_desc,g_rtil_m.rtil034, 
       g_rtil_m.rtil034_desc,g_rtil_m.rtil035,g_rtil_m.rtil035_desc,g_rtil_m.rtil036,g_rtil_m.isaf009, 
       g_rtil_m.isaf010,g_rtil_m.isaf044,g_rtil_m.isaf202,g_rtil_m.isaf203,g_rtil_m.isaf204,g_rtil_m.isaf201, 
       g_rtil_m.isaf207,g_rtil_m.rtilownid,g_rtil_m.rtilownid_desc,g_rtil_m.rtilowndp,g_rtil_m.rtilowndp_desc, 
       g_rtil_m.rtilcrtid,g_rtil_m.rtilcrtid_desc,g_rtil_m.rtilcrtdp,g_rtil_m.rtilcrtdp_desc,g_rtil_m.rtilcrtdt, 
       g_rtil_m.rtilmodid,g_rtil_m.rtilmodid_desc,g_rtil_m.rtilmoddt,g_rtil_m.rtilcnfid,g_rtil_m.rtilcnfid_desc, 
       g_rtil_m.rtilcnfdt,g_rtil_m.snum,g_rtil_m.amount,g_rtil_m.amount2,g_rtil_m.amount3
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtil_m.rtilstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_rtim_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_rtim2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_rtim3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_rtim4_d.getLength()
      #add-point:show段單身reference name="show.body4.reference"
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_rtim5_d.getLength()
      #add-point:show段單身reference name="show.body5.reference"
      {<point name="show.body5.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL artt500_detail_show()
 
   #add-point:show段之後 name="show.after"
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="artt500.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION artt500_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   {<point name="detail_show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="artt500.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION artt500_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE l_newno     LIKE rtil_t.rtildocno 
   DEFINE l_oldno     LIKE rtil_t.rtildocno 
 
   DEFINE l_master    RECORD LIKE rtil_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE rtim_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE rtic_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE xrcd_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE rtie_t.* #此變數樣板目前無使用
 
   DEFINE l_detail5    RECORD LIKE rtik_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   {<point name="reproduce.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_rtil_m.rtildocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_rtildocno_t = g_rtil_m.rtildocno
 
    
   LET g_rtil_m.rtildocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rtil_m.rtilownid = g_user
      LET g_rtil_m.rtilowndp = g_dept
      LET g_rtil_m.rtilcrtid = g_user
      LET g_rtil_m.rtilcrtdp = g_dept 
      LET g_rtil_m.rtilcrtdt = cl_get_current()
      LET g_rtil_m.rtilmodid = g_user
      LET g_rtil_m.rtilmoddt = cl_get_current()
      LET g_rtil_m.rtilstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtil_m.rtilstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL artt500_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_rtil_m.* TO NULL
      INITIALIZE g_rtim_d TO NULL
      INITIALIZE g_rtim2_d TO NULL
      INITIALIZE g_rtim3_d TO NULL
      INITIALIZE g_rtim4_d TO NULL
      INITIALIZE g_rtim5_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL artt500_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt500_set_act_visible()   
   CALL artt500_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtildocno_t = g_rtil_m.rtildocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtilent = " ||g_enterprise|| " AND",
                      " rtildocno = '", g_rtil_m.rtildocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artt500_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL artt500_idx_chk()
   
   LET g_data_owner = g_rtil_m.rtilownid      
   LET g_data_dept  = g_rtil_m.rtilowndp
   
   #功能已完成,通報訊息中心
   CALL artt500_msgcentre_notify('reproduce')
 
END FUNCTION

{</section>}

{<section id="artt500.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION artt500_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   {<point name="detail_reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE rtim_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE rtic_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE xrcd_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE rtie_t.* #此變數樣板目前無使用
 
   DEFINE l_detail5    RECORD LIKE rtik_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   {<point name="detail_reproduce.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   {<point name="detail_reproduce.pre_function"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE artt500_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtim_t
    WHERE rtiment = g_enterprise AND rtimdocno = g_rtildocno_t
 
    INTO TEMP artt500_detail
 
   #將key修正為調整後   
   UPDATE artt500_detail 
      #更新key欄位
      SET rtimdocno = g_rtil_m.rtildocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO rtim_t SELECT * FROM artt500_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt500_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtic_t 
    WHERE rticent = g_enterprise AND rticdocno = g_rtildocno_t
 
    INTO TEMP artt500_detail
 
   #將key修正為調整後   
   UPDATE artt500_detail SET rticdocno = g_rtil_m.rtildocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   {<point name="detail_reproduce.body.table2.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtic_t SELECT * FROM artt500_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt500_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table3.b_insert"
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xrcd_t 
    WHERE xrcdent = g_enterprise AND xrcddocno = g_rtildocno_t
 
    INTO TEMP artt500_detail
 
   #將key修正為調整後   
   UPDATE artt500_detail SET xrcddocno = g_rtil_m.rtildocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table3.b_update"
   {<point name="detail_reproduce.body.table3.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xrcd_t SELECT * FROM artt500_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table3.m_insert"
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt500_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table3.a_insert"
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table4.b_insert"
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtie_t 
    WHERE rtieent = g_enterprise AND rtiedocno = g_rtildocno_t
 
    INTO TEMP artt500_detail
 
   #將key修正為調整後   
   UPDATE artt500_detail SET rtiedocno = g_rtil_m.rtildocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table4.b_update"
   {<point name="detail_reproduce.body.table4.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtie_t SELECT * FROM artt500_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table4.m_insert"
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt500_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table4.a_insert"
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table5.b_insert"
   {<point name="detail_reproduce.body.table5.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtik_t 
    WHERE rtikent = g_enterprise AND rtikdocno = g_rtildocno_t
 
    INTO TEMP artt500_detail
 
   #將key修正為調整後   
   UPDATE artt500_detail SET rtikdocno = g_rtil_m.rtildocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table5.b_update"
   {<point name="detail_reproduce.body.table5.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtik_t SELECT * FROM artt500_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table5.m_insert"
   {<point name="detail_reproduce.body.table5.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt500_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table5.a_insert"
   {<point name="detail_reproduce.body.table5.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_rtildocno_t = g_rtil_m.rtildocno
 
   
END FUNCTION

{</section>}

{<section id="artt500.delete" >}
#+ 資料刪除
PRIVATE FUNCTION artt500_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   {<point name="delete.pre_function"/>}
   #end add-point
   
   IF g_rtil_m.rtildocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN artt500_cl USING g_enterprise,g_rtil_m.rtildocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt500_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE artt500_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artt500_master_referesh USING g_rtil_m.rtildocno INTO g_rtil_m.rtilsite,g_rtil_m.rtildocdt, 
       g_rtil_m.rtildocno,g_rtil_m.rtil042,g_rtil_m.rtil001,g_rtil_m.rtil002,g_rtil_m.rtil004,g_rtil_m.rtil005, 
       g_rtil_m.rtil037,g_rtil_m.rtilstus,g_rtil_m.rtil041,g_rtil_m.rtil007,g_rtil_m.rtil008,g_rtil_m.rtil009, 
       g_rtil_m.rtil010,g_rtil_m.rtil011,g_rtil_m.rtil012,g_rtil_m.rtil013,g_rtil_m.rtil006,g_rtil_m.rtil038, 
       g_rtil_m.rtil014,g_rtil_m.rtil020,g_rtil_m.rtil021,g_rtil_m.rtil015,g_rtil_m.rtil018,g_rtil_m.rtil019, 
       g_rtil_m.rtil016,g_rtil_m.rtil017,g_rtil_m.rtil022,g_rtil_m.rtil023,g_rtil_m.rtil024,g_rtil_m.rtil025, 
       g_rtil_m.rtil026,g_rtil_m.rtil027,g_rtil_m.rtil040,g_rtil_m.rtil039,g_rtil_m.rtil029,g_rtil_m.rtil030, 
       g_rtil_m.rtil031,g_rtil_m.rtil032,g_rtil_m.rtil033,g_rtil_m.rtil034,g_rtil_m.rtil035,g_rtil_m.rtil036, 
       g_rtil_m.rtilownid,g_rtil_m.rtilowndp,g_rtil_m.rtilcrtid,g_rtil_m.rtilcrtdp,g_rtil_m.rtilcrtdt, 
       g_rtil_m.rtilmodid,g_rtil_m.rtilmoddt,g_rtil_m.rtilcnfid,g_rtil_m.rtilcnfdt,g_rtil_m.rtilsite_desc, 
       g_rtil_m.rtil002_desc,g_rtil_m.rtil004_desc,g_rtil_m.rtil005_desc,g_rtil_m.rtil007_desc,g_rtil_m.rtil008_desc, 
       g_rtil_m.rtil009_desc,g_rtil_m.rtil006_desc,g_rtil_m.rtil021_desc,g_rtil_m.rtil015_desc,g_rtil_m.rtil022_desc, 
       g_rtil_m.rtil033_desc,g_rtil_m.rtil034_desc,g_rtil_m.rtil035_desc,g_rtil_m.rtilownid_desc,g_rtil_m.rtilowndp_desc, 
       g_rtil_m.rtilcrtid_desc,g_rtil_m.rtilcrtdp_desc,g_rtil_m.rtilmodid_desc,g_rtil_m.rtilcnfid_desc 

   
   
   #檢查是否允許此動作
   IF NOT artt500_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtil_m_mask_o.* =  g_rtil_m.*
   CALL artt500_rtil_t_mask()
   LET g_rtil_m_mask_n.* =  g_rtil_m.*
   
   CALL artt500_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL artt500_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_rtildocno_t = g_rtil_m.rtildocno
 
 
      DELETE FROM rtil_t
       WHERE rtilent = g_enterprise AND rtildocno = g_rtil_m.rtildocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_rtil_m.rtildocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM rtim_t
       WHERE rtiment = g_enterprise AND rtimdocno = g_rtil_m.rtildocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtim_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM rtic_t
       WHERE rticent = g_enterprise AND
             rticdocno = g_rtil_m.rtildocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete3"
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM xrcd_t
       WHERE xrcdent = g_enterprise AND
             xrcddocno = g_rtil_m.rtildocno
      #add-point:單身刪除中 name="delete.body.m_delete3"
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete3"
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete4"
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM rtie_t
       WHERE rtieent = g_enterprise AND
             rtiedocno = g_rtil_m.rtildocno
      #add-point:單身刪除中 name="delete.body.m_delete4"
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete4"
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete5"
      {<point name="delete.body.b_delete5" mark="Y"/>}
      #end add-point
      DELETE FROM rtik_t
       WHERE rtikent = g_enterprise AND
             rtikdocno = g_rtil_m.rtildocno
      #add-point:單身刪除中 name="delete.body.m_delete5"
      {<point name="delete.body.m_delete5"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtik_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete5"
      {<point name="delete.body.a_delete5"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_rtil_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE artt500_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_rtim_d.clear() 
      CALL g_rtim2_d.clear()       
      CALL g_rtim3_d.clear()       
      CALL g_rtim4_d.clear()       
      CALL g_rtim5_d.clear()       
 
     
      CALL artt500_ui_browser_refresh()  
      #CALL artt500_ui_headershow()  
      #CALL artt500_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
      
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      {<point name="delete.lang.delete"/>}
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL artt500_browser_fill("")
         CALL artt500_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE artt500_cl
 
   #功能已完成,通報訊息中心
   CALL artt500_msgcentre_notify('delete')
    
END FUNCTION

{</section>}

{<section id="artt500.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION artt500_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   {<point name="b_fill.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   {<point name="b_fill.pre_function"/>}
   #end add-point
   
   #清空第一階單身
   CALL g_rtim_d.clear()
   CALL g_rtim2_d.clear()
   CALL g_rtim3_d.clear()
   CALL g_rtim4_d.clear()
   CALL g_rtim5_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF artt500_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      {<point name="b_fill.long_sql_if"/>}
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtimsite,rtimunit,rtimorga,rtimseq,rtim003,rtim004,rtim005,rtim006, 
             rtim008,rtim009,rtim010,rtim012,rtim013,rtim014,rtim015,rtim016,rtim018,rtim017,rtim019, 
             rtim020,rtim021,rtim029,rtim022,rtim024,rtim025,rtim026,rtim027,rtim028 ,t1.imaal003 ,t2.imaal004 , 
             t3.oocal003 ,t4.oocal003 ,t5.oocql004 FROM rtim_t",   
                     " INNER JOIN rtil_t ON rtilent = " ||g_enterprise|| " AND rtildocno = rtimdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=rtim004 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=rtim004 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent="||g_enterprise||" AND t3.oocal001=rtim013 AND t3.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent="||g_enterprise||" AND t4.oocal001=rtim018 AND t4.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent="||g_enterprise||" AND t5.oocql001='295' AND t5.oocql002=rtim024 AND t5.oocql003='"||g_dlang||"' ",
 
                     " WHERE rtiment=? AND rtimdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtim_t.rtimseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt500_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR artt500_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_rtil_m.rtildocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_rtil_m.rtildocno INTO g_rtim_d[l_ac].rtimsite,g_rtim_d[l_ac].rtimunit, 
          g_rtim_d[l_ac].rtimorga,g_rtim_d[l_ac].rtimseq,g_rtim_d[l_ac].rtim003,g_rtim_d[l_ac].rtim004, 
          g_rtim_d[l_ac].rtim005,g_rtim_d[l_ac].rtim006,g_rtim_d[l_ac].rtim008,g_rtim_d[l_ac].rtim009, 
          g_rtim_d[l_ac].rtim010,g_rtim_d[l_ac].rtim012,g_rtim_d[l_ac].rtim013,g_rtim_d[l_ac].rtim014, 
          g_rtim_d[l_ac].rtim015,g_rtim_d[l_ac].rtim016,g_rtim_d[l_ac].rtim018,g_rtim_d[l_ac].rtim017, 
          g_rtim_d[l_ac].rtim019,g_rtim_d[l_ac].rtim020,g_rtim_d[l_ac].rtim021,g_rtim_d[l_ac].rtim029, 
          g_rtim_d[l_ac].rtim022,g_rtim_d[l_ac].rtim024,g_rtim_d[l_ac].rtim025,g_rtim_d[l_ac].rtim026, 
          g_rtim_d[l_ac].rtim027,g_rtim_d[l_ac].rtim028,g_rtim_d[l_ac].rtim004_desc,g_rtim_d[l_ac].rtim004_desc_desc, 
          g_rtim_d[l_ac].rtim013_desc,g_rtim_d[l_ac].rtim018_desc,g_rtim_d[l_ac].rtim024_desc   #(ver:78) 

         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF artt500_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         {<point name="b_fill.body2.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rticseq,rticseq1,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006, 
             rtic007,rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017, 
             rtic018,rtic020  FROM rtic_t",   
                     " INNER JOIN  rtil_t ON rtilent = " ||g_enterprise|| " AND rtildocno = rticdocno ",
 
                     "",
                     
                     
                     " WHERE rticent=? AND rticdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtic_t.rticseq,rtic_t.rticseq1"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt500_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR artt500_pb2
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs2 USING g_enterprise,g_rtil_m.rtildocno   #(ver:78)
                                               
      FOREACH b_fill_cs2 USING g_enterprise,g_rtil_m.rtildocno INTO g_rtim2_d[l_ac].rticseq,g_rtim2_d[l_ac].rticseq1, 
          g_rtim2_d[l_ac].rtic001,g_rtim2_d[l_ac].rtic002,g_rtim2_d[l_ac].rtic003,g_rtim2_d[l_ac].rtic004, 
          g_rtim2_d[l_ac].rtic005,g_rtim2_d[l_ac].rtic006,g_rtim2_d[l_ac].rtic007,g_rtim2_d[l_ac].rtic008, 
          g_rtim2_d[l_ac].rtic009,g_rtim2_d[l_ac].rtic010,g_rtim2_d[l_ac].rtic011,g_rtim2_d[l_ac].rtic012, 
          g_rtim2_d[l_ac].rtic013,g_rtim2_d[l_ac].rtic014,g_rtim2_d[l_ac].rtic015,g_rtim2_d[l_ac].rtic016, 
          g_rtim2_d[l_ac].rtic017,g_rtim2_d[l_ac].rtic018,g_rtim2_d[l_ac].rtic020   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF artt500_fill_chk(3) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body3.long_sql_if"
         {<point name="b_fill.body3.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xrcd007,xrcdld,xrcdseq,xrcdseq2,xrcd002,xrcd003,xrcd006,xrcd004, 
             xrcd104  FROM xrcd_t",   
                     " INNER JOIN  rtil_t ON rtilent = " ||g_enterprise|| " AND rtildocno = xrcddocno ",
 
                     "",
                     
                     
                     " WHERE xrcdent=? AND xrcddocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body3.fill_sql"
         {<point name="b_fill.body3.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xrcd_t.xrcdld,xrcd_t.xrcdseq,xrcd_t.xrcdseq2,xrcd_t.xrcd007"
         
         #add-point:單身填充控制 name="b_fill.sql3"
         {<point name="b_fill.sql3"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt500_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR artt500_pb3
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs3 USING g_enterprise,g_rtil_m.rtildocno   #(ver:78)
                                               
      FOREACH b_fill_cs3 USING g_enterprise,g_rtil_m.rtildocno INTO g_rtim3_d[l_ac].xrcd007,g_rtim3_d[l_ac].xrcdld, 
          g_rtim3_d[l_ac].xrcdseq,g_rtim3_d[l_ac].xrcdseq2,g_rtim3_d[l_ac].xrcd002,g_rtim3_d[l_ac].xrcd003, 
          g_rtim3_d[l_ac].xrcd006,g_rtim3_d[l_ac].xrcd004,g_rtim3_d[l_ac].xrcd104   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill3.fill"
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF artt500_fill_chk(4) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body4.long_sql_if"
         {<point name="b_fill.body4.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtieseq,rtieseq1,rtie001,rtie002,rtie006 ,t6.ooial003 FROM rtie_t", 
                
                     " INNER JOIN  rtil_t ON rtilent = " ||g_enterprise|| " AND rtildocno = rtiedocno ",
 
                     "",
                     
                                    " LEFT JOIN ooial_t t6 ON t6.ooialent="||g_enterprise||" AND t6.ooial001=rtie002 AND t6.ooial002='"||g_dlang||"' ",
 
                     " WHERE rtieent=? AND rtiedocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body4.fill_sql"
         {<point name="b_fill.body4.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtie_t.rtieseq,rtie_t.rtieseq1"
         
         #add-point:單身填充控制 name="b_fill.sql4"
         {<point name="b_fill.sql4"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt500_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR artt500_pb4
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs4 USING g_enterprise,g_rtil_m.rtildocno   #(ver:78)
                                               
      FOREACH b_fill_cs4 USING g_enterprise,g_rtil_m.rtildocno INTO g_rtim4_d[l_ac].rtieseq,g_rtim4_d[l_ac].rtieseq1, 
          g_rtim4_d[l_ac].rtie001,g_rtim4_d[l_ac].rtie002,g_rtim4_d[l_ac].rtie006,g_rtim4_d[l_ac].rtie002_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill4.fill"
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF artt500_fill_chk(5) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body5.long_sql_if"
         {<point name="b_fill.body5.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtiksite,rtikunit,rtikorg,rtikseq,rtik001,rtik002,rtik003,rtik004, 
             rtik005,rtik006,rtik007,rtik013,rtik012,rtik008,rtik009,rtik010,rtik011,rtik014,rtik015, 
             rtik016,rtik017,rtik018,rtik019,rtik020,rtik021,rtik022,rtik023 ,t7.prbo005 ,t8.oocal003 , 
             t9.inayl003 ,t10.inab003 FROM rtik_t",   
                     " INNER JOIN  rtil_t ON rtilent = " ||g_enterprise|| " AND rtildocno = rtikdocno ",
 
                     "",
                     
                                    " LEFT JOIN prbo_t t7 ON t7.prboent="||g_enterprise||" AND t7.prbo004=rtik003  ",
               " LEFT JOIN oocal_t t8 ON t8.oocalent="||g_enterprise||" AND t8.oocal001=rtik013 AND t8.oocal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t9 ON t9.inaylent="||g_enterprise||" AND t9.inayl001=rtik019 AND t9.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t10 ON t10.inabent="||g_enterprise||" AND t10.inabsite=rtiksite AND t10.inab001=rtik019 AND t10.inab002=rtik020  ",
 
                     " WHERE rtikent=? AND rtikdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body5.fill_sql"
         {<point name="b_fill.body5.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table5) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table5 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtik_t.rtikseq"
         
         #add-point:單身填充控制 name="b_fill.sql5"
         {<point name="b_fill.sql5"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt500_pb5 FROM g_sql
         DECLARE b_fill_cs5 CURSOR FOR artt500_pb5
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs5 USING g_enterprise,g_rtil_m.rtildocno   #(ver:78)
                                               
      FOREACH b_fill_cs5 USING g_enterprise,g_rtil_m.rtildocno INTO g_rtim5_d[l_ac].rtiksite,g_rtim5_d[l_ac].rtikunit, 
          g_rtim5_d[l_ac].rtikorg,g_rtim5_d[l_ac].rtikseq,g_rtim5_d[l_ac].rtik001,g_rtim5_d[l_ac].rtik002, 
          g_rtim5_d[l_ac].rtik003,g_rtim5_d[l_ac].rtik004,g_rtim5_d[l_ac].rtik005,g_rtim5_d[l_ac].rtik006, 
          g_rtim5_d[l_ac].rtik007,g_rtim5_d[l_ac].rtik013,g_rtim5_d[l_ac].rtik012,g_rtim5_d[l_ac].rtik008, 
          g_rtim5_d[l_ac].rtik009,g_rtim5_d[l_ac].rtik010,g_rtim5_d[l_ac].rtik011,g_rtim5_d[l_ac].rtik014, 
          g_rtim5_d[l_ac].rtik015,g_rtim5_d[l_ac].rtik016,g_rtim5_d[l_ac].rtik017,g_rtim5_d[l_ac].rtik018, 
          g_rtim5_d[l_ac].rtik019,g_rtim5_d[l_ac].rtik020,g_rtim5_d[l_ac].rtik021,g_rtim5_d[l_ac].rtik022, 
          g_rtim5_d[l_ac].rtik023,g_rtim5_d[l_ac].rtik003_desc,g_rtim5_d[l_ac].rtik013_desc,g_rtim5_d[l_ac].rtik019_desc, 
          g_rtim5_d[l_ac].rtik020_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill5.fill"
         {<point name="b_fill5.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_rtim_d.deleteElement(g_rtim_d.getLength())
   CALL g_rtim2_d.deleteElement(g_rtim2_d.getLength())
   CALL g_rtim3_d.deleteElement(g_rtim3_d.getLength())
   CALL g_rtim4_d.deleteElement(g_rtim4_d.getLength())
   CALL g_rtim5_d.deleteElement(g_rtim5_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE artt500_pb
   FREE artt500_pb2
 
   FREE artt500_pb3
 
   FREE artt500_pb4
 
   FREE artt500_pb5
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_rtim_d.getLength()
      LET g_rtim_d_mask_o[l_ac].* =  g_rtim_d[l_ac].*
      CALL artt500_rtim_t_mask()
      LET g_rtim_d_mask_n[l_ac].* =  g_rtim_d[l_ac].*
   END FOR
   
   LET g_rtim2_d_mask_o.* =  g_rtim2_d.*
   FOR l_ac = 1 TO g_rtim2_d.getLength()
      LET g_rtim2_d_mask_o[l_ac].* =  g_rtim2_d[l_ac].*
      CALL artt500_rtic_t_mask()
      LET g_rtim2_d_mask_n[l_ac].* =  g_rtim2_d[l_ac].*
   END FOR
   LET g_rtim3_d_mask_o.* =  g_rtim3_d.*
   FOR l_ac = 1 TO g_rtim3_d.getLength()
      LET g_rtim3_d_mask_o[l_ac].* =  g_rtim3_d[l_ac].*
      CALL artt500_xrcd_t_mask()
      LET g_rtim3_d_mask_n[l_ac].* =  g_rtim3_d[l_ac].*
   END FOR
   LET g_rtim4_d_mask_o.* =  g_rtim4_d.*
   FOR l_ac = 1 TO g_rtim4_d.getLength()
      LET g_rtim4_d_mask_o[l_ac].* =  g_rtim4_d[l_ac].*
      CALL artt500_rtie_t_mask()
      LET g_rtim4_d_mask_n[l_ac].* =  g_rtim4_d[l_ac].*
   END FOR
   LET g_rtim5_d_mask_o.* =  g_rtim5_d.*
   FOR l_ac = 1 TO g_rtim5_d.getLength()
      LET g_rtim5_d_mask_o[l_ac].* =  g_rtim5_d[l_ac].*
      CALL artt500_rtik_t_mask()
      LET g_rtim5_d_mask_n[l_ac].* =  g_rtim5_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION

{</section>}

{<section id="artt500.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION artt500_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   {<point name="delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   {<point name="delete_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   {<point name="delete_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM rtim_t
       WHERE rtiment = g_enterprise AND
         rtimdocno = ps_keys_bak[1] AND rtimseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtim_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM rtic_t
       WHERE rticent = g_enterprise AND
             rticdocno = ps_keys_bak[1] AND rticseq = ps_keys_bak[2] AND rticseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_rtim2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete3"
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM xrcd_t
       WHERE xrcdent = g_enterprise AND
             xrcddocno = ps_keys_bak[1] AND xrcdld = ps_keys_bak[2] AND xrcdseq = ps_keys_bak[3] AND xrcdseq2 = ps_keys_bak[4] AND xrcd007 = ps_keys_bak[5]
      #add-point:delete_b段刪除中 name="delete_b.m_delete3"
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_rtim3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete3"
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete4"
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM rtie_t
       WHERE rtieent = g_enterprise AND
             rtiedocno = ps_keys_bak[1] AND rtieseq = ps_keys_bak[2] AND rtieseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete4"
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_rtim4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete4"
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete5"
      {<point name="delete_b.b_delete5" mark="Y"/>}
      #end add-point    
      DELETE FROM rtik_t
       WHERE rtikent = g_enterprise AND
             rtikdocno = ps_keys_bak[1] AND rtikseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete5"
      {<point name="delete_b.m_delete5"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtik_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_rtim5_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete5"
      {<point name="delete_b.a_delete5"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="artt500.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION artt500_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   {<point name="insert_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   {<point name="insert_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   {<point name="insert_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO rtim_t
                  (rtiment,
                   rtimdocno,
                   rtimseq
                   ,rtimsite,rtimunit,rtimorga,rtim003,rtim004,rtim005,rtim006,rtim008,rtim009,rtim010,rtim012,rtim013,rtim014,rtim015,rtim016,rtim018,rtim017,rtim019,rtim020,rtim021,rtim029,rtim022,rtim024,rtim025,rtim026,rtim027,rtim028) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtim_d[g_detail_idx].rtimsite,g_rtim_d[g_detail_idx].rtimunit,g_rtim_d[g_detail_idx].rtimorga, 
                       g_rtim_d[g_detail_idx].rtim003,g_rtim_d[g_detail_idx].rtim004,g_rtim_d[g_detail_idx].rtim005, 
                       g_rtim_d[g_detail_idx].rtim006,g_rtim_d[g_detail_idx].rtim008,g_rtim_d[g_detail_idx].rtim009, 
                       g_rtim_d[g_detail_idx].rtim010,g_rtim_d[g_detail_idx].rtim012,g_rtim_d[g_detail_idx].rtim013, 
                       g_rtim_d[g_detail_idx].rtim014,g_rtim_d[g_detail_idx].rtim015,g_rtim_d[g_detail_idx].rtim016, 
                       g_rtim_d[g_detail_idx].rtim018,g_rtim_d[g_detail_idx].rtim017,g_rtim_d[g_detail_idx].rtim019, 
                       g_rtim_d[g_detail_idx].rtim020,g_rtim_d[g_detail_idx].rtim021,g_rtim_d[g_detail_idx].rtim029, 
                       g_rtim_d[g_detail_idx].rtim022,g_rtim_d[g_detail_idx].rtim024,g_rtim_d[g_detail_idx].rtim025, 
                       g_rtim_d[g_detail_idx].rtim026,g_rtim_d[g_detail_idx].rtim027,g_rtim_d[g_detail_idx].rtim028) 

      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtim_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtim_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO rtic_t
                  (rticent,
                   rticdocno,
                   rticseq,rticseq1
                   ,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007,rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic020) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_rtim2_d[g_detail_idx].rtic001,g_rtim2_d[g_detail_idx].rtic002,g_rtim2_d[g_detail_idx].rtic003, 
                       g_rtim2_d[g_detail_idx].rtic004,g_rtim2_d[g_detail_idx].rtic005,g_rtim2_d[g_detail_idx].rtic006, 
                       g_rtim2_d[g_detail_idx].rtic007,g_rtim2_d[g_detail_idx].rtic008,g_rtim2_d[g_detail_idx].rtic009, 
                       g_rtim2_d[g_detail_idx].rtic010,g_rtim2_d[g_detail_idx].rtic011,g_rtim2_d[g_detail_idx].rtic012, 
                       g_rtim2_d[g_detail_idx].rtic013,g_rtim2_d[g_detail_idx].rtic014,g_rtim2_d[g_detail_idx].rtic015, 
                       g_rtim2_d[g_detail_idx].rtic016,g_rtim2_d[g_detail_idx].rtic017,g_rtim2_d[g_detail_idx].rtic018, 
                       g_rtim2_d[g_detail_idx].rtic020)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_rtim2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert3"
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO xrcd_t
                  (xrcdent,
                   xrcddocno,
                   xrcdld,xrcdseq,xrcdseq2,xrcd007
                   ,xrcd002,xrcd003,xrcd006,xrcd004,xrcd104) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
                   ,g_rtim3_d[g_detail_idx].xrcd002,g_rtim3_d[g_detail_idx].xrcd003,g_rtim3_d[g_detail_idx].xrcd006, 
                       g_rtim3_d[g_detail_idx].xrcd004,g_rtim3_d[g_detail_idx].xrcd104)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert3"
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_rtim3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert3"
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert4"
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO rtie_t
                  (rtieent,
                   rtiedocno,
                   rtieseq,rtieseq1
                   ,rtie001,rtie002,rtie006) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_rtim4_d[g_detail_idx].rtie001,g_rtim4_d[g_detail_idx].rtie002,g_rtim4_d[g_detail_idx].rtie006) 

      #add-point:insert_b段資料新增中 name="insert_b.m_insert4"
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_rtim4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert4"
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert5"
      {<point name="insert_b.before_insert5" mark="Y"/>}
      #end add-point 
      INSERT INTO rtik_t
                  (rtikent,
                   rtikdocno,
                   rtikseq
                   ,rtiksite,rtikunit,rtikorg,rtik001,rtik002,rtik003,rtik004,rtik005,rtik006,rtik007,rtik013,rtik012,rtik008,rtik009,rtik010,rtik011,rtik014,rtik015,rtik016,rtik017,rtik018,rtik019,rtik020,rtik021,rtik022,rtik023) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtim5_d[g_detail_idx].rtiksite,g_rtim5_d[g_detail_idx].rtikunit,g_rtim5_d[g_detail_idx].rtikorg, 
                       g_rtim5_d[g_detail_idx].rtik001,g_rtim5_d[g_detail_idx].rtik002,g_rtim5_d[g_detail_idx].rtik003, 
                       g_rtim5_d[g_detail_idx].rtik004,g_rtim5_d[g_detail_idx].rtik005,g_rtim5_d[g_detail_idx].rtik006, 
                       g_rtim5_d[g_detail_idx].rtik007,g_rtim5_d[g_detail_idx].rtik013,g_rtim5_d[g_detail_idx].rtik012, 
                       g_rtim5_d[g_detail_idx].rtik008,g_rtim5_d[g_detail_idx].rtik009,g_rtim5_d[g_detail_idx].rtik010, 
                       g_rtim5_d[g_detail_idx].rtik011,g_rtim5_d[g_detail_idx].rtik014,g_rtim5_d[g_detail_idx].rtik015, 
                       g_rtim5_d[g_detail_idx].rtik016,g_rtim5_d[g_detail_idx].rtik017,g_rtim5_d[g_detail_idx].rtik018, 
                       g_rtim5_d[g_detail_idx].rtik019,g_rtim5_d[g_detail_idx].rtik020,g_rtim5_d[g_detail_idx].rtik021, 
                       g_rtim5_d[g_detail_idx].rtik022,g_rtim5_d[g_detail_idx].rtik023)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert5"
      {<point name="insert_b.m_insert5"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtik_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_rtim5_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert5"
      {<point name="insert_b.after_insert5"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION

{</section>}

{<section id="artt500.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION artt500_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   {<point name="update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   {<point name="update_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   {<point name="update_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtim_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL artt500_rtim_t_mask_restore('restore_mask_o')
               
      UPDATE rtim_t 
         SET (rtimdocno,
              rtimseq
              ,rtimsite,rtimunit,rtimorga,rtim003,rtim004,rtim005,rtim006,rtim008,rtim009,rtim010,rtim012,rtim013,rtim014,rtim015,rtim016,rtim018,rtim017,rtim019,rtim020,rtim021,rtim029,rtim022,rtim024,rtim025,rtim026,rtim027,rtim028) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtim_d[g_detail_idx].rtimsite,g_rtim_d[g_detail_idx].rtimunit,g_rtim_d[g_detail_idx].rtimorga, 
                  g_rtim_d[g_detail_idx].rtim003,g_rtim_d[g_detail_idx].rtim004,g_rtim_d[g_detail_idx].rtim005, 
                  g_rtim_d[g_detail_idx].rtim006,g_rtim_d[g_detail_idx].rtim008,g_rtim_d[g_detail_idx].rtim009, 
                  g_rtim_d[g_detail_idx].rtim010,g_rtim_d[g_detail_idx].rtim012,g_rtim_d[g_detail_idx].rtim013, 
                  g_rtim_d[g_detail_idx].rtim014,g_rtim_d[g_detail_idx].rtim015,g_rtim_d[g_detail_idx].rtim016, 
                  g_rtim_d[g_detail_idx].rtim018,g_rtim_d[g_detail_idx].rtim017,g_rtim_d[g_detail_idx].rtim019, 
                  g_rtim_d[g_detail_idx].rtim020,g_rtim_d[g_detail_idx].rtim021,g_rtim_d[g_detail_idx].rtim029, 
                  g_rtim_d[g_detail_idx].rtim022,g_rtim_d[g_detail_idx].rtim024,g_rtim_d[g_detail_idx].rtim025, 
                  g_rtim_d[g_detail_idx].rtim026,g_rtim_d[g_detail_idx].rtim027,g_rtim_d[g_detail_idx].rtim028)  

         WHERE rtiment = g_enterprise AND rtimdocno = ps_keys_bak[1] AND rtimseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtim_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtim_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt500_rtim_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtic_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL artt500_rtic_t_mask_restore('restore_mask_o')
               
      UPDATE rtic_t 
         SET (rticdocno,
              rticseq,rticseq1
              ,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007,rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic020) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_rtim2_d[g_detail_idx].rtic001,g_rtim2_d[g_detail_idx].rtic002,g_rtim2_d[g_detail_idx].rtic003, 
                  g_rtim2_d[g_detail_idx].rtic004,g_rtim2_d[g_detail_idx].rtic005,g_rtim2_d[g_detail_idx].rtic006, 
                  g_rtim2_d[g_detail_idx].rtic007,g_rtim2_d[g_detail_idx].rtic008,g_rtim2_d[g_detail_idx].rtic009, 
                  g_rtim2_d[g_detail_idx].rtic010,g_rtim2_d[g_detail_idx].rtic011,g_rtim2_d[g_detail_idx].rtic012, 
                  g_rtim2_d[g_detail_idx].rtic013,g_rtim2_d[g_detail_idx].rtic014,g_rtim2_d[g_detail_idx].rtic015, 
                  g_rtim2_d[g_detail_idx].rtic016,g_rtim2_d[g_detail_idx].rtic017,g_rtim2_d[g_detail_idx].rtic018, 
                  g_rtim2_d[g_detail_idx].rtic020) 
         WHERE rticent = g_enterprise AND rticdocno = ps_keys_bak[1] AND rticseq = ps_keys_bak[2] AND rticseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update2"
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtic_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt500_rtic_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xrcd_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update3"
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL artt500_xrcd_t_mask_restore('restore_mask_o')
               
      UPDATE xrcd_t 
         SET (xrcddocno,
              xrcdld,xrcdseq,xrcdseq2,xrcd007
              ,xrcd002,xrcd003,xrcd006,xrcd004,xrcd104) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
              ,g_rtim3_d[g_detail_idx].xrcd002,g_rtim3_d[g_detail_idx].xrcd003,g_rtim3_d[g_detail_idx].xrcd006, 
                  g_rtim3_d[g_detail_idx].xrcd004,g_rtim3_d[g_detail_idx].xrcd104) 
         WHERE xrcdent = g_enterprise AND xrcddocno = ps_keys_bak[1] AND xrcdld = ps_keys_bak[2] AND xrcdseq = ps_keys_bak[3] AND xrcdseq2 = ps_keys_bak[4] AND xrcd007 = ps_keys_bak[5]
      #add-point:update_b段修改中 name="update_b.m_update3"
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xrcd_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt500_xrcd_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update3"
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtie_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update4"
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL artt500_rtie_t_mask_restore('restore_mask_o')
               
      UPDATE rtie_t 
         SET (rtiedocno,
              rtieseq,rtieseq1
              ,rtie001,rtie002,rtie006) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_rtim4_d[g_detail_idx].rtie001,g_rtim4_d[g_detail_idx].rtie002,g_rtim4_d[g_detail_idx].rtie006)  

         WHERE rtieent = g_enterprise AND rtiedocno = ps_keys_bak[1] AND rtieseq = ps_keys_bak[2] AND rtieseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update4"
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtie_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt500_rtie_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update4"
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtik_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update5"
      {<point name="update_b.before_update5" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL artt500_rtik_t_mask_restore('restore_mask_o')
               
      UPDATE rtik_t 
         SET (rtikdocno,
              rtikseq
              ,rtiksite,rtikunit,rtikorg,rtik001,rtik002,rtik003,rtik004,rtik005,rtik006,rtik007,rtik013,rtik012,rtik008,rtik009,rtik010,rtik011,rtik014,rtik015,rtik016,rtik017,rtik018,rtik019,rtik020,rtik021,rtik022,rtik023) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtim5_d[g_detail_idx].rtiksite,g_rtim5_d[g_detail_idx].rtikunit,g_rtim5_d[g_detail_idx].rtikorg, 
                  g_rtim5_d[g_detail_idx].rtik001,g_rtim5_d[g_detail_idx].rtik002,g_rtim5_d[g_detail_idx].rtik003, 
                  g_rtim5_d[g_detail_idx].rtik004,g_rtim5_d[g_detail_idx].rtik005,g_rtim5_d[g_detail_idx].rtik006, 
                  g_rtim5_d[g_detail_idx].rtik007,g_rtim5_d[g_detail_idx].rtik013,g_rtim5_d[g_detail_idx].rtik012, 
                  g_rtim5_d[g_detail_idx].rtik008,g_rtim5_d[g_detail_idx].rtik009,g_rtim5_d[g_detail_idx].rtik010, 
                  g_rtim5_d[g_detail_idx].rtik011,g_rtim5_d[g_detail_idx].rtik014,g_rtim5_d[g_detail_idx].rtik015, 
                  g_rtim5_d[g_detail_idx].rtik016,g_rtim5_d[g_detail_idx].rtik017,g_rtim5_d[g_detail_idx].rtik018, 
                  g_rtim5_d[g_detail_idx].rtik019,g_rtim5_d[g_detail_idx].rtik020,g_rtim5_d[g_detail_idx].rtik021, 
                  g_rtim5_d[g_detail_idx].rtik022,g_rtim5_d[g_detail_idx].rtik023) 
         WHERE rtikent = g_enterprise AND rtikdocno = ps_keys_bak[1] AND rtikseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update5"
      {<point name="update_b.m_update5"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtik_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtik_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt500_rtik_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update5"
      {<point name="update_b.after_update5"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="artt500.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION artt500_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   {<point name="key_update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   {<point name="key_update_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   {<point name="key_update_b.pre_function"/>}
   #end add-point
   
 
   
END FUNCTION

{</section>}

{<section id="artt500.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION artt500_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   {<point name="key_delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   {<point name="key_delete_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   {<point name="key_delete_b.pre_function"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="artt500.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION artt500_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   {<point name="lock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   {<point name="lock_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   {<point name="lock_b.pre_function"/>}
   #end add-point
    
   #先刷新資料
   #CALL artt500_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "rtim_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN artt500_bcl USING g_enterprise,
                                       g_rtil_m.rtildocno,g_rtim_d[g_detail_idx].rtimseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt500_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "rtic_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artt500_bcl2 USING g_enterprise,
                                             g_rtil_m.rtildocno,g_rtim2_d[g_detail_idx].rticseq,g_rtim2_d[g_detail_idx].rticseq1 

      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt500_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "xrcd_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artt500_bcl3 USING g_enterprise,
                                             g_rtil_m.rtildocno,g_rtim3_d[g_detail_idx].xrcdld,g_rtim3_d[g_detail_idx].xrcdseq, 
                                                 g_rtim3_d[g_detail_idx].xrcdseq2,g_rtim3_d[g_detail_idx].xrcd007 

      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt500_bcl3:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "rtie_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artt500_bcl4 USING g_enterprise,
                                             g_rtil_m.rtildocno,g_rtim4_d[g_detail_idx].rtieseq,g_rtim4_d[g_detail_idx].rtieseq1 

      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt500_bcl4:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'5',"
   #僅鎖定自身table
   LET ls_group = "rtik_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artt500_bcl5 USING g_enterprise,
                                             g_rtil_m.rtildocno,g_rtim5_d[g_detail_idx].rtikseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt500_bcl5:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="artt500.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION artt500_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   {<point name="unlock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   {<point name="unlock_b.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   {<point name="unlock_b.pre_function"/>}
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt500_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt500_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt500_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt500_bcl4
   END IF
 
   LET ls_group = "'5',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt500_bcl5
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="artt500.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION artt500_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   {<point name="set_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   {<point name="set_entry.define"/>} 
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   {<point name="set_entry.pre_function"/>}
   #end add-point
   
   CALL cl_set_comp_entry("rtildocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("rtildocno",TRUE)
      CALL cl_set_comp_entry("rtildocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="artt500.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION artt500_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   {<point name="set_no_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   {<point name="set_no_entry.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   {<point name="set_no_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("rtildocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("rtildocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("rtildocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="artt500.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION artt500_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   {<point name="set_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   {<point name="set_entry_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   {<point name="set_entry_b.pre_function"/>}
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION

{</section>}

{<section id="artt500.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION artt500_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   {<point name="set_no_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   {<point name="set_no_entry_b.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   {<point name="set_no_entry_b.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION

{</section>}

{<section id="artt500.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION artt500_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   {<point name="set_act_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   {<point name="set_act_visible.define"/>} 
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="artt500.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION artt500_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   {<point name="set_act_no_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   {<point name="set_act_no_visible.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="artt500.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION artt500_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   {<point name="set_act_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   {<point name="set_act_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="artt500.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION artt500_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   {<point name="set_act_no_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   {<point name="set_act_no_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="artt500.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION artt500_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " rtildocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
         INITIALIZE g_wc2_table4 TO NULL
 
         INITIALIZE g_wc2_table5 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "rtil_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtim_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtic_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xrcd_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "rtie_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "rtik_t" 
                  LET g_wc2_table5 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
            OR NOT cl_null(g_wc2_table4)
 
            OR NOT cl_null(g_wc2_table5)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF
 
            IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION

{</section>}

{<section id="artt500.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION artt500_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   {<point name="statechange.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_rtil_m.rtildocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN artt500_cl USING g_enterprise,g_rtil_m.rtildocno
   IF STATUS THEN
      CLOSE artt500_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt500_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE artt500_master_referesh USING g_rtil_m.rtildocno INTO g_rtil_m.rtilsite,g_rtil_m.rtildocdt, 
       g_rtil_m.rtildocno,g_rtil_m.rtil042,g_rtil_m.rtil001,g_rtil_m.rtil002,g_rtil_m.rtil004,g_rtil_m.rtil005, 
       g_rtil_m.rtil037,g_rtil_m.rtilstus,g_rtil_m.rtil041,g_rtil_m.rtil007,g_rtil_m.rtil008,g_rtil_m.rtil009, 
       g_rtil_m.rtil010,g_rtil_m.rtil011,g_rtil_m.rtil012,g_rtil_m.rtil013,g_rtil_m.rtil006,g_rtil_m.rtil038, 
       g_rtil_m.rtil014,g_rtil_m.rtil020,g_rtil_m.rtil021,g_rtil_m.rtil015,g_rtil_m.rtil018,g_rtil_m.rtil019, 
       g_rtil_m.rtil016,g_rtil_m.rtil017,g_rtil_m.rtil022,g_rtil_m.rtil023,g_rtil_m.rtil024,g_rtil_m.rtil025, 
       g_rtil_m.rtil026,g_rtil_m.rtil027,g_rtil_m.rtil040,g_rtil_m.rtil039,g_rtil_m.rtil029,g_rtil_m.rtil030, 
       g_rtil_m.rtil031,g_rtil_m.rtil032,g_rtil_m.rtil033,g_rtil_m.rtil034,g_rtil_m.rtil035,g_rtil_m.rtil036, 
       g_rtil_m.rtilownid,g_rtil_m.rtilowndp,g_rtil_m.rtilcrtid,g_rtil_m.rtilcrtdp,g_rtil_m.rtilcrtdt, 
       g_rtil_m.rtilmodid,g_rtil_m.rtilmoddt,g_rtil_m.rtilcnfid,g_rtil_m.rtilcnfdt,g_rtil_m.rtilsite_desc, 
       g_rtil_m.rtil002_desc,g_rtil_m.rtil004_desc,g_rtil_m.rtil005_desc,g_rtil_m.rtil007_desc,g_rtil_m.rtil008_desc, 
       g_rtil_m.rtil009_desc,g_rtil_m.rtil006_desc,g_rtil_m.rtil021_desc,g_rtil_m.rtil015_desc,g_rtil_m.rtil022_desc, 
       g_rtil_m.rtil033_desc,g_rtil_m.rtil034_desc,g_rtil_m.rtil035_desc,g_rtil_m.rtilownid_desc,g_rtil_m.rtilowndp_desc, 
       g_rtil_m.rtilcrtid_desc,g_rtil_m.rtilcrtdp_desc,g_rtil_m.rtilmodid_desc,g_rtil_m.rtilcnfid_desc 

   
 
   #檢查是否允許此動作
   IF NOT artt500_action_chk() THEN
      CLOSE artt500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtil_m.rtilsite,g_rtil_m.rtilsite_desc,g_rtil_m.rtildocdt,g_rtil_m.rtildocno,g_rtil_m.rtil042, 
       g_rtil_m.rtil001,g_rtil_m.rtil001_desc,g_rtil_m.rtil002,g_rtil_m.rtil002_desc,g_rtil_m.rtil004, 
       g_rtil_m.rtil004_desc,g_rtil_m.rtil005,g_rtil_m.rtil005_desc,g_rtil_m.rtil037,g_rtil_m.rtilstus, 
       g_rtil_m.rtil041,g_rtil_m.rtil007,g_rtil_m.rtil007_desc,g_rtil_m.rtil008,g_rtil_m.rtil008_desc, 
       g_rtil_m.rtil009,g_rtil_m.rtil009_desc,g_rtil_m.rtil010,g_rtil_m.rtil011,g_rtil_m.rtil012,g_rtil_m.rtil013, 
       g_rtil_m.rtil006,g_rtil_m.rtil006_desc,g_rtil_m.rtil038,g_rtil_m.rtil014,g_rtil_m.rtil020,g_rtil_m.rtil021, 
       g_rtil_m.rtil021_desc,g_rtil_m.rtil015,g_rtil_m.rtil015_desc,g_rtil_m.rtil018,g_rtil_m.rtil019, 
       g_rtil_m.rtil016,g_rtil_m.rtil017,g_rtil_m.rtil022,g_rtil_m.rtil022_desc,g_rtil_m.rtil023,g_rtil_m.rtil024, 
       g_rtil_m.rtil025,g_rtil_m.rtil026,g_rtil_m.rtil027,g_rtil_m.rtil040,g_rtil_m.rtil039,g_rtil_m.rtil029, 
       g_rtil_m.rtil030,g_rtil_m.rtil031,g_rtil_m.rtil032,g_rtil_m.rtil033,g_rtil_m.rtil033_desc,g_rtil_m.rtil034, 
       g_rtil_m.rtil034_desc,g_rtil_m.rtil035,g_rtil_m.rtil035_desc,g_rtil_m.rtil036,g_rtil_m.isaf009, 
       g_rtil_m.isaf010,g_rtil_m.isaf044,g_rtil_m.isaf202,g_rtil_m.isaf203,g_rtil_m.isaf204,g_rtil_m.isaf201, 
       g_rtil_m.isaf207,g_rtil_m.rtilownid,g_rtil_m.rtilownid_desc,g_rtil_m.rtilowndp,g_rtil_m.rtilowndp_desc, 
       g_rtil_m.rtilcrtid,g_rtil_m.rtilcrtid_desc,g_rtil_m.rtilcrtdp,g_rtil_m.rtilcrtdp_desc,g_rtil_m.rtilcrtdt, 
       g_rtil_m.rtilmodid,g_rtil_m.rtilmodid_desc,g_rtil_m.rtilmoddt,g_rtil_m.rtilcnfid,g_rtil_m.rtilcnfid_desc, 
       g_rtil_m.rtilcnfdt,g_rtil_m.snum,g_rtil_m.amount,g_rtil_m.amount2,g_rtil_m.amount3
 
   CASE g_rtil_m.rtilstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "C"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_rtil_m.rtilstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "C"
               HIDE OPTION "closed"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION closed
         IF cl_auth_chk_act("closed") THEN
            LET lc_state = "C"
            #add-point:action控制 name="statechange.closed"
            {<point name="statechange.closed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "C"
      AND lc_state <> "X"
      ) OR 
      g_rtil_m.rtilstus = lc_state OR cl_null(lc_state) THEN
      CLOSE artt500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_rtil_m.rtilmodid = g_user
   LET g_rtil_m.rtilmoddt = cl_get_current()
   LET g_rtil_m.rtilstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE rtil_t 
      SET (rtilstus,rtilmodid,rtilmoddt) 
        = (g_rtil_m.rtilstus,g_rtil_m.rtilmodid,g_rtil_m.rtilmoddt)     
    WHERE rtilent = g_enterprise AND rtildocno = g_rtil_m.rtildocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE artt500_master_referesh USING g_rtil_m.rtildocno INTO g_rtil_m.rtilsite,g_rtil_m.rtildocdt, 
          g_rtil_m.rtildocno,g_rtil_m.rtil042,g_rtil_m.rtil001,g_rtil_m.rtil002,g_rtil_m.rtil004,g_rtil_m.rtil005, 
          g_rtil_m.rtil037,g_rtil_m.rtilstus,g_rtil_m.rtil041,g_rtil_m.rtil007,g_rtil_m.rtil008,g_rtil_m.rtil009, 
          g_rtil_m.rtil010,g_rtil_m.rtil011,g_rtil_m.rtil012,g_rtil_m.rtil013,g_rtil_m.rtil006,g_rtil_m.rtil038, 
          g_rtil_m.rtil014,g_rtil_m.rtil020,g_rtil_m.rtil021,g_rtil_m.rtil015,g_rtil_m.rtil018,g_rtil_m.rtil019, 
          g_rtil_m.rtil016,g_rtil_m.rtil017,g_rtil_m.rtil022,g_rtil_m.rtil023,g_rtil_m.rtil024,g_rtil_m.rtil025, 
          g_rtil_m.rtil026,g_rtil_m.rtil027,g_rtil_m.rtil040,g_rtil_m.rtil039,g_rtil_m.rtil029,g_rtil_m.rtil030, 
          g_rtil_m.rtil031,g_rtil_m.rtil032,g_rtil_m.rtil033,g_rtil_m.rtil034,g_rtil_m.rtil035,g_rtil_m.rtil036, 
          g_rtil_m.rtilownid,g_rtil_m.rtilowndp,g_rtil_m.rtilcrtid,g_rtil_m.rtilcrtdp,g_rtil_m.rtilcrtdt, 
          g_rtil_m.rtilmodid,g_rtil_m.rtilmoddt,g_rtil_m.rtilcnfid,g_rtil_m.rtilcnfdt,g_rtil_m.rtilsite_desc, 
          g_rtil_m.rtil002_desc,g_rtil_m.rtil004_desc,g_rtil_m.rtil005_desc,g_rtil_m.rtil007_desc,g_rtil_m.rtil008_desc, 
          g_rtil_m.rtil009_desc,g_rtil_m.rtil006_desc,g_rtil_m.rtil021_desc,g_rtil_m.rtil015_desc,g_rtil_m.rtil022_desc, 
          g_rtil_m.rtil033_desc,g_rtil_m.rtil034_desc,g_rtil_m.rtil035_desc,g_rtil_m.rtilownid_desc, 
          g_rtil_m.rtilowndp_desc,g_rtil_m.rtilcrtid_desc,g_rtil_m.rtilcrtdp_desc,g_rtil_m.rtilmodid_desc, 
          g_rtil_m.rtilcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_rtil_m.rtilsite,g_rtil_m.rtilsite_desc,g_rtil_m.rtildocdt,g_rtil_m.rtildocno, 
          g_rtil_m.rtil042,g_rtil_m.rtil001,g_rtil_m.rtil001_desc,g_rtil_m.rtil002,g_rtil_m.rtil002_desc, 
          g_rtil_m.rtil004,g_rtil_m.rtil004_desc,g_rtil_m.rtil005,g_rtil_m.rtil005_desc,g_rtil_m.rtil037, 
          g_rtil_m.rtilstus,g_rtil_m.rtil041,g_rtil_m.rtil007,g_rtil_m.rtil007_desc,g_rtil_m.rtil008, 
          g_rtil_m.rtil008_desc,g_rtil_m.rtil009,g_rtil_m.rtil009_desc,g_rtil_m.rtil010,g_rtil_m.rtil011, 
          g_rtil_m.rtil012,g_rtil_m.rtil013,g_rtil_m.rtil006,g_rtil_m.rtil006_desc,g_rtil_m.rtil038, 
          g_rtil_m.rtil014,g_rtil_m.rtil020,g_rtil_m.rtil021,g_rtil_m.rtil021_desc,g_rtil_m.rtil015, 
          g_rtil_m.rtil015_desc,g_rtil_m.rtil018,g_rtil_m.rtil019,g_rtil_m.rtil016,g_rtil_m.rtil017, 
          g_rtil_m.rtil022,g_rtil_m.rtil022_desc,g_rtil_m.rtil023,g_rtil_m.rtil024,g_rtil_m.rtil025, 
          g_rtil_m.rtil026,g_rtil_m.rtil027,g_rtil_m.rtil040,g_rtil_m.rtil039,g_rtil_m.rtil029,g_rtil_m.rtil030, 
          g_rtil_m.rtil031,g_rtil_m.rtil032,g_rtil_m.rtil033,g_rtil_m.rtil033_desc,g_rtil_m.rtil034, 
          g_rtil_m.rtil034_desc,g_rtil_m.rtil035,g_rtil_m.rtil035_desc,g_rtil_m.rtil036,g_rtil_m.isaf009, 
          g_rtil_m.isaf010,g_rtil_m.isaf044,g_rtil_m.isaf202,g_rtil_m.isaf203,g_rtil_m.isaf204,g_rtil_m.isaf201, 
          g_rtil_m.isaf207,g_rtil_m.rtilownid,g_rtil_m.rtilownid_desc,g_rtil_m.rtilowndp,g_rtil_m.rtilowndp_desc, 
          g_rtil_m.rtilcrtid,g_rtil_m.rtilcrtid_desc,g_rtil_m.rtilcrtdp,g_rtil_m.rtilcrtdp_desc,g_rtil_m.rtilcrtdt, 
          g_rtil_m.rtilmodid,g_rtil_m.rtilmodid_desc,g_rtil_m.rtilmoddt,g_rtil_m.rtilcnfid,g_rtil_m.rtilcnfid_desc, 
          g_rtil_m.rtilcnfdt,g_rtil_m.snum,g_rtil_m.amount,g_rtil_m.amount2,g_rtil_m.amount3
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE artt500_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artt500_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 

{</section>}

{<section id="artt500.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION artt500_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   {<point name="idx_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   {<point name="idx_chk.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   {<point name="idx_chk.pre_function"/>}
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_rtim_d.getLength() THEN
         LET g_detail_idx = g_rtim_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtim_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtim_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_rtim2_d.getLength() THEN
         LET g_detail_idx = g_rtim2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtim2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtim2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_rtim3_d.getLength() THEN
         LET g_detail_idx = g_rtim3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtim3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtim3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_rtim4_d.getLength() THEN
         LET g_detail_idx = g_rtim4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtim4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtim4_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_rtim5_d.getLength() THEN
         LET g_detail_idx = g_rtim5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtim5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtim5_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="artt500.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION artt500_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   {<point name="b_fill2.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   {<point name="b_fill2.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   {<point name="b_fill2.pre_function"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL artt500_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION

{</section>}

{<section id="artt500.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION artt500_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   {<point name="fill_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   {<point name="fill_chk.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1')  AND 
      (cl_null(g_wc2_table5) OR g_wc2_table5.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="artt500.status_show" >}
PRIVATE FUNCTION artt500_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   {<point name="status_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   {<point name="status_show.define"/>} 
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION

{</section>}

{<section id="artt500.mask_functions" >}
&include "erp/art/artt500_mask.4gl"

{</section>}

{<section id="artt500.signature" >}
   

{</section>}

{<section id="artt500.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION artt500_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   {<point name="set_pk_array.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_rtil_m.rtildocno
   LET g_pk_array[1].column = 'rtildocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
 

{</section>}

{<section id="artt500.other_dialog" readonly="Y" >}
   

{</section>}

{<section id="artt500.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION artt500_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   {<point name="msgcentre_notify.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   {<point name="msgcentre_notify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   {<point name="msgcentre_notify.pre_function"/>}
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL artt500_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_rtil_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 

{</section>}

{<section id="artt500.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION artt500_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   {<point name="action_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   {<point name="action_chk.define"/>} 
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   {<point name="action_chk.action_chk"/>}
   #end add-point
      
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="artt500.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

