{<section id="arti999.description" >}
#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000020
#+ 
#+ Filename...: arti999
#+ Description: 
#+ Creator....: ()
#+ Modifier...: () -SD/PR-

{</section>}

{<section id="arti999.global" >}
#應用 i02 樣板自動產生(Version:13)
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_itxz_d RECORD
       itxzstus LIKE .itxzstus, 
   itxz001 LIKE .itxz001, 
   itxz002 LIKE .itxz002, 
   itxz003 LIKE .itxz003, 
   itxzmodu LIKE .itxzmodu, 
   itxzmodu_desc LIKE type_t.chr80, 
   itxzdate LIKE .itxzdate, 
   itxzoriu LIKE .itxzoriu, 
   itxzoriu_desc LIKE type_t.chr80, 
   itxzorid LIKE .itxzorid, 
   itxzorid_desc LIKE type_t.chr80, 
   itxzuser LIKE .itxzuser, 
   itxzuser_desc LIKE type_t.chr80, 
   itxzdept LIKE .itxzdept, 
   itxzdept_desc LIKE type_t.chr80, 
   itxzbuid LIKE .itxzbuid
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_itxz_d          DYNAMIC ARRAY OF type_g_itxz_d #單身變數
DEFINE g_itxz_d_t        type_g_itxz_d                  #單身備份
DEFINE g_itxz_d_o        type_g_itxz_d                  #單身備份
DEFINE g_itxz_d_mask_o   DYNAMIC ARRAY OF type_g_itxz_d #單身變數
DEFINE g_itxz_d_mask_n   DYNAMIC ARRAY OF type_g_itxz_d #單身變數
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10             #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num10             #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num10             #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
DEFINE g_log1               STRING                        #log用
DEFINE g_log2               STRING                        #log用
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="arti999.main" >}
#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
 
 
   #add-point:main段define_sql
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT  FROM itxz_t WHERE  FOR UPDATE"
   #add-point:main段define_sql
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE arti999_bcl CURSOR FROM g_forupd_sql
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_arti999 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL arti999_init()   
 
      #進入選單 Menu (="N")
      CALL arti999_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_arti999
      
   END IF 
   
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 

{</section>}

{<section id="arti999.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION arti999_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point   
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL arti999_default_search()
   
END FUNCTION

{</section>}

{<section id="arti999.ui_dialog" >}
#+ 功能選單 
PRIVATE FUNCTION arti999_ui_dialog()
   DEFINE li_idx   LIKE type_t.num10
   DEFINE la_param  RECORD #串查用
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point 
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_itxz_d.clear()
 
         LET g_wc2 = ' 1=2'
         LET g_action_choice = ""
         CALL arti999_init()
      END IF
   
      CALL arti999_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_itxz_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body.before_display" mark="Y"/>}
               #end add-point
               #讓各頁籤能夠同步指到特定資料
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body.before_display2"/>}
               #end add-point
               
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #顯示followup圖示
               #應用 a48 樣板自動產生(Version:2)
   CALL arti999_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row"/>}
               #end add-point
         
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
    
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
 
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
      
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_itxz_d)
               LET g_export_id[1]   = "s_detail1"
 
               #add-point:ON ACTION exporttoexcel
               {<point name="menu.exporttoexcel" />}
               #END add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
            
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            CANCEL DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            CANCEL DIALOG
            
         
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL arti999_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL arti999_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL arti999_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION

{</section>}

{<section id="arti999.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION arti999_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point 
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_itxz_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON itxzstus,itxz001,itxz002,itxz003,itxzmodu,itxzdate,itxzoriu,itxzorid,itxzuser, 
          itxzdept,itxzbuid 
 
         FROM s_detail1[1].itxzstus,s_detail1[1].itxz001,s_detail1[1].itxz002,s_detail1[1].itxz003,s_detail1[1].itxzmodu, 
             s_detail1[1].itxzdate,s_detail1[1].itxzoriu,s_detail1[1].itxzorid,s_detail1[1].itxzuser, 
             s_detail1[1].itxzdept,s_detail1[1].itxzbuid 
      
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<itxzcrtdt>>----
 
         #----<<itxzmoddt>>----
         
         #----<<itxzcnfdt>>----
         
         #----<<itxzpstdt>>----
 
 
      
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxzstus
            #add-point:BEFORE FIELD itxzstus
            {<point name="query.b.page1.itxzstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxzstus
            
            #add-point:AFTER FIELD itxzstus
            {<point name="query.a.page1.itxzstus" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.itxzstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxzstus
            #add-point:ON ACTION controlp INFIELD itxzstus
            {<point name="query.c.page1.itxzstus" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.itxz001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxz001
            #add-point:ON ACTION controlp INFIELD itxz001
            {<point name="construct.c.page1.itxz001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxz001
            #add-point:BEFORE FIELD itxz001
            {<point name="query.b.page1.itxz001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxz001
            
            #add-point:AFTER FIELD itxz001
            {<point name="query.a.page1.itxz001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxz002
            #add-point:BEFORE FIELD itxz002
            {<point name="query.b.page1.itxz002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxz002
            
            #add-point:AFTER FIELD itxz002
            {<point name="query.a.page1.itxz002" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.itxz002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxz002
            #add-point:ON ACTION controlp INFIELD itxz002
            {<point name="query.c.page1.itxz002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxz003
            #add-point:BEFORE FIELD itxz003
            {<point name="query.b.page1.itxz003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxz003
            
            #add-point:AFTER FIELD itxz003
            {<point name="query.a.page1.itxz003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.itxz003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxz003
            #add-point:ON ACTION controlp INFIELD itxz003
            {<point name="query.c.page1.itxz003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxzmodu
            #add-point:BEFORE FIELD itxzmodu
            {<point name="query.b.page1.itxzmodu" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxzmodu
            
            #add-point:AFTER FIELD itxzmodu
            {<point name="query.a.page1.itxzmodu" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.itxzmodu
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxzmodu
            #add-point:ON ACTION controlp INFIELD itxzmodu
            {<point name="query.c.page1.itxzmodu" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxzdate
            #add-point:BEFORE FIELD itxzdate
            {<point name="query.b.page1.itxzdate" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxzdate
            
            #add-point:AFTER FIELD itxzdate
            {<point name="query.a.page1.itxzdate" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.itxzdate
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxzdate
            #add-point:ON ACTION controlp INFIELD itxzdate
            {<point name="query.c.page1.itxzdate" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxzoriu
            #add-point:BEFORE FIELD itxzoriu
            {<point name="query.b.page1.itxzoriu" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxzoriu
            
            #add-point:AFTER FIELD itxzoriu
            {<point name="query.a.page1.itxzoriu" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.itxzoriu
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxzoriu
            #add-point:ON ACTION controlp INFIELD itxzoriu
            {<point name="query.c.page1.itxzoriu" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxzorid
            #add-point:BEFORE FIELD itxzorid
            {<point name="query.b.page1.itxzorid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxzorid
            
            #add-point:AFTER FIELD itxzorid
            {<point name="query.a.page1.itxzorid" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.itxzorid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxzorid
            #add-point:ON ACTION controlp INFIELD itxzorid
            {<point name="query.c.page1.itxzorid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxzuser
            #add-point:BEFORE FIELD itxzuser
            {<point name="query.b.page1.itxzuser" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxzuser
            
            #add-point:AFTER FIELD itxzuser
            {<point name="query.a.page1.itxzuser" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.itxzuser
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxzuser
            #add-point:ON ACTION controlp INFIELD itxzuser
            {<point name="query.c.page1.itxzuser" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxzdept
            #add-point:BEFORE FIELD itxzdept
            {<point name="query.b.page1.itxzdept" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxzdept
            
            #add-point:AFTER FIELD itxzdept
            {<point name="query.a.page1.itxzdept" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.itxzdept
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxzdept
            #add-point:ON ACTION controlp INFIELD itxzdept
            {<point name="query.c.page1.itxzdept" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxzbuid
            #add-point:BEFORE FIELD itxzbuid
            {<point name="query.b.page1.itxzbuid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxzbuid
            
            #add-point:AFTER FIELD itxzbuid
            {<point name="query.a.page1.itxzbuid" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.itxzbuid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxzbuid
            #add-point:ON ACTION controlp INFIELD itxzbuid
            {<point name="query.c.page1.itxzbuid" />}
            #END add-point
 
  
         
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
         {<point name="query.before_dialog"/>}
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         CANCEL DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
      CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   ELSE
      LET g_error_show = 1
      LET g_detail_idx = 1
   END IF
    
   CALL arti999_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION

{</section>}

{<section id="arti999.insert" >}
#+ 資料新增
PRIVATE FUNCTION arti999_insert()
   #add-point:delete段define
   {<point name="insert.define" edit="s"/>}
   #end add-point                
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   LET g_insert = 'Y'
   CALL arti999_modify()
            
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="arti999.modify" >}
#+ 資料修改
PRIVATE FUNCTION arti999_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num10
   DEFINE  l_i                    LIKE type_t.num10
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num10
   DEFINE  li_reproduce_target    LIKE type_t.num10
   DEFINE  lb_reproduce           BOOLEAN
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point 
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #add-point:modify開始前
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_itxz_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_itxz_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL arti999_b_fill(g_wc2)
            LET g_detail_cnt = g_itxz_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = g_detail_idx
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_itxz_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_itxz_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_itxz_d[l_ac]. IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_itxz_d_t.* = g_itxz_d[l_ac].*  #BACKUP
               LET g_itxz_d_o.* = g_itxz_d[l_ac].*  #BACKUP
               IF NOT arti999_lock_b("itxz_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH arti999_bcl INTO 
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_itxz_d_t. 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_itxz_d_mask_o[l_ac].* =  g_itxz_d[l_ac].*
                  CALL arti999_itxz_t_mask()
                  LET g_itxz_d_mask_n[l_ac].* =  g_itxz_d[l_ac].*
                  
                  CALL arti999_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_itxz_d_t.* TO NULL
            INITIALIZE g_itxz_d_o.* TO NULL
            INITIALIZE g_itxz_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_itxz_d[l_ac].itxzstus = ''
 
 
            #自定義預設值(單身1)
                  LET g_itxz_d[l_ac].itxz002 = "1"
 
            #add-point:modify段before備份
            {<point name="input.body.before_bak"/>}
            #end add-point
            LET g_itxz_d_t.* = g_itxz_d[l_ac].*     #新輸入資料
            LET g_itxz_d_o.* = g_itxz_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL arti999_set_entry_b("a")
            CALL arti999_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_itxz_d[li_reproduce_target].* = g_itxz_d[li_reproduce].*
 
               LET g_itxz_d[g_itxz_d.getLength()]. = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM itxz_t 
             WHERE   = g_itxz_d[l_ac].
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               CALL arti999_insert_b('itxz_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_itxz_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "itxz_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL arti999_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ##ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR ( = '", g_itxz_d[l_ac]., "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM itxz_t
                WHERE  
                       = g_itxz_d_t.
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "itxz_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  #修改歷程記錄(刪除)
                  CALL arti999_set_pk_array()
                  IF NOT cl_log_modified_record('','') THEN 
                     CALL s_transaction_end('N','0')
                  ELSE
                     CALL s_transaction_end('Y','0')
                  END IF
               END IF 
               CLOSE arti999_bcl
               #add-point:單身關閉bcl
               {<point name="input.body.close"/>}
               #end add-point
               LET l_count = g_itxz_d.getLength()
                              INITIALIZE gs_keys TO NULL 
 
               #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL arti999_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
            END IF 
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身刪除後2
               {<point name="input.body.after_delete"/>}
               #end add-point
                              CALL arti999_delete_b('itxz_t',gs_keys,"'1'")
            END IF
            #如果是最後一筆
            IF l_ac = (g_itxz_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxzstus
            #add-point:BEFORE FIELD itxzstus
            {<point name="input.b.page1.itxzstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxzstus
            
            #add-point:AFTER FIELD itxzstus
            {<point name="input.a.page1.itxzstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE itxzstus
            #add-point:ON CHANGE itxzstus
            {<point name="input.g.page1.itxzstus" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxz001
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_itxz_d[l_ac].itxz001,"0.000","0","","","test",1) THEN
               NEXT FIELD itxz001
            END IF 
 
 
            #add-point:AFTER FIELD itxz001
            {<point name="input.a.page1.itxz001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxz001
            #add-point:BEFORE FIELD itxz001
            {<point name="input.b.page1.itxz001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE itxz001
            #add-point:ON CHANGE itxz001
            {<point name="input.g.page1.itxz001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxz002
            #add-point:BEFORE FIELD itxz002
            {<point name="input.b.page1.itxz002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxz002
            
            #add-point:AFTER FIELD itxz002
            {<point name="input.a.page1.itxz002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE itxz002
            #add-point:ON CHANGE itxz002
            {<point name="input.g.page1.itxz002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxz003
            #add-point:BEFORE FIELD itxz003
            {<point name="input.b.page1.itxz003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxz003
            
            #add-point:AFTER FIELD itxz003
            {<point name="input.a.page1.itxz003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE itxz003
            #add-point:ON CHANGE itxz003
            {<point name="input.g.page1.itxz003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxzmodu
            
            #add-point:AFTER FIELD itxzmodu
            {<point name="input.a.page1.itxzmodu" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxzmodu
            #add-point:BEFORE FIELD itxzmodu
            {<point name="input.b.page1.itxzmodu" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE itxzmodu
            #add-point:ON CHANGE itxzmodu
            {<point name="input.g.page1.itxzmodu" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxzdate
            #add-point:BEFORE FIELD itxzdate
            {<point name="input.b.page1.itxzdate" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxzdate
            
            #add-point:AFTER FIELD itxzdate
            {<point name="input.a.page1.itxzdate" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE itxzdate
            #add-point:ON CHANGE itxzdate
            {<point name="input.g.page1.itxzdate" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxzoriu
            
            #add-point:AFTER FIELD itxzoriu
            {<point name="input.a.page1.itxzoriu" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxzoriu
            #add-point:BEFORE FIELD itxzoriu
            {<point name="input.b.page1.itxzoriu" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE itxzoriu
            #add-point:ON CHANGE itxzoriu
            {<point name="input.g.page1.itxzoriu" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxzorid
            
            #add-point:AFTER FIELD itxzorid
            {<point name="input.a.page1.itxzorid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxzorid
            #add-point:BEFORE FIELD itxzorid
            {<point name="input.b.page1.itxzorid" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE itxzorid
            #add-point:ON CHANGE itxzorid
            {<point name="input.g.page1.itxzorid" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxzuser
            
            #add-point:AFTER FIELD itxzuser
            {<point name="input.a.page1.itxzuser" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxzuser
            #add-point:BEFORE FIELD itxzuser
            {<point name="input.b.page1.itxzuser" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE itxzuser
            #add-point:ON CHANGE itxzuser
            {<point name="input.g.page1.itxzuser" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxzdept
            
            #add-point:AFTER FIELD itxzdept
            {<point name="input.a.page1.itxzdept" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxzdept
            #add-point:BEFORE FIELD itxzdept
            {<point name="input.b.page1.itxzdept" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE itxzdept
            #add-point:ON CHANGE itxzdept
            {<point name="input.g.page1.itxzdept" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD itxzbuid
            #add-point:BEFORE FIELD itxzbuid
            {<point name="input.b.page1.itxzbuid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD itxzbuid
            
            #add-point:AFTER FIELD itxzbuid
            {<point name="input.a.page1.itxzbuid" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE itxzbuid
            #add-point:ON CHANGE itxzbuid
            {<point name="input.g.page1.itxzbuid" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.itxzstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxzstus
            #add-point:ON ACTION controlp INFIELD itxzstus
            {<point name="input.c.page1.itxzstus" />}
            #END add-point
 
         #Ctrlp:input.c.page1.itxz001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxz001
            #add-point:ON ACTION controlp INFIELD itxz001
            {<point name="input.c.page1.itxz001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.itxz002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxz002
            #add-point:ON ACTION controlp INFIELD itxz002
            {<point name="input.c.page1.itxz002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.itxz003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxz003
            #add-point:ON ACTION controlp INFIELD itxz003
            {<point name="input.c.page1.itxz003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.itxzmodu
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxzmodu
            #add-point:ON ACTION controlp INFIELD itxzmodu
            {<point name="input.c.page1.itxzmodu" />}
            #END add-point
 
         #Ctrlp:input.c.page1.itxzdate
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxzdate
            #add-point:ON ACTION controlp INFIELD itxzdate
            {<point name="input.c.page1.itxzdate" />}
            #END add-point
 
         #Ctrlp:input.c.page1.itxzoriu
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxzoriu
            #add-point:ON ACTION controlp INFIELD itxzoriu
            {<point name="input.c.page1.itxzoriu" />}
            #END add-point
 
         #Ctrlp:input.c.page1.itxzorid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxzorid
            #add-point:ON ACTION controlp INFIELD itxzorid
            {<point name="input.c.page1.itxzorid" />}
            #END add-point
 
         #Ctrlp:input.c.page1.itxzuser
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxzuser
            #add-point:ON ACTION controlp INFIELD itxzuser
            {<point name="input.c.page1.itxzuser" />}
            #END add-point
 
         #Ctrlp:input.c.page1.itxzdept
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxzdept
            #add-point:ON ACTION controlp INFIELD itxzdept
            {<point name="input.c.page1.itxzdept" />}
            #END add-point
 
         #Ctrlp:input.c.page1.itxzbuid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD itxzbuid
            #add-point:ON ACTION controlp INFIELD itxzbuid
            {<point name="input.c.page1.itxzbuid" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_itxz_d[l_ac].* = g_itxz_d_t.*
               CLOSE arti999_bcl
               #add-point:單身取消時
               {<point name="input.body.cancel"/>}
               #end add-point
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_itxz_d[l_ac]. 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_itxz_d[l_ac].* = g_itxz_d_t.*
            ELSE
               #寫入修改者/修改日期資訊(單身)
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL arti999_itxz_t_mask_restore('restore_mask_o')
 
               UPDATE itxz_t SET () = ()
                WHERE 
                   = g_itxz_d_t. #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "itxz_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "itxz_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               CALL arti999_update_b('itxz_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     #修改歷程記錄(修改)
                     LET g_log1 = util.JSON.stringify(g_itxz_d_t)
                     LET g_log2 = util.JSON.stringify(g_itxz_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL arti999_itxz_t_mask_restore('restore_mask_n')
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL arti999_unlock_b("itxz_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
             #add-point:單身after row
            {<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_itxz_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_itxz_d.getLength()+1
            
      END INPUT
      
 
      
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()      
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         #LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD itxzstus
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         CANCEL DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
    
   #新增後取消
   IF l_cmd = 'a' THEN
      #當取消或無輸入資料按確定時刪除對應資料
      IF INT_FLAG OR cl_null(g_itxz_d[g_detail_idx].) THEN
         CALL g_itxz_d.deleteElement(g_detail_idx)
 
      END IF
   END IF
   
   #修改後取消
   IF l_cmd = 'u' AND INT_FLAG THEN
      LET g_itxz_d[g_detail_idx].* = g_itxz_d_t.*
   END IF
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE arti999_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION

{</section>}

{<section id="arti999.delete" >}
#+ 資料刪除
PRIVATE FUNCTION arti999_delete()
   DEFINE li_idx          LIKE type_t.num10
   DEFINE li_ac_t         LIKE type_t.num10
   DEFINE li_detail_tmp   LIKE type_t.num10
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point 
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:單身刪除前
   {<point name="delete.body.before_delete"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET li_ac_t = l_ac
   
   LET li_detail_tmp = g_detail_idx
    
   #lock所有所選資料
   FOR li_idx = 1 TO g_itxz_d.getLength()
      LET g_detail_idx = li_idx
      #已選擇的資料
      IF g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         #確定是否有被鎖定
         IF NOT arti999_lock_b("itxz_t") THEN
            #已被他人鎖定
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
   END FOR
   
   #add-point:單身刪除詢問前
   {<point name="delete.body.b_delete_ask"/>}
   #end add-point  
   
   #詢問是否確定刪除所選資料
   IF NOT cl_ask_del_detail() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   FOR li_idx = 1 TO g_itxz_d.getLength()
      IF g_itxz_d[li_idx]. IS NOT NULL
 
         AND g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         
         #add-point:單身刪除前
         {<point name="delete.body.b_delete" mark="Y"/>}
         #end add-point   
         
         DELETE FROM itxz_t
          WHERE  
                 = g_itxz_d[li_idx].
 
         #add-point:單身刪除中
         {<point name="delete.body.m_delete"/>}
         #end add-point  
                
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "itxz_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            LET g_detail_cnt = g_detail_cnt-1
            LET l_ac = li_idx
            
 
            
 
            #add-point:單身同步刪除前(同層table)
            {<point name="delete.body.a_delete"/>}
            #end add-point
            LET g_detail_idx = li_idx
                           INITIALIZE gs_keys TO NULL 
 
            #add-point:單身同步刪除中(同層table)
            {<point name="delete.body.a_delete2"/>}
            #end add-point
                           CALL arti999_delete_b('itxz_t',gs_keys,"'1'")
            #add-point:單身同步刪除後(同層table)
            {<point name="delete.body.a_delete3"/>}
            #end add-point
         END IF 
      END IF 
    
   END FOR
   CALL s_transaction_end('Y','0')
   
   LET g_detail_idx = li_detail_tmp
            
   #add-point:單身刪除後
   {<point name="delete.after"/>}
   #end add-point  
   
   LET l_ac = li_ac_t
   
   #刷新資料
   CALL arti999_b_fill(g_wc2)
            
END FUNCTION

{</section>}

{<section id="arti999.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION arti999_b_fill(p_wc2)              #BODY FILL UP
   DEFINE p_wc2    STRING
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE  FROM itxz_t t0",
               "",
               
               " WHERE 1=1 AND (", p_wc2, ") " 
   #add-point:b_fill段sql wc
   {<point name="b_fill.sql_wc"/>}
   #end add-point
   LET g_sql = g_sql, cl_sql_add_filter("itxz_t"),
                      " ORDER BY "
   
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"itxz_t")            #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE arti999_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR arti999_pb
   
   OPEN b_fill_curs
 
   CALL g_itxz_d.clear()
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL arti999_detail_show()      
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
         END IF
         EXIT FOREACH
      END IF
 
      LET l_ac = l_ac + 1
      
   END FOREACH
 
   LET g_error_show = 0
   
 
   
   CALL g_itxz_d.deleteElement(g_itxz_d.getLength())   
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_itxz_d.getLength()
 
      #add-point:b_fill段key值相關欄位
      {<point name="b_fill.keys.fill"/>}
      #end add-point
   END FOR
   
   IF g_cnt > g_itxz_d.getLength() THEN
      LET l_ac = g_itxz_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #遮罩相關處理
   FOR l_ac = 1 TO g_itxz_d.getLength()
      LET g_itxz_d_mask_o[l_ac].* =  g_itxz_d[l_ac].*
      CALL arti999_itxz_t_mask()
      LET g_itxz_d_mask_n[l_ac].* =  g_itxz_d[l_ac].*
   END FOR
   
 
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
   
   ERROR "" 
 
   LET g_detail_cnt = g_itxz_d.getLength()
   DISPLAY g_detail_idx TO FORMONLY.idx
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs
   FREE arti999_pb
   
END FUNCTION

{</section>}

{<section id="arti999.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION arti999_detail_show()
   #add-point:show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   #應用 a12 樣板自動產生(Version:3)
 
 
    
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="arti999.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION arti999_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    

{</section>}

{<section id="arti999.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION arti999_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point   
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  

{</section>}

{<section id="arti999.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION arti999_default_search()
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, "  = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
      #預設查詢條件
      LET g_wc2 = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc2) THEN
         LET g_wc2 = " 1=1"
      END IF
   END IF
 
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="arti999.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION arti999_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point
   
   #判斷是否是同一群組的table
   LET ls_group = "itxz_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      IF ps_table <> 'itxz_t' THEN
         #add-point:delete_b段刪除前
         {<point name="delete_b.b_delete" mark="Y"/>}
         #end add-point     
         
         DELETE FROM itxz_t
          WHERE 
            
         
         #add-point:delete_b段刪除中
         {<point name="delete_b.m_delete"/>}
         #end add-point  
            
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = FALSE 
            CALL cl_err()
         END IF
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_itxz_d.deleteElement(li_idx) 
      END IF 
 
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION

{</section>}

{<section id="arti999.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION arti999_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point
   
   #判斷是否是同一群組的table
   LET ls_group = "itxz_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO itxz_t
                  (
                   
                   ) 
            VALUES(
                   
                   )
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "itxz_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION

{</section>}

{<section id="arti999.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION arti999_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point     
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point
   
   #比對新舊值, 判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #若key無變動, 不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #若key有變動, 則連動其他table的資料   
   #判斷是否是同一群組的table
   LET ls_group = "itxz_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "itxz_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE itxz_t 
         SET (
              ) 
              = 
             (
              ) 
         WHERE 
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "itxz_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "itxz_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION

{</section>}

{<section id="arti999.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION arti999_lock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point
   
   #先刷新資料
   #CALL arti999_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "itxz_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN arti999_bcl USING 
                                       
                                       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "arti999_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="arti999.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION arti999_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE arti999_bcl
   #END IF
   
 
   
   #add-point:unlock_b段結束前
   {<point name="unlock_b.after"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="arti999.modify_detail_chk" >}
#+ 單身輸入判定(因應modify_detail)
PRIVATE FUNCTION arti999_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define" edit="s"/>}
   #end add-point
   #add-point:modify_detail_chk段define(客製用)
   {<point name="modify_detail_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   #根據sr名稱確定該page第一個欄位的名稱
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "itxzstus"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION

{</section>}

{<section id="arti999.mask_functions" >}
&include "erp/art/arti999_mask.4gl"

{</section>}

{<section id="arti999.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION arti999_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = 
   LET g_pk_array[1].column = ''
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 

{</section>}

{<section id="arti999.state_change" >}
   

{</section>}

{<section id="arti999.other_dialog" readonly="Y" >}
 

{</section>}

{<section id="arti999.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

