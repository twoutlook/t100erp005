#該程式未解開Section, 採用最新樣板產出!
{<section id="artt600.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0025(2016-10-28 14:34:53), PR版次:
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:
#+ Build......: 000911
#+ Filename...: artt600
#+ Description: 一般銷售單維護作業
#+ Creator....: 02003(2014-01-22 19:20:29)
#+ Modifier...: 08172 -SD/PR-

{</section>}

{<section id="artt600.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用)
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_rtia_m        RECORD
       rtiasite LIKE rtia_t.rtiasite, 
   rtiasite_desc LIKE type_t.chr80, 
   rtiadocdt LIKE rtia_t.rtiadocdt, 
   rtiadocno LIKE rtia_t.rtiadocno, 
   rtia001 LIKE rtia_t.rtia001, 
   rtia001_desc LIKE type_t.chr80, 
   rtia002 LIKE rtia_t.rtia002, 
   rtia002_desc LIKE type_t.chr80, 
   rtia059 LIKE rtia_t.rtia059, 
   rtia060 LIKE rtia_t.rtia060, 
   rtia004 LIKE rtia_t.rtia004, 
   rtia004_desc LIKE type_t.chr80, 
   rtia005 LIKE rtia_t.rtia005, 
   rtia005_desc LIKE type_t.chr80, 
   rtia006 LIKE rtia_t.rtia006, 
   rtia048 LIKE type_t.chr1, 
   rtia053 LIKE rtia_t.rtia053, 
   rtiastus LIKE rtia_t.rtiastus, 
   rtia007 LIKE rtia_t.rtia007, 
   rtia008 LIKE rtia_t.rtia008, 
   rtia009 LIKE rtia_t.rtia009, 
   rtia009_desc LIKE type_t.chr80, 
   rtia041 LIKE rtia_t.rtia041, 
   rtia013 LIKE rtia_t.rtia013, 
   rtia014 LIKE rtia_t.rtia014, 
   rtia015 LIKE rtia_t.rtia015, 
   rtia016 LIKE rtia_t.rtia016, 
   rtia051 LIKE rtia_t.rtia051, 
   rtia010 LIKE rtia_t.rtia010, 
   rtia010_desc LIKE type_t.chr80, 
   rtia011 LIKE rtia_t.rtia011, 
   rtia011_desc LIKE type_t.chr80, 
   rtia012 LIKE rtia_t.rtia012, 
   rtia012_desc LIKE type_t.chr80, 
   rtia017 LIKE rtia_t.rtia017, 
   rtia018 LIKE rtia_t.rtia018, 
   rtia018_desc LIKE type_t.chr80, 
   rtia019 LIKE rtia_t.rtia019, 
   rtia020 LIKE rtia_t.rtia020, 
   rtia021 LIKE rtia_t.rtia021, 
   rtia022 LIKE rtia_t.rtia022, 
   rtia023 LIKE rtia_t.rtia023, 
   rtia024 LIKE rtia_t.rtia024, 
   rtia024_desc LIKE type_t.chr80, 
   rtia025 LIKE rtia_t.rtia025, 
   rtia025_desc LIKE type_t.chr80, 
   rtia026 LIKE rtia_t.rtia026, 
   rtia027 LIKE rtia_t.rtia027, 
   rtia028 LIKE rtia_t.rtia028, 
   rtia029 LIKE rtia_t.rtia029, 
   rtia030 LIKE rtia_t.rtia030, 
   rtia032 LIKE rtia_t.rtia032, 
   rtia033 LIKE rtia_t.rtia033, 
   rtia034 LIKE rtia_t.rtia034, 
   rtia035 LIKE rtia_t.rtia035, 
   rtia036 LIKE rtia_t.rtia036, 
   rtia036_desc LIKE type_t.chr80, 
   rtia037 LIKE rtia_t.rtia037, 
   rtia037_desc LIKE type_t.chr80, 
   rtia038 LIKE rtia_t.rtia038, 
   rtia038_desc LIKE type_t.chr80, 
   rtia039 LIKE rtia_t.rtia039, 
   isaf009 LIKE isaf_t.isaf009, 
   isaf010 LIKE isaf_t.isaf010, 
   isaf044 LIKE isaf_t.isaf044, 
   isaf202 LIKE isaf_t.isaf202, 
   isaf203 LIKE isaf_t.isaf203, 
   isaf204 LIKE isaf_t.isaf204, 
   isaf201 LIKE isaf_t.isaf201, 
   isaf207 LIKE isaf_t.isaf207, 
   rtiaownid LIKE rtia_t.rtiaownid, 
   rtiaownid_desc LIKE type_t.chr80, 
   rtiaowndp LIKE rtia_t.rtiaowndp, 
   rtiaowndp_desc LIKE type_t.chr80, 
   rtiacrtid LIKE rtia_t.rtiacrtid, 
   rtiacrtid_desc LIKE type_t.chr80, 
   rtiacrtdp LIKE rtia_t.rtiacrtdp, 
   rtiacrtdp_desc LIKE type_t.chr80, 
   rtiacrtdt LIKE rtia_t.rtiacrtdt, 
   rtiamodid LIKE rtia_t.rtiamodid, 
   rtiamodid_desc LIKE type_t.chr80, 
   rtiacnfid LIKE rtia_t.rtiacnfid, 
   rtiacnfid_desc LIKE type_t.chr80, 
   rtiamoddt LIKE rtia_t.rtiamoddt, 
   rtiacnfdt LIKE rtia_t.rtiacnfdt, 
   rtiapstid LIKE rtia_t.rtiapstid, 
   rtiapstid_desc LIKE type_t.chr80, 
   rtiapstdt LIKE rtia_t.rtiapstdt, 
   snum LIKE type_t.chr500, 
   amount LIKE type_t.chr500, 
   amount2 LIKE type_t.chr500, 
   amount3 LIKE type_t.chr500
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_rtib_d        RECORD
       rtibsite LIKE rtib_t.rtibsite, 
   rtibunit LIKE rtib_t.rtibunit, 
   rtiborga LIKE rtib_t.rtiborga, 
   rtibseq LIKE rtib_t.rtibseq, 
   rtib035 LIKE rtib_t.rtib035, 
   rtib001 LIKE rtib_t.rtib001, 
   xmda001 LIKE type_t.chr500, 
   rtib002 LIKE rtib_t.rtib002, 
   rtib003 LIKE rtib_t.rtib003, 
   rtib004 LIKE rtib_t.rtib004, 
   rtib004_desc LIKE type_t.chr500, 
   rtib005 LIKE rtib_t.rtib005, 
   rtib005_desc LIKE type_t.chr500, 
   rtib004_desc_desc LIKE type_t.chr500, 
   inag008 LIKE type_t.chr500, 
   rtib006 LIKE rtib_t.rtib006, 
   rtib006_desc LIKE type_t.chr500, 
   rtib008 LIKE rtib_t.rtib008, 
   rtib009 LIKE rtib_t.rtib009, 
   rtib010 LIKE rtib_t.rtib010, 
   rtib012 LIKE rtib_t.rtib012, 
   rtib013 LIKE rtib_t.rtib013, 
   rtib013_desc LIKE type_t.chr500, 
   rtib014 LIKE rtib_t.rtib014, 
   rtib015 LIKE rtib_t.rtib015, 
   rtib016 LIKE rtib_t.rtib016, 
   rtib018 LIKE rtib_t.rtib018, 
   rtib018_desc LIKE type_t.chr500, 
   rtib017 LIKE rtib_t.rtib017, 
   rtib019 LIKE rtib_t.rtib019, 
   rtib020 LIKE rtib_t.rtib020, 
   rtib021 LIKE rtib_t.rtib021, 
   rtib031 LIKE rtib_t.rtib031, 
   rtib022 LIKE rtib_t.rtib022, 
   rtib024 LIKE rtib_t.rtib024, 
   rtib024_desc LIKE type_t.chr500, 
   rtib025 LIKE rtib_t.rtib025, 
   rtib025_desc LIKE type_t.chr500, 
   rtib026 LIKE rtib_t.rtib026, 
   rtib027 LIKE rtib_t.rtib027, 
   rtib032 LIKE rtib_t.rtib032, 
   rtib033 LIKE rtib_t.rtib033, 
   rtib033_desc LIKE type_t.chr500, 
   rtib028 LIKE rtib_t.rtib028, 
   rtib030 LIKE rtib_t.rtib030, 
   rtib039 LIKE rtib_t.rtib039
       END RECORD
PRIVATE TYPE type_g_rtib2_d RECORD
       rticseq LIKE rtic_t.rticseq, 
   rtib003 LIKE rtib_t.rtib003, 
   rtib004 LIKE rtib_t.rtib004, 
   imaal003 LIKE imaal_t.imaal003, 
   imaal004 LIKE imaal_t.imaal004, 
   rtib005 LIKE rtib_t.rtib005, 
   rtib005_01_desc LIKE type_t.chr500, 
   rtib013 LIKE rtib_t.rtib013, 
   rtib013_01_desc LIKE type_t.chr500, 
   rtib012 LIKE rtib_t.rtib012, 
   rtib008 LIKE rtib_t.rtib008, 
   rtib010 LIKE rtib_t.rtib010, 
   rtib021 LIKE rtib_t.rtib021, 
   rticseq1 LIKE rtic_t.rticseq1, 
   rtic001 LIKE rtic_t.rtic001, 
   rtic002 LIKE rtic_t.rtic002, 
   rtic003 LIKE rtic_t.rtic003, 
   rtic004 LIKE rtic_t.rtic004, 
   rtic005 LIKE rtic_t.rtic005, 
   rtic006 LIKE rtic_t.rtic006, 
   rtic007 LIKE rtic_t.rtic007, 
   rtic008 LIKE rtic_t.rtic008, 
   rtic009 LIKE rtic_t.rtic009, 
   rtic010 LIKE rtic_t.rtic010, 
   rtic011 LIKE rtic_t.rtic011, 
   rtic012 LIKE rtic_t.rtic012, 
   rtic013 LIKE rtic_t.rtic013, 
   rtic014 LIKE rtic_t.rtic014, 
   rtic015 LIKE rtic_t.rtic015, 
   rtic016 LIKE rtic_t.rtic016, 
   rtic017 LIKE rtic_t.rtic017, 
   rtic018 LIKE rtic_t.rtic018, 
   rtic020 LIKE rtic_t.rtic020
       END RECORD
PRIVATE TYPE type_g_rtib3_d RECORD
       xrcd007 LIKE xrcd_t.xrcd007, 
   xrcdld LIKE xrcd_t.xrcdld, 
   xrcdseq LIKE xrcd_t.xrcdseq, 
   rtib003 LIKE rtib_t.rtib003, 
   rtib004 LIKE rtib_t.rtib004, 
   rtib005 LIKE rtib_t.rtib005, 
   rtib005_02_desc LIKE type_t.chr500, 
   rtib006 LIKE rtib_t.rtib006, 
   rtib006_02_desc LIKE type_t.chr500, 
   xrcdseq2 LIKE xrcd_t.xrcdseq2, 
   xrcd002 LIKE xrcd_t.xrcd002, 
   xrcd002_desc LIKE type_t.chr500, 
   xrcd003 LIKE xrcd_t.xrcd003, 
   xrcd006 LIKE xrcd_t.xrcd006, 
   xrcd004 LIKE xrcd_t.xrcd004, 
   xrcd104 LIKE xrcd_t.xrcd104
       END RECORD
PRIVATE TYPE type_g_rtib4_d RECORD
       rtieseq LIKE rtie_t.rtieseq, 
   rtib003 LIKE rtib_t.rtib003, 
   rtib004 LIKE rtib_t.rtib004, 
   rtib005 LIKE rtib_t.rtib005, 
   rtib005_03_desc LIKE type_t.chr500, 
   rtieseq1 LIKE rtie_t.rtieseq1, 
   rtie001 LIKE rtie_t.rtie001, 
   rtie002 LIKE rtie_t.rtie002, 
   rtie002_desc LIKE type_t.chr500, 
   rtie006 LIKE rtie_t.rtie006
       END RECORD
PRIVATE TYPE type_g_rtib5_d RECORD
       rtiksite LIKE type_t.chr10, 
   rtikunit LIKE type_t.chr10, 
   rtikorg LIKE type_t.chr10, 
   rtikseq LIKE type_t.num10, 
   rtik001 LIKE type_t.chr20, 
   rtik002 LIKE type_t.num10, 
   rtik003 LIKE type_t.chr500, 
   rtik003_desc LIKE type_t.chr500, 
   rtik004 LIKE type_t.chr500, 
   rtik005 LIKE type_t.chr500, 
   rtik005_desc LIKE type_t.chr500, 
   rtik006 LIKE type_t.chr10, 
   rtik006_desc LIKE type_t.chr500, 
   rtik007 LIKE type_t.chr1, 
   rtik013 LIKE type_t.chr10, 
   rtik013_desc LIKE type_t.chr500, 
   rtik012 LIKE type_t.num20_6, 
   rtik008 LIKE type_t.num20_6, 
   rtik009 LIKE type_t.num20_6, 
   rtik010 LIKE type_t.num20_6, 
   rtik011 LIKE type_t.num20_6, 
   rtik014 LIKE type_t.num20_6, 
   rtik015 LIKE type_t.num20_6, 
   rtik016 LIKE type_t.num20_6, 
   rtik017 LIKE type_t.num20_6, 
   rtik018 LIKE type_t.chr10, 
   rtik019 LIKE type_t.chr10, 
   rtik019_desc LIKE type_t.chr500, 
   rtik020 LIKE type_t.chr10, 
   rtik020_desc LIKE type_t.chr500, 
   rtik021 LIKE type_t.chr30, 
   rtik022 LIKE type_t.chr20, 
   rtik023 LIKE type_t.num15_3
       END RECORD
PRIVATE TYPE type_g_rtib6_d RECORD
       rtinsite LIKE rtin_t.rtinsite, 
   rtinseq LIKE rtin_t.rtinseq, 
   rtinseq1 LIKE rtin_t.rtinseq1, 
   rtin001 LIKE rtin_t.rtin001, 
   rtin002 LIKE rtin_t.rtin002, 
   rtin002_desc LIKE type_t.chr500, 
   rtin003 LIKE rtin_t.rtin003, 
   rtin004 LIKE rtin_t.rtin004, 
   rtin005 LIKE rtin_t.rtin005, 
   rtin006 LIKE rtin_t.rtin006, 
   rtin007 LIKE rtin_t.rtin007, 
   rtin008 LIKE rtin_t.rtin008, 
   rtin009 LIKE rtin_t.rtin009, 
   rtin010 LIKE rtin_t.rtin010
       END RECORD
PRIVATE TYPE type_g_rtib7_d RECORD
       preksite LIKE type_t.chr10, 
   prekunit LIKE type_t.chr10, 
   prekseq LIKE type_t.num10, 
   prek001 LIKE type_t.dat, 
   prek002 LIKE type_t.chr20, 
   prek003 LIKE type_t.chr20, 
   prek004 LIKE type_t.num20_6
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_rtiasite LIKE rtia_t.rtiasite,
   b_rtiasite_desc LIKE type_t.chr80,
      b_rtiadocdt LIKE rtia_t.rtiadocdt,
      b_rtiadocno LIKE rtia_t.rtiadocno,
      b_rtia002 LIKE rtia_t.rtia002,
   b_rtia002_desc LIKE type_t.chr80,
      b_rtia006 LIKE rtia_t.rtia006
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>} 
#end add-point
       
#模組變數(Module Variables)
DEFINE g_rtia_m          type_g_rtia_m
DEFINE g_rtia_m_t        type_g_rtia_m
DEFINE g_rtia_m_o        type_g_rtia_m
DEFINE g_rtia_m_mask_o   type_g_rtia_m #轉換遮罩前資料
DEFINE g_rtia_m_mask_n   type_g_rtia_m #轉換遮罩後資料
 
   DEFINE g_rtiadocno_t LIKE rtia_t.rtiadocno
 
 
DEFINE g_rtib_d          DYNAMIC ARRAY OF type_g_rtib_d
DEFINE g_rtib_d_t        type_g_rtib_d
DEFINE g_rtib_d_o        type_g_rtib_d
DEFINE g_rtib_d_mask_o   DYNAMIC ARRAY OF type_g_rtib_d #轉換遮罩前資料
DEFINE g_rtib_d_mask_n   DYNAMIC ARRAY OF type_g_rtib_d #轉換遮罩後資料
DEFINE g_rtib2_d          DYNAMIC ARRAY OF type_g_rtib2_d
DEFINE g_rtib2_d_t        type_g_rtib2_d
DEFINE g_rtib2_d_o        type_g_rtib2_d
DEFINE g_rtib2_d_mask_o   DYNAMIC ARRAY OF type_g_rtib2_d #轉換遮罩前資料
DEFINE g_rtib2_d_mask_n   DYNAMIC ARRAY OF type_g_rtib2_d #轉換遮罩後資料
DEFINE g_rtib3_d          DYNAMIC ARRAY OF type_g_rtib3_d
DEFINE g_rtib3_d_t        type_g_rtib3_d
DEFINE g_rtib3_d_o        type_g_rtib3_d
DEFINE g_rtib3_d_mask_o   DYNAMIC ARRAY OF type_g_rtib3_d #轉換遮罩前資料
DEFINE g_rtib3_d_mask_n   DYNAMIC ARRAY OF type_g_rtib3_d #轉換遮罩後資料
DEFINE g_rtib4_d          DYNAMIC ARRAY OF type_g_rtib4_d
DEFINE g_rtib4_d_t        type_g_rtib4_d
DEFINE g_rtib4_d_o        type_g_rtib4_d
DEFINE g_rtib4_d_mask_o   DYNAMIC ARRAY OF type_g_rtib4_d #轉換遮罩前資料
DEFINE g_rtib4_d_mask_n   DYNAMIC ARRAY OF type_g_rtib4_d #轉換遮罩後資料
DEFINE g_rtib5_d          DYNAMIC ARRAY OF type_g_rtib5_d
DEFINE g_rtib5_d_t        type_g_rtib5_d
DEFINE g_rtib5_d_o        type_g_rtib5_d
DEFINE g_rtib5_d_mask_o   DYNAMIC ARRAY OF type_g_rtib5_d #轉換遮罩前資料
DEFINE g_rtib5_d_mask_n   DYNAMIC ARRAY OF type_g_rtib5_d #轉換遮罩後資料
DEFINE g_rtib6_d          DYNAMIC ARRAY OF type_g_rtib6_d
DEFINE g_rtib6_d_t        type_g_rtib6_d
DEFINE g_rtib6_d_o        type_g_rtib6_d
DEFINE g_rtib6_d_mask_o   DYNAMIC ARRAY OF type_g_rtib6_d #轉換遮罩前資料
DEFINE g_rtib6_d_mask_n   DYNAMIC ARRAY OF type_g_rtib6_d #轉換遮罩後資料
DEFINE g_rtib7_d          DYNAMIC ARRAY OF type_g_rtib7_d
DEFINE g_rtib7_d_t        type_g_rtib7_d
DEFINE g_rtib7_d_o        type_g_rtib7_d
DEFINE g_rtib7_d_mask_o   DYNAMIC ARRAY OF type_g_rtib7_d #轉換遮罩前資料
DEFINE g_rtib7_d_mask_n   DYNAMIC ARRAY OF type_g_rtib7_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
DEFINE g_wc2_table5   STRING
 
DEFINE g_wc2_table6   STRING
 
DEFINE g_wc2_table7   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="artt600.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT rtiasite,'',rtiadocdt,rtiadocno,rtia001,'',rtia002,'',rtia059,rtia060, 
       rtia004,'',rtia005,'',rtia006,'',rtia053,rtiastus,rtia007,rtia008,rtia009,'',rtia041,rtia013, 
       rtia014,rtia015,rtia016,rtia051,rtia010,'',rtia011,'',rtia012,'',rtia017,rtia018,'',rtia019,rtia020, 
       rtia021,rtia022,rtia023,rtia024,'',rtia025,'',rtia026,rtia027,rtia028,rtia029,rtia030,rtia032, 
       rtia033,rtia034,rtia035,rtia036,'',rtia037,'',rtia038,'',rtia039,'','','','','','','','',rtiaownid, 
       '',rtiaowndp,'',rtiacrtid,'',rtiacrtdp,'',rtiacrtdt,rtiamodid,'',rtiacnfid,'',rtiamoddt,rtiacnfdt, 
       rtiapstid,'',rtiapstdt,'','','',''", 
                      " FROM rtia_t",
                      " WHERE rtiaent= ? AND rtiadocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt600_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.rtiasite,t0.rtiadocdt,t0.rtiadocno,t0.rtia001,t0.rtia002,t0.rtia059, 
       t0.rtia060,t0.rtia004,t0.rtia005,t0.rtia006,t0.rtia048,t0.rtia053,t0.rtiastus,t0.rtia007,t0.rtia008, 
       t0.rtia009,t0.rtia041,t0.rtia013,t0.rtia014,t0.rtia015,t0.rtia016,t0.rtia051,t0.rtia010,t0.rtia011, 
       t0.rtia012,t0.rtia017,t0.rtia018,t0.rtia019,t0.rtia020,t0.rtia021,t0.rtia022,t0.rtia023,t0.rtia024, 
       t0.rtia025,t0.rtia026,t0.rtia027,t0.rtia028,t0.rtia029,t0.rtia030,t0.rtia032,t0.rtia033,t0.rtia034, 
       t0.rtia035,t0.rtia036,t0.rtia037,t0.rtia038,t0.rtia039,t0.rtiaownid,t0.rtiaowndp,t0.rtiacrtid, 
       t0.rtiacrtdp,t0.rtiacrtdt,t0.rtiamodid,t0.rtiacnfid,t0.rtiamoddt,t0.rtiacnfdt,t0.rtiapstid,t0.rtiapstdt, 
       t1.ooefl003 ,t2.pmaal004 ,t3.ooag011 ,t4.ooefl003 ,t5.oocql004 ,t6.pmaal004 ,t7.pmaal004 ,t8.pmaal004 , 
       t9.ooefl003 ,t10.ooefl003 ,t11.ooibl004 ,t12.pcaal003 ,t13.pcab003 ,t14.oogd002 ,t15.ooag011 , 
       t16.ooefl003 ,t17.ooag011 ,t18.ooefl003 ,t19.ooag011 ,t20.ooag011 ,t21.ooag011",
               " FROM rtia_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtiasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent="||g_enterprise||" AND t2.pmaal001=t0.rtia002 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.rtia004  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.rtia005 AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent="||g_enterprise||" AND t5.oocql001='295' AND t5.oocql002=t0.rtia009 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t6 ON t6.pmaalent="||g_enterprise||" AND t6.pmaal001=t0.rtia010 AND t6.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t7 ON t7.pmaalent="||g_enterprise||" AND t7.pmaal001=t0.rtia011 AND t7.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t8 ON t8.pmaalent="||g_enterprise||" AND t8.pmaal001=t0.rtia012 AND t8.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent="||g_enterprise||" AND t9.ooefl001=t0.rtia018 AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t10 ON t10.ooeflent="||g_enterprise||" AND t10.ooefl001=t0.rtia024 AND t10.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t11 ON t11.ooiblent="||g_enterprise||" AND t11.ooibl002=t0.rtia025 AND t11.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN pcaal_t t12 ON t12.pcaalent="||g_enterprise||" AND t12.pcaalsite=t0.rtiasite AND t12.pcaal001=t0.rtia036 AND t12.pcaal002='"||g_dlang||"' ",
               " LEFT JOIN pcab_t t13 ON t13.pcabent="||g_enterprise||" AND t13.pcab001=t0.rtia037  ",
               " LEFT JOIN oogd_t t14 ON t14.oogdent="||g_enterprise||" AND t14.oogd001=t0.rtia038 AND t14.oogdsite=t0.rtiasite  ",
               " LEFT JOIN ooag_t t15 ON t15.ooagent="||g_enterprise||" AND t15.ooag001=t0.rtiaownid  ",
               " LEFT JOIN ooefl_t t16 ON t16.ooeflent="||g_enterprise||" AND t16.ooefl001=t0.rtiaowndp AND t16.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t17 ON t17.ooagent="||g_enterprise||" AND t17.ooag001=t0.rtiacrtid  ",
               " LEFT JOIN ooefl_t t18 ON t18.ooeflent="||g_enterprise||" AND t18.ooefl001=t0.rtiacrtdp AND t18.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t19 ON t19.ooagent="||g_enterprise||" AND t19.ooag001=t0.rtiamodid  ",
               " LEFT JOIN ooag_t t20 ON t20.ooagent="||g_enterprise||" AND t20.ooag001=t0.rtiacnfid  ",
               " LEFT JOIN ooag_t t21 ON t21.ooagent="||g_enterprise||" AND t21.ooag001=t0.rtiapstid  ",
 
               " WHERE t0.rtiaent = " ||g_enterprise|| " AND t0.rtiadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE artt600_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_artt600 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL artt600_init()   
 
      #進入選單 Menu (="N")
      CALL artt600_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_artt600
      
   END IF 
   
   CLOSE artt600_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 

{</section>}

{<section id="artt600.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION artt600_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   {<point name="init.pre_function"/>}
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
   LET g_detail_idx_list[7] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('rtiastus','13','N,Y,S,Z,A,D,R,W,X')
 
      CALL cl_set_combo_scc('rtia017','6545') 
   CALL cl_set_combo_scc('rtia023','6546') 
   CALL cl_set_combo_scc('rtia032','6544') 
   CALL cl_set_combo_scc('rtia039','6202') 
   CALL cl_set_combo_scc('rtib035','6819') 
   CALL cl_set_combo_scc('rtic001','6707') 
   CALL cl_set_combo_scc('rtic002','6708') 
   CALL cl_set_combo_scc('rtic006','6564') 
   CALL cl_set_combo_scc('rtic007','6565') 
   CALL cl_set_combo_scc('rtie001','8310') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
   CALL g_idx_group.addAttribute("'4',","1")
   CALL g_idx_group.addAttribute("'5',","1")
   CALL g_idx_group.addAttribute("'6',","1")
   CALL g_idx_group.addAttribute("'7',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL artt600_default_search()
    
END FUNCTION

{</section>}

{<section id="artt600.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION artt600_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   {<point name="ui_dialog.pre_function"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL artt600_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_rtia_m.* TO NULL
         CALL g_rtib_d.clear()
         CALL g_rtib2_d.clear()
         CALL g_rtib3_d.clear()
         CALL g_rtib4_d.clear()
         CALL g_rtib5_d.clear()
         CALL g_rtib6_d.clear()
         CALL g_rtib7_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL artt600_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL artt600_fetch('') # reload data
               LET l_ac = 1
               CALL artt600_ui_detailshow() #Setting the current row 
         
               CALL artt600_idx_chk()
               #NEXT FIELD rtibseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_rtib_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt600_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL artt600_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_rtib2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt600_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL artt600_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_rtib3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt600_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body3.before_row"
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL artt600_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body3.before_display"
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為 name="ui_dialog.body3.action"
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_rtib4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt600_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[4] = l_ac
               CALL g_idx_group.addAttribute("'4',",l_ac)
               
               #add-point:page4, before row動作 name="ui_dialog.body4.before_row"
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               #顯示單身筆數
               CALL artt600_idx_chk()
               #add-point:page4自定義行為 name="ui_dialog.body4.before_display"
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為 name="ui_dialog.body4.action"
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_rtib5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt600_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[5] = l_ac
               CALL g_idx_group.addAttribute("'5',",l_ac)
               
               #add-point:page5, before row動作 name="ui_dialog.body5.before_row"
               {<point name="ui_dialog.body5.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_current_page = 5
               #顯示單身筆數
               CALL artt600_idx_chk()
               #add-point:page5自定義行為 name="ui_dialog.body5.before_display"
               {<point name="ui_dialog.body5.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_5)
            
         
            #add-point:page5自定義行為 name="ui_dialog.body5.action"
            {<point name="ui_dialog.body5.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_rtib6_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt600_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[6] = l_ac
               CALL g_idx_group.addAttribute("'6',",l_ac)
               
               #add-point:page6, before row動作 name="ui_dialog.body6.before_row"
               {<point name="ui_dialog.body6.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_current_page = 6
               #顯示單身筆數
               CALL artt600_idx_chk()
               #add-point:page6自定義行為 name="ui_dialog.body6.before_display"
               {<point name="ui_dialog.body6.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_6)
            
         
            #add-point:page6自定義行為 name="ui_dialog.body6.action"
            {<point name="ui_dialog.body6.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_rtib7_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt600_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[7] = l_ac
               CALL g_idx_group.addAttribute("'7',",l_ac)
               
               #add-point:page7, before row動作 name="ui_dialog.body7.before_row"
               {<point name="ui_dialog.body7.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'7',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_current_page = 7
               #顯示單身筆數
               CALL artt600_idx_chk()
               #add-point:page7自定義行為 name="ui_dialog.body7.before_display"
               {<point name="ui_dialog.body7.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_7)
            
         
            #add-point:page7自定義行為 name="ui_dialog.body7.action"
            {<point name="ui_dialog.body7.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL artt600_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL artt600_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL artt600_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL artt600_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL artt600_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL artt600_set_act_visible()   
            CALL artt600_set_act_no_visible()
            IF NOT (g_rtia_m.rtiadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " rtiaent = " ||g_enterprise|| " AND",
                                  " rtiadocno = '", g_rtia_m.rtiadocno, "' "
 
               #填到對應位置
               CALL artt600_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
               INITIALIZE g_wc2_table6 TO NULL
 
               INITIALIZE g_wc2_table7 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtia_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtib_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtic_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xrcd_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtie_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtik_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtin_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "prek_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
                  OR NOT cl_null(g_wc2_table6)
 
                  OR NOT cl_null(g_wc2_table7)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF
 
                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL artt600_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
               INITIALIZE g_wc2_table6 TO NULL
 
               INITIALIZE g_wc2_table7 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtia_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtib_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtic_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "xrcd_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtie_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtik_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "rtin_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "prek_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
                  OR NOT cl_null(g_wc2_table6)
 
                  OR NOT cl_null(g_wc2_table7)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF
 
                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL artt600_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL artt600_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL artt600_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL artt600_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt600_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL artt600_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt600_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL artt600_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt600_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL artt600_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt600_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL artt600_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt600_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_rtib_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_rtib2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_rtib3_d)
                  LET g_export_id[3]   = "s_detail3"
                  LET g_export_node[4] = base.typeInfo.create(g_rtib4_d)
                  LET g_export_id[4]   = "s_detail4"
                  LET g_export_node[5] = base.typeInfo.create(g_rtib5_d)
                  LET g_export_id[5]   = "s_detail5"
                  LET g_export_node[6] = base.typeInfo.create(g_rtib6_d)
                  LET g_export_id[6]   = "s_detail6"
                  LET g_export_node[7] = base.typeInfo.create(g_rtib7_d)
                  LET g_export_id[7]   = "s_detail7"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD rtibseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION artt600_discount
            LET g_action_choice="artt600_discount"
            IF cl_auth_chk_act("artt600_discount") THEN
               
               #add-point:ON ACTION artt600_discount name="menu.artt600_discount"
               {<point name="menu.artt600_discount" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION artt600_gift
            LET g_action_choice="artt600_gift"
            IF cl_auth_chk_act("artt600_gift") THEN
               
               #add-point:ON ACTION artt600_gift name="menu.artt600_gift"
               {<point name="menu.artt600_gift" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL artt600_modify()
               #add-point:ON ACTION modify name="menu.modify"
               {<point name="menu.modify" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL artt600_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               {<point name="menu.modify_detail" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION note_create
            LET g_action_choice="note_create"
            IF cl_auth_chk_act("note_create") THEN
               
               #add-point:ON ACTION note_create name="menu.note_create"
               {<point name="menu.note_create" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION ship_addr_input
            LET g_action_choice="ship_addr_input"
            IF cl_auth_chk_act("ship_addr_input") THEN
               
               #add-point:ON ACTION ship_addr_input name="menu.ship_addr_input"
               {<point name="menu.ship_addr_input" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION artt600_pay_detail
            LET g_action_choice="artt600_pay_detail"
            IF cl_auth_chk_act("artt600_pay_detail") THEN
               
               #add-point:ON ACTION artt600_pay_detail name="menu.artt600_pay_detail"
               {<point name="menu.artt600_pay_detail" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL artt600_delete()
               #add-point:ON ACTION delete name="menu.delete"
               {<point name="menu.delete" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL artt600_insert()
               #add-point:ON ACTION insert name="menu.insert"
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION note
            LET g_action_choice="note"
            IF cl_auth_chk_act("note") THEN
               
               #add-point:ON ACTION note name="menu.note"
               {<point name="menu.note" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION pay_money
            LET g_action_choice="pay_money"
            IF cl_auth_chk_act("pay_money") THEN
               
               #add-point:ON ACTION pay_money name="menu.pay_money"
               {<point name="menu.pay_money" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               &include "erp/art/artt600_rep.4gl"
               #add-point:ON ACTION output.after
               {<point name="menu.after_output" />}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL artt600_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               {<point name="menu.reproduce" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION artt600_pay
            LET g_action_choice="artt600_pay"
            IF cl_auth_chk_act("artt600_pay") THEN
               
               #add-point:ON ACTION artt600_pay name="menu.artt600_pay"
               {<point name="menu.artt600_pay" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION note_void
            LET g_action_choice="note_void"
            IF cl_auth_chk_act("note_void") THEN
               
               #add-point:ON ACTION note_void name="menu.note_void"
               {<point name="menu.note_void" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL artt600_query()
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
               CALL g_curr_diag.setCurrentRow("s_detail5",1)
               CALL g_curr_diag.setCurrentRow("s_detail6",1)
               CALL g_curr_diag.setCurrentRow("s_detail7",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION sel_gift
            LET g_action_choice="sel_gift"
            IF cl_auth_chk_act("sel_gift") THEN
               
               #add-point:ON ACTION sel_gift name="menu.sel_gift"
               {<point name="menu.sel_gift" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL artt600_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL artt600_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL artt600_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_rtia_m.rtiadocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION

{</section>}

{<section id="artt600.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION artt600_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   {<point name="browser_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   {<point name="browser_fill.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT rtiadocno ",
                      " FROM rtia_t ",
                      " ",
                      " LEFT JOIN rtib_t ON rtibent = rtiaent AND rtiadocno = rtibdocno ", "  ",
                      #add-point:browser_fill段sql(rtib_t1) name="browser_fill.cnt.join.}"
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN rtic_t ON rticent = rtiaent AND rtiadocno = rticdocno", "  ",
                      #add-point:browser_fill段sql(rtic_t1) name="browser_fill.cnt.join.rtic_t1"
                      {<point name="browser_fill.cnt.join.rtic_t1"/>}
                      #end add-point
 
                      " LEFT JOIN xrcd_t ON xrcdent = rtiaent AND rtiadocno = xrcddocno", "  ",
                      #add-point:browser_fill段sql(xrcd_t1) name="browser_fill.cnt.join.xrcd_t1"
                      {<point name="browser_fill.cnt.join.xrcd_t1"/>}
                      #end add-point
 
                      " LEFT JOIN rtie_t ON rtieent = rtiaent AND rtiadocno = rtiedocno", "  ",
                      #add-point:browser_fill段sql(rtie_t1) name="browser_fill.cnt.join.rtie_t1"
                      {<point name="browser_fill.cnt.join.rtie_t1"/>}
                      #end add-point
 
                      " LEFT JOIN rtik_t ON rtikent = rtiaent AND rtiadocno = rtikdocno", "  ",
                      #add-point:browser_fill段sql(rtik_t1) name="browser_fill.cnt.join.rtik_t1"
                      {<point name="browser_fill.cnt.join.rtik_t1"/>}
                      #end add-point
 
                      " LEFT JOIN rtin_t ON rtinent = rtiaent AND rtiadocno = rtindocno", "  ",
                      #add-point:browser_fill段sql(rtin_t1) name="browser_fill.cnt.join.rtin_t1"
                      {<point name="browser_fill.cnt.join.rtin_t1"/>}
                      #end add-point
 
                      " LEFT JOIN prek_t ON prekent = rtiaent AND rtiadocno = prekdocno", "  ",
                      #add-point:browser_fill段sql(prek_t1) name="browser_fill.cnt.join.prek_t1"
                      {<point name="browser_fill.cnt.join.prek_t1"/>}
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
 
 
                      " WHERE rtiaent = " ||g_enterprise|| " AND rtibent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("rtia_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT rtiadocno ",
                      " FROM rtia_t ", 
                      "  ",
                      "  ",
                      " WHERE rtiaent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("rtia_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_rtia_m.* TO NULL
      CALL g_rtib_d.clear()        
      CALL g_rtib2_d.clear() 
      CALL g_rtib3_d.clear() 
      CALL g_rtib4_d.clear() 
      CALL g_rtib5_d.clear() 
      CALL g_rtib6_d.clear() 
      CALL g_rtib7_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.rtiasite,t0.rtiadocdt,t0.rtiadocno,t0.rtia002,t0.rtia006 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.rtiastus,t0.rtiasite,t0.rtiadocdt,t0.rtiadocno,t0.rtia002,t0.rtia006, 
          t1.ooefl003 ",
                  " FROM rtia_t t0",
                  "  ",
                  "  LEFT JOIN rtib_t ON rtibent = rtiaent AND rtiadocno = rtibdocno ", "  ", 
                  #add-point:browser_fill段sql(rtib_t1) name="browser_fill.join.rtib_t1"
                  {<point name="browser_fill.join.rtib_t1"/>}
                  #end add-point
                  "  LEFT JOIN rtic_t ON rticent = rtiaent AND rtiadocno = rticdocno", "  ", 
                  #add-point:browser_fill段sql(rtic_t1) name="browser_fill.join.rtic_t1"
                  {<point name="browser_fill.join.rtic_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN xrcd_t ON xrcdent = rtiaent AND rtiadocno = xrcddocno", "  ", 
                  #add-point:browser_fill段sql(xrcd_t1) name="browser_fill.join.xrcd_t1"
                  {<point name="browser_fill.join.xrcd_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN rtie_t ON rtieent = rtiaent AND rtiadocno = rtiedocno", "  ", 
                  #add-point:browser_fill段sql(rtie_t1) name="browser_fill.join.rtie_t1"
                  {<point name="browser_fill.join.rtie_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN rtik_t ON rtikent = rtiaent AND rtiadocno = rtikdocno", "  ", 
                  #add-point:browser_fill段sql(rtik_t1) name="browser_fill.join.rtik_t1"
                  {<point name="browser_fill.join.rtik_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN rtin_t ON rtinent = rtiaent AND rtiadocno = rtindocno", "  ", 
                  #add-point:browser_fill段sql(rtin_t1) name="browser_fill.join.rtin_t1"
                  {<point name="browser_fill.join.rtin_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN prek_t ON prekent = rtiaent AND rtiadocno = prekdocno", "  ", 
                  #add-point:browser_fill段sql(prek_t1) name="browser_fill.join.prek_t1"
                  {<point name="browser_fill.join.prek_t1"/>}
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
 
 
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtiasite AND t1.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.rtiaent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("rtia_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.rtiastus,t0.rtiasite,t0.rtiadocdt,t0.rtiadocno,t0.rtia002,t0.rtia006, 
          t1.ooefl003 ",
                  " FROM rtia_t t0",
                  "  ",
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtiasite AND t1.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.rtiaent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("rtia_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY rtiadocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"rtia_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      {<point name="browser_fill.open"/>}
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_rtiasite,g_browser[g_cnt].b_rtiadocdt, 
          g_browser[g_cnt].b_rtiadocno,g_browser[g_cnt].b_rtia002,g_browser[g_cnt].b_rtia006,g_browser[g_cnt].b_rtiasite_desc 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         {<point name="browser_fill.reference"/>}
         #end add-point
      
         #遮罩相關處理
         CALL artt600_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "S"
            LET g_browser[g_cnt].b_statepic = "stus/16/posted.png"
         WHEN "Z"
            LET g_browser[g_cnt].b_statepic = "stus/16/unposted.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_rtiadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION

{</section>}

{<section id="artt600.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION artt600_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   {<point name="ui_headershow.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   {<point name="ui_headershow.define"/>} 
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   {<point name="ui_headershow.pre_function"/>}
   #end add-point
   
   LET g_rtia_m.rtiadocno = g_browser[g_current_idx].b_rtiadocno   
 
   EXECUTE artt600_master_referesh USING g_rtia_m.rtiadocno INTO g_rtia_m.rtiasite,g_rtia_m.rtiadocdt, 
       g_rtia_m.rtiadocno,g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia059,g_rtia_m.rtia060,g_rtia_m.rtia004, 
       g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia048,g_rtia_m.rtia053,g_rtia_m.rtiastus,g_rtia_m.rtia007, 
       g_rtia_m.rtia008,g_rtia_m.rtia009,g_rtia_m.rtia041,g_rtia_m.rtia013,g_rtia_m.rtia014,g_rtia_m.rtia015, 
       g_rtia_m.rtia016,g_rtia_m.rtia051,g_rtia_m.rtia010,g_rtia_m.rtia011,g_rtia_m.rtia012,g_rtia_m.rtia017, 
       g_rtia_m.rtia018,g_rtia_m.rtia019,g_rtia_m.rtia020,g_rtia_m.rtia021,g_rtia_m.rtia022,g_rtia_m.rtia023, 
       g_rtia_m.rtia024,g_rtia_m.rtia025,g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029, 
       g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036, 
       g_rtia_m.rtia037,g_rtia_m.rtia038,g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid, 
       g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiacnfid,g_rtia_m.rtiamoddt, 
       g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt,g_rtia_m.rtiasite_desc,g_rtia_m.rtia002_desc, 
       g_rtia_m.rtia004_desc,g_rtia_m.rtia005_desc,g_rtia_m.rtia009_desc,g_rtia_m.rtia010_desc,g_rtia_m.rtia011_desc, 
       g_rtia_m.rtia012_desc,g_rtia_m.rtia018_desc,g_rtia_m.rtia024_desc,g_rtia_m.rtia025_desc,g_rtia_m.rtia036_desc, 
       g_rtia_m.rtia037_desc,g_rtia_m.rtia038_desc,g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiamodid_desc,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiapstid_desc 

   
   CALL artt600_rtia_t_mask()
   CALL artt600_show()
      
END FUNCTION

{</section>}

{<section id="artt600.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION artt600_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   {<point name="ui_detailshow.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   {<point name="ui_detailshow.define"/>} 
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail6",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail7",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="artt600.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION artt600_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   {<point name="ui_browser_refresh.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   {<point name="ui_browser_refresh.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   {<point name="ui_browser_refresh.pre_function"/>}
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_rtiadocno = g_rtia_m.rtiadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="artt600.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION artt600_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   {<point name="cs.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   {<point name="cs.pre_function"/>}
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_rtia_m.* TO NULL
   CALL g_rtib_d.clear()        
   CALL g_rtib2_d.clear() 
   CALL g_rtib3_d.clear() 
   CALL g_rtib4_d.clear() 
   CALL g_rtib5_d.clear() 
   CALL g_rtib6_d.clear() 
   CALL g_rtib7_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
   INITIALIZE g_wc2_table5 TO NULL
 
   INITIALIZE g_wc2_table6 TO NULL
 
   INITIALIZE g_wc2_table7 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON rtiasite,rtiadocdt,rtiadocno,rtia001,rtia002,rtia059,rtia060,rtia004, 
          rtia005,rtia006,rtia048,rtia053,rtiastus,rtia007,rtia008,rtia009,rtia041,rtia013,rtia014,rtia015, 
          rtia016,rtia051,rtia010,rtia011,rtia012,rtia017,rtia018,rtia019,rtia020,rtia021,rtia022,rtia023, 
          rtia024,rtia025,rtia026,rtia027,rtia028,rtia029,rtia030,rtia032,rtia033,rtia034,rtia035,rtia036, 
          rtia037,rtia038,rtia039,isaf009,isaf010,isaf044,isaf202,isaf203,isaf204,isaf201,isaf207,rtiaownid, 
          rtiaowndp,rtiacrtid,rtiacrtdp,rtiacrtdt,rtiamodid,rtiacnfid,rtiamoddt,rtiacnfdt,rtiapstid, 
          rtiapstdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<rtiacrtdt>>----
         AFTER FIELD rtiacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<rtiamoddt>>----
         AFTER FIELD rtiamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtiacnfdt>>----
         AFTER FIELD rtiacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtiapstdt>>----
         AFTER FIELD rtiapstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.rtiasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiasite
            #add-point:ON ACTION controlp INFIELD rtiasite name="construct.c.rtiasite"
            {<point name="construct.c.rtiasite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiasite
            #add-point:BEFORE FIELD rtiasite name="construct.b.rtiasite"
            {<point name="construct.b.rtiasite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiasite
            
            #add-point:AFTER FIELD rtiasite name="construct.a.rtiasite"
            {<point name="construct.a.rtiasite" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiadocdt
            #add-point:BEFORE FIELD rtiadocdt name="construct.b.rtiadocdt"
            {<point name="construct.b.rtiadocdt" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiadocdt
            
            #add-point:AFTER FIELD rtiadocdt name="construct.a.rtiadocdt"
            {<point name="construct.a.rtiadocdt" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtiadocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiadocdt
            #add-point:ON ACTION controlp INFIELD rtiadocdt name="construct.c.rtiadocdt"
            {<point name="construct.c.rtiadocdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtiadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiadocno
            #add-point:ON ACTION controlp INFIELD rtiadocno name="construct.c.rtiadocno"
            {<point name="construct.c.rtiadocno" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiadocno
            #add-point:BEFORE FIELD rtiadocno name="construct.b.rtiadocno"
            {<point name="construct.b.rtiadocno" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiadocno
            
            #add-point:AFTER FIELD rtiadocno name="construct.a.rtiadocno"
            {<point name="construct.a.rtiadocno" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia001
            #add-point:ON ACTION controlp INFIELD rtia001 name="construct.c.rtia001"
            {<point name="construct.c.rtia001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia001
            #add-point:BEFORE FIELD rtia001 name="construct.b.rtia001"
            {<point name="construct.b.rtia001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia001
            
            #add-point:AFTER FIELD rtia001 name="construct.a.rtia001"
            {<point name="construct.a.rtia001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia002
            #add-point:ON ACTION controlp INFIELD rtia002 name="construct.c.rtia002"
            {<point name="construct.c.rtia002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia002
            #add-point:BEFORE FIELD rtia002 name="construct.b.rtia002"
            {<point name="construct.b.rtia002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia002
            
            #add-point:AFTER FIELD rtia002 name="construct.a.rtia002"
            {<point name="construct.a.rtia002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia059
            #add-point:BEFORE FIELD rtia059 name="construct.b.rtia059"
            {<point name="construct.b.rtia059" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia059
            
            #add-point:AFTER FIELD rtia059 name="construct.a.rtia059"
            {<point name="construct.a.rtia059" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia059
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia059
            #add-point:ON ACTION controlp INFIELD rtia059 name="construct.c.rtia059"
            {<point name="construct.c.rtia059" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia060
            #add-point:BEFORE FIELD rtia060 name="construct.b.rtia060"
            {<point name="construct.b.rtia060" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia060
            
            #add-point:AFTER FIELD rtia060 name="construct.a.rtia060"
            {<point name="construct.a.rtia060" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia060
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia060
            #add-point:ON ACTION controlp INFIELD rtia060 name="construct.c.rtia060"
            {<point name="construct.c.rtia060" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtia004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia004
            #add-point:ON ACTION controlp INFIELD rtia004 name="construct.c.rtia004"
            {<point name="construct.c.rtia004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia004
            #add-point:BEFORE FIELD rtia004 name="construct.b.rtia004"
            {<point name="construct.b.rtia004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia004
            
            #add-point:AFTER FIELD rtia004 name="construct.a.rtia004"
            {<point name="construct.a.rtia004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia005
            #add-point:ON ACTION controlp INFIELD rtia005 name="construct.c.rtia005"
            {<point name="construct.c.rtia005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia005
            #add-point:BEFORE FIELD rtia005 name="construct.b.rtia005"
            {<point name="construct.b.rtia005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia005
            
            #add-point:AFTER FIELD rtia005 name="construct.a.rtia005"
            {<point name="construct.a.rtia005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia006
            #add-point:BEFORE FIELD rtia006 name="construct.b.rtia006"
            {<point name="construct.b.rtia006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia006
            
            #add-point:AFTER FIELD rtia006 name="construct.a.rtia006"
            {<point name="construct.a.rtia006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia006
            #add-point:ON ACTION controlp INFIELD rtia006 name="construct.c.rtia006"
            {<point name="construct.c.rtia006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia048
            #add-point:BEFORE FIELD rtia048 name="construct.b.rtia048"
            {<point name="construct.b.rtia048" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia048
            
            #add-point:AFTER FIELD rtia048 name="construct.a.rtia048"
            {<point name="construct.a.rtia048" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia048
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia048
            #add-point:ON ACTION controlp INFIELD rtia048 name="construct.c.rtia048"
            {<point name="construct.c.rtia048" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia053
            #add-point:BEFORE FIELD rtia053 name="construct.b.rtia053"
            {<point name="construct.b.rtia053" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia053
            
            #add-point:AFTER FIELD rtia053 name="construct.a.rtia053"
            {<point name="construct.a.rtia053" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia053
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia053
            #add-point:ON ACTION controlp INFIELD rtia053 name="construct.c.rtia053"
            {<point name="construct.c.rtia053" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiastus
            #add-point:BEFORE FIELD rtiastus name="construct.b.rtiastus"
            {<point name="construct.b.rtiastus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiastus
            
            #add-point:AFTER FIELD rtiastus name="construct.a.rtiastus"
            {<point name="construct.a.rtiastus" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtiastus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiastus
            #add-point:ON ACTION controlp INFIELD rtiastus name="construct.c.rtiastus"
            {<point name="construct.c.rtiastus" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtia007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia007
            #add-point:ON ACTION controlp INFIELD rtia007 name="construct.c.rtia007"
            {<point name="construct.c.rtia007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia007
            #add-point:BEFORE FIELD rtia007 name="construct.b.rtia007"
            {<point name="construct.b.rtia007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia007
            
            #add-point:AFTER FIELD rtia007 name="construct.a.rtia007"
            {<point name="construct.a.rtia007" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia008
            #add-point:BEFORE FIELD rtia008 name="construct.b.rtia008"
            {<point name="construct.b.rtia008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia008
            
            #add-point:AFTER FIELD rtia008 name="construct.a.rtia008"
            {<point name="construct.a.rtia008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia008
            #add-point:ON ACTION controlp INFIELD rtia008 name="construct.c.rtia008"
            {<point name="construct.c.rtia008" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtia009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia009
            #add-point:ON ACTION controlp INFIELD rtia009 name="construct.c.rtia009"
            {<point name="construct.c.rtia009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia009
            #add-point:BEFORE FIELD rtia009 name="construct.b.rtia009"
            {<point name="construct.b.rtia009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia009
            
            #add-point:AFTER FIELD rtia009 name="construct.a.rtia009"
            {<point name="construct.a.rtia009" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia041
            #add-point:BEFORE FIELD rtia041 name="construct.b.rtia041"
            {<point name="construct.b.rtia041" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia041
            
            #add-point:AFTER FIELD rtia041 name="construct.a.rtia041"
            {<point name="construct.a.rtia041" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia041
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia041
            #add-point:ON ACTION controlp INFIELD rtia041 name="construct.c.rtia041"
            {<point name="construct.c.rtia041" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia013
            #add-point:BEFORE FIELD rtia013 name="construct.b.rtia013"
            {<point name="construct.b.rtia013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia013
            
            #add-point:AFTER FIELD rtia013 name="construct.a.rtia013"
            {<point name="construct.a.rtia013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia013
            #add-point:ON ACTION controlp INFIELD rtia013 name="construct.c.rtia013"
            {<point name="construct.c.rtia013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia014
            #add-point:BEFORE FIELD rtia014 name="construct.b.rtia014"
            {<point name="construct.b.rtia014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia014
            
            #add-point:AFTER FIELD rtia014 name="construct.a.rtia014"
            {<point name="construct.a.rtia014" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia014
            #add-point:ON ACTION controlp INFIELD rtia014 name="construct.c.rtia014"
            {<point name="construct.c.rtia014" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia015
            #add-point:BEFORE FIELD rtia015 name="construct.b.rtia015"
            {<point name="construct.b.rtia015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia015
            
            #add-point:AFTER FIELD rtia015 name="construct.a.rtia015"
            {<point name="construct.a.rtia015" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia015
            #add-point:ON ACTION controlp INFIELD rtia015 name="construct.c.rtia015"
            {<point name="construct.c.rtia015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia016
            #add-point:BEFORE FIELD rtia016 name="construct.b.rtia016"
            {<point name="construct.b.rtia016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia016
            
            #add-point:AFTER FIELD rtia016 name="construct.a.rtia016"
            {<point name="construct.a.rtia016" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia016
            #add-point:ON ACTION controlp INFIELD rtia016 name="construct.c.rtia016"
            {<point name="construct.c.rtia016" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia051
            #add-point:BEFORE FIELD rtia051 name="construct.b.rtia051"
            {<point name="construct.b.rtia051" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia051
            
            #add-point:AFTER FIELD rtia051 name="construct.a.rtia051"
            {<point name="construct.a.rtia051" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia051
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia051
            #add-point:ON ACTION controlp INFIELD rtia051 name="construct.c.rtia051"
            {<point name="construct.c.rtia051" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtia010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia010
            #add-point:ON ACTION controlp INFIELD rtia010 name="construct.c.rtia010"
            {<point name="construct.c.rtia010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia010
            #add-point:BEFORE FIELD rtia010 name="construct.b.rtia010"
            {<point name="construct.b.rtia010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia010
            
            #add-point:AFTER FIELD rtia010 name="construct.a.rtia010"
            {<point name="construct.a.rtia010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia011
            #add-point:ON ACTION controlp INFIELD rtia011 name="construct.c.rtia011"
            {<point name="construct.c.rtia011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia011
            #add-point:BEFORE FIELD rtia011 name="construct.b.rtia011"
            {<point name="construct.b.rtia011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia011
            
            #add-point:AFTER FIELD rtia011 name="construct.a.rtia011"
            {<point name="construct.a.rtia011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia012
            #add-point:ON ACTION controlp INFIELD rtia012 name="construct.c.rtia012"
            {<point name="construct.c.rtia012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia012
            #add-point:BEFORE FIELD rtia012 name="construct.b.rtia012"
            {<point name="construct.b.rtia012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia012
            
            #add-point:AFTER FIELD rtia012 name="construct.a.rtia012"
            {<point name="construct.a.rtia012" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia017
            #add-point:BEFORE FIELD rtia017 name="construct.b.rtia017"
            {<point name="construct.b.rtia017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia017
            
            #add-point:AFTER FIELD rtia017 name="construct.a.rtia017"
            {<point name="construct.a.rtia017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia017
            #add-point:ON ACTION controlp INFIELD rtia017 name="construct.c.rtia017"
            {<point name="construct.c.rtia017" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtia018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia018
            #add-point:ON ACTION controlp INFIELD rtia018 name="construct.c.rtia018"
            {<point name="construct.c.rtia018" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia018
            #add-point:BEFORE FIELD rtia018 name="construct.b.rtia018"
            {<point name="construct.b.rtia018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia018
            
            #add-point:AFTER FIELD rtia018 name="construct.a.rtia018"
            {<point name="construct.a.rtia018" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia019
            #add-point:ON ACTION controlp INFIELD rtia019 name="construct.c.rtia019"
            {<point name="construct.c.rtia019" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia019
            #add-point:BEFORE FIELD rtia019 name="construct.b.rtia019"
            {<point name="construct.b.rtia019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia019
            
            #add-point:AFTER FIELD rtia019 name="construct.a.rtia019"
            {<point name="construct.a.rtia019" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia020
            #add-point:BEFORE FIELD rtia020 name="construct.b.rtia020"
            {<point name="construct.b.rtia020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia020
            
            #add-point:AFTER FIELD rtia020 name="construct.a.rtia020"
            {<point name="construct.a.rtia020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia020
            #add-point:ON ACTION controlp INFIELD rtia020 name="construct.c.rtia020"
            {<point name="construct.c.rtia020" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia021
            #add-point:BEFORE FIELD rtia021 name="construct.b.rtia021"
            {<point name="construct.b.rtia021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia021
            
            #add-point:AFTER FIELD rtia021 name="construct.a.rtia021"
            {<point name="construct.a.rtia021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia021
            #add-point:ON ACTION controlp INFIELD rtia021 name="construct.c.rtia021"
            {<point name="construct.c.rtia021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia022
            #add-point:BEFORE FIELD rtia022 name="construct.b.rtia022"
            {<point name="construct.b.rtia022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia022
            
            #add-point:AFTER FIELD rtia022 name="construct.a.rtia022"
            {<point name="construct.a.rtia022" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia022
            #add-point:ON ACTION controlp INFIELD rtia022 name="construct.c.rtia022"
            {<point name="construct.c.rtia022" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia023
            #add-point:BEFORE FIELD rtia023 name="construct.b.rtia023"
            {<point name="construct.b.rtia023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia023
            
            #add-point:AFTER FIELD rtia023 name="construct.a.rtia023"
            {<point name="construct.a.rtia023" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia023
            #add-point:ON ACTION controlp INFIELD rtia023 name="construct.c.rtia023"
            {<point name="construct.c.rtia023" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtia024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia024
            #add-point:ON ACTION controlp INFIELD rtia024 name="construct.c.rtia024"
            {<point name="construct.c.rtia024" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia024
            #add-point:BEFORE FIELD rtia024 name="construct.b.rtia024"
            {<point name="construct.b.rtia024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia024
            
            #add-point:AFTER FIELD rtia024 name="construct.a.rtia024"
            {<point name="construct.a.rtia024" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia025
            #add-point:ON ACTION controlp INFIELD rtia025 name="construct.c.rtia025"
            {<point name="construct.c.rtia025" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia025
            #add-point:BEFORE FIELD rtia025 name="construct.b.rtia025"
            {<point name="construct.b.rtia025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia025
            
            #add-point:AFTER FIELD rtia025 name="construct.a.rtia025"
            {<point name="construct.a.rtia025" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia026
            #add-point:ON ACTION controlp INFIELD rtia026 name="construct.c.rtia026"
            {<point name="construct.c.rtia026" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia026
            #add-point:BEFORE FIELD rtia026 name="construct.b.rtia026"
            {<point name="construct.b.rtia026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia026
            
            #add-point:AFTER FIELD rtia026 name="construct.a.rtia026"
            {<point name="construct.a.rtia026" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia027
            #add-point:BEFORE FIELD rtia027 name="construct.b.rtia027"
            {<point name="construct.b.rtia027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia027
            
            #add-point:AFTER FIELD rtia027 name="construct.a.rtia027"
            {<point name="construct.a.rtia027" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia027
            #add-point:ON ACTION controlp INFIELD rtia027 name="construct.c.rtia027"
            {<point name="construct.c.rtia027" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtia028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia028
            #add-point:ON ACTION controlp INFIELD rtia028 name="construct.c.rtia028"
            {<point name="construct.c.rtia028" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia028
            #add-point:BEFORE FIELD rtia028 name="construct.b.rtia028"
            {<point name="construct.b.rtia028" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia028
            
            #add-point:AFTER FIELD rtia028 name="construct.a.rtia028"
            {<point name="construct.a.rtia028" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia029
            #add-point:BEFORE FIELD rtia029 name="construct.b.rtia029"
            {<point name="construct.b.rtia029" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia029
            
            #add-point:AFTER FIELD rtia029 name="construct.a.rtia029"
            {<point name="construct.a.rtia029" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia029
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia029
            #add-point:ON ACTION controlp INFIELD rtia029 name="construct.c.rtia029"
            {<point name="construct.c.rtia029" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia030
            #add-point:BEFORE FIELD rtia030 name="construct.b.rtia030"
            {<point name="construct.b.rtia030" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia030
            
            #add-point:AFTER FIELD rtia030 name="construct.a.rtia030"
            {<point name="construct.a.rtia030" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia030
            #add-point:ON ACTION controlp INFIELD rtia030 name="construct.c.rtia030"
            {<point name="construct.c.rtia030" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia032
            #add-point:BEFORE FIELD rtia032 name="construct.b.rtia032"
            {<point name="construct.b.rtia032" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia032
            
            #add-point:AFTER FIELD rtia032 name="construct.a.rtia032"
            {<point name="construct.a.rtia032" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia032
            #add-point:ON ACTION controlp INFIELD rtia032 name="construct.c.rtia032"
            {<point name="construct.c.rtia032" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia033
            #add-point:BEFORE FIELD rtia033 name="construct.b.rtia033"
            {<point name="construct.b.rtia033" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia033
            
            #add-point:AFTER FIELD rtia033 name="construct.a.rtia033"
            {<point name="construct.a.rtia033" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia033
            #add-point:ON ACTION controlp INFIELD rtia033 name="construct.c.rtia033"
            {<point name="construct.c.rtia033" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia034
            #add-point:BEFORE FIELD rtia034 name="construct.b.rtia034"
            {<point name="construct.b.rtia034" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia034
            
            #add-point:AFTER FIELD rtia034 name="construct.a.rtia034"
            {<point name="construct.a.rtia034" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia034
            #add-point:ON ACTION controlp INFIELD rtia034 name="construct.c.rtia034"
            {<point name="construct.c.rtia034" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia035
            #add-point:BEFORE FIELD rtia035 name="construct.b.rtia035"
            {<point name="construct.b.rtia035" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia035
            
            #add-point:AFTER FIELD rtia035 name="construct.a.rtia035"
            {<point name="construct.a.rtia035" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia035
            #add-point:ON ACTION controlp INFIELD rtia035 name="construct.c.rtia035"
            {<point name="construct.c.rtia035" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtia036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia036
            #add-point:ON ACTION controlp INFIELD rtia036 name="construct.c.rtia036"
            {<point name="construct.c.rtia036" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia036
            #add-point:BEFORE FIELD rtia036 name="construct.b.rtia036"
            {<point name="construct.b.rtia036" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia036
            
            #add-point:AFTER FIELD rtia036 name="construct.a.rtia036"
            {<point name="construct.a.rtia036" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia037
            #add-point:BEFORE FIELD rtia037 name="construct.b.rtia037"
            {<point name="construct.b.rtia037" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia037
            
            #add-point:AFTER FIELD rtia037 name="construct.a.rtia037"
            {<point name="construct.a.rtia037" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia037
            #add-point:ON ACTION controlp INFIELD rtia037 name="construct.c.rtia037"
            {<point name="construct.c.rtia037" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtia038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia038
            #add-point:ON ACTION controlp INFIELD rtia038 name="construct.c.rtia038"
            {<point name="construct.c.rtia038" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia038
            #add-point:BEFORE FIELD rtia038 name="construct.b.rtia038"
            {<point name="construct.b.rtia038" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia038
            
            #add-point:AFTER FIELD rtia038 name="construct.a.rtia038"
            {<point name="construct.a.rtia038" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia039
            #add-point:BEFORE FIELD rtia039 name="construct.b.rtia039"
            {<point name="construct.b.rtia039" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia039
            
            #add-point:AFTER FIELD rtia039 name="construct.a.rtia039"
            {<point name="construct.a.rtia039" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtia039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia039
            #add-point:ON ACTION controlp INFIELD rtia039 name="construct.c.rtia039"
            {<point name="construct.c.rtia039" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isaf009
            #add-point:BEFORE FIELD isaf009 name="construct.b.isaf009"
            {<point name="construct.b.isaf009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isaf009
            
            #add-point:AFTER FIELD isaf009 name="construct.a.isaf009"
            {<point name="construct.a.isaf009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.isaf009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isaf009
            #add-point:ON ACTION controlp INFIELD isaf009 name="construct.c.isaf009"
            {<point name="construct.c.isaf009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isaf010
            #add-point:BEFORE FIELD isaf010 name="construct.b.isaf010"
            {<point name="construct.b.isaf010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isaf010
            
            #add-point:AFTER FIELD isaf010 name="construct.a.isaf010"
            {<point name="construct.a.isaf010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.isaf010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isaf010
            #add-point:ON ACTION controlp INFIELD isaf010 name="construct.c.isaf010"
            {<point name="construct.c.isaf010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isaf044
            #add-point:BEFORE FIELD isaf044 name="construct.b.isaf044"
            {<point name="construct.b.isaf044" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isaf044
            
            #add-point:AFTER FIELD isaf044 name="construct.a.isaf044"
            {<point name="construct.a.isaf044" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.isaf044
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isaf044
            #add-point:ON ACTION controlp INFIELD isaf044 name="construct.c.isaf044"
            {<point name="construct.c.isaf044" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isaf202
            #add-point:BEFORE FIELD isaf202 name="construct.b.isaf202"
            {<point name="construct.b.isaf202" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isaf202
            
            #add-point:AFTER FIELD isaf202 name="construct.a.isaf202"
            {<point name="construct.a.isaf202" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.isaf202
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isaf202
            #add-point:ON ACTION controlp INFIELD isaf202 name="construct.c.isaf202"
            {<point name="construct.c.isaf202" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isaf203
            #add-point:BEFORE FIELD isaf203 name="construct.b.isaf203"
            {<point name="construct.b.isaf203" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isaf203
            
            #add-point:AFTER FIELD isaf203 name="construct.a.isaf203"
            {<point name="construct.a.isaf203" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.isaf203
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isaf203
            #add-point:ON ACTION controlp INFIELD isaf203 name="construct.c.isaf203"
            {<point name="construct.c.isaf203" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isaf204
            #add-point:BEFORE FIELD isaf204 name="construct.b.isaf204"
            {<point name="construct.b.isaf204" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isaf204
            
            #add-point:AFTER FIELD isaf204 name="construct.a.isaf204"
            {<point name="construct.a.isaf204" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.isaf204
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isaf204
            #add-point:ON ACTION controlp INFIELD isaf204 name="construct.c.isaf204"
            {<point name="construct.c.isaf204" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isaf201
            #add-point:BEFORE FIELD isaf201 name="construct.b.isaf201"
            {<point name="construct.b.isaf201" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isaf201
            
            #add-point:AFTER FIELD isaf201 name="construct.a.isaf201"
            {<point name="construct.a.isaf201" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.isaf201
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isaf201
            #add-point:ON ACTION controlp INFIELD isaf201 name="construct.c.isaf201"
            {<point name="construct.c.isaf201" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD isaf207
            #add-point:BEFORE FIELD isaf207 name="construct.b.isaf207"
            {<point name="construct.b.isaf207" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD isaf207
            
            #add-point:AFTER FIELD isaf207 name="construct.a.isaf207"
            {<point name="construct.a.isaf207" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.isaf207
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD isaf207
            #add-point:ON ACTION controlp INFIELD isaf207 name="construct.c.isaf207"
            {<point name="construct.c.isaf207" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtiaownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiaownid
            #add-point:ON ACTION controlp INFIELD rtiaownid name="construct.c.rtiaownid"
            {<point name="construct.c.rtiaownid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiaownid
            #add-point:BEFORE FIELD rtiaownid name="construct.b.rtiaownid"
            {<point name="construct.b.rtiaownid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiaownid
            
            #add-point:AFTER FIELD rtiaownid name="construct.a.rtiaownid"
            {<point name="construct.a.rtiaownid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtiaowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiaowndp
            #add-point:ON ACTION controlp INFIELD rtiaowndp name="construct.c.rtiaowndp"
            {<point name="construct.c.rtiaowndp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiaowndp
            #add-point:BEFORE FIELD rtiaowndp name="construct.b.rtiaowndp"
            {<point name="construct.b.rtiaowndp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiaowndp
            
            #add-point:AFTER FIELD rtiaowndp name="construct.a.rtiaowndp"
            {<point name="construct.a.rtiaowndp" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtiacrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiacrtid
            #add-point:ON ACTION controlp INFIELD rtiacrtid name="construct.c.rtiacrtid"
            {<point name="construct.c.rtiacrtid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiacrtid
            #add-point:BEFORE FIELD rtiacrtid name="construct.b.rtiacrtid"
            {<point name="construct.b.rtiacrtid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiacrtid
            
            #add-point:AFTER FIELD rtiacrtid name="construct.a.rtiacrtid"
            {<point name="construct.a.rtiacrtid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtiacrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiacrtdp
            #add-point:ON ACTION controlp INFIELD rtiacrtdp name="construct.c.rtiacrtdp"
            {<point name="construct.c.rtiacrtdp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiacrtdp
            #add-point:BEFORE FIELD rtiacrtdp name="construct.b.rtiacrtdp"
            {<point name="construct.b.rtiacrtdp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiacrtdp
            
            #add-point:AFTER FIELD rtiacrtdp name="construct.a.rtiacrtdp"
            {<point name="construct.a.rtiacrtdp" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiacrtdt
            #add-point:BEFORE FIELD rtiacrtdt name="construct.b.rtiacrtdt"
            {<point name="construct.b.rtiacrtdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtiamodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiamodid
            #add-point:ON ACTION controlp INFIELD rtiamodid name="construct.c.rtiamodid"
            {<point name="construct.c.rtiamodid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiamodid
            #add-point:BEFORE FIELD rtiamodid name="construct.b.rtiamodid"
            {<point name="construct.b.rtiamodid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiamodid
            
            #add-point:AFTER FIELD rtiamodid name="construct.a.rtiamodid"
            {<point name="construct.a.rtiamodid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtiacnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiacnfid
            #add-point:ON ACTION controlp INFIELD rtiacnfid name="construct.c.rtiacnfid"
            {<point name="construct.c.rtiacnfid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiacnfid
            #add-point:BEFORE FIELD rtiacnfid name="construct.b.rtiacnfid"
            {<point name="construct.b.rtiacnfid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiacnfid
            
            #add-point:AFTER FIELD rtiacnfid name="construct.a.rtiacnfid"
            {<point name="construct.a.rtiacnfid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiamoddt
            #add-point:BEFORE FIELD rtiamoddt name="construct.b.rtiamoddt"
            {<point name="construct.b.rtiamoddt" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiacnfdt
            #add-point:BEFORE FIELD rtiacnfdt name="construct.b.rtiacnfdt"
            {<point name="construct.b.rtiacnfdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.rtiapstid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiapstid
            #add-point:ON ACTION controlp INFIELD rtiapstid name="construct.c.rtiapstid"
            {<point name="construct.c.rtiapstid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiapstid
            #add-point:BEFORE FIELD rtiapstid name="construct.b.rtiapstid"
            {<point name="construct.b.rtiapstid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiapstid
            
            #add-point:AFTER FIELD rtiapstid name="construct.a.rtiapstid"
            {<point name="construct.a.rtiapstid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiapstdt
            #add-point:BEFORE FIELD rtiapstdt name="construct.b.rtiapstdt"
            {<point name="construct.b.rtiapstdt" />}
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON rtibsite,rtibunit,rtiborga,rtibseq,rtib035,rtib001,rtib002,rtib003,rtib004, 
          rtib005,rtib006,rtib008,rtib009,rtib010,rtib012,rtib013,rtib014,rtib015,rtib016,rtib018,rtib017, 
          rtib019,rtib020,rtib021,rtib022,rtib024,rtib025,rtib026,rtib027,rtib032,rtib033,rtib028,rtib030, 
          rtib039
           FROM s_detail1[1].rtibsite,s_detail1[1].rtibunit,s_detail1[1].rtiborga,s_detail1[1].rtibseq, 
               s_detail1[1].rtib035,s_detail1[1].rtib001,s_detail1[1].rtib002,s_detail1[1].rtib003,s_detail1[1].rtib004, 
               s_detail1[1].rtib005,s_detail1[1].rtib006,s_detail1[1].rtib008,s_detail1[1].rtib009,s_detail1[1].rtib010, 
               s_detail1[1].rtib012,s_detail1[1].rtib013,s_detail1[1].rtib014,s_detail1[1].rtib015,s_detail1[1].rtib016, 
               s_detail1[1].rtib018,s_detail1[1].rtib017,s_detail1[1].rtib019,s_detail1[1].rtib020,s_detail1[1].rtib021, 
               s_detail1[1].rtib022,s_detail1[1].rtib024,s_detail1[1].rtib025,s_detail1[1].rtib026,s_detail1[1].rtib027, 
               s_detail1[1].rtib032,s_detail1[1].rtib033,s_detail1[1].rtib028,s_detail1[1].rtib030,s_detail1[1].rtib039 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #Ctrlp:construct.c.page1.rtibsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtibsite
            #add-point:ON ACTION controlp INFIELD rtibsite name="construct.c.page1.rtibsite"
            {<point name="construct.c.page1.rtibsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtibsite
            #add-point:BEFORE FIELD rtibsite name="construct.b.page1.rtibsite"
            {<point name="construct.b.page1.rtibsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtibsite
            
            #add-point:AFTER FIELD rtibsite name="construct.a.page1.rtibsite"
            {<point name="construct.a.page1.rtibsite" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtibunit
            #add-point:BEFORE FIELD rtibunit name="construct.b.page1.rtibunit"
            {<point name="construct.b.page1.rtibunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtibunit
            
            #add-point:AFTER FIELD rtibunit name="construct.a.page1.rtibunit"
            {<point name="construct.a.page1.rtibunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtibunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtibunit
            #add-point:ON ACTION controlp INFIELD rtibunit name="construct.c.page1.rtibunit"
            {<point name="construct.c.page1.rtibunit" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiborga
            #add-point:BEFORE FIELD rtiborga name="construct.b.page1.rtiborga"
            {<point name="construct.b.page1.rtiborga" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiborga
            
            #add-point:AFTER FIELD rtiborga name="construct.a.page1.rtiborga"
            {<point name="construct.a.page1.rtiborga" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtiborga
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiborga
            #add-point:ON ACTION controlp INFIELD rtiborga name="construct.c.page1.rtiborga"
            {<point name="construct.c.page1.rtiborga" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtibseq
            #add-point:BEFORE FIELD rtibseq name="construct.b.page1.rtibseq"
            {<point name="construct.b.page1.rtibseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtibseq
            
            #add-point:AFTER FIELD rtibseq name="construct.a.page1.rtibseq"
            {<point name="construct.a.page1.rtibseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtibseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtibseq
            #add-point:ON ACTION controlp INFIELD rtibseq name="construct.c.page1.rtibseq"
            {<point name="construct.c.page1.rtibseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib035
            #add-point:BEFORE FIELD rtib035 name="construct.b.page1.rtib035"
            {<point name="construct.b.page1.rtib035" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib035
            
            #add-point:AFTER FIELD rtib035 name="construct.a.page1.rtib035"
            {<point name="construct.a.page1.rtib035" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib035
            #add-point:ON ACTION controlp INFIELD rtib035 name="construct.c.page1.rtib035"
            {<point name="construct.c.page1.rtib035" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.rtib001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib001
            #add-point:ON ACTION controlp INFIELD rtib001 name="construct.c.page1.rtib001"
            {<point name="construct.c.page1.rtib001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib001
            #add-point:BEFORE FIELD rtib001 name="construct.b.page1.rtib001"
            {<point name="construct.b.page1.rtib001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib001
            
            #add-point:AFTER FIELD rtib001 name="construct.a.page1.rtib001"
            {<point name="construct.a.page1.rtib001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib002
            #add-point:BEFORE FIELD rtib002 name="construct.b.page1.rtib002"
            {<point name="construct.b.page1.rtib002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib002
            
            #add-point:AFTER FIELD rtib002 name="construct.a.page1.rtib002"
            {<point name="construct.a.page1.rtib002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib002
            #add-point:ON ACTION controlp INFIELD rtib002 name="construct.c.page1.rtib002"
            {<point name="construct.c.page1.rtib002" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.rtib003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib003
            #add-point:ON ACTION controlp INFIELD rtib003 name="construct.c.page1.rtib003"
            {<point name="construct.c.page1.rtib003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib003
            #add-point:BEFORE FIELD rtib003 name="construct.b.page1.rtib003"
            {<point name="construct.b.page1.rtib003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib003
            
            #add-point:AFTER FIELD rtib003 name="construct.a.page1.rtib003"
            {<point name="construct.a.page1.rtib003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib004
            #add-point:ON ACTION controlp INFIELD rtib004 name="construct.c.page1.rtib004"
            {<point name="construct.c.page1.rtib004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib004
            #add-point:BEFORE FIELD rtib004 name="construct.b.page1.rtib004"
            {<point name="construct.b.page1.rtib004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib004
            
            #add-point:AFTER FIELD rtib004 name="construct.a.page1.rtib004"
            {<point name="construct.a.page1.rtib004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib005
            #add-point:BEFORE FIELD rtib005 name="construct.b.page1.rtib005"
            {<point name="construct.b.page1.rtib005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib005
            
            #add-point:AFTER FIELD rtib005 name="construct.a.page1.rtib005"
            {<point name="construct.a.page1.rtib005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib005
            #add-point:ON ACTION controlp INFIELD rtib005 name="construct.c.page1.rtib005"
            {<point name="construct.c.page1.rtib005" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.rtib006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib006
            #add-point:ON ACTION controlp INFIELD rtib006 name="construct.c.page1.rtib006"
            {<point name="construct.c.page1.rtib006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib006
            #add-point:BEFORE FIELD rtib006 name="construct.b.page1.rtib006"
            {<point name="construct.b.page1.rtib006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib006
            
            #add-point:AFTER FIELD rtib006 name="construct.a.page1.rtib006"
            {<point name="construct.a.page1.rtib006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib008
            #add-point:BEFORE FIELD rtib008 name="construct.b.page1.rtib008"
            {<point name="construct.b.page1.rtib008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib008
            
            #add-point:AFTER FIELD rtib008 name="construct.a.page1.rtib008"
            {<point name="construct.a.page1.rtib008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib008
            #add-point:ON ACTION controlp INFIELD rtib008 name="construct.c.page1.rtib008"
            {<point name="construct.c.page1.rtib008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib009
            #add-point:BEFORE FIELD rtib009 name="construct.b.page1.rtib009"
            {<point name="construct.b.page1.rtib009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib009
            
            #add-point:AFTER FIELD rtib009 name="construct.a.page1.rtib009"
            {<point name="construct.a.page1.rtib009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib009
            #add-point:ON ACTION controlp INFIELD rtib009 name="construct.c.page1.rtib009"
            {<point name="construct.c.page1.rtib009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib010
            #add-point:BEFORE FIELD rtib010 name="construct.b.page1.rtib010"
            {<point name="construct.b.page1.rtib010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib010
            
            #add-point:AFTER FIELD rtib010 name="construct.a.page1.rtib010"
            {<point name="construct.a.page1.rtib010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib010
            #add-point:ON ACTION controlp INFIELD rtib010 name="construct.c.page1.rtib010"
            {<point name="construct.c.page1.rtib010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib012
            #add-point:BEFORE FIELD rtib012 name="construct.b.page1.rtib012"
            {<point name="construct.b.page1.rtib012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib012
            
            #add-point:AFTER FIELD rtib012 name="construct.a.page1.rtib012"
            {<point name="construct.a.page1.rtib012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib012
            #add-point:ON ACTION controlp INFIELD rtib012 name="construct.c.page1.rtib012"
            {<point name="construct.c.page1.rtib012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib013
            #add-point:BEFORE FIELD rtib013 name="construct.b.page1.rtib013"
            {<point name="construct.b.page1.rtib013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib013
            
            #add-point:AFTER FIELD rtib013 name="construct.a.page1.rtib013"
            {<point name="construct.a.page1.rtib013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib013
            #add-point:ON ACTION controlp INFIELD rtib013 name="construct.c.page1.rtib013"
            {<point name="construct.c.page1.rtib013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib014
            #add-point:BEFORE FIELD rtib014 name="construct.b.page1.rtib014"
            {<point name="construct.b.page1.rtib014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib014
            
            #add-point:AFTER FIELD rtib014 name="construct.a.page1.rtib014"
            {<point name="construct.a.page1.rtib014" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib014
            #add-point:ON ACTION controlp INFIELD rtib014 name="construct.c.page1.rtib014"
            {<point name="construct.c.page1.rtib014" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.rtib015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib015
            #add-point:ON ACTION controlp INFIELD rtib015 name="construct.c.page1.rtib015"
            {<point name="construct.c.page1.rtib015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib015
            #add-point:BEFORE FIELD rtib015 name="construct.b.page1.rtib015"
            {<point name="construct.b.page1.rtib015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib015
            
            #add-point:AFTER FIELD rtib015 name="construct.a.page1.rtib015"
            {<point name="construct.a.page1.rtib015" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib016
            #add-point:BEFORE FIELD rtib016 name="construct.b.page1.rtib016"
            {<point name="construct.b.page1.rtib016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib016
            
            #add-point:AFTER FIELD rtib016 name="construct.a.page1.rtib016"
            {<point name="construct.a.page1.rtib016" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib016
            #add-point:ON ACTION controlp INFIELD rtib016 name="construct.c.page1.rtib016"
            {<point name="construct.c.page1.rtib016" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib018
            #add-point:BEFORE FIELD rtib018 name="construct.b.page1.rtib018"
            {<point name="construct.b.page1.rtib018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib018
            
            #add-point:AFTER FIELD rtib018 name="construct.a.page1.rtib018"
            {<point name="construct.a.page1.rtib018" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib018
            #add-point:ON ACTION controlp INFIELD rtib018 name="construct.c.page1.rtib018"
            {<point name="construct.c.page1.rtib018" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib017
            #add-point:BEFORE FIELD rtib017 name="construct.b.page1.rtib017"
            {<point name="construct.b.page1.rtib017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib017
            
            #add-point:AFTER FIELD rtib017 name="construct.a.page1.rtib017"
            {<point name="construct.a.page1.rtib017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib017
            #add-point:ON ACTION controlp INFIELD rtib017 name="construct.c.page1.rtib017"
            {<point name="construct.c.page1.rtib017" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib019
            #add-point:BEFORE FIELD rtib019 name="construct.b.page1.rtib019"
            {<point name="construct.b.page1.rtib019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib019
            
            #add-point:AFTER FIELD rtib019 name="construct.a.page1.rtib019"
            {<point name="construct.a.page1.rtib019" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib019
            #add-point:ON ACTION controlp INFIELD rtib019 name="construct.c.page1.rtib019"
            {<point name="construct.c.page1.rtib019" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib020
            #add-point:BEFORE FIELD rtib020 name="construct.b.page1.rtib020"
            {<point name="construct.b.page1.rtib020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib020
            
            #add-point:AFTER FIELD rtib020 name="construct.a.page1.rtib020"
            {<point name="construct.a.page1.rtib020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib020
            #add-point:ON ACTION controlp INFIELD rtib020 name="construct.c.page1.rtib020"
            {<point name="construct.c.page1.rtib020" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib021
            #add-point:BEFORE FIELD rtib021 name="construct.b.page1.rtib021"
            {<point name="construct.b.page1.rtib021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib021
            
            #add-point:AFTER FIELD rtib021 name="construct.a.page1.rtib021"
            {<point name="construct.a.page1.rtib021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib021
            #add-point:ON ACTION controlp INFIELD rtib021 name="construct.c.page1.rtib021"
            {<point name="construct.c.page1.rtib021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib022
            #add-point:BEFORE FIELD rtib022 name="construct.b.page1.rtib022"
            {<point name="construct.b.page1.rtib022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib022
            
            #add-point:AFTER FIELD rtib022 name="construct.a.page1.rtib022"
            {<point name="construct.a.page1.rtib022" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib022
            #add-point:ON ACTION controlp INFIELD rtib022 name="construct.c.page1.rtib022"
            {<point name="construct.c.page1.rtib022" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.rtib024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib024
            #add-point:ON ACTION controlp INFIELD rtib024 name="construct.c.page1.rtib024"
            {<point name="construct.c.page1.rtib024" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib024
            #add-point:BEFORE FIELD rtib024 name="construct.b.page1.rtib024"
            {<point name="construct.b.page1.rtib024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib024
            
            #add-point:AFTER FIELD rtib024 name="construct.a.page1.rtib024"
            {<point name="construct.a.page1.rtib024" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib025
            #add-point:ON ACTION controlp INFIELD rtib025 name="construct.c.page1.rtib025"
            {<point name="construct.c.page1.rtib025" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib025
            #add-point:BEFORE FIELD rtib025 name="construct.b.page1.rtib025"
            {<point name="construct.b.page1.rtib025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib025
            
            #add-point:AFTER FIELD rtib025 name="construct.a.page1.rtib025"
            {<point name="construct.a.page1.rtib025" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib026
            #add-point:ON ACTION controlp INFIELD rtib026 name="construct.c.page1.rtib026"
            {<point name="construct.c.page1.rtib026" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib026
            #add-point:BEFORE FIELD rtib026 name="construct.b.page1.rtib026"
            {<point name="construct.b.page1.rtib026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib026
            
            #add-point:AFTER FIELD rtib026 name="construct.a.page1.rtib026"
            {<point name="construct.a.page1.rtib026" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib027
            #add-point:BEFORE FIELD rtib027 name="construct.b.page1.rtib027"
            {<point name="construct.b.page1.rtib027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib027
            
            #add-point:AFTER FIELD rtib027 name="construct.a.page1.rtib027"
            {<point name="construct.a.page1.rtib027" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib027
            #add-point:ON ACTION controlp INFIELD rtib027 name="construct.c.page1.rtib027"
            {<point name="construct.c.page1.rtib027" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib032
            #add-point:BEFORE FIELD rtib032 name="construct.b.page1.rtib032"
            {<point name="construct.b.page1.rtib032" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib032
            
            #add-point:AFTER FIELD rtib032 name="construct.a.page1.rtib032"
            {<point name="construct.a.page1.rtib032" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib032
            #add-point:ON ACTION controlp INFIELD rtib032 name="construct.c.page1.rtib032"
            {<point name="construct.c.page1.rtib032" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.rtib033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib033
            #add-point:ON ACTION controlp INFIELD rtib033 name="construct.c.page1.rtib033"
            {<point name="construct.c.page1.rtib033" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib033
            #add-point:BEFORE FIELD rtib033 name="construct.b.page1.rtib033"
            {<point name="construct.b.page1.rtib033" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib033
            
            #add-point:AFTER FIELD rtib033 name="construct.a.page1.rtib033"
            {<point name="construct.a.page1.rtib033" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib028
            #add-point:ON ACTION controlp INFIELD rtib028 name="construct.c.page1.rtib028"
            {<point name="construct.c.page1.rtib028" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib028
            #add-point:BEFORE FIELD rtib028 name="construct.b.page1.rtib028"
            {<point name="construct.b.page1.rtib028" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib028
            
            #add-point:AFTER FIELD rtib028 name="construct.a.page1.rtib028"
            {<point name="construct.a.page1.rtib028" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib030
            #add-point:BEFORE FIELD rtib030 name="construct.b.page1.rtib030"
            {<point name="construct.b.page1.rtib030" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib030
            
            #add-point:AFTER FIELD rtib030 name="construct.a.page1.rtib030"
            {<point name="construct.a.page1.rtib030" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib030
            #add-point:ON ACTION controlp INFIELD rtib030 name="construct.c.page1.rtib030"
            {<point name="construct.c.page1.rtib030" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib039
            #add-point:BEFORE FIELD rtib039 name="construct.b.page1.rtib039"
            {<point name="construct.b.page1.rtib039" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib039
            
            #add-point:AFTER FIELD rtib039 name="construct.a.page1.rtib039"
            {<point name="construct.a.page1.rtib039" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtib039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib039
            #add-point:ON ACTION controlp INFIELD rtib039 name="construct.c.page1.rtib039"
            {<point name="construct.c.page1.rtib039" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON rticseq,rtib005_01,rticseq1,rtic001,rtic002,rtic003,rtic004,rtic005, 
          rtic006,rtic007,rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017, 
          rtic018,rtic020
           FROM s_detail2[1].rticseq,s_detail2[1].rtib005_01,s_detail2[1].rticseq1,s_detail2[1].rtic001, 
               s_detail2[1].rtic002,s_detail2[1].rtic003,s_detail2[1].rtic004,s_detail2[1].rtic005,s_detail2[1].rtic006, 
               s_detail2[1].rtic007,s_detail2[1].rtic008,s_detail2[1].rtic009,s_detail2[1].rtic010,s_detail2[1].rtic011, 
               s_detail2[1].rtic012,s_detail2[1].rtic013,s_detail2[1].rtic014,s_detail2[1].rtic015,s_detail2[1].rtic016, 
               s_detail2[1].rtic017,s_detail2[1].rtic018,s_detail2[1].rtic020
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rticseq
            #add-point:BEFORE FIELD rticseq name="construct.b.page2.rticseq"
            {<point name="construct.b.page2.rticseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rticseq
            
            #add-point:AFTER FIELD rticseq name="construct.a.page2.rticseq"
            {<point name="construct.a.page2.rticseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rticseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rticseq
            #add-point:ON ACTION controlp INFIELD rticseq name="construct.c.page2.rticseq"
            {<point name="construct.c.page2.rticseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib005_01
            #add-point:BEFORE FIELD rtib005_01 name="construct.b.page2.rtib005_01"
            {<point name="construct.b.page2.rtib005_01" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib005_01
            
            #add-point:AFTER FIELD rtib005_01 name="construct.a.page2.rtib005_01"
            {<point name="construct.a.page2.rtib005_01" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtib005_01
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib005_01
            #add-point:ON ACTION controlp INFIELD rtib005_01 name="construct.c.page2.rtib005_01"
            {<point name="construct.c.page2.rtib005_01" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rticseq1
            #add-point:BEFORE FIELD rticseq1 name="construct.b.page2.rticseq1"
            {<point name="construct.b.page2.rticseq1" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rticseq1
            
            #add-point:AFTER FIELD rticseq1 name="construct.a.page2.rticseq1"
            {<point name="construct.a.page2.rticseq1" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rticseq1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rticseq1
            #add-point:ON ACTION controlp INFIELD rticseq1 name="construct.c.page2.rticseq1"
            {<point name="construct.c.page2.rticseq1" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic001
            #add-point:BEFORE FIELD rtic001 name="construct.b.page2.rtic001"
            {<point name="construct.b.page2.rtic001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic001
            
            #add-point:AFTER FIELD rtic001 name="construct.a.page2.rtic001"
            {<point name="construct.a.page2.rtic001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic001
            #add-point:ON ACTION controlp INFIELD rtic001 name="construct.c.page2.rtic001"
            {<point name="construct.c.page2.rtic001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic002
            #add-point:BEFORE FIELD rtic002 name="construct.b.page2.rtic002"
            {<point name="construct.b.page2.rtic002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic002
            
            #add-point:AFTER FIELD rtic002 name="construct.a.page2.rtic002"
            {<point name="construct.a.page2.rtic002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic002
            #add-point:ON ACTION controlp INFIELD rtic002 name="construct.c.page2.rtic002"
            {<point name="construct.c.page2.rtic002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic003
            #add-point:BEFORE FIELD rtic003 name="construct.b.page2.rtic003"
            {<point name="construct.b.page2.rtic003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic003
            
            #add-point:AFTER FIELD rtic003 name="construct.a.page2.rtic003"
            {<point name="construct.a.page2.rtic003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic003
            #add-point:ON ACTION controlp INFIELD rtic003 name="construct.c.page2.rtic003"
            {<point name="construct.c.page2.rtic003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic004
            #add-point:BEFORE FIELD rtic004 name="construct.b.page2.rtic004"
            {<point name="construct.b.page2.rtic004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic004
            
            #add-point:AFTER FIELD rtic004 name="construct.a.page2.rtic004"
            {<point name="construct.a.page2.rtic004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic004
            #add-point:ON ACTION controlp INFIELD rtic004 name="construct.c.page2.rtic004"
            {<point name="construct.c.page2.rtic004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic005
            #add-point:BEFORE FIELD rtic005 name="construct.b.page2.rtic005"
            {<point name="construct.b.page2.rtic005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic005
            
            #add-point:AFTER FIELD rtic005 name="construct.a.page2.rtic005"
            {<point name="construct.a.page2.rtic005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic005
            #add-point:ON ACTION controlp INFIELD rtic005 name="construct.c.page2.rtic005"
            {<point name="construct.c.page2.rtic005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic006
            #add-point:BEFORE FIELD rtic006 name="construct.b.page2.rtic006"
            {<point name="construct.b.page2.rtic006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic006
            
            #add-point:AFTER FIELD rtic006 name="construct.a.page2.rtic006"
            {<point name="construct.a.page2.rtic006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic006
            #add-point:ON ACTION controlp INFIELD rtic006 name="construct.c.page2.rtic006"
            {<point name="construct.c.page2.rtic006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic007
            #add-point:BEFORE FIELD rtic007 name="construct.b.page2.rtic007"
            {<point name="construct.b.page2.rtic007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic007
            
            #add-point:AFTER FIELD rtic007 name="construct.a.page2.rtic007"
            {<point name="construct.a.page2.rtic007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic007
            #add-point:ON ACTION controlp INFIELD rtic007 name="construct.c.page2.rtic007"
            {<point name="construct.c.page2.rtic007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic008
            #add-point:BEFORE FIELD rtic008 name="construct.b.page2.rtic008"
            {<point name="construct.b.page2.rtic008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic008
            
            #add-point:AFTER FIELD rtic008 name="construct.a.page2.rtic008"
            {<point name="construct.a.page2.rtic008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic008
            #add-point:ON ACTION controlp INFIELD rtic008 name="construct.c.page2.rtic008"
            {<point name="construct.c.page2.rtic008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic009
            #add-point:BEFORE FIELD rtic009 name="construct.b.page2.rtic009"
            {<point name="construct.b.page2.rtic009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic009
            
            #add-point:AFTER FIELD rtic009 name="construct.a.page2.rtic009"
            {<point name="construct.a.page2.rtic009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic009
            #add-point:ON ACTION controlp INFIELD rtic009 name="construct.c.page2.rtic009"
            {<point name="construct.c.page2.rtic009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic010
            #add-point:BEFORE FIELD rtic010 name="construct.b.page2.rtic010"
            {<point name="construct.b.page2.rtic010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic010
            
            #add-point:AFTER FIELD rtic010 name="construct.a.page2.rtic010"
            {<point name="construct.a.page2.rtic010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic010
            #add-point:ON ACTION controlp INFIELD rtic010 name="construct.c.page2.rtic010"
            {<point name="construct.c.page2.rtic010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic011
            #add-point:BEFORE FIELD rtic011 name="construct.b.page2.rtic011"
            {<point name="construct.b.page2.rtic011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic011
            
            #add-point:AFTER FIELD rtic011 name="construct.a.page2.rtic011"
            {<point name="construct.a.page2.rtic011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic011
            #add-point:ON ACTION controlp INFIELD rtic011 name="construct.c.page2.rtic011"
            {<point name="construct.c.page2.rtic011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic012
            #add-point:BEFORE FIELD rtic012 name="construct.b.page2.rtic012"
            {<point name="construct.b.page2.rtic012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic012
            
            #add-point:AFTER FIELD rtic012 name="construct.a.page2.rtic012"
            {<point name="construct.a.page2.rtic012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic012
            #add-point:ON ACTION controlp INFIELD rtic012 name="construct.c.page2.rtic012"
            {<point name="construct.c.page2.rtic012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic013
            #add-point:BEFORE FIELD rtic013 name="construct.b.page2.rtic013"
            {<point name="construct.b.page2.rtic013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic013
            
            #add-point:AFTER FIELD rtic013 name="construct.a.page2.rtic013"
            {<point name="construct.a.page2.rtic013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic013
            #add-point:ON ACTION controlp INFIELD rtic013 name="construct.c.page2.rtic013"
            {<point name="construct.c.page2.rtic013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic014
            #add-point:BEFORE FIELD rtic014 name="construct.b.page2.rtic014"
            {<point name="construct.b.page2.rtic014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic014
            
            #add-point:AFTER FIELD rtic014 name="construct.a.page2.rtic014"
            {<point name="construct.a.page2.rtic014" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic014
            #add-point:ON ACTION controlp INFIELD rtic014 name="construct.c.page2.rtic014"
            {<point name="construct.c.page2.rtic014" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic015
            #add-point:BEFORE FIELD rtic015 name="construct.b.page2.rtic015"
            {<point name="construct.b.page2.rtic015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic015
            
            #add-point:AFTER FIELD rtic015 name="construct.a.page2.rtic015"
            {<point name="construct.a.page2.rtic015" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic015
            #add-point:ON ACTION controlp INFIELD rtic015 name="construct.c.page2.rtic015"
            {<point name="construct.c.page2.rtic015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic016
            #add-point:BEFORE FIELD rtic016 name="construct.b.page2.rtic016"
            {<point name="construct.b.page2.rtic016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic016
            
            #add-point:AFTER FIELD rtic016 name="construct.a.page2.rtic016"
            {<point name="construct.a.page2.rtic016" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic016
            #add-point:ON ACTION controlp INFIELD rtic016 name="construct.c.page2.rtic016"
            {<point name="construct.c.page2.rtic016" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic017
            #add-point:BEFORE FIELD rtic017 name="construct.b.page2.rtic017"
            {<point name="construct.b.page2.rtic017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic017
            
            #add-point:AFTER FIELD rtic017 name="construct.a.page2.rtic017"
            {<point name="construct.a.page2.rtic017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic017
            #add-point:ON ACTION controlp INFIELD rtic017 name="construct.c.page2.rtic017"
            {<point name="construct.c.page2.rtic017" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic018
            #add-point:BEFORE FIELD rtic018 name="construct.b.page2.rtic018"
            {<point name="construct.b.page2.rtic018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic018
            
            #add-point:AFTER FIELD rtic018 name="construct.a.page2.rtic018"
            {<point name="construct.a.page2.rtic018" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic018
            #add-point:ON ACTION controlp INFIELD rtic018 name="construct.c.page2.rtic018"
            {<point name="construct.c.page2.rtic018" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtic020
            #add-point:BEFORE FIELD rtic020 name="construct.b.page2.rtic020"
            {<point name="construct.b.page2.rtic020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtic020
            
            #add-point:AFTER FIELD rtic020 name="construct.a.page2.rtic020"
            {<point name="construct.a.page2.rtic020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtic020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtic020
            #add-point:ON ACTION controlp INFIELD rtic020 name="construct.c.page2.rtic020"
            {<point name="construct.c.page2.rtic020" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON xrcd007,xrcdld,xrcdseq,rtib005_02,xrcdseq2,xrcd002,xrcd003,xrcd006,xrcd004, 
          xrcd104
           FROM s_detail3[1].xrcd007,s_detail3[1].xrcdld,s_detail3[1].xrcdseq,s_detail3[1].rtib005_02, 
               s_detail3[1].xrcdseq2,s_detail3[1].xrcd002,s_detail3[1].xrcd003,s_detail3[1].xrcd006, 
               s_detail3[1].xrcd004,s_detail3[1].xrcd104
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body3.before_construct"
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd007
            #add-point:BEFORE FIELD xrcd007 name="construct.b.page3.xrcd007"
            {<point name="construct.b.page3.xrcd007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd007
            
            #add-point:AFTER FIELD xrcd007 name="construct.a.page3.xrcd007"
            {<point name="construct.a.page3.xrcd007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcd007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd007
            #add-point:ON ACTION controlp INFIELD xrcd007 name="construct.c.page3.xrcd007"
            {<point name="construct.c.page3.xrcd007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcdld
            #add-point:BEFORE FIELD xrcdld name="construct.b.page3.xrcdld"
            {<point name="construct.b.page3.xrcdld" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcdld
            
            #add-point:AFTER FIELD xrcdld name="construct.a.page3.xrcdld"
            {<point name="construct.a.page3.xrcdld" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcdld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcdld
            #add-point:ON ACTION controlp INFIELD xrcdld name="construct.c.page3.xrcdld"
            {<point name="construct.c.page3.xrcdld" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcdseq
            #add-point:BEFORE FIELD xrcdseq name="construct.b.page3.xrcdseq"
            {<point name="construct.b.page3.xrcdseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcdseq
            
            #add-point:AFTER FIELD xrcdseq name="construct.a.page3.xrcdseq"
            {<point name="construct.a.page3.xrcdseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcdseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcdseq
            #add-point:ON ACTION controlp INFIELD xrcdseq name="construct.c.page3.xrcdseq"
            {<point name="construct.c.page3.xrcdseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib005_02
            #add-point:BEFORE FIELD rtib005_02 name="construct.b.page3.rtib005_02"
            {<point name="construct.b.page3.rtib005_02" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib005_02
            
            #add-point:AFTER FIELD rtib005_02 name="construct.a.page3.rtib005_02"
            {<point name="construct.a.page3.rtib005_02" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.rtib005_02
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib005_02
            #add-point:ON ACTION controlp INFIELD rtib005_02 name="construct.c.page3.rtib005_02"
            {<point name="construct.c.page3.rtib005_02" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcdseq2
            #add-point:BEFORE FIELD xrcdseq2 name="construct.b.page3.xrcdseq2"
            {<point name="construct.b.page3.xrcdseq2" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcdseq2
            
            #add-point:AFTER FIELD xrcdseq2 name="construct.a.page3.xrcdseq2"
            {<point name="construct.a.page3.xrcdseq2" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcdseq2
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcdseq2
            #add-point:ON ACTION controlp INFIELD xrcdseq2 name="construct.c.page3.xrcdseq2"
            {<point name="construct.c.page3.xrcdseq2" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd002
            #add-point:BEFORE FIELD xrcd002 name="construct.b.page3.xrcd002"
            {<point name="construct.b.page3.xrcd002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd002
            
            #add-point:AFTER FIELD xrcd002 name="construct.a.page3.xrcd002"
            {<point name="construct.a.page3.xrcd002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcd002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd002
            #add-point:ON ACTION controlp INFIELD xrcd002 name="construct.c.page3.xrcd002"
            {<point name="construct.c.page3.xrcd002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd003
            #add-point:BEFORE FIELD xrcd003 name="construct.b.page3.xrcd003"
            {<point name="construct.b.page3.xrcd003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd003
            
            #add-point:AFTER FIELD xrcd003 name="construct.a.page3.xrcd003"
            {<point name="construct.a.page3.xrcd003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcd003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd003
            #add-point:ON ACTION controlp INFIELD xrcd003 name="construct.c.page3.xrcd003"
            {<point name="construct.c.page3.xrcd003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd006
            #add-point:BEFORE FIELD xrcd006 name="construct.b.page3.xrcd006"
            {<point name="construct.b.page3.xrcd006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd006
            
            #add-point:AFTER FIELD xrcd006 name="construct.a.page3.xrcd006"
            {<point name="construct.a.page3.xrcd006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcd006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd006
            #add-point:ON ACTION controlp INFIELD xrcd006 name="construct.c.page3.xrcd006"
            {<point name="construct.c.page3.xrcd006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd004
            #add-point:BEFORE FIELD xrcd004 name="construct.b.page3.xrcd004"
            {<point name="construct.b.page3.xrcd004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd004
            
            #add-point:AFTER FIELD xrcd004 name="construct.a.page3.xrcd004"
            {<point name="construct.a.page3.xrcd004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcd004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd004
            #add-point:ON ACTION controlp INFIELD xrcd004 name="construct.c.page3.xrcd004"
            {<point name="construct.c.page3.xrcd004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD xrcd104
            #add-point:BEFORE FIELD xrcd104 name="construct.b.page3.xrcd104"
            {<point name="construct.b.page3.xrcd104" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD xrcd104
            
            #add-point:AFTER FIELD xrcd104 name="construct.a.page3.xrcd104"
            {<point name="construct.a.page3.xrcd104" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.xrcd104
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD xrcd104
            #add-point:ON ACTION controlp INFIELD xrcd104 name="construct.c.page3.xrcd104"
            {<point name="construct.c.page3.xrcd104" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON rtieseq,rtib005_03,rtieseq1,rtie001,rtie002,rtie006
           FROM s_detail4[1].rtieseq,s_detail4[1].rtib005_03,s_detail4[1].rtieseq1,s_detail4[1].rtie001, 
               s_detail4[1].rtie002,s_detail4[1].rtie006
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body4.before_construct"
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtieseq
            #add-point:BEFORE FIELD rtieseq name="construct.b.page4.rtieseq"
            {<point name="construct.b.page4.rtieseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtieseq
            
            #add-point:AFTER FIELD rtieseq name="construct.a.page4.rtieseq"
            {<point name="construct.a.page4.rtieseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.rtieseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtieseq
            #add-point:ON ACTION controlp INFIELD rtieseq name="construct.c.page4.rtieseq"
            {<point name="construct.c.page4.rtieseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib005_03
            #add-point:BEFORE FIELD rtib005_03 name="construct.b.page4.rtib005_03"
            {<point name="construct.b.page4.rtib005_03" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib005_03
            
            #add-point:AFTER FIELD rtib005_03 name="construct.a.page4.rtib005_03"
            {<point name="construct.a.page4.rtib005_03" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.rtib005_03
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib005_03
            #add-point:ON ACTION controlp INFIELD rtib005_03 name="construct.c.page4.rtib005_03"
            {<point name="construct.c.page4.rtib005_03" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtieseq1
            #add-point:BEFORE FIELD rtieseq1 name="construct.b.page4.rtieseq1"
            {<point name="construct.b.page4.rtieseq1" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtieseq1
            
            #add-point:AFTER FIELD rtieseq1 name="construct.a.page4.rtieseq1"
            {<point name="construct.a.page4.rtieseq1" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.rtieseq1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtieseq1
            #add-point:ON ACTION controlp INFIELD rtieseq1 name="construct.c.page4.rtieseq1"
            {<point name="construct.c.page4.rtieseq1" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtie001
            #add-point:BEFORE FIELD rtie001 name="construct.b.page4.rtie001"
            {<point name="construct.b.page4.rtie001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtie001
            
            #add-point:AFTER FIELD rtie001 name="construct.a.page4.rtie001"
            {<point name="construct.a.page4.rtie001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.rtie001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtie001
            #add-point:ON ACTION controlp INFIELD rtie001 name="construct.c.page4.rtie001"
            {<point name="construct.c.page4.rtie001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtie002
            #add-point:BEFORE FIELD rtie002 name="construct.b.page4.rtie002"
            {<point name="construct.b.page4.rtie002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtie002
            
            #add-point:AFTER FIELD rtie002 name="construct.a.page4.rtie002"
            {<point name="construct.a.page4.rtie002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.rtie002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtie002
            #add-point:ON ACTION controlp INFIELD rtie002 name="construct.c.page4.rtie002"
            {<point name="construct.c.page4.rtie002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtie006
            #add-point:BEFORE FIELD rtie006 name="construct.b.page4.rtie006"
            {<point name="construct.b.page4.rtie006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtie006
            
            #add-point:AFTER FIELD rtie006 name="construct.a.page4.rtie006"
            {<point name="construct.a.page4.rtie006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.rtie006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtie006
            #add-point:ON ACTION controlp INFIELD rtie006 name="construct.c.page4.rtie006"
            {<point name="construct.c.page4.rtie006" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table5 ON rtiksite,rtikunit,rtikorg,rtikseq,rtik001,rtik002,rtik003,rtik004,rtik005, 
          rtik006,rtik006_desc,rtik007,rtik013,rtik012,rtik008,rtik009,rtik010,rtik011,rtik014,rtik015, 
          rtik016,rtik017,rtik018,rtik019,rtik020,rtik021,rtik022,rtik023
           FROM s_detail5[1].rtiksite,s_detail5[1].rtikunit,s_detail5[1].rtikorg,s_detail5[1].rtikseq, 
               s_detail5[1].rtik001,s_detail5[1].rtik002,s_detail5[1].rtik003,s_detail5[1].rtik004,s_detail5[1].rtik005, 
               s_detail5[1].rtik006,s_detail5[1].rtik006_desc,s_detail5[1].rtik007,s_detail5[1].rtik013, 
               s_detail5[1].rtik012,s_detail5[1].rtik008,s_detail5[1].rtik009,s_detail5[1].rtik010,s_detail5[1].rtik011, 
               s_detail5[1].rtik014,s_detail5[1].rtik015,s_detail5[1].rtik016,s_detail5[1].rtik017,s_detail5[1].rtik018, 
               s_detail5[1].rtik019,s_detail5[1].rtik020,s_detail5[1].rtik021,s_detail5[1].rtik022,s_detail5[1].rtik023 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body5.before_construct"
            {<point name="cs.body5.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 5)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiksite
            #add-point:BEFORE FIELD rtiksite name="construct.b.page5.rtiksite"
            {<point name="construct.b.page5.rtiksite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiksite
            
            #add-point:AFTER FIELD rtiksite name="construct.a.page5.rtiksite"
            {<point name="construct.a.page5.rtiksite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtiksite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiksite
            #add-point:ON ACTION controlp INFIELD rtiksite name="construct.c.page5.rtiksite"
            {<point name="construct.c.page5.rtiksite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtikunit
            #add-point:BEFORE FIELD rtikunit name="construct.b.page5.rtikunit"
            {<point name="construct.b.page5.rtikunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtikunit
            
            #add-point:AFTER FIELD rtikunit name="construct.a.page5.rtikunit"
            {<point name="construct.a.page5.rtikunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtikunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtikunit
            #add-point:ON ACTION controlp INFIELD rtikunit name="construct.c.page5.rtikunit"
            {<point name="construct.c.page5.rtikunit" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtikorg
            #add-point:BEFORE FIELD rtikorg name="construct.b.page5.rtikorg"
            {<point name="construct.b.page5.rtikorg" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtikorg
            
            #add-point:AFTER FIELD rtikorg name="construct.a.page5.rtikorg"
            {<point name="construct.a.page5.rtikorg" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtikorg
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtikorg
            #add-point:ON ACTION controlp INFIELD rtikorg name="construct.c.page5.rtikorg"
            {<point name="construct.c.page5.rtikorg" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtikseq
            #add-point:BEFORE FIELD rtikseq name="construct.b.page5.rtikseq"
            {<point name="construct.b.page5.rtikseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtikseq
            
            #add-point:AFTER FIELD rtikseq name="construct.a.page5.rtikseq"
            {<point name="construct.a.page5.rtikseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtikseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtikseq
            #add-point:ON ACTION controlp INFIELD rtikseq name="construct.c.page5.rtikseq"
            {<point name="construct.c.page5.rtikseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik001
            #add-point:BEFORE FIELD rtik001 name="construct.b.page5.rtik001"
            {<point name="construct.b.page5.rtik001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik001
            
            #add-point:AFTER FIELD rtik001 name="construct.a.page5.rtik001"
            {<point name="construct.a.page5.rtik001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik001
            #add-point:ON ACTION controlp INFIELD rtik001 name="construct.c.page5.rtik001"
            {<point name="construct.c.page5.rtik001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik002
            #add-point:BEFORE FIELD rtik002 name="construct.b.page5.rtik002"
            {<point name="construct.b.page5.rtik002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik002
            
            #add-point:AFTER FIELD rtik002 name="construct.a.page5.rtik002"
            {<point name="construct.a.page5.rtik002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik002
            #add-point:ON ACTION controlp INFIELD rtik002 name="construct.c.page5.rtik002"
            {<point name="construct.c.page5.rtik002" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page5.rtik003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik003
            #add-point:ON ACTION controlp INFIELD rtik003 name="construct.c.page5.rtik003"
            {<point name="construct.c.page5.rtik003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik003
            #add-point:BEFORE FIELD rtik003 name="construct.b.page5.rtik003"
            {<point name="construct.b.page5.rtik003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik003
            
            #add-point:AFTER FIELD rtik003 name="construct.a.page5.rtik003"
            {<point name="construct.a.page5.rtik003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik004
            #add-point:BEFORE FIELD rtik004 name="construct.b.page5.rtik004"
            {<point name="construct.b.page5.rtik004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik004
            
            #add-point:AFTER FIELD rtik004 name="construct.a.page5.rtik004"
            {<point name="construct.a.page5.rtik004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik004
            #add-point:ON ACTION controlp INFIELD rtik004 name="construct.c.page5.rtik004"
            {<point name="construct.c.page5.rtik004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik005
            #add-point:BEFORE FIELD rtik005 name="construct.b.page5.rtik005"
            {<point name="construct.b.page5.rtik005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik005
            
            #add-point:AFTER FIELD rtik005 name="construct.a.page5.rtik005"
            {<point name="construct.a.page5.rtik005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik005
            #add-point:ON ACTION controlp INFIELD rtik005 name="construct.c.page5.rtik005"
            {<point name="construct.c.page5.rtik005" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page5.rtik006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik006
            #add-point:ON ACTION controlp INFIELD rtik006 name="construct.c.page5.rtik006"
            {<point name="construct.c.page5.rtik006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik006
            #add-point:BEFORE FIELD rtik006 name="construct.b.page5.rtik006"
            {<point name="construct.b.page5.rtik006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik006
            
            #add-point:AFTER FIELD rtik006 name="construct.a.page5.rtik006"
            {<point name="construct.a.page5.rtik006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik006_desc
            #add-point:BEFORE FIELD rtik006_desc name="construct.b.page5.rtik006_desc"
            {<point name="construct.b.page5.rtik006_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik006_desc
            
            #add-point:AFTER FIELD rtik006_desc name="construct.a.page5.rtik006_desc"
            {<point name="construct.a.page5.rtik006_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik006_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik006_desc
            #add-point:ON ACTION controlp INFIELD rtik006_desc name="construct.c.page5.rtik006_desc"
            {<point name="construct.c.page5.rtik006_desc" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik007
            #add-point:BEFORE FIELD rtik007 name="construct.b.page5.rtik007"
            {<point name="construct.b.page5.rtik007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik007
            
            #add-point:AFTER FIELD rtik007 name="construct.a.page5.rtik007"
            {<point name="construct.a.page5.rtik007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik007
            #add-point:ON ACTION controlp INFIELD rtik007 name="construct.c.page5.rtik007"
            {<point name="construct.c.page5.rtik007" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page5.rtik013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik013
            #add-point:ON ACTION controlp INFIELD rtik013 name="construct.c.page5.rtik013"
            {<point name="construct.c.page5.rtik013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik013
            #add-point:BEFORE FIELD rtik013 name="construct.b.page5.rtik013"
            {<point name="construct.b.page5.rtik013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik013
            
            #add-point:AFTER FIELD rtik013 name="construct.a.page5.rtik013"
            {<point name="construct.a.page5.rtik013" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik012
            #add-point:BEFORE FIELD rtik012 name="construct.b.page5.rtik012"
            {<point name="construct.b.page5.rtik012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik012
            
            #add-point:AFTER FIELD rtik012 name="construct.a.page5.rtik012"
            {<point name="construct.a.page5.rtik012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik012
            #add-point:ON ACTION controlp INFIELD rtik012 name="construct.c.page5.rtik012"
            {<point name="construct.c.page5.rtik012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik008
            #add-point:BEFORE FIELD rtik008 name="construct.b.page5.rtik008"
            {<point name="construct.b.page5.rtik008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik008
            
            #add-point:AFTER FIELD rtik008 name="construct.a.page5.rtik008"
            {<point name="construct.a.page5.rtik008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik008
            #add-point:ON ACTION controlp INFIELD rtik008 name="construct.c.page5.rtik008"
            {<point name="construct.c.page5.rtik008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik009
            #add-point:BEFORE FIELD rtik009 name="construct.b.page5.rtik009"
            {<point name="construct.b.page5.rtik009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik009
            
            #add-point:AFTER FIELD rtik009 name="construct.a.page5.rtik009"
            {<point name="construct.a.page5.rtik009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik009
            #add-point:ON ACTION controlp INFIELD rtik009 name="construct.c.page5.rtik009"
            {<point name="construct.c.page5.rtik009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik010
            #add-point:BEFORE FIELD rtik010 name="construct.b.page5.rtik010"
            {<point name="construct.b.page5.rtik010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik010
            
            #add-point:AFTER FIELD rtik010 name="construct.a.page5.rtik010"
            {<point name="construct.a.page5.rtik010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik010
            #add-point:ON ACTION controlp INFIELD rtik010 name="construct.c.page5.rtik010"
            {<point name="construct.c.page5.rtik010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik011
            #add-point:BEFORE FIELD rtik011 name="construct.b.page5.rtik011"
            {<point name="construct.b.page5.rtik011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik011
            
            #add-point:AFTER FIELD rtik011 name="construct.a.page5.rtik011"
            {<point name="construct.a.page5.rtik011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik011
            #add-point:ON ACTION controlp INFIELD rtik011 name="construct.c.page5.rtik011"
            {<point name="construct.c.page5.rtik011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik014
            #add-point:BEFORE FIELD rtik014 name="construct.b.page5.rtik014"
            {<point name="construct.b.page5.rtik014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik014
            
            #add-point:AFTER FIELD rtik014 name="construct.a.page5.rtik014"
            {<point name="construct.a.page5.rtik014" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik014
            #add-point:ON ACTION controlp INFIELD rtik014 name="construct.c.page5.rtik014"
            {<point name="construct.c.page5.rtik014" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik015
            #add-point:BEFORE FIELD rtik015 name="construct.b.page5.rtik015"
            {<point name="construct.b.page5.rtik015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik015
            
            #add-point:AFTER FIELD rtik015 name="construct.a.page5.rtik015"
            {<point name="construct.a.page5.rtik015" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik015
            #add-point:ON ACTION controlp INFIELD rtik015 name="construct.c.page5.rtik015"
            {<point name="construct.c.page5.rtik015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik016
            #add-point:BEFORE FIELD rtik016 name="construct.b.page5.rtik016"
            {<point name="construct.b.page5.rtik016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik016
            
            #add-point:AFTER FIELD rtik016 name="construct.a.page5.rtik016"
            {<point name="construct.a.page5.rtik016" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik016
            #add-point:ON ACTION controlp INFIELD rtik016 name="construct.c.page5.rtik016"
            {<point name="construct.c.page5.rtik016" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik017
            #add-point:BEFORE FIELD rtik017 name="construct.b.page5.rtik017"
            {<point name="construct.b.page5.rtik017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik017
            
            #add-point:AFTER FIELD rtik017 name="construct.a.page5.rtik017"
            {<point name="construct.a.page5.rtik017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik017
            #add-point:ON ACTION controlp INFIELD rtik017 name="construct.c.page5.rtik017"
            {<point name="construct.c.page5.rtik017" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik018
            #add-point:BEFORE FIELD rtik018 name="construct.b.page5.rtik018"
            {<point name="construct.b.page5.rtik018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik018
            
            #add-point:AFTER FIELD rtik018 name="construct.a.page5.rtik018"
            {<point name="construct.a.page5.rtik018" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik018
            #add-point:ON ACTION controlp INFIELD rtik018 name="construct.c.page5.rtik018"
            {<point name="construct.c.page5.rtik018" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page5.rtik019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik019
            #add-point:ON ACTION controlp INFIELD rtik019 name="construct.c.page5.rtik019"
            {<point name="construct.c.page5.rtik019" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik019
            #add-point:BEFORE FIELD rtik019 name="construct.b.page5.rtik019"
            {<point name="construct.b.page5.rtik019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik019
            
            #add-point:AFTER FIELD rtik019 name="construct.a.page5.rtik019"
            {<point name="construct.a.page5.rtik019" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik020
            #add-point:ON ACTION controlp INFIELD rtik020 name="construct.c.page5.rtik020"
            {<point name="construct.c.page5.rtik020" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik020
            #add-point:BEFORE FIELD rtik020 name="construct.b.page5.rtik020"
            {<point name="construct.b.page5.rtik020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik020
            
            #add-point:AFTER FIELD rtik020 name="construct.a.page5.rtik020"
            {<point name="construct.a.page5.rtik020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik021
            #add-point:ON ACTION controlp INFIELD rtik021 name="construct.c.page5.rtik021"
            {<point name="construct.c.page5.rtik021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik021
            #add-point:BEFORE FIELD rtik021 name="construct.b.page5.rtik021"
            {<point name="construct.b.page5.rtik021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik021
            
            #add-point:AFTER FIELD rtik021 name="construct.a.page5.rtik021"
            {<point name="construct.a.page5.rtik021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik022
            #add-point:ON ACTION controlp INFIELD rtik022 name="construct.c.page5.rtik022"
            {<point name="construct.c.page5.rtik022" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik022
            #add-point:BEFORE FIELD rtik022 name="construct.b.page5.rtik022"
            {<point name="construct.b.page5.rtik022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik022
            
            #add-point:AFTER FIELD rtik022 name="construct.a.page5.rtik022"
            {<point name="construct.a.page5.rtik022" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtik023
            #add-point:BEFORE FIELD rtik023 name="construct.b.page5.rtik023"
            {<point name="construct.b.page5.rtik023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtik023
            
            #add-point:AFTER FIELD rtik023 name="construct.a.page5.rtik023"
            {<point name="construct.a.page5.rtik023" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.rtik023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtik023
            #add-point:ON ACTION controlp INFIELD rtik023 name="construct.c.page5.rtik023"
            {<point name="construct.c.page5.rtik023" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table6 ON rtinsite,rtinseq,rtinseq1,rtin001,rtin002,rtin003,rtin004,rtin005,rtin006, 
          rtin007,rtin008,rtin009,rtin010
           FROM s_detail6[1].rtinsite,s_detail6[1].rtinseq,s_detail6[1].rtinseq1,s_detail6[1].rtin001, 
               s_detail6[1].rtin002,s_detail6[1].rtin003,s_detail6[1].rtin004,s_detail6[1].rtin005,s_detail6[1].rtin006, 
               s_detail6[1].rtin007,s_detail6[1].rtin008,s_detail6[1].rtin009,s_detail6[1].rtin010
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body6.before_construct"
            {<point name="cs.body6.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 6)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtinsite
            #add-point:BEFORE FIELD rtinsite name="construct.b.page6.rtinsite"
            {<point name="construct.b.page6.rtinsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtinsite
            
            #add-point:AFTER FIELD rtinsite name="construct.a.page6.rtinsite"
            {<point name="construct.a.page6.rtinsite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.rtinsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtinsite
            #add-point:ON ACTION controlp INFIELD rtinsite name="construct.c.page6.rtinsite"
            {<point name="construct.c.page6.rtinsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtinseq
            #add-point:BEFORE FIELD rtinseq name="construct.b.page6.rtinseq"
            {<point name="construct.b.page6.rtinseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtinseq
            
            #add-point:AFTER FIELD rtinseq name="construct.a.page6.rtinseq"
            {<point name="construct.a.page6.rtinseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.rtinseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtinseq
            #add-point:ON ACTION controlp INFIELD rtinseq name="construct.c.page6.rtinseq"
            {<point name="construct.c.page6.rtinseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtinseq1
            #add-point:BEFORE FIELD rtinseq1 name="construct.b.page6.rtinseq1"
            {<point name="construct.b.page6.rtinseq1" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtinseq1
            
            #add-point:AFTER FIELD rtinseq1 name="construct.a.page6.rtinseq1"
            {<point name="construct.a.page6.rtinseq1" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.rtinseq1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtinseq1
            #add-point:ON ACTION controlp INFIELD rtinseq1 name="construct.c.page6.rtinseq1"
            {<point name="construct.c.page6.rtinseq1" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page6.rtin001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtin001
            #add-point:ON ACTION controlp INFIELD rtin001 name="construct.c.page6.rtin001"
            {<point name="construct.c.page6.rtin001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtin001
            #add-point:BEFORE FIELD rtin001 name="construct.b.page6.rtin001"
            {<point name="construct.b.page6.rtin001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtin001
            
            #add-point:AFTER FIELD rtin001 name="construct.a.page6.rtin001"
            {<point name="construct.a.page6.rtin001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.rtin002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtin002
            #add-point:ON ACTION controlp INFIELD rtin002 name="construct.c.page6.rtin002"
            {<point name="construct.c.page6.rtin002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtin002
            #add-point:BEFORE FIELD rtin002 name="construct.b.page6.rtin002"
            {<point name="construct.b.page6.rtin002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtin002
            
            #add-point:AFTER FIELD rtin002 name="construct.a.page6.rtin002"
            {<point name="construct.a.page6.rtin002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.rtin003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtin003
            #add-point:ON ACTION controlp INFIELD rtin003 name="construct.c.page6.rtin003"
            {<point name="construct.c.page6.rtin003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtin003
            #add-point:BEFORE FIELD rtin003 name="construct.b.page6.rtin003"
            {<point name="construct.b.page6.rtin003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtin003
            
            #add-point:AFTER FIELD rtin003 name="construct.a.page6.rtin003"
            {<point name="construct.a.page6.rtin003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtin004
            #add-point:BEFORE FIELD rtin004 name="construct.b.page6.rtin004"
            {<point name="construct.b.page6.rtin004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtin004
            
            #add-point:AFTER FIELD rtin004 name="construct.a.page6.rtin004"
            {<point name="construct.a.page6.rtin004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.rtin004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtin004
            #add-point:ON ACTION controlp INFIELD rtin004 name="construct.c.page6.rtin004"
            {<point name="construct.c.page6.rtin004" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page6.rtin005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtin005
            #add-point:ON ACTION controlp INFIELD rtin005 name="construct.c.page6.rtin005"
            {<point name="construct.c.page6.rtin005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtin005
            #add-point:BEFORE FIELD rtin005 name="construct.b.page6.rtin005"
            {<point name="construct.b.page6.rtin005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtin005
            
            #add-point:AFTER FIELD rtin005 name="construct.a.page6.rtin005"
            {<point name="construct.a.page6.rtin005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.rtin006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtin006
            #add-point:ON ACTION controlp INFIELD rtin006 name="construct.c.page6.rtin006"
            {<point name="construct.c.page6.rtin006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtin006
            #add-point:BEFORE FIELD rtin006 name="construct.b.page6.rtin006"
            {<point name="construct.b.page6.rtin006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtin006
            
            #add-point:AFTER FIELD rtin006 name="construct.a.page6.rtin006"
            {<point name="construct.a.page6.rtin006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.rtin007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtin007
            #add-point:ON ACTION controlp INFIELD rtin007 name="construct.c.page6.rtin007"
            {<point name="construct.c.page6.rtin007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtin007
            #add-point:BEFORE FIELD rtin007 name="construct.b.page6.rtin007"
            {<point name="construct.b.page6.rtin007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtin007
            
            #add-point:AFTER FIELD rtin007 name="construct.a.page6.rtin007"
            {<point name="construct.a.page6.rtin007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.rtin008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtin008
            #add-point:ON ACTION controlp INFIELD rtin008 name="construct.c.page6.rtin008"
            {<point name="construct.c.page6.rtin008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtin008
            #add-point:BEFORE FIELD rtin008 name="construct.b.page6.rtin008"
            {<point name="construct.b.page6.rtin008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtin008
            
            #add-point:AFTER FIELD rtin008 name="construct.a.page6.rtin008"
            {<point name="construct.a.page6.rtin008" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtin009
            #add-point:BEFORE FIELD rtin009 name="construct.b.page6.rtin009"
            {<point name="construct.b.page6.rtin009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtin009
            
            #add-point:AFTER FIELD rtin009 name="construct.a.page6.rtin009"
            {<point name="construct.a.page6.rtin009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.rtin009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtin009
            #add-point:ON ACTION controlp INFIELD rtin009 name="construct.c.page6.rtin009"
            {<point name="construct.c.page6.rtin009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtin010
            #add-point:BEFORE FIELD rtin010 name="construct.b.page6.rtin010"
            {<point name="construct.b.page6.rtin010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtin010
            
            #add-point:AFTER FIELD rtin010 name="construct.a.page6.rtin010"
            {<point name="construct.a.page6.rtin010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.rtin010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtin010
            #add-point:ON ACTION controlp INFIELD rtin010 name="construct.c.page6.rtin010"
            {<point name="construct.c.page6.rtin010" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table7 ON preksite,prekunit,prekseq,prek001,prek002,prek003,prek004
           FROM s_detail7[1].preksite,s_detail7[1].prekunit,s_detail7[1].prekseq,s_detail7[1].prek001, 
               s_detail7[1].prek002,s_detail7[1].prek003,s_detail7[1].prek004
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body7.before_construct"
            {<point name="cs.body7.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 7)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD preksite
            #add-point:BEFORE FIELD preksite name="construct.b.page7.preksite"
            {<point name="construct.b.page7.preksite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD preksite
            
            #add-point:AFTER FIELD preksite name="construct.a.page7.preksite"
            {<point name="construct.a.page7.preksite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.preksite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD preksite
            #add-point:ON ACTION controlp INFIELD preksite name="construct.c.page7.preksite"
            {<point name="construct.c.page7.preksite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD prekunit
            #add-point:BEFORE FIELD prekunit name="construct.b.page7.prekunit"
            {<point name="construct.b.page7.prekunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD prekunit
            
            #add-point:AFTER FIELD prekunit name="construct.a.page7.prekunit"
            {<point name="construct.a.page7.prekunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.prekunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD prekunit
            #add-point:ON ACTION controlp INFIELD prekunit name="construct.c.page7.prekunit"
            {<point name="construct.c.page7.prekunit" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD prekseq
            #add-point:BEFORE FIELD prekseq name="construct.b.page7.prekseq"
            {<point name="construct.b.page7.prekseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD prekseq
            
            #add-point:AFTER FIELD prekseq name="construct.a.page7.prekseq"
            {<point name="construct.a.page7.prekseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.prekseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD prekseq
            #add-point:ON ACTION controlp INFIELD prekseq name="construct.c.page7.prekseq"
            {<point name="construct.c.page7.prekseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD prek001
            #add-point:BEFORE FIELD prek001 name="construct.b.page7.prek001"
            {<point name="construct.b.page7.prek001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD prek001
            
            #add-point:AFTER FIELD prek001 name="construct.a.page7.prek001"
            {<point name="construct.a.page7.prek001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.prek001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD prek001
            #add-point:ON ACTION controlp INFIELD prek001 name="construct.c.page7.prek001"
            {<point name="construct.c.page7.prek001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD prek002
            #add-point:BEFORE FIELD prek002 name="construct.b.page7.prek002"
            {<point name="construct.b.page7.prek002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD prek002
            
            #add-point:AFTER FIELD prek002 name="construct.a.page7.prek002"
            {<point name="construct.a.page7.prek002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.prek002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD prek002
            #add-point:ON ACTION controlp INFIELD prek002 name="construct.c.page7.prek002"
            {<point name="construct.c.page7.prek002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD prek003
            #add-point:BEFORE FIELD prek003 name="construct.b.page7.prek003"
            {<point name="construct.b.page7.prek003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD prek003
            
            #add-point:AFTER FIELD prek003 name="construct.a.page7.prek003"
            {<point name="construct.a.page7.prek003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.prek003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD prek003
            #add-point:ON ACTION controlp INFIELD prek003 name="construct.c.page7.prek003"
            {<point name="construct.c.page7.prek003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD prek004
            #add-point:BEFORE FIELD prek004 name="construct.b.page7.prek004"
            {<point name="construct.b.page7.prek004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD prek004
            
            #add-point:AFTER FIELD prek004 name="construct.a.page7.prek004"
            {<point name="construct.a.page7.prek004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.prek004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD prek004
            #add-point:ON ACTION controlp INFIELD prek004 name="construct.c.page7.prek004"
            {<point name="construct.c.page7.prek004" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
            INITIALIZE g_wc2_table4 TO NULL
 
            INITIALIZE g_wc2_table5 TO NULL
 
            INITIALIZE g_wc2_table6 TO NULL
 
            INITIALIZE g_wc2_table7 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "rtia_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtib_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtic_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "xrcd_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "rtie_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "rtik_t" 
                     LET g_wc2_table5 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "rtin_t" 
                     LET g_wc2_table6 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "prek_t" 
                     LET g_wc2_table7 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
   IF g_wc2_table5 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
   END IF
 
   IF g_wc2_table6 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
   END IF
 
   IF g_wc2_table7 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION

{</section>}

{<section id="artt600.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION artt600_filter()
   #add-point:filter段define name="filter.define_customerization"
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   {<point name="filter.define"/>}
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   {<point name="filter.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON rtiasite,rtiadocdt,rtiadocno,rtia002,rtia006
                          FROM s_browse[1].b_rtiasite,s_browse[1].b_rtiadocdt,s_browse[1].b_rtiadocno, 
                              s_browse[1].b_rtia002,s_browse[1].b_rtia006
 
         BEFORE CONSTRUCT
               DISPLAY artt600_filter_parser('rtiasite') TO s_browse[1].b_rtiasite
            DISPLAY artt600_filter_parser('rtiadocdt') TO s_browse[1].b_rtiadocdt
            DISPLAY artt600_filter_parser('rtiadocno') TO s_browse[1].b_rtiadocno
            DISPLAY artt600_filter_parser('rtia002') TO s_browse[1].b_rtia002
            DISPLAY artt600_filter_parser('rtia006') TO s_browse[1].b_rtia006
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL artt600_filter_show('rtiasite')
   CALL artt600_filter_show('rtiadocdt')
   CALL artt600_filter_show('rtiadocno')
   CALL artt600_filter_show('rtia002')
   CALL artt600_filter_show('rtia006')
 
END FUNCTION

{</section>}

{<section id="artt600.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION artt600_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   {<point name="filter_parser.define"/>}
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION

{</section>}

{<section id="artt600.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION artt600_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = artt600_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION

{</section>}

{<section id="artt600.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION artt600_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   {<point name="query.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_rtib_d.clear()
   CALL g_rtib2_d.clear()
   CALL g_rtib3_d.clear()
   CALL g_rtib4_d.clear()
   CALL g_rtib5_d.clear()
   CALL g_rtib6_d.clear()
   CALL g_rtib7_d.clear()
 
   
   #add-point:query段other name="query.other"
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL artt600_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL artt600_browser_fill("")
      CALL artt600_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
   LET g_detail_idx_list[7] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL artt600_filter_show('rtiasite')
   CALL artt600_filter_show('rtiadocdt')
   CALL artt600_filter_show('rtiadocno')
   CALL artt600_filter_show('rtia002')
   CALL artt600_filter_show('rtia006')
   CALL artt600_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL artt600_fetch("F") 
      #顯示單身筆數
      CALL artt600_idx_chk()
   END IF
 
END FUNCTION

{</section>}

{<section id="artt600.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION artt600_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   {<point name="fetch.pre_function"/>}
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_rtia_m.rtiadocno = g_browser[g_current_idx].b_rtiadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE artt600_master_referesh USING g_rtia_m.rtiadocno INTO g_rtia_m.rtiasite,g_rtia_m.rtiadocdt, 
       g_rtia_m.rtiadocno,g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia059,g_rtia_m.rtia060,g_rtia_m.rtia004, 
       g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia048,g_rtia_m.rtia053,g_rtia_m.rtiastus,g_rtia_m.rtia007, 
       g_rtia_m.rtia008,g_rtia_m.rtia009,g_rtia_m.rtia041,g_rtia_m.rtia013,g_rtia_m.rtia014,g_rtia_m.rtia015, 
       g_rtia_m.rtia016,g_rtia_m.rtia051,g_rtia_m.rtia010,g_rtia_m.rtia011,g_rtia_m.rtia012,g_rtia_m.rtia017, 
       g_rtia_m.rtia018,g_rtia_m.rtia019,g_rtia_m.rtia020,g_rtia_m.rtia021,g_rtia_m.rtia022,g_rtia_m.rtia023, 
       g_rtia_m.rtia024,g_rtia_m.rtia025,g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029, 
       g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036, 
       g_rtia_m.rtia037,g_rtia_m.rtia038,g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid, 
       g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiacnfid,g_rtia_m.rtiamoddt, 
       g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt,g_rtia_m.rtiasite_desc,g_rtia_m.rtia002_desc, 
       g_rtia_m.rtia004_desc,g_rtia_m.rtia005_desc,g_rtia_m.rtia009_desc,g_rtia_m.rtia010_desc,g_rtia_m.rtia011_desc, 
       g_rtia_m.rtia012_desc,g_rtia_m.rtia018_desc,g_rtia_m.rtia024_desc,g_rtia_m.rtia025_desc,g_rtia_m.rtia036_desc, 
       g_rtia_m.rtia037_desc,g_rtia_m.rtia038_desc,g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiamodid_desc,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiapstid_desc 

   
   #遮罩相關處理
   LET g_rtia_m_mask_o.* =  g_rtia_m.*
   CALL artt600_rtia_t_mask()
   LET g_rtia_m_mask_n.* =  g_rtia_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt600_set_act_visible()   
   CALL artt600_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_rtia_m_t.* = g_rtia_m.*
   LET g_rtia_m_o.* = g_rtia_m.*
   
   LET g_data_owner = g_rtia_m.rtiaownid      
   LET g_data_dept  = g_rtia_m.rtiaowndp
   
   #重新顯示   
   CALL artt600_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION

{</section>}

{<section id="artt600.insert" >}
#+ 資料新增
PRIVATE FUNCTION artt600_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   {<point name="insert.pre_function"/>}
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_rtib_d.clear()   
   CALL g_rtib2_d.clear()  
   CALL g_rtib3_d.clear()  
   CALL g_rtib4_d.clear()  
   CALL g_rtib5_d.clear()  
   CALL g_rtib6_d.clear()  
   CALL g_rtib7_d.clear()  
 
 
   INITIALIZE g_rtia_m.* TO NULL             #DEFAULT 設定
   
   LET g_rtiadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rtia_m.rtiaownid = g_user
      LET g_rtia_m.rtiaowndp = g_dept
      LET g_rtia_m.rtiacrtid = g_user
      LET g_rtia_m.rtiacrtdp = g_dept 
      LET g_rtia_m.rtiacrtdt = cl_get_current()
      LET g_rtia_m.rtiamodid = g_user
      LET g_rtia_m.rtiamoddt = cl_get_current()
      LET g_rtia_m.rtiastus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_rtia_m.rtia048 = "N"
      LET g_rtia_m.rtia053 = "N"
      LET g_rtia_m.rtiastus = "N"
      LET g_rtia_m.rtia013 = "100"
      LET g_rtia_m.rtia016 = "0"
      LET g_rtia_m.rtia051 = "0"
      LET g_rtia_m.rtia017 = "1"
      LET g_rtia_m.rtia023 = "1"
      LET g_rtia_m.rtia030 = "N"
      LET g_rtia_m.rtia032 = "1"
      LET g_rtia_m.rtia039 = "1"
      LET g_rtia_m.isaf009 = "N"
 
  
      #add-point:單頭預設值 name="insert.default"
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_rtia_m_t.* = g_rtia_m.*
      LET g_rtia_m_o.* = g_rtia_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtia_m.rtiastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL artt600_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_rtia_m.* TO NULL
         INITIALIZE g_rtib_d TO NULL
         INITIALIZE g_rtib2_d TO NULL
         INITIALIZE g_rtib3_d TO NULL
         INITIALIZE g_rtib4_d TO NULL
         INITIALIZE g_rtib5_d TO NULL
         INITIALIZE g_rtib6_d TO NULL
         INITIALIZE g_rtib7_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL artt600_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_rtib_d.clear()
      #CALL g_rtib2_d.clear()
      #CALL g_rtib3_d.clear()
      #CALL g_rtib4_d.clear()
      #CALL g_rtib5_d.clear()
      #CALL g_rtib6_d.clear()
      #CALL g_rtib7_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt600_set_act_visible()   
   CALL artt600_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtiadocno_t = g_rtia_m.rtiadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtiaent = " ||g_enterprise|| " AND",
                      " rtiadocno = '", g_rtia_m.rtiadocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artt600_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE artt600_cl
   
   CALL artt600_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE artt600_master_referesh USING g_rtia_m.rtiadocno INTO g_rtia_m.rtiasite,g_rtia_m.rtiadocdt, 
       g_rtia_m.rtiadocno,g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia059,g_rtia_m.rtia060,g_rtia_m.rtia004, 
       g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia048,g_rtia_m.rtia053,g_rtia_m.rtiastus,g_rtia_m.rtia007, 
       g_rtia_m.rtia008,g_rtia_m.rtia009,g_rtia_m.rtia041,g_rtia_m.rtia013,g_rtia_m.rtia014,g_rtia_m.rtia015, 
       g_rtia_m.rtia016,g_rtia_m.rtia051,g_rtia_m.rtia010,g_rtia_m.rtia011,g_rtia_m.rtia012,g_rtia_m.rtia017, 
       g_rtia_m.rtia018,g_rtia_m.rtia019,g_rtia_m.rtia020,g_rtia_m.rtia021,g_rtia_m.rtia022,g_rtia_m.rtia023, 
       g_rtia_m.rtia024,g_rtia_m.rtia025,g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029, 
       g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036, 
       g_rtia_m.rtia037,g_rtia_m.rtia038,g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid, 
       g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiacnfid,g_rtia_m.rtiamoddt, 
       g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt,g_rtia_m.rtiasite_desc,g_rtia_m.rtia002_desc, 
       g_rtia_m.rtia004_desc,g_rtia_m.rtia005_desc,g_rtia_m.rtia009_desc,g_rtia_m.rtia010_desc,g_rtia_m.rtia011_desc, 
       g_rtia_m.rtia012_desc,g_rtia_m.rtia018_desc,g_rtia_m.rtia024_desc,g_rtia_m.rtia025_desc,g_rtia_m.rtia036_desc, 
       g_rtia_m.rtia037_desc,g_rtia_m.rtia038_desc,g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiamodid_desc,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiapstid_desc 

   
   
   #遮罩相關處理
   LET g_rtia_m_mask_o.* =  g_rtia_m.*
   CALL artt600_rtia_t_mask()
   LET g_rtia_m_mask_n.* =  g_rtia_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtia_m.rtiasite,g_rtia_m.rtiasite_desc,g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno,g_rtia_m.rtia001, 
       g_rtia_m.rtia001_desc,g_rtia_m.rtia002,g_rtia_m.rtia002_desc,g_rtia_m.rtia059,g_rtia_m.rtia060, 
       g_rtia_m.rtia004,g_rtia_m.rtia004_desc,g_rtia_m.rtia005,g_rtia_m.rtia005_desc,g_rtia_m.rtia006, 
       g_rtia_m.rtia048,g_rtia_m.rtia053,g_rtia_m.rtiastus,g_rtia_m.rtia007,g_rtia_m.rtia008,g_rtia_m.rtia009, 
       g_rtia_m.rtia009_desc,g_rtia_m.rtia041,g_rtia_m.rtia013,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia016, 
       g_rtia_m.rtia051,g_rtia_m.rtia010,g_rtia_m.rtia010_desc,g_rtia_m.rtia011,g_rtia_m.rtia011_desc, 
       g_rtia_m.rtia012,g_rtia_m.rtia012_desc,g_rtia_m.rtia017,g_rtia_m.rtia018,g_rtia_m.rtia018_desc, 
       g_rtia_m.rtia019,g_rtia_m.rtia020,g_rtia_m.rtia021,g_rtia_m.rtia022,g_rtia_m.rtia023,g_rtia_m.rtia024, 
       g_rtia_m.rtia024_desc,g_rtia_m.rtia025,g_rtia_m.rtia025_desc,g_rtia_m.rtia026,g_rtia_m.rtia027, 
       g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033,g_rtia_m.rtia034, 
       g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia036_desc,g_rtia_m.rtia037,g_rtia_m.rtia037_desc, 
       g_rtia_m.rtia038,g_rtia_m.rtia038_desc,g_rtia_m.rtia039,g_rtia_m.isaf009,g_rtia_m.isaf010,g_rtia_m.isaf044, 
       g_rtia_m.isaf202,g_rtia_m.isaf203,g_rtia_m.isaf204,g_rtia_m.isaf201,g_rtia_m.isaf207,g_rtia_m.rtiaownid, 
       g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamodid_desc, 
       g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid, 
       g_rtia_m.rtiapstid_desc,g_rtia_m.rtiapstdt,g_rtia_m.snum,g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3 

   
   #add-point:新增結束後 name="insert.after"
   {<point name="insert.after"/>}
   #end add-point 
   
   LET g_data_owner = g_rtia_m.rtiaownid      
   LET g_data_dept  = g_rtia_m.rtiaowndp
   
   #功能已完成,通報訊息中心
   CALL artt600_msgcentre_notify('insert')
   
END FUNCTION

{</section>}

{<section id="artt600.modify" >}
#+ 資料修改
PRIVATE FUNCTION artt600_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
   DEFINE l_wc2_table5   STRING
 
   DEFINE l_wc2_table6   STRING
 
   DEFINE l_wc2_table7   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   {<point name="modify.pre_function"/>}
   #end add-point
   
   #保存單頭舊值
   LET g_rtia_m_t.* = g_rtia_m.*
   LET g_rtia_m_o.* = g_rtia_m.*
   
   IF g_rtia_m.rtiadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_rtiadocno_t = g_rtia_m.rtiadocno
 
   CALL s_transaction_begin()
   
   OPEN artt600_cl USING g_enterprise,g_rtia_m.rtiadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt600_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE artt600_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artt600_master_referesh USING g_rtia_m.rtiadocno INTO g_rtia_m.rtiasite,g_rtia_m.rtiadocdt, 
       g_rtia_m.rtiadocno,g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia059,g_rtia_m.rtia060,g_rtia_m.rtia004, 
       g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia048,g_rtia_m.rtia053,g_rtia_m.rtiastus,g_rtia_m.rtia007, 
       g_rtia_m.rtia008,g_rtia_m.rtia009,g_rtia_m.rtia041,g_rtia_m.rtia013,g_rtia_m.rtia014,g_rtia_m.rtia015, 
       g_rtia_m.rtia016,g_rtia_m.rtia051,g_rtia_m.rtia010,g_rtia_m.rtia011,g_rtia_m.rtia012,g_rtia_m.rtia017, 
       g_rtia_m.rtia018,g_rtia_m.rtia019,g_rtia_m.rtia020,g_rtia_m.rtia021,g_rtia_m.rtia022,g_rtia_m.rtia023, 
       g_rtia_m.rtia024,g_rtia_m.rtia025,g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029, 
       g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036, 
       g_rtia_m.rtia037,g_rtia_m.rtia038,g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid, 
       g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiacnfid,g_rtia_m.rtiamoddt, 
       g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt,g_rtia_m.rtiasite_desc,g_rtia_m.rtia002_desc, 
       g_rtia_m.rtia004_desc,g_rtia_m.rtia005_desc,g_rtia_m.rtia009_desc,g_rtia_m.rtia010_desc,g_rtia_m.rtia011_desc, 
       g_rtia_m.rtia012_desc,g_rtia_m.rtia018_desc,g_rtia_m.rtia024_desc,g_rtia_m.rtia025_desc,g_rtia_m.rtia036_desc, 
       g_rtia_m.rtia037_desc,g_rtia_m.rtia038_desc,g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiamodid_desc,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiapstid_desc 

   
   #檢查是否允許此動作
   IF NOT artt600_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtia_m_mask_o.* =  g_rtia_m.*
   CALL artt600_rtia_t_mask()
   LET g_rtia_m_mask_n.* =  g_rtia_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
   #LET l_wc2_table5 = g_wc2_table5
   #LET l_wc2_table5 = " 1=1"
 
   #LET l_wc2_table6 = g_wc2_table6
   #LET l_wc2_table6 = " 1=1"
 
   #LET l_wc2_table7 = g_wc2_table7
   #LET l_wc2_table7 = " 1=1"
 
 
 
   
   CALL artt600_show()
   #add-point:modify段show之後 name="modify.after_show"
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
   #LET  g_wc2_table5 = l_wc2_table5 
 
   #LET  g_wc2_table6 = l_wc2_table6 
 
   #LET  g_wc2_table7 = l_wc2_table7 
 
 
 
    
   WHILE TRUE
      LET g_rtiadocno_t = g_rtia_m.rtiadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_rtia_m.rtiamodid = g_user 
LET g_rtia_m.rtiamoddt = cl_get_current()
LET g_rtia_m.rtiamodid_desc = cl_get_username(g_rtia_m.rtiamodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL artt600_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE rtia_t SET (rtiamodid,rtiamoddt) = (g_rtia_m.rtiamodid,g_rtia_m.rtiamoddt)
          WHERE rtiaent = g_enterprise AND rtiadocno = g_rtiadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_rtia_m.* = g_rtia_m_t.*
            CALL artt600_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_rtia_m.rtiadocno != g_rtia_m_t.rtiadocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE rtib_t SET rtibdocno = g_rtia_m.rtiadocno
 
          WHERE rtibent = g_enterprise AND rtibdocno = g_rtia_m_t.rtiadocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtib_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtib_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE rtic_t
            SET rticdocno = g_rtia_m.rtiadocno
 
          WHERE rticent = g_enterprise AND
                rticdocno = g_rtiadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtic_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update3"
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         
         UPDATE xrcd_t
            SET xrcddocno = g_rtia_m.rtiadocno
 
          WHERE xrcdent = g_enterprise AND
                xrcddocno = g_rtiadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update3"
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "xrcd_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update3"
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update4"
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         
         UPDATE rtie_t
            SET rtiedocno = g_rtia_m.rtiadocno
 
          WHERE rtieent = g_enterprise AND
                rtiedocno = g_rtiadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update4"
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtie_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update4"
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update5"
         {<point name="modify.body.b_fk_update5" mark="Y"/>}
         #end add-point
         
         UPDATE rtik_t
            SET rtikdocno = g_rtia_m.rtiadocno
 
          WHERE rtikent = g_enterprise AND
                rtikdocno = g_rtiadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update5"
         {<point name="modify.body.m_fk_update5"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtik_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtik_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update5"
         {<point name="modify.body.a_fk_update5"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update6"
         {<point name="modify.body.b_fk_update6" mark="Y"/>}
         #end add-point
         
         UPDATE rtin_t
            SET rtindocno = g_rtia_m.rtiadocno
 
          WHERE rtinent = g_enterprise AND
                rtindocno = g_rtiadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update6"
         {<point name="modify.body.m_fk_update6"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtin_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtin_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update6"
         {<point name="modify.body.a_fk_update6"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update7"
         {<point name="modify.body.b_fk_update7" mark="Y"/>}
         #end add-point
         
         UPDATE prek_t
            SET prekdocno = g_rtia_m.rtiadocno
 
          WHERE prekent = g_enterprise AND
                prekdocno = g_rtiadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update7"
         {<point name="modify.body.m_fk_update7"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "prek_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "prek_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update7"
         {<point name="modify.body.a_fk_update7"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt600_set_act_visible()   
   CALL artt600_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " rtiaent = " ||g_enterprise|| " AND",
                      " rtiadocno = '", g_rtia_m.rtiadocno, "' "
 
   #填到對應位置
   CALL artt600_browser_fill("")
 
   CLOSE artt600_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artt600_msgcentre_notify('modify')
 
END FUNCTION 

{</section>}

{<section id="artt600.input" >}
#+ 資料輸入
PRIVATE FUNCTION artt600_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   {<point name="input.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   {<point name="input.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   {<point name="input.pre_function"/>}
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtia_m.rtiasite,g_rtia_m.rtiasite_desc,g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno,g_rtia_m.rtia001, 
       g_rtia_m.rtia001_desc,g_rtia_m.rtia002,g_rtia_m.rtia002_desc,g_rtia_m.rtia059,g_rtia_m.rtia060, 
       g_rtia_m.rtia004,g_rtia_m.rtia004_desc,g_rtia_m.rtia005,g_rtia_m.rtia005_desc,g_rtia_m.rtia006, 
       g_rtia_m.rtia048,g_rtia_m.rtia053,g_rtia_m.rtiastus,g_rtia_m.rtia007,g_rtia_m.rtia008,g_rtia_m.rtia009, 
       g_rtia_m.rtia009_desc,g_rtia_m.rtia041,g_rtia_m.rtia013,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia016, 
       g_rtia_m.rtia051,g_rtia_m.rtia010,g_rtia_m.rtia010_desc,g_rtia_m.rtia011,g_rtia_m.rtia011_desc, 
       g_rtia_m.rtia012,g_rtia_m.rtia012_desc,g_rtia_m.rtia017,g_rtia_m.rtia018,g_rtia_m.rtia018_desc, 
       g_rtia_m.rtia019,g_rtia_m.rtia020,g_rtia_m.rtia021,g_rtia_m.rtia022,g_rtia_m.rtia023,g_rtia_m.rtia024, 
       g_rtia_m.rtia024_desc,g_rtia_m.rtia025,g_rtia_m.rtia025_desc,g_rtia_m.rtia026,g_rtia_m.rtia027, 
       g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033,g_rtia_m.rtia034, 
       g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia036_desc,g_rtia_m.rtia037,g_rtia_m.rtia037_desc, 
       g_rtia_m.rtia038,g_rtia_m.rtia038_desc,g_rtia_m.rtia039,g_rtia_m.isaf009,g_rtia_m.isaf010,g_rtia_m.isaf044, 
       g_rtia_m.isaf202,g_rtia_m.isaf203,g_rtia_m.isaf204,g_rtia_m.isaf201,g_rtia_m.isaf207,g_rtia_m.rtiaownid, 
       g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamodid_desc, 
       g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid, 
       g_rtia_m.rtiapstid_desc,g_rtia_m.rtiapstdt,g_rtia_m.snum,g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3 

   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT rtibsite,rtibunit,rtiborga,rtibseq,rtib035,rtib001,rtib002,rtib003,rtib004, 
       rtib005,rtib006,rtib008,rtib009,rtib010,rtib012,rtib013,rtib014,rtib015,rtib016,rtib018,rtib017, 
       rtib019,rtib020,rtib021,rtib031,rtib022,rtib024,rtib025,rtib026,rtib027,rtib032,rtib033,rtib028, 
       rtib030,rtib039 FROM rtib_t WHERE rtibent=? AND rtibdocno=? AND rtibseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt600_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rticseq,rticseq1,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007, 
       rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic020  
       FROM rtic_t WHERE rticent=? AND rticdocno=? AND rticseq=? AND rticseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt600_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql3"
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT xrcd007,xrcdld,xrcdseq,xrcdseq2,xrcd002,xrcd003,xrcd006,xrcd004,xrcd104  
       FROM xrcd_t WHERE xrcdent=? AND xrcddocno=? AND xrcdld=? AND xrcdseq=? AND xrcdseq2=? AND xrcd007=?  
       FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql3"
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt600_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql4"
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rtieseq,rtieseq1,rtie001,rtie002,rtie006 FROM rtie_t WHERE rtieent=? AND  
       rtiedocno=? AND rtieseq=? AND rtieseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql4"
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt600_bcl4 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql5"
   {<point name="input.define_sql5" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rtiksite,rtikunit,rtikorg,rtikseq,rtik001,rtik002,rtik003,rtik004,rtik005, 
       rtik006,rtik007,rtik013,rtik012,rtik008,rtik009,rtik010,rtik011,rtik014,rtik015,rtik016,rtik017, 
       rtik018,rtik019,rtik020,rtik021,rtik022,rtik023 FROM rtik_t WHERE rtikent=? AND rtikdocno=? AND  
       rtikseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql5"
   {<point name="input.after_define_sql5"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt600_bcl5 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql6"
   {<point name="input.define_sql6" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT rtinsite,rtinseq,rtinseq1,rtin001,rtin002,rtin003,rtin004,rtin005,rtin006, 
       rtin007,rtin008,rtin009,rtin010 FROM rtin_t WHERE rtinent=? AND rtindocno=? AND rtinseq=? AND  
       rtinseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql6"
   {<point name="input.after_define_sql6"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt600_bcl6 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql7"
   {<point name="input.define_sql7" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT preksite,prekunit,prekseq,prek001,prek002,prek003,prek004 FROM prek_t  
       WHERE prekent=? AND prekdocno=? AND prekseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql7"
   {<point name="input.after_define_sql7"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt600_bcl7 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL artt600_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL artt600_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_rtia_m.rtiasite,g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno,g_rtia_m.rtia001,g_rtia_m.rtia002, 
       g_rtia_m.rtia059,g_rtia_m.rtia060,g_rtia_m.rtia004,g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia053, 
       g_rtia_m.rtiastus,g_rtia_m.rtia007,g_rtia_m.rtia009,g_rtia_m.rtia041,g_rtia_m.rtia051,g_rtia_m.rtia010, 
       g_rtia_m.rtia011,g_rtia_m.rtia012,g_rtia_m.rtia017,g_rtia_m.rtia018,g_rtia_m.rtia019,g_rtia_m.rtia020, 
       g_rtia_m.rtia021,g_rtia_m.rtia022,g_rtia_m.rtia023,g_rtia_m.rtia024,g_rtia_m.rtia025,g_rtia_m.rtia026, 
       g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033, 
       g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia037,g_rtia_m.rtia038
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

{</section>}

{<section id="artt600.input.head" >}
      #單頭段
      INPUT BY NAME g_rtia_m.rtiasite,g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno,g_rtia_m.rtia001,g_rtia_m.rtia002, 
          g_rtia_m.rtia059,g_rtia_m.rtia060,g_rtia_m.rtia004,g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia053, 
          g_rtia_m.rtiastus,g_rtia_m.rtia007,g_rtia_m.rtia009,g_rtia_m.rtia041,g_rtia_m.rtia051,g_rtia_m.rtia010, 
          g_rtia_m.rtia011,g_rtia_m.rtia012,g_rtia_m.rtia017,g_rtia_m.rtia018,g_rtia_m.rtia019,g_rtia_m.rtia020, 
          g_rtia_m.rtia021,g_rtia_m.rtia022,g_rtia_m.rtia023,g_rtia_m.rtia024,g_rtia_m.rtia025,g_rtia_m.rtia026, 
          g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033, 
          g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia037,g_rtia_m.rtia038 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN artt600_cl USING g_enterprise,g_rtia_m.rtiadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt600_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE artt600_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL artt600_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL artt600_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiasite
            
            #add-point:AFTER FIELD rtiasite name="input.a.rtiasite"
            {<point name="input.a.rtiasite" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiasite
            #add-point:BEFORE FIELD rtiasite name="input.b.rtiasite"
            {<point name="input.b.rtiasite" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtiasite
            #add-point:ON CHANGE rtiasite name="input.g.rtiasite"
            {<point name="input.g.rtiasite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiadocdt
            #add-point:BEFORE FIELD rtiadocdt name="input.b.rtiadocdt"
            {<point name="input.b.rtiadocdt" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiadocdt
            
            #add-point:AFTER FIELD rtiadocdt name="input.a.rtiadocdt"
            {<point name="input.a.rtiadocdt" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtiadocdt
            #add-point:ON CHANGE rtiadocdt name="input.g.rtiadocdt"
            {<point name="input.g.rtiadocdt" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiadocno
            #add-point:BEFORE FIELD rtiadocno name="input.b.rtiadocno"
            {<point name="input.b.rtiadocno" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiadocno
            
            #add-point:AFTER FIELD rtiadocno name="input.a.rtiadocno"
            {<point name="input.a.rtiadocno" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtiadocno
            #add-point:ON CHANGE rtiadocno name="input.g.rtiadocno"
            {<point name="input.g.rtiadocno" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia001
            
            #add-point:AFTER FIELD rtia001 name="input.a.rtia001"
            {<point name="input.a.rtia001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia001
            #add-point:BEFORE FIELD rtia001 name="input.b.rtia001"
            {<point name="input.b.rtia001" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia001
            #add-point:ON CHANGE rtia001 name="input.g.rtia001"
            {<point name="input.g.rtia001" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia002
            
            #add-point:AFTER FIELD rtia002 name="input.a.rtia002"
            {<point name="input.a.rtia002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia002
            #add-point:BEFORE FIELD rtia002 name="input.b.rtia002"
            {<point name="input.b.rtia002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia002
            #add-point:ON CHANGE rtia002 name="input.g.rtia002"
            {<point name="input.g.rtia002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia059
            #add-point:BEFORE FIELD rtia059 name="input.b.rtia059"
            {<point name="input.b.rtia059" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia059
            
            #add-point:AFTER FIELD rtia059 name="input.a.rtia059"
            {<point name="input.a.rtia059" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia059
            #add-point:ON CHANGE rtia059 name="input.g.rtia059"
            {<point name="input.g.rtia059" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia060
            #add-point:BEFORE FIELD rtia060 name="input.b.rtia060"
            {<point name="input.b.rtia060" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia060
            
            #add-point:AFTER FIELD rtia060 name="input.a.rtia060"
            {<point name="input.a.rtia060" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia060
            #add-point:ON CHANGE rtia060 name="input.g.rtia060"
            {<point name="input.g.rtia060" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia004
            
            #add-point:AFTER FIELD rtia004 name="input.a.rtia004"
            {<point name="input.a.rtia004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia004
            #add-point:BEFORE FIELD rtia004 name="input.b.rtia004"
            {<point name="input.b.rtia004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia004
            #add-point:ON CHANGE rtia004 name="input.g.rtia004"
            {<point name="input.g.rtia004" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia005
            
            #add-point:AFTER FIELD rtia005 name="input.a.rtia005"
            {<point name="input.a.rtia005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia005
            #add-point:BEFORE FIELD rtia005 name="input.b.rtia005"
            {<point name="input.b.rtia005" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia005
            #add-point:ON CHANGE rtia005 name="input.g.rtia005"
            {<point name="input.g.rtia005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia006
            #add-point:BEFORE FIELD rtia006 name="input.b.rtia006"
            {<point name="input.b.rtia006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia006
            
            #add-point:AFTER FIELD rtia006 name="input.a.rtia006"
            {<point name="input.a.rtia006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia006
            #add-point:ON CHANGE rtia006 name="input.g.rtia006"
            {<point name="input.g.rtia006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia053
            #add-point:BEFORE FIELD rtia053 name="input.b.rtia053"
            {<point name="input.b.rtia053" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia053
            
            #add-point:AFTER FIELD rtia053 name="input.a.rtia053"
            {<point name="input.a.rtia053" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia053
            #add-point:ON CHANGE rtia053 name="input.g.rtia053"
            {<point name="input.g.rtia053" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiastus
            #add-point:BEFORE FIELD rtiastus name="input.b.rtiastus"
            {<point name="input.b.rtiastus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiastus
            
            #add-point:AFTER FIELD rtiastus name="input.a.rtiastus"
            {<point name="input.a.rtiastus" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtiastus
            #add-point:ON CHANGE rtiastus name="input.g.rtiastus"
            {<point name="input.g.rtiastus" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia007
            #add-point:BEFORE FIELD rtia007 name="input.b.rtia007"
            {<point name="input.b.rtia007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia007
            
            #add-point:AFTER FIELD rtia007 name="input.a.rtia007"
            {<point name="input.a.rtia007" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia007
            #add-point:ON CHANGE rtia007 name="input.g.rtia007"
            {<point name="input.g.rtia007" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia009
            
            #add-point:AFTER FIELD rtia009 name="input.a.rtia009"
            {<point name="input.a.rtia009" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia009
            #add-point:BEFORE FIELD rtia009 name="input.b.rtia009"
            {<point name="input.b.rtia009" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia009
            #add-point:ON CHANGE rtia009 name="input.g.rtia009"
            {<point name="input.g.rtia009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia041
            #add-point:BEFORE FIELD rtia041 name="input.b.rtia041"
            {<point name="input.b.rtia041" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia041
            
            #add-point:AFTER FIELD rtia041 name="input.a.rtia041"
            {<point name="input.a.rtia041" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia041
            #add-point:ON CHANGE rtia041 name="input.g.rtia041"
            {<point name="input.g.rtia041" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia051
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtia_m.rtia051,"0","1","","","azz-00079",1) THEN
               NEXT FIELD rtia051
            END IF 
 
 
 
            #add-point:AFTER FIELD rtia051 name="input.a.rtia051"
            {<point name="input.a.rtia051" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia051
            #add-point:BEFORE FIELD rtia051 name="input.b.rtia051"
            {<point name="input.b.rtia051" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia051
            #add-point:ON CHANGE rtia051 name="input.g.rtia051"
            {<point name="input.g.rtia051" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia010
            
            #add-point:AFTER FIELD rtia010 name="input.a.rtia010"
            {<point name="input.a.rtia010" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia010
            #add-point:BEFORE FIELD rtia010 name="input.b.rtia010"
            {<point name="input.b.rtia010" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia010
            #add-point:ON CHANGE rtia010 name="input.g.rtia010"
            {<point name="input.g.rtia010" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia011
            
            #add-point:AFTER FIELD rtia011 name="input.a.rtia011"
            {<point name="input.a.rtia011" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia011
            #add-point:BEFORE FIELD rtia011 name="input.b.rtia011"
            {<point name="input.b.rtia011" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia011
            #add-point:ON CHANGE rtia011 name="input.g.rtia011"
            {<point name="input.g.rtia011" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia012
            
            #add-point:AFTER FIELD rtia012 name="input.a.rtia012"
            {<point name="input.a.rtia012" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia012
            #add-point:BEFORE FIELD rtia012 name="input.b.rtia012"
            {<point name="input.b.rtia012" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia012
            #add-point:ON CHANGE rtia012 name="input.g.rtia012"
            {<point name="input.g.rtia012" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia017
            #add-point:BEFORE FIELD rtia017 name="input.b.rtia017"
            {<point name="input.b.rtia017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia017
            
            #add-point:AFTER FIELD rtia017 name="input.a.rtia017"
            {<point name="input.a.rtia017" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia017
            #add-point:ON CHANGE rtia017 name="input.g.rtia017"
            {<point name="input.g.rtia017" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia018
            
            #add-point:AFTER FIELD rtia018 name="input.a.rtia018"
            {<point name="input.a.rtia018" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia018
            #add-point:BEFORE FIELD rtia018 name="input.b.rtia018"
            {<point name="input.b.rtia018" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia018
            #add-point:ON CHANGE rtia018 name="input.g.rtia018"
            {<point name="input.g.rtia018" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia019
            #add-point:BEFORE FIELD rtia019 name="input.b.rtia019"
            {<point name="input.b.rtia019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia019
            
            #add-point:AFTER FIELD rtia019 name="input.a.rtia019"
            {<point name="input.a.rtia019" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia019
            #add-point:ON CHANGE rtia019 name="input.g.rtia019"
            {<point name="input.g.rtia019" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia020
            #add-point:BEFORE FIELD rtia020 name="input.b.rtia020"
            {<point name="input.b.rtia020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia020
            
            #add-point:AFTER FIELD rtia020 name="input.a.rtia020"
            {<point name="input.a.rtia020" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia020
            #add-point:ON CHANGE rtia020 name="input.g.rtia020"
            {<point name="input.g.rtia020" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia021
            #add-point:BEFORE FIELD rtia021 name="input.b.rtia021"
            {<point name="input.b.rtia021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia021
            
            #add-point:AFTER FIELD rtia021 name="input.a.rtia021"
            {<point name="input.a.rtia021" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia021
            #add-point:ON CHANGE rtia021 name="input.g.rtia021"
            {<point name="input.g.rtia021" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia022
            #add-point:BEFORE FIELD rtia022 name="input.b.rtia022"
            {<point name="input.b.rtia022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia022
            
            #add-point:AFTER FIELD rtia022 name="input.a.rtia022"
            {<point name="input.a.rtia022" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia022
            #add-point:ON CHANGE rtia022 name="input.g.rtia022"
            {<point name="input.g.rtia022" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia023
            #add-point:BEFORE FIELD rtia023 name="input.b.rtia023"
            {<point name="input.b.rtia023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia023
            
            #add-point:AFTER FIELD rtia023 name="input.a.rtia023"
            {<point name="input.a.rtia023" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia023
            #add-point:ON CHANGE rtia023 name="input.g.rtia023"
            {<point name="input.g.rtia023" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia024
            
            #add-point:AFTER FIELD rtia024 name="input.a.rtia024"
            {<point name="input.a.rtia024" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia024
            #add-point:BEFORE FIELD rtia024 name="input.b.rtia024"
            {<point name="input.b.rtia024" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia024
            #add-point:ON CHANGE rtia024 name="input.g.rtia024"
            {<point name="input.g.rtia024" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia025
            
            #add-point:AFTER FIELD rtia025 name="input.a.rtia025"
            {<point name="input.a.rtia025" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia025
            #add-point:BEFORE FIELD rtia025 name="input.b.rtia025"
            {<point name="input.b.rtia025" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia025
            #add-point:ON CHANGE rtia025 name="input.g.rtia025"
            {<point name="input.g.rtia025" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia026
            #add-point:BEFORE FIELD rtia026 name="input.b.rtia026"
            {<point name="input.b.rtia026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia026
            
            #add-point:AFTER FIELD rtia026 name="input.a.rtia026"
            {<point name="input.a.rtia026" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia026
            #add-point:ON CHANGE rtia026 name="input.g.rtia026"
            {<point name="input.g.rtia026" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia027
            #add-point:BEFORE FIELD rtia027 name="input.b.rtia027"
            {<point name="input.b.rtia027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia027
            
            #add-point:AFTER FIELD rtia027 name="input.a.rtia027"
            {<point name="input.a.rtia027" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia027
            #add-point:ON CHANGE rtia027 name="input.g.rtia027"
            {<point name="input.g.rtia027" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia028
            #add-point:BEFORE FIELD rtia028 name="input.b.rtia028"
            {<point name="input.b.rtia028" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia028
            
            #add-point:AFTER FIELD rtia028 name="input.a.rtia028"
            {<point name="input.a.rtia028" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia028
            #add-point:ON CHANGE rtia028 name="input.g.rtia028"
            {<point name="input.g.rtia028" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia029
            #add-point:BEFORE FIELD rtia029 name="input.b.rtia029"
            {<point name="input.b.rtia029" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia029
            
            #add-point:AFTER FIELD rtia029 name="input.a.rtia029"
            {<point name="input.a.rtia029" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia029
            #add-point:ON CHANGE rtia029 name="input.g.rtia029"
            {<point name="input.g.rtia029" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia030
            #add-point:BEFORE FIELD rtia030 name="input.b.rtia030"
            {<point name="input.b.rtia030" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia030
            
            #add-point:AFTER FIELD rtia030 name="input.a.rtia030"
            {<point name="input.a.rtia030" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia030
            #add-point:ON CHANGE rtia030 name="input.g.rtia030"
            {<point name="input.g.rtia030" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia032
            #add-point:BEFORE FIELD rtia032 name="input.b.rtia032"
            {<point name="input.b.rtia032" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia032
            
            #add-point:AFTER FIELD rtia032 name="input.a.rtia032"
            {<point name="input.a.rtia032" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia032
            #add-point:ON CHANGE rtia032 name="input.g.rtia032"
            {<point name="input.g.rtia032" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia033
            #add-point:BEFORE FIELD rtia033 name="input.b.rtia033"
            {<point name="input.b.rtia033" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia033
            
            #add-point:AFTER FIELD rtia033 name="input.a.rtia033"
            {<point name="input.a.rtia033" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia033
            #add-point:ON CHANGE rtia033 name="input.g.rtia033"
            {<point name="input.g.rtia033" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia034
            #add-point:BEFORE FIELD rtia034 name="input.b.rtia034"
            {<point name="input.b.rtia034" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia034
            
            #add-point:AFTER FIELD rtia034 name="input.a.rtia034"
            {<point name="input.a.rtia034" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia034
            #add-point:ON CHANGE rtia034 name="input.g.rtia034"
            {<point name="input.g.rtia034" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia035
            #add-point:BEFORE FIELD rtia035 name="input.b.rtia035"
            {<point name="input.b.rtia035" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia035
            
            #add-point:AFTER FIELD rtia035 name="input.a.rtia035"
            {<point name="input.a.rtia035" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia035
            #add-point:ON CHANGE rtia035 name="input.g.rtia035"
            {<point name="input.g.rtia035" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia036
            
            #add-point:AFTER FIELD rtia036 name="input.a.rtia036"
            {<point name="input.a.rtia036" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia036
            #add-point:BEFORE FIELD rtia036 name="input.b.rtia036"
            {<point name="input.b.rtia036" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia036
            #add-point:ON CHANGE rtia036 name="input.g.rtia036"
            {<point name="input.g.rtia036" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia037
            
            #add-point:AFTER FIELD rtia037 name="input.a.rtia037"
            {<point name="input.a.rtia037" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia037
            #add-point:BEFORE FIELD rtia037 name="input.b.rtia037"
            {<point name="input.b.rtia037" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia037
            #add-point:ON CHANGE rtia037 name="input.g.rtia037"
            {<point name="input.g.rtia037" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtia038
            
            #add-point:AFTER FIELD rtia038 name="input.a.rtia038"
            {<point name="input.a.rtia038" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtia038
            #add-point:BEFORE FIELD rtia038 name="input.b.rtia038"
            {<point name="input.b.rtia038" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtia038
            #add-point:ON CHANGE rtia038 name="input.g.rtia038"
            {<point name="input.g.rtia038" />}
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.rtiasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiasite
            #add-point:ON ACTION controlp INFIELD rtiasite name="input.c.rtiasite"
            {<point name="input.c.rtiasite" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtiadocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiadocdt
            #add-point:ON ACTION controlp INFIELD rtiadocdt name="input.c.rtiadocdt"
            {<point name="input.c.rtiadocdt" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtiadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiadocno
            #add-point:ON ACTION controlp INFIELD rtiadocno name="input.c.rtiadocno"
            {<point name="input.c.rtiadocno" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia001
            #add-point:ON ACTION controlp INFIELD rtia001 name="input.c.rtia001"
            {<point name="input.c.rtia001" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia002
            #add-point:ON ACTION controlp INFIELD rtia002 name="input.c.rtia002"
            {<point name="input.c.rtia002" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia059
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia059
            #add-point:ON ACTION controlp INFIELD rtia059 name="input.c.rtia059"
            {<point name="input.c.rtia059" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia060
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia060
            #add-point:ON ACTION controlp INFIELD rtia060 name="input.c.rtia060"
            {<point name="input.c.rtia060" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia004
            #add-point:ON ACTION controlp INFIELD rtia004 name="input.c.rtia004"
            {<point name="input.c.rtia004" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia005
            #add-point:ON ACTION controlp INFIELD rtia005 name="input.c.rtia005"
            {<point name="input.c.rtia005" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia006
            #add-point:ON ACTION controlp INFIELD rtia006 name="input.c.rtia006"
            {<point name="input.c.rtia006" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia053
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia053
            #add-point:ON ACTION controlp INFIELD rtia053 name="input.c.rtia053"
            {<point name="input.c.rtia053" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtiastus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiastus
            #add-point:ON ACTION controlp INFIELD rtiastus name="input.c.rtiastus"
            {<point name="input.c.rtiastus" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia007
            #add-point:ON ACTION controlp INFIELD rtia007 name="input.c.rtia007"
            {<point name="input.c.rtia007" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia009
            #add-point:ON ACTION controlp INFIELD rtia009 name="input.c.rtia009"
            {<point name="input.c.rtia009" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia041
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia041
            #add-point:ON ACTION controlp INFIELD rtia041 name="input.c.rtia041"
            {<point name="input.c.rtia041" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia051
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia051
            #add-point:ON ACTION controlp INFIELD rtia051 name="input.c.rtia051"
            {<point name="input.c.rtia051" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia010
            #add-point:ON ACTION controlp INFIELD rtia010 name="input.c.rtia010"
            {<point name="input.c.rtia010" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia011
            #add-point:ON ACTION controlp INFIELD rtia011 name="input.c.rtia011"
            {<point name="input.c.rtia011" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia012
            #add-point:ON ACTION controlp INFIELD rtia012 name="input.c.rtia012"
            {<point name="input.c.rtia012" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia017
            #add-point:ON ACTION controlp INFIELD rtia017 name="input.c.rtia017"
            {<point name="input.c.rtia017" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia018
            #add-point:ON ACTION controlp INFIELD rtia018 name="input.c.rtia018"
            {<point name="input.c.rtia018" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia019
            #add-point:ON ACTION controlp INFIELD rtia019 name="input.c.rtia019"
            {<point name="input.c.rtia019" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia020
            #add-point:ON ACTION controlp INFIELD rtia020 name="input.c.rtia020"
            {<point name="input.c.rtia020" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia021
            #add-point:ON ACTION controlp INFIELD rtia021 name="input.c.rtia021"
            {<point name="input.c.rtia021" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia022
            #add-point:ON ACTION controlp INFIELD rtia022 name="input.c.rtia022"
            {<point name="input.c.rtia022" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia023
            #add-point:ON ACTION controlp INFIELD rtia023 name="input.c.rtia023"
            {<point name="input.c.rtia023" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia024
            #add-point:ON ACTION controlp INFIELD rtia024 name="input.c.rtia024"
            {<point name="input.c.rtia024" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia025
            #add-point:ON ACTION controlp INFIELD rtia025 name="input.c.rtia025"
            {<point name="input.c.rtia025" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia026
            #add-point:ON ACTION controlp INFIELD rtia026 name="input.c.rtia026"
            {<point name="input.c.rtia026" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia027
            #add-point:ON ACTION controlp INFIELD rtia027 name="input.c.rtia027"
            {<point name="input.c.rtia027" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia028
            #add-point:ON ACTION controlp INFIELD rtia028 name="input.c.rtia028"
            {<point name="input.c.rtia028" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia029
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia029
            #add-point:ON ACTION controlp INFIELD rtia029 name="input.c.rtia029"
            {<point name="input.c.rtia029" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia030
            #add-point:ON ACTION controlp INFIELD rtia030 name="input.c.rtia030"
            {<point name="input.c.rtia030" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia032
            #add-point:ON ACTION controlp INFIELD rtia032 name="input.c.rtia032"
            {<point name="input.c.rtia032" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia033
            #add-point:ON ACTION controlp INFIELD rtia033 name="input.c.rtia033"
            {<point name="input.c.rtia033" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia034
            #add-point:ON ACTION controlp INFIELD rtia034 name="input.c.rtia034"
            {<point name="input.c.rtia034" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia035
            #add-point:ON ACTION controlp INFIELD rtia035 name="input.c.rtia035"
            {<point name="input.c.rtia035" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia036
            #add-point:ON ACTION controlp INFIELD rtia036 name="input.c.rtia036"
            {<point name="input.c.rtia036" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia037
            #add-point:ON ACTION controlp INFIELD rtia037 name="input.c.rtia037"
            {<point name="input.c.rtia037" />}
            #END add-point
 
 
         #Ctrlp:input.c.rtia038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtia038
            #add-point:ON ACTION controlp INFIELD rtia038 name="input.c.rtia038"
            {<point name="input.c.rtia038" />}
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_rtia_m.rtiadocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO rtia_t (rtiaent,rtiasite,rtiadocdt,rtiadocno,rtia001,rtia002,rtia059,rtia060, 
                   rtia004,rtia005,rtia006,rtia048,rtia053,rtiastus,rtia007,rtia008,rtia009,rtia041, 
                   rtia013,rtia014,rtia015,rtia016,rtia051,rtia010,rtia011,rtia012,rtia017,rtia018,rtia019, 
                   rtia020,rtia021,rtia022,rtia023,rtia024,rtia025,rtia026,rtia027,rtia028,rtia029,rtia030, 
                   rtia032,rtia033,rtia034,rtia035,rtia036,rtia037,rtia038,rtia039,rtiaownid,rtiaowndp, 
                   rtiacrtid,rtiacrtdp,rtiacrtdt,rtiamodid,rtiacnfid,rtiamoddt,rtiacnfdt,rtiapstid,rtiapstdt) 

               VALUES (g_enterprise,g_rtia_m.rtiasite,g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno,g_rtia_m.rtia001, 
                   g_rtia_m.rtia002,g_rtia_m.rtia059,g_rtia_m.rtia060,g_rtia_m.rtia004,g_rtia_m.rtia005, 
                   g_rtia_m.rtia006,g_rtia_m.rtia048,g_rtia_m.rtia053,g_rtia_m.rtiastus,g_rtia_m.rtia007, 
                   g_rtia_m.rtia008,g_rtia_m.rtia009,g_rtia_m.rtia041,g_rtia_m.rtia013,g_rtia_m.rtia014, 
                   g_rtia_m.rtia015,g_rtia_m.rtia016,g_rtia_m.rtia051,g_rtia_m.rtia010,g_rtia_m.rtia011, 
                   g_rtia_m.rtia012,g_rtia_m.rtia017,g_rtia_m.rtia018,g_rtia_m.rtia019,g_rtia_m.rtia020, 
                   g_rtia_m.rtia021,g_rtia_m.rtia022,g_rtia_m.rtia023,g_rtia_m.rtia024,g_rtia_m.rtia025, 
                   g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030, 
                   g_rtia_m.rtia032,g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036, 
                   g_rtia_m.rtia037,g_rtia_m.rtia038,g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp, 
                   g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiacnfid, 
                   g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_rtia_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL artt600_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL artt600_b_fill()
                  CALL artt600_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL artt600_rtia_t_mask_restore('restore_mask_o')
               
               UPDATE rtia_t SET (rtiasite,rtiadocdt,rtiadocno,rtia001,rtia002,rtia059,rtia060,rtia004, 
                   rtia005,rtia006,rtia048,rtia053,rtiastus,rtia007,rtia008,rtia009,rtia041,rtia013, 
                   rtia014,rtia015,rtia016,rtia051,rtia010,rtia011,rtia012,rtia017,rtia018,rtia019,rtia020, 
                   rtia021,rtia022,rtia023,rtia024,rtia025,rtia026,rtia027,rtia028,rtia029,rtia030,rtia032, 
                   rtia033,rtia034,rtia035,rtia036,rtia037,rtia038,rtia039,rtiaownid,rtiaowndp,rtiacrtid, 
                   rtiacrtdp,rtiacrtdt,rtiamodid,rtiacnfid,rtiamoddt,rtiacnfdt,rtiapstid,rtiapstdt) = (g_rtia_m.rtiasite, 
                   g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno,g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia059, 
                   g_rtia_m.rtia060,g_rtia_m.rtia004,g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia048, 
                   g_rtia_m.rtia053,g_rtia_m.rtiastus,g_rtia_m.rtia007,g_rtia_m.rtia008,g_rtia_m.rtia009, 
                   g_rtia_m.rtia041,g_rtia_m.rtia013,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia016, 
                   g_rtia_m.rtia051,g_rtia_m.rtia010,g_rtia_m.rtia011,g_rtia_m.rtia012,g_rtia_m.rtia017, 
                   g_rtia_m.rtia018,g_rtia_m.rtia019,g_rtia_m.rtia020,g_rtia_m.rtia021,g_rtia_m.rtia022, 
                   g_rtia_m.rtia023,g_rtia_m.rtia024,g_rtia_m.rtia025,g_rtia_m.rtia026,g_rtia_m.rtia027, 
                   g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033, 
                   g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia037,g_rtia_m.rtia038, 
                   g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtdp, 
                   g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiacnfid,g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfdt, 
                   g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt)
                WHERE rtiaent = g_enterprise AND rtiadocno = g_rtiadocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "rtia_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL artt600_rtia_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_rtia_m_t)
               LET g_log2 = util.JSON.stringify(g_rtia_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_rtiadocno_t = g_rtia_m.rtiadocno
 
            
      END INPUT
   

{</section>}

{<section id="artt600.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_rtib_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtib_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artt600_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_rtib_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artt600_cl USING g_enterprise,g_rtia_m.rtiadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt600_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE artt600_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_rtib_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtib_d[l_ac].rtibseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_rtib_d_t.* = g_rtib_d[l_ac].*  #BACKUP
               LET g_rtib_d_o.* = g_rtib_d[l_ac].*  #BACKUP
               CALL artt600_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL artt600_set_no_entry_b(l_cmd)
               IF NOT artt600_lock_b("rtib_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artt600_bcl INTO g_rtib_d[l_ac].rtibsite,g_rtib_d[l_ac].rtibunit,g_rtib_d[l_ac].rtiborga, 
                      g_rtib_d[l_ac].rtibseq,g_rtib_d[l_ac].rtib035,g_rtib_d[l_ac].rtib001,g_rtib_d[l_ac].rtib002, 
                      g_rtib_d[l_ac].rtib003,g_rtib_d[l_ac].rtib004,g_rtib_d[l_ac].rtib005,g_rtib_d[l_ac].rtib006, 
                      g_rtib_d[l_ac].rtib008,g_rtib_d[l_ac].rtib009,g_rtib_d[l_ac].rtib010,g_rtib_d[l_ac].rtib012, 
                      g_rtib_d[l_ac].rtib013,g_rtib_d[l_ac].rtib014,g_rtib_d[l_ac].rtib015,g_rtib_d[l_ac].rtib016, 
                      g_rtib_d[l_ac].rtib018,g_rtib_d[l_ac].rtib017,g_rtib_d[l_ac].rtib019,g_rtib_d[l_ac].rtib020, 
                      g_rtib_d[l_ac].rtib021,g_rtib_d[l_ac].rtib031,g_rtib_d[l_ac].rtib022,g_rtib_d[l_ac].rtib024, 
                      g_rtib_d[l_ac].rtib025,g_rtib_d[l_ac].rtib026,g_rtib_d[l_ac].rtib027,g_rtib_d[l_ac].rtib032, 
                      g_rtib_d[l_ac].rtib033,g_rtib_d[l_ac].rtib028,g_rtib_d[l_ac].rtib030,g_rtib_d[l_ac].rtib039 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_rtib_d_t.rtibseq,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rtib_d_mask_o[l_ac].* =  g_rtib_d[l_ac].*
                  CALL artt600_rtib_t_mask()
                  LET g_rtib_d_mask_n[l_ac].* =  g_rtib_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL artt600_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtib_d[l_ac].* TO NULL 
            INITIALIZE g_rtib_d_t.* TO NULL 
            INITIALIZE g_rtib_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_rtib_d[l_ac].rtib020 = "0"
      LET g_rtib_d[l_ac].rtib039 = "N"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_rtib_d_t.* = g_rtib_d[l_ac].*     #新輸入資料
            LET g_rtib_d_o.* = g_rtib_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artt600_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL artt600_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtib_d[li_reproduce_target].* = g_rtib_d[li_reproduce].*
 
               LET g_rtib_d[li_reproduce_target].rtibseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM rtib_t 
             WHERE rtibent = g_enterprise AND rtibdocno = g_rtia_m.rtiadocno
 
               AND rtibseq = g_rtib_d[l_ac].rtibseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys[2] = g_rtib_d[g_detail_idx].rtibseq
               CALL artt600_insert_b('rtib_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_rtib_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtib_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artt600_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               {<point name="input.body.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtia_m.rtiadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_rtib_d_t.rtibseq
 
            
               #刪除同層單身
               IF NOT artt600_delete_b('rtib_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt600_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT artt600_key_delete_b(gs_keys,'rtib_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt600_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE artt600_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_rtib_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rtib_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtibsite
            #add-point:BEFORE FIELD rtibsite name="input.b.page1.rtibsite"
            {<point name="input.b.page1.rtibsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtibsite
            
            #add-point:AFTER FIELD rtibsite name="input.a.page1.rtibsite"
            {<point name="input.a.page1.rtibsite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtibsite
            #add-point:ON CHANGE rtibsite name="input.g.page1.rtibsite"
            {<point name="input.g.page1.rtibsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtibunit
            #add-point:BEFORE FIELD rtibunit name="input.b.page1.rtibunit"
            {<point name="input.b.page1.rtibunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtibunit
            
            #add-point:AFTER FIELD rtibunit name="input.a.page1.rtibunit"
            {<point name="input.a.page1.rtibunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtibunit
            #add-point:ON CHANGE rtibunit name="input.g.page1.rtibunit"
            {<point name="input.g.page1.rtibunit" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtiborga
            #add-point:BEFORE FIELD rtiborga name="input.b.page1.rtiborga"
            {<point name="input.b.page1.rtiborga" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtiborga
            
            #add-point:AFTER FIELD rtiborga name="input.a.page1.rtiborga"
            {<point name="input.a.page1.rtiborga" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtiborga
            #add-point:ON CHANGE rtiborga name="input.g.page1.rtiborga"
            {<point name="input.g.page1.rtiborga" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtibseq
            #add-point:BEFORE FIELD rtibseq name="input.b.page1.rtibseq"
            {<point name="input.b.page1.rtibseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtibseq
            
            #add-point:AFTER FIELD rtibseq name="input.a.page1.rtibseq"
            {<point name="input.a.page1.rtibseq" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtibseq
            #add-point:ON CHANGE rtibseq name="input.g.page1.rtibseq"
            {<point name="input.g.page1.rtibseq" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib035
            #add-point:BEFORE FIELD rtib035 name="input.b.page1.rtib035"
            {<point name="input.b.page1.rtib035" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib035
            
            #add-point:AFTER FIELD rtib035 name="input.a.page1.rtib035"
            {<point name="input.a.page1.rtib035" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib035
            #add-point:ON CHANGE rtib035 name="input.g.page1.rtib035"
            {<point name="input.g.page1.rtib035" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib001
            #add-point:BEFORE FIELD rtib001 name="input.b.page1.rtib001"
            {<point name="input.b.page1.rtib001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib001
            
            #add-point:AFTER FIELD rtib001 name="input.a.page1.rtib001"
            {<point name="input.a.page1.rtib001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib001
            #add-point:ON CHANGE rtib001 name="input.g.page1.rtib001"
            {<point name="input.g.page1.rtib001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib002
            #add-point:BEFORE FIELD rtib002 name="input.b.page1.rtib002"
            {<point name="input.b.page1.rtib002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib002
            
            #add-point:AFTER FIELD rtib002 name="input.a.page1.rtib002"
            {<point name="input.a.page1.rtib002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib002
            #add-point:ON CHANGE rtib002 name="input.g.page1.rtib002"
            {<point name="input.g.page1.rtib002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib003
            #add-point:BEFORE FIELD rtib003 name="input.b.page1.rtib003"
            {<point name="input.b.page1.rtib003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib003
            
            #add-point:AFTER FIELD rtib003 name="input.a.page1.rtib003"
            {<point name="input.a.page1.rtib003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib003
            #add-point:ON CHANGE rtib003 name="input.g.page1.rtib003"
            {<point name="input.g.page1.rtib003" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib004
            
            #add-point:AFTER FIELD rtib004 name="input.a.page1.rtib004"
            {<point name="input.a.page1.rtib004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib004
            #add-point:BEFORE FIELD rtib004 name="input.b.page1.rtib004"
            {<point name="input.b.page1.rtib004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib004
            #add-point:ON CHANGE rtib004 name="input.g.page1.rtib004"
            {<point name="input.g.page1.rtib004" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib005
            
            #add-point:AFTER FIELD rtib005 name="input.a.page1.rtib005"
            {<point name="input.a.page1.rtib005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib005
            #add-point:BEFORE FIELD rtib005 name="input.b.page1.rtib005"
            {<point name="input.b.page1.rtib005" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib005
            #add-point:ON CHANGE rtib005 name="input.g.page1.rtib005"
            {<point name="input.g.page1.rtib005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib005_desc
            #add-point:BEFORE FIELD rtib005_desc name="input.b.page1.rtib005_desc"
            {<point name="input.b.page1.rtib005_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib005_desc
            
            #add-point:AFTER FIELD rtib005_desc name="input.a.page1.rtib005_desc"
            {<point name="input.a.page1.rtib005_desc" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib005_desc
            #add-point:ON CHANGE rtib005_desc name="input.g.page1.rtib005_desc"
            {<point name="input.g.page1.rtib005_desc" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib008
            #add-point:BEFORE FIELD rtib008 name="input.b.page1.rtib008"
            {<point name="input.b.page1.rtib008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib008
            
            #add-point:AFTER FIELD rtib008 name="input.a.page1.rtib008"
            {<point name="input.a.page1.rtib008" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib008
            #add-point:ON CHANGE rtib008 name="input.g.page1.rtib008"
            {<point name="input.g.page1.rtib008" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib009
            #add-point:BEFORE FIELD rtib009 name="input.b.page1.rtib009"
            {<point name="input.b.page1.rtib009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib009
            
            #add-point:AFTER FIELD rtib009 name="input.a.page1.rtib009"
            {<point name="input.a.page1.rtib009" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib009
            #add-point:ON CHANGE rtib009 name="input.g.page1.rtib009"
            {<point name="input.g.page1.rtib009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib012
            #add-point:BEFORE FIELD rtib012 name="input.b.page1.rtib012"
            {<point name="input.b.page1.rtib012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib012
            
            #add-point:AFTER FIELD rtib012 name="input.a.page1.rtib012"
            {<point name="input.a.page1.rtib012" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib012
            #add-point:ON CHANGE rtib012 name="input.g.page1.rtib012"
            {<point name="input.g.page1.rtib012" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib013
            
            #add-point:AFTER FIELD rtib013 name="input.a.page1.rtib013"
            {<point name="input.a.page1.rtib013" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib013
            #add-point:BEFORE FIELD rtib013 name="input.b.page1.rtib013"
            {<point name="input.b.page1.rtib013" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib013
            #add-point:ON CHANGE rtib013 name="input.g.page1.rtib013"
            {<point name="input.g.page1.rtib013" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib015
            #add-point:BEFORE FIELD rtib015 name="input.b.page1.rtib015"
            {<point name="input.b.page1.rtib015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib015
            
            #add-point:AFTER FIELD rtib015 name="input.a.page1.rtib015"
            {<point name="input.a.page1.rtib015" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib015
            #add-point:ON CHANGE rtib015 name="input.g.page1.rtib015"
            {<point name="input.g.page1.rtib015" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib016
            #add-point:BEFORE FIELD rtib016 name="input.b.page1.rtib016"
            {<point name="input.b.page1.rtib016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib016
            
            #add-point:AFTER FIELD rtib016 name="input.a.page1.rtib016"
            {<point name="input.a.page1.rtib016" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib016
            #add-point:ON CHANGE rtib016 name="input.g.page1.rtib016"
            {<point name="input.g.page1.rtib016" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib019
            #add-point:BEFORE FIELD rtib019 name="input.b.page1.rtib019"
            {<point name="input.b.page1.rtib019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib019
            
            #add-point:AFTER FIELD rtib019 name="input.a.page1.rtib019"
            {<point name="input.a.page1.rtib019" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib019
            #add-point:ON CHANGE rtib019 name="input.g.page1.rtib019"
            {<point name="input.g.page1.rtib019" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib020
            #add-point:BEFORE FIELD rtib020 name="input.b.page1.rtib020"
            {<point name="input.b.page1.rtib020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib020
            
            #add-point:AFTER FIELD rtib020 name="input.a.page1.rtib020"
            {<point name="input.a.page1.rtib020" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib020
            #add-point:ON CHANGE rtib020 name="input.g.page1.rtib020"
            {<point name="input.g.page1.rtib020" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib021
            #add-point:BEFORE FIELD rtib021 name="input.b.page1.rtib021"
            {<point name="input.b.page1.rtib021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib021
            
            #add-point:AFTER FIELD rtib021 name="input.a.page1.rtib021"
            {<point name="input.a.page1.rtib021" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib021
            #add-point:ON CHANGE rtib021 name="input.g.page1.rtib021"
            {<point name="input.g.page1.rtib021" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib022
            #add-point:BEFORE FIELD rtib022 name="input.b.page1.rtib022"
            {<point name="input.b.page1.rtib022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib022
            
            #add-point:AFTER FIELD rtib022 name="input.a.page1.rtib022"
            {<point name="input.a.page1.rtib022" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib022
            #add-point:ON CHANGE rtib022 name="input.g.page1.rtib022"
            {<point name="input.g.page1.rtib022" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib024
            
            #add-point:AFTER FIELD rtib024 name="input.a.page1.rtib024"
            {<point name="input.a.page1.rtib024" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib024
            #add-point:BEFORE FIELD rtib024 name="input.b.page1.rtib024"
            {<point name="input.b.page1.rtib024" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib024
            #add-point:ON CHANGE rtib024 name="input.g.page1.rtib024"
            {<point name="input.g.page1.rtib024" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib025
            
            #add-point:AFTER FIELD rtib025 name="input.a.page1.rtib025"
            {<point name="input.a.page1.rtib025" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib025
            #add-point:BEFORE FIELD rtib025 name="input.b.page1.rtib025"
            {<point name="input.b.page1.rtib025" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib025
            #add-point:ON CHANGE rtib025 name="input.g.page1.rtib025"
            {<point name="input.g.page1.rtib025" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib026
            #add-point:BEFORE FIELD rtib026 name="input.b.page1.rtib026"
            {<point name="input.b.page1.rtib026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib026
            
            #add-point:AFTER FIELD rtib026 name="input.a.page1.rtib026"
            {<point name="input.a.page1.rtib026" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib026
            #add-point:ON CHANGE rtib026 name="input.g.page1.rtib026"
            {<point name="input.g.page1.rtib026" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib027
            #add-point:BEFORE FIELD rtib027 name="input.b.page1.rtib027"
            {<point name="input.b.page1.rtib027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib027
            
            #add-point:AFTER FIELD rtib027 name="input.a.page1.rtib027"
            {<point name="input.a.page1.rtib027" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib027
            #add-point:ON CHANGE rtib027 name="input.g.page1.rtib027"
            {<point name="input.g.page1.rtib027" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib032
            #add-point:BEFORE FIELD rtib032 name="input.b.page1.rtib032"
            {<point name="input.b.page1.rtib032" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib032
            
            #add-point:AFTER FIELD rtib032 name="input.a.page1.rtib032"
            {<point name="input.a.page1.rtib032" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib032
            #add-point:ON CHANGE rtib032 name="input.g.page1.rtib032"
            {<point name="input.g.page1.rtib032" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib033
            
            #add-point:AFTER FIELD rtib033 name="input.a.page1.rtib033"
            {<point name="input.a.page1.rtib033" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib033
            #add-point:BEFORE FIELD rtib033 name="input.b.page1.rtib033"
            {<point name="input.b.page1.rtib033" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib033
            #add-point:ON CHANGE rtib033 name="input.g.page1.rtib033"
            {<point name="input.g.page1.rtib033" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib028
            #add-point:BEFORE FIELD rtib028 name="input.b.page1.rtib028"
            {<point name="input.b.page1.rtib028" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib028
            
            #add-point:AFTER FIELD rtib028 name="input.a.page1.rtib028"
            {<point name="input.a.page1.rtib028" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib028
            #add-point:ON CHANGE rtib028 name="input.g.page1.rtib028"
            {<point name="input.g.page1.rtib028" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib030
            #add-point:BEFORE FIELD rtib030 name="input.b.page1.rtib030"
            {<point name="input.b.page1.rtib030" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib030
            
            #add-point:AFTER FIELD rtib030 name="input.a.page1.rtib030"
            {<point name="input.a.page1.rtib030" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib030
            #add-point:ON CHANGE rtib030 name="input.g.page1.rtib030"
            {<point name="input.g.page1.rtib030" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtib039
            #add-point:BEFORE FIELD rtib039 name="input.b.page1.rtib039"
            {<point name="input.b.page1.rtib039" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtib039
            
            #add-point:AFTER FIELD rtib039 name="input.a.page1.rtib039"
            {<point name="input.a.page1.rtib039" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtib039
            #add-point:ON CHANGE rtib039 name="input.g.page1.rtib039"
            {<point name="input.g.page1.rtib039" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.rtibsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtibsite
            #add-point:ON ACTION controlp INFIELD rtibsite name="input.c.page1.rtibsite"
            {<point name="input.c.page1.rtibsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtibunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtibunit
            #add-point:ON ACTION controlp INFIELD rtibunit name="input.c.page1.rtibunit"
            {<point name="input.c.page1.rtibunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtiborga
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtiborga
            #add-point:ON ACTION controlp INFIELD rtiborga name="input.c.page1.rtiborga"
            {<point name="input.c.page1.rtiborga" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtibseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtibseq
            #add-point:ON ACTION controlp INFIELD rtibseq name="input.c.page1.rtibseq"
            {<point name="input.c.page1.rtibseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib035
            #add-point:ON ACTION controlp INFIELD rtib035 name="input.c.page1.rtib035"
            {<point name="input.c.page1.rtib035" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib001
            #add-point:ON ACTION controlp INFIELD rtib001 name="input.c.page1.rtib001"
            {<point name="input.c.page1.rtib001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib002
            #add-point:ON ACTION controlp INFIELD rtib002 name="input.c.page1.rtib002"
            {<point name="input.c.page1.rtib002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib003
            #add-point:ON ACTION controlp INFIELD rtib003 name="input.c.page1.rtib003"
            {<point name="input.c.page1.rtib003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib004
            #add-point:ON ACTION controlp INFIELD rtib004 name="input.c.page1.rtib004"
            {<point name="input.c.page1.rtib004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib005
            #add-point:ON ACTION controlp INFIELD rtib005 name="input.c.page1.rtib005"
            {<point name="input.c.page1.rtib005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib005_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib005_desc
            #add-point:ON ACTION controlp INFIELD rtib005_desc name="input.c.page1.rtib005_desc"
            {<point name="input.c.page1.rtib005_desc" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib008
            #add-point:ON ACTION controlp INFIELD rtib008 name="input.c.page1.rtib008"
            {<point name="input.c.page1.rtib008" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib009
            #add-point:ON ACTION controlp INFIELD rtib009 name="input.c.page1.rtib009"
            {<point name="input.c.page1.rtib009" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib012
            #add-point:ON ACTION controlp INFIELD rtib012 name="input.c.page1.rtib012"
            {<point name="input.c.page1.rtib012" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib013
            #add-point:ON ACTION controlp INFIELD rtib013 name="input.c.page1.rtib013"
            {<point name="input.c.page1.rtib013" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib015
            #add-point:ON ACTION controlp INFIELD rtib015 name="input.c.page1.rtib015"
            {<point name="input.c.page1.rtib015" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib016
            #add-point:ON ACTION controlp INFIELD rtib016 name="input.c.page1.rtib016"
            {<point name="input.c.page1.rtib016" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib019
            #add-point:ON ACTION controlp INFIELD rtib019 name="input.c.page1.rtib019"
            {<point name="input.c.page1.rtib019" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib020
            #add-point:ON ACTION controlp INFIELD rtib020 name="input.c.page1.rtib020"
            {<point name="input.c.page1.rtib020" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib021
            #add-point:ON ACTION controlp INFIELD rtib021 name="input.c.page1.rtib021"
            {<point name="input.c.page1.rtib021" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib022
            #add-point:ON ACTION controlp INFIELD rtib022 name="input.c.page1.rtib022"
            {<point name="input.c.page1.rtib022" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib024
            #add-point:ON ACTION controlp INFIELD rtib024 name="input.c.page1.rtib024"
            {<point name="input.c.page1.rtib024" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib025
            #add-point:ON ACTION controlp INFIELD rtib025 name="input.c.page1.rtib025"
            {<point name="input.c.page1.rtib025" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib026
            #add-point:ON ACTION controlp INFIELD rtib026 name="input.c.page1.rtib026"
            {<point name="input.c.page1.rtib026" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib027
            #add-point:ON ACTION controlp INFIELD rtib027 name="input.c.page1.rtib027"
            {<point name="input.c.page1.rtib027" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib032
            #add-point:ON ACTION controlp INFIELD rtib032 name="input.c.page1.rtib032"
            {<point name="input.c.page1.rtib032" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib033
            #add-point:ON ACTION controlp INFIELD rtib033 name="input.c.page1.rtib033"
            {<point name="input.c.page1.rtib033" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib028
            #add-point:ON ACTION controlp INFIELD rtib028 name="input.c.page1.rtib028"
            {<point name="input.c.page1.rtib028" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib030
            #add-point:ON ACTION controlp INFIELD rtib030 name="input.c.page1.rtib030"
            {<point name="input.c.page1.rtib030" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtib039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtib039
            #add-point:ON ACTION controlp INFIELD rtib039 name="input.c.page1.rtib039"
            {<point name="input.c.page1.rtib039" />}
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_rtib_d[l_ac].* = g_rtib_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE artt600_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_rtib_d[l_ac].rtibseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_rtib_d[l_ac].* = g_rtib_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL artt600_rtib_t_mask_restore('restore_mask_o')
      
               UPDATE rtib_t SET (rtibdocno,rtibsite,rtibunit,rtiborga,rtibseq,rtib035,rtib001,rtib002, 
                   rtib003,rtib004,rtib005,rtib006,rtib008,rtib009,rtib010,rtib012,rtib013,rtib014,rtib015, 
                   rtib016,rtib018,rtib017,rtib019,rtib020,rtib021,rtib031,rtib022,rtib024,rtib025,rtib026, 
                   rtib027,rtib032,rtib033,rtib028,rtib030,rtib039) = (g_rtia_m.rtiadocno,g_rtib_d[l_ac].rtibsite, 
                   g_rtib_d[l_ac].rtibunit,g_rtib_d[l_ac].rtiborga,g_rtib_d[l_ac].rtibseq,g_rtib_d[l_ac].rtib035, 
                   g_rtib_d[l_ac].rtib001,g_rtib_d[l_ac].rtib002,g_rtib_d[l_ac].rtib003,g_rtib_d[l_ac].rtib004, 
                   g_rtib_d[l_ac].rtib005,g_rtib_d[l_ac].rtib006,g_rtib_d[l_ac].rtib008,g_rtib_d[l_ac].rtib009, 
                   g_rtib_d[l_ac].rtib010,g_rtib_d[l_ac].rtib012,g_rtib_d[l_ac].rtib013,g_rtib_d[l_ac].rtib014, 
                   g_rtib_d[l_ac].rtib015,g_rtib_d[l_ac].rtib016,g_rtib_d[l_ac].rtib018,g_rtib_d[l_ac].rtib017, 
                   g_rtib_d[l_ac].rtib019,g_rtib_d[l_ac].rtib020,g_rtib_d[l_ac].rtib021,g_rtib_d[l_ac].rtib031, 
                   g_rtib_d[l_ac].rtib022,g_rtib_d[l_ac].rtib024,g_rtib_d[l_ac].rtib025,g_rtib_d[l_ac].rtib026, 
                   g_rtib_d[l_ac].rtib027,g_rtib_d[l_ac].rtib032,g_rtib_d[l_ac].rtib033,g_rtib_d[l_ac].rtib028, 
                   g_rtib_d[l_ac].rtib030,g_rtib_d[l_ac].rtib039)
                WHERE rtibent = g_enterprise AND rtibdocno = g_rtia_m.rtiadocno 
 
                  AND rtibseq = g_rtib_d_t.rtibseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_rtib_d[l_ac].* = g_rtib_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtib_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_rtib_d[l_ac].* = g_rtib_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtib_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys_bak[1] = g_rtiadocno_t
               LET gs_keys[2] = g_rtib_d[g_detail_idx].rtibseq
               LET gs_keys_bak[2] = g_rtib_d_t.rtibseq
               CALL artt600_update_b('rtib_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL artt600_rtib_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_rtib_d[g_detail_idx].rtibseq = g_rtib_d_t.rtibseq 
 
                  ) THEN
                  LET gs_keys[01] = g_rtia_m.rtiadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_rtib_d_t.rtibseq
 
                  CALL artt600_key_update_b(gs_keys,'rtib_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtia_m),util.JSON.stringify(g_rtib_d_t)
               LET g_log2 = util.JSON.stringify(g_rtia_m),util.JSON.stringify(g_rtib_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL artt600_unlock_b("rtib_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            {<point name="input.body.after_input"/>}
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_rtib_d[li_reproduce_target].* = g_rtib_d[li_reproduce].*
 
               LET g_rtib_d[li_reproduce_target].rtibseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_rtib_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_rtib_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_rtib7_d FROM s_detail7.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_7)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body7.before_input2"
            {<point name="input.body7.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtib7_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artt600_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'7',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_rtib7_d.getLength()
            #add-point:資料輸入前 name="input.body7.before_input"
            {<point name="input.body7.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtib7_d[l_ac].* TO NULL 
            INITIALIZE g_rtib7_d_t.* TO NULL 
            INITIALIZE g_rtib7_d_o.* TO NULL 
            #公用欄位給值(單身7)
            
            #自定義預設值(單身7)
            
            #add-point:modify段before備份 name="input.body7.insert.before_bak"
            {<point name="input.body7.insert.before_bak"/>}
            #end add-point
            LET g_rtib7_d_t.* = g_rtib7_d[l_ac].*     #新輸入資料
            LET g_rtib7_d_o.* = g_rtib7_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artt600_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body7.insert.after_set_entry_b"
            {<point name="input.body7.insert.after_set_entry_b"/>}
            #end add-point
            CALL artt600_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtib7_d[li_reproduce_target].* = g_rtib7_d[li_reproduce].*
 
               LET g_rtib7_d[li_reproduce_target].prekseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body7.before_insert"
            {<point name="input.body7.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body7.before_row2"
            {<point name="input.body7.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[7] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 7
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artt600_cl USING g_enterprise,g_rtia_m.rtiadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt600_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE artt600_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_rtib7_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtib7_d[l_ac].prekseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_rtib7_d_t.* = g_rtib7_d[l_ac].*  #BACKUP
               LET g_rtib7_d_o.* = g_rtib7_d[l_ac].*  #BACKUP
               CALL artt600_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body7.after_set_entry_b"
               {<point name="input.body7.after_set_entry_b"/>}
               #end add-point  
               CALL artt600_set_no_entry_b(l_cmd)
               IF NOT artt600_lock_b("prek_t","'7'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artt600_bcl7 INTO g_rtib7_d[l_ac].preksite,g_rtib7_d[l_ac].prekunit,g_rtib7_d[l_ac].prekseq, 
                      g_rtib7_d[l_ac].prek001,g_rtib7_d[l_ac].prek002,g_rtib7_d[l_ac].prek003,g_rtib7_d[l_ac].prek004 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rtib7_d_mask_o[l_ac].* =  g_rtib7_d[l_ac].*
                  CALL artt600_prek_t_mask()
                  LET g_rtib7_d_mask_n[l_ac].* =  g_rtib7_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL artt600_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body7.before_row"
            {<point name="input.body7.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body7.after_delete_d"
               {<point name="input.body7.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body7.b_delete_ask"
               {<point name="input.body7.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身7刪除前 name="input.body7.b_delete"
               {<point name="input.body7.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtia_m.rtiadocno
               LET gs_keys[gs_keys.getLength()+1] = g_rtib7_d_t.prekseq
            
               #刪除同層單身
               IF NOT artt600_delete_b('prek_t',gs_keys,"'7'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt600_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT artt600_key_delete_b(gs_keys,'prek_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt600_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身7刪除中 name="input.body7.m_delete"
               {<point name="input.body7.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE artt600_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身7刪除後 name="input.body7.a_delete"
               {<point name="input.body7.a_delete"/>}
               #end add-point
               LET l_count = g_rtib_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body7.after_delete"
               {<point name="input.body7.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rtib7_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身7新增前 name="input.body7.b_a_insert"
            {<point name="input.body7.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM prek_t 
             WHERE prekent = g_enterprise AND prekdocno = g_rtia_m.rtiadocno
               AND prekseq = g_rtib7_d[l_ac].prekseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身7新增前 name="input.body7.b_insert"
               {<point name="input.body7.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys[2] = g_rtib7_d[g_detail_idx].prekseq
               CALL artt600_insert_b('prek_t',gs_keys,"'7'")
                           
               #add-point:單身新增後7 name="input.body7.a_insert"
               {<point name="input.body7.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_rtib_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "prek_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artt600_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body7.after_insert"
               {<point name="input.body7.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_rtib7_d[l_ac].* = g_rtib7_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE artt600_bcl7
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_rtib7_d[l_ac].* = g_rtib7_d_t.*
            ELSE
               #add-point:單身page7修改前 name="input.body7.b_update"
               {<point name="input.body7.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身7)
               
               
               #將遮罩欄位還原
               CALL artt600_prek_t_mask_restore('restore_mask_o')
                              
               UPDATE prek_t SET (prekdocno,preksite,prekunit,prekseq,prek001,prek002,prek003,prek004) = (g_rtia_m.rtiadocno, 
                   g_rtib7_d[l_ac].preksite,g_rtib7_d[l_ac].prekunit,g_rtib7_d[l_ac].prekseq,g_rtib7_d[l_ac].prek001, 
                   g_rtib7_d[l_ac].prek002,g_rtib7_d[l_ac].prek003,g_rtib7_d[l_ac].prek004) #自訂欄位頁簽 

                WHERE prekent = g_enterprise AND prekdocno = g_rtia_m.rtiadocno
                  AND prekseq = g_rtib7_d_t.prekseq #項次 
                  
               #add-point:單身page7修改中 name="input.body7.m_update"
               {<point name="input.body7.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_rtib7_d[l_ac].* = g_rtib7_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "prek_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_rtib7_d[l_ac].* = g_rtib7_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "prek_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtia_m.rtiadocno
               LET gs_keys_bak[1] = g_rtiadocno_t
               LET gs_keys[2] = g_rtib7_d[g_detail_idx].prekseq
               LET gs_keys_bak[2] = g_rtib7_d_t.prekseq
               CALL artt600_update_b('prek_t',gs_keys,gs_keys_bak,"'7'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL artt600_prek_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_rtib7_d[g_detail_idx].prekseq = g_rtib7_d_t.prekseq 
                  ) THEN
                  LET gs_keys[01] = g_rtia_m.rtiadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_rtib7_d_t.prekseq
                  CALL artt600_key_update_b(gs_keys,'prek_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtia_m),util.JSON.stringify(g_rtib7_d_t)
               LET g_log2 = util.JSON.stringify(g_rtia_m),util.JSON.stringify(g_rtib7_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page7修改後 name="input.body7.a_update"
               {<point name="input.body7.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD preksite
            #add-point:BEFORE FIELD preksite name="input.b.page7.preksite"
            {<point name="input.b.page7.preksite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD preksite
            
            #add-point:AFTER FIELD preksite name="input.a.page7.preksite"
            {<point name="input.a.page7.preksite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE preksite
            #add-point:ON CHANGE preksite name="input.g.page7.preksite"
            {<point name="input.g.page7.preksite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD prekunit
            #add-point:BEFORE FIELD prekunit name="input.b.page7.prekunit"
            {<point name="input.b.page7.prekunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD prekunit
            
            #add-point:AFTER FIELD prekunit name="input.a.page7.prekunit"
            {<point name="input.a.page7.prekunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE prekunit
            #add-point:ON CHANGE prekunit name="input.g.page7.prekunit"
            {<point name="input.g.page7.prekunit" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD prekseq
            #add-point:BEFORE FIELD prekseq name="input.b.page7.prekseq"
            {<point name="input.b.page7.prekseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD prekseq
            
            #add-point:AFTER FIELD prekseq name="input.a.page7.prekseq"
            {<point name="input.a.page7.prekseq" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE prekseq
            #add-point:ON CHANGE prekseq name="input.g.page7.prekseq"
            {<point name="input.g.page7.prekseq" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD prek001
            #add-point:BEFORE FIELD prek001 name="input.b.page7.prek001"
            {<point name="input.b.page7.prek001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD prek001
            
            #add-point:AFTER FIELD prek001 name="input.a.page7.prek001"
            {<point name="input.a.page7.prek001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE prek001
            #add-point:ON CHANGE prek001 name="input.g.page7.prek001"
            {<point name="input.g.page7.prek001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD prek002
            #add-point:BEFORE FIELD prek002 name="input.b.page7.prek002"
            {<point name="input.b.page7.prek002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD prek002
            
            #add-point:AFTER FIELD prek002 name="input.a.page7.prek002"
            {<point name="input.a.page7.prek002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE prek002
            #add-point:ON CHANGE prek002 name="input.g.page7.prek002"
            {<point name="input.g.page7.prek002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD prek003
            #add-point:BEFORE FIELD prek003 name="input.b.page7.prek003"
            {<point name="input.b.page7.prek003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD prek003
            
            #add-point:AFTER FIELD prek003 name="input.a.page7.prek003"
            {<point name="input.a.page7.prek003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE prek003
            #add-point:ON CHANGE prek003 name="input.g.page7.prek003"
            {<point name="input.g.page7.prek003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD prek004
            #add-point:BEFORE FIELD prek004 name="input.b.page7.prek004"
            {<point name="input.b.page7.prek004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD prek004
            
            #add-point:AFTER FIELD prek004 name="input.a.page7.prek004"
            {<point name="input.a.page7.prek004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE prek004
            #add-point:ON CHANGE prek004 name="input.g.page7.prek004"
            {<point name="input.g.page7.prek004" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page7.preksite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD preksite
            #add-point:ON ACTION controlp INFIELD preksite name="input.c.page7.preksite"
            {<point name="input.c.page7.preksite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.prekunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD prekunit
            #add-point:ON ACTION controlp INFIELD prekunit name="input.c.page7.prekunit"
            {<point name="input.c.page7.prekunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.prekseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD prekseq
            #add-point:ON ACTION controlp INFIELD prekseq name="input.c.page7.prekseq"
            {<point name="input.c.page7.prekseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.prek001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD prek001
            #add-point:ON ACTION controlp INFIELD prek001 name="input.c.page7.prek001"
            {<point name="input.c.page7.prek001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.prek002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD prek002
            #add-point:ON ACTION controlp INFIELD prek002 name="input.c.page7.prek002"
            {<point name="input.c.page7.prek002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.prek003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD prek003
            #add-point:ON ACTION controlp INFIELD prek003 name="input.c.page7.prek003"
            {<point name="input.c.page7.prek003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.prek004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD prek004
            #add-point:ON ACTION controlp INFIELD prek004 name="input.c.page7.prek004"
            {<point name="input.c.page7.prek004" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page7 after_row name="input.body7.after_row"
            {<point name="input.body7.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_rtib7_d[l_ac].* = g_rtib7_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE artt600_bcl7
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL artt600_unlock_b("prek_t","'7'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page7 after_row2 name="input.body7.after_row2"
            {<point name="input.body7.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body7.after_input"
            {<point name="input.body7.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_rtib7_d[li_reproduce_target].* = g_rtib7_d[li_reproduce].*
 
               LET g_rtib7_d[li_reproduce_target].prekseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_rtib7_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_rtib7_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
      DISPLAY ARRAY g_rtib2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL artt600_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx = l_ac
            
            #add-point:page2, before row動作 name="input.body2.before_row"
            {<point name="input.body2.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL artt600_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為 name="input.body2.action"
         {<point name="input.body2.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_rtib3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL artt600_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            LET g_detail_idx = l_ac
            
            #add-point:page3, before row動作 name="input.body3.before_row"
            {<point name="input.body3.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            CALL artt600_idx_chk()
            LET g_current_page = 3
      
         #add-point:page3自定義行為 name="input.body3.action"
         {<point name="input.body3.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_rtib4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL artt600_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail4")
            LET g_detail_idx = l_ac
            
            #add-point:page4, before row動作 name="input.body4.before_row"
            {<point name="input.body4.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail4")
            CALL artt600_idx_chk()
            LET g_current_page = 4
      
         #add-point:page4自定義行為 name="input.body4.action"
         {<point name="input.body4.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_rtib5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL artt600_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail5")
            LET g_detail_idx = l_ac
            
            #add-point:page5, before row動作 name="input.body5.before_row"
            {<point name="input.body5.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail5")
            CALL artt600_idx_chk()
            LET g_current_page = 5
      
         #add-point:page5自定義行為 name="input.body5.action"
         {<point name="input.body5.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_rtib6_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL artt600_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail6")
            LET g_detail_idx = l_ac
            
            #add-point:page6, before row動作 name="input.body6.before_row"
            {<point name="input.body6.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail6")
            CALL artt600_idx_chk()
            LET g_current_page = 6
      
         #add-point:page6自定義行為 name="input.body6.action"
         {<point name="input.body6.action"/>}
         #end add-point
      
      END DISPLAY
 
 

{</section>}

{<section id="artt600.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'2',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue("'3',"))
         CALL DIALOG.setCurrentRow("s_detail4",g_idx_group.getValue("'4',"))
         CALL DIALOG.setCurrentRow("s_detail5",g_idx_group.getValue("'5',"))
         CALL DIALOG.setCurrentRow("s_detail6",g_idx_group.getValue("'6',"))
         CALL DIALOG.setCurrentRow("s_detail7",g_idx_group.getValue("'7',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD rtiadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD rtibsite
               WHEN "s_detail2"
                  NEXT FIELD rticseq
               WHEN "s_detail3"
                  NEXT FIELD xrcd007
               WHEN "s_detail4"
                  NEXT FIELD rtieseq
               WHEN "s_detail5"
                  NEXT FIELD rtiksite
               WHEN "s_detail6"
                  NEXT FIELD rtinsite
               WHEN "s_detail7"
                  NEXT FIELD preksite
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
         LET g_detail_idx_list[6] = 1
         LET g_detail_idx_list[7] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
         CALL g_curr_diag.setCurrentRow("s_detail6",1)
         CALL g_curr_diag.setCurrentRow("s_detail7",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
         LET g_detail_idx_list[6] = 1
         LET g_detail_idx_list[7] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
         CALL g_curr_diag.setCurrentRow("s_detail6",1)
         CALL g_curr_diag.setCurrentRow("s_detail7",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION

{</section>}

{<section id="artt600.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION artt600_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   {<point name="show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL artt600_b_fill() #單身填充
      CALL artt600_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL artt600_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_rtia_m_mask_o.* =  g_rtia_m.*
   CALL artt600_rtia_t_mask()
   LET g_rtia_m_mask_n.* =  g_rtia_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtia_m.rtiasite,g_rtia_m.rtiasite_desc,g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno,g_rtia_m.rtia001, 
       g_rtia_m.rtia001_desc,g_rtia_m.rtia002,g_rtia_m.rtia002_desc,g_rtia_m.rtia059,g_rtia_m.rtia060, 
       g_rtia_m.rtia004,g_rtia_m.rtia004_desc,g_rtia_m.rtia005,g_rtia_m.rtia005_desc,g_rtia_m.rtia006, 
       g_rtia_m.rtia048,g_rtia_m.rtia053,g_rtia_m.rtiastus,g_rtia_m.rtia007,g_rtia_m.rtia008,g_rtia_m.rtia009, 
       g_rtia_m.rtia009_desc,g_rtia_m.rtia041,g_rtia_m.rtia013,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia016, 
       g_rtia_m.rtia051,g_rtia_m.rtia010,g_rtia_m.rtia010_desc,g_rtia_m.rtia011,g_rtia_m.rtia011_desc, 
       g_rtia_m.rtia012,g_rtia_m.rtia012_desc,g_rtia_m.rtia017,g_rtia_m.rtia018,g_rtia_m.rtia018_desc, 
       g_rtia_m.rtia019,g_rtia_m.rtia020,g_rtia_m.rtia021,g_rtia_m.rtia022,g_rtia_m.rtia023,g_rtia_m.rtia024, 
       g_rtia_m.rtia024_desc,g_rtia_m.rtia025,g_rtia_m.rtia025_desc,g_rtia_m.rtia026,g_rtia_m.rtia027, 
       g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033,g_rtia_m.rtia034, 
       g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia036_desc,g_rtia_m.rtia037,g_rtia_m.rtia037_desc, 
       g_rtia_m.rtia038,g_rtia_m.rtia038_desc,g_rtia_m.rtia039,g_rtia_m.isaf009,g_rtia_m.isaf010,g_rtia_m.isaf044, 
       g_rtia_m.isaf202,g_rtia_m.isaf203,g_rtia_m.isaf204,g_rtia_m.isaf201,g_rtia_m.isaf207,g_rtia_m.rtiaownid, 
       g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamodid_desc, 
       g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid, 
       g_rtia_m.rtiapstid_desc,g_rtia_m.rtiapstdt,g_rtia_m.snum,g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3 

   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtia_m.rtiastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_rtib_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_rtib2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_rtib3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_rtib4_d.getLength()
      #add-point:show段單身reference name="show.body4.reference"
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_rtib5_d.getLength()
      #add-point:show段單身reference name="show.body5.reference"
      {<point name="show.body5.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_rtib6_d.getLength()
      #add-point:show段單身reference name="show.body6.reference"
      {<point name="show.body6.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_rtib7_d.getLength()
      #add-point:show段單身reference name="show.body7.reference"
      {<point name="show.body7.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL artt600_detail_show()
 
   #add-point:show段之後 name="show.after"
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="artt600.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION artt600_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   {<point name="detail_show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="artt600.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION artt600_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE l_newno     LIKE rtia_t.rtiadocno 
   DEFINE l_oldno     LIKE rtia_t.rtiadocno 
 
   DEFINE l_master    RECORD LIKE rtia_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE rtib_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE rtic_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE xrcd_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE rtie_t.* #此變數樣板目前無使用
 
   DEFINE l_detail5    RECORD LIKE rtik_t.* #此變數樣板目前無使用
 
   DEFINE l_detail6    RECORD LIKE rtin_t.* #此變數樣板目前無使用
 
   DEFINE l_detail7    RECORD LIKE prek_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   {<point name="reproduce.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_rtia_m.rtiadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_rtiadocno_t = g_rtia_m.rtiadocno
 
    
   LET g_rtia_m.rtiadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rtia_m.rtiaownid = g_user
      LET g_rtia_m.rtiaowndp = g_dept
      LET g_rtia_m.rtiacrtid = g_user
      LET g_rtia_m.rtiacrtdp = g_dept 
      LET g_rtia_m.rtiacrtdt = cl_get_current()
      LET g_rtia_m.rtiamodid = g_user
      LET g_rtia_m.rtiamoddt = cl_get_current()
      LET g_rtia_m.rtiastus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtia_m.rtiastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL artt600_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_rtia_m.* TO NULL
      INITIALIZE g_rtib_d TO NULL
      INITIALIZE g_rtib2_d TO NULL
      INITIALIZE g_rtib3_d TO NULL
      INITIALIZE g_rtib4_d TO NULL
      INITIALIZE g_rtib5_d TO NULL
      INITIALIZE g_rtib6_d TO NULL
      INITIALIZE g_rtib7_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL artt600_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt600_set_act_visible()   
   CALL artt600_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtiadocno_t = g_rtia_m.rtiadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtiaent = " ||g_enterprise|| " AND",
                      " rtiadocno = '", g_rtia_m.rtiadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artt600_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL artt600_idx_chk()
   
   LET g_data_owner = g_rtia_m.rtiaownid      
   LET g_data_dept  = g_rtia_m.rtiaowndp
   
   #功能已完成,通報訊息中心
   CALL artt600_msgcentre_notify('reproduce')
 
END FUNCTION

{</section>}

{<section id="artt600.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION artt600_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   {<point name="detail_reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE rtib_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE rtic_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE xrcd_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE rtie_t.* #此變數樣板目前無使用
 
   DEFINE l_detail5    RECORD LIKE rtik_t.* #此變數樣板目前無使用
 
   DEFINE l_detail6    RECORD LIKE rtin_t.* #此變數樣板目前無使用
 
   DEFINE l_detail7    RECORD LIKE prek_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   {<point name="detail_reproduce.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   {<point name="detail_reproduce.pre_function"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE artt600_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtib_t
    WHERE rtibent = g_enterprise AND rtibdocno = g_rtiadocno_t
 
    INTO TEMP artt600_detail
 
   #將key修正為調整後   
   UPDATE artt600_detail 
      #更新key欄位
      SET rtibdocno = g_rtia_m.rtiadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO rtib_t SELECT * FROM artt600_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt600_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtic_t 
    WHERE rticent = g_enterprise AND rticdocno = g_rtiadocno_t
 
    INTO TEMP artt600_detail
 
   #將key修正為調整後   
   UPDATE artt600_detail SET rticdocno = g_rtia_m.rtiadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   {<point name="detail_reproduce.body.table2.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtic_t SELECT * FROM artt600_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt600_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table3.b_insert"
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM xrcd_t 
    WHERE xrcdent = g_enterprise AND xrcddocno = g_rtiadocno_t
 
    INTO TEMP artt600_detail
 
   #將key修正為調整後   
   UPDATE artt600_detail SET xrcddocno = g_rtia_m.rtiadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table3.b_update"
   {<point name="detail_reproduce.body.table3.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO xrcd_t SELECT * FROM artt600_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table3.m_insert"
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt600_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table3.a_insert"
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table4.b_insert"
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtie_t 
    WHERE rtieent = g_enterprise AND rtiedocno = g_rtiadocno_t
 
    INTO TEMP artt600_detail
 
   #將key修正為調整後   
   UPDATE artt600_detail SET rtiedocno = g_rtia_m.rtiadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table4.b_update"
   {<point name="detail_reproduce.body.table4.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtie_t SELECT * FROM artt600_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table4.m_insert"
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt600_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table4.a_insert"
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table5.b_insert"
   {<point name="detail_reproduce.body.table5.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtik_t 
    WHERE rtikent = g_enterprise AND rtikdocno = g_rtiadocno_t
 
    INTO TEMP artt600_detail
 
   #將key修正為調整後   
   UPDATE artt600_detail SET rtikdocno = g_rtia_m.rtiadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table5.b_update"
   {<point name="detail_reproduce.body.table5.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtik_t SELECT * FROM artt600_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table5.m_insert"
   {<point name="detail_reproduce.body.table5.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt600_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table5.a_insert"
   {<point name="detail_reproduce.body.table5.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table6.b_insert"
   {<point name="detail_reproduce.body.table6.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtin_t 
    WHERE rtinent = g_enterprise AND rtindocno = g_rtiadocno_t
 
    INTO TEMP artt600_detail
 
   #將key修正為調整後   
   UPDATE artt600_detail SET rtindocno = g_rtia_m.rtiadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table6.b_update"
   {<point name="detail_reproduce.body.table6.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtin_t SELECT * FROM artt600_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table6.m_insert"
   {<point name="detail_reproduce.body.table6.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt600_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table6.a_insert"
   {<point name="detail_reproduce.body.table6.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table7.b_insert"
   {<point name="detail_reproduce.body.table7.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM prek_t 
    WHERE prekent = g_enterprise AND prekdocno = g_rtiadocno_t
 
    INTO TEMP artt600_detail
 
   #將key修正為調整後   
   UPDATE artt600_detail SET prekdocno = g_rtia_m.rtiadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table7.b_update"
   {<point name="detail_reproduce.body.table7.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO prek_t SELECT * FROM artt600_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table7.m_insert"
   {<point name="detail_reproduce.body.table7.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt600_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table7.a_insert"
   {<point name="detail_reproduce.body.table7.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_rtiadocno_t = g_rtia_m.rtiadocno
 
   
END FUNCTION

{</section>}

{<section id="artt600.delete" >}
#+ 資料刪除
PRIVATE FUNCTION artt600_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   {<point name="delete.pre_function"/>}
   #end add-point
   
   IF g_rtia_m.rtiadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN artt600_cl USING g_enterprise,g_rtia_m.rtiadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt600_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE artt600_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artt600_master_referesh USING g_rtia_m.rtiadocno INTO g_rtia_m.rtiasite,g_rtia_m.rtiadocdt, 
       g_rtia_m.rtiadocno,g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia059,g_rtia_m.rtia060,g_rtia_m.rtia004, 
       g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia048,g_rtia_m.rtia053,g_rtia_m.rtiastus,g_rtia_m.rtia007, 
       g_rtia_m.rtia008,g_rtia_m.rtia009,g_rtia_m.rtia041,g_rtia_m.rtia013,g_rtia_m.rtia014,g_rtia_m.rtia015, 
       g_rtia_m.rtia016,g_rtia_m.rtia051,g_rtia_m.rtia010,g_rtia_m.rtia011,g_rtia_m.rtia012,g_rtia_m.rtia017, 
       g_rtia_m.rtia018,g_rtia_m.rtia019,g_rtia_m.rtia020,g_rtia_m.rtia021,g_rtia_m.rtia022,g_rtia_m.rtia023, 
       g_rtia_m.rtia024,g_rtia_m.rtia025,g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029, 
       g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036, 
       g_rtia_m.rtia037,g_rtia_m.rtia038,g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid, 
       g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiacnfid,g_rtia_m.rtiamoddt, 
       g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt,g_rtia_m.rtiasite_desc,g_rtia_m.rtia002_desc, 
       g_rtia_m.rtia004_desc,g_rtia_m.rtia005_desc,g_rtia_m.rtia009_desc,g_rtia_m.rtia010_desc,g_rtia_m.rtia011_desc, 
       g_rtia_m.rtia012_desc,g_rtia_m.rtia018_desc,g_rtia_m.rtia024_desc,g_rtia_m.rtia025_desc,g_rtia_m.rtia036_desc, 
       g_rtia_m.rtia037_desc,g_rtia_m.rtia038_desc,g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiamodid_desc,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiapstid_desc 

   
   
   #檢查是否允許此動作
   IF NOT artt600_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtia_m_mask_o.* =  g_rtia_m.*
   CALL artt600_rtia_t_mask()
   LET g_rtia_m_mask_n.* =  g_rtia_m.*
   
   CALL artt600_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL artt600_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_rtiadocno_t = g_rtia_m.rtiadocno
 
 
      DELETE FROM rtia_t
       WHERE rtiaent = g_enterprise AND rtiadocno = g_rtia_m.rtiadocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_rtia_m.rtiadocno,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM rtib_t
       WHERE rtibent = g_enterprise AND rtibdocno = g_rtia_m.rtiadocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtib_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM rtic_t
       WHERE rticent = g_enterprise AND
             rticdocno = g_rtia_m.rtiadocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete3"
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM xrcd_t
       WHERE xrcdent = g_enterprise AND
             xrcddocno = g_rtia_m.rtiadocno
      #add-point:單身刪除中 name="delete.body.m_delete3"
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete3"
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete4"
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM rtie_t
       WHERE rtieent = g_enterprise AND
             rtiedocno = g_rtia_m.rtiadocno
      #add-point:單身刪除中 name="delete.body.m_delete4"
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete4"
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete5"
      {<point name="delete.body.b_delete5" mark="Y"/>}
      #end add-point
      DELETE FROM rtik_t
       WHERE rtikent = g_enterprise AND
             rtikdocno = g_rtia_m.rtiadocno
      #add-point:單身刪除中 name="delete.body.m_delete5"
      {<point name="delete.body.m_delete5"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtik_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete5"
      {<point name="delete.body.a_delete5"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete6"
      {<point name="delete.body.b_delete6" mark="Y"/>}
      #end add-point
      DELETE FROM rtin_t
       WHERE rtinent = g_enterprise AND
             rtindocno = g_rtia_m.rtiadocno
      #add-point:單身刪除中 name="delete.body.m_delete6"
      {<point name="delete.body.m_delete6"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtin_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete6"
      {<point name="delete.body.a_delete6"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete7"
      {<point name="delete.body.b_delete7" mark="Y"/>}
      #end add-point
      DELETE FROM prek_t
       WHERE prekent = g_enterprise AND
             prekdocno = g_rtia_m.rtiadocno
      #add-point:單身刪除中 name="delete.body.m_delete7"
      {<point name="delete.body.m_delete7"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "prek_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete7"
      {<point name="delete.body.a_delete7"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE artt600_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_rtib_d.clear() 
      CALL g_rtib2_d.clear()       
      CALL g_rtib3_d.clear()       
      CALL g_rtib4_d.clear()       
      CALL g_rtib5_d.clear()       
      CALL g_rtib6_d.clear()       
      CALL g_rtib7_d.clear()       
 
     
      CALL artt600_ui_browser_refresh()  
      #CALL artt600_ui_headershow()  
      #CALL artt600_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
      
      
      
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      {<point name="delete.lang.delete"/>}
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL artt600_browser_fill("")
         CALL artt600_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE artt600_cl
 
   #功能已完成,通報訊息中心
   CALL artt600_msgcentre_notify('delete')
    
END FUNCTION

{</section>}

{<section id="artt600.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION artt600_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   {<point name="b_fill.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   {<point name="b_fill.pre_function"/>}
   #end add-point
   
   #清空第一階單身
   CALL g_rtib_d.clear()
   CALL g_rtib2_d.clear()
   CALL g_rtib3_d.clear()
   CALL g_rtib4_d.clear()
   CALL g_rtib5_d.clear()
   CALL g_rtib6_d.clear()
   CALL g_rtib7_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF artt600_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      {<point name="b_fill.long_sql_if"/>}
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtibsite,rtibunit,rtiborga,rtibseq,rtib035,rtib001,rtib002,rtib003, 
             rtib004,rtib005,rtib006,rtib008,rtib009,rtib010,rtib012,rtib013,rtib014,rtib015,rtib016, 
             rtib018,rtib017,rtib019,rtib020,rtib021,rtib031,rtib022,rtib024,rtib025,rtib026,rtib027, 
             rtib032,rtib033,rtib028,rtib030,rtib039 ,t1.imaal003 ,t2.imaal004 ,t3.oocal003 ,t4.oocal003 , 
             t5.oocql004 ,t6.inayl003 ,t7.pcab003 FROM rtib_t",   
                     " INNER JOIN rtia_t ON rtiaent = " ||g_enterprise|| " AND rtiadocno = rtibdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=rtib004 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=rtib004 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent="||g_enterprise||" AND t3.oocal001=rtib013 AND t3.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent="||g_enterprise||" AND t4.oocal001=rtib018 AND t4.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent="||g_enterprise||" AND t5.oocql001='295' AND t5.oocql002=rtib024 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t6 ON t6.inaylent="||g_enterprise||" AND t6.inayl001=rtib025 AND t6.inayl002='"||g_dlang||"' ",
               " LEFT JOIN pcab_t t7 ON t7.pcabent="||g_enterprise||" AND t7.pcab001=rtib033  ",
 
                     " WHERE rtibent=? AND rtibdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtib_t.rtibseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt600_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR artt600_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_rtia_m.rtiadocno
                                               
      FOREACH b_fill_cs INTO g_rtib_d[l_ac].rtibsite,g_rtib_d[l_ac].rtibunit,g_rtib_d[l_ac].rtiborga, 
          g_rtib_d[l_ac].rtibseq,g_rtib_d[l_ac].rtib035,g_rtib_d[l_ac].rtib001,g_rtib_d[l_ac].rtib002, 
          g_rtib_d[l_ac].rtib003,g_rtib_d[l_ac].rtib004,g_rtib_d[l_ac].rtib005,g_rtib_d[l_ac].rtib006, 
          g_rtib_d[l_ac].rtib008,g_rtib_d[l_ac].rtib009,g_rtib_d[l_ac].rtib010,g_rtib_d[l_ac].rtib012, 
          g_rtib_d[l_ac].rtib013,g_rtib_d[l_ac].rtib014,g_rtib_d[l_ac].rtib015,g_rtib_d[l_ac].rtib016, 
          g_rtib_d[l_ac].rtib018,g_rtib_d[l_ac].rtib017,g_rtib_d[l_ac].rtib019,g_rtib_d[l_ac].rtib020, 
          g_rtib_d[l_ac].rtib021,g_rtib_d[l_ac].rtib031,g_rtib_d[l_ac].rtib022,g_rtib_d[l_ac].rtib024, 
          g_rtib_d[l_ac].rtib025,g_rtib_d[l_ac].rtib026,g_rtib_d[l_ac].rtib027,g_rtib_d[l_ac].rtib032, 
          g_rtib_d[l_ac].rtib033,g_rtib_d[l_ac].rtib028,g_rtib_d[l_ac].rtib030,g_rtib_d[l_ac].rtib039, 
          g_rtib_d[l_ac].rtib004_desc,g_rtib_d[l_ac].rtib004_desc_desc,g_rtib_d[l_ac].rtib013_desc,g_rtib_d[l_ac].rtib018_desc, 
          g_rtib_d[l_ac].rtib024_desc,g_rtib_d[l_ac].rtib025_desc,g_rtib_d[l_ac].rtib033_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF artt600_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         {<point name="b_fill.body2.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rticseq,rticseq1,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006, 
             rtic007,rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017, 
             rtic018,rtic020  FROM rtic_t",   
                     " INNER JOIN  rtia_t ON rtiaent = " ||g_enterprise|| " AND rtiadocno = rticdocno ",
 
                     "",
                     
                     
                     " WHERE rticent=? AND rticdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtic_t.rticseq,rtic_t.rticseq1"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt600_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR artt600_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_rtia_m.rtiadocno
                                               
      FOREACH b_fill_cs2 INTO g_rtib2_d[l_ac].rticseq,g_rtib2_d[l_ac].rticseq1,g_rtib2_d[l_ac].rtic001, 
          g_rtib2_d[l_ac].rtic002,g_rtib2_d[l_ac].rtic003,g_rtib2_d[l_ac].rtic004,g_rtib2_d[l_ac].rtic005, 
          g_rtib2_d[l_ac].rtic006,g_rtib2_d[l_ac].rtic007,g_rtib2_d[l_ac].rtic008,g_rtib2_d[l_ac].rtic009, 
          g_rtib2_d[l_ac].rtic010,g_rtib2_d[l_ac].rtic011,g_rtib2_d[l_ac].rtic012,g_rtib2_d[l_ac].rtic013, 
          g_rtib2_d[l_ac].rtic014,g_rtib2_d[l_ac].rtic015,g_rtib2_d[l_ac].rtic016,g_rtib2_d[l_ac].rtic017, 
          g_rtib2_d[l_ac].rtic018,g_rtib2_d[l_ac].rtic020
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF artt600_fill_chk(3) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body3.long_sql_if"
         {<point name="b_fill.body3.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT xrcd007,xrcdld,xrcdseq,xrcdseq2,xrcd002,xrcd003,xrcd006,xrcd004, 
             xrcd104  FROM xrcd_t",   
                     " INNER JOIN  rtia_t ON rtiaent = " ||g_enterprise|| " AND rtiadocno = xrcddocno ",
 
                     "",
                     
                     
                     " WHERE xrcdent=? AND xrcddocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body3.fill_sql"
         {<point name="b_fill.body3.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY xrcd_t.xrcdld,xrcd_t.xrcdseq,xrcd_t.xrcdseq2,xrcd_t.xrcd007"
         
         #add-point:單身填充控制 name="b_fill.sql3"
         {<point name="b_fill.sql3"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt600_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR artt600_pb3
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_rtia_m.rtiadocno
                                               
      FOREACH b_fill_cs3 INTO g_rtib3_d[l_ac].xrcd007,g_rtib3_d[l_ac].xrcdld,g_rtib3_d[l_ac].xrcdseq, 
          g_rtib3_d[l_ac].xrcdseq2,g_rtib3_d[l_ac].xrcd002,g_rtib3_d[l_ac].xrcd003,g_rtib3_d[l_ac].xrcd006, 
          g_rtib3_d[l_ac].xrcd004,g_rtib3_d[l_ac].xrcd104
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill3.fill"
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF artt600_fill_chk(4) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body4.long_sql_if"
         {<point name="b_fill.body4.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtieseq,rtieseq1,rtie001,rtie002,rtie006 ,t8.ooial003 FROM rtie_t", 
                
                     " INNER JOIN  rtia_t ON rtiaent = " ||g_enterprise|| " AND rtiadocno = rtiedocno ",
 
                     "",
                     
                                    " LEFT JOIN ooial_t t8 ON t8.ooialent="||g_enterprise||" AND t8.ooial001=rtie002 AND t8.ooial002='"||g_dlang||"' ",
 
                     " WHERE rtieent=? AND rtiedocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body4.fill_sql"
         {<point name="b_fill.body4.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtie_t.rtieseq,rtie_t.rtieseq1"
         
         #add-point:單身填充控制 name="b_fill.sql4"
         {<point name="b_fill.sql4"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt600_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR artt600_pb4
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_enterprise,g_rtia_m.rtiadocno
                                               
      FOREACH b_fill_cs4 INTO g_rtib4_d[l_ac].rtieseq,g_rtib4_d[l_ac].rtieseq1,g_rtib4_d[l_ac].rtie001, 
          g_rtib4_d[l_ac].rtie002,g_rtib4_d[l_ac].rtie006,g_rtib4_d[l_ac].rtie002_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill4.fill"
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF artt600_fill_chk(5) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body5.long_sql_if"
         {<point name="b_fill.body5.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtiksite,rtikunit,rtikorg,rtikseq,rtik001,rtik002,rtik003,rtik004, 
             rtik005,rtik006,rtik007,rtik013,rtik012,rtik008,rtik009,rtik010,rtik011,rtik014,rtik015, 
             rtik016,rtik017,rtik018,rtik019,rtik020,rtik021,rtik022,rtik023 ,t9.prbo005 ,t10.oocal003 , 
             t11.inayl003 ,t12.inab003 FROM rtik_t",   
                     " INNER JOIN  rtia_t ON rtiaent = " ||g_enterprise|| " AND rtiadocno = rtikdocno ",
 
                     "",
                     
                                    " LEFT JOIN prbo_t t9 ON t9.prboent="||g_enterprise||" AND t9.prbo004=rtik003  ",
               " LEFT JOIN oocal_t t10 ON t10.oocalent="||g_enterprise||" AND t10.oocal001=rtik013 AND t10.oocal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t11 ON t11.inaylent="||g_enterprise||" AND t11.inayl001=rtik019 AND t11.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t12 ON t12.inabent="||g_enterprise||" AND t12.inabsite=rtiksite AND t12.inab001=rtik019 AND t12.inab002=rtik020  ",
 
                     " WHERE rtikent=? AND rtikdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body5.fill_sql"
         {<point name="b_fill.body5.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table5) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table5 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtik_t.rtikseq"
         
         #add-point:單身填充控制 name="b_fill.sql5"
         {<point name="b_fill.sql5"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt600_pb5 FROM g_sql
         DECLARE b_fill_cs5 CURSOR FOR artt600_pb5
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs5 USING g_enterprise,g_rtia_m.rtiadocno
                                               
      FOREACH b_fill_cs5 INTO g_rtib5_d[l_ac].rtiksite,g_rtib5_d[l_ac].rtikunit,g_rtib5_d[l_ac].rtikorg, 
          g_rtib5_d[l_ac].rtikseq,g_rtib5_d[l_ac].rtik001,g_rtib5_d[l_ac].rtik002,g_rtib5_d[l_ac].rtik003, 
          g_rtib5_d[l_ac].rtik004,g_rtib5_d[l_ac].rtik005,g_rtib5_d[l_ac].rtik006,g_rtib5_d[l_ac].rtik007, 
          g_rtib5_d[l_ac].rtik013,g_rtib5_d[l_ac].rtik012,g_rtib5_d[l_ac].rtik008,g_rtib5_d[l_ac].rtik009, 
          g_rtib5_d[l_ac].rtik010,g_rtib5_d[l_ac].rtik011,g_rtib5_d[l_ac].rtik014,g_rtib5_d[l_ac].rtik015, 
          g_rtib5_d[l_ac].rtik016,g_rtib5_d[l_ac].rtik017,g_rtib5_d[l_ac].rtik018,g_rtib5_d[l_ac].rtik019, 
          g_rtib5_d[l_ac].rtik020,g_rtib5_d[l_ac].rtik021,g_rtib5_d[l_ac].rtik022,g_rtib5_d[l_ac].rtik023, 
          g_rtib5_d[l_ac].rtik003_desc,g_rtib5_d[l_ac].rtik013_desc,g_rtib5_d[l_ac].rtik019_desc,g_rtib5_d[l_ac].rtik020_desc 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill5.fill"
         {<point name="b_fill5.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF artt600_fill_chk(6) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body6.long_sql_if"
         {<point name="b_fill.body6.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtinsite,rtinseq,rtinseq1,rtin001,rtin002,rtin003,rtin004,rtin005, 
             rtin006,rtin007,rtin008,rtin009,rtin010  FROM rtin_t",   
                     " INNER JOIN  rtia_t ON rtiaent = " ||g_enterprise|| " AND rtiadocno = rtindocno ",
 
                     "",
                     
                     
                     " WHERE rtinent=? AND rtindocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body6.fill_sql"
         {<point name="b_fill.body6.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table6) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table6 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtin_t.rtinseq,rtin_t.rtinseq1"
         
         #add-point:單身填充控制 name="b_fill.sql6"
         {<point name="b_fill.sql6"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt600_pb6 FROM g_sql
         DECLARE b_fill_cs6 CURSOR FOR artt600_pb6
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs6 USING g_enterprise,g_rtia_m.rtiadocno
                                               
      FOREACH b_fill_cs6 INTO g_rtib6_d[l_ac].rtinsite,g_rtib6_d[l_ac].rtinseq,g_rtib6_d[l_ac].rtinseq1, 
          g_rtib6_d[l_ac].rtin001,g_rtib6_d[l_ac].rtin002,g_rtib6_d[l_ac].rtin003,g_rtib6_d[l_ac].rtin004, 
          g_rtib6_d[l_ac].rtin005,g_rtib6_d[l_ac].rtin006,g_rtib6_d[l_ac].rtin007,g_rtib6_d[l_ac].rtin008, 
          g_rtib6_d[l_ac].rtin009,g_rtib6_d[l_ac].rtin010
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill6.fill"
         {<point name="b_fill6.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF artt600_fill_chk(7) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body7.long_sql_if"
         {<point name="b_fill.body7.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT preksite,prekunit,prekseq,prek001,prek002,prek003,prek004  FROM prek_t", 
                
                     " INNER JOIN  rtia_t ON rtiaent = " ||g_enterprise|| " AND rtiadocno = prekdocno ",
 
                     "",
                     
                     
                     " WHERE prekent=? AND prekdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body7.fill_sql"
         {<point name="b_fill.body7.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table7) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table7 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY prek_t.prekseq"
         
         #add-point:單身填充控制 name="b_fill.sql7"
         {<point name="b_fill.sql7"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt600_pb7 FROM g_sql
         DECLARE b_fill_cs7 CURSOR FOR artt600_pb7
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs7 USING g_enterprise,g_rtia_m.rtiadocno
                                               
      FOREACH b_fill_cs7 INTO g_rtib7_d[l_ac].preksite,g_rtib7_d[l_ac].prekunit,g_rtib7_d[l_ac].prekseq, 
          g_rtib7_d[l_ac].prek001,g_rtib7_d[l_ac].prek002,g_rtib7_d[l_ac].prek003,g_rtib7_d[l_ac].prek004 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill7.fill"
         {<point name="b_fill7.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_rtib_d.deleteElement(g_rtib_d.getLength())
   CALL g_rtib2_d.deleteElement(g_rtib2_d.getLength())
   CALL g_rtib3_d.deleteElement(g_rtib3_d.getLength())
   CALL g_rtib4_d.deleteElement(g_rtib4_d.getLength())
   CALL g_rtib5_d.deleteElement(g_rtib5_d.getLength())
   CALL g_rtib6_d.deleteElement(g_rtib6_d.getLength())
   CALL g_rtib7_d.deleteElement(g_rtib7_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE artt600_pb
   FREE artt600_pb2
 
   FREE artt600_pb3
 
   FREE artt600_pb4
 
   FREE artt600_pb5
 
   FREE artt600_pb6
 
   FREE artt600_pb7
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_rtib_d.getLength()
      LET g_rtib_d_mask_o[l_ac].* =  g_rtib_d[l_ac].*
      CALL artt600_rtib_t_mask()
      LET g_rtib_d_mask_n[l_ac].* =  g_rtib_d[l_ac].*
   END FOR
   
   LET g_rtib2_d_mask_o.* =  g_rtib2_d.*
   FOR l_ac = 1 TO g_rtib2_d.getLength()
      LET g_rtib2_d_mask_o[l_ac].* =  g_rtib2_d[l_ac].*
      CALL artt600_rtic_t_mask()
      LET g_rtib2_d_mask_n[l_ac].* =  g_rtib2_d[l_ac].*
   END FOR
   LET g_rtib3_d_mask_o.* =  g_rtib3_d.*
   FOR l_ac = 1 TO g_rtib3_d.getLength()
      LET g_rtib3_d_mask_o[l_ac].* =  g_rtib3_d[l_ac].*
      CALL artt600_xrcd_t_mask()
      LET g_rtib3_d_mask_n[l_ac].* =  g_rtib3_d[l_ac].*
   END FOR
   LET g_rtib4_d_mask_o.* =  g_rtib4_d.*
   FOR l_ac = 1 TO g_rtib4_d.getLength()
      LET g_rtib4_d_mask_o[l_ac].* =  g_rtib4_d[l_ac].*
      CALL artt600_rtie_t_mask()
      LET g_rtib4_d_mask_n[l_ac].* =  g_rtib4_d[l_ac].*
   END FOR
   LET g_rtib5_d_mask_o.* =  g_rtib5_d.*
   FOR l_ac = 1 TO g_rtib5_d.getLength()
      LET g_rtib5_d_mask_o[l_ac].* =  g_rtib5_d[l_ac].*
      CALL artt600_rtik_t_mask()
      LET g_rtib5_d_mask_n[l_ac].* =  g_rtib5_d[l_ac].*
   END FOR
   LET g_rtib6_d_mask_o.* =  g_rtib6_d.*
   FOR l_ac = 1 TO g_rtib6_d.getLength()
      LET g_rtib6_d_mask_o[l_ac].* =  g_rtib6_d[l_ac].*
      CALL artt600_rtin_t_mask()
      LET g_rtib6_d_mask_n[l_ac].* =  g_rtib6_d[l_ac].*
   END FOR
   LET g_rtib7_d_mask_o.* =  g_rtib7_d.*
   FOR l_ac = 1 TO g_rtib7_d.getLength()
      LET g_rtib7_d_mask_o[l_ac].* =  g_rtib7_d[l_ac].*
      CALL artt600_prek_t_mask()
      LET g_rtib7_d_mask_n[l_ac].* =  g_rtib7_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION

{</section>}

{<section id="artt600.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION artt600_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   {<point name="delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   {<point name="delete_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   {<point name="delete_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM rtib_t
       WHERE rtibent = g_enterprise AND
         rtibdocno = ps_keys_bak[1] AND rtibseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtib_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM rtic_t
       WHERE rticent = g_enterprise AND
             rticdocno = ps_keys_bak[1] AND rticseq = ps_keys_bak[2] AND rticseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_rtib2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete3"
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM xrcd_t
       WHERE xrcdent = g_enterprise AND
             xrcddocno = ps_keys_bak[1] AND xrcdld = ps_keys_bak[2] AND xrcdseq = ps_keys_bak[3] AND xrcdseq2 = ps_keys_bak[4] AND xrcd007 = ps_keys_bak[5]
      #add-point:delete_b段刪除中 name="delete_b.m_delete3"
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_rtib3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete3"
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete4"
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM rtie_t
       WHERE rtieent = g_enterprise AND
             rtiedocno = ps_keys_bak[1] AND rtieseq = ps_keys_bak[2] AND rtieseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete4"
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_rtib4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete4"
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete5"
      {<point name="delete_b.b_delete5" mark="Y"/>}
      #end add-point    
      DELETE FROM rtik_t
       WHERE rtikent = g_enterprise AND
             rtikdocno = ps_keys_bak[1] AND rtikseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete5"
      {<point name="delete_b.m_delete5"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtik_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_rtib5_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete5"
      {<point name="delete_b.a_delete5"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete6"
      {<point name="delete_b.b_delete6" mark="Y"/>}
      #end add-point    
      DELETE FROM rtin_t
       WHERE rtinent = g_enterprise AND
             rtindocno = ps_keys_bak[1] AND rtinseq = ps_keys_bak[2] AND rtinseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete6"
      {<point name="delete_b.m_delete6"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtin_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_rtib6_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete6"
      {<point name="delete_b.a_delete6"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete7"
      {<point name="delete_b.b_delete7" mark="Y"/>}
      #end add-point    
      DELETE FROM prek_t
       WHERE prekent = g_enterprise AND
             prekdocno = ps_keys_bak[1] AND prekseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete7"
      {<point name="delete_b.m_delete7"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "prek_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_rtib7_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete7"
      {<point name="delete_b.a_delete7"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="artt600.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION artt600_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   {<point name="insert_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   {<point name="insert_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   {<point name="insert_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO rtib_t
                  (rtibent,
                   rtibdocno,
                   rtibseq
                   ,rtibsite,rtibunit,rtiborga,rtib035,rtib001,rtib002,rtib003,rtib004,rtib005,rtib006,rtib008,rtib009,rtib010,rtib012,rtib013,rtib014,rtib015,rtib016,rtib018,rtib017,rtib019,rtib020,rtib021,rtib031,rtib022,rtib024,rtib025,rtib026,rtib027,rtib032,rtib033,rtib028,rtib030,rtib039) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtib_d[g_detail_idx].rtibsite,g_rtib_d[g_detail_idx].rtibunit,g_rtib_d[g_detail_idx].rtiborga, 
                       g_rtib_d[g_detail_idx].rtib035,g_rtib_d[g_detail_idx].rtib001,g_rtib_d[g_detail_idx].rtib002, 
                       g_rtib_d[g_detail_idx].rtib003,g_rtib_d[g_detail_idx].rtib004,g_rtib_d[g_detail_idx].rtib005, 
                       g_rtib_d[g_detail_idx].rtib006,g_rtib_d[g_detail_idx].rtib008,g_rtib_d[g_detail_idx].rtib009, 
                       g_rtib_d[g_detail_idx].rtib010,g_rtib_d[g_detail_idx].rtib012,g_rtib_d[g_detail_idx].rtib013, 
                       g_rtib_d[g_detail_idx].rtib014,g_rtib_d[g_detail_idx].rtib015,g_rtib_d[g_detail_idx].rtib016, 
                       g_rtib_d[g_detail_idx].rtib018,g_rtib_d[g_detail_idx].rtib017,g_rtib_d[g_detail_idx].rtib019, 
                       g_rtib_d[g_detail_idx].rtib020,g_rtib_d[g_detail_idx].rtib021,g_rtib_d[g_detail_idx].rtib031, 
                       g_rtib_d[g_detail_idx].rtib022,g_rtib_d[g_detail_idx].rtib024,g_rtib_d[g_detail_idx].rtib025, 
                       g_rtib_d[g_detail_idx].rtib026,g_rtib_d[g_detail_idx].rtib027,g_rtib_d[g_detail_idx].rtib032, 
                       g_rtib_d[g_detail_idx].rtib033,g_rtib_d[g_detail_idx].rtib028,g_rtib_d[g_detail_idx].rtib030, 
                       g_rtib_d[g_detail_idx].rtib039)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtib_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtib_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO rtic_t
                  (rticent,
                   rticdocno,
                   rticseq,rticseq1
                   ,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007,rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic020) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_rtib2_d[g_detail_idx].rtic001,g_rtib2_d[g_detail_idx].rtic002,g_rtib2_d[g_detail_idx].rtic003, 
                       g_rtib2_d[g_detail_idx].rtic004,g_rtib2_d[g_detail_idx].rtic005,g_rtib2_d[g_detail_idx].rtic006, 
                       g_rtib2_d[g_detail_idx].rtic007,g_rtib2_d[g_detail_idx].rtic008,g_rtib2_d[g_detail_idx].rtic009, 
                       g_rtib2_d[g_detail_idx].rtic010,g_rtib2_d[g_detail_idx].rtic011,g_rtib2_d[g_detail_idx].rtic012, 
                       g_rtib2_d[g_detail_idx].rtic013,g_rtib2_d[g_detail_idx].rtic014,g_rtib2_d[g_detail_idx].rtic015, 
                       g_rtib2_d[g_detail_idx].rtic016,g_rtib2_d[g_detail_idx].rtic017,g_rtib2_d[g_detail_idx].rtic018, 
                       g_rtib2_d[g_detail_idx].rtic020)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_rtib2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert3"
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO xrcd_t
                  (xrcdent,
                   xrcddocno,
                   xrcdld,xrcdseq,xrcdseq2,xrcd007
                   ,xrcd002,xrcd003,xrcd006,xrcd004,xrcd104) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
                   ,g_rtib3_d[g_detail_idx].xrcd002,g_rtib3_d[g_detail_idx].xrcd003,g_rtib3_d[g_detail_idx].xrcd006, 
                       g_rtib3_d[g_detail_idx].xrcd004,g_rtib3_d[g_detail_idx].xrcd104)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert3"
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_rtib3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert3"
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert4"
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO rtie_t
                  (rtieent,
                   rtiedocno,
                   rtieseq,rtieseq1
                   ,rtie001,rtie002,rtie006) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_rtib4_d[g_detail_idx].rtie001,g_rtib4_d[g_detail_idx].rtie002,g_rtib4_d[g_detail_idx].rtie006) 

      #add-point:insert_b段資料新增中 name="insert_b.m_insert4"
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_rtib4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert4"
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert5"
      {<point name="insert_b.before_insert5" mark="Y"/>}
      #end add-point 
      INSERT INTO rtik_t
                  (rtikent,
                   rtikdocno,
                   rtikseq
                   ,rtiksite,rtikunit,rtikorg,rtik001,rtik002,rtik003,rtik004,rtik005,rtik006,rtik007,rtik013,rtik012,rtik008,rtik009,rtik010,rtik011,rtik014,rtik015,rtik016,rtik017,rtik018,rtik019,rtik020,rtik021,rtik022,rtik023) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtib5_d[g_detail_idx].rtiksite,g_rtib5_d[g_detail_idx].rtikunit,g_rtib5_d[g_detail_idx].rtikorg, 
                       g_rtib5_d[g_detail_idx].rtik001,g_rtib5_d[g_detail_idx].rtik002,g_rtib5_d[g_detail_idx].rtik003, 
                       g_rtib5_d[g_detail_idx].rtik004,g_rtib5_d[g_detail_idx].rtik005,g_rtib5_d[g_detail_idx].rtik006, 
                       g_rtib5_d[g_detail_idx].rtik007,g_rtib5_d[g_detail_idx].rtik013,g_rtib5_d[g_detail_idx].rtik012, 
                       g_rtib5_d[g_detail_idx].rtik008,g_rtib5_d[g_detail_idx].rtik009,g_rtib5_d[g_detail_idx].rtik010, 
                       g_rtib5_d[g_detail_idx].rtik011,g_rtib5_d[g_detail_idx].rtik014,g_rtib5_d[g_detail_idx].rtik015, 
                       g_rtib5_d[g_detail_idx].rtik016,g_rtib5_d[g_detail_idx].rtik017,g_rtib5_d[g_detail_idx].rtik018, 
                       g_rtib5_d[g_detail_idx].rtik019,g_rtib5_d[g_detail_idx].rtik020,g_rtib5_d[g_detail_idx].rtik021, 
                       g_rtib5_d[g_detail_idx].rtik022,g_rtib5_d[g_detail_idx].rtik023)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert5"
      {<point name="insert_b.m_insert5"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtik_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_rtib5_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert5"
      {<point name="insert_b.after_insert5"/>}
      #end add-point
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert6"
      {<point name="insert_b.before_insert6" mark="Y"/>}
      #end add-point 
      INSERT INTO rtin_t
                  (rtinent,
                   rtindocno,
                   rtinseq,rtinseq1
                   ,rtinsite,rtin001,rtin002,rtin003,rtin004,rtin005,rtin006,rtin007,rtin008,rtin009,rtin010) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_rtib6_d[g_detail_idx].rtinsite,g_rtib6_d[g_detail_idx].rtin001,g_rtib6_d[g_detail_idx].rtin002, 
                       g_rtib6_d[g_detail_idx].rtin003,g_rtib6_d[g_detail_idx].rtin004,g_rtib6_d[g_detail_idx].rtin005, 
                       g_rtib6_d[g_detail_idx].rtin006,g_rtib6_d[g_detail_idx].rtin007,g_rtib6_d[g_detail_idx].rtin008, 
                       g_rtib6_d[g_detail_idx].rtin009,g_rtib6_d[g_detail_idx].rtin010)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert6"
      {<point name="insert_b.m_insert6"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtin_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_rtib6_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert6"
      {<point name="insert_b.after_insert6"/>}
      #end add-point
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert7"
      {<point name="insert_b.before_insert7" mark="Y"/>}
      #end add-point 
      INSERT INTO prek_t
                  (prekent,
                   prekdocno,
                   prekseq
                   ,preksite,prekunit,prek001,prek002,prek003,prek004) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtib7_d[g_detail_idx].preksite,g_rtib7_d[g_detail_idx].prekunit,g_rtib7_d[g_detail_idx].prek001, 
                       g_rtib7_d[g_detail_idx].prek002,g_rtib7_d[g_detail_idx].prek003,g_rtib7_d[g_detail_idx].prek004) 

      #add-point:insert_b段資料新增中 name="insert_b.m_insert7"
      {<point name="insert_b.m_insert7"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "prek_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_rtib7_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert7"
      {<point name="insert_b.after_insert7"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION

{</section>}

{<section id="artt600.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION artt600_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   {<point name="update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   {<point name="update_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   {<point name="update_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtib_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL artt600_rtib_t_mask_restore('restore_mask_o')
               
      UPDATE rtib_t 
         SET (rtibdocno,
              rtibseq
              ,rtibsite,rtibunit,rtiborga,rtib035,rtib001,rtib002,rtib003,rtib004,rtib005,rtib006,rtib008,rtib009,rtib010,rtib012,rtib013,rtib014,rtib015,rtib016,rtib018,rtib017,rtib019,rtib020,rtib021,rtib031,rtib022,rtib024,rtib025,rtib026,rtib027,rtib032,rtib033,rtib028,rtib030,rtib039) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtib_d[g_detail_idx].rtibsite,g_rtib_d[g_detail_idx].rtibunit,g_rtib_d[g_detail_idx].rtiborga, 
                  g_rtib_d[g_detail_idx].rtib035,g_rtib_d[g_detail_idx].rtib001,g_rtib_d[g_detail_idx].rtib002, 
                  g_rtib_d[g_detail_idx].rtib003,g_rtib_d[g_detail_idx].rtib004,g_rtib_d[g_detail_idx].rtib005, 
                  g_rtib_d[g_detail_idx].rtib006,g_rtib_d[g_detail_idx].rtib008,g_rtib_d[g_detail_idx].rtib009, 
                  g_rtib_d[g_detail_idx].rtib010,g_rtib_d[g_detail_idx].rtib012,g_rtib_d[g_detail_idx].rtib013, 
                  g_rtib_d[g_detail_idx].rtib014,g_rtib_d[g_detail_idx].rtib015,g_rtib_d[g_detail_idx].rtib016, 
                  g_rtib_d[g_detail_idx].rtib018,g_rtib_d[g_detail_idx].rtib017,g_rtib_d[g_detail_idx].rtib019, 
                  g_rtib_d[g_detail_idx].rtib020,g_rtib_d[g_detail_idx].rtib021,g_rtib_d[g_detail_idx].rtib031, 
                  g_rtib_d[g_detail_idx].rtib022,g_rtib_d[g_detail_idx].rtib024,g_rtib_d[g_detail_idx].rtib025, 
                  g_rtib_d[g_detail_idx].rtib026,g_rtib_d[g_detail_idx].rtib027,g_rtib_d[g_detail_idx].rtib032, 
                  g_rtib_d[g_detail_idx].rtib033,g_rtib_d[g_detail_idx].rtib028,g_rtib_d[g_detail_idx].rtib030, 
                  g_rtib_d[g_detail_idx].rtib039) 
         WHERE rtibent = g_enterprise AND rtibdocno = ps_keys_bak[1] AND rtibseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtib_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtib_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt600_rtib_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtic_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL artt600_rtic_t_mask_restore('restore_mask_o')
               
      UPDATE rtic_t 
         SET (rticdocno,
              rticseq,rticseq1
              ,rtic001,rtic002,rtic003,rtic004,rtic005,rtic006,rtic007,rtic008,rtic009,rtic010,rtic011,rtic012,rtic013,rtic014,rtic015,rtic016,rtic017,rtic018,rtic020) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_rtib2_d[g_detail_idx].rtic001,g_rtib2_d[g_detail_idx].rtic002,g_rtib2_d[g_detail_idx].rtic003, 
                  g_rtib2_d[g_detail_idx].rtic004,g_rtib2_d[g_detail_idx].rtic005,g_rtib2_d[g_detail_idx].rtic006, 
                  g_rtib2_d[g_detail_idx].rtic007,g_rtib2_d[g_detail_idx].rtic008,g_rtib2_d[g_detail_idx].rtic009, 
                  g_rtib2_d[g_detail_idx].rtic010,g_rtib2_d[g_detail_idx].rtic011,g_rtib2_d[g_detail_idx].rtic012, 
                  g_rtib2_d[g_detail_idx].rtic013,g_rtib2_d[g_detail_idx].rtic014,g_rtib2_d[g_detail_idx].rtic015, 
                  g_rtib2_d[g_detail_idx].rtic016,g_rtib2_d[g_detail_idx].rtic017,g_rtib2_d[g_detail_idx].rtic018, 
                  g_rtib2_d[g_detail_idx].rtic020) 
         WHERE rticent = g_enterprise AND rticdocno = ps_keys_bak[1] AND rticseq = ps_keys_bak[2] AND rticseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update2"
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtic_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtic_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt600_rtic_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "xrcd_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update3"
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL artt600_xrcd_t_mask_restore('restore_mask_o')
               
      UPDATE xrcd_t 
         SET (xrcddocno,
              xrcdld,xrcdseq,xrcdseq2,xrcd007
              ,xrcd002,xrcd003,xrcd006,xrcd004,xrcd104) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
              ,g_rtib3_d[g_detail_idx].xrcd002,g_rtib3_d[g_detail_idx].xrcd003,g_rtib3_d[g_detail_idx].xrcd006, 
                  g_rtib3_d[g_detail_idx].xrcd004,g_rtib3_d[g_detail_idx].xrcd104) 
         WHERE xrcdent = g_enterprise AND xrcddocno = ps_keys_bak[1] AND xrcdld = ps_keys_bak[2] AND xrcdseq = ps_keys_bak[3] AND xrcdseq2 = ps_keys_bak[4] AND xrcd007 = ps_keys_bak[5]
      #add-point:update_b段修改中 name="update_b.m_update3"
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xrcd_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "xrcd_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt600_xrcd_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update3"
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtie_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update4"
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL artt600_rtie_t_mask_restore('restore_mask_o')
               
      UPDATE rtie_t 
         SET (rtiedocno,
              rtieseq,rtieseq1
              ,rtie001,rtie002,rtie006) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_rtib4_d[g_detail_idx].rtie001,g_rtib4_d[g_detail_idx].rtie002,g_rtib4_d[g_detail_idx].rtie006)  

         WHERE rtieent = g_enterprise AND rtiedocno = ps_keys_bak[1] AND rtieseq = ps_keys_bak[2] AND rtieseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update4"
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtie_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtie_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt600_rtie_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update4"
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtik_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update5"
      {<point name="update_b.before_update5" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL artt600_rtik_t_mask_restore('restore_mask_o')
               
      UPDATE rtik_t 
         SET (rtikdocno,
              rtikseq
              ,rtiksite,rtikunit,rtikorg,rtik001,rtik002,rtik003,rtik004,rtik005,rtik006,rtik007,rtik013,rtik012,rtik008,rtik009,rtik010,rtik011,rtik014,rtik015,rtik016,rtik017,rtik018,rtik019,rtik020,rtik021,rtik022,rtik023) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtib5_d[g_detail_idx].rtiksite,g_rtib5_d[g_detail_idx].rtikunit,g_rtib5_d[g_detail_idx].rtikorg, 
                  g_rtib5_d[g_detail_idx].rtik001,g_rtib5_d[g_detail_idx].rtik002,g_rtib5_d[g_detail_idx].rtik003, 
                  g_rtib5_d[g_detail_idx].rtik004,g_rtib5_d[g_detail_idx].rtik005,g_rtib5_d[g_detail_idx].rtik006, 
                  g_rtib5_d[g_detail_idx].rtik007,g_rtib5_d[g_detail_idx].rtik013,g_rtib5_d[g_detail_idx].rtik012, 
                  g_rtib5_d[g_detail_idx].rtik008,g_rtib5_d[g_detail_idx].rtik009,g_rtib5_d[g_detail_idx].rtik010, 
                  g_rtib5_d[g_detail_idx].rtik011,g_rtib5_d[g_detail_idx].rtik014,g_rtib5_d[g_detail_idx].rtik015, 
                  g_rtib5_d[g_detail_idx].rtik016,g_rtib5_d[g_detail_idx].rtik017,g_rtib5_d[g_detail_idx].rtik018, 
                  g_rtib5_d[g_detail_idx].rtik019,g_rtib5_d[g_detail_idx].rtik020,g_rtib5_d[g_detail_idx].rtik021, 
                  g_rtib5_d[g_detail_idx].rtik022,g_rtib5_d[g_detail_idx].rtik023) 
         WHERE rtikent = g_enterprise AND rtikdocno = ps_keys_bak[1] AND rtikseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update5"
      {<point name="update_b.m_update5"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtik_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtik_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt600_rtik_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update5"
      {<point name="update_b.after_update5"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtin_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update6"
      {<point name="update_b.before_update6" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL artt600_rtin_t_mask_restore('restore_mask_o')
               
      UPDATE rtin_t 
         SET (rtindocno,
              rtinseq,rtinseq1
              ,rtinsite,rtin001,rtin002,rtin003,rtin004,rtin005,rtin006,rtin007,rtin008,rtin009,rtin010) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_rtib6_d[g_detail_idx].rtinsite,g_rtib6_d[g_detail_idx].rtin001,g_rtib6_d[g_detail_idx].rtin002, 
                  g_rtib6_d[g_detail_idx].rtin003,g_rtib6_d[g_detail_idx].rtin004,g_rtib6_d[g_detail_idx].rtin005, 
                  g_rtib6_d[g_detail_idx].rtin006,g_rtib6_d[g_detail_idx].rtin007,g_rtib6_d[g_detail_idx].rtin008, 
                  g_rtib6_d[g_detail_idx].rtin009,g_rtib6_d[g_detail_idx].rtin010) 
         WHERE rtinent = g_enterprise AND rtindocno = ps_keys_bak[1] AND rtinseq = ps_keys_bak[2] AND rtinseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update6"
      {<point name="update_b.m_update6"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtin_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtin_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt600_rtin_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update6"
      {<point name="update_b.after_update6"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "prek_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update7"
      {<point name="update_b.before_update7" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL artt600_prek_t_mask_restore('restore_mask_o')
               
      UPDATE prek_t 
         SET (prekdocno,
              prekseq
              ,preksite,prekunit,prek001,prek002,prek003,prek004) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtib7_d[g_detail_idx].preksite,g_rtib7_d[g_detail_idx].prekunit,g_rtib7_d[g_detail_idx].prek001, 
                  g_rtib7_d[g_detail_idx].prek002,g_rtib7_d[g_detail_idx].prek003,g_rtib7_d[g_detail_idx].prek004)  

         WHERE prekent = g_enterprise AND prekdocno = ps_keys_bak[1] AND prekseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update7"
      {<point name="update_b.m_update7"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "prek_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "prek_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt600_prek_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update7"
      {<point name="update_b.after_update7"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="artt600.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION artt600_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   {<point name="key_update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   {<point name="key_update_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   {<point name="key_update_b.pre_function"/>}
   #end add-point
   
 
   
END FUNCTION

{</section>}

{<section id="artt600.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION artt600_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   {<point name="key_delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   {<point name="key_delete_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   {<point name="key_delete_b.pre_function"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="artt600.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION artt600_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   {<point name="lock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   {<point name="lock_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   {<point name="lock_b.pre_function"/>}
   #end add-point
    
   #先刷新資料
   #CALL artt600_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "rtib_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN artt600_bcl USING g_enterprise,
                                       g_rtia_m.rtiadocno,g_rtib_d[g_detail_idx].rtibseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt600_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "rtic_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artt600_bcl2 USING g_enterprise,
                                             g_rtia_m.rtiadocno,g_rtib2_d[g_detail_idx].rticseq,g_rtib2_d[g_detail_idx].rticseq1 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt600_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "xrcd_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artt600_bcl3 USING g_enterprise,
                                             g_rtia_m.rtiadocno,g_rtib3_d[g_detail_idx].xrcdld,g_rtib3_d[g_detail_idx].xrcdseq, 
                                                 g_rtib3_d[g_detail_idx].xrcdseq2,g_rtib3_d[g_detail_idx].xrcd007 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt600_bcl3:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "rtie_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artt600_bcl4 USING g_enterprise,
                                             g_rtia_m.rtiadocno,g_rtib4_d[g_detail_idx].rtieseq,g_rtib4_d[g_detail_idx].rtieseq1 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt600_bcl4:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'5',"
   #僅鎖定自身table
   LET ls_group = "rtik_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artt600_bcl5 USING g_enterprise,
                                             g_rtia_m.rtiadocno,g_rtib5_d[g_detail_idx].rtikseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt600_bcl5:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'6',"
   #僅鎖定自身table
   LET ls_group = "rtin_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artt600_bcl6 USING g_enterprise,
                                             g_rtia_m.rtiadocno,g_rtib6_d[g_detail_idx].rtinseq,g_rtib6_d[g_detail_idx].rtinseq1 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt600_bcl6:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'7',"
   #僅鎖定自身table
   LET ls_group = "prek_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artt600_bcl7 USING g_enterprise,
                                             g_rtia_m.rtiadocno,g_rtib7_d[g_detail_idx].prekseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt600_bcl7:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="artt600.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION artt600_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   {<point name="unlock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   {<point name="unlock_b.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   {<point name="unlock_b.pre_function"/>}
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt600_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt600_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt600_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt600_bcl4
   END IF
 
   LET ls_group = "'5',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt600_bcl5
   END IF
 
   LET ls_group = "'6',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt600_bcl6
   END IF
 
   LET ls_group = "'7',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt600_bcl7
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="artt600.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION artt600_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   {<point name="set_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   {<point name="set_entry.define"/>} 
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   {<point name="set_entry.pre_function"/>}
   #end add-point
   
   CALL cl_set_comp_entry("rtiadocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("rtiadocno",TRUE)
      CALL cl_set_comp_entry("rtiadocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="artt600.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION artt600_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   {<point name="set_no_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   {<point name="set_no_entry.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   {<point name="set_no_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("rtiadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("rtiadocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("rtiadocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="artt600.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION artt600_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   {<point name="set_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   {<point name="set_entry_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   {<point name="set_entry_b.pre_function"/>}
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION

{</section>}

{<section id="artt600.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION artt600_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   {<point name="set_no_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   {<point name="set_no_entry_b.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   {<point name="set_no_entry_b.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION

{</section>}

{<section id="artt600.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION artt600_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   {<point name="set_act_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   {<point name="set_act_visible.define"/>} 
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="artt600.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION artt600_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   {<point name="set_act_no_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   {<point name="set_act_no_visible.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="artt600.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION artt600_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   {<point name="set_act_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   {<point name="set_act_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="artt600.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION artt600_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   {<point name="set_act_no_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   {<point name="set_act_no_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="artt600.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION artt600_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " rtiadocno = '", g_argv[02], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
         INITIALIZE g_wc2_table4 TO NULL
 
         INITIALIZE g_wc2_table5 TO NULL
 
         INITIALIZE g_wc2_table6 TO NULL
 
         INITIALIZE g_wc2_table7 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "rtia_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtib_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtic_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "xrcd_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "rtie_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "rtik_t" 
                  LET g_wc2_table5 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "rtin_t" 
                  LET g_wc2_table6 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "prek_t" 
                  LET g_wc2_table7 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
            OR NOT cl_null(g_wc2_table4)
 
            OR NOT cl_null(g_wc2_table5)
 
            OR NOT cl_null(g_wc2_table6)
 
            OR NOT cl_null(g_wc2_table7)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF
 
            IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
            END IF
 
            IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
            END IF
 
            IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION

{</section>}

{<section id="artt600.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION artt600_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   {<point name="statechange.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_rtia_m.rtiadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN artt600_cl USING g_enterprise,g_rtia_m.rtiadocno
   IF STATUS THEN
      CLOSE artt600_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt600_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE artt600_master_referesh USING g_rtia_m.rtiadocno INTO g_rtia_m.rtiasite,g_rtia_m.rtiadocdt, 
       g_rtia_m.rtiadocno,g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia059,g_rtia_m.rtia060,g_rtia_m.rtia004, 
       g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia048,g_rtia_m.rtia053,g_rtia_m.rtiastus,g_rtia_m.rtia007, 
       g_rtia_m.rtia008,g_rtia_m.rtia009,g_rtia_m.rtia041,g_rtia_m.rtia013,g_rtia_m.rtia014,g_rtia_m.rtia015, 
       g_rtia_m.rtia016,g_rtia_m.rtia051,g_rtia_m.rtia010,g_rtia_m.rtia011,g_rtia_m.rtia012,g_rtia_m.rtia017, 
       g_rtia_m.rtia018,g_rtia_m.rtia019,g_rtia_m.rtia020,g_rtia_m.rtia021,g_rtia_m.rtia022,g_rtia_m.rtia023, 
       g_rtia_m.rtia024,g_rtia_m.rtia025,g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029, 
       g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036, 
       g_rtia_m.rtia037,g_rtia_m.rtia038,g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid, 
       g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiacnfid,g_rtia_m.rtiamoddt, 
       g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt,g_rtia_m.rtiasite_desc,g_rtia_m.rtia002_desc, 
       g_rtia_m.rtia004_desc,g_rtia_m.rtia005_desc,g_rtia_m.rtia009_desc,g_rtia_m.rtia010_desc,g_rtia_m.rtia011_desc, 
       g_rtia_m.rtia012_desc,g_rtia_m.rtia018_desc,g_rtia_m.rtia024_desc,g_rtia_m.rtia025_desc,g_rtia_m.rtia036_desc, 
       g_rtia_m.rtia037_desc,g_rtia_m.rtia038_desc,g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiamodid_desc,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiapstid_desc 

   
 
   #檢查是否允許此動作
   IF NOT artt600_action_chk() THEN
      CLOSE artt600_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtia_m.rtiasite,g_rtia_m.rtiasite_desc,g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno,g_rtia_m.rtia001, 
       g_rtia_m.rtia001_desc,g_rtia_m.rtia002,g_rtia_m.rtia002_desc,g_rtia_m.rtia059,g_rtia_m.rtia060, 
       g_rtia_m.rtia004,g_rtia_m.rtia004_desc,g_rtia_m.rtia005,g_rtia_m.rtia005_desc,g_rtia_m.rtia006, 
       g_rtia_m.rtia048,g_rtia_m.rtia053,g_rtia_m.rtiastus,g_rtia_m.rtia007,g_rtia_m.rtia008,g_rtia_m.rtia009, 
       g_rtia_m.rtia009_desc,g_rtia_m.rtia041,g_rtia_m.rtia013,g_rtia_m.rtia014,g_rtia_m.rtia015,g_rtia_m.rtia016, 
       g_rtia_m.rtia051,g_rtia_m.rtia010,g_rtia_m.rtia010_desc,g_rtia_m.rtia011,g_rtia_m.rtia011_desc, 
       g_rtia_m.rtia012,g_rtia_m.rtia012_desc,g_rtia_m.rtia017,g_rtia_m.rtia018,g_rtia_m.rtia018_desc, 
       g_rtia_m.rtia019,g_rtia_m.rtia020,g_rtia_m.rtia021,g_rtia_m.rtia022,g_rtia_m.rtia023,g_rtia_m.rtia024, 
       g_rtia_m.rtia024_desc,g_rtia_m.rtia025,g_rtia_m.rtia025_desc,g_rtia_m.rtia026,g_rtia_m.rtia027, 
       g_rtia_m.rtia028,g_rtia_m.rtia029,g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033,g_rtia_m.rtia034, 
       g_rtia_m.rtia035,g_rtia_m.rtia036,g_rtia_m.rtia036_desc,g_rtia_m.rtia037,g_rtia_m.rtia037_desc, 
       g_rtia_m.rtia038,g_rtia_m.rtia038_desc,g_rtia_m.rtia039,g_rtia_m.isaf009,g_rtia_m.isaf010,g_rtia_m.isaf044, 
       g_rtia_m.isaf202,g_rtia_m.isaf203,g_rtia_m.isaf204,g_rtia_m.isaf201,g_rtia_m.isaf207,g_rtia_m.rtiaownid, 
       g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtid_desc, 
       g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamodid_desc, 
       g_rtia_m.rtiacnfid,g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid, 
       g_rtia_m.rtiapstid_desc,g_rtia_m.rtiapstdt,g_rtia_m.snum,g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3 

 
   CASE g_rtia_m.rtiastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "S"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
      WHEN "Z"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_rtia_m.rtiastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "S"
               HIDE OPTION "posted"
            WHEN "Z"
               HIDE OPTION "unposted"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT artt600_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE artt600_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT artt600_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE artt600_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION posted
         IF cl_auth_chk_act("posted") THEN
            LET lc_state = "S"
            #add-point:action控制 name="statechange.posted"
            {<point name="statechange.posted"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION unposted
         IF cl_auth_chk_act("unposted") THEN
            LET lc_state = "Z"
            #add-point:action控制 name="statechange.unposted"
            {<point name="statechange.unposted"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "S"
      AND lc_state <> "Z"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_rtia_m.rtiastus = lc_state OR cl_null(lc_state) THEN
      CLOSE artt600_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_rtia_m.rtiamodid = g_user
   LET g_rtia_m.rtiamoddt = cl_get_current()
   LET g_rtia_m.rtiastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE rtia_t 
      SET (rtiastus,rtiamodid,rtiamoddt) 
        = (g_rtia_m.rtiastus,g_rtia_m.rtiamodid,g_rtia_m.rtiamoddt)     
    WHERE rtiaent = g_enterprise AND rtiadocno = g_rtia_m.rtiadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE artt600_master_referesh USING g_rtia_m.rtiadocno INTO g_rtia_m.rtiasite,g_rtia_m.rtiadocdt, 
          g_rtia_m.rtiadocno,g_rtia_m.rtia001,g_rtia_m.rtia002,g_rtia_m.rtia059,g_rtia_m.rtia060,g_rtia_m.rtia004, 
          g_rtia_m.rtia005,g_rtia_m.rtia006,g_rtia_m.rtia048,g_rtia_m.rtia053,g_rtia_m.rtiastus,g_rtia_m.rtia007, 
          g_rtia_m.rtia008,g_rtia_m.rtia009,g_rtia_m.rtia041,g_rtia_m.rtia013,g_rtia_m.rtia014,g_rtia_m.rtia015, 
          g_rtia_m.rtia016,g_rtia_m.rtia051,g_rtia_m.rtia010,g_rtia_m.rtia011,g_rtia_m.rtia012,g_rtia_m.rtia017, 
          g_rtia_m.rtia018,g_rtia_m.rtia019,g_rtia_m.rtia020,g_rtia_m.rtia021,g_rtia_m.rtia022,g_rtia_m.rtia023, 
          g_rtia_m.rtia024,g_rtia_m.rtia025,g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029, 
          g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036, 
          g_rtia_m.rtia037,g_rtia_m.rtia038,g_rtia_m.rtia039,g_rtia_m.rtiaownid,g_rtia_m.rtiaowndp,g_rtia_m.rtiacrtid, 
          g_rtia_m.rtiacrtdp,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiacnfid,g_rtia_m.rtiamoddt, 
          g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid,g_rtia_m.rtiapstdt,g_rtia_m.rtiasite_desc,g_rtia_m.rtia002_desc, 
          g_rtia_m.rtia004_desc,g_rtia_m.rtia005_desc,g_rtia_m.rtia009_desc,g_rtia_m.rtia010_desc,g_rtia_m.rtia011_desc, 
          g_rtia_m.rtia012_desc,g_rtia_m.rtia018_desc,g_rtia_m.rtia024_desc,g_rtia_m.rtia025_desc,g_rtia_m.rtia036_desc, 
          g_rtia_m.rtia037_desc,g_rtia_m.rtia038_desc,g_rtia_m.rtiaownid_desc,g_rtia_m.rtiaowndp_desc, 
          g_rtia_m.rtiacrtid_desc,g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiamodid_desc,g_rtia_m.rtiacnfid_desc, 
          g_rtia_m.rtiapstid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_rtia_m.rtiasite,g_rtia_m.rtiasite_desc,g_rtia_m.rtiadocdt,g_rtia_m.rtiadocno, 
          g_rtia_m.rtia001,g_rtia_m.rtia001_desc,g_rtia_m.rtia002,g_rtia_m.rtia002_desc,g_rtia_m.rtia059, 
          g_rtia_m.rtia060,g_rtia_m.rtia004,g_rtia_m.rtia004_desc,g_rtia_m.rtia005,g_rtia_m.rtia005_desc, 
          g_rtia_m.rtia006,g_rtia_m.rtia048,g_rtia_m.rtia053,g_rtia_m.rtiastus,g_rtia_m.rtia007,g_rtia_m.rtia008, 
          g_rtia_m.rtia009,g_rtia_m.rtia009_desc,g_rtia_m.rtia041,g_rtia_m.rtia013,g_rtia_m.rtia014, 
          g_rtia_m.rtia015,g_rtia_m.rtia016,g_rtia_m.rtia051,g_rtia_m.rtia010,g_rtia_m.rtia010_desc, 
          g_rtia_m.rtia011,g_rtia_m.rtia011_desc,g_rtia_m.rtia012,g_rtia_m.rtia012_desc,g_rtia_m.rtia017, 
          g_rtia_m.rtia018,g_rtia_m.rtia018_desc,g_rtia_m.rtia019,g_rtia_m.rtia020,g_rtia_m.rtia021, 
          g_rtia_m.rtia022,g_rtia_m.rtia023,g_rtia_m.rtia024,g_rtia_m.rtia024_desc,g_rtia_m.rtia025, 
          g_rtia_m.rtia025_desc,g_rtia_m.rtia026,g_rtia_m.rtia027,g_rtia_m.rtia028,g_rtia_m.rtia029, 
          g_rtia_m.rtia030,g_rtia_m.rtia032,g_rtia_m.rtia033,g_rtia_m.rtia034,g_rtia_m.rtia035,g_rtia_m.rtia036, 
          g_rtia_m.rtia036_desc,g_rtia_m.rtia037,g_rtia_m.rtia037_desc,g_rtia_m.rtia038,g_rtia_m.rtia038_desc, 
          g_rtia_m.rtia039,g_rtia_m.isaf009,g_rtia_m.isaf010,g_rtia_m.isaf044,g_rtia_m.isaf202,g_rtia_m.isaf203, 
          g_rtia_m.isaf204,g_rtia_m.isaf201,g_rtia_m.isaf207,g_rtia_m.rtiaownid,g_rtia_m.rtiaownid_desc, 
          g_rtia_m.rtiaowndp,g_rtia_m.rtiaowndp_desc,g_rtia_m.rtiacrtid,g_rtia_m.rtiacrtid_desc,g_rtia_m.rtiacrtdp, 
          g_rtia_m.rtiacrtdp_desc,g_rtia_m.rtiacrtdt,g_rtia_m.rtiamodid,g_rtia_m.rtiamodid_desc,g_rtia_m.rtiacnfid, 
          g_rtia_m.rtiacnfid_desc,g_rtia_m.rtiamoddt,g_rtia_m.rtiacnfdt,g_rtia_m.rtiapstid,g_rtia_m.rtiapstid_desc, 
          g_rtia_m.rtiapstdt,g_rtia_m.snum,g_rtia_m.amount,g_rtia_m.amount2,g_rtia_m.amount3
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE artt600_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artt600_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 

{</section>}

{<section id="artt600.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION artt600_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   {<point name="idx_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   {<point name="idx_chk.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   {<point name="idx_chk.pre_function"/>}
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_rtib_d.getLength() THEN
         LET g_detail_idx = g_rtib_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtib_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtib_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_rtib2_d.getLength() THEN
         LET g_detail_idx = g_rtib2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtib2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtib2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_rtib3_d.getLength() THEN
         LET g_detail_idx = g_rtib3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtib3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtib3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_rtib4_d.getLength() THEN
         LET g_detail_idx = g_rtib4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtib4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtib4_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_rtib5_d.getLength() THEN
         LET g_detail_idx = g_rtib5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtib5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtib5_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 6 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail6")
      IF g_detail_idx > g_rtib6_d.getLength() THEN
         LET g_detail_idx = g_rtib6_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtib6_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtib6_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 7 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail7")
      IF g_detail_idx > g_rtib7_d.getLength() THEN
         LET g_detail_idx = g_rtib7_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtib7_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtib7_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="artt600.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION artt600_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   {<point name="b_fill2.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   {<point name="b_fill2.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   {<point name="b_fill2.pre_function"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL artt600_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION

{</section>}

{<section id="artt600.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION artt600_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   {<point name="fill_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   {<point name="fill_chk.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1')  AND 
      (cl_null(g_wc2_table5) OR g_wc2_table5.trim() = '1=1')  AND 
      (cl_null(g_wc2_table6) OR g_wc2_table6.trim() = '1=1')  AND 
      (cl_null(g_wc2_table7) OR g_wc2_table7.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="artt600.status_show" >}
PRIVATE FUNCTION artt600_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   {<point name="status_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   {<point name="status_show.define"/>} 
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION

{</section>}

{<section id="artt600.mask_functions" >}
&include "erp/art/artt600_mask.4gl"

{</section>}

{<section id="artt600.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION artt600_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   {<point name="send.define_customerization" edit="c" mark="Y"/>}
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   {<point name="send.define"/>}
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   {<point name="send.pre_function"/>}
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
   LET g_wc2_table4 = " 1=1"
   LET g_wc2_table5 = " 1=1"
   LET g_wc2_table6 = " 1=1"
   LET g_wc2_table7 = " 1=1"
 
 
   CALL artt600_show()
   CALL artt600_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_rtia_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_rtib_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_rtib2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_rtib3_d))
   CALL cl_bpm_set_detail_data("s_detail4", util.JSONArray.fromFGL(g_rtib4_d))
   CALL cl_bpm_set_detail_data("s_detail5", util.JSONArray.fromFGL(g_rtib5_d))
   CALL cl_bpm_set_detail_data("s_detail6", util.JSONArray.fromFGL(g_rtib6_d))
   CALL cl_bpm_set_detail_data("s_detail7", util.JSONArray.fromFGL(g_rtib7_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL artt600_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL artt600_ui_headershow()
   CALL artt600_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION artt600_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   {<point name="draw.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   {<point name="draw.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   {<point name="draw.pre_function"/>}
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL artt600_ui_headershow()  
   CALL artt600_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   {<point name="draw.after_function"/>}
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 

{</section>}

{<section id="artt600.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION artt600_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   {<point name="set_pk_array.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_rtia_m.rtiadocno
   LET g_pk_array[1].column = 'rtiadocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
 

{</section>}

{<section id="artt600.other_dialog" readonly="Y" >}
   

{</section>}

{<section id="artt600.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION artt600_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   {<point name="msgcentre_notify.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   {<point name="msgcentre_notify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   {<point name="msgcentre_notify.pre_function"/>}
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL artt600_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_rtia_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 

{</section>}

{<section id="artt600.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION artt600_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   {<point name="action_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   {<point name="action_chk.define"/>} 
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   {<point name="action_chk.action_chk"/>}
   #end add-point
      
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="artt600.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

