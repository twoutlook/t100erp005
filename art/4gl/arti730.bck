#該程式未解開Section, 採用最新樣板產出!
{<section id="arti730.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0007(2016-03-21 15:14:38), PR版次:0007(2016-10-30 15:47:33)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000183
#+ Filename...: arti730
#+ Description: 自動補貨建議補貨量計算公式設定作業
#+ Creator....: 04226(2014-04-12 15:33:16)
#+ Modifier...: 06137 -SD/PR- 08742
 
{</section>}
 
{<section id="arti730.global" >}
#應用 i01 樣板自動產生(Version:47)
#add-point:填寫註解說明
#Memos

#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE TYPE type_g_rtkg_m RECORD
       rtkgunit LIKE rtkg_t.rtkgunit, 
   rtkgunit_desc LIKE type_t.chr80, 
   rtkg001 LIKE rtkg_t.rtkg001, 
   rtkgl003 LIKE type_t.chr500, 
   rtkgl004 LIKE type_t.chr500, 
   rtkgstus LIKE rtkg_t.rtkgstus, 
   rtkg011 LIKE rtkg_t.rtkg011, 
   rtkg021 LIKE rtkg_t.rtkg021, 
   rtkg022 LIKE rtkg_t.rtkg022, 
   rtkg023 LIKE rtkg_t.rtkg023, 
   rtkg020 LIKE rtkg_t.rtkg020, 
   rtkg031 LIKE rtkg_t.rtkg031, 
   rtkg032 LIKE rtkg_t.rtkg032, 
   rtkg033 LIKE rtkg_t.rtkg033, 
   rtkg041 LIKE rtkg_t.rtkg041, 
   rtkg042 LIKE rtkg_t.rtkg042, 
   rtkg002 LIKE rtkg_t.rtkg002, 
   rtkgownid LIKE rtkg_t.rtkgownid, 
   rtkgownid_desc LIKE type_t.chr80, 
   rtkgowndp LIKE rtkg_t.rtkgowndp, 
   rtkgowndp_desc LIKE type_t.chr80, 
   rtkgcrtid LIKE rtkg_t.rtkgcrtid, 
   rtkgcrtid_desc LIKE type_t.chr80, 
   rtkgcrtdp LIKE rtkg_t.rtkgcrtdp, 
   rtkgcrtdp_desc LIKE type_t.chr80, 
   rtkgcrtdt LIKE rtkg_t.rtkgcrtdt, 
   rtkgmodid LIKE rtkg_t.rtkgmodid, 
   rtkgmodid_desc LIKE type_t.chr80, 
   rtkgmoddt LIKE rtkg_t.rtkgmoddt
       END RECORD
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD  #查詢方案用陣列 
         b_statepic     LIKE type_t.chr50,
            b_rtkg001 LIKE rtkg_t.rtkg001
      END RECORD 
 
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
 
#end add-point
 
#模組變數(Module Variables)
DEFINE g_rtkg_m        type_g_rtkg_m  #單頭變數宣告
DEFINE g_rtkg_m_t      type_g_rtkg_m  #單頭舊值宣告(系統還原用)
DEFINE g_rtkg_m_o      type_g_rtkg_m  #單頭舊值宣告(其他用途)
DEFINE g_rtkg_m_mask_o type_g_rtkg_m  #轉換遮罩前資料
DEFINE g_rtkg_m_mask_n type_g_rtkg_m  #轉換遮罩後資料
 
   DEFINE g_rtkg001_t LIKE rtkg_t.rtkg001
 
   
 
   
DEFINE g_master_multi_table_t    RECORD
      rtkgl001 LIKE rtkgl_t.rtkgl001,
      rtkgl003 LIKE rtkgl_t.rtkgl003,
      rtkgl004 LIKE rtkgl_t.rtkgl004
      END RECORD
 
DEFINE g_wc                  STRING                        #儲存查詢條件
DEFINE g_wc_t                STRING                        #備份查詢條件
DEFINE g_wc_filter           STRING                        #儲存過濾查詢條件
DEFINE g_wc_filter_t         STRING                        #備份過濾查詢條件
DEFINE g_sql                 STRING                        #資料撈取用SQL(含reference)
DEFINE g_forupd_sql          STRING                        #資料鎖定用SQL
DEFINE g_cnt                 LIKE type_t.num10             #指標/統計用變數
DEFINE g_jump                LIKE type_t.num10             #查詢指定的筆數 
DEFINE g_no_ask              LIKE type_t.num5              #是否開啟指定筆視窗 
DEFINE g_rec_b               LIKE type_t.num10             #單身筆數                         
DEFINE l_ac                  LIKE type_t.num10             #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_pagestart           LIKE type_t.num10             #page起始筆數
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_state               STRING                        #確認前一個動作是否為新增/複製
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #reference用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #reference用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #reference用陣列
DEFINE g_error_show          LIKE type_t.num5              #是否顯示資料過多的錯誤訊息
DEFINE g_aw                  STRING                        #確定當下點擊的單身(modify_detail用)
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #cl_log_modified_record用(舊值)
DEFINE g_log2                STRING                        #cl_log_modified_record用(新值)
 
#快速搜尋用
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序模式
 
#Browser用
DEFINE g_current_idx         LIKE type_t.num10             #Browser 所在筆數(當下page)
DEFINE g_current_row         LIKE type_t.num10             #Browser 所在筆數(暫存用)
DEFINE g_current_cnt         LIKE type_t.num10             #Browser 總筆數(當下page)
DEFINE g_browser_idx         LIKE type_t.num10             #Browser 所在筆數(所有資料)
DEFINE g_browser_cnt         LIKE type_t.num10             #Browser 總筆數(所有資料)
DEFINE g_row_index           LIKE type_t.num10             #階層樹狀用指標
DEFINE g_add_browse          STRING                        #新增填充用WC
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization" 

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="arti730.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   DEFINE l_success LIKE type_t.num5      #150308-00001#5  By benson 150309
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT rtkgunit,'',rtkg001,'','',rtkgstus,rtkg011,rtkg021,rtkg022,rtkg023,rtkg020, 
       rtkg031,rtkg032,rtkg033,rtkg041,rtkg042,rtkg002,rtkgownid,'',rtkgowndp,'',rtkgcrtid,'',rtkgcrtdp, 
       '',rtkgcrtdt,rtkgmodid,'',rtkgmoddt", 
                      " FROM rtkg_t",
                      " WHERE rtkgent= ? AND rtkg001=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE arti730_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.rtkgunit,t0.rtkg001,t0.rtkgstus,t0.rtkg011,t0.rtkg021,t0.rtkg022, 
       t0.rtkg023,t0.rtkg020,t0.rtkg031,t0.rtkg032,t0.rtkg033,t0.rtkg041,t0.rtkg042,t0.rtkg002,t0.rtkgownid, 
       t0.rtkgowndp,t0.rtkgcrtid,t0.rtkgcrtdp,t0.rtkgcrtdt,t0.rtkgmodid,t0.rtkgmoddt,t1.ooefl003 ,t2.ooag011 , 
       t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011",
               " FROM rtkg_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtkgunit AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.rtkgownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.rtkgowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=t0.rtkgcrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=t0.rtkgcrtdp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=t0.rtkgmodid  ",
 
               " WHERE t0.rtkgent = " ||g_enterprise|| " AND t0.rtkg001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE arti730_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_arti730 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL arti730_init()   
 
      #進入選單 Menu (="N")
      CALL arti730_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_arti730
      
   END IF 
   
   CLOSE arti730_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   CALL s_aooi500_drop_temp() RETURNING l_success      #150308-00001#5  By benson 150309
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="arti730.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION arti730_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point
   #add-point:init段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success LIKE type_t.num5      #150308-00001#5  By benson 150309
   #end add-point
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   #定義combobox狀態
      CALL cl_set_combo_scc_part('rtkgstus','17','N,Y')
 
      CALL cl_set_combo_scc('rtkg020','6051') 
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   #add-point:畫面資料初始化 name="init.init"
   LET g_errshow = 1
   CALL s_aooi500_create_temp() RETURNING l_success    #150308-00001#5  By benson 150309
   #end add-point
   
   #根據外部參數進行搜尋
   CALL arti730_default_search()
 
END FUNCTION
 
{</section>}
 
{<section id="arti730.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION arti730_ui_dialog() 
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_exit   LIKE type_t.num10       #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num10       #指標變數
   DEFINE ls_wc     STRING                  #wc用
   DEFINE la_param  RECORD                  #程式串查用變數
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING                  #轉換後的json字串
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   LET li_exit = FALSE
   LET g_current_row = 0
   LET g_current_idx = 0
 
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL arti730_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
 
   WHILE li_exit = FALSE
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_rtkg_m.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL arti730_init()
      END IF
      
    
      #確保g_current_idx位於正常區間內
      #小於,等於0則指到第1筆
      IF g_current_idx <= 0 THEN
         LET g_current_idx = 1
      END IF
               
      IF g_main_hidden = 0 THEN
         MENU
            BEFORE MENU 
               #先填充browser資料
               CALL arti730_browser_fill(g_wc,"")
               CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               
               #還原為原本指定筆數
               IF g_current_row > 0 THEN
                  LET g_current_idx = g_current_row
               END IF
 
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL arti730_fetch("")   
               END IF               
               #add-point:ui_dialog段 before menu name="ui_dialog.before_menu"
               
               #end add-point
            
            #狀態碼切換
            ON ACTION statechange
               CALL arti730_statechange()
               LET g_action_choice="statechange"
               #根據資料狀態切換action狀態
               CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
               CALL arti730_set_act_visible()
               CALL arti730_set_act_no_visible()
               IF NOT (g_rtkg_m.rtkg001 IS NULL
 
                 ) THEN
                  #組合條件
                  LET g_add_browse = " rtkgent = " ||g_enterprise|| " AND",
                                     " rtkg001 = '", g_rtkg_m.rtkg001, "' "
 
                  #填到對應位置
                  CALL arti730_browser_fill(g_wc,"")
               END IF
               
            #第一筆資料
            ON ACTION first
               CALL arti730_fetch("F") 
               LET g_current_row = g_current_idx
            
            #下一筆資料
            ON ACTION next
               CALL arti730_fetch("N")
               LET g_current_row = g_current_idx
            
            #指定筆資料
            ON ACTION jump
               CALL arti730_fetch("/")
               LET g_current_row = g_current_idx
            
            #上一筆資料
            ON ACTION previous
               CALL arti730_fetch("P")
               LET g_current_row = g_current_idx
            
            #最後筆資料
            ON ACTION last 
               CALL arti730_fetch("L")  
               LET g_current_row = g_current_idx
            
            #離開程式
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU 
            
            #離開程式
            ON ACTION close
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU
            
            #主頁摺疊
            ON ACTION mainhidden   
               LET g_action_choice = "mainhidden"            
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
                  CALL cl_notice()
               END IF
               EXIT MENU
               
            ON ACTION worksheethidden   #瀏覽頁折疊
            
            #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
          
            #查詢方案用
            ON ACTION queryplansel
               CALL cl_dlg_qryplan_select() RETURNING ls_wc
               #不是空條件才寫入g_wc跟重新找資料
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  CALL arti730_browser_fill(g_wc,"F")   #browser_fill()會將notice區塊清空
                  CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               END IF
            
            #查詢方案用
            ON ACTION qbe_select
               CALL cl_qbe_list("m") RETURNING ls_wc
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL arti730_browser_fill(g_wc,"F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL arti730_fetch("F")
                  END IF
               END IF
               #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               CALL cl_notice()
            
            
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL arti730_modify()
               #add-point:ON ACTION modify name="menu2.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL arti730_delete()
               #add-point:ON ACTION delete name="menu2.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL arti730_insert()
               #add-point:ON ACTION insert name="menu2.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu2.output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL arti730_reproduce()
               #add-point:ON ACTION reproduce name="menu2.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL arti730_query()
               #add-point:ON ACTION query name="menu2.query"
               
               #END add-point
               
            END IF
 
 
 
 
            
            
            
            #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL arti730_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.menu.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL arti730_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.menu.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL arti730_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.menu.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
            
            #主選單用ACTION
            &include "main_menu_exit_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END MENU
      
      ELSE
      
         DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
           
      
            #左側瀏覽頁簽
            DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
            
               BEFORE ROW
                  #回歸舊筆數位置 (回到當時異動的筆數)
                  LET g_current_idx = DIALOG.getCurrentRow("s_browse")
                  IF g_current_idx = 0 THEN
                     LET g_current_idx = 1
                  END IF
                  LET g_current_row = g_current_idx  #目前指標
                  LET g_current_sw = TRUE
                  CALL cl_show_fld_cont()     
                  
                  #當每次點任一筆資料都會需要用到               
                  CALL arti730_fetch("")
 
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
    
               
            
            END DISPLAY
 
            #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
            
            #end add-point
 
         
            BEFORE DIALOG
               #先填充browser資料
               IF g_action_choice <> "mainhidden" THEN
                  CALL arti730_browser_fill(g_wc,"")
               END IF
 
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL arti730_fetch("")   
               END IF          
               CALL cl_notice()
               
               #add-point:ui_dialog段before name="ui_dialog.b_dialog"
               
               #end add-point  
            
            AFTER DIALOG
               #add-point:ui_dialog段 after dialog name="ui_dialog.after_dialog"
               
               #end add-point
            
            #狀態碼切換
            ON ACTION statechange
               CALL arti730_statechange()
               LET g_action_choice="statechange"
               #根據資料狀態切換action狀態
               CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
               CALL arti730_set_act_visible()
               CALL arti730_set_act_no_visible()
               IF NOT (g_rtkg_m.rtkg001 IS NULL
 
                 ) THEN
                  #組合條件
                  LET g_add_browse = " rtkgent = " ||g_enterprise|| " AND",
                                     " rtkg001 = '", g_rtkg_m.rtkg001, "' "
 
                  #填到對應位置
                  CALL arti730_browser_fill(g_wc,"")
               END IF
         
            
            
            #第一筆資料
            ON ACTION first
               CALL arti730_fetch("F") 
               LET g_current_row = g_current_idx
            
            #下一筆資料
            ON ACTION next
               CALL arti730_fetch("N")
               LET g_current_row = g_current_idx
         
            #指定筆資料
            ON ACTION jump
               CALL arti730_fetch("/")
               LET g_current_row = g_current_idx
         
            #上一筆資料
            ON ACTION previous
               CALL arti730_fetch("P")
               LET g_current_row = g_current_idx
          
            #最後筆資料
            ON ACTION last 
               CALL arti730_fetch("L")  
               LET g_current_row = g_current_idx
         
            #離開程式
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
         
            #離開程式
            ON ACTION close
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
    
            #主頁摺疊
            ON ACTION mainhidden 
               LET g_action_choice = "mainhidden"                
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
                  CALL cl_notice()
               END IF
               #EXIT DIALOG
               
         
            ON ACTION exporttoexcel
               LET g_action_choice="exporttoexcel"
               IF cl_auth_chk_act("exporttoexcel") THEN
                  #browser
                  CALL g_export_node.clear()
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               END IF
         
            #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
 
            
            #查詢方案用
            ON ACTION queryplansel
               CALL cl_dlg_qryplan_select() RETURNING ls_wc
               #不是空條件才寫入g_wc跟重新找資料
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  CALL arti730_browser_fill(g_wc,"F")   #browser_fill()會將notice區塊清空
                  CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               END IF
            
            #查詢方案用
            ON ACTION qbe_select
               CALL cl_qbe_list("m") RETURNING ls_wc
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL arti730_browser_fill(g_wc,"F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL arti730_fetch("F")
                  END IF
               END IF
               #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               CALL cl_notice()
               
            
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL arti730_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL arti730_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL arti730_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL arti730_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL arti730_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               
            END IF
 
 
 
 
            
            
 
            #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL arti730_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL arti730_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL arti730_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
 
            #主選單用ACTION
            &include "main_menu_exit_dialog.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END DIALOG 
      
      END IF
      
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="arti730.browser_fill" >}
#應用 a29 樣板自動產生(Version:15)
#+ 瀏覽頁簽資料填充(一般單檔)
PRIVATE FUNCTION arti730_browser_fill(p_wc,ps_page_action) 
   #add-point:browser_fill段define name="browser_fill.define_customerization"
   
   #end add-point
   DEFINE p_wc              STRING
   DEFINE ls_wc             STRING
   DEFINE ps_page_action    STRING
   DEFINE l_searchcol       STRING
   DEFINE l_sql             STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="browser_fill.pre_function"
   
   #end add-point
   
   LET l_searchcol = "rtkg001"
 
   LET p_wc = p_wc.trim() #當查詢按下Q時 按下放棄 g_wc = "  " 所以要清掉空白
   IF cl_null(p_wc) THEN  #p_wc 查詢條件
      LET p_wc = " 1=1 " 
   END IF
   #add-point:browser_fill段wc控制 name="browser_fill.wc"
   
   #end add-point
 
   LET g_sql = " SELECT COUNT(1) FROM rtkg_t ",
               "  ",
               "  LEFT JOIN rtkgl_t ON rtkglent = "||g_enterprise||" AND rtkg001 = rtkgl001 AND rtkgl002 = '",g_dlang,"' ",
               " WHERE rtkgent = " ||g_enterprise|| " AND ", 
               p_wc CLIPPED, cl_sql_add_filter("rtkg_t")
                
   #add-point:browser_fill段cnt_sql name="browser_fill.cnt_sql"
   
   #end add-point
                
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt
      FREE header_cnt_pre 
   END IF
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt 
         LET g_errparam.code   = 9035
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
   END IF
   
   
   IF ps_page_action = "F" OR
      ps_page_action = "P"  OR
      ps_page_action = "N"  OR
      ps_page_action = "L"  THEN
      LET g_page_action = ps_page_action
   END IF
   
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM
      INITIALIZE g_rtkg_m.* TO NULL
      CALL g_browser.clear()
      LET g_cnt = 1
      LET ls_wc = p_wc
   ELSE
      LET ls_wc = g_add_browse
      LET g_cnt = g_current_idx
   END IF
   
   LET g_sql = " SELECT t0.rtkgstus,t0.rtkg001",
               " FROM rtkg_t t0 ",
               "  ",
               
               " LEFT JOIN rtkgl_t ON rtkglent = "||g_enterprise||" AND rtkg001 = rtkgl001 AND rtkgl002 = '",g_dlang,"' ",
               " WHERE t0.rtkgent = " ||g_enterprise|| " AND ", ls_wc, cl_sql_add_filter("rtkg_t")
   #add-point:browser_fill段fill_wc name="browser_fill.fill_wc"
   
   #end add-point 
   LET g_sql = g_sql, " ORDER BY ",l_searchcol," ",g_order
   #add-point:browser_fill段before_pre name="browser_fill.before_pre"
   
   #end add-point                    
 
   #LET g_sql = cl_sql_add_tabid(g_sql,"rtkg_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_rtkg001
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "foreach:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
         
         
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
         
         
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_rec THEN
            EXIT FOREACH
         END IF
      END FOREACH
 
      FREE browse_pre
 
   END IF
 
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_rtkg001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_current_cnt = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   LET g_rec_b = g_browser.getLength()
   LET g_cnt = 0
   DISPLAY g_browser_cnt TO FORMONLY.b_count
   DISPLAY g_browser_cnt TO FORMONLY.h_count
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="arti730.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION arti730_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point
   DEFINE ls_return      STRING
   DEFINE ls_result      STRING 
   DEFINE ls_wc          STRING 
   #add-point:cs段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
   
   #清空畫面&資料初始化
   CLEAR FORM
   INITIALIZE g_rtkg_m.* TO NULL
   INITIALIZE g_wc TO NULL
   LET g_current_row = 1
 
   LET g_qryparam.state = "c"
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #螢幕上取條件
      CONSTRUCT BY NAME g_wc ON rtkgunit,rtkg001,rtkgl003,rtkgl004,rtkgstus,rtkg011,rtkg021,rtkg022, 
          rtkg023,rtkg020,rtkg031,rtkg032,rtkg033,rtkg041,rtkg042,rtkg002,rtkgownid,rtkgowndp,rtkgcrtid, 
          rtkgcrtdp,rtkgcrtdt,rtkgmodid,rtkgmoddt
      
         BEFORE CONSTRUCT                                    
            #add-point:cs段more_construct name="cs.before_construct"
            
            #end add-point             
      
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<rtkgcrtdt>>----
         AFTER FIELD rtkgcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<rtkgmoddt>>----
         AFTER FIELD rtkgmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtkgcnfdt>>----
         
         #----<<rtkgpstdt>>----
 
 
 
      
         #一般欄位
                  #Ctrlp:construct.c.rtkgunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkgunit
            #add-point:ON ACTION controlp INFIELD rtkgunit name="construct.c.rtkgunit"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtkgunit',g_site,'c')   #150308-00001#5  By benson add 'c'
            CALL q_ooef001_24()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkgunit  #顯示到畫面上
            NEXT FIELD rtkgunit                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkgunit
            #add-point:BEFORE FIELD rtkgunit name="construct.b.rtkgunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkgunit
            
            #add-point:AFTER FIELD rtkgunit name="construct.a.rtkgunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkg001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg001
            #add-point:ON ACTION controlp INFIELD rtkg001 name="construct.c.rtkg001"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtkg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkg001  #顯示到畫面上
            NEXT FIELD rtkg001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg001
            #add-point:BEFORE FIELD rtkg001 name="construct.b.rtkg001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg001
            
            #add-point:AFTER FIELD rtkg001 name="construct.a.rtkg001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkgl003
            #add-point:BEFORE FIELD rtkgl003 name="construct.b.rtkgl003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkgl003
            
            #add-point:AFTER FIELD rtkgl003 name="construct.a.rtkgl003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkgl003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkgl003
            #add-point:ON ACTION controlp INFIELD rtkgl003 name="construct.c.rtkgl003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkgl004
            #add-point:BEFORE FIELD rtkgl004 name="construct.b.rtkgl004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkgl004
            
            #add-point:AFTER FIELD rtkgl004 name="construct.a.rtkgl004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkgl004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkgl004
            #add-point:ON ACTION controlp INFIELD rtkgl004 name="construct.c.rtkgl004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkgstus
            #add-point:BEFORE FIELD rtkgstus name="construct.b.rtkgstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkgstus
            
            #add-point:AFTER FIELD rtkgstus name="construct.a.rtkgstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkgstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkgstus
            #add-point:ON ACTION controlp INFIELD rtkgstus name="construct.c.rtkgstus"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg011
            #add-point:BEFORE FIELD rtkg011 name="construct.b.rtkg011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg011
            
            #add-point:AFTER FIELD rtkg011 name="construct.a.rtkg011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkg011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg011
            #add-point:ON ACTION controlp INFIELD rtkg011 name="construct.c.rtkg011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg021
            #add-point:BEFORE FIELD rtkg021 name="construct.b.rtkg021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg021
            
            #add-point:AFTER FIELD rtkg021 name="construct.a.rtkg021"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkg021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg021
            #add-point:ON ACTION controlp INFIELD rtkg021 name="construct.c.rtkg021"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg022
            #add-point:BEFORE FIELD rtkg022 name="construct.b.rtkg022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg022
            
            #add-point:AFTER FIELD rtkg022 name="construct.a.rtkg022"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkg022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg022
            #add-point:ON ACTION controlp INFIELD rtkg022 name="construct.c.rtkg022"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg023
            #add-point:BEFORE FIELD rtkg023 name="construct.b.rtkg023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg023
            
            #add-point:AFTER FIELD rtkg023 name="construct.a.rtkg023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkg023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg023
            #add-point:ON ACTION controlp INFIELD rtkg023 name="construct.c.rtkg023"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg020
            #add-point:BEFORE FIELD rtkg020 name="construct.b.rtkg020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg020
            
            #add-point:AFTER FIELD rtkg020 name="construct.a.rtkg020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkg020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg020
            #add-point:ON ACTION controlp INFIELD rtkg020 name="construct.c.rtkg020"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg031
            #add-point:BEFORE FIELD rtkg031 name="construct.b.rtkg031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg031
            
            #add-point:AFTER FIELD rtkg031 name="construct.a.rtkg031"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkg031
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg031
            #add-point:ON ACTION controlp INFIELD rtkg031 name="construct.c.rtkg031"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg032
            #add-point:BEFORE FIELD rtkg032 name="construct.b.rtkg032"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg032
            
            #add-point:AFTER FIELD rtkg032 name="construct.a.rtkg032"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkg032
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg032
            #add-point:ON ACTION controlp INFIELD rtkg032 name="construct.c.rtkg032"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg033
            #add-point:BEFORE FIELD rtkg033 name="construct.b.rtkg033"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg033
            
            #add-point:AFTER FIELD rtkg033 name="construct.a.rtkg033"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkg033
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg033
            #add-point:ON ACTION controlp INFIELD rtkg033 name="construct.c.rtkg033"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg041
            #add-point:BEFORE FIELD rtkg041 name="construct.b.rtkg041"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg041
            
            #add-point:AFTER FIELD rtkg041 name="construct.a.rtkg041"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkg041
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg041
            #add-point:ON ACTION controlp INFIELD rtkg041 name="construct.c.rtkg041"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg042
            #add-point:BEFORE FIELD rtkg042 name="construct.b.rtkg042"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg042
            
            #add-point:AFTER FIELD rtkg042 name="construct.a.rtkg042"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkg042
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg042
            #add-point:ON ACTION controlp INFIELD rtkg042 name="construct.c.rtkg042"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg002
            #add-point:BEFORE FIELD rtkg002 name="construct.b.rtkg002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg002
            
            #add-point:AFTER FIELD rtkg002 name="construct.a.rtkg002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkg002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg002
            #add-point:ON ACTION controlp INFIELD rtkg002 name="construct.c.rtkg002"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtkgownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkgownid
            #add-point:ON ACTION controlp INFIELD rtkgownid name="construct.c.rtkgownid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkgownid  #顯示到畫面上
            NEXT FIELD rtkgownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkgownid
            #add-point:BEFORE FIELD rtkgownid name="construct.b.rtkgownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkgownid
            
            #add-point:AFTER FIELD rtkgownid name="construct.a.rtkgownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkgowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkgowndp
            #add-point:ON ACTION controlp INFIELD rtkgowndp name="construct.c.rtkgowndp"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkgowndp  #顯示到畫面上
            NEXT FIELD rtkgowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkgowndp
            #add-point:BEFORE FIELD rtkgowndp name="construct.b.rtkgowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkgowndp
            
            #add-point:AFTER FIELD rtkgowndp name="construct.a.rtkgowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkgcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkgcrtid
            #add-point:ON ACTION controlp INFIELD rtkgcrtid name="construct.c.rtkgcrtid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkgcrtid  #顯示到畫面上
            NEXT FIELD rtkgcrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkgcrtid
            #add-point:BEFORE FIELD rtkgcrtid name="construct.b.rtkgcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkgcrtid
            
            #add-point:AFTER FIELD rtkgcrtid name="construct.a.rtkgcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtkgcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkgcrtdp
            #add-point:ON ACTION controlp INFIELD rtkgcrtdp name="construct.c.rtkgcrtdp"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkgcrtdp  #顯示到畫面上
            NEXT FIELD rtkgcrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkgcrtdp
            #add-point:BEFORE FIELD rtkgcrtdp name="construct.b.rtkgcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkgcrtdp
            
            #add-point:AFTER FIELD rtkgcrtdp name="construct.a.rtkgcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkgcrtdt
            #add-point:BEFORE FIELD rtkgcrtdt name="construct.b.rtkgcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtkgmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkgmodid
            #add-point:ON ACTION controlp INFIELD rtkgmodid name="construct.c.rtkgmodid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtkgmodid  #顯示到畫面上
            NEXT FIELD rtkgmodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkgmodid
            #add-point:BEFORE FIELD rtkgmodid name="construct.b.rtkgmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkgmodid
            
            #add-point:AFTER FIELD rtkgmodid name="construct.a.rtkgmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkgmoddt
            #add-point:BEFORE FIELD rtkgmoddt name="construct.b.rtkgmoddt"
            
            #END add-point
 
 
 
           
      END CONSTRUCT
      
      #add-point:cs段more_construct name="cs.more_construct"
      
      #end add-point   
      
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
  
   #add-point:cs段after_construct name="cs.after_construct"
   
   #end add-point
  
END FUNCTION
 
{</section>}
 
{<section id="arti730.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION arti730_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point
   DEFINE ls_wc STRING
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   LET INT_FLAG = 0
   LET ls_wc = g_wc
   
   #切換畫面
 
   CALL g_browser.clear() 
 
   #browser panel折疊
   IF g_worksheet_hidden THEN
      CALL gfrm_curr.setElementHidden("worksheet_vbox",0)
      CALL gfrm_curr.setElementImage("worksheethidden","worksheethidden-24.png")
      LET g_worksheet_hidden = 0
   END IF
   
   #單頭折疊
   IF g_header_hidden THEN
      CALL gfrm_curr.setElementHidden("vb_master",0)
      CALL gfrm_curr.setElementImage("controls","headerhidden-24")
      LET g_header_hidden = 0
   END IF
 
   INITIALIZE g_rtkg_m.* TO NULL
   ERROR ""
 
   DISPLAY " " TO FORMONLY.b_count
   DISPLAY " " TO FORMONLY.h_count
   CALL arti730_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL arti730_browser_fill(g_wc,"F")
      CALL arti730_fetch("")
      RETURN
   ELSE
      LET g_current_row = 1
      LET g_current_cnt = 0
   END IF
   
   #根據條件從新抓取資料
   LET g_error_show = 1
   CALL arti730_browser_fill(g_wc,"F")   # 移到第一頁
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL arti730_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
 
{</section>}
 
{<section id="arti730.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION arti730_fetch(p_fl)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point
   DEFINE p_fl       LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   #根據傳入的條件決定抓取的資料
   CASE p_fl
      WHEN "F" 
         LET g_current_idx = 1
      WHEN "P"
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN "N"
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN "L" 
         #LET g_current_idx = g_header_cnt        
         LET g_current_idx = g_browser.getLength()    
      WHEN "/"
         #詢問要指定的筆數
         IF (NOT g_no_ask) THEN      
            CALL cl_getmsg("fetch", g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,": " FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl"
            END PROMPT
            
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF           
         END IF
         IF g_jump > 0 THEN
            LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE     
   END CASE
 
   #筆數顯示
   LET g_browser_idx = g_current_idx 
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
   END IF
   
   
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength() 
   END IF
   
   # 設定browse索引
   CALL cl_navigator_setting(g_browser_idx, g_browser_cnt) 
 
   #代表沒有資料, 無需做後續資料撈取之動作
   IF g_current_idx = 0 THEN
      RETURN
   END IF
 
   #根據選定的筆數給予key欄位值
   LET g_rtkg_m.rtkg001 = g_browser[g_current_idx].b_rtkg001
 
                       
   #讀取單頭所有欄位資料
   EXECUTE arti730_master_referesh USING g_rtkg_m.rtkg001 INTO g_rtkg_m.rtkgunit,g_rtkg_m.rtkg001,g_rtkg_m.rtkgstus, 
       g_rtkg_m.rtkg011,g_rtkg_m.rtkg021,g_rtkg_m.rtkg022,g_rtkg_m.rtkg023,g_rtkg_m.rtkg020,g_rtkg_m.rtkg031, 
       g_rtkg_m.rtkg032,g_rtkg_m.rtkg033,g_rtkg_m.rtkg041,g_rtkg_m.rtkg042,g_rtkg_m.rtkg002,g_rtkg_m.rtkgownid, 
       g_rtkg_m.rtkgowndp,g_rtkg_m.rtkgcrtid,g_rtkg_m.rtkgcrtdp,g_rtkg_m.rtkgcrtdt,g_rtkg_m.rtkgmodid, 
       g_rtkg_m.rtkgmoddt,g_rtkg_m.rtkgunit_desc,g_rtkg_m.rtkgownid_desc,g_rtkg_m.rtkgowndp_desc,g_rtkg_m.rtkgcrtid_desc, 
       g_rtkg_m.rtkgcrtdp_desc,g_rtkg_m.rtkgmodid_desc
   
   #遮罩相關處理
   LET g_rtkg_m_mask_o.* =  g_rtkg_m.*
   CALL arti730_rtkg_t_mask()
   LET g_rtkg_m_mask_n.* =  g_rtkg_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   CALL arti730_set_act_visible()
   CALL arti730_set_act_no_visible()
 
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #保存單頭舊值
   LET g_rtkg_m_t.* = g_rtkg_m.*
   LET g_rtkg_m_o.* = g_rtkg_m.*
   
   LET g_data_owner = g_rtkg_m.rtkgownid      
   LET g_data_dept  = g_rtkg_m.rtkgowndp
   
   #重新顯示
   CALL arti730_show()
   
 
END FUNCTION
 
{</section>}
 
{<section id="arti730.insert" >}
#+ 資料新增
PRIVATE FUNCTION arti730_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point
   #add-point:insert段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   DEFINE l_insert       LIKE type_t.num5
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   CLEAR FORM #清畫面欄位內容
   INITIALIZE g_rtkg_m.* LIKE rtkg_t.*             #DEFAULT 設定
   LET g_rtkg001_t = NULL
 
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   
   WHILE TRUE
      
      #公用欄位給值
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rtkg_m.rtkgownid = g_user
      LET g_rtkg_m.rtkgowndp = g_dept
      LET g_rtkg_m.rtkgcrtid = g_user
      LET g_rtkg_m.rtkgcrtdp = g_dept 
      LET g_rtkg_m.rtkgcrtdt = cl_get_current()
      LET g_rtkg_m.rtkgmodid = g_user
      LET g_rtkg_m.rtkgmoddt = cl_get_current()
      LET g_rtkg_m.rtkgstus = 'Y'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_rtkg_m.rtkgstus = "Y"
      LET g_rtkg_m.rtkg020 = "1"
 
 
      #add-point:單頭預設值 name="insert.default"
      CALL s_aooi500_default(g_prog,'rtkgunit',g_rtkg_m.rtkgunit)
         RETURNING l_insert,g_rtkg_m.rtkgunit
      IF l_insert = FALSE THEN
         RETURN
      END IF
      #LET g_rtkg_m.rtkgunit = g_site
      LET g_rtkg_m.rtkg020 = '1'
      CALL s_desc_get_department_desc(g_rtkg_m.rtkgunit) RETURNING g_rtkg_m.rtkgunit_desc
      DISPLAY BY NAME g_rtkg_m.rtkgunit_desc
      LET g_rtkg_m_t.* = g_rtkg_m.*
      LET g_rtkg_m_o.* = g_rtkg_m.*
      #end add-point   
     
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtkg_m.rtkgstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
     
      #資料輸入
      CALL arti730_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         #取消
         LET INT_FLAG = 0
         DISPLAY g_current_cnt TO FORMONLY.h_count     #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index     #當下筆數
         INITIALIZE g_rtkg_m.* TO NULL
         CALL arti730_show()
         CALL s_transaction_end('N','0')
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF
 
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   CALL arti730_set_act_visible()
   CALL arti730_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_rtkg001_t = g_rtkg_m.rtkg001
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtkgent = " ||g_enterprise|| " AND",
                      " rtkg001 = '", g_rtkg_m.rtkg001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL arti730_browser_fill("","")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
 
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE arti730_master_referesh USING g_rtkg_m.rtkg001 INTO g_rtkg_m.rtkgunit,g_rtkg_m.rtkg001,g_rtkg_m.rtkgstus, 
       g_rtkg_m.rtkg011,g_rtkg_m.rtkg021,g_rtkg_m.rtkg022,g_rtkg_m.rtkg023,g_rtkg_m.rtkg020,g_rtkg_m.rtkg031, 
       g_rtkg_m.rtkg032,g_rtkg_m.rtkg033,g_rtkg_m.rtkg041,g_rtkg_m.rtkg042,g_rtkg_m.rtkg002,g_rtkg_m.rtkgownid, 
       g_rtkg_m.rtkgowndp,g_rtkg_m.rtkgcrtid,g_rtkg_m.rtkgcrtdp,g_rtkg_m.rtkgcrtdt,g_rtkg_m.rtkgmodid, 
       g_rtkg_m.rtkgmoddt,g_rtkg_m.rtkgunit_desc,g_rtkg_m.rtkgownid_desc,g_rtkg_m.rtkgowndp_desc,g_rtkg_m.rtkgcrtid_desc, 
       g_rtkg_m.rtkgcrtdp_desc,g_rtkg_m.rtkgmodid_desc
   
   
   #遮罩相關處理
   LET g_rtkg_m_mask_o.* =  g_rtkg_m.*
   CALL arti730_rtkg_t_mask()
   LET g_rtkg_m_mask_n.* =  g_rtkg_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtkg_m.rtkgunit,g_rtkg_m.rtkgunit_desc,g_rtkg_m.rtkg001,g_rtkg_m.rtkgl003,g_rtkg_m.rtkgl004, 
       g_rtkg_m.rtkgstus,g_rtkg_m.rtkg011,g_rtkg_m.rtkg021,g_rtkg_m.rtkg022,g_rtkg_m.rtkg023,g_rtkg_m.rtkg020, 
       g_rtkg_m.rtkg031,g_rtkg_m.rtkg032,g_rtkg_m.rtkg033,g_rtkg_m.rtkg041,g_rtkg_m.rtkg042,g_rtkg_m.rtkg002, 
       g_rtkg_m.rtkgownid,g_rtkg_m.rtkgownid_desc,g_rtkg_m.rtkgowndp,g_rtkg_m.rtkgowndp_desc,g_rtkg_m.rtkgcrtid, 
       g_rtkg_m.rtkgcrtid_desc,g_rtkg_m.rtkgcrtdp,g_rtkg_m.rtkgcrtdp_desc,g_rtkg_m.rtkgcrtdt,g_rtkg_m.rtkgmodid, 
       g_rtkg_m.rtkgmodid_desc,g_rtkg_m.rtkgmoddt
 
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
 
   LET g_data_owner = g_rtkg_m.rtkgownid      
   LET g_data_dept  = g_rtkg_m.rtkgowndp
 
   #功能已完成,通報訊息中心
   CALL arti730_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="arti730.modify" >}
#+ 資料修改
PRIVATE FUNCTION arti730_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="modify.pre_function"
   
   #end add-point
   
   #先確定key值無遺漏
   IF g_rtkg_m.rtkg001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF 
 
   ERROR ""
  
   #備份key值
   LET g_rtkg001_t = g_rtkg_m.rtkg001
 
   
   CALL s_transaction_begin()
   
   #先lock資料
   OPEN arti730_cl USING g_enterprise,g_rtkg_m.rtkg001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN arti730_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE arti730_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE arti730_master_referesh USING g_rtkg_m.rtkg001 INTO g_rtkg_m.rtkgunit,g_rtkg_m.rtkg001,g_rtkg_m.rtkgstus, 
       g_rtkg_m.rtkg011,g_rtkg_m.rtkg021,g_rtkg_m.rtkg022,g_rtkg_m.rtkg023,g_rtkg_m.rtkg020,g_rtkg_m.rtkg031, 
       g_rtkg_m.rtkg032,g_rtkg_m.rtkg033,g_rtkg_m.rtkg041,g_rtkg_m.rtkg042,g_rtkg_m.rtkg002,g_rtkg_m.rtkgownid, 
       g_rtkg_m.rtkgowndp,g_rtkg_m.rtkgcrtid,g_rtkg_m.rtkgcrtdp,g_rtkg_m.rtkgcrtdt,g_rtkg_m.rtkgmodid, 
       g_rtkg_m.rtkgmoddt,g_rtkg_m.rtkgunit_desc,g_rtkg_m.rtkgownid_desc,g_rtkg_m.rtkgowndp_desc,g_rtkg_m.rtkgcrtid_desc, 
       g_rtkg_m.rtkgcrtdp_desc,g_rtkg_m.rtkgmodid_desc
 
   #檢查是否允許此動作
   IF NOT arti730_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #遮罩相關處理
   LET g_rtkg_m_mask_o.* =  g_rtkg_m.*
   CALL arti730_rtkg_t_mask()
   LET g_rtkg_m_mask_n.* =  g_rtkg_m.*
   
   
 
   #顯示資料
   CALL arti730_show()
   
   WHILE TRUE
      LET g_rtkg_m.rtkg001 = g_rtkg001_t
 
      
      #寫入修改者/修改日期資訊
      LET g_rtkg_m.rtkgmodid = g_user 
LET g_rtkg_m.rtkgmoddt = cl_get_current()
LET g_rtkg_m.rtkgmodid_desc = cl_get_username(g_rtkg_m.rtkgmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
 
      #資料輸入
      CALL arti730_input("u")     
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_rtkg_m.* = g_rtkg_m_t.*
         CALL arti730_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         EXIT WHILE
      END IF
 
      #若有modid跟moddt則進行update
      UPDATE rtkg_t SET (rtkgmodid,rtkgmoddt) = (g_rtkg_m.rtkgmodid,g_rtkg_m.rtkgmoddt)
       WHERE rtkgent = g_enterprise AND rtkg001 = g_rtkg001_t
 
 
      EXIT WHILE
      
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   CALL arti730_set_act_visible()
   CALL arti730_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " rtkgent = " ||g_enterprise|| " AND",
                      " rtkg001 = '", g_rtkg_m.rtkg001, "' "
 
   #填到對應位置
   CALL arti730_browser_fill(g_wc,"")
 
   CLOSE arti730_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL arti730_msgcentre_notify('modify')
   
   LET g_worksheet_hidden = 0
   
END FUNCTION   
 
{</section>}
 
{<section id="arti730.input" >}
#+ 資料輸入
PRIVATE FUNCTION arti730_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point
   DEFINE p_cmd           LIKE type_t.chr1
   DEFINE l_ac_t          LIKE type_t.num10       #未取消的ARRAY CNT 
   DEFINE l_n             LIKE type_t.num10       #檢查重複用  
   DEFINE l_cnt           LIKE type_t.num10       #檢查重複用  
   DEFINE l_lock_sw       LIKE type_t.chr1        #單身鎖住否  
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否  
   DEFINE l_count         LIKE type_t.num10
   DEFINE l_i             LIKE type_t.num10
   DEFINE l_insert        LIKE type_t.num10
   DEFINE ls_return       STRING
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:input段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE l_where         STRING
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_errno         LIKE type_t.chr10
   #end add-point
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #切換至輸入畫面
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtkg_m.rtkgunit,g_rtkg_m.rtkgunit_desc,g_rtkg_m.rtkg001,g_rtkg_m.rtkgl003,g_rtkg_m.rtkgl004, 
       g_rtkg_m.rtkgstus,g_rtkg_m.rtkg011,g_rtkg_m.rtkg021,g_rtkg_m.rtkg022,g_rtkg_m.rtkg023,g_rtkg_m.rtkg020, 
       g_rtkg_m.rtkg031,g_rtkg_m.rtkg032,g_rtkg_m.rtkg033,g_rtkg_m.rtkg041,g_rtkg_m.rtkg042,g_rtkg_m.rtkg002, 
       g_rtkg_m.rtkgownid,g_rtkg_m.rtkgownid_desc,g_rtkg_m.rtkgowndp,g_rtkg_m.rtkgowndp_desc,g_rtkg_m.rtkgcrtid, 
       g_rtkg_m.rtkgcrtid_desc,g_rtkg_m.rtkgcrtdp,g_rtkg_m.rtkgcrtdp_desc,g_rtkg_m.rtkgcrtdt,g_rtkg_m.rtkgmodid, 
       g_rtkg_m.rtkgmodid_desc,g_rtkg_m.rtkgmoddt
   
   CALL cl_set_head_visible("","YES")  
   
   #a-新增,r-複製,u-修改
   IF p_cmd = 'r' THEN
      #此段落的r動作等同於a
      LET p_cmd = 'a'
   END IF
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   LET g_qryparam.state = "i"
   
   #控制key欄位可否輸入
   CALL arti730_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL arti730_set_no_entry(p_cmd)
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_rtkg_m.rtkgunit,g_rtkg_m.rtkg001,g_rtkg_m.rtkgl003,g_rtkg_m.rtkgl004,g_rtkg_m.rtkgstus, 
          g_rtkg_m.rtkg011,g_rtkg_m.rtkg021,g_rtkg_m.rtkg022,g_rtkg_m.rtkg023,g_rtkg_m.rtkg020,g_rtkg_m.rtkg031, 
          g_rtkg_m.rtkg032,g_rtkg_m.rtkg033,g_rtkg_m.rtkg041,g_rtkg_m.rtkg042,g_rtkg_m.rtkg002 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item name="input.master_input.update_item"
            IF NOT cl_null(g_rtkg_m.rtkg001)  THEN
               CALL n_rtkgl(g_rtkg_m.rtkg001)
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_rtkg_m.rtkg001
               CALL ap_ref_array2(g_ref_fields," SELECT rtkgl003,rtkgl004 FROM rtkgl_t WHERE rtkglent = '"||g_enterprise||"' AND rtkgl001 = ? AND rtkgl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_rtkg_m.rtkgl003 = g_rtn_fields[1]
               LET g_rtkg_m.rtkgl004 = g_rtn_fields[2]
               DISPLAY BY NAME g_rtkg_m.rtkgl003,g_rtkg_m.rtkgl004
            END IF
               #END add-point
            END IF
 
 
 
 
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            #其他table資料備份(確定是否更改用)
            LET g_master_multi_table_t.rtkgl001 = g_rtkg_m.rtkg001
LET g_master_multi_table_t.rtkgl003 = g_rtkg_m.rtkgl003
LET g_master_multi_table_t.rtkgl004 = g_rtkg_m.rtkgl004
 
            #add-point:input開始前 name="input.before.input"
            LET g_rtkg_m_o.* = g_rtkg_m.*
            NEXT FIELD rtkgunit
            #end add-point
   
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkgunit
            
            #add-point:AFTER FIELD rtkgunit name="input.a.rtkgunit"
            LET g_rtkg_m.rtkgunit_desc = ' '
            DISPLAY BY NAME g_rtkg_m.rtkgunit_desc
            IF NOT cl_null(g_rtkg_m.rtkgunit) THEN
#               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtkg_m.rtkgunit != g_rtkg_m_o.rtkgunit OR g_rtkg_m_o.rtkgunit IS NULL )) THEN   #150427-00012#6 20150707 mark by beckxie
               IF g_rtkg_m.rtkgunit != g_rtkg_m_o.rtkgunit OR cl_null(g_rtkg_m_o.rtkgunit) THEN   #150427-00012#6 20150707 add by beckxie
                  CALL s_aooi500_chk(g_prog,'rtkgunit',g_rtkg_m.rtkgunit,g_site)
                     RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = ""
                     LET g_errparam.code   = l_errno
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     LET g_rtkg_m.rtkgunit = g_rtkg_m_o.rtkgunit
                     CALL s_desc_get_department_desc(g_rtkg_m.rtkgunit) RETURNING g_rtkg_m.rtkgunit_desc
                     DISPLAY BY NAME g_rtkg_m.rtkgunit_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_department_desc(g_rtkg_m.rtkgunit) RETURNING g_rtkg_m.rtkgunit_desc
            DISPLAY BY NAME g_rtkg_m.rtkgunit_desc
            LET g_rtkg_m_o.rtkgunit = g_rtkg_m.rtkgunit
            CALL arti730_set_entry(p_cmd)
            CALL arti730_set_no_entry(p_cmd)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkgunit
            #add-point:BEFORE FIELD rtkgunit name="input.b.rtkgunit"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkgunit
            #add-point:ON CHANGE rtkgunit name="input.g.rtkgunit"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg001
            #add-point:BEFORE FIELD rtkg001 name="input.b.rtkg001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg001
            
            #add-point:AFTER FIELD rtkg001 name="input.a.rtkg001"
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_rtkg_m.rtkg001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_rtkg_m.rtkg001 != g_rtkg001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtkg_t WHERE "||"rtkgent = '" ||g_enterprise|| "' AND "||"rtkg001 = '"||g_rtkg_m.rtkg001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkg001
            #add-point:ON CHANGE rtkg001 name="input.g.rtkg001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkgl003
            #add-point:BEFORE FIELD rtkgl003 name="input.b.rtkgl003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkgl003
            
            #add-point:AFTER FIELD rtkgl003 name="input.a.rtkgl003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkgl003
            #add-point:ON CHANGE rtkgl003 name="input.g.rtkgl003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkgl004
            #add-point:BEFORE FIELD rtkgl004 name="input.b.rtkgl004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkgl004
            
            #add-point:AFTER FIELD rtkgl004 name="input.a.rtkgl004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkgl004
            #add-point:ON CHANGE rtkgl004 name="input.g.rtkgl004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkgstus
            #add-point:BEFORE FIELD rtkgstus name="input.b.rtkgstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkgstus
            
            #add-point:AFTER FIELD rtkgstus name="input.a.rtkgstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkgstus
            #add-point:ON CHANGE rtkgstus name="input.g.rtkgstus"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg011
            #add-point:BEFORE FIELD rtkg011 name="input.b.rtkg011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg011
            
            #add-point:AFTER FIELD rtkg011 name="input.a.rtkg011"
            IF NOT cl_null(g_rtkg_m.rtkg011) THEN
               #150427-00012#6 150528 mark by beckxie
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtkg_m.rtkg011 != g_rtkg_m_o.rtkg011 OR g_rtkg_m_o.rtkg011 IS NULL )) THEN
               IF g_rtkg_m.rtkg011 != g_rtkg_m_o.rtkg011 OR cl_null(g_rtkg_m_o.rtkg011) THEN   #150427-00012#6 150528 add by beckxie
                  #可輸入的英文字母只有a~d，4個字母
                  CALL arti730_chk_symbol(g_rtkg_m.rtkg011,4)
                  IF NOT cl_null(g_errno) THEN
                     CASE g_errno
                        #輸入的英文字母必須由%1~%2！;請重新輸入！
                        WHEN 'art-00339'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        #輸入公式裡必須打'('　')'　'+'　'-'　'*'　'/' 　%1~%2　數字！;請重新輸入！
                        WHEN 'art-00345'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        OTHERWISE
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                     END CASE
                     IF p_cmd = 'u' THEN
                        LET g_rtkg_m.rtkg011 = g_rtkg_m_o.rtkg011
                     END IF
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_rtkg_m_o.rtkg011 = g_rtkg_m.rtkg011
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkg011
            #add-point:ON CHANGE rtkg011 name="input.g.rtkg011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg021
            #add-point:BEFORE FIELD rtkg021 name="input.b.rtkg021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg021
            
            #add-point:AFTER FIELD rtkg021 name="input.a.rtkg021"
            IF NOT cl_null(g_rtkg_m.rtkg021) THEN
               #150427-00012#6 150528 mark by beckxie
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtkg_m.rtkg021 != g_rtkg_m_o.rtkg021 OR g_rtkg_m_o.rtkg021 IS NULL )) THEN
               IF g_rtkg_m.rtkg021 != g_rtkg_m_o.rtkg021 OR cl_null(g_rtkg_m_o.rtkg021) THEN   #150427-00012#6 150528 add by beckxie
                  #可輸入的英文字母只有a~g，7個字母
                  CALL arti730_chk_symbol(g_rtkg_m.rtkg021,7)
                  IF NOT cl_null(g_errno) THEN
                     CASE g_errno
                        #輸入的英文字母必須由%1~%2！;請重新輸入！
                        WHEN 'art-00339'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        #輸入公式裡必須打'('　')'　'+'　'-'　'*'　'/' 　%1~%2　數字！;請重新輸入！
                        WHEN 'art-00345'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        OTHERWISE
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                     END CASE
                     IF p_cmd = 'u' THEN
                        LET g_rtkg_m.rtkg021 = g_rtkg_m_o.rtkg021
                     END IF
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_rtkg_m_o.rtkg021 = g_rtkg_m.rtkg021
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkg021
            #add-point:ON CHANGE rtkg021 name="input.g.rtkg021"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg022
            #add-point:BEFORE FIELD rtkg022 name="input.b.rtkg022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg022
            
            #add-point:AFTER FIELD rtkg022 name="input.a.rtkg022"
            IF NOT cl_null(g_rtkg_m.rtkg022) THEN
               #150427-00012#6 150528 mark by beckxie
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtkg_m.rtkg022 != g_rtkg_m_o.rtkg022 OR g_rtkg_m_o.rtkg022 IS NULL )) THEN
               IF g_rtkg_m.rtkg022 != g_rtkg_m_o.rtkg022 OR cl_null(g_rtkg_m_o.rtkg022) THEN   #150427-00012#6 150528 add by beckxie
                  #可輸入的英文字母只有a~g，7個字母
                  CALL arti730_chk_symbol(g_rtkg_m.rtkg022,7)
                  IF NOT cl_null(g_errno) THEN
                     CASE g_errno
                        #輸入的英文字母必須由%1~%2！;請重新輸入！
                        WHEN 'art-00339'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        #輸入公式裡必須打'('　')'　'+'　'-'　'*'　'/' 　%1~%2　數字！;請重新輸入！
                        WHEN 'art-00345'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        OTHERWISE
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                     END CASE
                     IF p_cmd = 'u' THEN
                        LET g_rtkg_m.rtkg022 = g_rtkg_m_o.rtkg022
                     END IF
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_rtkg_m_o.rtkg022 = g_rtkg_m.rtkg022
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkg022
            #add-point:ON CHANGE rtkg022 name="input.g.rtkg022"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg023
            #add-point:BEFORE FIELD rtkg023 name="input.b.rtkg023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg023
            
            #add-point:AFTER FIELD rtkg023 name="input.a.rtkg023"
            IF NOT cl_null(g_rtkg_m.rtkg023) THEN
               #150427-00012#6 150528 mark by beckxie
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtkg_m.rtkg023 != g_rtkg_m_o.rtkg023 OR g_rtkg_m_o.rtkg023 IS NULL )) THEN               
               IF g_rtkg_m.rtkg023 != g_rtkg_m_o.rtkg023 OR cl_null(g_rtkg_m_o.rtkg023) THEN   #150427-00012#6 150528 add by beckxie
                  #可輸入的英文字母只有a~g，7個字母
                  CALL arti730_chk_symbol(g_rtkg_m.rtkg023,7)
                  IF NOT cl_null(g_errno) THEN
                     CASE g_errno
                        #輸入的英文字母必須由%1~%2！;請重新輸入！
                        WHEN 'art-00339'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        #輸入公式裡必須打'('　')'　'+'　'-'　'*'　'/' 　%1~%2　數字！;請重新輸入！
                        WHEN 'art-00345'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        OTHERWISE
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                     END CASE
                     IF p_cmd = 'u' THEN
                        LET g_rtkg_m.rtkg023 = g_rtkg_m_o.rtkg023
                     END IF
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_rtkg_m_o.rtkg023 = g_rtkg_m.rtkg023
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkg023
            #add-point:ON CHANGE rtkg023 name="input.g.rtkg023"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg020
            #add-point:BEFORE FIELD rtkg020 name="input.b.rtkg020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg020
            
            #add-point:AFTER FIELD rtkg020 name="input.a.rtkg020"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkg020
            #add-point:ON CHANGE rtkg020 name="input.g.rtkg020"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg031
            #add-point:BEFORE FIELD rtkg031 name="input.b.rtkg031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg031
            
            #add-point:AFTER FIELD rtkg031 name="input.a.rtkg031"
            IF NOT cl_null(g_rtkg_m.rtkg031) THEN
               #150427-00012#6 150528 mark by beckxie
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtkg_m.rtkg031 != g_rtkg_m_o.rtkg031 OR g_rtkg_m_o.rtkg031 IS NULL )) THEN               
               IF g_rtkg_m.rtkg031 != g_rtkg_m_o.rtkg031 OR cl_null(g_rtkg_m_o.rtkg031) THEN   #150427-00012#6 150528 add by beckxie
                  #可輸入的英文字母只有a~h，8個字母
                  CALL arti730_chk_symbol(g_rtkg_m.rtkg031,8)
                  IF NOT cl_null(g_errno) THEN
                     CASE g_errno
                        #輸入的英文字母必須由%1~%2！;請重新輸入！
                        WHEN 'art-00339'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        #輸入公式裡必須打'('　')'　'+'　'-'　'*'　'/' 　%1~%2　數字！;請重新輸入！
                        WHEN 'art-00345'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        OTHERWISE
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                     END CASE
                     IF p_cmd = 'u' THEN
                        LET g_rtkg_m.rtkg031 = g_rtkg_m_o.rtkg031
                     END IF
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_rtkg_m_o.rtkg031 = g_rtkg_m.rtkg031
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkg031
            #add-point:ON CHANGE rtkg031 name="input.g.rtkg031"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg032
            #add-point:BEFORE FIELD rtkg032 name="input.b.rtkg032"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg032
            
            #add-point:AFTER FIELD rtkg032 name="input.a.rtkg032"
            IF NOT cl_null(g_rtkg_m.rtkg032) THEN
               #150427-00012#6 150528 mark by beckxie
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtkg_m.rtkg032 != g_rtkg_m_o.rtkg032 OR g_rtkg_m_o.rtkg032 IS NULL )) THEN               
               IF g_rtkg_m.rtkg032 != g_rtkg_m_o.rtkg032 OR cl_null(g_rtkg_m_o.rtkg032) THEN   #150427-00012#6 150528 add by beckxie
                  #可輸入的英文字母只有a~h，8個字母
                  CALL arti730_chk_symbol(g_rtkg_m.rtkg032,8)
                  IF NOT cl_null(g_errno) THEN
                     CASE g_errno
                        #輸入的英文字母必須由%1~%2！;請重新輸入！
                        WHEN 'art-00339'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        #輸入公式裡必須打'('　')'　'+'　'-'　'*'　'/' 　%1~%2　數字！;請重新輸入！
                        WHEN 'art-00345'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        OTHERWISE
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                     END CASE
                     LET g_rtkg_m.rtkg032 = g_rtkg_m_o.rtkg032
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_rtkg_m_o.rtkg032 = g_rtkg_m.rtkg032
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkg032
            #add-point:ON CHANGE rtkg032 name="input.g.rtkg032"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg033
            #add-point:BEFORE FIELD rtkg033 name="input.b.rtkg033"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg033
            
            #add-point:AFTER FIELD rtkg033 name="input.a.rtkg033"
            IF NOT cl_null(g_rtkg_m.rtkg033) THEN
               #150427-00012#6 150528 mark by beckxie
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtkg_m.rtkg033 != g_rtkg_m_o.rtkg033 OR g_rtkg_m_o.rtkg033 IS NULL )) THEN              
               IF g_rtkg_m.rtkg033 != g_rtkg_m_o.rtkg033 OR cl_null(g_rtkg_m_o.rtkg033) THEN   #150427-00012#6 150528 add by beckxie
                  #可輸入的英文字母只有a~h，8個字母
                  CALL arti730_chk_symbol(g_rtkg_m.rtkg033,8)
                  IF NOT cl_null(g_errno) THEN
                     CASE g_errno
                        #輸入的英文字母必須由%1~%2！;請重新輸入！
                        WHEN 'art-00339'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        #輸入公式裡必須打'('　')'　'+'　'-'　'*'　'/' 　%1~%2　數字！;請重新輸入！
                        WHEN 'art-00345'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        OTHERWISE
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                     END CASE
                     LET g_rtkg_m.rtkg033 = g_rtkg_m_o.rtkg033
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_rtkg_m_o.rtkg033 = g_rtkg_m.rtkg033
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkg033
            #add-point:ON CHANGE rtkg033 name="input.g.rtkg033"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg041
            #add-point:BEFORE FIELD rtkg041 name="input.b.rtkg041"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg041
            
            #add-point:AFTER FIELD rtkg041 name="input.a.rtkg041"
            IF NOT cl_null(g_rtkg_m.rtkg041) THEN
               #150427-00012#6 150528 mark by beckxie
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtkg_m.rtkg041 != g_rtkg_m_o.rtkg041 OR g_rtkg_m_o.rtkg041 IS NULL )) THEN              
               IF g_rtkg_m.rtkg041 != g_rtkg_m_o.rtkg041 OR cl_null(g_rtkg_m_o.rtkg041) THEN   #150427-00012#6 150528 add by beckxie
                  #可輸入的英文字母只有a~g，7個字母
                  CALL arti730_chk_symbol(g_rtkg_m.rtkg041,7)
                  IF NOT cl_null(g_errno) THEN
                     CASE g_errno
                        #輸入的英文字母必須由%1~%2！;請重新輸入！
                        WHEN 'art-00339'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        #輸入公式裡必須打'('　')'　'+'　'-'　'*'　'/' 　%1~%2　數字！;請重新輸入！
                        WHEN 'art-00345'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        OTHERWISE
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                     END CASE
                     LET g_rtkg_m.rtkg041 = g_rtkg_m_o.rtkg041
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_rtkg_m_o.rtkg041 = g_rtkg_m.rtkg041
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkg041
            #add-point:ON CHANGE rtkg041 name="input.g.rtkg041"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg042
            #add-point:BEFORE FIELD rtkg042 name="input.b.rtkg042"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg042
            
            #add-point:AFTER FIELD rtkg042 name="input.a.rtkg042"
            IF NOT cl_null(g_rtkg_m.rtkg042) THEN
               #150427-00012#6 150528 mark by beckxie
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtkg_m.rtkg042 != g_rtkg_m_o.rtkg042 OR g_rtkg_m_o.rtkg042 IS NULL )) THEN
               IF g_rtkg_m.rtkg042 != g_rtkg_m_o.rtkg042 OR cl_null(g_rtkg_m_o.rtkg042) THEN   #150427-00012#6 150528 add by beckxie
                  #可輸入的英文字母只有a~g，7個字母
                  CALL arti730_chk_symbol(g_rtkg_m.rtkg042,7)
                  IF NOT cl_null(g_errno) THEN
                     CASE g_errno
                        #輸入的英文字母必須由%1~%2！;請重新輸入！
                        WHEN 'art-00339'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        #輸入公式裡必須打'('　')'　'+'　'-'　'*'　'/' 　%1~%2　數字！;請重新輸入！
                        WHEN 'art-00345'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        OTHERWISE
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                     END CASE
                     LET g_rtkg_m.rtkg042 = g_rtkg_m_o.rtkg042
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_rtkg_m_o.rtkg042 = g_rtkg_m.rtkg042
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkg042
            #add-point:ON CHANGE rtkg042 name="input.g.rtkg042"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtkg002
            #add-point:BEFORE FIELD rtkg002 name="input.b.rtkg002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtkg002
            
            #add-point:AFTER FIELD rtkg002 name="input.a.rtkg002"
            IF NOT cl_null(g_rtkg_m.rtkg002) THEN
               #150427-00012#6 150528 mark by beckxie
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtkg_m.rtkg002 != g_rtkg_m_o.rtkg002 OR g_rtkg_m_o.rtkg002 IS NULL )) THEN
               IF g_rtkg_m.rtkg002 != g_rtkg_m_o.rtkg002 OR cl_null(g_rtkg_m_o.rtkg002) THEN   #150427-00012#6 150528 add by beckxie
                  #可輸入的英文字母只有a~d，4個字母
                  CALL arti730_chk_symbol(g_rtkg_m.rtkg002,4)
                  IF NOT cl_null(g_errno) THEN
                     CASE g_errno
                        #輸入的英文字母必須由%1~%2！;請重新輸入！
                        WHEN 'art-00339'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        #輸入公式裡必須打'('　')'　'+'　'-'　'*'　'/' 　%1~%2　數字！;請重新輸入！
                        WHEN 'art-00345'
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = NULL
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                        OTHERWISE
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = g_errno
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                     END CASE
                     LET g_rtkg_m.rtkg002 = g_rtkg_m_o.rtkg002
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_rtkg_m_o.rtkg002 = g_rtkg_m.rtkg002
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtkg002
            #add-point:ON CHANGE rtkg002 name="input.g.rtkg002"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.rtkgunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkgunit
            #add-point:ON ACTION controlp INFIELD rtkgunit name="input.c.rtkgunit"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtkg_m.rtkgunit             #給予default值
            
            #給予arg
            CALL s_aooi500_q_where(g_prog,'rtkgunit',g_site,'i') RETURNING l_where  #150308-00001#5  By benson add 'i'
            LET g_qryparam.where = l_where
            CALL q_ooef001_24()
            LET g_rtkg_m.rtkgunit = g_qryparam.return1
            DISPLAY g_rtkg_m.rtkgunit TO rtkgunit
            CALL s_desc_get_department_desc(g_rtkg_m.rtkgunit) RETURNING g_rtkg_m.rtkgunit_desc
            DISPLAY BY NAME g_rtkg_m.rtkgunit_desc
            NEXT FIELD rtkgunit                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.rtkg001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg001
            #add-point:ON ACTION controlp INFIELD rtkg001 name="input.c.rtkg001"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtkgl003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkgl003
            #add-point:ON ACTION controlp INFIELD rtkgl003 name="input.c.rtkgl003"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtkgl004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkgl004
            #add-point:ON ACTION controlp INFIELD rtkgl004 name="input.c.rtkgl004"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtkgstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkgstus
            #add-point:ON ACTION controlp INFIELD rtkgstus name="input.c.rtkgstus"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtkg011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg011
            #add-point:ON ACTION controlp INFIELD rtkg011 name="input.c.rtkg011"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtkg021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg021
            #add-point:ON ACTION controlp INFIELD rtkg021 name="input.c.rtkg021"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtkg022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg022
            #add-point:ON ACTION controlp INFIELD rtkg022 name="input.c.rtkg022"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtkg023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg023
            #add-point:ON ACTION controlp INFIELD rtkg023 name="input.c.rtkg023"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtkg020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg020
            #add-point:ON ACTION controlp INFIELD rtkg020 name="input.c.rtkg020"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtkg031
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg031
            #add-point:ON ACTION controlp INFIELD rtkg031 name="input.c.rtkg031"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtkg032
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg032
            #add-point:ON ACTION controlp INFIELD rtkg032 name="input.c.rtkg032"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtkg033
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg033
            #add-point:ON ACTION controlp INFIELD rtkg033 name="input.c.rtkg033"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtkg041
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg041
            #add-point:ON ACTION controlp INFIELD rtkg041 name="input.c.rtkg041"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtkg042
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg042
            #add-point:ON ACTION controlp INFIELD rtkg042 name="input.c.rtkg042"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtkg002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtkg002
            #add-point:ON ACTION controlp INFIELD rtkg002 name="input.c.rtkg002"
            
            #END add-point
 
 
 #欄位開窗
 
         AFTER INPUT
            #若點選cancel則離開dialog
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
  
            IF p_cmd <> "u" THEN
               #當p_cmd不為u代表為新增/複製
               LET l_count = 1  
 
               #確定新增的資料不存在(不重複)
               SELECT COUNT(1) INTO l_count FROM rtkg_t
                WHERE rtkgent = g_enterprise AND rtkg001 = g_rtkg_m.rtkg001
 
               IF l_count = 0 THEN
               
                  #add-point:單頭新增前 name="input.head.b_insert"
                  
                  #end add-point
               
                  #將新增的單頭資料寫入資料庫
                  INSERT INTO rtkg_t (rtkgent,rtkgunit,rtkg001,rtkgstus,rtkg011,rtkg021,rtkg022,rtkg023, 
                      rtkg020,rtkg031,rtkg032,rtkg033,rtkg041,rtkg042,rtkg002,rtkgownid,rtkgowndp,rtkgcrtid, 
                      rtkgcrtdp,rtkgcrtdt,rtkgmodid,rtkgmoddt)
                  VALUES (g_enterprise,g_rtkg_m.rtkgunit,g_rtkg_m.rtkg001,g_rtkg_m.rtkgstus,g_rtkg_m.rtkg011, 
                      g_rtkg_m.rtkg021,g_rtkg_m.rtkg022,g_rtkg_m.rtkg023,g_rtkg_m.rtkg020,g_rtkg_m.rtkg031, 
                      g_rtkg_m.rtkg032,g_rtkg_m.rtkg033,g_rtkg_m.rtkg041,g_rtkg_m.rtkg042,g_rtkg_m.rtkg002, 
                      g_rtkg_m.rtkgownid,g_rtkg_m.rtkgowndp,g_rtkg_m.rtkgcrtid,g_rtkg_m.rtkgcrtdp,g_rtkg_m.rtkgcrtdt, 
                      g_rtkg_m.rtkgmodid,g_rtkg_m.rtkgmoddt) 
                  
                  #add-point:單頭新增中 name="input.head.m_insert"
                  
                  #end add-point
                  
                  #若寫入錯誤則提示錯誤訊息並返回輸入頁面
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtkg_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
                  
                  
                  
                  #資料多語言用-增/改
                           INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_rtkg_m.rtkg001 = g_master_multi_table_t.rtkgl001 AND
         g_rtkg_m.rtkgl003 = g_master_multi_table_t.rtkgl003 AND 
         g_rtkg_m.rtkgl004 = g_master_multi_table_t.rtkgl004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'rtkglent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_rtkg_m.rtkg001
            LET l_field_keys[02] = 'rtkgl001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.rtkgl001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'rtkgl002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_rtkg_m.rtkgl003
            LET l_fields[01] = 'rtkgl003'
            LET l_vars[02] = g_rtkg_m.rtkgl004
            LET l_fields[02] = 'rtkgl004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'rtkgl_t')
         END IF 
 
                  
                  #add-point:單頭新增後 name="input.head.a_insert"
                  
                  #end add-point
                  
                  CALL s_transaction_end('Y','0')
               ELSE
                  CALL s_transaction_end('N','0')
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = g_rtkg_m.rtkg001
                  LET g_errparam.code   = "std-00006" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
               END IF 
            ELSE
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL arti730_rtkg_t_mask_restore('restore_mask_o')
               
               UPDATE rtkg_t SET (rtkgunit,rtkg001,rtkgstus,rtkg011,rtkg021,rtkg022,rtkg023,rtkg020, 
                   rtkg031,rtkg032,rtkg033,rtkg041,rtkg042,rtkg002,rtkgownid,rtkgowndp,rtkgcrtid,rtkgcrtdp, 
                   rtkgcrtdt,rtkgmodid,rtkgmoddt) = (g_rtkg_m.rtkgunit,g_rtkg_m.rtkg001,g_rtkg_m.rtkgstus, 
                   g_rtkg_m.rtkg011,g_rtkg_m.rtkg021,g_rtkg_m.rtkg022,g_rtkg_m.rtkg023,g_rtkg_m.rtkg020, 
                   g_rtkg_m.rtkg031,g_rtkg_m.rtkg032,g_rtkg_m.rtkg033,g_rtkg_m.rtkg041,g_rtkg_m.rtkg042, 
                   g_rtkg_m.rtkg002,g_rtkg_m.rtkgownid,g_rtkg_m.rtkgowndp,g_rtkg_m.rtkgcrtid,g_rtkg_m.rtkgcrtdp, 
                   g_rtkg_m.rtkgcrtdt,g_rtkg_m.rtkgmodid,g_rtkg_m.rtkgmoddt)
                WHERE rtkgent = g_enterprise AND rtkg001 = g_rtkg001_t #
 
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtkg_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtkg_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  OTHERWISE
                     
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_rtkg_m.rtkg001 = g_master_multi_table_t.rtkgl001 AND
         g_rtkg_m.rtkgl003 = g_master_multi_table_t.rtkgl003 AND 
         g_rtkg_m.rtkgl004 = g_master_multi_table_t.rtkgl004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'rtkglent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_rtkg_m.rtkg001
            LET l_field_keys[02] = 'rtkgl001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.rtkgl001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'rtkgl002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_rtkg_m.rtkgl003
            LET l_fields[01] = 'rtkgl003'
            LET l_vars[02] = g_rtkg_m.rtkgl004
            LET l_fields[02] = 'rtkgl004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'rtkgl_t')
         END IF 
 
                     
                     #將遮罩欄位進行遮蔽
                     CALL arti730_rtkg_t_mask_restore('restore_mask_n')
                     
                     #add-point:單頭修改後 name="input.head.a_update"
                     
                     #end add-point
                     #修改歷程記錄(單頭修改)
                     LET g_log1 = util.JSON.stringify(g_rtkg_m_t)
                     LET g_log2 = util.JSON.stringify(g_rtkg_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
               
            END IF
           #controlp
      END INPUT
      
      #add-point:input段more input  name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG
         #CALL cl_err_collect_init()
         #add-point:input段before_dialog  name="input.before_dialog"
         
         #end add-point
          
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name, g_fld_name, g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
         
      #放棄輸入
      ON ACTION cancel
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #在dialog 右上角 (X)
      ON ACTION close 
         LET INT_FLAG = TRUE 
         EXIT DIALOG
    
      #toolbar 離開
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="arti730.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION arti730_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point
   DEFINE l_newno     LIKE rtkg_t.rtkg001 
   DEFINE l_oldno     LIKE rtkg_t.rtkg001 
 
   DEFINE l_master    RECORD LIKE rtkg_t.*
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   DEFINE l_insert    LIKE type_t.num5
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   
   #先確定key值無遺漏
   IF g_rtkg_m.rtkg001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   #備份key值
   LET g_rtkg001_t = g_rtkg_m.rtkg001
 
   
   #清空key值
   LET g_rtkg_m.rtkg001 = ""
 
    
   CALL arti730_set_entry("a")
   CALL arti730_set_no_entry("a")
   
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rtkg_m.rtkgownid = g_user
      LET g_rtkg_m.rtkgowndp = g_dept
      LET g_rtkg_m.rtkgcrtid = g_user
      LET g_rtkg_m.rtkgcrtdp = g_dept 
      LET g_rtkg_m.rtkgcrtdt = cl_get_current()
      LET g_rtkg_m.rtkgmodid = g_user
      LET g_rtkg_m.rtkgmoddt = cl_get_current()
      LET g_rtkg_m.rtkgstus = 'Y'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   CALL s_aooi500_default(g_prog,'rtkgunit',g_rtkg_m.rtkgunit)
      RETURNING l_insert,g_rtkg_m.rtkgunit
   IF l_insert = FALSE THEN
      RETURN
   END IF
   #LET g_rtkg_m.rtkgunit = g_site
   LET g_rtkg_m.rtkg020 = '1'
   CALL s_desc_get_department_desc(g_rtkg_m.rtkgunit) RETURNING g_rtkg_m.rtkgunit_desc
   DISPLAY BY NAME g_rtkg_m.rtkgunit_desc
   LET g_rtkg_m_t.* = g_rtkg_m.*
   LET g_rtkg_m_o.* = g_rtkg_m.*
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtkg_m.rtkgstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   #資料輸入
   CALL arti730_input("r")
   
   IF INT_FLAG THEN
      #取消
      INITIALIZE g_rtkg_m.* TO NULL
      CALL arti730_show()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   CALL s_transaction_begin()
   
   #add-point:單頭複製前 name="reproduce.head.b_insert"
   
   #end add-point
   
   #add-point:單頭複製中 name="reproduce.head.m_insert"
   
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "rtkg_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單頭複製後 name="reproduce.head.a_insert"
   
   #end add-point
   
   CALL s_transaction_end('Y','0')
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   CALL arti730_set_act_visible()
   CALL arti730_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_rtkg001_t = g_rtkg_m.rtkg001
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtkgent = " ||g_enterprise|| " AND",
                      " rtkg001 = '", g_rtkg_m.rtkg001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL arti730_browser_fill("","")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
              
   LET g_data_owner = g_rtkg_m.rtkgownid      
   LET g_data_dept  = g_rtkg_m.rtkgowndp
              
   #功能已完成,通報訊息中心
   CALL arti730_msgcentre_notify('reproduce')
                 
END FUNCTION
 
{</section>}
 
{<section id="arti730.show" >}
#+ 資料顯示 
PRIVATE FUNCTION arti730_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:show段Function前置處理  name="show.before"
   
   #end add-point
   
   
   
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
    
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL arti730_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   CALL s_desc_get_department_desc(g_rtkg_m.rtkgunit) RETURNING g_rtkg_m.rtkgunit_desc
   DISPLAY BY NAME g_rtkg_m.rtkgunit_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkg_m.rtkg001
   CALL ap_ref_array2(g_ref_fields," SELECT rtkgl003,rtkgl004 FROM rtkgl_t WHERE rtkglent = '"||g_enterprise||"' AND rtkgl001 = ? AND rtkgl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_rtkg_m.rtkgl003 = g_rtn_fields[1] 
   LET g_rtkg_m.rtkgl004 = g_rtn_fields[2] 
   DISPLAY g_rtkg_m.rtkgl003,g_rtkg_m.rtkgl004 TO rtkgl003,rtkgl004
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkg_m.rtkgownid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_rtkg_m.rtkgownid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtkg_m.rtkgownid_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkg_m.rtkgowndp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtkg_m.rtkgowndp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtkg_m.rtkgowndp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkg_m.rtkgcrtid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_rtkg_m.rtkgcrtid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtkg_m.rtkgcrtid_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtkg_m.rtkgcrtdp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtkg_m.rtkgcrtdp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtkg_m.rtkgcrtdp_desc
   
   #160321-00021#1 Mark By Ken 160321(S)
   #CALL s_desc_get_person_desc(g_rtkg_m.rtkgmodid) RETURNING g_rtkg_m.rtkgowndp_desc
   #DISPLAY BY NAME g_rtkg_m.rtkgowndp_desc
   #160321-00021#1 Mark By Ken 160321(E)
   #end add-point
 
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtkg_m.rtkgunit,g_rtkg_m.rtkgunit_desc,g_rtkg_m.rtkg001,g_rtkg_m.rtkgl003,g_rtkg_m.rtkgl004, 
       g_rtkg_m.rtkgstus,g_rtkg_m.rtkg011,g_rtkg_m.rtkg021,g_rtkg_m.rtkg022,g_rtkg_m.rtkg023,g_rtkg_m.rtkg020, 
       g_rtkg_m.rtkg031,g_rtkg_m.rtkg032,g_rtkg_m.rtkg033,g_rtkg_m.rtkg041,g_rtkg_m.rtkg042,g_rtkg_m.rtkg002, 
       g_rtkg_m.rtkgownid,g_rtkg_m.rtkgownid_desc,g_rtkg_m.rtkgowndp,g_rtkg_m.rtkgowndp_desc,g_rtkg_m.rtkgcrtid, 
       g_rtkg_m.rtkgcrtid_desc,g_rtkg_m.rtkgcrtdp,g_rtkg_m.rtkgcrtdp_desc,g_rtkg_m.rtkgcrtdt,g_rtkg_m.rtkgmodid, 
       g_rtkg_m.rtkgmodid_desc,g_rtkg_m.rtkgmoddt
   
   #儲存PK
   LET l_ac = g_current_idx
   CALL arti730_set_pk_array()
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtkg_m.rtkgstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
 
   #顯示有特殊格式設定的欄位或說明
   CALL cl_show_fld_cont()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="arti730.delete" >}
#+ 資料刪除 
PRIVATE FUNCTION arti730_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   #先確定key值無遺漏
   IF g_rtkg_m.rtkg001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
    
   LET g_rtkg001_t = g_rtkg_m.rtkg001
 
   
   LET g_master_multi_table_t.rtkgl001 = g_rtkg_m.rtkg001
LET g_master_multi_table_t.rtkgl003 = g_rtkg_m.rtkgl003
LET g_master_multi_table_t.rtkgl004 = g_rtkg_m.rtkgl004
 
 
   OPEN arti730_cl USING g_enterprise,g_rtkg_m.rtkg001
 
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN arti730_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE arti730_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE arti730_master_referesh USING g_rtkg_m.rtkg001 INTO g_rtkg_m.rtkgunit,g_rtkg_m.rtkg001,g_rtkg_m.rtkgstus, 
       g_rtkg_m.rtkg011,g_rtkg_m.rtkg021,g_rtkg_m.rtkg022,g_rtkg_m.rtkg023,g_rtkg_m.rtkg020,g_rtkg_m.rtkg031, 
       g_rtkg_m.rtkg032,g_rtkg_m.rtkg033,g_rtkg_m.rtkg041,g_rtkg_m.rtkg042,g_rtkg_m.rtkg002,g_rtkg_m.rtkgownid, 
       g_rtkg_m.rtkgowndp,g_rtkg_m.rtkgcrtid,g_rtkg_m.rtkgcrtdp,g_rtkg_m.rtkgcrtdt,g_rtkg_m.rtkgmodid, 
       g_rtkg_m.rtkgmoddt,g_rtkg_m.rtkgunit_desc,g_rtkg_m.rtkgownid_desc,g_rtkg_m.rtkgowndp_desc,g_rtkg_m.rtkgcrtid_desc, 
       g_rtkg_m.rtkgcrtdp_desc,g_rtkg_m.rtkgmodid_desc
   
   
   #檢查是否允許此動作
   IF NOT arti730_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtkg_m_mask_o.* =  g_rtkg_m.*
   CALL arti730_rtkg_t_mask()
   LET g_rtkg_m_mask_n.* =  g_rtkg_m.*
   
   #將最新資料顯示到畫面上
   CALL arti730_show()
   
   IF cl_ask_delete() THEN
 
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point
 
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL arti730_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
 
 
      DELETE FROM rtkg_t 
       WHERE rtkgent = g_enterprise AND rtkg001 = g_rtkg_m.rtkg001 
 
 
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtkg_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
  
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'rtkglent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.rtkgl001
   LET l_field_keys[02] = 'rtkgl001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'rtkgl_t')
 
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      
      #end add-point
      
       
 
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE arti730_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      CLEAR FORM
      CALL arti730_ui_browser_refresh()
      
      #確保畫面上保有資料
      IF g_browser_cnt > 0 THEN
         #CALL arti730_browser_fill(g_wc,"")
         CALL arti730_fetch("P")
      ELSE
         CLEAR FORM
      END IF
      CALL s_transaction_end('Y','0')
   ELSE    
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE arti730_cl
 
   #功能已完成,通報訊息中心
   CALL arti730_msgcentre_notify('delete')
 
   #add-point:單頭刪除完成後 name="delete.a_delete"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="arti730.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION arti730_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_rtkg001 = g_rtkg_m.rtkg001
 
         THEN
         CALL g_browser.deleteElement(l_i)
       END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count     #page count
   DISPLAY g_header_cnt  TO FORMONLY.h_count     #page count
  
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
  
END FUNCTION
 
{</section>}
 
{<section id="arti730.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION arti730_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization" 
   
   #end add-point
   DEFINE p_cmd LIKE type_t.chr1
   #add-point:set_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point     
    
   #add-point:Function前置處理 name="set_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("rtkg001",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("rtkgunit",TRUE)
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="arti730.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION arti730_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point
   DEFINE p_cmd LIKE type_t.chr1
   #add-point:set_no_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("rtkg001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      CALL cl_set_comp_entry("rtkgunit",FALSE)
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF NOT s_aooi500_comp_entry(g_prog,'rtkgunit') THEN
      CALL cl_set_comp_entry("rtkgunit",FALSE)
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="arti730.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION arti730_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization" 
   
   #end add-point  
   #add-point:set_act_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="arti730.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION arti730_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="arti730.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION arti730_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization" 
   
   #end add-point
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="default_search.pre_function"
   
   #end add-point
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   #add-point:default_search段開始前 name="default_search.before"
   
   #end add-point  
   
   #根據外部參數(g_argv)組合wc
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " rtkg001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      #若有外部參數則根據該參數組合
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="arti730.mask_functions" >}
&include "erp/art/arti730_mask.4gl"
 
{</section>}
 
{<section id="arti730.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION arti730_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_rtkgmoddt     DATETIME YEAR TO SECOND
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_rtkg_m.rtkg001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN arti730_cl USING g_enterprise,g_rtkg_m.rtkg001
   IF STATUS THEN
      CLOSE arti730_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN arti730_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE arti730_master_referesh USING g_rtkg_m.rtkg001 INTO g_rtkg_m.rtkgunit,g_rtkg_m.rtkg001,g_rtkg_m.rtkgstus, 
       g_rtkg_m.rtkg011,g_rtkg_m.rtkg021,g_rtkg_m.rtkg022,g_rtkg_m.rtkg023,g_rtkg_m.rtkg020,g_rtkg_m.rtkg031, 
       g_rtkg_m.rtkg032,g_rtkg_m.rtkg033,g_rtkg_m.rtkg041,g_rtkg_m.rtkg042,g_rtkg_m.rtkg002,g_rtkg_m.rtkgownid, 
       g_rtkg_m.rtkgowndp,g_rtkg_m.rtkgcrtid,g_rtkg_m.rtkgcrtdp,g_rtkg_m.rtkgcrtdt,g_rtkg_m.rtkgmodid, 
       g_rtkg_m.rtkgmoddt,g_rtkg_m.rtkgunit_desc,g_rtkg_m.rtkgownid_desc,g_rtkg_m.rtkgowndp_desc,g_rtkg_m.rtkgcrtid_desc, 
       g_rtkg_m.rtkgcrtdp_desc,g_rtkg_m.rtkgmodid_desc
   
 
   #檢查是否允許此動作
   IF NOT arti730_action_chk() THEN
      CLOSE arti730_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtkg_m.rtkgunit,g_rtkg_m.rtkgunit_desc,g_rtkg_m.rtkg001,g_rtkg_m.rtkgl003,g_rtkg_m.rtkgl004, 
       g_rtkg_m.rtkgstus,g_rtkg_m.rtkg011,g_rtkg_m.rtkg021,g_rtkg_m.rtkg022,g_rtkg_m.rtkg023,g_rtkg_m.rtkg020, 
       g_rtkg_m.rtkg031,g_rtkg_m.rtkg032,g_rtkg_m.rtkg033,g_rtkg_m.rtkg041,g_rtkg_m.rtkg042,g_rtkg_m.rtkg002, 
       g_rtkg_m.rtkgownid,g_rtkg_m.rtkgownid_desc,g_rtkg_m.rtkgowndp,g_rtkg_m.rtkgowndp_desc,g_rtkg_m.rtkgcrtid, 
       g_rtkg_m.rtkgcrtid_desc,g_rtkg_m.rtkgcrtdp,g_rtkg_m.rtkgcrtdp_desc,g_rtkg_m.rtkgcrtdt,g_rtkg_m.rtkgmodid, 
       g_rtkg_m.rtkgmodid_desc,g_rtkg_m.rtkgmoddt
 
   CASE g_rtkg_m.rtkgstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_rtkg_m.rtkgstus
            
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      
      #end add-point
      
      
	  
      ON ACTION inactive
         IF cl_auth_chk_act("inactive") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.inactive"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION active
         IF cl_auth_chk_act("active") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.active"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      g_rtkg_m.rtkgstus = lc_state OR cl_null(lc_state) THEN
      CLOSE arti730_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   LET l_rtkgmoddt = cl_get_current()
   UPDATE rtkg_t
      SET rtkgstus = lc_state,
          rtkgmodid = g_user,
          rtkgmoddt = l_rtkgmoddt
    WHERE rtkgent = g_enterprise AND rtkg001 = g_rtkg_m.rtkg001
   #end add-point
   
   LET g_rtkg_m.rtkgmodid = g_user
   LET g_rtkg_m.rtkgmoddt = cl_get_current()
   LET g_rtkg_m.rtkgstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE rtkg_t 
      SET (rtkgstus,rtkgmodid,rtkgmoddt) 
        = (g_rtkg_m.rtkgstus,g_rtkg_m.rtkgmodid,g_rtkg_m.rtkgmoddt)     
    WHERE rtkgent = g_enterprise AND rtkg001 = g_rtkg_m.rtkg001
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE arti730_master_referesh USING g_rtkg_m.rtkg001 INTO g_rtkg_m.rtkgunit,g_rtkg_m.rtkg001, 
          g_rtkg_m.rtkgstus,g_rtkg_m.rtkg011,g_rtkg_m.rtkg021,g_rtkg_m.rtkg022,g_rtkg_m.rtkg023,g_rtkg_m.rtkg020, 
          g_rtkg_m.rtkg031,g_rtkg_m.rtkg032,g_rtkg_m.rtkg033,g_rtkg_m.rtkg041,g_rtkg_m.rtkg042,g_rtkg_m.rtkg002, 
          g_rtkg_m.rtkgownid,g_rtkg_m.rtkgowndp,g_rtkg_m.rtkgcrtid,g_rtkg_m.rtkgcrtdp,g_rtkg_m.rtkgcrtdt, 
          g_rtkg_m.rtkgmodid,g_rtkg_m.rtkgmoddt,g_rtkg_m.rtkgunit_desc,g_rtkg_m.rtkgownid_desc,g_rtkg_m.rtkgowndp_desc, 
          g_rtkg_m.rtkgcrtid_desc,g_rtkg_m.rtkgcrtdp_desc,g_rtkg_m.rtkgmodid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_rtkg_m.rtkgunit,g_rtkg_m.rtkgunit_desc,g_rtkg_m.rtkg001,g_rtkg_m.rtkgl003,g_rtkg_m.rtkgl004, 
          g_rtkg_m.rtkgstus,g_rtkg_m.rtkg011,g_rtkg_m.rtkg021,g_rtkg_m.rtkg022,g_rtkg_m.rtkg023,g_rtkg_m.rtkg020, 
          g_rtkg_m.rtkg031,g_rtkg_m.rtkg032,g_rtkg_m.rtkg033,g_rtkg_m.rtkg041,g_rtkg_m.rtkg042,g_rtkg_m.rtkg002, 
          g_rtkg_m.rtkgownid,g_rtkg_m.rtkgownid_desc,g_rtkg_m.rtkgowndp,g_rtkg_m.rtkgowndp_desc,g_rtkg_m.rtkgcrtid, 
          g_rtkg_m.rtkgcrtid_desc,g_rtkg_m.rtkgcrtdp,g_rtkg_m.rtkgcrtdp_desc,g_rtkg_m.rtkgcrtdt,g_rtkg_m.rtkgmodid, 
          g_rtkg_m.rtkgmodid_desc,g_rtkg_m.rtkgmoddt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   LET g_rtkg_m.rtkgmodid = g_user
   LET g_rtkg_m.rtkgmoddt = l_rtkgmoddt
   DISPLAY BY NAME g_rtkg_m.rtkgmodid,g_rtkg_m.rtkgmoddt
   CALL s_desc_get_person_desc(g_rtkg_m.rtkgmodid) RETURNING g_rtkg_m.rtkgowndp_desc
   DISPLAY BY NAME g_rtkg_m.rtkgowndp_desc
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE arti730_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL arti730_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="arti730.signature" >}
   
 
{</section>}
 
{<section id="arti730.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION arti730_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_rtkg_m.rtkg001
   LET g_pk_array[1].column = 'rtkg001'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="arti730.other_dialog" readonly="Y" >}
 
 
{</section>}
 
{<section id="arti730.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION arti730_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL arti730_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_rtkg_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="arti730.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION arti730_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization" 
   
   #end add-point
   #add-point:action_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="arti730.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 檢查計算符號與英文字母輸入是否正確
# Memo...........:
# Usage..........: CALL arti730_chk_symbol(p_str,p_cnt)
# Input parameter: p_str          欄位字串
#                : p_cnt          檢查字母到第幾個
# Return code....: 無
# Date & Author..: 2014/4/14 By pomelo
# Modify.........:
################################################################################
PUBLIC FUNCTION arti730_chk_symbol(p_str,p_cnt)
DEFINE p_str            STRING
DEFINE p_cnt            LIKE type_t.num5
DEFINE l_i              LIKE type_t.num5
DEFINE l_chr            STRING
DEFINE l_asc            LIKE type_t.num5
DEFINE l_chk_brackets   LIKE type_t.num5
DEFINE l_chk_order      LIKE type_t.num5
DEFINE l_chk_str        STRING
DEFINE l_len            LIKE type_t.num5
DEFINE l_lenb           LIKE type_t.num5

   LET g_errno = ''
   LET l_chk_brackets = 0
   #右括號 = 6，左括號 = 5，數字 = 4，字母 = 3，*/ = 2，+- = 1
   LET　l_chk_order = 0
   LET l_chk_str = ''
   FOR l_i = 1 TO p_str.getLength()
      LET l_chr = p_str.subString(l_i,l_i)
      LET l_asc = ORD(p_str.subString(l_i,l_i))
      
      #運算符號檢查
      CASE l_asc
         #" "
         WHEN 32
         #"("
         WHEN 40
            #前一個不可以是字母(3)、數字(4)、)右括號(6)
            #IF l_chk_order = 3 OR l_chk_order = 4 OR l_chk_order = 6 THEN
            IF l_chk_order = 3 OR l_chk_order = 6 THEN
               #輸入的公式，字母必須要有運算符號！;請重新輸入！
               LET g_errno = 'art-00344'
               RETURN
            END IF
            LET l_chk_brackets = l_chk_brackets + 1
            LET l_chk_order = 5
            
         #")"
         WHEN 41
            #檢查括號順序
            IF l_asc = 41 AND l_chk_brackets = 0 THEN
               #輸入的括號順序有錯 或 輸入的括號不是半形字！;請重新輸入！
               LET g_errno = 'art-00340'
               RETURN
            END IF
            #前一個不可以是(左括號(5)、*/(2)、+-(1)
            IF l_chk_order = 5 OR l_chk_order = 2 OR l_chk_order = 1 THEN
               #輸入的公式，字母必須要有運算符號！;請重新輸入！
               LET g_errno = 'art-00344'
               RETURN
            END IF
            LET l_chk_brackets = l_chk_brackets - 1
            LET l_chk_order = 6
            
         #"*"
         WHEN 42
            #前一個不可以是(左括號(5)、*/(2)、+-(1)、第一個值(0)
            IF l_chk_order = 5 OR l_chk_order = 2 OR l_chk_order = 1 OR l_chk_order = 0 THEN
               #輸入的公式，字母必須要有運算符號！;請重新輸入！
               LET g_errno = 'art-00344'
               RETURN
            END IF
            LET l_chk_order = 2
            
         #"+"
         WHEN 43
            #前一個不可以是*/(2)、+-(1)
            IF l_chk_order = 2 OR l_chk_order = 1 THEN
               #輸入的公式，字母必須要有運算符號！;請重新輸入！
               LET g_errno = 'art-00344'
               RETURN
            END IF
            LET l_chk_order = 1
            
         #"-"
         WHEN 45
            #前一個不可以是*/(2)、+-(1)
            IF l_chk_order = 2 OR l_chk_order = 1 THEN
               #輸入的公式，字母必須要有運算符號！;請重新輸入！
               LET g_errno = 'art-00344'
               RETURN
            END IF
            LET l_chk_order = 1
            
         #"/"
         WHEN 47
            #前一個不可以是(左括號(5)、*/(2)、+-(1)、第一個值(0)
            IF l_chk_order = 5 OR l_chk_order = 2 OR l_chk_order = 1 OR l_chk_order = 0  THEN
               #輸入的公式，字母必須要有運算符號！;請重新輸入！
               LET g_errno = 'art-00344'
               RETURN
            END IF
            LET l_chk_order = 2
            
         OTHERWISE
            CASE
               ##數字檢查
               #WHEN l_asc >=48 AND l_asc <= 57
               #   #前一個不可以是字母(3)、)右括號(6)
               #   IF l_chk_order = 3 OR l_chk_order = 6 THEN
               #      #輸入的公式，字母必須要有運算符號！;請重新輸入！
               #      LET g_errno = 'art-00344'
               #      RETURN
               #   END IF
               #   LET l_chk_order = 4
                  
               #字母檢查(小寫)
               #"a" 97 ~ "z" 122
               WHEN l_asc >= 97 AND l_asc <= 122
                  IF l_asc <= 96 OR l_asc >= (97+p_cnt) THEN
                     #輸入的英文字母必須由%1~%2！;請重新輸入！
                     LET g_errno = 'art-00339'
                     RETURN
                  END IF
                  #前一個不可以是)右括號(6)、數字(4)、字母(3)
                  #IF l_chk_order = 3 OR l_chk_order = 4 OR l_chk_order = 6 THEN
                  IF l_chk_order = 3 OR l_chk_order = 6 THEN
                     #輸入的公式，字母必須要有運算符號！;請重新輸入！
                     LET g_errno = 'art-00344'
                     RETURN
                  END IF
                  LET l_chk_order = 3
               OTHERWISE
                  IF (l_asc < 40 AND l_asc > 48) OR l_asc = 44 OR l_asc = 46 THEN
                     #輸入運算符應為'('　')'　'+'　'-'　'*'　'/'！;請重新輸入！
                     LET g_errno = 'art-00338'
                     RETURN
                  ELSE
                     #輸入公式裡必須打'('　')'　'+'　'-'　'*'　'/' 　%1~%2！;請重新輸入！
                     LET g_errno = 'art-00345'
                     RETURN
                  END IF
            END CASE
      END CASE
      LET l_chk_str = l_chk_str,l_chr
   END FOR
   
   IF l_chk_brackets <> 0 THEN
      #輸入的括號數量有錯 或 輸入的括號不是半形字！;請重新輸入！
      LET g_errno = 'art-00341'
      RETURN
   END IF
   
   #字串最後一個字不可以是(左括號(5)、*/(2)、+-(1)
   IF l_chk_order = '5' OR l_chk_order = '2' OR l_chk_order = '1' THEN
      #輸入的公式，字母或數字之間必須要有運算符號！;請重新輸入！
      LET g_errno = 'art-00344'
      RETURN
   END IF

   LET g_sql = "SELECT LENGTH('",p_str,"'),LENGTHB('",p_str,"') FROM dual"
   PREPARE arti730_chk FROM g_sql
   DECLARE arti730_chk_crus CURSOR FOR arti730_chk
   LET l_len = 0
   LET l_lenb = 0
   EXECUTE arti730_chk_crus INTO l_len,l_lenb
   IF l_len <> l_lenb AND l_len <> 0 AND l_lenb <> 0 THEN
      #輸入公式裡必須打'('　')'　'+'　'-'　'*'　'/' 　%1~%2！;請重新輸入！
      LET g_errno = 'art-00345'
      RETURN
   END IF
END FUNCTION

 
{</section>}
 
