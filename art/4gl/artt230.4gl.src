#該程式未解開Section, 採用最新樣板產出!
{<section id="artt230.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0012(2016-06-18 10:09:12), PR版次:0012(2016-12-23 09:54:33)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000074
#+ Filename...: artt230
#+ Description: 門店資源協議申請作業
#+ Creator....: 02003(2015-07-08 13:48:33)
#+ Modifier...: 06189 -SD/PR- 02481
 
{</section>}
 
{<section id="artt230.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#160318-00025#50  2016/04/27  By 07673   將重複內容的錯誤訊息置換為公用錯誤訊息
#160604-00004#1   2016/06/27  by 08172   新增BPM集成功能
#160629-00012#1   2016/06/29  by 08172   供应商和合同修改
#160818-00017#25  2016/08/23  By 08734   删除修改未重新判断状态码
#161024-00025#9   2016/10/27  by 08742   组织开窗修改
#160516-00014#28  2016/11/04  BY 06540   lanjj 资源协议编号长度增加到20位
#160824-00007#161 2016/11/29  By 06814   新舊值相關
#161222-00039#1   2016/12/23  by 02481    标准程式定义采用宣告模式,弃用.*写法
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_rtam_m        RECORD
       rtamsite LIKE rtam_t.rtamsite, 
   rtamsite_desc LIKE type_t.chr80, 
   rtamdocdt LIKE rtam_t.rtamdocdt, 
   rtamdocno LIKE rtam_t.rtamdocno, 
   rtam000 LIKE rtam_t.rtam000, 
   rtam001 LIKE rtam_t.rtam001, 
   rtam002 LIKE rtam_t.rtam002, 
   rtam003 LIKE rtam_t.rtam003, 
   rtam003_desc LIKE type_t.chr80, 
   rtam007 LIKE type_t.chr10, 
   rtam004 LIKE rtam_t.rtam004, 
   rtam004_desc LIKE type_t.chr80, 
   rtam005 LIKE rtam_t.rtam005, 
   rtam005_desc LIKE type_t.chr80, 
   rtam006 LIKE rtam_t.rtam006, 
   rtamunit LIKE rtam_t.rtamunit, 
   rtamstus LIKE rtam_t.rtamstus, 
   rtamownid LIKE rtam_t.rtamownid, 
   rtamownid_desc LIKE type_t.chr80, 
   rtamowndp LIKE rtam_t.rtamowndp, 
   rtamowndp_desc LIKE type_t.chr80, 
   rtamcrtid LIKE rtam_t.rtamcrtid, 
   rtamcrtid_desc LIKE type_t.chr80, 
   rtamcrtdp LIKE rtam_t.rtamcrtdp, 
   rtamcrtdp_desc LIKE type_t.chr80, 
   rtamcrtdt LIKE rtam_t.rtamcrtdt, 
   rtammodid LIKE rtam_t.rtammodid, 
   rtammodid_desc LIKE type_t.chr80, 
   rtammoddt LIKE rtam_t.rtammoddt, 
   rtamcnfid LIKE rtam_t.rtamcnfid, 
   rtamcnfid_desc LIKE type_t.chr80, 
   rtamcnfdt LIKE rtam_t.rtamcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_rtan_d        RECORD
       rtanseq LIKE rtan_t.rtanseq, 
   rtan001 LIKE rtan_t.rtan001, 
   rtan002 LIKE rtan_t.rtan002, 
   rtan002_desc LIKE type_t.chr500, 
   rtan003 LIKE rtan_t.rtan003, 
   rtan004 LIKE rtan_t.rtan004, 
   rtan005 LIKE rtan_t.rtan005, 
   rtan006 LIKE rtan_t.rtan006, 
   rtan024 LIKE type_t.chr10, 
   rtan007 LIKE rtan_t.rtan007, 
   rtan007_desc LIKE type_t.chr500, 
   rtan008 LIKE rtan_t.rtan008, 
   rtan008_desc LIKE type_t.chr500, 
   rtan025 LIKE rtan_t.rtan025, 
   rtan009 LIKE rtan_t.rtan009, 
   rtan009_desc LIKE type_t.chr500, 
   rtan010 LIKE rtan_t.rtan010, 
   rtan010_desc LIKE type_t.chr500, 
   rtan011 LIKE rtan_t.rtan011, 
   rtan011_desc LIKE type_t.chr500, 
   rtan012 LIKE rtan_t.rtan012, 
   rtan013 LIKE rtan_t.rtan013, 
   rtan014 LIKE rtan_t.rtan014, 
   rtan015 LIKE rtan_t.rtan015, 
   rtan016 LIKE rtan_t.rtan016, 
   rtan017 LIKE rtan_t.rtan017, 
   rtan018 LIKE rtan_t.rtan018, 
   rtan019 LIKE rtan_t.rtan019, 
   rtan020 LIKE rtan_t.rtan020, 
   rtan021 LIKE rtan_t.rtan021, 
   rtan022 LIKE rtan_t.rtan022, 
   rtan023 LIKE rtan_t.rtan023, 
   rtansite LIKE rtan_t.rtansite, 
   rtancomp LIKE rtan_t.rtancomp
       END RECORD
PRIVATE TYPE type_g_rtan2_d RECORD
       rtaqunit LIKE type_t.chr10, 
   rtaqsite LIKE type_t.chr10, 
   rtaqseq LIKE type_t.num10, 
   rtaqseq1 LIKE type_t.num10, 
   rtaq001 LIKE type_t.chr20, 
   rtaq002 LIKE type_t.chr10, 
   rtaq002_desc LIKE type_t.chr500, 
   rtaq004 LIKE type_t.chr10, 
   rtaq003 LIKE type_t.chr10, 
   rtaq003_desc LIKE type_t.chr500, 
   rtaq005 LIKE type_t.chr10, 
   rtaq006 LIKE type_t.chr1, 
   rtaq007 LIKE type_t.chr1, 
   rtaq008 LIKE type_t.num20_6, 
   rtaq009 LIKE type_t.num20_6, 
   rtaq010 LIKE type_t.num20_6, 
   rtaqacti LIKE type_t.chr1
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_rtamsite LIKE rtam_t.rtamsite,
   b_rtamsite_desc LIKE type_t.chr80,
      b_rtamdocno LIKE rtam_t.rtamdocno,
      b_rtamdocdt LIKE rtam_t.rtamdocdt,
      b_rtam001 LIKE rtam_t.rtam001,
      b_rtam003 LIKE rtam_t.rtam003,
      b_rtam004 LIKE rtam_t.rtam004,
   b_rtam004_desc LIKE type_t.chr80,
      b_rtam005 LIKE rtam_t.rtam005,
   b_rtam005_desc LIKE type_t.chr80,
      b_rtam006 LIKE rtam_t.rtam006
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_site_flag         LIKE type_t.num5
#end add-point
       
#模組變數(Module Variables)
DEFINE g_rtam_m          type_g_rtam_m
DEFINE g_rtam_m_t        type_g_rtam_m
DEFINE g_rtam_m_o        type_g_rtam_m
DEFINE g_rtam_m_mask_o   type_g_rtam_m #轉換遮罩前資料
DEFINE g_rtam_m_mask_n   type_g_rtam_m #轉換遮罩後資料
 
   DEFINE g_rtamdocno_t LIKE rtam_t.rtamdocno
 
 
DEFINE g_rtan_d          DYNAMIC ARRAY OF type_g_rtan_d
DEFINE g_rtan_d_t        type_g_rtan_d
DEFINE g_rtan_d_o        type_g_rtan_d
DEFINE g_rtan_d_mask_o   DYNAMIC ARRAY OF type_g_rtan_d #轉換遮罩前資料
DEFINE g_rtan_d_mask_n   DYNAMIC ARRAY OF type_g_rtan_d #轉換遮罩後資料
DEFINE g_rtan2_d          DYNAMIC ARRAY OF type_g_rtan2_d
DEFINE g_rtan2_d_t        type_g_rtan2_d
DEFINE g_rtan2_d_o        type_g_rtan2_d
DEFINE g_rtan2_d_mask_o   DYNAMIC ARRAY OF type_g_rtan2_d #轉換遮罩前資料
DEFINE g_rtan2_d_mask_n   DYNAMIC ARRAY OF type_g_rtan2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="artt230.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   DEFINE l_success LIKE type_t.num5     #161024-00025#9   2016/10/27  by 08742 add
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT rtamsite,'',rtamdocdt,rtamdocno,rtam000,rtam001,rtam002,rtam003,'','', 
       rtam004,'',rtam005,'',rtam006,rtamunit,rtamstus,rtamownid,'',rtamowndp,'',rtamcrtid,'',rtamcrtdp, 
       '',rtamcrtdt,rtammodid,'',rtammoddt,rtamcnfid,'',rtamcnfdt", 
                      " FROM rtam_t",
                      " WHERE rtament= ? AND rtamdocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt230_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.rtamsite,t0.rtamdocdt,t0.rtamdocno,t0.rtam000,t0.rtam001,t0.rtam002, 
       t0.rtam003,t0.rtam007,t0.rtam004,t0.rtam005,t0.rtam006,t0.rtamunit,t0.rtamstus,t0.rtamownid,t0.rtamowndp, 
       t0.rtamcrtid,t0.rtamcrtdp,t0.rtamcrtdt,t0.rtammodid,t0.rtammoddt,t0.rtamcnfid,t0.rtamcnfdt,t1.ooefl003 , 
       t2.prcfl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 ,t6.ooefl003 ,t7.ooag011 ,t8.ooefl003 ,t9.ooag011 , 
       t10.ooag011",
               " FROM rtam_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtamsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN prcfl_t t2 ON t2.prcflent="||g_enterprise||" AND t2.prcfl001=t0.rtam003 AND t2.prcfl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.rtam004  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.rtam005 AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=t0.rtamownid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent="||g_enterprise||" AND t6.ooefl001=t0.rtamowndp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=t0.rtamcrtid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent="||g_enterprise||" AND t8.ooefl001=t0.rtamcrtdp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent="||g_enterprise||" AND t9.ooag001=t0.rtammodid  ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent="||g_enterprise||" AND t10.ooag001=t0.rtamcnfid  ",
 
               " WHERE t0.rtament = " ||g_enterprise|| " AND t0.rtamdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE artt230_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_artt230 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL artt230_init()   
 
      #進入選單 Menu (="N")
      CALL artt230_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_artt230
      
   END IF 
   
   CLOSE artt230_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   CALL s_aooi500_drop_temp() RETURNING l_success    #161024-00025#9   2016/10/27  by 08742 add
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="artt230.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION artt230_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success LIKE type_t.num5     #161024-00025#9   2016/10/27  by 08742 add
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('rtamstus','13','N,Y,A,D,R,W,X')
 
      CALL cl_set_combo_scc('rtam000','32') 
   CALL cl_set_combo_scc('rtan014','6006') 
   CALL cl_set_combo_scc('rtan015','6842') 
   CALL cl_set_combo_scc('rtan020','6841') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL cl_set_combo_scc('rtan024','6876')  #add by dengdd 151119
   CALL cl_set_combo_scc('rtaq004','6848')  #add by dengdd 151124
   CALL cl_set_combo_scc('rtaq005','6006')  #add by dengdd 151124
   CALL s_aooi500_create_temp() RETURNING l_success    #161024-00025#9   2016/10/27  by 08742 add
   
   #end add-point
   
   #初始化搜尋條件
   CALL artt230_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="artt230.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION artt230_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL artt230_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_rtam_m.* TO NULL
         CALL g_rtan_d.clear()
         CALL g_rtan2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL artt230_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL artt230_fetch('') # reload data
               LET l_ac = 1
               CALL artt230_ui_detailshow() #Setting the current row 
         
               CALL artt230_idx_chk()
               #NEXT FIELD rtanseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_rtan_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt230_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL artt230_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_rtan2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt230_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL artt230_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL artt230_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL artt230_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL artt230_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL artt230_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL artt230_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL artt230_set_act_visible()   
            CALL artt230_set_act_no_visible()
            IF NOT (g_rtam_m.rtamdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " rtament = " ||g_enterprise|| " AND",
                                  " rtamdocno = '", g_rtam_m.rtamdocno, "' "
 
               #填到對應位置
               CALL artt230_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtam_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtan_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtaq_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL artt230_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtam_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtan_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtaq_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL artt230_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL artt230_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL artt230_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL artt230_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt230_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL artt230_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt230_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL artt230_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt230_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL artt230_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt230_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL artt230_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt230_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_rtan_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_rtan2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD rtanseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL artt230_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL artt230_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL artt230_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL artt230_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               &include "erp/art/artt230_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               
               #END add-point
               &include "erp/art/artt230_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL artt230_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL artt230_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL artt230_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL artt230_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL artt230_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_rtam_m.rtamdocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="artt230.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION artt230_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_where           STRING     #161024-00025#9   2016/10/27  by 08742 
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   #161024-00025#9   2016/10/27  by 08742  -S
   LET l_where = ''
   CALL s_aooi500_sql_where(g_prog,'rtamsite') RETURNING l_where
   LET l_wc = l_wc," AND ",l_where
   #161024-00025#9   2016/10/27  by 08742   -E
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT rtamdocno ",
                      " FROM rtam_t ",
                      " ",
                      " LEFT JOIN rtan_t ON rtanent = rtament AND rtamdocno = rtandocno ", "  ",
                      #add-point:browser_fill段sql(rtan_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
                      " LEFT JOIN rtaq_t ON rtaqent = rtament AND rtamdocno = rtaqdocno", "  ",
                      #add-point:browser_fill段sql(rtaq_t1) name="browser_fill.cnt.join.rtaq_t1"
                      
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " ",                      
 
 
 
                      " WHERE rtament = " ||g_enterprise|| " AND rtanent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("rtam_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT rtamdocno ",
                      " FROM rtam_t ", 
                      "  ",
                      "  ",
                      " WHERE rtament = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("rtam_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_rtam_m.* TO NULL
      CALL g_rtan_d.clear()        
      CALL g_rtan2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.rtamsite,t0.rtamdocno,t0.rtamdocdt,t0.rtam001,t0.rtam003,t0.rtam004,t0.rtam005,t0.rtam006 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.rtamstus,t0.rtamsite,t0.rtamdocno,t0.rtamdocdt,t0.rtam001,t0.rtam003, 
          t0.rtam004,t0.rtam005,t0.rtam006,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ",
                  " FROM rtam_t t0",
                  "  ",
                  "  LEFT JOIN rtan_t ON rtanent = rtament AND rtamdocno = rtandocno ", "  ", 
                  #add-point:browser_fill段sql(rtan_t1) name="browser_fill.join.rtan_t1"
                  
                  #end add-point
                  "  LEFT JOIN rtaq_t ON rtaqent = rtament AND rtamdocno = rtaqdocno", "  ", 
                  #add-point:browser_fill段sql(rtaq_t1) name="browser_fill.join.rtaq_t1"
                  
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
 
 
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtamsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.rtam004  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.rtam005 AND t3.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.rtament = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("rtam_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.rtamstus,t0.rtamsite,t0.rtamdocno,t0.rtamdocdt,t0.rtam001,t0.rtam003, 
          t0.rtam004,t0.rtam005,t0.rtam006,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ",
                  " FROM rtam_t t0",
                  "  ",
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtamsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.rtam004  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.rtam005 AND t3.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.rtament = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("rtam_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY rtamdocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"rtam_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_rtamsite,g_browser[g_cnt].b_rtamdocno, 
          g_browser[g_cnt].b_rtamdocdt,g_browser[g_cnt].b_rtam001,g_browser[g_cnt].b_rtam003,g_browser[g_cnt].b_rtam004, 
          g_browser[g_cnt].b_rtam005,g_browser[g_cnt].b_rtam006,g_browser[g_cnt].b_rtamsite_desc,g_browser[g_cnt].b_rtam004_desc, 
          g_browser[g_cnt].b_rtam005_desc
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL artt230_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_rtamdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="artt230.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION artt230_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_rtam_m.rtamdocno = g_browser[g_current_idx].b_rtamdocno   
 
   EXECUTE artt230_master_referesh USING g_rtam_m.rtamdocno INTO g_rtam_m.rtamsite,g_rtam_m.rtamdocdt, 
       g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam007, 
       g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid, 
       g_rtam_m.rtamowndp,g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid, 
       g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt,g_rtam_m.rtamsite_desc,g_rtam_m.rtam003_desc, 
       g_rtam_m.rtam004_desc,g_rtam_m.rtam005_desc,g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid_desc, 
       g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtammodid_desc,g_rtam_m.rtamcnfid_desc
   
   CALL artt230_rtam_t_mask()
   CALL artt230_show()
      
END FUNCTION
 
{</section>}
 
{<section id="artt230.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION artt230_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="artt230.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION artt230_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_rtamdocno = g_rtam_m.rtamdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="artt230.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION artt230_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_rtam_m.* TO NULL
   CALL g_rtan_d.clear()        
   CALL g_rtan2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON rtamsite,rtamdocdt,rtamdocno,rtam000,rtam001,rtam002,rtam003,rtam007, 
          rtam004,rtam005,rtam006,rtamunit,rtamstus,rtamownid,rtamowndp,rtamcrtid,rtamcrtdp,rtamcrtdt, 
          rtammodid,rtammoddt,rtamcnfid,rtamcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<rtamcrtdt>>----
         AFTER FIELD rtamcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<rtammoddt>>----
         AFTER FIELD rtammoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtamcnfdt>>----
         AFTER FIELD rtamcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtampstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.rtamsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtamsite
            #add-point:ON ACTION controlp INFIELD rtamsite name="construct.c.rtamsite"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtamsite',g_rtam_m.rtamsite,'c')    #161024-00025#9   2016/10/26  by 08742  add         
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtamsite  #顯示到畫面上
            NEXT FIELD rtamsite                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamsite
            #add-point:BEFORE FIELD rtamsite name="construct.b.rtamsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtamsite
            
            #add-point:AFTER FIELD rtamsite name="construct.a.rtamsite"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamdocdt
            #add-point:BEFORE FIELD rtamdocdt name="construct.b.rtamdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtamdocdt
            
            #add-point:AFTER FIELD rtamdocdt name="construct.a.rtamdocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtamdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtamdocdt
            #add-point:ON ACTION controlp INFIELD rtamdocdt name="construct.c.rtamdocdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtamdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtamdocno
            #add-point:ON ACTION controlp INFIELD rtamdocno name="construct.c.rtamdocno"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtamdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtamdocno  #顯示到畫面上
            NEXT FIELD rtamdocno                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamdocno
            #add-point:BEFORE FIELD rtamdocno name="construct.b.rtamdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtamdocno
            
            #add-point:AFTER FIELD rtamdocno name="construct.a.rtamdocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtam000
            #add-point:BEFORE FIELD rtam000 name="construct.b.rtam000"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtam000
            
            #add-point:AFTER FIELD rtam000 name="construct.a.rtam000"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtam000
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtam000
            #add-point:ON ACTION controlp INFIELD rtam000 name="construct.c.rtam000"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtam001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtam001
            #add-point:ON ACTION controlp INFIELD rtam001 name="construct.c.rtam001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtam001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtam001  #顯示到畫面上
            NEXT FIELD rtam001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtam001
            #add-point:BEFORE FIELD rtam001 name="construct.b.rtam001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtam001
            
            #add-point:AFTER FIELD rtam001 name="construct.a.rtam001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtam002
            #add-point:BEFORE FIELD rtam002 name="construct.b.rtam002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtam002
            
            #add-point:AFTER FIELD rtam002 name="construct.a.rtam002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtam002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtam002
            #add-point:ON ACTION controlp INFIELD rtam002 name="construct.c.rtam002"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtam003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtam003
            #add-point:ON ACTION controlp INFIELD rtam003 name="construct.c.rtam003"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_prcf001_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtam003  #顯示到畫面上
            NEXT FIELD rtam003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtam003
            #add-point:BEFORE FIELD rtam003 name="construct.b.rtam003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtam003
            
            #add-point:AFTER FIELD rtam003 name="construct.a.rtam003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtam007
            #add-point:BEFORE FIELD rtam007 name="construct.b.rtam007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtam007
            
            #add-point:AFTER FIELD rtam007 name="construct.a.rtam007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtam007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtam007
            #add-point:ON ACTION controlp INFIELD rtam007 name="construct.c.rtam007"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "2139" #s
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtam007  #顯示到畫面上
            NEXT FIELD rtam007                     #返回原欄位
            #END add-point
 
 
         #Ctrlp:construct.c.rtam004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtam004
            #add-point:ON ACTION controlp INFIELD rtam004 name="construct.c.rtam004"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtam004  #顯示到畫面上
            NEXT FIELD rtam004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtam004
            #add-point:BEFORE FIELD rtam004 name="construct.b.rtam004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtam004
            
            #add-point:AFTER FIELD rtam004 name="construct.a.rtam004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtam005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtam005
            #add-point:ON ACTION controlp INFIELD rtam005 name="construct.c.rtam005"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtam005  #顯示到畫面上
            NEXT FIELD rtam005                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtam005
            #add-point:BEFORE FIELD rtam005 name="construct.b.rtam005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtam005
            
            #add-point:AFTER FIELD rtam005 name="construct.a.rtam005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtam006
            #add-point:BEFORE FIELD rtam006 name="construct.b.rtam006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtam006
            
            #add-point:AFTER FIELD rtam006 name="construct.a.rtam006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtam006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtam006
            #add-point:ON ACTION controlp INFIELD rtam006 name="construct.c.rtam006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamunit
            #add-point:BEFORE FIELD rtamunit name="construct.b.rtamunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtamunit
            
            #add-point:AFTER FIELD rtamunit name="construct.a.rtamunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtamunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtamunit
            #add-point:ON ACTION controlp INFIELD rtamunit name="construct.c.rtamunit"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamstus
            #add-point:BEFORE FIELD rtamstus name="construct.b.rtamstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtamstus
            
            #add-point:AFTER FIELD rtamstus name="construct.a.rtamstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtamstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtamstus
            #add-point:ON ACTION controlp INFIELD rtamstus name="construct.c.rtamstus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtamownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtamownid
            #add-point:ON ACTION controlp INFIELD rtamownid name="construct.c.rtamownid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtamownid  #顯示到畫面上
            NEXT FIELD rtamownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamownid
            #add-point:BEFORE FIELD rtamownid name="construct.b.rtamownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtamownid
            
            #add-point:AFTER FIELD rtamownid name="construct.a.rtamownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtamowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtamowndp
            #add-point:ON ACTION controlp INFIELD rtamowndp name="construct.c.rtamowndp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtamowndp  #顯示到畫面上
            NEXT FIELD rtamowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamowndp
            #add-point:BEFORE FIELD rtamowndp name="construct.b.rtamowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtamowndp
            
            #add-point:AFTER FIELD rtamowndp name="construct.a.rtamowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtamcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtamcrtid
            #add-point:ON ACTION controlp INFIELD rtamcrtid name="construct.c.rtamcrtid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtamcrtid  #顯示到畫面上
            NEXT FIELD rtamcrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamcrtid
            #add-point:BEFORE FIELD rtamcrtid name="construct.b.rtamcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtamcrtid
            
            #add-point:AFTER FIELD rtamcrtid name="construct.a.rtamcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtamcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtamcrtdp
            #add-point:ON ACTION controlp INFIELD rtamcrtdp name="construct.c.rtamcrtdp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtamcrtdp  #顯示到畫面上
            NEXT FIELD rtamcrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamcrtdp
            #add-point:BEFORE FIELD rtamcrtdp name="construct.b.rtamcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtamcrtdp
            
            #add-point:AFTER FIELD rtamcrtdp name="construct.a.rtamcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamcrtdt
            #add-point:BEFORE FIELD rtamcrtdt name="construct.b.rtamcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtammodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtammodid
            #add-point:ON ACTION controlp INFIELD rtammodid name="construct.c.rtammodid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtammodid  #顯示到畫面上
            NEXT FIELD rtammodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtammodid
            #add-point:BEFORE FIELD rtammodid name="construct.b.rtammodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtammodid
            
            #add-point:AFTER FIELD rtammodid name="construct.a.rtammodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtammoddt
            #add-point:BEFORE FIELD rtammoddt name="construct.b.rtammoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtamcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtamcnfid
            #add-point:ON ACTION controlp INFIELD rtamcnfid name="construct.c.rtamcnfid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtamcnfid  #顯示到畫面上
            NEXT FIELD rtamcnfid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamcnfid
            #add-point:BEFORE FIELD rtamcnfid name="construct.b.rtamcnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtamcnfid
            
            #add-point:AFTER FIELD rtamcnfid name="construct.a.rtamcnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamcnfdt
            #add-point:BEFORE FIELD rtamcnfdt name="construct.b.rtamcnfdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON rtanseq,rtan001,rtan002,rtan003,rtan004,rtan005,rtan006,rtan024,rtan007, 
          rtan008,rtan025,rtan009,rtan010,rtan011,rtan012,rtan013,rtan014,rtan015,rtan016,rtan017,rtan018, 
          rtan019,rtan020,rtan021,rtan022,rtan023,rtansite,rtancomp
           FROM s_detail1[1].rtanseq,s_detail1[1].rtan001,s_detail1[1].rtan002,s_detail1[1].rtan003, 
               s_detail1[1].rtan004,s_detail1[1].rtan005,s_detail1[1].rtan006,s_detail1[1].rtan024,s_detail1[1].rtan007, 
               s_detail1[1].rtan008,s_detail1[1].rtan025,s_detail1[1].rtan009,s_detail1[1].rtan010,s_detail1[1].rtan011, 
               s_detail1[1].rtan012,s_detail1[1].rtan013,s_detail1[1].rtan014,s_detail1[1].rtan015,s_detail1[1].rtan016, 
               s_detail1[1].rtan017,s_detail1[1].rtan018,s_detail1[1].rtan019,s_detail1[1].rtan020,s_detail1[1].rtan021, 
               s_detail1[1].rtan022,s_detail1[1].rtan023,s_detail1[1].rtansite,s_detail1[1].rtancomp 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtanseq
            #add-point:BEFORE FIELD rtanseq name="construct.b.page1.rtanseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtanseq
            
            #add-point:AFTER FIELD rtanseq name="construct.a.page1.rtanseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtanseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtanseq
            #add-point:ON ACTION controlp INFIELD rtanseq name="construct.c.page1.rtanseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan001
            #add-point:BEFORE FIELD rtan001 name="construct.b.page1.rtan001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan001
            
            #add-point:AFTER FIELD rtan001 name="construct.a.page1.rtan001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan001
            #add-point:ON ACTION controlp INFIELD rtan001 name="construct.c.page1.rtan001"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.rtan002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan002
            #add-point:ON ACTION controlp INFIELD rtan002 name="construct.c.page1.rtan002"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtal001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtan002  #顯示到畫面上
            NEXT FIELD rtan002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan002
            #add-point:BEFORE FIELD rtan002 name="construct.b.page1.rtan002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan002
            
            #add-point:AFTER FIELD rtan002 name="construct.a.page1.rtan002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan003
            #add-point:BEFORE FIELD rtan003 name="construct.b.page1.rtan003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan003
            
            #add-point:AFTER FIELD rtan003 name="construct.a.page1.rtan003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan003
            #add-point:ON ACTION controlp INFIELD rtan003 name="construct.c.page1.rtan003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan004
            #add-point:BEFORE FIELD rtan004 name="construct.b.page1.rtan004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan004
            
            #add-point:AFTER FIELD rtan004 name="construct.a.page1.rtan004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan004
            #add-point:ON ACTION controlp INFIELD rtan004 name="construct.c.page1.rtan004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan005
            #add-point:BEFORE FIELD rtan005 name="construct.b.page1.rtan005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan005
            
            #add-point:AFTER FIELD rtan005 name="construct.a.page1.rtan005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan005
            #add-point:ON ACTION controlp INFIELD rtan005 name="construct.c.page1.rtan005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan006
            #add-point:BEFORE FIELD rtan006 name="construct.b.page1.rtan006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan006
            
            #add-point:AFTER FIELD rtan006 name="construct.a.page1.rtan006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan006
            #add-point:ON ACTION controlp INFIELD rtan006 name="construct.c.page1.rtan006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan024
            #add-point:BEFORE FIELD rtan024 name="construct.b.page1.rtan024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan024
            
            #add-point:AFTER FIELD rtan024 name="construct.a.page1.rtan024"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan024
            #add-point:ON ACTION controlp INFIELD rtan024 name="construct.c.page1.rtan024"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan007
            #add-point:BEFORE FIELD rtan007 name="construct.b.page1.rtan007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan007
            
            #add-point:AFTER FIELD rtan007 name="construct.a.page1.rtan007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan007
            #add-point:ON ACTION controlp INFIELD rtan007 name="construct.c.page1.rtan007"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtan007  #顯示到畫面上
            NEXT FIELD rtan007                     #返回原欄位
    
            #END add-point
 
 
         #Ctrlp:construct.c.page1.rtan008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan008
            #add-point:ON ACTION controlp INFIELD rtan008 name="construct.c.page1.rtan008"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "('1','3')"
            CALL q_pmaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtan008  #顯示到畫面上
            NEXT FIELD rtan008                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan008
            #add-point:BEFORE FIELD rtan008 name="construct.b.page1.rtan008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan008
            
            #add-point:AFTER FIELD rtan008 name="construct.a.page1.rtan008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan025
            #add-point:ON ACTION controlp INFIELD rtan025 name="construct.c.page1.rtan025"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL #暂时mark
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtan025()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtan025  #顯示到畫面上
            NEXT FIELD rtan025                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan025
            #add-point:BEFORE FIELD rtan025 name="construct.b.page1.rtan025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan025
            
            #add-point:AFTER FIELD rtan025 name="construct.a.page1.rtan025"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan009
            #add-point:ON ACTION controlp INFIELD rtan009 name="construct.c.page1.rtan009"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtan009  #顯示到畫面上
            NEXT FIELD rtan009                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan009
            #add-point:BEFORE FIELD rtan009 name="construct.b.page1.rtan009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan009
            
            #add-point:AFTER FIELD rtan009 name="construct.a.page1.rtan009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan010
            #add-point:ON ACTION controlp INFIELD rtan010 name="construct.c.page1.rtan010"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtan010  #顯示到畫面上
            NEXT FIELD rtan010                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan010
            #add-point:BEFORE FIELD rtan010 name="construct.b.page1.rtan010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan010
            
            #add-point:AFTER FIELD rtan010 name="construct.a.page1.rtan010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan011
            #add-point:ON ACTION controlp INFIELD rtan011 name="construct.c.page1.rtan011"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtan011  #顯示到畫面上
            NEXT FIELD rtan011                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan011
            #add-point:BEFORE FIELD rtan011 name="construct.b.page1.rtan011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan011
            
            #add-point:AFTER FIELD rtan011 name="construct.a.page1.rtan011"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan012
            #add-point:BEFORE FIELD rtan012 name="construct.b.page1.rtan012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan012
            
            #add-point:AFTER FIELD rtan012 name="construct.a.page1.rtan012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan012
            #add-point:ON ACTION controlp INFIELD rtan012 name="construct.c.page1.rtan012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan013
            #add-point:BEFORE FIELD rtan013 name="construct.b.page1.rtan013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan013
            
            #add-point:AFTER FIELD rtan013 name="construct.a.page1.rtan013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan013
            #add-point:ON ACTION controlp INFIELD rtan013 name="construct.c.page1.rtan013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan014
            #add-point:BEFORE FIELD rtan014 name="construct.b.page1.rtan014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan014
            
            #add-point:AFTER FIELD rtan014 name="construct.a.page1.rtan014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan014
            #add-point:ON ACTION controlp INFIELD rtan014 name="construct.c.page1.rtan014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan015
            #add-point:BEFORE FIELD rtan015 name="construct.b.page1.rtan015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan015
            
            #add-point:AFTER FIELD rtan015 name="construct.a.page1.rtan015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan015
            #add-point:ON ACTION controlp INFIELD rtan015 name="construct.c.page1.rtan015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan016
            #add-point:BEFORE FIELD rtan016 name="construct.b.page1.rtan016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan016
            
            #add-point:AFTER FIELD rtan016 name="construct.a.page1.rtan016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan016
            #add-point:ON ACTION controlp INFIELD rtan016 name="construct.c.page1.rtan016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan017
            #add-point:BEFORE FIELD rtan017 name="construct.b.page1.rtan017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan017
            
            #add-point:AFTER FIELD rtan017 name="construct.a.page1.rtan017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan017
            #add-point:ON ACTION controlp INFIELD rtan017 name="construct.c.page1.rtan017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan018
            #add-point:BEFORE FIELD rtan018 name="construct.b.page1.rtan018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan018
            
            #add-point:AFTER FIELD rtan018 name="construct.a.page1.rtan018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan018
            #add-point:ON ACTION controlp INFIELD rtan018 name="construct.c.page1.rtan018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan019
            #add-point:BEFORE FIELD rtan019 name="construct.b.page1.rtan019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan019
            
            #add-point:AFTER FIELD rtan019 name="construct.a.page1.rtan019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan019
            #add-point:ON ACTION controlp INFIELD rtan019 name="construct.c.page1.rtan019"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan020
            #add-point:BEFORE FIELD rtan020 name="construct.b.page1.rtan020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan020
            
            #add-point:AFTER FIELD rtan020 name="construct.a.page1.rtan020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan020
            #add-point:ON ACTION controlp INFIELD rtan020 name="construct.c.page1.rtan020"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan021
            #add-point:BEFORE FIELD rtan021 name="construct.b.page1.rtan021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan021
            
            #add-point:AFTER FIELD rtan021 name="construct.a.page1.rtan021"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan021
            #add-point:ON ACTION controlp INFIELD rtan021 name="construct.c.page1.rtan021"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan022
            #add-point:BEFORE FIELD rtan022 name="construct.b.page1.rtan022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan022
            
            #add-point:AFTER FIELD rtan022 name="construct.a.page1.rtan022"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan022
            #add-point:ON ACTION controlp INFIELD rtan022 name="construct.c.page1.rtan022"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan023
            #add-point:BEFORE FIELD rtan023 name="construct.b.page1.rtan023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan023
            
            #add-point:AFTER FIELD rtan023 name="construct.a.page1.rtan023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtan023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan023
            #add-point:ON ACTION controlp INFIELD rtan023 name="construct.c.page1.rtan023"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtansite
            #add-point:BEFORE FIELD rtansite name="construct.b.page1.rtansite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtansite
            
            #add-point:AFTER FIELD rtansite name="construct.a.page1.rtansite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtansite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtansite
            #add-point:ON ACTION controlp INFIELD rtansite name="construct.c.page1.rtansite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtancomp
            #add-point:BEFORE FIELD rtancomp name="construct.b.page1.rtancomp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtancomp
            
            #add-point:AFTER FIELD rtancomp name="construct.a.page1.rtancomp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtancomp
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtancomp
            #add-point:ON ACTION controlp INFIELD rtancomp name="construct.c.page1.rtancomp"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON rtaqunit,rtaqsite,rtaqseq,rtaqseq1,rtaq001,rtaq002,rtaq004,rtaq003,rtaq005, 
          rtaq006,rtaq007,rtaq008,rtaq009,rtaq010,rtaqacti
           FROM s_detail2[1].rtaqunit,s_detail2[1].rtaqsite,s_detail2[1].rtaqseq,s_detail2[1].rtaqseq1, 
               s_detail2[1].rtaq001,s_detail2[1].rtaq002,s_detail2[1].rtaq004,s_detail2[1].rtaq003,s_detail2[1].rtaq005, 
               s_detail2[1].rtaq006,s_detail2[1].rtaq007,s_detail2[1].rtaq008,s_detail2[1].rtaq009,s_detail2[1].rtaq010, 
               s_detail2[1].rtaqacti
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaqunit
            #add-point:BEFORE FIELD rtaqunit name="construct.b.page2.rtaqunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaqunit
            
            #add-point:AFTER FIELD rtaqunit name="construct.a.page2.rtaqunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtaqunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaqunit
            #add-point:ON ACTION controlp INFIELD rtaqunit name="construct.c.page2.rtaqunit"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaqsite
            #add-point:BEFORE FIELD rtaqsite name="construct.b.page2.rtaqsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaqsite
            
            #add-point:AFTER FIELD rtaqsite name="construct.a.page2.rtaqsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtaqsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaqsite
            #add-point:ON ACTION controlp INFIELD rtaqsite name="construct.c.page2.rtaqsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaqseq
            #add-point:BEFORE FIELD rtaqseq name="construct.b.page2.rtaqseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaqseq
            
            #add-point:AFTER FIELD rtaqseq name="construct.a.page2.rtaqseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtaqseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaqseq
            #add-point:ON ACTION controlp INFIELD rtaqseq name="construct.c.page2.rtaqseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaqseq1
            #add-point:BEFORE FIELD rtaqseq1 name="construct.b.page2.rtaqseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaqseq1
            
            #add-point:AFTER FIELD rtaqseq1 name="construct.a.page2.rtaqseq1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtaqseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaqseq1
            #add-point:ON ACTION controlp INFIELD rtaqseq1 name="construct.c.page2.rtaqseq1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq001
            #add-point:BEFORE FIELD rtaq001 name="construct.b.page2.rtaq001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq001
            
            #add-point:AFTER FIELD rtaq001 name="construct.a.page2.rtaq001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtaq001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq001
            #add-point:ON ACTION controlp INFIELD rtaq001 name="construct.c.page2.rtaq001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq002
            #add-point:BEFORE FIELD rtaq002 name="construct.b.page2.rtaq002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq002
            
            #add-point:AFTER FIELD rtaq002 name="construct.a.page2.rtaq002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtaq002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq002
            #add-point:ON ACTION controlp INFIELD rtaq002 name="construct.c.page2.rtaq002"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtal001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaq002  #顯示到畫面上
            NEXT FIELD rtaq002                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq004
            #add-point:BEFORE FIELD rtaq004 name="construct.b.page2.rtaq004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq004
            
            #add-point:AFTER FIELD rtaq004 name="construct.a.page2.rtaq004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtaq004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq004
            #add-point:ON ACTION controlp INFIELD rtaq004 name="construct.c.page2.rtaq004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq003
            #add-point:BEFORE FIELD rtaq003 name="construct.b.page2.rtaq003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq003
            
            #add-point:AFTER FIELD rtaq003 name="construct.a.page2.rtaq003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtaq003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq003
            #add-point:ON ACTION controlp INFIELD rtaq003 name="construct.c.page2.rtaq003"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtaq003  #顯示到畫面上
            NEXT FIELD rtaq003                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq005
            #add-point:BEFORE FIELD rtaq005 name="construct.b.page2.rtaq005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq005
            
            #add-point:AFTER FIELD rtaq005 name="construct.a.page2.rtaq005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtaq005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq005
            #add-point:ON ACTION controlp INFIELD rtaq005 name="construct.c.page2.rtaq005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq006
            #add-point:BEFORE FIELD rtaq006 name="construct.b.page2.rtaq006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq006
            
            #add-point:AFTER FIELD rtaq006 name="construct.a.page2.rtaq006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtaq006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq006
            #add-point:ON ACTION controlp INFIELD rtaq006 name="construct.c.page2.rtaq006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq007
            #add-point:BEFORE FIELD rtaq007 name="construct.b.page2.rtaq007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq007
            
            #add-point:AFTER FIELD rtaq007 name="construct.a.page2.rtaq007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtaq007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq007
            #add-point:ON ACTION controlp INFIELD rtaq007 name="construct.c.page2.rtaq007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq008
            #add-point:BEFORE FIELD rtaq008 name="construct.b.page2.rtaq008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq008
            
            #add-point:AFTER FIELD rtaq008 name="construct.a.page2.rtaq008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtaq008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq008
            #add-point:ON ACTION controlp INFIELD rtaq008 name="construct.c.page2.rtaq008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq009
            #add-point:BEFORE FIELD rtaq009 name="construct.b.page2.rtaq009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq009
            
            #add-point:AFTER FIELD rtaq009 name="construct.a.page2.rtaq009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtaq009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq009
            #add-point:ON ACTION controlp INFIELD rtaq009 name="construct.c.page2.rtaq009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq010
            #add-point:BEFORE FIELD rtaq010 name="construct.b.page2.rtaq010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq010
            
            #add-point:AFTER FIELD rtaq010 name="construct.a.page2.rtaq010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtaq010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq010
            #add-point:ON ACTION controlp INFIELD rtaq010 name="construct.c.page2.rtaq010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaqacti
            #add-point:BEFORE FIELD rtaqacti name="construct.b.page2.rtaqacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaqacti
            
            #add-point:AFTER FIELD rtaqacti name="construct.a.page2.rtaqacti"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtaqacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaqacti
            #add-point:ON ACTION controlp INFIELD rtaqacti name="construct.c.page2.rtaqacti"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "rtam_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtan_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtaq_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="artt230.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION artt230_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON rtamsite,rtamdocno,rtamdocdt,rtam001,rtam003,rtam004,rtam005,rtam006
                          FROM s_browse[1].b_rtamsite,s_browse[1].b_rtamdocno,s_browse[1].b_rtamdocdt, 
                              s_browse[1].b_rtam001,s_browse[1].b_rtam003,s_browse[1].b_rtam004,s_browse[1].b_rtam005, 
                              s_browse[1].b_rtam006
 
         BEFORE CONSTRUCT
               DISPLAY artt230_filter_parser('rtamsite') TO s_browse[1].b_rtamsite
            DISPLAY artt230_filter_parser('rtamdocno') TO s_browse[1].b_rtamdocno
            DISPLAY artt230_filter_parser('rtamdocdt') TO s_browse[1].b_rtamdocdt
            DISPLAY artt230_filter_parser('rtam001') TO s_browse[1].b_rtam001
            DISPLAY artt230_filter_parser('rtam003') TO s_browse[1].b_rtam003
            DISPLAY artt230_filter_parser('rtam004') TO s_browse[1].b_rtam004
            DISPLAY artt230_filter_parser('rtam005') TO s_browse[1].b_rtam005
            DISPLAY artt230_filter_parser('rtam006') TO s_browse[1].b_rtam006
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL artt230_filter_show('rtamsite')
   CALL artt230_filter_show('rtamdocno')
   CALL artt230_filter_show('rtamdocdt')
   CALL artt230_filter_show('rtam001')
   CALL artt230_filter_show('rtam003')
   CALL artt230_filter_show('rtam004')
   CALL artt230_filter_show('rtam005')
   CALL artt230_filter_show('rtam006')
 
END FUNCTION
 
{</section>}
 
{<section id="artt230.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION artt230_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="artt230.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION artt230_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = artt230_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="artt230.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION artt230_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_rtan_d.clear()
   CALL g_rtan2_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL artt230_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL artt230_browser_fill("")
      CALL artt230_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL artt230_filter_show('rtamsite')
   CALL artt230_filter_show('rtamdocno')
   CALL artt230_filter_show('rtamdocdt')
   CALL artt230_filter_show('rtam001')
   CALL artt230_filter_show('rtam003')
   CALL artt230_filter_show('rtam004')
   CALL artt230_filter_show('rtam005')
   CALL artt230_filter_show('rtam006')
   CALL artt230_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL artt230_fetch("F") 
      #顯示單身筆數
      CALL artt230_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="artt230.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION artt230_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_rtam_m.rtamdocno = g_browser[g_current_idx].b_rtamdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE artt230_master_referesh USING g_rtam_m.rtamdocno INTO g_rtam_m.rtamsite,g_rtam_m.rtamdocdt, 
       g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam007, 
       g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid, 
       g_rtam_m.rtamowndp,g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid, 
       g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt,g_rtam_m.rtamsite_desc,g_rtam_m.rtam003_desc, 
       g_rtam_m.rtam004_desc,g_rtam_m.rtam005_desc,g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid_desc, 
       g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtammodid_desc,g_rtam_m.rtamcnfid_desc
   
   #遮罩相關處理
   LET g_rtam_m_mask_o.* =  g_rtam_m.*
   CALL artt230_rtam_t_mask()
   LET g_rtam_m_mask_n.* =  g_rtam_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt230_set_act_visible()   
   CALL artt230_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   #160604-00004#1 -s by 08172
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("modify_detail", FALSE)
   ELSE
      CALL cl_set_act_visible("modify_detail",TRUE)
   END IF
#   IF g_rtam_m.rtamstus != 'N' THEN
#      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
#      CALL cl_set_act_visible("reproduce",TRUE)
#   ELSE 
#      CALL cl_set_act_visible("modify,delete,modify_detail",TRUE) 
#      CALL cl_set_act_visible("reproduce",FALSE)      
#   END IF
#   CALL artt230_set_act_visible()   
#   CALL artt230_set_act_no_visible()   
   #160604-00004#1 -e by 08172
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_rtam_m_t.* = g_rtam_m.*
   LET g_rtam_m_o.* = g_rtam_m.*
   
   LET g_data_owner = g_rtam_m.rtamownid      
   LET g_data_dept  = g_rtam_m.rtamowndp
   
   #重新顯示   
   CALL artt230_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="artt230.insert" >}
#+ 資料新增
PRIVATE FUNCTION artt230_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   DEFINE l_insert      LIKE type_t.num5 
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_doctype     LIKE rtai_t.rtai004
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_rtan_d.clear()   
   CALL g_rtan2_d.clear()  
 
 
   INITIALIZE g_rtam_m.* TO NULL             #DEFAULT 設定
   
   LET g_rtamdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rtam_m.rtamownid = g_user
      LET g_rtam_m.rtamowndp = g_dept
      LET g_rtam_m.rtamcrtid = g_user
      LET g_rtam_m.rtamcrtdp = g_dept 
      LET g_rtam_m.rtamcrtdt = cl_get_current()
      LET g_rtam_m.rtammodid = g_user
      LET g_rtam_m.rtammoddt = cl_get_current()
      LET g_rtam_m.rtamstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值 name="insert.default"
      LET g_site_flag = FALSE
      CALL s_aooi500_default(g_prog,'rtamsite',g_rtam_m.rtamsite)
         RETURNING l_insert,g_rtam_m.rtamsite
      IF NOT l_insert THEN
         RETURN
      END IF
      LET g_rtam_m.rtam000 = 'I'
      LET g_rtam_m.rtam002 = 1
      LET g_rtam_m.rtamdocdt = g_today
      LET g_rtam_m.rtam004 = g_user
      LET g_rtam_m.rtamunit = g_rtam_m.rtamsite
      SELECT ooag003 INTO g_rtam_m.rtam005
        FROM ooag_t
       WHERE ooagent = g_enterprise
         AND ooag001 = g_rtam_m.rtam004
         
      #預設單據的單別 
      LET l_success = ''
      LET l_doctype = ''
      CALL s_arti200_get_def_doc_type(g_rtam_m.rtamsite,g_prog,'1')
           RETURNING l_success, l_doctype
      LET g_rtam_m.rtamdocno = l_doctype
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtam_m.rtamsite
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_rtam_m.rtamsite_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_rtam_m.rtamsite_desc
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtam_m.rtam004
      CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
      LET g_rtam_m.rtam004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_rtam_m.rtam004_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtam_m.rtam005
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_rtam_m.rtam005_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_rtam_m.rtam005_desc
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_rtam_m_t.* = g_rtam_m.*
      LET g_rtam_m_o.* = g_rtam_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtam_m.rtamstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL artt230_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_rtam_m.* TO NULL
         INITIALIZE g_rtan_d TO NULL
         INITIALIZE g_rtan2_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL artt230_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_rtan_d.clear()
      #CALL g_rtan2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt230_set_act_visible()   
   CALL artt230_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtamdocno_t = g_rtam_m.rtamdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtament = " ||g_enterprise|| " AND",
                      " rtamdocno = '", g_rtam_m.rtamdocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artt230_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE artt230_cl
   
   CALL artt230_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE artt230_master_referesh USING g_rtam_m.rtamdocno INTO g_rtam_m.rtamsite,g_rtam_m.rtamdocdt, 
       g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam007, 
       g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid, 
       g_rtam_m.rtamowndp,g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid, 
       g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt,g_rtam_m.rtamsite_desc,g_rtam_m.rtam003_desc, 
       g_rtam_m.rtam004_desc,g_rtam_m.rtam005_desc,g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid_desc, 
       g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtammodid_desc,g_rtam_m.rtamcnfid_desc
   
   
   #遮罩相關處理
   LET g_rtam_m_mask_o.* =  g_rtam_m.*
   CALL artt230_rtam_t_mask()
   LET g_rtam_m_mask_n.* =  g_rtam_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamsite_desc,g_rtam_m.rtamdocdt,g_rtam_m.rtamdocno,g_rtam_m.rtam000, 
       g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam003_desc,g_rtam_m.rtam007,g_rtam_m.rtam004, 
       g_rtam_m.rtam004_desc,g_rtam_m.rtam005,g_rtam_m.rtam005_desc,g_rtam_m.rtam006,g_rtam_m.rtamunit, 
       g_rtam_m.rtamstus,g_rtam_m.rtamownid,g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp,g_rtam_m.rtamowndp_desc, 
       g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtid_desc,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtamcrtdt, 
       g_rtam_m.rtammodid,g_rtam_m.rtammodid_desc,g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfid_desc, 
       g_rtam_m.rtamcnfdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_rtam_m.rtamownid      
   LET g_data_dept  = g_rtam_m.rtamowndp
   
   #功能已完成,通報訊息中心
   CALL artt230_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="artt230.modify" >}
#+ 資料修改
PRIVATE FUNCTION artt230_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_rtam_m_t.* = g_rtam_m.*
   LET g_rtam_m_o.* = g_rtam_m.*
   
   IF g_rtam_m.rtamdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_rtamdocno_t = g_rtam_m.rtamdocno
 
   CALL s_transaction_begin()
   
   OPEN artt230_cl USING g_enterprise,g_rtam_m.rtamdocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt230_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE artt230_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artt230_master_referesh USING g_rtam_m.rtamdocno INTO g_rtam_m.rtamsite,g_rtam_m.rtamdocdt, 
       g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam007, 
       g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid, 
       g_rtam_m.rtamowndp,g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid, 
       g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt,g_rtam_m.rtamsite_desc,g_rtam_m.rtam003_desc, 
       g_rtam_m.rtam004_desc,g_rtam_m.rtam005_desc,g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid_desc, 
       g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtammodid_desc,g_rtam_m.rtamcnfid_desc
   
   #檢查是否允許此動作
   IF NOT artt230_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtam_m_mask_o.* =  g_rtam_m.*
   CALL artt230_rtam_t_mask()
   LET g_rtam_m_mask_n.* =  g_rtam_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
 
   
   CALL artt230_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
 
    
   WHILE TRUE
      LET g_rtamdocno_t = g_rtam_m.rtamdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_rtam_m.rtammodid = g_user 
LET g_rtam_m.rtammoddt = cl_get_current()
LET g_rtam_m.rtammodid_desc = cl_get_username(g_rtam_m.rtammodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      #160604-00004#1 -s by 08172
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_rtam_m.rtamstus MATCHES "[DR]" THEN 
         LET g_rtam_m.rtamstus = "N"
      END IF
      #160604-00004#1 -e by 08172
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL artt230_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE rtam_t SET (rtammodid,rtammoddt) = (g_rtam_m.rtammodid,g_rtam_m.rtammoddt)
          WHERE rtament = g_enterprise AND rtamdocno = g_rtamdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_rtam_m.* = g_rtam_m_t.*
            CALL artt230_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_rtam_m.rtamdocno != g_rtam_m_t.rtamdocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE rtan_t SET rtandocno = g_rtam_m.rtamdocno
 
          WHERE rtanent = g_enterprise AND rtandocno = g_rtam_m_t.rtamdocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtan_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtan_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         
         #end add-point
         
         UPDATE rtaq_t
            SET rtaqdocno = g_rtam_m.rtamdocno
 
          WHERE rtaqent = g_enterprise AND
                rtaqdocno = g_rtamdocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtaq_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtaq_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt230_set_act_visible()   
   CALL artt230_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " rtament = " ||g_enterprise|| " AND",
                      " rtamdocno = '", g_rtam_m.rtamdocno, "' "
 
   #填到對應位置
   CALL artt230_browser_fill("")
 
   CLOSE artt230_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artt230_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="artt230.input" >}
#+ 資料輸入
PRIVATE FUNCTION artt230_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_errno               STRING
   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_prcfsite            LIKE prcf_t.prcfsite
   DEFINE  l_ooegstus            LIKE ooeg_t.ooegstus
   DEFINE  l_mhaesite            LIKE mhae_t.mhaesite
   DEFINE  l_site                LIKE ooef_t.ooef001
   DEFINE  l_stfa001             LIKE stfa_t.stfa001 
   DEFINE  l_stfa050             LIKE stfa_t.stfa050    #add by geza 20150908 
   DEFINE  l_rtan007             LIKE rtan_t.rtan007    #add by dengdd 20151124
   DEFINE  l_count1              LIKE type_t.num5       #LANJJ ADD ON 2016-04-05
   DEFINE l_msg                  STRING 
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamsite_desc,g_rtam_m.rtamdocdt,g_rtam_m.rtamdocno,g_rtam_m.rtam000, 
       g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam003_desc,g_rtam_m.rtam007,g_rtam_m.rtam004, 
       g_rtam_m.rtam004_desc,g_rtam_m.rtam005,g_rtam_m.rtam005_desc,g_rtam_m.rtam006,g_rtam_m.rtamunit, 
       g_rtam_m.rtamstus,g_rtam_m.rtamownid,g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp,g_rtam_m.rtamowndp_desc, 
       g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtid_desc,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtamcrtdt, 
       g_rtam_m.rtammodid,g_rtam_m.rtammodid_desc,g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfid_desc, 
       g_rtam_m.rtamcnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT rtanseq,rtan001,rtan002,rtan003,rtan004,rtan005,rtan006,rtan024,rtan007, 
       rtan008,rtan025,rtan009,rtan010,rtan011,rtan012,rtan013,rtan014,rtan015,rtan016,rtan017,rtan018, 
       rtan019,rtan020,rtan021,rtan022,rtan023,rtansite,rtancomp FROM rtan_t WHERE rtanent=? AND rtandocno=?  
       AND rtanseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt230_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   
   #end add-point    
   LET g_forupd_sql = "SELECT rtaqunit,rtaqsite,rtaqseq,rtaqseq1,rtaq001,rtaq002,rtaq004,rtaq003,rtaq005, 
       rtaq006,rtaq007,rtaq008,rtaq009,rtaq010,rtaqacti FROM rtaq_t WHERE rtaqent=? AND rtaqdocno=?  
       AND rtaqseq=? AND rtaqseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt230_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL artt230_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL artt230_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamdocdt,g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001, 
       g_rtam_m.rtam003,g_rtam_m.rtam007,g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit, 
       g_rtam_m.rtamstus
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="artt230.input.head" >}
      #單頭段
      INPUT BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamdocdt,g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001, 
          g_rtam_m.rtam003,g_rtam_m.rtam007,g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit, 
          g_rtam_m.rtamstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN artt230_cl USING g_enterprise,g_rtam_m.rtamdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt230_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE artt230_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL artt230_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            CALL cl_set_comp_required('rtan007',FALSE)     #add by dengdd 150907
            #end add-point
            CALL artt230_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtamsite
            
            #add-point:AFTER FIELD rtamsite name="input.a.rtamsite"
            IF NOT cl_null(g_rtam_m.rtamsite) THEN 
               CALL s_aooi500_chk(g_prog,'rtamsite',g_rtam_m.rtamsite,g_rtam_m.rtamsite) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = g_rtam_m.rtamsite
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  LET g_rtam_m.rtamsite = g_rtam_m_t.rtamsite
                  CALL s_desc_get_department_desc(g_rtam_m.rtamsite) RETURNING g_rtam_m.rtamsite_desc
                  DISPLAY BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamsite_desc
                  NEXT FIELD CURRENT
               END IF 
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ''
               LET g_errparam.code   = 'axc-00120'
               LET g_errparam.popup  = TRUE
               CALL cl_err()

               LET g_rtam_m.rtamsite = g_rtam_m_t.rtamsite
               CALL s_desc_get_department_desc(g_rtam_m.rtamsite)
                  RETURNING g_rtam_m.rtamsite_desc
               DISPLAY BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamsite_desc
               NEXT FIELD CURRENT
            END IF
            LET g_site_flag = TRUE
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtam_m.rtamsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtam_m.rtamsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtam_m.rtamsite_desc
            CALL artt230_set_entry(p_cmd)
            CALL artt230_set_no_entry(p_cmd)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamsite
            #add-point:BEFORE FIELD rtamsite name="input.b.rtamsite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtamsite
            #add-point:ON CHANGE rtamsite name="input.g.rtamsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamdocdt
            #add-point:BEFORE FIELD rtamdocdt name="input.b.rtamdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtamdocdt
            
            #add-point:AFTER FIELD rtamdocdt name="input.a.rtamdocdt"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtamdocdt
            #add-point:ON CHANGE rtamdocdt name="input.g.rtamdocdt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamdocno
            #add-point:BEFORE FIELD rtamdocno name="input.b.rtamdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtamdocno
            
            #add-point:AFTER FIELD rtamdocno name="input.a.rtamdocno"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_rtam_m.rtamdocno) THEN 
                LET l_ooef004 = ""
                SELECT ooef004 INTO l_ooef004
                  FROM ooef_t
                 WHERE ooef001 = g_rtam_m.rtamsite
                   AND ooefent = g_enterprise
               CALL s_aooi200_chk_slip(g_rtam_m.rtamsite,l_ooef004,g_rtam_m.rtamdocno,g_prog) RETURNING l_success
               IF NOT l_success THEN
                  LET g_rtam_m.rtamdocno = g_rtamdocno_t
                  NEXT FIELD CURRENT
               END IF
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_rtam_m.rtamdocno != g_rtamdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtam_t WHERE "||"rtament = '" ||g_enterprise|| "' AND "||"rtamdocno = '"||g_rtam_m.rtamdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtamdocno
            #add-point:ON CHANGE rtamdocno name="input.g.rtamdocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtam000
            #add-point:BEFORE FIELD rtam000 name="input.b.rtam000"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtam000
            
            #add-point:AFTER FIELD rtam000 name="input.a.rtam000"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtam000
            #add-point:ON CHANGE rtam000 name="input.g.rtam000"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtam001
            #add-point:BEFORE FIELD rtam001 name="input.b.rtam001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtam001
            
            #add-point:AFTER FIELD rtam001 name="input.a.rtam001"
            IF NOT cl_null(g_rtam_m.rtam001) THEN
               IF g_rtam_m.rtam000 = 'I' THEN 
                  LET l_n = 0
                  #检查是否存在资料档中
                  SELECT COUNT(*) INTO l_n
                    FROM rtam_t
                   WHERE rtament = g_enterprise
                     AND rtam001 = g_rtam_m.rtam001
                  IF l_n > 0 THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = g_rtam_m.rtam001
                     LET g_errparam.code   = 'std-00004'
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     LET g_rtam_m.rtam001 = g_rtam_m_t.rtam001
                     NEXT FIELD rtam001
                  END IF 
               ELSE
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = '1'
                  LET g_chkparam.arg1 = g_rtam_m.rtam001
                  IF NOT cl_chk_exist("v_stao001") THEN
                     LET g_rtam_m.rtam001 = g_rtam_m_t.rtam001
                     NEXT FIELD rtam001
                  ELSE
                     IF p_cmd = 'a' THEN
                        SELECT COUNT(*) INTO l_n FROM rtam_t
                        WHERE rtament = g_enterprise AND rtam001 = g_rtam_m.rtam001 AND rtamstus = 'N'
                     ELSE
                       SELECT COUNT(*) INTO l_n FROM rtam_t
                        WHERE rtament = g_enterprise AND rtam001 = g_rtam_m.rtam001 AND rtamstus = 'N'
                          AND rtamdocno <> g_rtam_m.rtamdocno
                     END IF
                     
                     IF l_n > 0 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'art-00690'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        LET g_rtam_m.rtam001 = g_rtam_m_t.rtam001
                        NEXT FIELD rtam001
                     END IF
                     SELECT MAX(rtao002) + 1 INTO g_rtam_m.rtam002
                       FROM rtao_t
                      WHERE rtaoent = g_enterprise
                        AND rtao001 = g_rtam_m.rtam001
                     IF cl_null(g_rtam_m.rtam002) THEN 
                        LET g_rtam_m.rtam002 = 1
                     END IF 
                     DISPLAY BY NAME g_rtam_m.rtam001,g_rtam_m.rtam002
                  END IF 
                  CALL artt230_get_rtao()
               END IF 
               CALL cl_set_comp_entry('rtam000',FALSE)
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtam001
            #add-point:ON CHANGE rtam001 name="input.g.rtam001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtam003
            
            #add-point:AFTER FIELD rtam003 name="input.a.rtam003"
            IF NOT cl_null(g_rtam_m.rtam003) THEN 
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_rtam_m.rtam003
               LET g_errshow = TRUE   #160318-00025#50
               LET g_chkparam.err_str[1] = "apr-00060:sub-01307|aprm201|",cl_get_progname("aprm201",g_lang,"2"),"|:EXEPROGaprm201"    #160318-00025#50
               LET g_chkparam.err_str[2] = "apr-00059:sub-01302|aprm201|",cl_get_progname("aprm201",g_lang,"2"),"|:EXEPROGaprm201"    #160318-00025#50
               IF NOT cl_chk_exist("v_prcf001") THEN
                  LET g_rtam_m.rtam003 = g_rtam_m_t.rtam003
                  NEXT FIELD rtam003
               ELSE
                  #检查制定组织是否为当前组织
                  SELECT prcfsite INTO l_prcfsite
                    FROM prcf_t
                   WHERE prcfent = g_enterprise
                     AND prcf001 = g_rtam_m.rtam003
                  IF l_prcfsite != g_rtam_m.rtamsite THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = l_prcfsite
                     LET g_errparam.code   = 'art-00672'
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     LET g_rtam_m.rtam003 = g_rtam_m_t.rtam003
                     INITIALIZE g_ref_fields TO NULL
                     LET g_ref_fields[1] = g_rtam_m.rtam003
                     CALL ap_ref_array2(g_ref_fields,"SELECT prcfl003 FROM prcfl_t WHERE prcflent='"||g_enterprise||"' AND prcfl001=? AND prcfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
                     LET g_rtam_m.rtam003_desc = '', g_rtn_fields[1] , ''
                     DISPLAY BY NAME g_rtam_m.rtam003_desc
                     NEXT FIELD rtam003
                  END IF 
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtam_m.rtam003
            CALL ap_ref_array2(g_ref_fields,"SELECT prcfl003 FROM prcfl_t WHERE prcflent='"||g_enterprise||"' AND prcfl001=? AND prcfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtam_m.rtam003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtam_m.rtam003_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtam003
            #add-point:BEFORE FIELD rtam003 name="input.b.rtam003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtam003
            #add-point:ON CHANGE rtam003 name="input.g.rtam003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtam007
            #add-point:BEFORE FIELD rtam007 name="input.b.rtam007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtam007
            
            #add-point:AFTER FIELD rtam007 name="input.a.rtam007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtam007
            #add-point:ON CHANGE rtam007 name="input.g.rtam007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtam004
            
            #add-point:AFTER FIELD rtam004 name="input.a.rtam004"
            IF NOT cl_null(g_rtam_m.rtam004) THEN 
               CALL artt230_rtam004_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_rtam_m.rtam004 = g_rtam_m_t.rtam004
                  NEXT FIELD rtam004
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtam_m.rtam004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_rtam_m.rtam004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtam_m.rtam004_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtam004
            #add-point:BEFORE FIELD rtam004 name="input.b.rtam004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtam004
            #add-point:ON CHANGE rtam004 name="input.g.rtam004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtam005
            
            #add-point:AFTER FIELD rtam005 name="input.a.rtam005"
            IF NOT cl_null(g_rtam_m.rtam005) THEN 
               CALL artt230_rtam005_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_rtam_m.rtam005 = g_rtam_m_t.rtam005
                  NEXT FIELD rtam005
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtam_m.rtam005
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtam_m.rtam005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtam_m.rtam005_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtam005
            #add-point:BEFORE FIELD rtam005 name="input.b.rtam005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtam005
            #add-point:ON CHANGE rtam005 name="input.g.rtam005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtam006
            #add-point:BEFORE FIELD rtam006 name="input.b.rtam006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtam006
            
            #add-point:AFTER FIELD rtam006 name="input.a.rtam006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtam006
            #add-point:ON CHANGE rtam006 name="input.g.rtam006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamunit
            #add-point:BEFORE FIELD rtamunit name="input.b.rtamunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtamunit
            
            #add-point:AFTER FIELD rtamunit name="input.a.rtamunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtamunit
            #add-point:ON CHANGE rtamunit name="input.g.rtamunit"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtamstus
            #add-point:BEFORE FIELD rtamstus name="input.b.rtamstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtamstus
            
            #add-point:AFTER FIELD rtamstus name="input.a.rtamstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtamstus
            #add-point:ON CHANGE rtamstus name="input.g.rtamstus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.rtamsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtamsite
            #add-point:ON ACTION controlp INFIELD rtamsite name="input.c.rtamsite"
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            #LET g_qryparam.default1 = g_rtam_m.rtamsite             #給予default值
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtamsite',g_rtam_m.rtamsite,'i')
            CALL q_ooef001_24()
            LET g_rtam_m.rtamsite = g_qryparam.return1      #將開窗取得的值回傳到變數
            DISPLAY g_rtam_m.rtamsite TO rtamsite           #顯示到畫面上
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtam_m.rtamsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtam_m.rtamsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtam_m.rtamsite_desc
            NEXT FIELD rtamsite    
            #END add-point
 
 
         #Ctrlp:input.c.rtamdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtamdocdt
            #add-point:ON ACTION controlp INFIELD rtamdocdt name="input.c.rtamdocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtamdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtamdocno
            #add-point:ON ACTION controlp INFIELD rtamdocno name="input.c.rtamdocno"
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtam_m.rtamdocno             #給予default值
            LET l_ooef004 = ""
            SELECT ooef004 INTO l_ooef004
              FROM ooef_t
             WHERE ooef001 = g_rtam_m.rtamsite
               AND ooefent = g_enterprise
            LET g_qryparam.arg1 = l_ooef004 #
            LET g_qryparam.arg2 = g_prog #
            CALL q_ooba002_1()                            #呼叫開窗
            LET g_rtam_m.rtamdocno = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_rtam_m.rtamdocno TO rtamdocno       #顯示到畫面上
            NEXT FIELD rtamdocno                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.rtam000
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtam000
            #add-point:ON ACTION controlp INFIELD rtam000 name="input.c.rtam000"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtam001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtam001
            #add-point:ON ACTION controlp INFIELD rtam001 name="input.c.rtam001"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            IF g_rtam_m.rtam000 = 'U' THEN 
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               
               LET g_qryparam.default1 = g_rtam_m.rtam001             #給予default值
               
               #給予arg
               LET g_qryparam.arg1 = "" #
               
               
               CALL q_rtao001()                                #呼叫開窗
               
               LET g_rtam_m.rtam001 = g_qryparam.return1              
               
               DISPLAY g_rtam_m.rtam001 TO rtam001              #
               
               NEXT FIELD rtam001                          #返回原欄位
            END IF 

            #END add-point
 
 
         #Ctrlp:input.c.rtam003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtam003
            #add-point:ON ACTION controlp INFIELD rtam003 name="input.c.rtam003"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtam_m.rtam003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "1" #s
            LET g_qryparam.WHERE = " prcfunit = '",g_rtam_m.rtamsite,"'"

            CALL q_prcf001_1()                                #呼叫開窗

            LET g_rtam_m.rtam003 = g_qryparam.return1              

            DISPLAY g_rtam_m.rtam003 TO rtam003              #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtam_m.rtam003
            CALL ap_ref_array2(g_ref_fields,"SELECT prcfl003 FROM prcfl_t WHERE prcflent='"||g_enterprise||"' AND prcfl001=? AND prcfl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtam_m.rtam003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtam_m.rtam003_desc
            NEXT FIELD rtam003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.rtam007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtam007
            #add-point:ON ACTION controlp INFIELD rtam007 name="input.c.rtam007"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "2139" 
            CALL q_oocq002()                           #呼叫開窗
            LET g_rtam_m.rtam007 = g_qryparam.return1       
            DISPLAY g_rtam_m.rtam007 TO rtam007    #顯示到畫面上
            NEXT FIELD rtam007                     #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.rtam004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtam004
            #add-point:ON ACTION controlp INFIELD rtam004 name="input.c.rtam004"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtam_m.rtam004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooag001()                                #呼叫開窗

            LET g_rtam_m.rtam004 = g_qryparam.return1              

            DISPLAY g_rtam_m.rtam004 TO rtam004              #

            NEXT FIELD rtam004                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.rtam005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtam005
            #add-point:ON ACTION controlp INFIELD rtam005 name="input.c.rtam005"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtam_m.rtam005             #給予default值
            LET g_qryparam.default2 = "" #g_rtam_m.ooeg001 #部門編號
            #給予arg
            LET g_qryparam.arg1 = g_today


            CALL q_ooeg001()                                #呼叫開窗

            LET g_rtam_m.rtam005 = g_qryparam.return1              
            #LET g_rtam_m.ooeg001 = g_qryparam.return2 
            DISPLAY g_rtam_m.rtam005 TO rtam005              #
            #DISPLAY g_rtam_m.ooeg001 TO ooeg001 #部門編號
            NEXT FIELD rtam005                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.rtam006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtam006
            #add-point:ON ACTION controlp INFIELD rtam006 name="input.c.rtam006"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtamunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtamunit
            #add-point:ON ACTION controlp INFIELD rtamunit name="input.c.rtamunit"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtamstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtamstus
            #add-point:ON ACTION controlp INFIELD rtamstus name="input.c.rtamstus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_rtam_m.rtamdocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               CALL s_aooi200_gen_docno(g_rtam_m.rtamsite,g_rtam_m.rtamdocno,g_rtam_m.rtamdocdt,g_prog) RETURNING l_success,g_rtam_m.rtamdocno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_rtam_m.rtamdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD rtamdocno
               END IF
               #end add-point
               
               INSERT INTO rtam_t (rtament,rtamsite,rtamdocdt,rtamdocno,rtam000,rtam001,rtam002,rtam003, 
                   rtam007,rtam004,rtam005,rtam006,rtamunit,rtamstus,rtamownid,rtamowndp,rtamcrtid,rtamcrtdp, 
                   rtamcrtdt,rtammodid,rtammoddt,rtamcnfid,rtamcnfdt)
               VALUES (g_enterprise,g_rtam_m.rtamsite,g_rtam_m.rtamdocdt,g_rtam_m.rtamdocno,g_rtam_m.rtam000, 
                   g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam007,g_rtam_m.rtam004, 
                   g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid, 
                   g_rtam_m.rtamowndp,g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid, 
                   g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_rtam_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
 
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL artt230_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL artt230_b_fill()
                  CALL artt230_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               IF g_rtam_m.rtam000 = 'U' THEN 
                  IF NOT artt230_rtan_ins() THEN 
                     NEXT FIELD CURRENT
                  END IF 
                  CALL artt230_b_fill()
               END IF 
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL artt230_rtam_t_mask_restore('restore_mask_o')
               
               UPDATE rtam_t SET (rtamsite,rtamdocdt,rtamdocno,rtam000,rtam001,rtam002,rtam003,rtam007, 
                   rtam004,rtam005,rtam006,rtamunit,rtamstus,rtamownid,rtamowndp,rtamcrtid,rtamcrtdp, 
                   rtamcrtdt,rtammodid,rtammoddt,rtamcnfid,rtamcnfdt) = (g_rtam_m.rtamsite,g_rtam_m.rtamdocdt, 
                   g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003, 
                   g_rtam_m.rtam007,g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit, 
                   g_rtam_m.rtamstus,g_rtam_m.rtamownid,g_rtam_m.rtamowndp,g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp, 
                   g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid,g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt) 
 
                WHERE rtament = g_enterprise AND rtamdocno = g_rtamdocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "rtam_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL artt230_rtam_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_rtam_m_t)
               LET g_log2 = util.JSON.stringify(g_rtam_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_rtamdocno_t = g_rtam_m.rtamdocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="artt230.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_rtan_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            LET l_n = 0
            SELECT COUNT(*) INTO l_n
              FROM rtan_t
             WHERE rtanent = g_enterprise
               AND rtandocno = g_rtam_m.rtamdocno
            IF g_rtam_m.rtam000 = 'U' AND l_n = 0 THEN 
               CALL artt230_get_rtap()
               CALL artt230_b_fill()
            END IF
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtan_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artt230_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_rtan_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artt230_cl USING g_enterprise,g_rtam_m.rtamdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt230_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE artt230_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_rtan_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtan_d[l_ac].rtanseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_rtan_d_t.* = g_rtan_d[l_ac].*  #BACKUP
               LET g_rtan_d_o.* = g_rtan_d[l_ac].*  #BACKUP
               CALL artt230_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL artt230_set_no_entry_b(l_cmd)
               IF NOT artt230_lock_b("rtan_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artt230_bcl INTO g_rtan_d[l_ac].rtanseq,g_rtan_d[l_ac].rtan001,g_rtan_d[l_ac].rtan002, 
                      g_rtan_d[l_ac].rtan003,g_rtan_d[l_ac].rtan004,g_rtan_d[l_ac].rtan005,g_rtan_d[l_ac].rtan006, 
                      g_rtan_d[l_ac].rtan024,g_rtan_d[l_ac].rtan007,g_rtan_d[l_ac].rtan008,g_rtan_d[l_ac].rtan025, 
                      g_rtan_d[l_ac].rtan009,g_rtan_d[l_ac].rtan010,g_rtan_d[l_ac].rtan011,g_rtan_d[l_ac].rtan012, 
                      g_rtan_d[l_ac].rtan013,g_rtan_d[l_ac].rtan014,g_rtan_d[l_ac].rtan015,g_rtan_d[l_ac].rtan016, 
                      g_rtan_d[l_ac].rtan017,g_rtan_d[l_ac].rtan018,g_rtan_d[l_ac].rtan019,g_rtan_d[l_ac].rtan020, 
                      g_rtan_d[l_ac].rtan021,g_rtan_d[l_ac].rtan022,g_rtan_d[l_ac].rtan023,g_rtan_d[l_ac].rtansite, 
                      g_rtan_d[l_ac].rtancomp
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_rtan_d_t.rtanseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rtan_d_mask_o[l_ac].* =  g_rtan_d[l_ac].*
                  CALL artt230_rtan_t_mask()
                  LET g_rtan_d_mask_n[l_ac].* =  g_rtan_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL artt230_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtan_d[l_ac].* TO NULL 
            INITIALIZE g_rtan_d_t.* TO NULL 
            INITIALIZE g_rtan_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_rtan_d[l_ac].rtan006 = "0"
      LET g_rtan_d[l_ac].rtan012 = "N"
      LET g_rtan_d[l_ac].rtan013 = "N"
      LET g_rtan_d[l_ac].rtan014 = "2"
      LET g_rtan_d[l_ac].rtan015 = "1"
      LET g_rtan_d[l_ac].rtan016 = "0"
      LET g_rtan_d[l_ac].rtan017 = "0"
      LET g_rtan_d[l_ac].rtan018 = "0"
      LET g_rtan_d[l_ac].rtan020 = "1"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_rtan_d_t.* = g_rtan_d[l_ac].*     #新輸入資料
            LET g_rtan_d_o.* = g_rtan_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artt230_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            #预设项次
            SELECT MAX(rtanseq) + 1 INTO g_rtan_d[l_ac].rtanseq
              FROM rtan_t
             WHERE rtanent = g_enterprise
               AND rtandocno = g_rtam_m.rtamdocno
            IF cl_null(g_rtan_d[l_ac].rtanseq) THEN 
               LET g_rtan_d[l_ac].rtanseq = 1
            END IF 
            LET g_rtan_d[l_ac].rtan001 = g_rtam_m.rtam001
            LET g_rtan_d[l_ac].rtan003 = g_today
            LET g_rtan_d[l_ac].rtan004 = g_today
            #end add-point
            CALL artt230_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtan_d[li_reproduce_target].* = g_rtan_d[li_reproduce].*
 
               LET g_rtan_d[li_reproduce_target].rtanseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM rtan_t 
             WHERE rtanent = g_enterprise AND rtandocno = g_rtam_m.rtamdocno
 
               AND rtanseq = g_rtan_d[l_ac].rtanseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtam_m.rtamdocno
               LET gs_keys[2] = g_rtan_d[g_detail_idx].rtanseq
               CALL artt230_insert_b('rtan_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_rtan_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtan_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artt230_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtam_m.rtamdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_rtan_d_t.rtanseq
 
            
               #刪除同層單身
               IF NOT artt230_delete_b('rtan_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt230_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT artt230_key_delete_b(gs_keys,'rtan_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt230_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE artt230_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_rtan_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rtan_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtanseq
            #add-point:BEFORE FIELD rtanseq name="input.b.page1.rtanseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtanseq
            
            #add-point:AFTER FIELD rtanseq name="input.a.page1.rtanseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_rtam_m.rtamdocno IS NOT NULL AND g_rtan_d[g_detail_idx].rtanseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtam_m.rtamdocno != g_rtamdocno_t OR g_rtan_d[g_detail_idx].rtanseq != g_rtan_d_t.rtanseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtan_t WHERE "||"rtanent = '" ||g_enterprise|| "' AND "||"rtandocno = '"||g_rtam_m.rtamdocno ||"' AND "|| "rtanseq = '"||g_rtan_d[g_detail_idx].rtanseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtanseq
            #add-point:ON CHANGE rtanseq name="input.g.page1.rtanseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan001
            #add-point:BEFORE FIELD rtan001 name="input.b.page1.rtan001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan001
            
            #add-point:AFTER FIELD rtan001 name="input.a.page1.rtan001"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan001
            #add-point:ON CHANGE rtan001 name="input.g.page1.rtan001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan002
            
            #add-point:AFTER FIELD rtan002 name="input.a.page1.rtan002"
            IF NOT cl_null(g_rtan_d[l_ac].rtan002) THEN 
               #IF l_cmd = 'a' OR (l_cmd = 'u' AND g_rtan_d[l_ac].rtan002!=g_rtan_d_t.rtan002) THEN   #160824-00007#161 20161129 mark by beckxie
               IF g_rtan_d[l_ac].rtan002!=g_rtan_d_o.rtan002 OR cl_null(g_rtan_d_o.rtan002) THEN   #160824-00007#161 20161129 add by beckxie
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = '1'
                  LET g_chkparam.arg1 = g_rtan_d[l_ac].rtan002
                  IF NOT cl_chk_exist("v_rtal001") THEN
                     #LET g_rtan_d[l_ac].rtan002 = g_rtan_d_t.rtan002   #160824-00007#161 20161129 mark by beckxie
                     #160824-00007#161 20161129 add by beckxie---S
                     LET g_rtan_d[l_ac].rtan002 = g_rtan_d_o.rtan002   
                     LET g_rtan_d[l_ac].rtan002_desc = g_rtan_d_o.rtan002_desc  
                     LET g_rtan_d[l_ac].rtan006      = g_rtan_d_o.rtan006     
                     LET g_rtan_d[l_ac].rtan016      = g_rtan_d_o.rtan016     
                     LET g_rtan_d[l_ac].rtan011      = g_rtan_d_o.rtan011     
                     LET g_rtan_d[l_ac].rtan011_desc = g_rtan_d_o.rtan011_desc
                     LET g_rtan_d[l_ac].rtan012      = g_rtan_d_o.rtan012     
                     LET g_rtan_d[l_ac].rtan013      = g_rtan_d_o.rtan013     
                     #160824-00007#161 20161129 add by beckxie---E
                     NEXT FIELD rtan002
                  END IF
                  SELECT rtalsite INTO l_site
                    FROM rtal_t
                   WHERE rtalent = g_enterprise
                     AND rtal001 = g_rtan_d[l_ac].rtan002
                  #检查此资源对应的门第是否为当前门店下及下级
                  CALL s_aooi500_chk(g_prog,'rtamsite',l_site,g_rtam_m.rtamsite) RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = g_rtan_d[l_ac].rtan002
                     LET g_errparam.code   = 'art-00684'
                     LET g_errparam.popup  = TRUE
                     #LET g_rtan_d[l_ac].rtan002 = g_rtan_d_t.rtan002   #160824-00007#161 20161129 mark by beckxie
                     #160824-00007#161 20161129 add by beckxie---S
                     LET g_rtan_d[l_ac].rtan002 = g_rtan_d_o.rtan002   
                     LET g_rtan_d[l_ac].rtan002_desc = g_rtan_d_o.rtan002_desc  
                     LET g_rtan_d[l_ac].rtan006      = g_rtan_d_o.rtan006     
                     LET g_rtan_d[l_ac].rtan016      = g_rtan_d_o.rtan016     
                     LET g_rtan_d[l_ac].rtan011      = g_rtan_d_o.rtan011     
                     LET g_rtan_d[l_ac].rtan011_desc = g_rtan_d_o.rtan011_desc
                     LET g_rtan_d[l_ac].rtan012      = g_rtan_d_o.rtan012     
                     LET g_rtan_d[l_ac].rtan013      = g_rtan_d_o.rtan013     
                     #160824-00007#161 20161129 add by beckxie---E
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
                  LET l_n = 0               
                  #检查编号是否重复 
                  SELECT COUNT(*) INTO l_n
                    FROM rtan_t
                   WHERE rtanent = g_enterprise
                     AND rtan002 = g_rtan_d[l_ac].rtan002
                     AND rtandocno = g_rtam_m.rtamdocno
                  IF l_n > 0 THEN 
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_rtan_d[l_ac].rtan002
                     LET g_errparam.code   = 'std-00004'
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     #LET g_rtan_d[l_ac].rtan002 = g_rtan_d_t.rtan002   #160824-00007#161 20161129 mark by beckxie
                     #160824-00007#161 20161129 add by beckxie---S
                     LET g_rtan_d[l_ac].rtan002 = g_rtan_d_o.rtan002   
                     LET g_rtan_d[l_ac].rtan002_desc = g_rtan_d_o.rtan002_desc  
                     LET g_rtan_d[l_ac].rtan006      = g_rtan_d_o.rtan006     
                     LET g_rtan_d[l_ac].rtan016      = g_rtan_d_o.rtan016     
                     LET g_rtan_d[l_ac].rtan011      = g_rtan_d_o.rtan011     
                     LET g_rtan_d[l_ac].rtan011_desc = g_rtan_d_o.rtan011_desc
                     LET g_rtan_d[l_ac].rtan012      = g_rtan_d_o.rtan012     
                     LET g_rtan_d[l_ac].rtan013      = g_rtan_d_o.rtan013     
                     #160824-00007#161 20161129 add by beckxie---E
                     NEXT FIELD rtan002
                  END IF 
                  LET l_n = 0
                  #检查是否存在其他未审核的单据中
                  SELECT COUNT(*) INTO l_n
                    FROM rtan_t,rtam_t
                   WHERE rtanent = g_enterprise
                     AND rtan002 = g_rtan_d[l_ac].rtan002
                     AND rtandocno <> g_rtam_m.rtamdocno
                     AND rtanent = rtament
                     AND rtandocno = rtamdocno
                     AND rtamstus = 'N'
                  IF l_n > 0 THEN 
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_rtan_d[l_ac].rtan002
                     LET g_errparam.code   = 'art-00677'
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     #LET g_rtan_d[l_ac].rtan002 = g_rtan_d_t.rtan002   #160824-00007#161 20161129 mark by beckxie
                     #160824-00007#161 20161129 add by beckxie---S
                     LET g_rtan_d[l_ac].rtan002 = g_rtan_d_o.rtan002   
                     LET g_rtan_d[l_ac].rtan002_desc = g_rtan_d_o.rtan002_desc  
                     LET g_rtan_d[l_ac].rtan006      = g_rtan_d_o.rtan006     
                     LET g_rtan_d[l_ac].rtan016      = g_rtan_d_o.rtan016     
                     LET g_rtan_d[l_ac].rtan011      = g_rtan_d_o.rtan011     
                     LET g_rtan_d[l_ac].rtan011_desc = g_rtan_d_o.rtan011_desc
                     LET g_rtan_d[l_ac].rtan012      = g_rtan_d_o.rtan012     
                     LET g_rtan_d[l_ac].rtan013      = g_rtan_d_o.rtan013     
                     #160824-00007#161 20161129 add by beckxie---E
                     NEXT FIELD rtan002
                  END IF 
               END IF 
               #检查租用数量不可大于资源数量
               IF NOT artt230_rtan003_rtan004_rtan005() THEN 
                     #LET g_rtan_d[l_ac].rtan002 = g_rtan_d_t.rtan002   #160824-00007#161 20161129 mark by beckxie
                     #160824-00007#161 20161129 add by beckxie---S
                     LET g_rtan_d[l_ac].rtan002 = g_rtan_d_o.rtan002   
                     LET g_rtan_d[l_ac].rtan002_desc = g_rtan_d_o.rtan002_desc  
                     LET g_rtan_d[l_ac].rtan006      = g_rtan_d_o.rtan006     
                     LET g_rtan_d[l_ac].rtan016      = g_rtan_d_o.rtan016     
                     LET g_rtan_d[l_ac].rtan011      = g_rtan_d_o.rtan011     
                     LET g_rtan_d[l_ac].rtan011_desc = g_rtan_d_o.rtan011_desc
                     LET g_rtan_d[l_ac].rtan012      = g_rtan_d_o.rtan012     
                     LET g_rtan_d[l_ac].rtan013      = g_rtan_d_o.rtan013     
                     #160824-00007#161 20161129 add by beckxie---E
                  NEXT FIELD CURRENT 
               END IF
            END IF
            CALL artt230_rtan002_get()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan002
            CALL ap_ref_array2(g_ref_fields,"SELECT rtall003 FROM rtall_t WHERE rtallent='"||g_enterprise||"' AND rtall001=? AND rtall002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan002_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtan_d[l_ac].rtan002,g_rtan_d[l_ac].rtan002_desc  
            
            LET g_rtan_d_o.* = g_rtan_d[l_ac].*   #160824-00007#161 20161129 add by beckxie
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan002
            #add-point:BEFORE FIELD rtan002 name="input.b.page1.rtan002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan002
            #add-point:ON CHANGE rtan002 name="input.g.page1.rtan002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan003
            #add-point:BEFORE FIELD rtan003 name="input.b.page1.rtan003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan003
            
            #add-point:AFTER FIELD rtan003 name="input.a.page1.rtan003"
            IF NOT cl_null(g_rtan_d[l_ac].rtan003) AND NOT cl_null(g_rtan_d[l_ac].rtan004) THEN 
               IF g_rtan_d[l_ac].rtan003 > g_rtan_d[l_ac].rtan004 THEN 
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = '' 
                  LET g_errparam.code   = 'art-00545'
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET g_rtan_d[l_ac].rtan003 = g_rtan_d_t.rtan003
                  NEXT FIELD rtan003
               END IF
               #检查租用数量不可大于资源数量
               IF NOT artt230_rtan003_rtan004_rtan005() THEN 
                  LET g_rtan_d[l_ac].rtan003 = g_rtan_d_t.rtan003
                  NEXT FIELD CURRENT 
               END IF                
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan003
            #add-point:ON CHANGE rtan003 name="input.g.page1.rtan003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan004
            #add-point:BEFORE FIELD rtan004 name="input.b.page1.rtan004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan004
            
            #add-point:AFTER FIELD rtan004 name="input.a.page1.rtan004"
            IF NOT cl_null(g_rtan_d[l_ac].rtan003) AND NOT cl_null(g_rtan_d[l_ac].rtan004) THEN 
               IF g_rtan_d[l_ac].rtan003 > g_rtan_d[l_ac].rtan004 THEN 
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = '' 
                  LET g_errparam.code   = 'art-00545'
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET g_rtan_d[l_ac].rtan004 = g_rtan_d_t.rtan004
                  NEXT FIELD rtan004
               END IF 
               #检查租用数量不可大于资源数量
               IF NOT artt230_rtan003_rtan004_rtan005() THEN 
                  LET g_rtan_d[l_ac].rtan004 = g_rtan_d_t.rtan004
                  NEXT FIELD CURRENT 
               END IF 
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan004
            #add-point:ON CHANGE rtan004 name="input.g.page1.rtan004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan005
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtan_d[l_ac].rtan005,"0","1","","","azz-00079",1) THEN
               NEXT FIELD rtan005
            END IF 
 
 
 
            #add-point:AFTER FIELD rtan005 name="input.a.page1.rtan005"
            IF NOT cl_null(g_rtan_d[l_ac].rtan005) THEN 
               #检查租用数量不可大于资源数量
               IF NOT artt230_rtan003_rtan004_rtan005() THEN 
                  LET g_rtan_d[l_ac].rtan005 = g_rtan_d_t.rtan005
                  NEXT FIELD CURRENT 
               END IF 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan005
            #add-point:BEFORE FIELD rtan005 name="input.b.page1.rtan005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan005
            #add-point:ON CHANGE rtan005 name="input.g.page1.rtan005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan024
            #add-point:BEFORE FIELD rtan024 name="input.b.page1.rtan024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan024
            
            #add-point:AFTER FIELD rtan024 name="input.a.page1.rtan024"
            #add by dengdd 151120(S)
            CALL cl_set_comp_entry('rtan007',TRUE) #LANJJ ADD ON 2016-04-21
            CALL cl_set_comp_required('rtan025',TRUE) #LANJJ ADD ON 2016-04-21
            CASE g_rtan_d[l_ac].rtan024
                WHEN '1'
                   CALL cl_set_comp_required('rtan008',TRUE)
                   CALL cl_set_comp_required('rtan007',FALSE)
                   CALL cl_set_comp_entry('rtan007',FALSE) #LANJJ ADD ON 2016-04-21
                   CALL cl_set_comp_required('rtan025',TRUE) #LANJJ ADD ON 2016-04-21
                WHEN '2' 
                   CALL cl_set_comp_required('rtan007',TRUE)
                   CALL cl_set_comp_required('rtan025',TRUE) #LANJJ ADD ON 2016-04-21
                WHEN '3'
                   CALL cl_set_comp_required('rtan008',FALSE)
                   CALL cl_set_comp_required('rtan007',FALSE)
                   CALL cl_set_comp_required('rtan025',FALSE) #LANJJ ADD ON 2016-04-21
                   ##add by zhangnan --str
                   LET g_rtan_d[l_ac].rtan010 = g_rtam_m.rtam005
                   INITIALIZE g_ref_fields TO NULL
                   LET g_ref_fields[1] = g_rtan_d[l_ac].rtan010
                   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
                   LET g_rtan_d[l_ac].rtan010_desc = g_rtn_fields[1]
                   DISPLAY BY NAME g_rtan_d[l_ac].rtan010,g_rtan_d[l_ac].rtan010_desc 
                   ##add by zhangnan --end                    
               #LANJJ ADD ON 2016-05-16 start 顾问刘鑫
                WHEN '4'
                   CALL cl_set_comp_entry('rtan007',FALSE)
                   CALL cl_set_comp_required('rtan008',TRUE)
                   CALL cl_set_comp_required('rtan025',TRUE)
               #LANJJ ADD ON 2016-05-16  end  顾问刘鑫
                OTHERWISE
                   EXIT CASE
            END CASE
            #add by dengdd 151120(E)
            ##add by zn --str 
            IF g_rtan_d[l_ac].rtan024 ='4' THEN
                LET l_msg=cl_getmsg('amh-00662',g_dlang)
                CALL cl_set_comp_att_text("rtan007",l_msg)            
            ELSE
               LET l_msg=cl_getmsg('amh-00663',g_dlang)
                CALL cl_set_comp_att_text("rtan007",l_msg)
            END IF 
            #add  by zn --end 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan024
            #add-point:ON CHANGE rtan024 name="input.g.page1.rtan024"
            LET g_rtan_d[l_ac].rtan025 = '' #add by geza 20160615
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan007
            
            #add-point:AFTER FIELD rtan007 name="input.a.page1.rtan007"
            IF NOT cl_null(g_rtan_d[l_ac].rtan007) THEN 
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_rtan_d[l_ac].rtan007
               IF NOT cl_chk_exist("v_mhae001") THEN
                  LET g_rtan_d[l_ac].rtan007 = g_rtan_d_t.rtan007
                  NEXT FIELD rtan007
               ELSE
                  #检查归属组织是否为当前组织
                  SELECT mhaesite INTO l_mhaesite
                    FROM mhae_t
                   WHERE mhaeent = g_enterprise
                     AND mhae001 = g_rtan_d[l_ac].rtan007
                  IF l_mhaesite != g_rtam_m.rtamsite THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = 'art-00675'
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET g_rtan_d[l_ac].rtan007 = g_rtan_d_t.rtan007
                     NEXT FIELD rtan007
                  END IF 
               END IF
               CALL artt230_rtan007_get()
              
               #LANJJ ADD ON 2016-04-05 带出合同 start
               IF g_rtan_d[l_ac].rtan024 = '2' THEN
                  SELECT stfa001 INTO g_rtan_d[l_ac].rtan025
                    FROM stfa_t
                   WHERE stfaent = g_enterprise
                     AND stfastus = 'Y' 
                     AND stfa005 = g_rtan_d[l_ac].rtan007      
                  DISPLAY BY NAME g_rtan_d[l_ac].rtan025
               END IF 
               #LANJJ ADD ON 2016-04-05 带出合同 end
            END IF 
            #add by geza 20150908(S)
            #抓取纳入结算单否
            IF NOT cl_null(g_rtan_d[l_ac].rtan007) AND NOT cl_null(g_rtan_d[l_ac].rtan011) THEN 
               INITIALIZE l_stfa050 TO NULL
               SELECT stfa050 INTO l_stfa050
                 FROM stfa_t
                WHERE stfaent = g_enterprise
                  AND stfastus = 'Y' 
                  AND stfa005 = g_rtan_d[l_ac].rtan007
               CALL s_astt401_get_stae007(l_stfa050,g_rtan_d[l_ac].rtan011)  RETURNING  g_rtan_d[l_ac].rtan012,g_rtan_d[l_ac].rtan013  
            END IF
            #add by geza 20150908(E)
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan007
            CALL ap_ref_array2(g_ref_fields,"SELECT mhael023 FROM mhael_t WHERE mhaelent='"||g_enterprise||"' AND mhael001=? AND mhael022='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan007_desc = g_rtn_fields[1]
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan007
            #add-point:BEFORE FIELD rtan007 name="input.b.page1.rtan007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan007
            #add-point:ON CHANGE rtan007 name="input.g.page1.rtan007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan008
            
            #add-point:AFTER FIELD rtan008 name="input.a.page1.rtan008"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan008
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtan_d[l_ac].rtan008_desc
            #mark by geza 20160615 #160604-00009#40(S)   
#            #LANJJ ADD ON 2016-04-05 带出合同 start
#            IF g_rtan_d[l_ac].rtan024 = '1' THEN
##               SELECT stan001 INTO g_rtan_d[l_ac].rtan025
##                 FROM stfa_t
##                WHERE stfaent = g_enterprise
##                  AND stfastus = 'Y' 
##                  AND stfa005 = g_rtan_d[l_ac].rtan007      
##               DISPLAY BY NAME g_rtan_d[l_ac].rtan025
#
#            END IF 
#            #LANJJ ADD ON 2016-04-05 带出合同 end
            #mark by geza 20160615 #160604-00009#40(E)
            #add by geza 20160615 #160604-00009#40(S)
            IF NOT cl_null(g_rtan_d[l_ac].rtan008) THEN
               #160629-00012#1 -s by 08172
              #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_rtan_d[l_ac].rtan008
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pmaa001_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_rtan_d[l_ac].rtan008 = g_rtan_d_t.rtan008
                  DISPLAY BY NAME g_rtan_d[l_ac].rtan008
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_rtan_d[l_ac].rtan008
                  CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_rtan_d[l_ac].rtan008_desc = '', g_rtn_fields[1] , ''
                  DISPLAY BY NAME g_rtan_d[l_ac].rtan008_desc
                  NEXT FIELD CURRENT
               END IF
               #160629-00012#1 -e by 08172
               # 带出合同 start
               IF g_rtan_d[l_ac].rtan024 = '4' THEN
                  #add by geza 20160615 #160604-00009#40(S)
                  IF cl_null(g_rtan_d[l_ac].rtan025) THEN         #160629-00012#1
                     #供应商对应只有一个合同带出合同
                     LET l_cnt = 0
                     SELECT COUNT(*) INTO l_cnt
                       FROM stje_t
                      WHERE stjeent = g_enterprise
                        AND stje007 = g_rtan_d[l_ac].rtan008
                        AND stje005 IN ('2','3','4','5')
                        AND stjestus = 'Y'
                        AND stjesite = g_rtam_m.rtamsite
                     IF l_cnt = 1 THEN
                        SELECT stje001 INTO g_rtan_d[l_ac].rtan025
                          FROM stje_t
                         WHERE stjeent = g_enterprise
                           AND stje007 = g_rtan_d[l_ac].rtan008
                           AND stje005 IN ('2','3','4','5')
                           AND stjestus = 'Y'
                           AND stjesite = g_rtam_m.rtamsite
                        DISPLAY BY NAME g_rtan_d[l_ac].rtan025   
                     END IF
                  #160629-00012#1 -s by 08172
                  ELSE
                     LET l_cnt = 0 
                     SELECT COUNT(*) INTO l_cnt
                       FROM stje_t
                      WHERE stjeent = g_enterprise
                        AND stje001 = g_rtan_d[l_ac].rtan025
                        AND stje007 = g_rtan_d[l_ac].rtan008
                        AND stje005 IN ('2','3','4','5')
                        AND stjestus = 'Y'
                        AND stjesite = g_rtam_m.rtamsite
                        
                     
                     IF l_cnt=0 THEN
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = g_rtan_d[l_ac].rtan008
                        LET g_errparam.code   = "ast-00316"
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                        LET g_rtan_d[l_ac].rtan008=g_rtan_d_t.rtan008
                        NEXT FIELD rtan008      
                     END IF
                  END IF
                  #160629-00012#1 -e by 08172
                  
               END IF 
               IF g_rtan_d[l_ac].rtan024 = '1' THEN
                  #add by geza 20160615 #160604-00009#40(S)
                  IF cl_null(g_rtan_d[l_ac].rtan025) THEN         #160629-00012#1
                     #供应商对应只有一个合同带出合同
                     LET l_cnt = 0
                     SELECT COUNT(*) INTO l_cnt
                       FROM stan_t
                      WHERE stanent = g_enterprise
                        AND stan005 = g_rtan_d[l_ac].rtan008
                        AND stan029 IN ('2','3','4','5')
                        AND stanstus = 'Y'
                     IF l_cnt = 1 THEN
                        SELECT stan001 INTO g_rtan_d[l_ac].rtan025
                          FROM stan_t
                         WHERE stanent = g_enterprise
                           AND stan005 = g_rtan_d[l_ac].rtan008
                           AND stan029 IN ('2','3','4','5')
                           AND stanstus = 'Y'
                        DISPLAY BY NAME g_rtan_d[l_ac].rtan025   
                     END IF
                  #160629-00012#1 -s by 08172
                  ELSE
                     LET l_cnt = 0
                     SELECT COUNT(*) INTO l_cnt
                       FROM stan_t
                      WHERE stanent = g_enterprise
                        AND stan001 = g_rtan_d[l_ac].rtan025
                        AND stan005 = g_rtan_d[l_ac].rtan008
                        AND stan029 IN ('2','3','4','5')
                        AND stanstus = 'Y'
                     IF l_cnt=0 THEN
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = g_rtan_d[l_ac].rtan008
                        LET g_errparam.code   = "ast-00316"
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                        LET g_rtan_d[l_ac].rtan008=g_rtan_d_t.rtan008
                        NEXT FIELD rtan008      
                     END IF
                  END IF
                  #160629-00012#1 -e by 08172
                  
               END IF 
               IF g_rtan_d[l_ac].rtan024 = '2' THEN
                  #add by geza 20160615 #160604-00009#40(S)
                  IF cl_null(g_rtan_d[l_ac].rtan025) THEN         #160629-00012#1
                     #供应商对应只有一个合同带出合同
                     LET l_cnt = 0               
                     SELECT COUNT(*) INTO l_cnt
                       FROM stfa_t
                      WHERE stfaent = g_enterprise
                        AND stfa010 = g_rtan_d[l_ac].rtan008
                        AND stfa004 IN ('2','3','4','5')
                        AND stfastus = 'Y'
                        AND stfasite = g_rtam_m.rtamsite
                     IF l_cnt = 1 THEN
                        SELECT stfa001 INTO g_rtan_d[l_ac].rtan025
                          FROM stfa_t
                         WHERE stfaent = g_enterprise
                           AND stfa010 = g_rtan_d[l_ac].rtan008
                           AND stfa004 IN ('2','3','4','5')
                           AND stfastus = 'Y'
                           AND stfasite = g_rtam_m.rtamsite
                        DISPLAY BY NAME g_rtan_d[l_ac].rtan025   
                     END IF
                  #160629-00012#1 -s by 08172
                  ELSE
                     LET l_cnt = 0               
                     SELECT COUNT(*) INTO l_cnt
                       FROM stfa_t
                      WHERE stfaent = g_enterprise
                        AND stfa001 = g_rtan_d[l_ac].rtan025
                        AND stfa010 = g_rtan_d[l_ac].rtan008
                        AND stfa004 IN ('2','3','4','5')
                        AND stfastus = 'Y'
                        AND stfasite = g_rtam_m.rtamsite
                     IF l_cnt=0 THEN
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = g_rtan_d[l_ac].rtan008
                        LET g_errparam.code   = "ast-00316"
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                        LET g_rtan_d[l_ac].rtan008=g_rtan_d_t.rtan008
                        NEXT FIELD rtan008      
                     END IF
                  END IF
                  #160629-00012#1 -s by 08172
                  
               END IF
            END IF               
            #add by geza 20160615 #160604-00009#40(E)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan008
            #add-point:BEFORE FIELD rtan008 name="input.b.page1.rtan008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan008
            #add-point:ON CHANGE rtan008 name="input.g.page1.rtan008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan025
            #add-point:BEFORE FIELD rtan025 name="input.b.page1.rtan025"
           
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan025
            
            #add-point:AFTER FIELD rtan025 name="input.a.page1.rtan025"
            #LANJJ ADD ON 2016-04-05 检查合同是否存在 start
            IF NOT cl_null(g_rtan_d[l_ac].rtan025) THEN
               IF g_rtan_d[l_ac].rtan024 = '1' THEN #供应商
                  LET l_count1 = 0 
                  SELECT COUNT(*) INTO l_count1
                    FROM stan_t
                   WHERE stanent = g_enterprise
                     AND stan001 = g_rtan_d[l_ac].rtan025
                  #160629-00012#1 -s by 08172
                  LET l_cnt = 0 
                  SELECT COUNT(*) INTO l_cnt
                    FROM stan_t
                   WHERE stanent = g_enterprise
                     AND stan001 = g_rtan_d[l_ac].rtan025
                     AND stan029 IN ('2','3','4','5')
                     AND stanstus ='Y'
                  #160629-00012#1 -e by 08172                     
               END IF 
               IF g_rtan_d[l_ac].rtan024 = '2' THEN #专柜
                  LET l_count1 = 0
                  SELECT COUNT(*) INTO l_count1
                    FROM stfa_t
                   WHERE stfaent = g_enterprise
                     AND stfa001 = g_rtan_d[l_ac].rtan025
                  #160629-00012#1 -s by 08172
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM stfa_t
                   WHERE stfaent = g_enterprise
                     AND stfa001 = g_rtan_d[l_ac].rtan025
                     AND stfa004 IN ('2','3','4','5')  
                     AND stfastus = 'Y'
                  #160629-00012#1 -e by 08172                     
               END IF 
              #lanjj add on 2016-05-16 start 
               IF g_rtan_d[l_ac].rtan024 = '4' THEN #租用商户
                  LET l_count1 = 0
                  SELECT COUNT(*) INTO l_count1
                    FROM stje_t
                   WHERE stjeent = g_enterprise
                     AND stje001 = g_rtan_d[l_ac].rtan025
                  #160629-00012#1 -s by 08172
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM stje_t
                   WHERE stjeent = g_enterprise
                     AND stje001 = g_rtan_d[l_ac].rtan025
                     AND stje005 IN ('2','3','4','5')  
                     AND stjestus = 'Y'
                  #160629-00012#1 -e by 08172 
                  CALL artt230_rtaan025_display()                  
               END IF 
              #lanjj add on 2016-05-16 start
               IF l_count1 < 1 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = g_rtan_d[l_ac].rtan025,"合同中不存在该合同" 
                  LET g_errparam.code   = "adz-00482"
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  NEXT FIELD rtan025                  
               END IF
               #160629-00012#1 -s by 08172
               IF l_cnt<1 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = g_rtan_d[l_ac].rtan025 
                  LET g_errparam.code   = "ast-00653"
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  NEXT FIELD rtan025               
               END IF
               IF g_rtan_d[l_ac].rtan024 = '1' THEN
                  SELECT stan005 INTO g_rtan_d[l_ac].rtan008
                    FROM stan_t
                   WHERE stanent = g_enterprise
                     AND stan001 = g_rtan_d[l_ac].rtan025
                     AND stan029 IN ('2','3','4','5')  
                     AND stanstus = 'Y'
                  DISPLAY BY NAME  g_rtan_d[l_ac].rtan008                    
               END IF
               IF g_rtan_d[l_ac].rtan024 = '2' THEN
                  SELECT stfa010 INTO g_rtan_d[l_ac].rtan008
                    FROM stfa_t
                   WHERE stfaent = g_enterprise
                     AND stfa001 = g_rtan_d[l_ac].rtan025
                     AND stfa004 IN ('2','3','4','5')  
                     AND stfastus = 'Y'
                  DISPLAY BY NAME  g_rtan_d[l_ac].rtan008                    
               END IF
               IF g_rtan_d[l_ac].rtan024 = '4' THEN
                  SELECT stje007 INTO g_rtan_d[l_ac].rtan008
                    FROM stje_t
                   WHERE stjeent = g_enterprise
                     AND stje001 = g_rtan_d[l_ac].rtan025
                     AND stje005 IN ('2','3','4','5')  
                     AND stjestus = 'Y'
                  DISPLAY BY NAME  g_rtan_d[l_ac].rtan008                    
               END IF
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_rtan_d[l_ac].rtan008
               CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_rtan_d[l_ac].rtan008_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_rtan_d[l_ac].rtan008_desc
               #160629-00012#1 -e by 08172               
            END IF 
            #LANJJ ADD ON 2016-04-05 检查合同是否存在 end
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan025
            #add-point:ON CHANGE rtan025 name="input.g.page1.rtan025"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan010
            
            #add-point:AFTER FIELD rtan010 name="input.a.page1.rtan010"
            IF NOT cl_null(g_rtan_d[l_ac].rtan010) THEN 
               LET g_errno = ''
               SELECT ooegstus INTO l_ooegstus
                 FROM ooeg_t
                WHERE ooegent = g_enterprise
                  AND ooeg001 = g_rtan_d[l_ac].rtan010
               CASE 
                  WHEN SQLCA.SQLCODE = 100 LET g_errno = 'art-00352'
                  WHEN l_ooegstus <> 'Y'   LET g_errno = 'art-00353'
                  OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
               END CASE
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_rtan_d[l_ac].rtan010
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_rtan_d[l_ac].rtan010 = g_rtan_d_t.rtan010
                  NEXT FIELD rtan010
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan010
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan010_desc = g_rtn_fields[1]
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan010
            #add-point:BEFORE FIELD rtan010 name="input.b.page1.rtan010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan010
            #add-point:ON CHANGE rtan010 name="input.g.page1.rtan010"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan011
            
            #add-point:AFTER FIELD rtan011 name="input.a.page1.rtan011"
            IF NOT cl_null(g_rtan_d[l_ac].rtan011) THEN 
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_rtan_d[l_ac].rtan011
               IF NOT cl_chk_exist("v_stae001") THEN
                  LET g_rtan_d[l_ac].rtan011 = g_rtan_d_t.rtan011
                  NEXT FIELD rtan011
               END IF
               CALL artt230_rtan011_get()
            END IF
            #add by geza 20150908(S)
            #抓取纳入结算单否
            IF NOT cl_null(g_rtan_d[l_ac].rtan007) AND NOT cl_null(g_rtan_d[l_ac].rtan011) THEN 
               INITIALIZE l_stfa050 TO NULL
               SELECT stfa050 INTO l_stfa050
                 FROM stfa_t
                WHERE stfaent = g_enterprise
                  AND stfastus = 'Y' 
                  AND stfa005 = g_rtan_d[l_ac].rtan007
               CALL s_astt401_get_stae007(l_stfa050,g_rtan_d[l_ac].rtan011)  RETURNING  g_rtan_d[l_ac].rtan012,g_rtan_d[l_ac].rtan013  
            END IF
            #add by geza 20150908(E)
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan011
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan011_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtan_d[l_ac].rtan011_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan011
            #add-point:BEFORE FIELD rtan011 name="input.b.page1.rtan011"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan011
            #add-point:ON CHANGE rtan011 name="input.g.page1.rtan011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan012
            #add-point:BEFORE FIELD rtan012 name="input.b.page1.rtan012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan012
            
            #add-point:AFTER FIELD rtan012 name="input.a.page1.rtan012"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan012
            #add-point:ON CHANGE rtan012 name="input.g.page1.rtan012"
            IF g_rtan_d[l_ac].rtan012 = 'Y' THEN 
               CALL cl_set_comp_entry("rtan013",TRUE)
            ELSE
               #返回原值
               SELECT stae007
                 INTO g_rtan_d[l_ac].rtan013
                 FROM stae_t
                WHERE staeent = g_enterprise
                  AND stae001 = g_rtan_d[l_ac].rtan011
               CALL cl_set_comp_entry("rtan013",FALSE)
            END IF 
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan013
            #add-point:BEFORE FIELD rtan013 name="input.b.page1.rtan013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan013
            
            #add-point:AFTER FIELD rtan013 name="input.a.page1.rtan013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan013
            #add-point:ON CHANGE rtan013 name="input.g.page1.rtan013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan014
            #add-point:BEFORE FIELD rtan014 name="input.b.page1.rtan014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan014
            
            #add-point:AFTER FIELD rtan014 name="input.a.page1.rtan014"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan014
            #add-point:ON CHANGE rtan014 name="input.g.page1.rtan014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan015
            #add-point:BEFORE FIELD rtan015 name="input.b.page1.rtan015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan015
            
            #add-point:AFTER FIELD rtan015 name="input.a.page1.rtan015"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan015
            #add-point:ON CHANGE rtan015 name="input.g.page1.rtan015"
#---add by dengdd 150907-----str--------------------------
            IF g_rtan_d[l_ac].rtan015='5' THEN
               CALL cl_set_comp_required('rtan007',TRUE)
            ELSE
               CALL cl_set_comp_required('rtan007',FALSE)
            END IF 
#---add by dengdd 150907------end--------------------------
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan017
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtan_d[l_ac].rtan017,"0","1","","","azz-00079",1) THEN
               NEXT FIELD rtan017
            END IF 
 
 
 
            #add-point:AFTER FIELD rtan017 name="input.a.page1.rtan017"
            IF NOT cl_null(g_rtan_d[l_ac].rtan017) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan017
            #add-point:BEFORE FIELD rtan017 name="input.b.page1.rtan017"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan017
            #add-point:ON CHANGE rtan017 name="input.g.page1.rtan017"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan018
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtan_d[l_ac].rtan018,"0","1","","","azz-00079",1) THEN
               NEXT FIELD rtan018
            END IF 
 
 
 
            #add-point:AFTER FIELD rtan018 name="input.a.page1.rtan018"
            IF NOT cl_null(g_rtan_d[l_ac].rtan018) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan018
            #add-point:BEFORE FIELD rtan018 name="input.b.page1.rtan018"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan018
            #add-point:ON CHANGE rtan018 name="input.g.page1.rtan018"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtan019
            #add-point:BEFORE FIELD rtan019 name="input.b.page1.rtan019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtan019
            
            #add-point:AFTER FIELD rtan019 name="input.a.page1.rtan019"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtan019
            #add-point:ON CHANGE rtan019 name="input.g.page1.rtan019"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtansite
            #add-point:BEFORE FIELD rtansite name="input.b.page1.rtansite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtansite
            
            #add-point:AFTER FIELD rtansite name="input.a.page1.rtansite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtansite
            #add-point:ON CHANGE rtansite name="input.g.page1.rtansite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtancomp
            #add-point:BEFORE FIELD rtancomp name="input.b.page1.rtancomp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtancomp
            
            #add-point:AFTER FIELD rtancomp name="input.a.page1.rtancomp"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtancomp
            #add-point:ON CHANGE rtancomp name="input.g.page1.rtancomp"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.rtanseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtanseq
            #add-point:ON ACTION controlp INFIELD rtanseq name="input.c.page1.rtanseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan001
            #add-point:ON ACTION controlp INFIELD rtan001 name="input.c.page1.rtan001"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan002
            #add-point:ON ACTION controlp INFIELD rtan002 name="input.c.page1.rtan002"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtan_d[l_ac].rtan002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s
            #lanjj modify on 2016-02-17 根据单头资源类型管控开窗  ---start---
            #LET g_qryparam.WHERE = " rtalstus = 'Y' AND ",s_aooi500_q_where('arti050','rtalsite',g_rtam_m.rtamsite,'i')
            IF NOT cl_null(g_rtam_m.rtam007) THEN
               LET g_qryparam.WHERE = " rtalstus = 'Y' AND rtal002 = '",g_rtam_m.rtam007,"' AND ",s_aooi500_q_where('arti050','rtalsite',g_rtam_m.rtamsite,'i')
            ELSE 
               LET g_qryparam.WHERE = " rtalstus = 'Y' AND ",s_aooi500_q_where('arti050','rtalsite',g_rtam_m.rtamsite,'i')
            END IF 
            #lanjj modify on 2016-02-17 根据单头资源类型管控开窗  ----end----
            CALL q_rtal001()                                #呼叫開窗

            LET g_rtan_d[l_ac].rtan002 = g_qryparam.return1              
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan002
            CALL ap_ref_array2(g_ref_fields,"SELECT rtall003 FROM rtall_t WHERE rtallent='"||g_enterprise||"' AND rtall001=? AND rtall002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan002_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtan_d[l_ac].rtan002,g_rtan_d[l_ac].rtan002_desc       #

            NEXT FIELD rtan002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan003
            #add-point:ON ACTION controlp INFIELD rtan003 name="input.c.page1.rtan003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan004
            #add-point:ON ACTION controlp INFIELD rtan004 name="input.c.page1.rtan004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan005
            #add-point:ON ACTION controlp INFIELD rtan005 name="input.c.page1.rtan005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan024
            #add-point:ON ACTION controlp INFIELD rtan024 name="input.c.page1.rtan024"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan007
            #add-point:ON ACTION controlp INFIELD rtan007 name="input.c.page1.rtan007"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtan_d[l_ac].rtan007
            #給予arg
            LET g_qryparam.arg1 = g_rtam_m.rtamsite
            CALL q_mhae001()                                #呼叫開窗
            LET g_rtan_d[l_ac].rtan007 = g_qryparam.return1       
            DISPLAY g_rtan_d[l_ac].rtan007 TO rtan007
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan007
            CALL ap_ref_array2(g_ref_fields,"SELECT mhael023 FROM mhael_t WHERE mhaelent='"||g_enterprise||"' AND mhael001=? AND mhael022='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan007_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtan_d[l_ac].rtan007_desc
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan008
            #add-point:ON ACTION controlp INFIELD rtan008 name="input.c.page1.rtan008"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtan_d[l_ac].rtan008             #給予default值
            #給予arg
            LET g_qryparam.arg1 = "('1','3')" #s
            CALL q_pmaa001_1()                                #呼叫開窗
            LET g_rtan_d[l_ac].rtan008 = g_qryparam.return1 
            DISPLAY g_rtan_d[l_ac].rtan008 TO rtan008              #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan008
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan008_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtan_d[l_ac].rtan008_desc
            NEXT FIELD rtan008                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan025
            #add-point:ON ACTION controlp INFIELD rtan025 name="input.c.page1.rtan025"
            #lanjj add on 2016-04-05
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtan_d[l_ac].rtan025
            
            IF g_rtan_d[l_ac].rtan024 = '1' THEN
               LET g_qryparam.WHERE=" stanent='",g_enterprise,"' AND stan029 IN ('2','3','4','5') AND stanunit='",g_rtam_m.rtamsite,"'"    #160629-00012#1
               IF g_rtan_d[l_ac].rtan008 IS NOT NULL THEN
#                  LET g_qryparam.WHERE = " stan005 = '",g_rtan_d[l_ac].rtan008,"'"    #160629-00012#1
                  LET g_qryparam.WHERE =g_qryparam.WHERE," AND stan005 = '",g_rtan_d[l_ac].rtan008,"'"    #160629-00012#1
               END IF   
               CALL q_stan001()                  #呼叫開窗
            END IF 
            IF g_rtan_d[l_ac].rtan024 = '2' THEN
               LET g_qryparam.WHERE=" stfa004 IN ('2','3','4','5') AND stfasite='",g_rtam_m.rtamsite,"'"    #160629-00012#1
               IF g_rtan_d[l_ac].rtan007 IS NOT NULL THEN
#                  LET g_qryparam.WHERE = " stfa005 = '",g_rtan_d[l_ac].rtan007,"'"   #160629-00012#1
                  LET g_qryparam.WHERE = g_qryparam.WHERE," AND stfa005 = '",g_rtan_d[l_ac].rtan007,"'"   #160629-00012#1
               END IF
               #160629-00012#1 -s by 08172
               IF cl_null(g_qryparam.WHERE) THEN
                  LET g_qryparam.WHERE=" 1=1"
               END IF
               IF NOT cl_null(g_rtan_d[l_ac].rtan008) THEN
                  LET g_qryparam.WHERE=g_qryparam.WHERE," AND stfa010 = '",g_rtan_d[l_ac].rtan008,"'"
               END IF
               #160629-00012#1 -e by 08172
               CALL q_stfa001()                  #呼叫開窗
            END IF 
           #lanjj add on 2016-05-16 start #天和 益华 不需要
            IF g_rtan_d[l_ac].rtan024 = '4' THEN
               LET g_qryparam.WHERE=" stje005 IN ('2','3','4','5') AND stjesite='",g_rtam_m.rtamsite,"'"    #160629-00012#1
               IF g_rtan_d[l_ac].rtan008 IS NOT NULL THEN
#                  LET g_qryparam.WHERE = " stje007 = '",g_rtan_d[l_ac].rtan008,"'"     #160629-00012#1
                  LET g_qryparam.WHERE =g_qryparam.WHERE," AND stje007 = '",g_rtan_d[l_ac].rtan008,"'"    #160629-00012#1
               END IF   
               CALL q_stje001()                  #呼叫開窗
            END IF 
           #lanjj add on 2016-05-16  end  暂时mark
            LET g_rtan_d[l_ac].rtan025 = g_qryparam.return1       
            DISPLAY g_rtan_d[l_ac].rtan025 TO rtan025
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan010
            #add-point:ON ACTION controlp INFIELD rtan010 name="input.c.page1.rtan010"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtan_d[l_ac].rtan010             #給予default值
            LET g_qryparam.default2 = "" #g_rtan_d[l_ac].ooeg001 #部門編號
            #給予arg
            LET g_qryparam.arg1 = g_today


            CALL q_ooeg001()                                #呼叫開窗

            LET g_rtan_d[l_ac].rtan010 = g_qryparam.return1              
            #LET g_rtan_d[l_ac].ooeg001 = g_qryparam.return2 
            DISPLAY g_rtan_d[l_ac].rtan010 TO rtan010              #
            #DISPLAY g_rtan_d[l_ac].ooeg001 TO ooeg001 #部門編號
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan010
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan010_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtan_d[l_ac].rtan010,g_rtan_d[l_ac].rtan010_desc
            NEXT FIELD rtan010                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan011
            #add-point:ON ACTION controlp INFIELD rtan011 name="input.c.page1.rtan011"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtan_d[l_ac].rtan011             #給予default值
            LET g_qryparam.default2 = "" #g_rtan_d[l_ac].stae001 #费用编号
            LET g_qryparam.default3 = "" #g_rtan_d[l_ac].stael003 #說明
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_stae001()                                #呼叫開窗

            LET g_rtan_d[l_ac].rtan011 = g_qryparam.return1              
            #LET g_rtan_d[l_ac].stae001 = g_qryparam.return2 
            #LET g_rtan_d[l_ac].stael003 = g_qryparam.return3 
            DISPLAY g_rtan_d[l_ac].rtan011 TO rtan011              #
            #DISPLAY g_rtan_d[l_ac].stae001 TO stae001 #费用编号
            #DISPLAY g_rtan_d[l_ac].stael003 TO stael003 #說明
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan_d[l_ac].rtan011
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan011_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtan_d[l_ac].rtan011_desc
            NEXT FIELD rtan011                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan012
            #add-point:ON ACTION controlp INFIELD rtan012 name="input.c.page1.rtan012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan013
            #add-point:ON ACTION controlp INFIELD rtan013 name="input.c.page1.rtan013"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan014
            #add-point:ON ACTION controlp INFIELD rtan014 name="input.c.page1.rtan014"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan015
            #add-point:ON ACTION controlp INFIELD rtan015 name="input.c.page1.rtan015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan017
            #add-point:ON ACTION controlp INFIELD rtan017 name="input.c.page1.rtan017"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan018
            #add-point:ON ACTION controlp INFIELD rtan018 name="input.c.page1.rtan018"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtan019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtan019
            #add-point:ON ACTION controlp INFIELD rtan019 name="input.c.page1.rtan019"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtansite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtansite
            #add-point:ON ACTION controlp INFIELD rtansite name="input.c.page1.rtansite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtancomp
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtancomp
            #add-point:ON ACTION controlp INFIELD rtancomp name="input.c.page1.rtancomp"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_rtan_d[l_ac].* = g_rtan_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE artt230_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_rtan_d[l_ac].rtanseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_rtan_d[l_ac].* = g_rtan_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL artt230_rtan_t_mask_restore('restore_mask_o')
      
               UPDATE rtan_t SET (rtandocno,rtanseq,rtan001,rtan002,rtan003,rtan004,rtan005,rtan006, 
                   rtan024,rtan007,rtan008,rtan025,rtan009,rtan010,rtan011,rtan012,rtan013,rtan014,rtan015, 
                   rtan016,rtan017,rtan018,rtan019,rtan020,rtan021,rtan022,rtan023,rtansite,rtancomp) = (g_rtam_m.rtamdocno, 
                   g_rtan_d[l_ac].rtanseq,g_rtan_d[l_ac].rtan001,g_rtan_d[l_ac].rtan002,g_rtan_d[l_ac].rtan003, 
                   g_rtan_d[l_ac].rtan004,g_rtan_d[l_ac].rtan005,g_rtan_d[l_ac].rtan006,g_rtan_d[l_ac].rtan024, 
                   g_rtan_d[l_ac].rtan007,g_rtan_d[l_ac].rtan008,g_rtan_d[l_ac].rtan025,g_rtan_d[l_ac].rtan009, 
                   g_rtan_d[l_ac].rtan010,g_rtan_d[l_ac].rtan011,g_rtan_d[l_ac].rtan012,g_rtan_d[l_ac].rtan013, 
                   g_rtan_d[l_ac].rtan014,g_rtan_d[l_ac].rtan015,g_rtan_d[l_ac].rtan016,g_rtan_d[l_ac].rtan017, 
                   g_rtan_d[l_ac].rtan018,g_rtan_d[l_ac].rtan019,g_rtan_d[l_ac].rtan020,g_rtan_d[l_ac].rtan021, 
                   g_rtan_d[l_ac].rtan022,g_rtan_d[l_ac].rtan023,g_rtan_d[l_ac].rtansite,g_rtan_d[l_ac].rtancomp) 
 
                WHERE rtanent = g_enterprise AND rtandocno = g_rtam_m.rtamdocno 
 
                  AND rtanseq = g_rtan_d_t.rtanseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_rtan_d[l_ac].* = g_rtan_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtan_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_rtan_d[l_ac].* = g_rtan_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtan_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtam_m.rtamdocno
               LET gs_keys_bak[1] = g_rtamdocno_t
               LET gs_keys[2] = g_rtan_d[g_detail_idx].rtanseq
               LET gs_keys_bak[2] = g_rtan_d_t.rtanseq
               CALL artt230_update_b('rtan_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL artt230_rtan_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_rtan_d[g_detail_idx].rtanseq = g_rtan_d_t.rtanseq 
 
                  ) THEN
                  LET gs_keys[01] = g_rtam_m.rtamdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_rtan_d_t.rtanseq
 
                  CALL artt230_key_update_b(gs_keys,'rtan_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtam_m),util.JSON.stringify(g_rtan_d_t)
               LET g_log2 = util.JSON.stringify(g_rtam_m),util.JSON.stringify(g_rtan_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            IF g_rtan_d[l_ac].rtan015='5' THEN
               IF cl_null(g_rtan_d[l_ac].rtan007) THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "rtan007" 
                  LET g_errparam.code   = "art-00714" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  NEXT FIELD rtan007
               END IF 
            END IF 
           #LANJJ ADD ON 2016-04-05 合同编号不可为空 
           IF g_rtan_d[l_ac].rtan024 = '1' OR g_rtan_d[l_ac].rtan024 = '2' OR g_rtan_d[l_ac].rtan024 = '4' THEN
              IF cl_null(g_rtan_d[l_ac].rtan025) THEN
                 INITIALIZE g_errparam TO NULL 
                 LET g_errparam.extend = "项次：",g_rtan_d[l_ac].rtanseq,"，单身合同编号不可为空。" 
                 LET g_errparam.code   = "adz-00482"
                 LET g_errparam.popup  = TRUE 
                 CALL cl_err() 
                 NEXT FIELD rtan025
              END IF 
           END IF
            #end add-point
            CALL artt230_unlock_b("rtan_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
             
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_rtan_d[li_reproduce_target].* = g_rtan_d[li_reproduce].*
 
               LET g_rtan_d[li_reproduce_target].rtanseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_rtan_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_rtan_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_rtan2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            LET l_n = 0
            SELECT COUNT(*) INTO l_n
              FROM rtaq_t
             WHERE rtaqent = g_enterprise
               AND rtaqdocno = g_rtam_m.rtamdocno
            IF g_rtam_m.rtam000 = 'U' AND l_n = 0 THEN 
               CALL artt230_get_rtar()
               CALL artt230_b_fill()
            END IF
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtan2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artt230_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_rtan2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtan2_d[l_ac].* TO NULL 
            INITIALIZE g_rtan2_d_t.* TO NULL 
            INITIALIZE g_rtan2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_rtan2_d[l_ac].rtaqseq = "0"
      LET g_rtan2_d[l_ac].rtaqseq1 = "0"
      LET g_rtan2_d[l_ac].rtaq006 = "N"
      LET g_rtan2_d[l_ac].rtaq007 = "N"
      LET g_rtan2_d[l_ac].rtaq008 = "0"
      LET g_rtan2_d[l_ac].rtaq009 = "0"
      LET g_rtan2_d[l_ac].rtaq010 = "0"
      LET g_rtan2_d[l_ac].rtaqacti = "Y"
 
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            #预设项次
            SELECT MAX(rtaqseq) + 1 INTO g_rtan2_d[l_ac].rtaqseq
              FROM rtaq_t
             WHERE rtaqent = g_enterprise
               AND rtaqdocno = g_rtam_m.rtamdocno
            IF cl_null(g_rtan2_d[l_ac].rtaqseq) THEN 
               LET g_rtan2_d[l_ac].rtaqseq = 1
            END IF 
            LET g_rtan2_d[l_ac].rtaq001 = g_rtam_m.rtam001
            LET g_rtan2_d[l_ac].rtaqunit= g_rtam_m.rtamunit
            LET g_rtan2_d[l_ac].rtaqsite= g_rtam_m.rtamsite
            #end add-point
            LET g_rtan2_d_t.* = g_rtan2_d[l_ac].*     #新輸入資料
            LET g_rtan2_d_o.* = g_rtan2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artt230_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
            
            #end add-point
            CALL artt230_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtan2_d[li_reproduce_target].* = g_rtan2_d[li_reproduce].*
 
               LET g_rtan2_d[li_reproduce_target].rtaqseq = NULL
               LET g_rtan2_d[li_reproduce_target].rtaqseq1 = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body2.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[2] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artt230_cl USING g_enterprise,g_rtam_m.rtamdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt230_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE artt230_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_rtan2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtan2_d[l_ac].rtaqseq IS NOT NULL
               AND g_rtan2_d[l_ac].rtaqseq1 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_rtan2_d_t.* = g_rtan2_d[l_ac].*  #BACKUP
               LET g_rtan2_d_o.* = g_rtan2_d[l_ac].*  #BACKUP
               CALL artt230_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               
               #end add-point  
               CALL artt230_set_no_entry_b(l_cmd)
               IF NOT artt230_lock_b("rtaq_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artt230_bcl2 INTO g_rtan2_d[l_ac].rtaqunit,g_rtan2_d[l_ac].rtaqsite,g_rtan2_d[l_ac].rtaqseq, 
                      g_rtan2_d[l_ac].rtaqseq1,g_rtan2_d[l_ac].rtaq001,g_rtan2_d[l_ac].rtaq002,g_rtan2_d[l_ac].rtaq004, 
                      g_rtan2_d[l_ac].rtaq003,g_rtan2_d[l_ac].rtaq005,g_rtan2_d[l_ac].rtaq006,g_rtan2_d[l_ac].rtaq007, 
                      g_rtan2_d[l_ac].rtaq008,g_rtan2_d[l_ac].rtaq009,g_rtan2_d[l_ac].rtaq010,g_rtan2_d[l_ac].rtaqacti 
 
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rtan2_d_mask_o[l_ac].* =  g_rtan2_d[l_ac].*
                  CALL artt230_rtaq_t_mask()
                  LET g_rtan2_d_mask_n[l_ac].* =  g_rtan2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL artt230_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body2.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtam_m.rtamdocno
               LET gs_keys[gs_keys.getLength()+1] = g_rtan2_d_t.rtaqseq
               LET gs_keys[gs_keys.getLength()+1] = g_rtan2_d_t.rtaqseq1
            
               #刪除同層單身
               IF NOT artt230_delete_b('rtaq_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt230_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT artt230_key_delete_b(gs_keys,'rtaq_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt230_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身2刪除中 name="input.body2.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE artt230_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body2.a_delete"
               
               #end add-point
               LET l_count = g_rtan_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rtan2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body2.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM rtaq_t 
             WHERE rtaqent = g_enterprise AND rtaqdocno = g_rtam_m.rtamdocno
               AND rtaqseq = g_rtan2_d[l_ac].rtaqseq
               AND rtaqseq1 = g_rtan2_d[l_ac].rtaqseq1
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body2.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtam_m.rtamdocno
               LET gs_keys[2] = g_rtan2_d[g_detail_idx].rtaqseq
               LET gs_keys[3] = g_rtan2_d[g_detail_idx].rtaqseq1
               CALL artt230_insert_b('rtaq_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body2.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_rtan_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtaq_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artt230_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_rtan2_d[l_ac].* = g_rtan2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE artt230_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_rtan2_d[l_ac].* = g_rtan2_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body2.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL artt230_rtaq_t_mask_restore('restore_mask_o')
                              
               UPDATE rtaq_t SET (rtaqdocno,rtaqunit,rtaqsite,rtaqseq,rtaqseq1,rtaq001,rtaq002,rtaq004, 
                   rtaq003,rtaq005,rtaq006,rtaq007,rtaq008,rtaq009,rtaq010,rtaqacti) = (g_rtam_m.rtamdocno, 
                   g_rtan2_d[l_ac].rtaqunit,g_rtan2_d[l_ac].rtaqsite,g_rtan2_d[l_ac].rtaqseq,g_rtan2_d[l_ac].rtaqseq1, 
                   g_rtan2_d[l_ac].rtaq001,g_rtan2_d[l_ac].rtaq002,g_rtan2_d[l_ac].rtaq004,g_rtan2_d[l_ac].rtaq003, 
                   g_rtan2_d[l_ac].rtaq005,g_rtan2_d[l_ac].rtaq006,g_rtan2_d[l_ac].rtaq007,g_rtan2_d[l_ac].rtaq008, 
                   g_rtan2_d[l_ac].rtaq009,g_rtan2_d[l_ac].rtaq010,g_rtan2_d[l_ac].rtaqacti) #自訂欄位頁簽 
 
                WHERE rtaqent = g_enterprise AND rtaqdocno = g_rtam_m.rtamdocno
                  AND rtaqseq = g_rtan2_d_t.rtaqseq #項次 
                  AND rtaqseq1 = g_rtan2_d_t.rtaqseq1
                  
               #add-point:單身page2修改中 name="input.body2.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_rtan2_d[l_ac].* = g_rtan2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtaq_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_rtan2_d[l_ac].* = g_rtan2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtaq_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtam_m.rtamdocno
               LET gs_keys_bak[1] = g_rtamdocno_t
               LET gs_keys[2] = g_rtan2_d[g_detail_idx].rtaqseq
               LET gs_keys_bak[2] = g_rtan2_d_t.rtaqseq
               LET gs_keys[3] = g_rtan2_d[g_detail_idx].rtaqseq1
               LET gs_keys_bak[3] = g_rtan2_d_t.rtaqseq1
               CALL artt230_update_b('rtaq_t',gs_keys,gs_keys_bak,"'2'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL artt230_rtaq_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_rtan2_d[g_detail_idx].rtaqseq = g_rtan2_d_t.rtaqseq 
                  AND g_rtan2_d[g_detail_idx].rtaqseq1 = g_rtan2_d_t.rtaqseq1 
                  ) THEN
                  LET gs_keys[01] = g_rtam_m.rtamdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_rtan2_d_t.rtaqseq
                  LET gs_keys[gs_keys.getLength()+1] = g_rtan2_d_t.rtaqseq1
                  CALL artt230_key_update_b(gs_keys,'rtaq_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtam_m),util.JSON.stringify(g_rtan2_d_t)
               LET g_log2 = util.JSON.stringify(g_rtam_m),util.JSON.stringify(g_rtan2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body2.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaqunit
            #add-point:BEFORE FIELD rtaqunit name="input.b.page2.rtaqunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaqunit
            
            #add-point:AFTER FIELD rtaqunit name="input.a.page2.rtaqunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtaqunit
            #add-point:ON CHANGE rtaqunit name="input.g.page2.rtaqunit"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaqsite
            #add-point:BEFORE FIELD rtaqsite name="input.b.page2.rtaqsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaqsite
            
            #add-point:AFTER FIELD rtaqsite name="input.a.page2.rtaqsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtaqsite
            #add-point:ON CHANGE rtaqsite name="input.g.page2.rtaqsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaqseq
            #add-point:BEFORE FIELD rtaqseq name="input.b.page2.rtaqseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaqseq
            
            #add-point:AFTER FIELD rtaqseq name="input.a.page2.rtaqseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_rtam_m.rtamdocno IS NOT NULL AND g_rtan2_d[g_detail_idx].rtaqseq IS NOT NULL AND g_rtan2_d[g_detail_idx].rtaqseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtam_m.rtamdocno != g_rtamdocno_t OR g_rtan2_d[g_detail_idx].rtaqseq != g_rtan2_d_t.rtaqseq OR g_rtan2_d[g_detail_idx].rtaqseq1 != g_rtan2_d_t.rtaqseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtaq_t WHERE "||"rtaqent = '" ||g_enterprise|| "' AND "||"rtaqdocno = '"||g_rtam_m.rtamdocno ||"' AND "|| "rtaqseq = '"||g_rtan2_d[g_detail_idx].rtaqseq ||"' AND "|| "rtaqseq1 = '"||g_rtan2_d[g_detail_idx].rtaqseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtaqseq
            #add-point:ON CHANGE rtaqseq name="input.g.page2.rtaqseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaqseq1
            #add-point:BEFORE FIELD rtaqseq1 name="input.b.page2.rtaqseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaqseq1
            
            #add-point:AFTER FIELD rtaqseq1 name="input.a.page2.rtaqseq1"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_rtam_m.rtamdocno IS NOT NULL AND g_rtan2_d[g_detail_idx].rtaqseq IS NOT NULL AND g_rtan2_d[g_detail_idx].rtaqseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtam_m.rtamdocno != g_rtamdocno_t OR g_rtan2_d[g_detail_idx].rtaqseq != g_rtan2_d_t.rtaqseq OR g_rtan2_d[g_detail_idx].rtaqseq1 != g_rtan2_d_t.rtaqseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtaq_t WHERE "||"rtaqent = '" ||g_enterprise|| "' AND "||"rtaqdocno = '"||g_rtam_m.rtamdocno ||"' AND "|| "rtaqseq = '"||g_rtan2_d[g_detail_idx].rtaqseq ||"' AND "|| "rtaqseq1 = '"||g_rtan2_d[g_detail_idx].rtaqseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  ELSE
                     SELECT rtan002 INTO g_rtan2_d[l_ac].rtaq002 FROM rtan_t
                      WHERE rtanent=g_enterprise 
                        AND rtandocno=g_rtam_m.rtamdocno 
                        AND rtanseq=g_rtan2_d[l_ac].rtaqseq1
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtaqseq1
            #add-point:ON CHANGE rtaqseq1 name="input.g.page2.rtaqseq1"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq001
            #add-point:BEFORE FIELD rtaq001 name="input.b.page2.rtaq001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq001
            
            #add-point:AFTER FIELD rtaq001 name="input.a.page2.rtaq001"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtaq001
            #add-point:ON CHANGE rtaq001 name="input.g.page2.rtaq001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq002
            
            #add-point:AFTER FIELD rtaq002 name="input.a.page2.rtaq002"
            SELECT rtanseq INTO g_rtan2_d[l_ac].rtaqseq1 FROM rtan_t
             WHERE rtanent=g_enterprise
               AND rtandocno=g_rtam_m.rtamdocno
               AND rtan002=g_rtan2_d[l_ac].rtaq002
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan2_d[l_ac].rtaq002
            CALL ap_ref_array2(g_ref_fields,"SELECT rtall003 FROM rtall_t WHERE rtallent='"||g_enterprise||"' AND rtall001=? AND rtall002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan2_d[l_ac].rtaq002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtan2_d[l_ac].rtaq002_desc

            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq002
            #add-point:BEFORE FIELD rtaq002 name="input.b.page2.rtaq002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtaq002
            #add-point:ON CHANGE rtaq002 name="input.g.page2.rtaq002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq004
            #add-point:BEFORE FIELD rtaq004 name="input.b.page2.rtaq004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq004
            
            #add-point:AFTER FIELD rtaq004 name="input.a.page2.rtaq004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtaq004
            #add-point:ON CHANGE rtaq004 name="input.g.page2.rtaq004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq003
            
            #add-point:AFTER FIELD rtaq003 name="input.a.page2.rtaq003"
            #抓取纳入结算单否
            IF NOT cl_null(g_rtan2_d[l_ac].rtaq003) AND (NOT cl_null(g_rtan2_d[l_ac].rtaqseq1) OR NOT cl_null(g_rtan2_d[l_ac].rtaq002))THEN 
               INITIALIZE l_stfa050,l_rtan007 TO NULL
               SELECT rtan007 INTO l_rtan007 FROM rtan_t WHERE rtanent=g_enterprise AND rtandocno=g_rtam_m.rtamdocno
                  AND rtanseq= g_rtan2_d[l_ac].rtaqseq1
                  AND rtan002= g_rtan2_d[l_ac].rtaq002
                  
               IF NOT cl_null(l_rtan007) THEN
                  SELECT stfa050 INTO l_stfa050 FROM stfa_t
                   WHERE stfaent = g_enterprise
                     AND stfastus = 'Y' 
                     AND stfa005 = l_rtan007
                   CALL s_astt401_get_stae007(l_stfa050,g_rtan2_d[l_ac].rtaq003)  
                        RETURNING  g_rtan2_d[l_ac].rtaq006,g_rtan2_d[l_ac].rtaq007
               END IF                        
            END IF

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan2_d[l_ac].rtaq003
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan2_d[l_ac].rtaq003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtan2_d[l_ac].rtaq003_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq003
            #add-point:BEFORE FIELD rtaq003 name="input.b.page2.rtaq003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtaq003
            #add-point:ON CHANGE rtaq003 name="input.g.page2.rtaq003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq005
            #add-point:BEFORE FIELD rtaq005 name="input.b.page2.rtaq005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq005
            
            #add-point:AFTER FIELD rtaq005 name="input.a.page2.rtaq005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtaq005
            #add-point:ON CHANGE rtaq005 name="input.g.page2.rtaq005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq006
            #add-point:BEFORE FIELD rtaq006 name="input.b.page2.rtaq006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq006
            
            #add-point:AFTER FIELD rtaq006 name="input.a.page2.rtaq006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtaq006
            #add-point:ON CHANGE rtaq006 name="input.g.page2.rtaq006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq007
            #add-point:BEFORE FIELD rtaq007 name="input.b.page2.rtaq007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq007
            
            #add-point:AFTER FIELD rtaq007 name="input.a.page2.rtaq007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtaq007
            #add-point:ON CHANGE rtaq007 name="input.g.page2.rtaq007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq008
            #add-point:BEFORE FIELD rtaq008 name="input.b.page2.rtaq008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq008
            
            #add-point:AFTER FIELD rtaq008 name="input.a.page2.rtaq008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtaq008
            #add-point:ON CHANGE rtaq008 name="input.g.page2.rtaq008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq009
            #add-point:BEFORE FIELD rtaq009 name="input.b.page2.rtaq009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq009
            
            #add-point:AFTER FIELD rtaq009 name="input.a.page2.rtaq009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtaq009
            #add-point:ON CHANGE rtaq009 name="input.g.page2.rtaq009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaq010
            #add-point:BEFORE FIELD rtaq010 name="input.b.page2.rtaq010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaq010
            
            #add-point:AFTER FIELD rtaq010 name="input.a.page2.rtaq010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtaq010
            #add-point:ON CHANGE rtaq010 name="input.g.page2.rtaq010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaqacti
            #add-point:BEFORE FIELD rtaqacti name="input.b.page2.rtaqacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaqacti
            
            #add-point:AFTER FIELD rtaqacti name="input.a.page2.rtaqacti"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtaqacti
            #add-point:ON CHANGE rtaqacti name="input.g.page2.rtaqacti"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.rtaqunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaqunit
            #add-point:ON ACTION controlp INFIELD rtaqunit name="input.c.page2.rtaqunit"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtaqsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaqsite
            #add-point:ON ACTION controlp INFIELD rtaqsite name="input.c.page2.rtaqsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtaqseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaqseq
            #add-point:ON ACTION controlp INFIELD rtaqseq name="input.c.page2.rtaqseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtaqseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaqseq1
            #add-point:ON ACTION controlp INFIELD rtaqseq1 name="input.c.page2.rtaqseq1"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtaq001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq001
            #add-point:ON ACTION controlp INFIELD rtaq001 name="input.c.page2.rtaq001"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtaq002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq002
            #add-point:ON ACTION controlp INFIELD rtaq002 name="input.c.page2.rtaq002"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtan2_d[l_ac].rtaq002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s
            LET g_qryparam.WHERE = " rtalstus = 'Y' AND ",s_aooi500_q_where('arti050','rtalsite',g_rtam_m.rtamsite,'i')
            CALL q_rtal001()                                #呼叫開窗

            LET g_rtan2_d[l_ac].rtaq002 = g_qryparam.return1
            #项次            
            SELECT rtanseq INTO g_rtan2_d[l_ac].rtaqseq1 FROM rtan_t
             WHERE rtanent=g_enterprise
               AND rtandocno=g_rtam_m.rtamdocno
               AND rtan002=g_rtan2_d[l_ac].rtaq002  
               
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan2_d[l_ac].rtaq002
            CALL ap_ref_array2(g_ref_fields,"SELECT rtall003 FROM rtall_t WHERE rtallent='"||g_enterprise||"' AND rtall001=? AND rtall002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan_d[l_ac].rtan002_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtan2_d[l_ac].rtaqseq1,g_rtan2_d[l_ac].rtaq002,g_rtan2_d[l_ac].rtaq002_desc       #

            NEXT FIELD rtaq002
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtaq004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq004
            #add-point:ON ACTION controlp INFIELD rtaq004 name="input.c.page2.rtaq004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtaq003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq003
            #add-point:ON ACTION controlp INFIELD rtaq003 name="input.c.page2.rtaq003"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtan2_d[l_ac].rtaq003  
            #給予arg
            LET g_qryparam.arg1 = "" #s
            CALL q_stae001()                                #呼叫開窗
            LET g_rtan2_d[l_ac].rtaq003 = g_qryparam.return1
            
            DISPLAY g_rtan2_d[l_ac].rtaq003 TO rtaq003
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtan2_d[l_ac].rtaq003
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtan2_d[l_ac].rtaq003_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_rtan2_d[l_ac].rtaq003_desc
            NEXT FIELD rtaq003  
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtaq005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq005
            #add-point:ON ACTION controlp INFIELD rtaq005 name="input.c.page2.rtaq005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtaq006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq006
            #add-point:ON ACTION controlp INFIELD rtaq006 name="input.c.page2.rtaq006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtaq007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq007
            #add-point:ON ACTION controlp INFIELD rtaq007 name="input.c.page2.rtaq007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtaq008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq008
            #add-point:ON ACTION controlp INFIELD rtaq008 name="input.c.page2.rtaq008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtaq009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq009
            #add-point:ON ACTION controlp INFIELD rtaq009 name="input.c.page2.rtaq009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtaq010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaq010
            #add-point:ON ACTION controlp INFIELD rtaq010 name="input.c.page2.rtaq010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtaqacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaqacti
            #add-point:ON ACTION controlp INFIELD rtaqacti name="input.c.page2.rtaqacti"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row name="input.body2.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_rtan2_d[l_ac].* = g_rtan2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE artt230_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL artt230_unlock_b("rtaq_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2 name="input.body2.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_rtan2_d[li_reproduce_target].* = g_rtan2_d[li_reproduce].*
 
               LET g_rtan2_d[li_reproduce_target].rtaqseq = NULL
               LET g_rtan2_d[li_reproduce_target].rtaqseq1 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_rtan2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_rtan2_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
 
 
 
{</section>}
 
{<section id="artt230.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'2',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD rtamdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD rtanseq
               WHEN "s_detail2"
                  NEXT FIELD rtaqunit
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="artt230.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION artt230_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL artt230_b_fill() #單身填充
      CALL artt230_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL artt230_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   
   #end add-point
   
   #遮罩相關處理
   LET g_rtam_m_mask_o.* =  g_rtam_m.*
   CALL artt230_rtam_t_mask()
   LET g_rtam_m_mask_n.* =  g_rtam_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamsite_desc,g_rtam_m.rtamdocdt,g_rtam_m.rtamdocno,g_rtam_m.rtam000, 
       g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam003_desc,g_rtam_m.rtam007,g_rtam_m.rtam004, 
       g_rtam_m.rtam004_desc,g_rtam_m.rtam005,g_rtam_m.rtam005_desc,g_rtam_m.rtam006,g_rtam_m.rtamunit, 
       g_rtam_m.rtamstus,g_rtam_m.rtamownid,g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp,g_rtam_m.rtamowndp_desc, 
       g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtid_desc,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtamcrtdt, 
       g_rtam_m.rtammodid,g_rtam_m.rtammodid_desc,g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfid_desc, 
       g_rtam_m.rtamcnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtam_m.rtamstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_rtan_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_rtan2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL artt230_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="artt230.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION artt230_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="artt230.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION artt230_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE rtam_t.rtamdocno 
   DEFINE l_oldno     LIKE rtam_t.rtamdocno 
 
   DEFINE l_master    RECORD LIKE rtam_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE rtan_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE rtaq_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   DEFINE l_insert      LIKE type_t.num5     #161024-00025#9   2016/10/26  by 08742  add
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_rtam_m.rtamdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_rtamdocno_t = g_rtam_m.rtamdocno
 
    
   LET g_rtam_m.rtamdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rtam_m.rtamownid = g_user
      LET g_rtam_m.rtamowndp = g_dept
      LET g_rtam_m.rtamcrtid = g_user
      LET g_rtam_m.rtamcrtdp = g_dept 
      LET g_rtam_m.rtamcrtdt = cl_get_current()
      LET g_rtam_m.rtammodid = g_user
      LET g_rtam_m.rtammoddt = cl_get_current()
      LET g_rtam_m.rtamstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   #161024-00025#9   2016/10/26  by 08742  -S
   LET g_site_flag = FALSE
      CALL s_aooi500_default(g_prog,'rtamsite',g_rtam_m.rtamsite)
         RETURNING l_insert,g_rtam_m.rtamsite
      IF NOT l_insert THEN
         RETURN
      END IF
   #161024-00025#9   2016/10/26  by 08742  -E 
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtam_m.rtamstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL artt230_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_rtam_m.* TO NULL
      INITIALIZE g_rtan_d TO NULL
      INITIALIZE g_rtan2_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL artt230_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt230_set_act_visible()   
   CALL artt230_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtamdocno_t = g_rtam_m.rtamdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtament = " ||g_enterprise|| " AND",
                      " rtamdocno = '", g_rtam_m.rtamdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artt230_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL artt230_idx_chk()
   
   LET g_data_owner = g_rtam_m.rtamownid      
   LET g_data_dept  = g_rtam_m.rtamowndp
   
   #功能已完成,通報訊息中心
   CALL artt230_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="artt230.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION artt230_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE rtan_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE rtaq_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE artt230_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtan_t
    WHERE rtanent = g_enterprise AND rtandocno = g_rtamdocno_t
 
    INTO TEMP artt230_detail
 
   #將key修正為調整後   
   UPDATE artt230_detail 
      #更新key欄位
      SET rtandocno = g_rtam_m.rtamdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO rtan_t SELECT * FROM artt230_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt230_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtaq_t 
    WHERE rtaqent = g_enterprise AND rtaqdocno = g_rtamdocno_t
 
    INTO TEMP artt230_detail
 
   #將key修正為調整後   
   UPDATE artt230_detail SET rtaqdocno = g_rtam_m.rtamdocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtaq_t SELECT * FROM artt230_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt230_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_rtamdocno_t = g_rtam_m.rtamdocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="artt230.delete" >}
#+ 資料刪除
PRIVATE FUNCTION artt230_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_rtam_m.rtamdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN artt230_cl USING g_enterprise,g_rtam_m.rtamdocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt230_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE artt230_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artt230_master_referesh USING g_rtam_m.rtamdocno INTO g_rtam_m.rtamsite,g_rtam_m.rtamdocdt, 
       g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam007, 
       g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid, 
       g_rtam_m.rtamowndp,g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid, 
       g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt,g_rtam_m.rtamsite_desc,g_rtam_m.rtam003_desc, 
       g_rtam_m.rtam004_desc,g_rtam_m.rtam005_desc,g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid_desc, 
       g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtammodid_desc,g_rtam_m.rtamcnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT artt230_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtam_m_mask_o.* =  g_rtam_m.*
   CALL artt230_rtam_t_mask()
   LET g_rtam_m_mask_n.* =  g_rtam_m.*
   
   CALL artt230_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL artt230_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_rtamdocno_t = g_rtam_m.rtamdocno
 
 
      DELETE FROM rtam_t
       WHERE rtament = g_enterprise AND rtamdocno = g_rtam_m.rtamdocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_rtam_m.rtamdocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      IF NOT s_aooi200_del_docno(g_rtam_m.rtamdocno,g_rtam_m.rtamdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM rtan_t
       WHERE rtanent = g_enterprise AND rtandocno = g_rtam_m.rtamdocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtan_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      
      #end add-point
      DELETE FROM rtaq_t
       WHERE rtaqent = g_enterprise AND
             rtaqdocno = g_rtam_m.rtamdocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtaq_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_rtam_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE artt230_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_rtan_d.clear() 
      CALL g_rtan2_d.clear()       
 
     
      CALL artt230_ui_browser_refresh()  
      #CALL artt230_ui_headershow()  
      #CALL artt230_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL artt230_browser_fill("")
         CALL artt230_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE artt230_cl
 
   #功能已完成,通報訊息中心
   CALL artt230_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="artt230.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION artt230_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE l_msg      string 
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_rtan_d.clear()
   CALL g_rtan2_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF artt230_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtanseq,rtan001,rtan002,rtan003,rtan004,rtan005,rtan006,rtan024, 
             rtan007,rtan008,rtan025,rtan009,rtan010,rtan011,rtan012,rtan013,rtan014,rtan015,rtan016, 
             rtan017,rtan018,rtan019,rtan020,rtan021,rtan022,rtan023,rtansite,rtancomp ,t1.rtall003 , 
             t2.mhael023 ,t4.rtaxl003 ,t5.ooefl003 ,t6.stael003 FROM rtan_t",   
                     " INNER JOIN rtam_t ON rtament = " ||g_enterprise|| " AND rtamdocno = rtandocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN rtall_t t1 ON t1.rtallent="||g_enterprise||" AND t1.rtall001=rtan002 AND t1.rtall002='"||g_dlang||"' ",
               " LEFT JOIN mhael_t t2 ON t2.mhaelent="||g_enterprise||" AND t2.mhael001=rtan007 AND t2.mhael022='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t4 ON t4.rtaxlent="||g_enterprise||" AND t4.rtaxl001=rtan009 AND t4.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=rtan010 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN stael_t t6 ON t6.staelent="||g_enterprise||" AND t6.stael001=rtan011 AND t6.stael002='"||g_dlang||"' ",
 
                     " WHERE rtanent=? AND rtandocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtan_t.rtanseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt230_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR artt230_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_rtam_m.rtamdocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_rtam_m.rtamdocno INTO g_rtan_d[l_ac].rtanseq,g_rtan_d[l_ac].rtan001, 
          g_rtan_d[l_ac].rtan002,g_rtan_d[l_ac].rtan003,g_rtan_d[l_ac].rtan004,g_rtan_d[l_ac].rtan005, 
          g_rtan_d[l_ac].rtan006,g_rtan_d[l_ac].rtan024,g_rtan_d[l_ac].rtan007,g_rtan_d[l_ac].rtan008, 
          g_rtan_d[l_ac].rtan025,g_rtan_d[l_ac].rtan009,g_rtan_d[l_ac].rtan010,g_rtan_d[l_ac].rtan011, 
          g_rtan_d[l_ac].rtan012,g_rtan_d[l_ac].rtan013,g_rtan_d[l_ac].rtan014,g_rtan_d[l_ac].rtan015, 
          g_rtan_d[l_ac].rtan016,g_rtan_d[l_ac].rtan017,g_rtan_d[l_ac].rtan018,g_rtan_d[l_ac].rtan019, 
          g_rtan_d[l_ac].rtan020,g_rtan_d[l_ac].rtan021,g_rtan_d[l_ac].rtan022,g_rtan_d[l_ac].rtan023, 
          g_rtan_d[l_ac].rtansite,g_rtan_d[l_ac].rtancomp,g_rtan_d[l_ac].rtan002_desc,g_rtan_d[l_ac].rtan007_desc, 
          g_rtan_d[l_ac].rtan009_desc,g_rtan_d[l_ac].rtan010_desc,g_rtan_d[l_ac].rtan011_desc   #(ver:78) 
 
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtan_d[l_ac].rtan002
         CALL ap_ref_array2(g_ref_fields,"SELECT rtall003 FROM rtall_t WHERE rtallent='"||g_enterprise||"' AND rtall001=? AND rtall002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtan_d[l_ac].rtan002_desc = g_rtn_fields[1]
         IF g_rtan_d[l_ac].rtan024='4' THEN
             INITIALIZE g_ref_fields TO NULL
             LET g_ref_fields[1] =  g_rtan_d[l_ac].rtan007
             CALL ap_ref_array2(g_ref_fields,"SELECT mhbel003 FROM mhbel_t WHERE mhbelent="||g_enterprise||" AND mhbel001=? AND mhbel002='"||g_dlang||"'","") RETURNING g_rtn_fields    
             LET g_rtan_d[l_ac].rtan007_desc = g_rtn_fields[1]  
         ELSE 
             INITIALIZE g_ref_fields TO NULL
             LET g_ref_fields[1] = g_rtan_d[l_ac].rtan007
             CALL ap_ref_array2(g_ref_fields,"SELECT mhael023 FROM mhael_t WHERE mhaelent='"||g_enterprise||"' AND mhael001=? AND mhael022='"||g_dlang||"'","") RETURNING g_rtn_fields
             LET g_rtan_d[l_ac].rtan007_desc = g_rtn_fields[1]
         END IF 

         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtan_d[l_ac].rtan008
         CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtan_d[l_ac].rtan008_desc = g_rtn_fields[1]
         
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtan_d[l_ac].rtan009
         CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtan_d[l_ac].rtan009_desc = g_rtn_fields[1]
         
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtan_d[l_ac].rtan010
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtan_d[l_ac].rtan010_desc = g_rtn_fields[1]

         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_rtan_d[l_ac].rtan011
         CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_rtan_d[l_ac].rtan011_desc = g_rtn_fields[1]
         
          IF g_rtan_d[l_ac].rtan024 ='4' THEN
             LET l_msg=cl_getmsg('amh-00662',g_dlang)
             CALL cl_set_comp_att_text("rtan007",l_msg)            
          ELSE
             LET l_msg=cl_getmsg('amh-00663',g_dlang)
             CALL cl_set_comp_att_text("rtan007",l_msg)
          END IF 
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF artt230_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtaqunit,rtaqsite,rtaqseq,rtaqseq1,rtaq001,rtaq002,rtaq004,rtaq003, 
             rtaq005,rtaq006,rtaq007,rtaq008,rtaq009,rtaq010,rtaqacti ,t7.rtall003 ,t8.stael003 FROM rtaq_t", 
                
                     " INNER JOIN  rtam_t ON rtament = " ||g_enterprise|| " AND rtamdocno = rtaqdocno ",
 
                     "",
                     
                                    " LEFT JOIN rtall_t t7 ON t7.rtallent="||g_enterprise||" AND t7.rtall001=rtaq002 AND t7.rtall002='"||g_dlang||"' ",
               " LEFT JOIN stael_t t8 ON t8.staelent="||g_enterprise||" AND t8.stael001=rtaq003 AND t8.stael002='"||g_dlang||"' ",
 
                     " WHERE rtaqent=? AND rtaqdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtaq_t.rtaqseq,rtaq_t.rtaqseq1"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt230_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR artt230_pb2
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs2 USING g_enterprise,g_rtam_m.rtamdocno   #(ver:78)
                                               
      FOREACH b_fill_cs2 USING g_enterprise,g_rtam_m.rtamdocno INTO g_rtan2_d[l_ac].rtaqunit,g_rtan2_d[l_ac].rtaqsite, 
          g_rtan2_d[l_ac].rtaqseq,g_rtan2_d[l_ac].rtaqseq1,g_rtan2_d[l_ac].rtaq001,g_rtan2_d[l_ac].rtaq002, 
          g_rtan2_d[l_ac].rtaq004,g_rtan2_d[l_ac].rtaq003,g_rtan2_d[l_ac].rtaq005,g_rtan2_d[l_ac].rtaq006, 
          g_rtan2_d[l_ac].rtaq007,g_rtan2_d[l_ac].rtaq008,g_rtan2_d[l_ac].rtaq009,g_rtan2_d[l_ac].rtaq010, 
          g_rtan2_d[l_ac].rtaqacti,g_rtan2_d[l_ac].rtaq002_desc,g_rtan2_d[l_ac].rtaq003_desc   #(ver:78) 
 
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
          INITIALIZE g_ref_fields TO NULL
          LET g_ref_fields[1] = g_rtan2_d[l_ac].rtaq002
          CALL ap_ref_array2(g_ref_fields,"SELECT rtall003 FROM rtall_t WHERE rtallent='"||g_enterprise||"' AND rtall001=? AND rtall002='"||g_dlang||"'","") RETURNING g_rtn_fields
          LET g_rtan2_d[l_ac].rtaq002_desc = g_rtn_fields[1]
         
          INITIALIZE g_ref_fields TO NULL
          LET g_ref_fields[1] = g_rtan2_d[l_ac].rtaq003
          CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
          LET g_rtan2_d[l_ac].rtaq003_desc = g_rtn_fields[1]
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_rtan_d.deleteElement(g_rtan_d.getLength())
   CALL g_rtan2_d.deleteElement(g_rtan2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE artt230_pb
   FREE artt230_pb2
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_rtan_d.getLength()
      LET g_rtan_d_mask_o[l_ac].* =  g_rtan_d[l_ac].*
      CALL artt230_rtan_t_mask()
      LET g_rtan_d_mask_n[l_ac].* =  g_rtan_d[l_ac].*
   END FOR
   
   LET g_rtan2_d_mask_o.* =  g_rtan2_d.*
   FOR l_ac = 1 TO g_rtan2_d.getLength()
      LET g_rtan2_d_mask_o[l_ac].* =  g_rtan2_d[l_ac].*
      CALL artt230_rtaq_t_mask()
      LET g_rtan2_d_mask_n[l_ac].* =  g_rtan2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="artt230.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION artt230_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM rtan_t
       WHERE rtanent = g_enterprise AND
         rtandocno = ps_keys_bak[1] AND rtanseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtan_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      
      #end add-point    
      DELETE FROM rtaq_t
       WHERE rtaqent = g_enterprise AND
             rtaqdocno = ps_keys_bak[1] AND rtaqseq = ps_keys_bak[2] AND rtaqseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtaq_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_rtan2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="artt230.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION artt230_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO rtan_t
                  (rtanent,
                   rtandocno,
                   rtanseq
                   ,rtan001,rtan002,rtan003,rtan004,rtan005,rtan006,rtan024,rtan007,rtan008,rtan025,rtan009,rtan010,rtan011,rtan012,rtan013,rtan014,rtan015,rtan016,rtan017,rtan018,rtan019,rtan020,rtan021,rtan022,rtan023,rtansite,rtancomp) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtan_d[g_detail_idx].rtan001,g_rtan_d[g_detail_idx].rtan002,g_rtan_d[g_detail_idx].rtan003, 
                       g_rtan_d[g_detail_idx].rtan004,g_rtan_d[g_detail_idx].rtan005,g_rtan_d[g_detail_idx].rtan006, 
                       g_rtan_d[g_detail_idx].rtan024,g_rtan_d[g_detail_idx].rtan007,g_rtan_d[g_detail_idx].rtan008, 
                       g_rtan_d[g_detail_idx].rtan025,g_rtan_d[g_detail_idx].rtan009,g_rtan_d[g_detail_idx].rtan010, 
                       g_rtan_d[g_detail_idx].rtan011,g_rtan_d[g_detail_idx].rtan012,g_rtan_d[g_detail_idx].rtan013, 
                       g_rtan_d[g_detail_idx].rtan014,g_rtan_d[g_detail_idx].rtan015,g_rtan_d[g_detail_idx].rtan016, 
                       g_rtan_d[g_detail_idx].rtan017,g_rtan_d[g_detail_idx].rtan018,g_rtan_d[g_detail_idx].rtan019, 
                       g_rtan_d[g_detail_idx].rtan020,g_rtan_d[g_detail_idx].rtan021,g_rtan_d[g_detail_idx].rtan022, 
                       g_rtan_d[g_detail_idx].rtan023,g_rtan_d[g_detail_idx].rtansite,g_rtan_d[g_detail_idx].rtancomp) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtan_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtan_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      
      #end add-point 
      INSERT INTO rtaq_t
                  (rtaqent,
                   rtaqdocno,
                   rtaqseq,rtaqseq1
                   ,rtaqunit,rtaqsite,rtaq001,rtaq002,rtaq004,rtaq003,rtaq005,rtaq006,rtaq007,rtaq008,rtaq009,rtaq010,rtaqacti) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_rtan2_d[g_detail_idx].rtaqunit,g_rtan2_d[g_detail_idx].rtaqsite,g_rtan2_d[g_detail_idx].rtaq001, 
                       g_rtan2_d[g_detail_idx].rtaq002,g_rtan2_d[g_detail_idx].rtaq004,g_rtan2_d[g_detail_idx].rtaq003, 
                       g_rtan2_d[g_detail_idx].rtaq005,g_rtan2_d[g_detail_idx].rtaq006,g_rtan2_d[g_detail_idx].rtaq007, 
                       g_rtan2_d[g_detail_idx].rtaq008,g_rtan2_d[g_detail_idx].rtaq009,g_rtan2_d[g_detail_idx].rtaq010, 
                       g_rtan2_d[g_detail_idx].rtaqacti)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtaq_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_rtan2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="artt230.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION artt230_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtan_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL artt230_rtan_t_mask_restore('restore_mask_o')
               
      UPDATE rtan_t 
         SET (rtandocno,
              rtanseq
              ,rtan001,rtan002,rtan003,rtan004,rtan005,rtan006,rtan024,rtan007,rtan008,rtan025,rtan009,rtan010,rtan011,rtan012,rtan013,rtan014,rtan015,rtan016,rtan017,rtan018,rtan019,rtan020,rtan021,rtan022,rtan023,rtansite,rtancomp) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtan_d[g_detail_idx].rtan001,g_rtan_d[g_detail_idx].rtan002,g_rtan_d[g_detail_idx].rtan003, 
                  g_rtan_d[g_detail_idx].rtan004,g_rtan_d[g_detail_idx].rtan005,g_rtan_d[g_detail_idx].rtan006, 
                  g_rtan_d[g_detail_idx].rtan024,g_rtan_d[g_detail_idx].rtan007,g_rtan_d[g_detail_idx].rtan008, 
                  g_rtan_d[g_detail_idx].rtan025,g_rtan_d[g_detail_idx].rtan009,g_rtan_d[g_detail_idx].rtan010, 
                  g_rtan_d[g_detail_idx].rtan011,g_rtan_d[g_detail_idx].rtan012,g_rtan_d[g_detail_idx].rtan013, 
                  g_rtan_d[g_detail_idx].rtan014,g_rtan_d[g_detail_idx].rtan015,g_rtan_d[g_detail_idx].rtan016, 
                  g_rtan_d[g_detail_idx].rtan017,g_rtan_d[g_detail_idx].rtan018,g_rtan_d[g_detail_idx].rtan019, 
                  g_rtan_d[g_detail_idx].rtan020,g_rtan_d[g_detail_idx].rtan021,g_rtan_d[g_detail_idx].rtan022, 
                  g_rtan_d[g_detail_idx].rtan023,g_rtan_d[g_detail_idx].rtansite,g_rtan_d[g_detail_idx].rtancomp)  
 
         WHERE rtanent = g_enterprise AND rtandocno = ps_keys_bak[1] AND rtanseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtan_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtan_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt230_rtan_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtaq_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL artt230_rtaq_t_mask_restore('restore_mask_o')
               
      UPDATE rtaq_t 
         SET (rtaqdocno,
              rtaqseq,rtaqseq1
              ,rtaqunit,rtaqsite,rtaq001,rtaq002,rtaq004,rtaq003,rtaq005,rtaq006,rtaq007,rtaq008,rtaq009,rtaq010,rtaqacti) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_rtan2_d[g_detail_idx].rtaqunit,g_rtan2_d[g_detail_idx].rtaqsite,g_rtan2_d[g_detail_idx].rtaq001, 
                  g_rtan2_d[g_detail_idx].rtaq002,g_rtan2_d[g_detail_idx].rtaq004,g_rtan2_d[g_detail_idx].rtaq003, 
                  g_rtan2_d[g_detail_idx].rtaq005,g_rtan2_d[g_detail_idx].rtaq006,g_rtan2_d[g_detail_idx].rtaq007, 
                  g_rtan2_d[g_detail_idx].rtaq008,g_rtan2_d[g_detail_idx].rtaq009,g_rtan2_d[g_detail_idx].rtaq010, 
                  g_rtan2_d[g_detail_idx].rtaqacti) 
         WHERE rtaqent = g_enterprise AND rtaqdocno = ps_keys_bak[1] AND rtaqseq = ps_keys_bak[2] AND rtaqseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update2"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtaq_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtaq_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt230_rtaq_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="artt230.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION artt230_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="artt230.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION artt230_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="artt230.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION artt230_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL artt230_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "rtan_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN artt230_bcl USING g_enterprise,
                                       g_rtam_m.rtamdocno,g_rtan_d[g_detail_idx].rtanseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt230_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "rtaq_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artt230_bcl2 USING g_enterprise,
                                             g_rtam_m.rtamdocno,g_rtan2_d[g_detail_idx].rtaqseq,g_rtan2_d[g_detail_idx].rtaqseq1 
 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt230_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="artt230.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION artt230_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt230_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt230_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="artt230.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION artt230_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("rtamdocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("rtamdocno",TRUE)
      CALL cl_set_comp_entry("rtamdocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
       CALL cl_set_comp_entry('rtam000,rtam001',TRUE)
       CALL cl_set_comp_entry('rtamsite',TRUE)       #161024-00025#9  2016/10/27  by 08742 add 
       
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="artt230.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION artt230_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("rtamdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      CALL cl_set_comp_entry('rtam000,rtam001',FALSE)
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("rtamdocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("rtamdocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF NOT s_aooi500_comp_entry(g_prog,'rtamsite') OR g_site_flag THEN
      CALL cl_set_comp_entry("rtamsite",FALSE)
   END IF 
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="artt230.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION artt230_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      CALL cl_set_comp_entry("rtamsite",TRUE)
      CALL cl_set_comp_entry("rtamdocdt",TRUE)
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="artt230.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION artt230_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   IF g_rtan_d[l_ac].rtan012 = 'Y' THEN 
      CALL cl_set_comp_entry("rtan013",TRUE)
   ELSE
      CALL cl_set_comp_entry("rtan013",FALSE)
   END IF 
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("rtamsite",FALSE)
      CALL cl_set_comp_entry("rtamdocdt",FALSE)
      CALL cl_set_comp_entry("rtamdocno",FALSE)
   END IF
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="artt230.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION artt230_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="artt230.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION artt230_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:1)
   IF g_rtam_m.rtamstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF


   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="artt230.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION artt230_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="artt230.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION artt230_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="artt230.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION artt230_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " rtamdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "rtam_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtan_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtaq_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="artt230.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION artt230_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success  LIKE type_t.num5   
   DEFINE l_wc       STRING #lanjj add on 2016-11-09
   DEFINE l_date     DATE   #lanjj add on 2016-11-09
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_rtam_m.rtamdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN artt230_cl USING g_enterprise,g_rtam_m.rtamdocno
   IF STATUS THEN
      CLOSE artt230_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt230_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE artt230_master_referesh USING g_rtam_m.rtamdocno INTO g_rtam_m.rtamsite,g_rtam_m.rtamdocdt, 
       g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam007, 
       g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid, 
       g_rtam_m.rtamowndp,g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid, 
       g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt,g_rtam_m.rtamsite_desc,g_rtam_m.rtam003_desc, 
       g_rtam_m.rtam004_desc,g_rtam_m.rtam005_desc,g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid_desc, 
       g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtammodid_desc,g_rtam_m.rtamcnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT artt230_action_chk() THEN
      CLOSE artt230_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamsite_desc,g_rtam_m.rtamdocdt,g_rtam_m.rtamdocno,g_rtam_m.rtam000, 
       g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam003_desc,g_rtam_m.rtam007,g_rtam_m.rtam004, 
       g_rtam_m.rtam004_desc,g_rtam_m.rtam005,g_rtam_m.rtam005_desc,g_rtam_m.rtam006,g_rtam_m.rtamunit, 
       g_rtam_m.rtamstus,g_rtam_m.rtamownid,g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp,g_rtam_m.rtamowndp_desc, 
       g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtid_desc,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtamcrtdt, 
       g_rtam_m.rtammodid,g_rtam_m.rtammodid_desc,g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfid_desc, 
       g_rtam_m.rtamcnfdt
 
   CASE g_rtam_m.rtamstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
#160604-00004#1 -s by 08172
#   IF g_rtam_m.rtamstus <> 'N' THEN 
#      RETURN 
#   END IF 
#160604-00004#1 -e by 08172
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_rtam_m.rtamstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
#160604-00004#1 -s by 08172
#      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
#      CASE g_rtam_m.rtamstus
#         WHEN "N"
#            #HIDE OPTION "open"
#            CALL cl_set_act_visible("unconfirmed",FALSE)
#         WHEN "X"
#            #HIDE OPTION "invalid"
#            CALL cl_set_act_visible("invalid,unconfirmed,confirmed",FALSE)
#       
#         WHEN "Y"
#            #HIDE OPTION "confirmed"
#            CALL cl_set_act_visible("invalid,confirmed,unconfirmed",FALSE)
#      END CASE
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      
      CASE g_rtam_m.rtamstus
         WHEN "N"
            CALL cl_set_act_visible("open,unconfirmed",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid",FALSE)
            
         WHEN "Y"
            CALL cl_set_act_visible("open,invalid,confirmed,unconfirmed",FALSE) ##add unconfirmed  by zhangnan 
            CLOSE artt230_cl
            CALL s_transaction_end('N','0')
            RETURN
         WHEN "X"
            CALL cl_set_act_visible("invalid,confirmed",FALSE)
      
      END CASE
#160604-00004#1 -e by 08172
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT artt230_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE artt230_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT artt230_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE artt230_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            IF NOT cl_ask_confirm('aim-00108') THEN
               RETURN
            END IF 
            CALL s_artt230_conf_chk(g_rtam_m.rtamdocno) RETURNING l_success
            IF l_success THEN 
               CALL s_transaction_begin()
               CALL s_artt230_conf_upd(g_rtam_m.rtamdocno) RETURNING l_success
               IF l_success THEN
                  IF NOT cl_ask_confirm('ain-00620') THEN               
                     CALL s_transaction_end('Y','0')
                  ELSE
                     ##lanjj modify on 2016-11-09 start
                     #CALL artt230_ins_810() RETURNING l_succes
                     LET l_wc = " rtao001 = '",g_rtam_m.rtam001,"' "
                     LET l_date = g_today
                     CALL s_artp230_ins_astt510(l_wc,l_date) RETURNING l_success
                     ##lanjj modify on 2016-11-09 end
                     IF l_success THEN
                         CALL s_transaction_end('Y','0')
                     ELSE
                         CALL s_transaction_end('N','0')
                     END IF 
                  END IF                      
               ELSE
                  RETURN 
                  CALL s_transaction_end('N','0')
               END IF 
            END IF 
            CALL artt230_b_fill()
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            IF NOT cl_ask_confirm('aim-00109') THEN
               RETURN
            END IF 
            CALL s_transaction_begin()
            CALL s_artt230_void_upd(g_rtam_m.rtamdocno) RETURNING l_success
            IF l_success THEN 
               CALL s_transaction_end('Y','0')
            ELSE
               RETURN 
               CALL s_transaction_end('N','0')
            END IF 
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_rtam_m.rtamstus = lc_state OR cl_null(lc_state) THEN
      CLOSE artt230_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   
   #end add-point
   
   LET g_rtam_m.rtammodid = g_user
   LET g_rtam_m.rtammoddt = cl_get_current()
   LET g_rtam_m.rtamstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE rtam_t 
      SET (rtamstus,rtammodid,rtammoddt) 
        = (g_rtam_m.rtamstus,g_rtam_m.rtammodid,g_rtam_m.rtammoddt)     
    WHERE rtament = g_enterprise AND rtamdocno = g_rtam_m.rtamdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE artt230_master_referesh USING g_rtam_m.rtamdocno INTO g_rtam_m.rtamsite,g_rtam_m.rtamdocdt, 
          g_rtam_m.rtamdocno,g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam007, 
          g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid, 
          g_rtam_m.rtamowndp,g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtdp,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid, 
          g_rtam_m.rtammoddt,g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfdt,g_rtam_m.rtamsite_desc,g_rtam_m.rtam003_desc, 
          g_rtam_m.rtam004_desc,g_rtam_m.rtam005_desc,g_rtam_m.rtamownid_desc,g_rtam_m.rtamowndp_desc, 
          g_rtam_m.rtamcrtid_desc,g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtammodid_desc,g_rtam_m.rtamcnfid_desc 
 
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_rtam_m.rtamsite,g_rtam_m.rtamsite_desc,g_rtam_m.rtamdocdt,g_rtam_m.rtamdocno, 
          g_rtam_m.rtam000,g_rtam_m.rtam001,g_rtam_m.rtam002,g_rtam_m.rtam003,g_rtam_m.rtam003_desc, 
          g_rtam_m.rtam007,g_rtam_m.rtam004,g_rtam_m.rtam004_desc,g_rtam_m.rtam005,g_rtam_m.rtam005_desc, 
          g_rtam_m.rtam006,g_rtam_m.rtamunit,g_rtam_m.rtamstus,g_rtam_m.rtamownid,g_rtam_m.rtamownid_desc, 
          g_rtam_m.rtamowndp,g_rtam_m.rtamowndp_desc,g_rtam_m.rtamcrtid,g_rtam_m.rtamcrtid_desc,g_rtam_m.rtamcrtdp, 
          g_rtam_m.rtamcrtdp_desc,g_rtam_m.rtamcrtdt,g_rtam_m.rtammodid,g_rtam_m.rtammodid_desc,g_rtam_m.rtammoddt, 
          g_rtam_m.rtamcnfid,g_rtam_m.rtamcnfid_desc,g_rtam_m.rtamcnfdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE artt230_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artt230_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="artt230.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION artt230_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_rtan_d.getLength() THEN
         LET g_detail_idx = g_rtan_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtan_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtan_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_rtan2_d.getLength() THEN
         LET g_detail_idx = g_rtan2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtan2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtan2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="artt230.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION artt230_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL artt230_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="artt230.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION artt230_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="artt230.status_show" >}
PRIVATE FUNCTION artt230_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="artt230.mask_functions" >}
&include "erp/art/artt230_mask.4gl"
 
{</section>}
 
{<section id="artt230.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION artt230_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   DEFINE l_success     LIKE type_t.num5
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
 
 
   CALL artt230_show()
   CALL artt230_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   #160604-00004#1 -s by 08172
   CALL s_artt230_conf_chk(g_rtam_m.rtamdocno) RETURNING l_success
   IF NOT l_success THEN
      RETURN FALSE
   END IF 
   #160604-00004#1 -e by 08172   
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_rtam_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_rtan_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_rtan2_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL artt230_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL artt230_ui_headershow()
   CALL artt230_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION artt230_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL artt230_ui_headershow()  
   CALL artt230_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="artt230.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION artt230_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_rtam_m.rtamdocno
   LET g_pk_array[1].column = 'rtamdocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="artt230.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="artt230.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION artt230_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL artt230_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_rtam_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="artt230.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION artt230_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#25 add-S
   SELECT rtamstus  INTO g_rtam_m.rtamstus
     FROM rtam_t
    WHERE rtament = g_enterprise
      AND rtamdocno = g_rtam_m.rtamdocno

   IF (g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_rtam_m.rtamstus
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_rtam_m.rtamdocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL artt230_set_act_visible()
        CALL artt230_set_act_no_visible()
        CALL artt230_show()
        RETURN FALSE
     END IF
   END IF
   #160818-00017#25 add-E
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="artt230.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 检查业务人员
# Memo...........:
# Usage..........: 
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/07/09 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_rtam004_chk()
DEFINE l_ooag003   LIKE ooag_t.ooag003
DEFINE l_ooagstus  LIKE ooag_t.ooagstus

   LET g_errno = ''
   SELECT ooag003,ooagstus INTO l_ooag003,l_ooagstus
     FROM ooag_t
    WHERE ooagent = g_enterprise
      AND ooag001 = g_rtam_m.rtam004
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'aim-00069'
      WHEN l_ooagstus <> 'Y'   LET g_errno = 'ais-00018'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      LET g_rtam_m.rtam005 = l_ooag003
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_rtam_m.rtam005
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_rtam_m.rtam005_desc = '', g_rtn_fields[1] , ''
   ELSE
      LET g_rtam_m.rtam005 = ''  
      LET g_rtam_m.rtam005_desc = ''
   END IF
   DISPLAY BY NAME g_rtam_m.rtam005,g_rtam_m.rtam005_desc
END FUNCTION

################################################################################
# Descriptions...: 业务部门检查
# Memo...........:
# Usage..........: 
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/07/09 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_rtam005_chk()
DEFINE l_ooegstus  LIKE ooag_t.ooagstus
DEFINE l_n         LIKE type_t.num5
   LET g_errno = ''
   SELECT ooegstus INTO l_ooegstus
     FROM ooeg_t
    WHERE ooegent = g_enterprise
      AND ooeg001 = g_rtam_m.rtam005
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'art-00352'
      WHEN l_ooegstus <> 'Y'   LET g_errno = 'art-00353'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      IF NOT cl_null(g_rtam_m.rtam004) THEN
         LET l_n = 0      
         SELECT COUNT(*) INTO l_n
           FROM ooag_t
          WHERE ooagent = g_enterprise
            AND ooag001 = g_rtam_m.rtam004 
            AND ooag003 = g_rtam_m.rtam005
         IF l_n = 0 THEN 
            LET g_errno = 'art-00224'
         END IF 
      END IF 
   END IF
END FUNCTION

################################################################################
# Descriptions...: 资源编号带值
# Memo...........:
# Usage..........: CALL artt230_rtan002_get()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/07/09 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_rtan002_get()
   
   SELECT rtal005,rtal010,rtal011
     INTO g_rtan_d[l_ac].rtan006,g_rtan_d[l_ac].rtan016,g_rtan_d[l_ac].rtan011
     FROM rtal_t
    WHERE rtalent = g_enterprise
      AND rtal001 = g_rtan_d[l_ac].rtan002
   DISPLAY BY NAME g_rtan_d[l_ac].rtan006,g_rtan_d[l_ac].rtan016,g_rtan_d[l_ac].rtan011
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtan_d[l_ac].rtan011
   CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtan_d[l_ac].rtan011_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_rtan_d[l_ac].rtan011_desc
   CALL artt230_rtan011_get()
END FUNCTION

################################################################################
# Descriptions...: 专柜编号带值
# Memo...........:
# Usage..........: CALL artt230_rtan007_get()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/07/09 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_rtan007_get()

   SELECT mhae006,mhae010,mhae004
     INTO g_rtan_d[l_ac].rtan008,g_rtan_d[l_ac].rtan009,g_rtan_d[l_ac].rtan010
     FROM mhae_t
    WHERE mhaeent = g_enterprise
      AND mhae001 = g_rtan_d[l_ac].rtan007
  
  DISPLAY BY NAME g_rtan_d[l_ac].rtan008,g_rtan_d[l_ac].rtan009,g_rtan_d[l_ac].rtan010
  INITIALIZE g_ref_fields TO NULL
  LET g_ref_fields[1] = g_rtan_d[l_ac].rtan008
  CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
  LET g_rtan_d[l_ac].rtan008_desc = g_rtn_fields[1]

  INITIALIZE g_ref_fields TO NULL
  LET g_ref_fields[1] = g_rtan_d[l_ac].rtan009
  CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
  LET g_rtan_d[l_ac].rtan009_desc = g_rtn_fields[1]
  
  INITIALIZE g_ref_fields TO NULL
  LET g_ref_fields[1] = g_rtan_d[l_ac].rtan010
  CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
  LET g_rtan_d[l_ac].rtan010_desc = g_rtn_fields[1]
  
END FUNCTION

################################################################################
# Descriptions...: 费用编码带值
# Memo...........:
# Usage..........: CALL artt230_rtan011_get()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/07/09 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_rtan011_get()

   SELECT stae011,stae007
     INTO g_rtan_d[l_ac].rtan012,g_rtan_d[l_ac].rtan013
     FROM stae_t
    WHERE staeent = g_enterprise
      AND stae001 = g_rtan_d[l_ac].rtan011

  DISPLAY BY NAME g_rtan_d[l_ac].rtan012,g_rtan_d[l_ac].rtan013
END FUNCTION

################################################################################
# Descriptions...: 抓取营运组织资源单头资料
# Memo...........:
# Usage..........: CALL artt230_get_rtao()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/07/10 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_get_rtao()
   
   SELECT rtao003,rtao004,rtao005,rtao006
     INTO g_rtam_m.rtam003,g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006
     FROM rtao_t
    WHERE rtaoent = g_enterprise
      AND rtao001 = g_rtam_m.rtam001
   DISPLAY BY NAME g_rtam_m.rtam003,g_rtam_m.rtam004,g_rtam_m.rtam005,g_rtam_m.rtam006
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtam_m.rtam004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_rtam_m.rtam004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtam_m.rtam004_desc
    
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtam_m.rtam005
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtam_m.rtam005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtam_m.rtam005_desc
      
END FUNCTION

################################################################################
# Descriptions...: 抓取门店资源单身明细
# Memo...........:
# Usage..........: CALL artt230_get_rtap()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/07/10 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_get_rtap()

    INSERT INTO rtan_t(rtanent   ,rtansite   ,rtandocno,  rtanseq,
                       rtan001   ,rtan002    ,rtan003 ,   rtan004,
                       rtan005   ,rtan006    ,rtan007 ,   rtan008,
                       rtan009   ,rtan010    ,rtan011 ,   rtan012,
                       rtan013   ,rtan014    ,rtan015 ,   rtan016,
                       rtan017   ,rtan018    ,rtan019 ,   rtan020,
                       rtan021   ,rtan022    ,rtan023 ,   rtan024) #add rtan024 by dengdd 151125
                SELECT rtapent   ,rtapsite   ,g_rtam_m.rtamdocno ,rtapseq,
                       rtap001   ,rtap002    ,rtap003 ,   rtap004,
                       rtap005   ,rtap006    ,rtap007 ,   rtap008,
                       rtap009   ,rtap010    ,rtap011 ,   rtap012,
                       rtap013   ,rtap014    ,rtap015 ,   rtap016,
                       rtap017   ,rtap018    ,rtap019 ,   rtap020,
                       rtap021   ,rtap022    ,rtap023 ,   rtap024  #add rtap024 by dengdd 151125
                  FROM rtap_t
                 WHERE rtapent = g_enterprise
                   AND rtap001 = g_rtam_m.rtam001
    IF SQLCA.sqlcode THEN
       INITIALIZE g_errparam TO NULL 
       LET g_errparam.extend = 'INSERT INTO rtap_t' 
       LET g_errparam.code   = SQLCA.sqlcode 
       LET g_errparam.popup  = TRUE 
       CALL cl_err()
    END IF
END FUNCTION

################################################################################
# Descriptions...: 检查资源数量
# Memo...........:
# Usage..........: CALL artt230_rtan005_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/07/29 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_rtan005_chk()
DEFINE l_rtal008   LIKE rtal_t.rtal008

   IF cl_null(g_rtan_d[l_ac].rtan002) OR cl_null(g_rtan_d[l_ac].rtan005) THEN 
      RETURN TRUE
   END IF 
   SELECT rtal008 INTO l_rtal008
     FROM rtal_t
    WHERE rtalent = g_enterprise
      AND rtal001 = g_rtan_d[l_ac].rtan002
   IF g_rtan_d[l_ac].rtan005 > l_rtal008 THEN 
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 'art-00685'
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN FALSE
   END IF 
   RETURN TRUE
END FUNCTION

################################################################################
# Descriptions...: 檢查生失效日期範圍內是否有可租用數量
# Memo...........:
# Usage..........: CALL artt230_rtan003_rtan004_rtan005()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015/07/29 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_rtan003_rtan004_rtan005()
DEFINE l_rtap005_sum   LIKE rtap_t.rtap005
DEFINE l_rtal007       LIKE rtal_t.rtal007

   IF cl_null(g_rtan_d[l_ac].rtan002) OR cl_null(g_rtan_d[l_ac].rtan003)
   OR cl_null(g_rtan_d[l_ac].rtan003) OR cl_null(g_rtan_d[l_ac].rtan004)
   OR cl_null(g_rtan_d[l_ac].rtan005) THEN 
      RETURN TRUE 
   END IF 
   IF g_rtam_m.rtam000 = 'I' THEN 
      SELECT SUM(rtap005) INTO l_rtap005_sum
        FROM rtao_t,rtap_t
       WHERE rtapent = g_enterprise
         AND rtapent = rtaoent
         AND rtap001 = rtao001
         AND rtaostus = 'Y'
         AND rtap002 = g_rtan_d[l_ac].rtan002
         AND (rtap003 BETWEEN g_rtan_d[l_ac].rtan003 AND g_rtan_d[l_ac].rtan004
          OR  rtap004 BETWEEN g_rtan_d[l_ac].rtan003 AND g_rtan_d[l_ac].rtan004
          OR  g_rtan_d[l_ac].rtan003 BETWEEN rtap003 AND rtap004)      

   ELSE
      SELECT SUM(rtap005) INTO l_rtap005_sum
        FROM rtao_t,rtap_t
       WHERE rtapent = g_enterprise
         AND rtapent = rtaoent
         AND rtap001 = rtao001
         AND rtaostus = 'Y'
         AND rtap002 = g_rtan_d[l_ac].rtan002
         AND (rtap003 BETWEEN g_rtan_d[l_ac].rtan003 AND g_rtan_d[l_ac].rtan004
          OR  rtap004 BETWEEN g_rtan_d[l_ac].rtan003 AND g_rtan_d[l_ac].rtan004
          OR  g_rtan_d[l_ac].rtan003 BETWEEN rtap003 AND rtap004)  
         AND rtap001 <> g_rtam_m.rtam001 
   END IF 
   IF cl_null(l_rtap005_sum) THEN 
      LET l_rtap005_sum = 0
   END IF 
   SELECT rtal007 INTO l_rtal007
     FROM rtal_t
    WHERE rtalent = g_enterprise
      AND rtal001 = g_rtan_d[l_ac].rtan002
   IF l_rtal007 < g_rtan_d[l_ac].rtan005 + l_rtap005_sum THEN 
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 'art-00685'
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN FALSE
   END IF  
   RETURN TRUE
END FUNCTION

################################################################################
# Descriptions...: 新增单身资料
# Memo...........:
# Usage..........: CALL artt230_rtan_ins()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/08/03 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_rtan_ins()
DEFINE r_success   LIKE type_t.num5

    LET r_success = TRUE
    INSERT INTO rtan_t(rtanent   ,rtansite   ,rtancomp,   rtanseq,
                       rtan001   ,rtan002    ,rtan003 ,   rtan004,
                       rtan005   ,rtan006    ,rtan007 ,   rtan008,
                       rtan009   ,rtan010    ,rtan011 ,   rtan012,
                       rtan013   ,rtan014    ,rtan015 ,   rtan016,
                       rtan017   ,rtan018    ,rtan019 ,   rtan020,
                       rtan021   ,rtan022    ,rtan023 ,   rtandocno, rtan024, #add rtan024 by dengdd 151125
                       rtan025 ) #lanjj add rtan025 on 2016-05-22
                SELECT rtapent   ,rtapsite   ,rtapcomp,   rtapseq,
                       rtap001   ,rtap002    ,rtap003 ,   rtap004,
                       rtap005   ,rtap006    ,rtap007 ,   rtap008,
                       rtap009   ,rtap010    ,rtap011 ,   rtap012,
                       rtap013   ,rtap014    ,rtap015 ,   rtap016,
                       rtap017   ,rtap018    ,rtap019 ,   rtap020,
                       rtap021   ,rtap022    ,rtap023 ,   g_rtam_m.rtamdocno,rtap024, #add rtap024 by dengdd 151125
                       rtap025   #lanjj add rtap025 on 2016-05-22
                  FROM rtap_t
                 WHERE rtapent = g_enterprise
                   AND rtap001 = g_rtam_m.rtam001
    IF SQLCA.sqlcode THEN
       INITIALIZE g_errparam TO NULL 
       LET g_errparam.extend = 'INSERT INTO rtan_t' 
       LET g_errparam.code   = SQLCA.sqlcode 
       LET g_errparam.popup  = TRUE 
       CALL cl_err()
       LET r_success = FALSE
       RETURN r_success
    END IF
    RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 15/11/24 By dengdd
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_get_rtar()
    INSERT INTO rtaq_t(rtaqent   ,rtaqsite   ,rtaqdocno,  rtaqseq,rtaqseq1,
                       rtaq001   ,rtaq002    ,rtaq003 ,   rtaq004,
                       rtaq005   ,rtaq006    ,rtaq007 ,   rtaq008,
                       rtaq009   ,rtaq010    ,rtaqacti)
                SELECT rtarent   ,rtarsite   ,g_rtam_m.rtamdocno ,rtarseq,rtarseq1,
                       rtar001   ,rtar002    ,rtar003 ,   rtar004,
                       rtar005   ,rtar006    ,rtar007 ,   rtar008,
                       rtar009   ,rtar010    ,rtaracti
                  FROM rtar_t
                 WHERE rtarent = g_enterprise
                   AND rtar001 = g_rtam_m.rtam001
    IF SQLCA.sqlcode THEN
       INITIALIZE g_errparam TO NULL 
       LET g_errparam.extend = 'INSERT INTO rtaq_t' 
       LET g_errparam.code   = SQLCA.sqlcode 
       LET g_errparam.popup  = TRUE 
       CALL cl_err()
    END IF
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 15/11/24 By dengdd
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_rtaq001_ref()
      
      SELECT rtan001 INTO g_rtan2_d[l_ac].rtaq001 FROM rtan_t
       WHERE rtanent=g_enterprise AND rtandocno=g_rtam_m.rtamdocno AND rtanseq=g_rtan2_d[l_ac].rtaqseq1
       
     
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_rtaan025_display()

select stje007,stje008,stje028 into g_rtan_d[l_ac].rtan008,g_rtan_d[l_ac].rtan007,g_rtan_d[l_ac].rtan009
 FROM stje_t
 WHERE stjeent = g_enterprise
 AND stje001 = g_rtan_d[l_ac].rtan025
 AND stje005 IN ('2','3','4','5')  
 AND stjestus = 'Y'
 INITIALIZE g_ref_fields TO NULL
 LET g_ref_fields[1] = g_rtan_d[l_ac].rtan007
 CALL ap_ref_array2(g_ref_fields,"SELECT mhbel003 FROM mhbel_t WHERE mhbelent="||g_enterprise||" AND mhbel001=? AND mhbel002='"||g_dlang||"'","") RETURNING g_rtn_fields    
 LET g_rtan_d[l_ac].rtan007_desc = '', g_rtn_fields[1] , ''   
 INITIALIZE g_ref_fields TO NULL
 LET g_ref_fields[1] = g_rtan_d[l_ac].rtan008
 CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
 LET g_rtan_d[l_ac].rtan008_desc = '', g_rtn_fields[1] , ''
 INITIALIZE g_ref_fields TO NULL
 LET g_ref_fields[1] = g_rtan_d[l_ac].rtan009
 CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
 LET g_rtan_d[l_ac].rtan009_desc = '', g_rtn_fields[1] , ''
 
 DISPLAY BY NAME g_rtan_d[l_ac].rtan007,g_rtan_d[l_ac].rtan008,g_rtan_d[l_ac].rtan009,
                 g_rtan_d[l_ac].rtan007_desc,g_rtan_d[l_ac].rtan008_desc, g_rtan_d[l_ac].rtan009_desc
END FUNCTION

################################################################################
# Descriptions...: 审核的同时产生费用单
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION artt230_ins_810()
DEFINE p_wc           STRING
DEFINE p_date         LIKE rtap_t.rtap021
DEFINE l_sql          STRING 
#161222-00039#1----add---begin---------------
#DEFINE l_rtao         RECORD LIKE rtao_t.*
#DEFINE l_rtap         RECORD LIKE rtap_t.*
#DEFINE l_stba         RECORD LIKE stba_t.*
#DEFINE l_stbb         RECORD LIKE stbb_t.*
DEFINE l_rtao RECORD  #門店資源協議維護明細檔
       rtaoent LIKE rtao_t.rtaoent, #企業編號
       rtaounit LIKE rtao_t.rtaounit, #應用組織
       rtaosite LIKE rtao_t.rtaosite, #所屬組織
       rtaostus LIKE rtao_t.rtaostus, #狀態碼
       rtao001 LIKE rtao_t.rtao001, #資源協議編號
       rtao002 LIKE rtao_t.rtao002, #版本
       rtao003 LIKE rtao_t.rtao003, #促銷活動方案
       rtao004 LIKE rtao_t.rtao004, #談判人員
       rtao005 LIKE rtao_t.rtao005, #談判組織
       rtao006 LIKE rtao_t.rtao006, #備註
       rtaoownid LIKE rtao_t.rtaoownid, #資料所有者
       rtaoowndp LIKE rtao_t.rtaoowndp, #資料所屬部門
       rtaocrtid LIKE rtao_t.rtaocrtid, #資料建立者
       rtaocrtdp LIKE rtao_t.rtaocrtdp, #資料建立部門
       rtaocrtdt LIKE rtao_t.rtaocrtdt, #資料創建日
       rtaomodid LIKE rtao_t.rtaomodid, #資料修改者
       rtaomoddt LIKE rtao_t.rtaomoddt, #最近修改日
       rtaocnfid LIKE rtao_t.rtaocnfid, #資料確認者
       rtaocnfdt LIKE rtao_t.rtaocnfdt  #資料確認日
       END RECORD
DEFINE l_rtap RECORD  #門店資源協議維護明細檔
       rtapent LIKE rtap_t.rtapent, #企業編號
       rtapsite LIKE rtap_t.rtapsite, #所屬組織
       rtapcomp LIKE rtap_t.rtapcomp, #所屬法人
       rtapseq LIKE rtap_t.rtapseq, #單據項次
       rtap001 LIKE rtap_t.rtap001, #資源協議編號
       rtap002 LIKE rtap_t.rtap002, #資源編號
       rtap003 LIKE rtap_t.rtap003, #生效日期
       rtap004 LIKE rtap_t.rtap004, #失效日期
       rtap005 LIKE rtap_t.rtap005, #本次租用資源數量
       rtap006 LIKE rtap_t.rtap006, #資源面積
       rtap007 LIKE rtap_t.rtap007, #专柜编号
       rtap008 LIKE rtap_t.rtap008, #供應商編號
       rtap009 LIKE rtap_t.rtap009, #經營類別
       rtap010 LIKE rtap_t.rtap010, #所屬部門
       rtap011 LIKE rtap_t.rtap011, #費用編號
       rtap012 LIKE rtap_t.rtap012, #納入結算單否
       rtap013 LIKE rtap_t.rtap013, #票扣否
       rtap014 LIKE rtap_t.rtap014, #價款類型
       rtap015 LIKE rtap_t.rtap015, #計算類型
       rtap016 LIKE rtap_t.rtap016, #收費標準金額
       rtap017 LIKE rtap_t.rtap017, #協議金額
       rtap018 LIKE rtap_t.rtap018, #倉庫押金
       rtap019 LIKE rtap_t.rtap019, #備註
       rtap020 LIKE rtap_t.rtap020, #協議狀態
       rtap021 LIKE rtap_t.rtap021, #下次結算日
       rtap022 LIKE rtap_t.rtap022, #下次費用開始日
       rtap023 LIKE rtap_t.rtap023, #下次費用截止日
       rtap024 LIKE rtap_t.rtap024, #租用對象
       rtap025 LIKE rtap_t.rtap025  #合約編號
       END RECORD
DEFINE l_stba RECORD  #費用單資料表
       stbaent LIKE stba_t.stbaent, #企業編號
       stbasite LIKE stba_t.stbasite, #營運據點
       stbaunit LIKE stba_t.stbaunit, #應用組織
       stbadocno LIKE stba_t.stbadocno, #單據編號
       stbadocdt LIKE stba_t.stbadocdt, #單據日期
       stba001 LIKE stba_t.stba001, #結算中心
       stba002 LIKE stba_t.stba002, #供應商編號
       stba003 LIKE stba_t.stba003, #經營方式
       stba004 LIKE stba_t.stba004, #結算方式
       stba005 LIKE stba_t.stba005, #結算類型
       stba006 LIKE stba_t.stba006, #來源類型
       stba007 LIKE stba_t.stba007, #來源單號
       stba008 LIKE stba_t.stba008, #人員
       stba009 LIKE stba_t.stba009, #部門
       stbastus LIKE stba_t.stbastus, #狀態碼
       stbaownid LIKE stba_t.stbaownid, #資料所屬者
       stbaowndp LIKE stba_t.stbaowndp, #資料所有部門
       stbacrtid LIKE stba_t.stbacrtid, #資料建立者
       stbacrtdp LIKE stba_t.stbacrtdp, #資料建立部門
       stbacrtdt LIKE stba_t.stbacrtdt, #資料創建日
       stbamodid LIKE stba_t.stbamodid, #資料修改者
       stbamoddt LIKE stba_t.stbamoddt, #最近修改日
       stbacnfid LIKE stba_t.stbacnfid, #資料確認者
       stbacnfdt LIKE stba_t.stbacnfdt, #資料確認日
       stbaud001 LIKE stba_t.stbaud001, #自定義欄位(文字)001
       stbaud002 LIKE stba_t.stbaud002, #自定義欄位(文字)002
       stbaud003 LIKE stba_t.stbaud003, #自定義欄位(文字)003
       stbaud004 LIKE stba_t.stbaud004, #自定義欄位(文字)004
       stbaud005 LIKE stba_t.stbaud005, #自定義欄位(文字)005
       stbaud006 LIKE stba_t.stbaud006, #自定義欄位(文字)006
       stbaud007 LIKE stba_t.stbaud007, #自定義欄位(文字)007
       stbaud008 LIKE stba_t.stbaud008, #自定義欄位(文字)008
       stbaud009 LIKE stba_t.stbaud009, #自定義欄位(文字)009
       stbaud010 LIKE stba_t.stbaud010, #自定義欄位(文字)010
       stbaud011 LIKE stba_t.stbaud011, #自定義欄位(數字)011
       stbaud012 LIKE stba_t.stbaud012, #自定義欄位(數字)012
       stbaud013 LIKE stba_t.stbaud013, #自定義欄位(數字)013
       stbaud014 LIKE stba_t.stbaud014, #自定義欄位(數字)014
       stbaud015 LIKE stba_t.stbaud015, #自定義欄位(數字)015
       stbaud016 LIKE stba_t.stbaud016, #自定義欄位(數字)016
       stbaud017 LIKE stba_t.stbaud017, #自定義欄位(數字)017
       stbaud018 LIKE stba_t.stbaud018, #自定義欄位(數字)018
       stbaud019 LIKE stba_t.stbaud019, #自定義欄位(數字)019
       stbaud020 LIKE stba_t.stbaud020, #自定義欄位(數字)020
       stbaud021 LIKE stba_t.stbaud021, #自定義欄位(日期時間)021
       stbaud022 LIKE stba_t.stbaud022, #自定義欄位(日期時間)022
       stbaud023 LIKE stba_t.stbaud023, #自定義欄位(日期時間)023
       stbaud024 LIKE stba_t.stbaud024, #自定義欄位(日期時間)024
       stbaud025 LIKE stba_t.stbaud025, #自定義欄位(日期時間)025
       stbaud026 LIKE stba_t.stbaud026, #自定義欄位(日期時間)026
       stbaud027 LIKE stba_t.stbaud027, #自定義欄位(日期時間)027
       stbaud028 LIKE stba_t.stbaud028, #自定義欄位(日期時間)028
       stbaud029 LIKE stba_t.stbaud029, #自定義欄位(日期時間)029
       stbaud030 LIKE stba_t.stbaud030, #自定義欄位(日期時間)030
       stba010 LIKE stba_t.stba010, #合約編號
       stba011 LIKE stba_t.stba011, #幣別
       stba012 LIKE stba_t.stba012, #稅別
       stba013 LIKE stba_t.stba013, #專櫃編號/鋪位編號
       stba014 LIKE stba_t.stba014, #費用類型
       stba015 LIKE stba_t.stba015, #交款狀態
       stba000 LIKE stba_t.stba000, #程式編號
       stba016 LIKE stba_t.stba016, #交款人
       stba017 LIKE stba_t.stba017, #結算帳期
       stba018 LIKE stba_t.stba018, #結算日期
       stba019 LIKE stba_t.stba019, #開始日期
       stba020 LIKE stba_t.stba020, #結束日期
       stba021 LIKE stba_t.stba021, #成本總額
       stba022 LIKE stba_t.stba022, #法人
       stba023 LIKE stba_t.stba023, #會員折扣金額
       stba024 LIKE stba_t.stba024, #no_use
       stba025 LIKE stba_t.stba025, #合約帳期
       stba026 LIKE stba_t.stba026, #計算日期
       stba027 LIKE stba_t.stba027  #来源单号項次
       END RECORD

DEFINE l_stbb RECORD  #費用單明細資料表
       stbbent LIKE stbb_t.stbbent, #企業編號
       stbbunit LIKE stbb_t.stbbunit, #應用組織
       stbbsite LIKE stbb_t.stbbsite, #營運據點
       stbbdocno LIKE stbb_t.stbbdocno, #單據編號
       stbbseq LIKE stbb_t.stbbseq, #項次
       stbb001 LIKE stbb_t.stbb001, #費用編號
       stbb002 LIKE stbb_t.stbb002, #幣別
       stbb003 LIKE stbb_t.stbb003, #稅別
       stbb004 LIKE stbb_t.stbb004, #價款類別
       stbb005 LIKE stbb_t.stbb005, #起始日期
       stbb006 LIKE stbb_t.stbb006, #截止日期
       stbb007 LIKE stbb_t.stbb007, #結算會計期
       stbb008 LIKE stbb_t.stbb008, #財務會計期
       stbb009 LIKE stbb_t.stbb009, #費用金額
       stbb010 LIKE stbb_t.stbb010, #承擔對象
       stbb011 LIKE stbb_t.stbb011, #所屬品類
       stbb012 LIKE stbb_t.stbb012, #所屬部門
       stbb013 LIKE stbb_t.stbb013, #結算對象
       stbbud001 LIKE stbb_t.stbbud001, #含發票否
       stbbud002 LIKE stbb_t.stbbud002, #自定義欄位(文字)002
       stbbud003 LIKE stbb_t.stbbud003, #自定義欄位(文字)003
       stbbud004 LIKE stbb_t.stbbud004, #自定義欄位(文字)004
       stbbud005 LIKE stbb_t.stbbud005, #自定義欄位(文字)005
       stbbud006 LIKE stbb_t.stbbud006, #自定義欄位(文字)006
       stbbud007 LIKE stbb_t.stbbud007, #自定義欄位(文字)007
       stbbud008 LIKE stbb_t.stbbud008, #自定義欄位(文字)008
       stbbud009 LIKE stbb_t.stbbud009, #自定義欄位(文字)009
       stbbud010 LIKE stbb_t.stbbud010, #自定義欄位(文字)010
       stbbud011 LIKE stbb_t.stbbud011, #自定義欄位(數字)011
       stbbud012 LIKE stbb_t.stbbud012, #自定義欄位(數字)012
       stbbud013 LIKE stbb_t.stbbud013, #自定義欄位(數字)013
       stbbud014 LIKE stbb_t.stbbud014, #自定義欄位(數字)014
       stbbud015 LIKE stbb_t.stbbud015, #自定義欄位(數字)015
       stbbud016 LIKE stbb_t.stbbud016, #自定義欄位(數字)016
       stbbud017 LIKE stbb_t.stbbud017, #自定義欄位(數字)017
       stbbud018 LIKE stbb_t.stbbud018, #自定義欄位(數字)018
       stbbud019 LIKE stbb_t.stbbud019, #自定義欄位(數字)019
       stbbud020 LIKE stbb_t.stbbud020, #自定義欄位(數字)020
       stbbud021 LIKE stbb_t.stbbud021, #自定義欄位(日期時間)021
       stbbud022 LIKE stbb_t.stbbud022, #自定義欄位(日期時間)022
       stbbud023 LIKE stbb_t.stbbud023, #自定義欄位(日期時間)023
       stbbud024 LIKE stbb_t.stbbud024, #自定義欄位(日期時間)024
       stbbud025 LIKE stbb_t.stbbud025, #自定義欄位(日期時間)025
       stbbud026 LIKE stbb_t.stbbud026, #自定義欄位(日期時間)026
       stbbud027 LIKE stbb_t.stbbud027, #自定義欄位(日期時間)027
       stbbud028 LIKE stbb_t.stbbud028, #自定義欄位(日期時間)028
       stbbud029 LIKE stbb_t.stbbud029, #自定義欄位(日期時間)029
       stbbud030 LIKE stbb_t.stbbud030, #自定義欄位(日期時間)030
       stbb014 LIKE stbb_t.stbb014, #財務會計期別
       stbb015 LIKE stbb_t.stbb015, #納入結算單否
       stbb016 LIKE stbb_t.stbb016, #票扣否
       stbb017 LIKE stbb_t.stbb017, #備註
       stbb018 LIKE stbb_t.stbb018, #結算帳期
       stbb019 LIKE stbb_t.stbb019, #結算日期
       stbb020 LIKE stbb_t.stbb020, #日結成本類型
       stbb021 LIKE stbb_t.stbb021, #調整日期
       stbb022 LIKE stbb_t.stbb022, #商品編號
       stbb023 LIKE stbb_t.stbb023, #庫區編號
       stbb024 LIKE stbb_t.stbb024, #专柜编号
       stbb025 LIKE stbb_t.stbb025, #應收金額
       stbb026 LIKE stbb_t.stbb026, #實收金額
       stbb027 LIKE stbb_t.stbb027, #費率
       stbb028 LIKE stbb_t.stbb028, #成本金額
       stbb029 LIKE stbb_t.stbb029, #促銷銷售額
       stbb030 LIKE stbb_t.stbb030, #費用歸屬類型
       stbb031 LIKE stbb_t.stbb031, #費用歸屬組織
       stbb032 LIKE stbb_t.stbb032, #銷售數量
       stbb033 LIKE stbb_t.stbb033  #銷售單位
       END RECORD

#161222-00039#1----add---end---------------
DEFINE l_rtap008      LIKE rtap_t.rtap008
DEFINE l_rtap007      LIKE rtap_t.rtap007
DEFINE l_rtap025      LIKE rtap_t.rtap025
DEFINE r_doctype      LIKE rtai_t.rtai004
DEFINE l_success      LIKE type_t.num5
DEFINE r_success      LIKE type_t.num5
DEFINE l_stfa011      LIKE stfa_t.stfa011
DEFINE l_stfa044      LIKE stfa_t.stfa044
DEFINE l_nextd        LIKE type_t.dat
DEFINE l_begin        LIKE type_t.dat
DEFINE l_end          LIKE type_t.dat
DEFINE l_sum          LIKE stbb_t.stbb009
DEFINE l_acount_t     LIKE stbb_t.stbb009
DEFINE l_exit         LIKE type_t.chr1
DEFINE l_day          LIKE type_t.num5
DEFINE l_stae005      LIKE stae_t.stae005
DEFINE l_stbb009      LIKE stbb_t.stbb009
DEFINE r_nextd        LIKE type_t.dat
DEFINE r_begin        LIKE type_t.dat
DEFINE r_end          LIKE type_t.dat
DEFINE l_year         LIKE type_t.num5
DEFINE l_month        LIKE type_t.num5
DEFINE l_stfa051      LIKE stfa_t.stfa051  
DEFINE l_count        LIKE type_t.num5
DEFINE l_rtap011      LIKE rtap_t.rtap011
DEFINE l_stae010      LIKE stae_t.stae010
   WHENEVER ERROR CONTINUE
   LET l_success = TRUE
   IF cl_null(p_wc) THEN 
      LET p_wc = " 1=1"
   END IF 
   LET p_wc = cl_replace_str(p_wc, 'mhae001', 'rtap007')   
#   LET l_sql = "SELECT DISTINCT rtao_t.*,rtap007,rtap008,rtap025,rtap011  FROM rtao_t ",  
#               "  LEFT JOIN rtap_t ON rtaoent = rtapent AND rtao001 = rtap001 ",
#               " WHERE rtaoent = ",g_enterprise,
#               "   AND rtap020 = '2' ",
#               "   AND rtap015 IN ('1','2','3','4')",
#               #"   AND rtap021 <= '",p_date,"'",
#               #"   AND rtap024 = '4'", #租用对象为“5-客商租用”  ##mark  by zhangnan 
#               "   AND rtap024 in ('3','4') ", # add by zhangnan   3--非合同
#               "   AND ",p_wc
#   PREPARE sel_rtao3 FROM l_sql
#   DECLARE sel_rtao_cs3 CURSOR FOR sel_rtao3

   #161222-00039#1----add---begin---------------
   #SELECT rtao_t.* ,rtap007,rtap008,rtap025,rtap011
   SELECT rtaoent,rtaounit,rtaosite,rtaostus,rtao001,rtao002,rtao003,rtao004,rtao005,rtao006,
          rtaoownid,rtaoowndp,rtaocrtid,rtaocrtdp,rtaocrtdt,rtaomodid,rtaomoddt,rtaocnfid,rtaocnfdt,
          rtap007,rtap008,rtap025,rtap011
   #161222-00039#1----add--end---------------
   INTO l_rtao.* ,l_rtap007,l_rtap008,l_rtap025,l_rtap011
   FROM rtao_t LEFT JOIN rtap_t ON rtaoent = rtapent AND rtao001 = rtap001
   WHERE rtaoent=g_enterprise AND rtao001=g_rtam_m.rtam001   
   #161222-00039#1----add---begin---------------
   #LET l_sql = " SELECT DISTINCT rtap_t.* FROM rtap_t ",
   LET l_sql = " SELECT DISTINCT rtapent,rtapsite,rtapcomp,rtapseq,rtap001,rtap002,rtap003,rtap004,rtap005,",
               "rtap006,rtap007,rtap008,rtap009,rtap010,rtap011,rtap012,rtap013,rtap014,rtap015,rtap016,rtap017,",
               "rtap018,rtap019,rtap020,rtap021,rtap022,rtap023,rtap024,rtap025 FROM rtap_t ",
   #161222-00039#1----add---end---------------
               "  WHERE rtapent = ",g_enterprise,
               "    AND rtap001 = ? ",
               "    AND rtap020 = '2' ",
               "    AND rtap015 IN ('1','2','3','4')",
               #"    AND rtap021 <= '",p_date,"'",
               #"    AND rtap024 = '4'",  #租用对象为“5-客商租用”  ##mark by zhangnan 
               "    AND rtap024 in ('3','4') ",   ##add by zhangnan 3---非合同
               "   ORDER BY rtapseq  "
   PREPARE sel_rtap3 FROM l_sql
   DECLARE sel_rtap_cs3 CURSOR FOR sel_rtap3
      
      
      #费用单单头栏位赋值
      INITIALIZE l_stba.* TO NULL
      LET l_stba.stbaownid = g_user
      LET l_stba.stbaowndp = g_dept
      LET l_stba.stbacrtid = g_user
      LET l_stba.stbacrtdp = g_dept 
      LET l_stba.stbacrtdt = cl_get_current()
      LET l_stba.stbamodid = g_user
      LET l_stba.stbamoddt = cl_get_current()
      LET l_stba.stbastus = 'N'
      LET l_stba.stbaent = g_enterprise
      LET l_stba.stbasite = l_rtao.rtaosite
      LET l_stba.stbaunit = l_rtao.rtaosite
      LET l_stba.stbadocdt = g_today
      ##預設單據的單別
      LET r_success = ''
      LET r_doctype = ''
      CALL s_arti200_get_def_doc_type(l_stba.stbaunit,'astt810','1')
           RETURNING r_success,r_doctype
      LET l_stba.stbadocno = r_doctype
      CALL s_aooi200_gen_docno(g_site,l_stba.stbadocno,l_stba.stbadocdt,'astt810') RETURNING r_success,l_stba.stbadocno
      IF NOT r_success THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'apm-00003'
         LET g_errparam.extend = l_stba.stbadocno
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET l_success = FALSE
         RETURN l_success         
      END IF 
      LET l_stba.stba006 = '14'              #來源類型 astt810“门店资源协议”
      LET l_stba.stba007 = l_rtao.rtao001    #來源單號
      LET l_stba.stba008 = l_rtao.rtao004    #人員
      LET l_stba.stba009 = l_rtao.rtao005    #部門    
      LET l_stba.stbastus = 'N'              #狀態碼
      LET l_stba.stba014 = '9'                #費用類型   # 未确定 日后修改 2016-05-16 #add by zn
      LET l_stba.stba015 = ''                #交款狀態
      LET l_stba.stba016 = ''                #交款人
      LET l_stba.stba000 = 'astt810'         #程式編號
      LET l_stba.stba013 = l_rtap007         #專櫃編號
      LET l_stba.stba002 = l_rtap008         #供应商编号
      
    #根据合同抓取astm801合同资料
    #经营方式/签订法人（结算中心）/结算方式/结算类型/币别/税别                    
     LET l_stba.stba010 = l_rtap025
     IF NOT cl_null(l_rtap025)  THEN 
        SELECT stje004,stje030,stje031,
               stje032,stje036,stje038
          INTO l_stba.stba003,l_stba.stba001,l_stba.stba004,
               l_stba.stba005,l_stba.stba011,l_stba.stba012
          FROM stje_t
         WHERE stjeent = g_enterprise
           AND stje001 = l_rtap025
      ##add by zhangnan --str
      LET l_sql = "SELECT MIN(stjoseq) ",
                  "  FROM stjo_t ",
                  " WHERE stjoent = ",g_enterprise,
                  "   AND stjo001 = '",l_stba.stba010,"' ",
                  "   AND stjo005 = 'N' "
      PREPARE astt230_get_stjo002_pre31 FROM l_sql
      EXECUTE astt230_get_stjo002_pre31 INTO l_stba.stba025
      ##add by zhangnan  --end     
     ELSE
        LET l_stba.stba003 = '5'
        LET l_stba.stba004 = '13'
        LET l_stba.stba005 = '005'
        LET l_stba.stba011 = 'CNY'
        SELECT ooef017 INTO l_stba.stba001 FROM ooef_t 
        WHERE ooefent=g_enterprise and ooef001=l_rtao.rtaosite
        SELECT stae010 INTO l_stba.stba012 FROM stae_t 
        WHERE staeent=g_enterprise AND stae001=l_rtap011
     END IF 
          
      #161222-00039#1----add---begin---------------
      #INSERT INTO stba_t VALUES(l_stba.*)
      INSERT INTO stba_t (stbaent,stbasite,stbaunit,stbadocno,stbadocdt,stba001,stba002,stba003,stba004,stba005,
                          stba006,stba007,stba008,stba009,stbastus,stbaownid,stbaowndp,stbacrtid,stbacrtdp,stbacrtdt,
                          stbamodid,stbamoddt,stbacnfid,stbacnfdt,stbaud001,stbaud002,stbaud003,stbaud004,stbaud005,
                          stbaud006,stbaud007,stbaud008,stbaud009,stbaud010,stbaud011,stbaud012,stbaud013,stbaud014,
                          stbaud015,stbaud016,stbaud017,stbaud018,stbaud019,stbaud020,stbaud021,stbaud022,stbaud023,
                          stbaud024,stbaud025,stbaud026,stbaud027,stbaud028,stbaud029,stbaud030,stba010,stba011,
                          stba012,stba013,stba014,stba015,stba000,stba016,stba017,stba018,stba019,stba020,stba021,
                          stba022,stba023,stba024,stba025,stba026,stba027)
      VALUES(l_stba.stbaent,l_stba.stbasite,l_stba.stbaunit,l_stba.stbadocno,l_stba.stbadocdt,l_stba.stba001,l_stba.stba002,l_stba.stba003,l_stba.stba004,l_stba.stba005,
             l_stba.stba006,l_stba.stba007,l_stba.stba008,l_stba.stba009,l_stba.stbastus,l_stba.stbaownid,l_stba.stbaowndp,l_stba.stbacrtid,l_stba.stbacrtdp,l_stba.stbacrtdt,
             l_stba.stbamodid,l_stba.stbamoddt,l_stba.stbacnfid,l_stba.stbacnfdt,l_stba.stbaud001,l_stba.stbaud002,l_stba.stbaud003,l_stba.stbaud004,l_stba.stbaud005,
             l_stba.stbaud006,l_stba.stbaud007,l_stba.stbaud008,l_stba.stbaud009,l_stba.stbaud010,l_stba.stbaud011,l_stba.stbaud012,l_stba.stbaud013,l_stba.stbaud014,
             l_stba.stbaud015,l_stba.stbaud016,l_stba.stbaud017,l_stba.stbaud018,l_stba.stbaud019,l_stba.stbaud020,l_stba.stbaud021,l_stba.stbaud022,l_stba.stbaud023,
             l_stba.stbaud024,l_stba.stbaud025,l_stba.stbaud026,l_stba.stbaud027,l_stba.stbaud028,l_stba.stbaud029,l_stba.stbaud030,l_stba.stba010,l_stba.stba011,
             l_stba.stba012,l_stba.stba013,l_stba.stba014,l_stba.stba015,l_stba.stba000,l_stba.stba016,l_stba.stba017,l_stba.stba018,l_stba.stba019,l_stba.stba020,l_stba.stba021,
             l_stba.stba022,l_stba.stba023,l_stba.stba024,l_stba.stba025,l_stba.stba026,l_stba.stba027)
      #161222-00039#1----add---end---------------
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = " INTO stba_t "
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET l_success = FALSE
         RETURN l_success 
      END IF
      INITIALIZE l_rtap.* TO NULL
      FOREACH sel_rtap_cs3 USING l_rtao.rtao001  INTO l_rtap.*
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = 'foreach:' 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            LET l_success = FALSE
            EXIT FOREACH
         END IF
         
         IF l_rtap.rtap017 = 0 THEN #协议金额为零则不生成
            CONTINUE FOREACH
         END IF
         
         INITIALIZE l_stbb.* TO NULL
         LET l_stbb.stbbent = g_enterprise      #企业编号
         LET l_stbb.stbbunit = l_stba.stbaunit  #制定组织
         LET l_stbb.stbbsite = l_stba.stbasite  #营运组织
         LET l_stbb.stbbdocno = l_stba.stbadocno#单据编号
         LET l_stbb.stbb001 = l_rtap.rtap011    #费用编号
         LET l_stbb.stbb002 = l_stba.stba011    #幣別
         LET l_stbb.stbb003 = l_stba.stba012    #稅別      
         
         LET l_stbb.stbb004 = l_rtap.rtap014    #價款類別
         LET l_stbb.stbb010 = '1'               #承擔對象 1-交易对象 2-企业内部
         LET l_stbb.stbb011 = l_rtap.rtap009    #所屬品類
         LET l_stbb.stbb012 = l_rtap.rtap010    #所屬部門
         LET l_stbb.stbb013 = '1'               #結算對象 1-交易对象 2-企业内部
         LET l_stbb.stbb015 = l_rtap.rtap012    #納入結算單否
         LET l_stbb.stbb016 = l_rtap.rtap013    #票扣否        
         LET l_stbb.stbb017 = l_rtap.rtap019    #備註
         
         #含发票否
         SELECT stje040 INTO l_stbb.stbbud001
           FROM stje_t
          WHERE stjeent = g_enterprise
            AND stje001 = l_stba.stba010

         #根据开始日期结束日期抓取结算账期和结算日期
         CALL s_settle_date_get_stbb019(l_stba.stba010,l_rtap.rtap022,l_rtap.rtap023,'3') 
            RETURNING  l_stbb.stbb018,l_stbb.stbb019 
       
         #当费用核算制度为2.权责发生制 写入费用单的开始日期和截止日期，按照自然月以及天数拆分处理
         SELECT stae005,stae013,stae014,stae010 INTO l_stae005,l_stbb.stbb030,l_stbb.stbb031,l_stae010
           FROM stae_t 
          WHERE staeent = g_enterprise
            AND stae001 = l_stbb.stbb001
         IF  l_stbb.stbb030 ='1' THEN 
              LET l_stbb.stbb031=l_stba.stbaunit
         END IF
         IF l_stbb.stbb016='N' THEN    ##add by zhangnan 
            LET l_stbb.stbb003=l_stae010
         END IF 
         LET l_stbb009 = l_rtap.rtap017   #费用金额
         IF l_stae005 = '2' THEN    
            CALL s_curr_round(l_stba.stbasite,l_stbb.stbb002,l_stbb009,'2') RETURNING l_stbb009
            LET l_acount_t = l_stbb009
            #根据费用开始和截止拆分
            LET l_begin = ''
            LET l_end = ''
            LET l_sum = 0
            WHILE TRUE
               #费用下次计算开始日-下次计算截止日
               CALL s_astm301_cal_nextd(l_rtap.rtap015,'1',l_rtap.rtap022,l_rtap.rtap023,l_begin,l_end,'','4','N','') RETURNING l_nextd,l_begin,l_end
               IF l_end> = l_rtap.rtap023 THEN
                  LET l_end = l_rtap.rtap023
                  LET l_exit = 'Y'   #退出循环标志 'Y' 退出
               ELSE
                  LET l_exit = 'N'
               END IF
               LET l_day = l_end - l_begin+1
               LET l_stbb.stbb005 = l_begin
               LET l_stbb.stbb006 = l_end
             
               CALL s_asti206_get_period(l_stbb.stbb005,l_stbb.stbb006,l_stba.stba001,"astt810") 
                     RETURNING l_success,l_stbb.stbb007, 
                               l_year,#会计期年度
                               l_month #会计期月份
               LET l_stbb.stbb008 = l_year                
               LET l_stbb.stbb014 = l_month
               IF NOT l_success THEN
                  LET l_success = FALSE
                  EXIT FOREACH
               END IF

               SELECT MAX(stbbseq)+1 INTO l_stbb.stbbseq FROM stbb_t
                WHERE stbbent = g_enterprise AND stbbdocno = l_stba.stbadocno
            
               IF cl_null(l_stbb.stbbseq) THEN
                  LET l_stbb.stbbseq = 1
               END IF
               IF l_exit = 'Y' THEN
                  LET l_stbb.stbb009 = l_acount_t -l_sum
               ELSE 
                  LET l_stbb.stbb009 = l_acount_t/(l_rtap.rtap023 - l_rtap.rtap022+1)*l_day
                  CALL s_curr_round(l_stba.stbasite,l_stbb.stbb002,l_stbb.stbb009,'2') RETURNING l_stbb.stbb009  
                  LET l_sum = l_sum+ l_stbb.stbb009
               END IF
               #161222-00039#1----add---begin---------------
               #INSERT INTO stbb_t VALUES(l_stbb.*)
               INSERT INTO stbb_t (stbbent,stbbunit,stbbsite,stbbdocno,stbbseq,stbb001,stbb002,stbb003,stbb004,
                                   stbb005,stbb006,stbb007,stbb008,stbb009,stbb010,stbb011,stbb012,stbb013,
                                   stbbud001,stbbud002,stbbud003,stbbud004,stbbud005,stbbud006,stbbud007,stbbud008,
                                   stbbud009,stbbud010,stbbud011,stbbud012,stbbud013,stbbud014,stbbud015,stbbud016,
                                   stbbud017,stbbud018,stbbud019,stbbud020,stbbud021,stbbud022,stbbud023,stbbud024,
                                   stbbud025,stbbud026,stbbud027,stbbud028,stbbud029,stbbud030,stbb014,stbb015,
                                   stbb016,stbb017,stbb018,stbb019,stbb020,stbb021,stbb022,stbb023,stbb024,stbb025,
                                   stbb026,stbb027,stbb028,stbb029,stbb030,stbb031,stbb032,stbb033)
                VALUES(l_stbb.stbbent,l_stbb.stbbunit,l_stbb.stbbsite,l_stbb.stbbdocno,l_stbb.stbbseq,l_stbb.stbb001,l_stbb.stbb002,l_stbb.stbb003,l_stbb.stbb004,
                       l_stbb.stbb005,l_stbb.stbb006,l_stbb.stbb007,l_stbb.stbb008,l_stbb.stbb009,l_stbb.stbb010,l_stbb.stbb011,l_stbb.stbb012,l_stbb.stbb013,
                       l_stbb.stbbud001,l_stbb.stbbud002,l_stbb.stbbud003,l_stbb.stbbud004,l_stbb.stbbud005,l_stbb.stbbud006,l_stbb.stbbud007,l_stbb.stbbud008,
                       l_stbb.stbbud009,l_stbb.stbbud010,l_stbb.stbbud011,l_stbb.stbbud012,l_stbb.stbbud013,l_stbb.stbbud014,l_stbb.stbbud015,l_stbb.stbbud016,
                       l_stbb.stbbud017,l_stbb.stbbud018,l_stbb.stbbud019,l_stbb.stbbud020,l_stbb.stbbud021,l_stbb.stbbud022,l_stbb.stbbud023,l_stbb.stbbud024,
                       l_stbb.stbbud025,l_stbb.stbbud026,l_stbb.stbbud027,l_stbb.stbbud028,l_stbb.stbbud029,l_stbb.stbbud030,l_stbb.stbb014,l_stbb.stbb015,
                       l_stbb.stbb016,l_stbb.stbb017,l_stbb.stbb018,l_stbb.stbb019,l_stbb.stbb020,l_stbb.stbb021,l_stbb.stbb022,l_stbb.stbb023,l_stbb.stbb024,l_stbb.stbb025,
                       l_stbb.stbb026,l_stbb.stbb027,l_stbb.stbb028,l_stbb.stbb029,l_stbb.stbb030,l_stbb.stbb031,l_stbb.stbb032,l_stbb.stbb033)
               #161222-00039#1----add---end---------------
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = " INTO stbb_t "
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET l_success = FALSE
                  EXIT WHILE
               END IF
               IF l_exit = 'Y' THEN     
                  EXIT WHILE
               END IF
                            
            END WHILE
            IF NOT l_success THEN 
               EXIT FOREACH 
            END IF 
         ELSE
            SELECT MAX(stbbseq) + 1 INTO l_stbb.stbbseq
              FROM stbb_t 
             WHERE stbbent = g_enterprise
               AND stbbdocno = l_stba.stbadocno
            IF cl_null(l_stbb.stbbseq) THEN 
               LET l_stbb.stbbseq = 1
            END IF 
            LET l_stbb.stbb005 = l_rtap.rtap022           #起始日期
            LET l_stbb.stbb006 = l_rtap.rtap023           #截止日期
            CALL s_asti206_get_period(l_stbb.stbb005,l_stbb.stbb006,l_stba.stba001,"astt810") 
                           RETURNING l_success,l_stbb.stbb007, 
                                     l_year,#会计期年度
                                     l_month #会计期月份
            LET l_stbb.stbb008 = l_year                
            LET l_stbb.stbb014 = l_month           #財務會計期別    
            IF NOT l_success THEN
               LET l_success = FALSE
               EXIT FOREACH
            END IF
            LET l_stbb.stbb009 = l_stbb009         #費用金額
            CALL s_curr_round(l_stba.stbasite,l_stbb.stbb002,l_stbb.stbb009,'2') RETURNING l_stbb.stbb009  

            #161222-00039#1----add---begin---------------
            #INSERT INTO stbb_t VALUES(l_stbb.*)
            INSERT INTO stbb_t (stbbent,stbbunit,stbbsite,stbbdocno,stbbseq,stbb001,stbb002,stbb003,stbb004,
                                stbb005,stbb006,stbb007,stbb008,stbb009,stbb010,stbb011,stbb012,stbb013,
                                stbbud001,stbbud002,stbbud003,stbbud004,stbbud005,stbbud006,stbbud007,stbbud008,
                                stbbud009,stbbud010,stbbud011,stbbud012,stbbud013,stbbud014,stbbud015,stbbud016,
                                stbbud017,stbbud018,stbbud019,stbbud020,stbbud021,stbbud022,stbbud023,stbbud024,
                                stbbud025,stbbud026,stbbud027,stbbud028,stbbud029,stbbud030,stbb014,stbb015,
                                stbb016,stbb017,stbb018,stbb019,stbb020,stbb021,stbb022,stbb023,stbb024,stbb025,
                                stbb026,stbb027,stbb028,stbb029,stbb030,stbb031,stbb032,stbb033)
             VALUES(l_stbb.stbbent,l_stbb.stbbunit,l_stbb.stbbsite,l_stbb.stbbdocno,l_stbb.stbbseq,l_stbb.stbb001,l_stbb.stbb002,l_stbb.stbb003,l_stbb.stbb004,
                    l_stbb.stbb005,l_stbb.stbb006,l_stbb.stbb007,l_stbb.stbb008,l_stbb.stbb009,l_stbb.stbb010,l_stbb.stbb011,l_stbb.stbb012,l_stbb.stbb013,
                    l_stbb.stbbud001,l_stbb.stbbud002,l_stbb.stbbud003,l_stbb.stbbud004,l_stbb.stbbud005,l_stbb.stbbud006,l_stbb.stbbud007,l_stbb.stbbud008,
                    l_stbb.stbbud009,l_stbb.stbbud010,l_stbb.stbbud011,l_stbb.stbbud012,l_stbb.stbbud013,l_stbb.stbbud014,l_stbb.stbbud015,l_stbb.stbbud016,
                    l_stbb.stbbud017,l_stbb.stbbud018,l_stbb.stbbud019,l_stbb.stbbud020,l_stbb.stbbud021,l_stbb.stbbud022,l_stbb.stbbud023,l_stbb.stbbud024,
                    l_stbb.stbbud025,l_stbb.stbbud026,l_stbb.stbbud027,l_stbb.stbbud028,l_stbb.stbbud029,l_stbb.stbbud030,l_stbb.stbb014,l_stbb.stbb015,
                    l_stbb.stbb016,l_stbb.stbb017,l_stbb.stbb018,l_stbb.stbb019,l_stbb.stbb020,l_stbb.stbb021,l_stbb.stbb022,l_stbb.stbb023,l_stbb.stbb024,l_stbb.stbb025,
                    l_stbb.stbb026,l_stbb.stbb027,l_stbb.stbb028,l_stbb.stbb029,l_stbb.stbb030,l_stbb.stbb031,l_stbb.stbb032,l_stbb.stbb033)
            #161222-00039#1----add---end---------------
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = " INTO stbb_t "
               LET g_errparam.popup = TRUE
               CALL cl_err()
               LET l_success = FALSE
               EXIT FOREACH   
            END IF
         END IF 
         #写入费用单----end-----
         #更新下次费用计算日、下次费用开始日、下次费用截止日
         CALL s_astm301_cal_nextd(l_rtap.rtap015,'1',l_rtap.rtap003,l_rtap.rtap004,l_rtap.rtap022,l_rtap.rtap023,'','4','N','')
              RETURNING r_nextd,r_begin,r_end
         IF l_rtap.rtap015 = '4' THEN 
            LET r_nextd = ''
            LET r_begin = ''
            LET r_end = ''
         END IF
         #下次计算日期大于失效日期清空下次费用计算日、下次费用开始日、下次费用截止日
         IF r_nextd > l_rtap.rtap004 THEN 
            LET r_nextd = ''
            LET r_begin = ''
            LET r_end = '' 
         END IF 
         UPDATE rtap_t SET rtap021 = r_nextd,
                           rtap022 = r_begin,
                           rtap023 = r_end
          WHERE rtapent = g_enterprise
            AND rtap001 = l_rtap.rtap001
            AND rtapseq = l_rtap.rtapseq
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = " UPD rtap_t "
            LET g_errparam.popup = TRUE
            CALL cl_err()
            LET l_success = FALSE
            EXIT FOREACH   
         END IF
      END FOREACH 
      #lanjj add on 2016-07-18 防止出现有单头无单身的费用单 start
      SELECT COUNT(*) INTO l_count
        FROM stbb_t
       WHERE stbbent = g_enterprise
         AND stbbdocno = l_stba.stbadocno
      IF l_count <= 0 THEN
         DELETE FROM stba_t WHERE stbaent = g_enterprise AND stbadocno = l_stba.stbadocno
      END IF 
      #lanjj add on 2016-07-18 防止出现有单头无单身的费用单  end      
  
   IF l_success THEN 
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF 
END FUNCTION

 
{</section>}
 
