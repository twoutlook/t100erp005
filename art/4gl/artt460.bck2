#該程式未解開Section, 採用最新樣板產出!
{<section id="artt460.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0009(2015-03-12 15:13:10), PR版次:0009(2016-10-31 18:19:36)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000068
#+ Filename...: artt460
#+ Description: 供應商清場清退作業
#+ Creator....: 01533(2015-03-09 15:09:21)
#+ Modifier...: 01533 -SD/PR- 08742
 
{</section>}
 
{<section id="artt460.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
#160318-00025#33   2016/04/13   By 07959      將重複內容的錯誤訊息置換為公用錯誤訊息(r.v)
#160816-00068#8    2016/08/17   By 08209      調整transaction
#160818-00017#35   2016-08-29   By 08734      删除修改未重新判断状态码
#161024-00025#11   2016/10/31   by 08742      组织开窗调整
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_rtdi_m        RECORD
       rtdisite LIKE rtdi_t.rtdisite, 
   rtdisite_desc LIKE type_t.chr80, 
   rtdidocdt LIKE rtdi_t.rtdidocdt, 
   rtdidocno LIKE rtdi_t.rtdidocno, 
   rtdi001 LIKE rtdi_t.rtdi001, 
   rtdi001_desc LIKE type_t.chr80, 
   rtdi002 LIKE rtdi_t.rtdi002, 
   rtdi002_desc LIKE type_t.chr80, 
   rtdi003 LIKE rtdi_t.rtdi003, 
   rtdi003_desc LIKE type_t.chr80, 
   rtdi004 LIKE rtdi_t.rtdi004, 
   rtdi004_desc LIKE type_t.chr80, 
   rtdistus LIKE rtdi_t.rtdistus, 
   rtdi005 LIKE rtdi_t.rtdi005, 
   rtdi006 LIKE rtdi_t.rtdi006, 
   rtdi007 LIKE rtdi_t.rtdi007, 
   rtdi008 LIKE rtdi_t.rtdi008, 
   rtdi009 LIKE rtdi_t.rtdi009, 
   rtdi010 LIKE rtdi_t.rtdi010, 
   rtdiunit LIKE rtdi_t.rtdiunit, 
   rtdiownid LIKE rtdi_t.rtdiownid, 
   rtdiownid_desc LIKE type_t.chr80, 
   rtdicrtid LIKE rtdi_t.rtdicrtid, 
   rtdicrtid_desc LIKE type_t.chr80, 
   rtdiowndp LIKE rtdi_t.rtdiowndp, 
   rtdiowndp_desc LIKE type_t.chr80, 
   rtdicrtdp LIKE rtdi_t.rtdicrtdp, 
   rtdicrtdp_desc LIKE type_t.chr80, 
   rtdicrtdt LIKE rtdi_t.rtdicrtdt, 
   rtdimodid LIKE rtdi_t.rtdimodid, 
   rtdimodid_desc LIKE type_t.chr80, 
   rtdicnfid LIKE rtdi_t.rtdicnfid, 
   rtdicnfid_desc LIKE type_t.chr80, 
   rtdimoddt LIKE rtdi_t.rtdimoddt, 
   rtdicnfdt LIKE rtdi_t.rtdicnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_rtdj_d        RECORD
       rtdjseq LIKE rtdj_t.rtdjseq, 
   rtdj001 LIKE rtdj_t.rtdj001, 
   rtdj001_desc LIKE type_t.chr500, 
   rtdjsite LIKE rtdj_t.rtdjsite, 
   rtdjunit LIKE rtdj_t.rtdjunit
       END RECORD
PRIVATE TYPE type_g_rtdj2_d RECORD
       rtdkseq LIKE rtdk_t.rtdkseq, 
   rtdksite LIKE rtdk_t.rtdksite, 
   rtdksite_desc LIKE type_t.chr500, 
   rtdk002 LIKE rtdk_t.rtdk002, 
   rtdk001 LIKE rtdk_t.rtdk001, 
   rtdk001_desc LIKE type_t.chr500, 
   rtdk003 LIKE rtdk_t.rtdk003, 
   rtdk004 LIKE rtdk_t.rtdk004, 
   rtdk005 LIKE rtdk_t.rtdk005, 
   rtdk006 LIKE rtdk_t.rtdk006, 
   rtdk007 LIKE rtdk_t.rtdk007, 
   rtdkunit LIKE rtdk_t.rtdkunit
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_rtdisite LIKE rtdi_t.rtdisite,
      b_rtdidocno LIKE rtdi_t.rtdidocno,
      b_rtdidocdt LIKE rtdi_t.rtdidocdt,
      b_rtdi001 LIKE rtdi_t.rtdi001,
      b_rtdi002 LIKE rtdi_t.rtdi002,
      b_rtdi003 LIKE rtdi_t.rtdi003,
      b_rtdi004 LIKE rtdi_t.rtdi004,
      b_rtdi005 LIKE rtdi_t.rtdi005,
      b_rtdi006 LIKE rtdi_t.rtdi006,
      b_rtdi007 LIKE rtdi_t.rtdi007,
      b_rtdi008 LIKE rtdi_t.rtdi008,
      b_rtdi009 LIKE rtdi_t.rtdi009,
      b_rtdi010 LIKE rtdi_t.rtdi010
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_site_flag    LIKE type_t.num5
DEFINE g_ooef004      LIKE ooef_t.ooef004
DEFINE g_ooef005      LIKE ooef_t.ooef005
#end add-point
       
#模組變數(Module Variables)
DEFINE g_rtdi_m          type_g_rtdi_m
DEFINE g_rtdi_m_t        type_g_rtdi_m
DEFINE g_rtdi_m_o        type_g_rtdi_m
DEFINE g_rtdi_m_mask_o   type_g_rtdi_m #轉換遮罩前資料
DEFINE g_rtdi_m_mask_n   type_g_rtdi_m #轉換遮罩後資料
 
   DEFINE g_rtdidocno_t LIKE rtdi_t.rtdidocno
 
 
DEFINE g_rtdj_d          DYNAMIC ARRAY OF type_g_rtdj_d
DEFINE g_rtdj_d_t        type_g_rtdj_d
DEFINE g_rtdj_d_o        type_g_rtdj_d
DEFINE g_rtdj_d_mask_o   DYNAMIC ARRAY OF type_g_rtdj_d #轉換遮罩前資料
DEFINE g_rtdj_d_mask_n   DYNAMIC ARRAY OF type_g_rtdj_d #轉換遮罩後資料
DEFINE g_rtdj2_d          DYNAMIC ARRAY OF type_g_rtdj2_d
DEFINE g_rtdj2_d_t        type_g_rtdj2_d
DEFINE g_rtdj2_d_o        type_g_rtdj2_d
DEFINE g_rtdj2_d_mask_o   DYNAMIC ARRAY OF type_g_rtdj2_d #轉換遮罩前資料
DEFINE g_rtdj2_d_mask_n   DYNAMIC ARRAY OF type_g_rtdj2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="artt460.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
    DEFINE l_success LIKE type_t.num5 
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT rtdisite,'',rtdidocdt,rtdidocno,rtdi001,'',rtdi002,'',rtdi003,'',rtdi004, 
       '',rtdistus,rtdi005,rtdi006,rtdi007,rtdi008,rtdi009,rtdi010,rtdiunit,rtdiownid,'',rtdicrtid,'', 
       rtdiowndp,'',rtdicrtdp,'',rtdicrtdt,rtdimodid,'',rtdicnfid,'',rtdimoddt,rtdicnfdt", 
                      " FROM rtdi_t",
                      " WHERE rtdient= ? AND rtdidocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt460_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.rtdisite,t0.rtdidocdt,t0.rtdidocno,t0.rtdi001,t0.rtdi002,t0.rtdi003, 
       t0.rtdi004,t0.rtdistus,t0.rtdi005,t0.rtdi006,t0.rtdi007,t0.rtdi008,t0.rtdi009,t0.rtdi010,t0.rtdiunit, 
       t0.rtdiownid,t0.rtdicrtid,t0.rtdiowndp,t0.rtdicrtdp,t0.rtdicrtdt,t0.rtdimodid,t0.rtdicnfid,t0.rtdimoddt, 
       t0.rtdicnfdt,t1.ooefl003 ,t2.pmaal004 ,t3.oocql004 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011 ,t7.ooag011 , 
       t8.ooefl003 ,t9.ooefl003 ,t10.ooag011 ,t11.ooag011",
               " FROM rtdi_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtdisite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent="||g_enterprise||" AND t2.pmaal001=t0.rtdi001 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent="||g_enterprise||" AND t3.oocql001='2117' AND t3.oocql002=t0.rtdi002 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=t0.rtdi003  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=t0.rtdi004 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=t0.rtdiownid  ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=t0.rtdicrtid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent="||g_enterprise||" AND t8.ooefl001=t0.rtdiowndp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent="||g_enterprise||" AND t9.ooefl001=t0.rtdicrtdp AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent="||g_enterprise||" AND t10.ooag001=t0.rtdimodid  ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent="||g_enterprise||" AND t11.ooag001=t0.rtdicnfid  ",
 
               " WHERE t0.rtdient = " ||g_enterprise|| " AND t0.rtdidocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE artt460_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_artt460 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL artt460_init()   
 
      #進入選單 Menu (="N")
      CALL artt460_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      CALL s_aooi500_drop_temp() RETURNING l_success 
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_artt460
      
   END IF 
   
   CLOSE artt460_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="artt460.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION artt460_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success LIKE type_t.num5
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('rtdistus','13','N,Y,A,D,R,W,X')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL artt460_get_ooef(g_site)
   #CALL artt460_rtdi005_combo()
   #CALL artt460_rtdi006_combo()
   CALL s_life_cycle_display(g_prog,'rtdi005','2')
   CALL s_life_cycle_display(g_prog,'rtdi006','1')
   CALL s_aooi500_create_temp() RETURNING l_success
   #end add-point
   
   #初始化搜尋條件
   CALL artt460_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="artt460.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION artt460_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL artt460_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_rtdi_m.* TO NULL
         CALL g_rtdj_d.clear()
         CALL g_rtdj2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL artt460_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL artt460_fetch('') # reload data
               LET l_ac = 1
               CALL artt460_ui_detailshow() #Setting the current row 
         
               CALL artt460_idx_chk()
               #NEXT FIELD rtdjseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_rtdj_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt460_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL artt460_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_rtdj2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt460_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL artt460_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL artt460_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL artt460_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL artt460_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL artt460_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL artt460_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL artt460_set_act_visible()   
            CALL artt460_set_act_no_visible()
            IF NOT (g_rtdi_m.rtdidocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " rtdient = " ||g_enterprise|| " AND",
                                  " rtdidocno = '", g_rtdi_m.rtdidocno, "' "
 
               #填到對應位置
               CALL artt460_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtdi_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtdj_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtdk_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL artt460_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtdi_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtdj_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtdk_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL artt460_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL artt460_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL artt460_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL artt460_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt460_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL artt460_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt460_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL artt460_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt460_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL artt460_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt460_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL artt460_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt460_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_rtdj_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_rtdj2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD rtdjseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL artt460_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL artt460_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL artt460_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL artt460_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               &include "erp/art/artt460_rep.4gl"
               #add-point:ON ACTION output.after
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL artt460_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL artt460_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL artt460_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL artt460_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL artt460_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_rtdi_m.rtdidocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="artt460.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION artt460_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT rtdidocno ",
                      " FROM rtdi_t ",
                      " ",
                      " LEFT JOIN rtdj_t ON rtdjent = rtdient AND rtdidocno = rtdjdocno ", "  ",
                      #add-point:browser_fill段sql(rtdj_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
                      " LEFT JOIN rtdk_t ON rtdkent = rtdient AND rtdidocno = rtdkdocno", "  ",
                      #add-point:browser_fill段sql(rtdk_t1) name="browser_fill.cnt.join.rtdk_t1"
                      
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " ",                      
 
 
 
                      " WHERE rtdient = " ||g_enterprise|| " AND rtdjent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("rtdi_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT rtdidocno ",
                      " FROM rtdi_t ", 
                      "  ",
                      "  ",
                      " WHERE rtdient = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("rtdi_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_rtdi_m.* TO NULL
      CALL g_rtdj_d.clear()        
      CALL g_rtdj2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.rtdisite,t0.rtdidocno,t0.rtdidocdt,t0.rtdi001,t0.rtdi002,t0.rtdi003,t0.rtdi004,t0.rtdi005,t0.rtdi006,t0.rtdi007,t0.rtdi008,t0.rtdi009,t0.rtdi010 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.rtdistus,t0.rtdisite,t0.rtdidocno,t0.rtdidocdt,t0.rtdi001,t0.rtdi002, 
          t0.rtdi003,t0.rtdi004,t0.rtdi005,t0.rtdi006,t0.rtdi007,t0.rtdi008,t0.rtdi009,t0.rtdi010 ", 
 
                  " FROM rtdi_t t0",
                  "  ",
                  "  LEFT JOIN rtdj_t ON rtdjent = rtdient AND rtdidocno = rtdjdocno ", "  ", 
                  #add-point:browser_fill段sql(rtdj_t1) name="browser_fill.join.rtdj_t1"
                  
                  #end add-point
                  "  LEFT JOIN rtdk_t ON rtdkent = rtdient AND rtdidocno = rtdkdocno", "  ", 
                  #add-point:browser_fill段sql(rtdk_t1) name="browser_fill.join.rtdk_t1"
                  
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
 
 
                  
                  " WHERE t0.rtdient = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("rtdi_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.rtdistus,t0.rtdisite,t0.rtdidocno,t0.rtdidocdt,t0.rtdi001,t0.rtdi002, 
          t0.rtdi003,t0.rtdi004,t0.rtdi005,t0.rtdi006,t0.rtdi007,t0.rtdi008,t0.rtdi009,t0.rtdi010 ", 
 
                  " FROM rtdi_t t0",
                  "  ",
                  
                  " WHERE t0.rtdient = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("rtdi_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY rtdidocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"rtdi_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_rtdisite,g_browser[g_cnt].b_rtdidocno, 
          g_browser[g_cnt].b_rtdidocdt,g_browser[g_cnt].b_rtdi001,g_browser[g_cnt].b_rtdi002,g_browser[g_cnt].b_rtdi003, 
          g_browser[g_cnt].b_rtdi004,g_browser[g_cnt].b_rtdi005,g_browser[g_cnt].b_rtdi006,g_browser[g_cnt].b_rtdi007, 
          g_browser[g_cnt].b_rtdi008,g_browser[g_cnt].b_rtdi009,g_browser[g_cnt].b_rtdi010
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL artt460_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_rtdidocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="artt460.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION artt460_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_rtdi_m.rtdidocno = g_browser[g_current_idx].b_rtdidocno   
 
   EXECUTE artt460_master_referesh USING g_rtdi_m.rtdidocno INTO g_rtdi_m.rtdisite,g_rtdi_m.rtdidocdt, 
       g_rtdi_m.rtdidocno,g_rtdi_m.rtdi001,g_rtdi_m.rtdi002,g_rtdi_m.rtdi003,g_rtdi_m.rtdi004,g_rtdi_m.rtdistus, 
       g_rtdi_m.rtdi005,g_rtdi_m.rtdi006,g_rtdi_m.rtdi007,g_rtdi_m.rtdi008,g_rtdi_m.rtdi009,g_rtdi_m.rtdi010, 
       g_rtdi_m.rtdiunit,g_rtdi_m.rtdiownid,g_rtdi_m.rtdicrtid,g_rtdi_m.rtdiowndp,g_rtdi_m.rtdicrtdp, 
       g_rtdi_m.rtdicrtdt,g_rtdi_m.rtdimodid,g_rtdi_m.rtdicnfid,g_rtdi_m.rtdimoddt,g_rtdi_m.rtdicnfdt, 
       g_rtdi_m.rtdisite_desc,g_rtdi_m.rtdi001_desc,g_rtdi_m.rtdi002_desc,g_rtdi_m.rtdi003_desc,g_rtdi_m.rtdi004_desc, 
       g_rtdi_m.rtdiownid_desc,g_rtdi_m.rtdicrtid_desc,g_rtdi_m.rtdiowndp_desc,g_rtdi_m.rtdicrtdp_desc, 
       g_rtdi_m.rtdimodid_desc,g_rtdi_m.rtdicnfid_desc
   
   CALL artt460_rtdi_t_mask()
   CALL artt460_show()
      
END FUNCTION
 
{</section>}
 
{<section id="artt460.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION artt460_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="artt460.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION artt460_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_rtdidocno = g_rtdi_m.rtdidocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="artt460.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION artt460_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_rtdi_m.* TO NULL
   CALL g_rtdj_d.clear()        
   CALL g_rtdj2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON rtdisite,rtdidocdt,rtdidocno,rtdi001,rtdi002,rtdi003,rtdi004,rtdistus, 
          rtdi005,rtdi006,rtdi007,rtdi008,rtdi009,rtdi010,rtdiunit,rtdiownid,rtdicrtid,rtdiowndp,rtdicrtdp, 
          rtdicrtdt,rtdimodid,rtdicnfid,rtdimoddt,rtdicnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<rtdicrtdt>>----
         AFTER FIELD rtdicrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<rtdimoddt>>----
         AFTER FIELD rtdimoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtdicnfdt>>----
         AFTER FIELD rtdicnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtdipstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.rtdisite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdisite
            #add-point:ON ACTION controlp INFIELD rtdisite name="construct.c.rtdisite"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdisite',g_site,'c')
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdisite  #顯示到畫面上
            NEXT FIELD rtdisite                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdisite
            #add-point:BEFORE FIELD rtdisite name="construct.b.rtdisite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdisite
            
            #add-point:AFTER FIELD rtdisite name="construct.a.rtdisite"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdidocdt
            #add-point:BEFORE FIELD rtdidocdt name="construct.b.rtdidocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdidocdt
            
            #add-point:AFTER FIELD rtdidocdt name="construct.a.rtdidocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdidocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdidocdt
            #add-point:ON ACTION controlp INFIELD rtdidocdt name="construct.c.rtdidocdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtdidocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdidocno
            #add-point:ON ACTION controlp INFIELD rtdidocno name="construct.c.rtdidocno"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtdidocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdidocno  #顯示到畫面上
            NEXT FIELD rtdidocno                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdidocno
            #add-point:BEFORE FIELD rtdidocno name="construct.b.rtdidocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdidocno
            
            #add-point:AFTER FIELD rtdidocno name="construct.a.rtdidocno"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdi001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi001
            #add-point:ON ACTION controlp INFIELD rtdi001 name="construct.c.rtdi001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "('1','3')"
            CALL q_pmaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdi001  #顯示到畫面上
            NEXT FIELD rtdi001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi001
            #add-point:BEFORE FIELD rtdi001 name="construct.b.rtdi001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi001
            
            #add-point:AFTER FIELD rtdi001 name="construct.a.rtdi001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdi002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi002
            #add-point:ON ACTION controlp INFIELD rtdi002 name="construct.c.rtdi002"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2117'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdi002  #顯示到畫面上
            NEXT FIELD rtdi002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi002
            #add-point:BEFORE FIELD rtdi002 name="construct.b.rtdi002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi002
            
            #add-point:AFTER FIELD rtdi002 name="construct.a.rtdi002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdi003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi003
            #add-point:ON ACTION controlp INFIELD rtdi003 name="construct.c.rtdi003"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdi003  #顯示到畫面上
            NEXT FIELD rtdi003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi003
            #add-point:BEFORE FIELD rtdi003 name="construct.b.rtdi003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi003
            
            #add-point:AFTER FIELD rtdi003 name="construct.a.rtdi003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdi004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi004
            #add-point:ON ACTION controlp INFIELD rtdi004 name="construct.c.rtdi004"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdi004  #顯示到畫面上
            NEXT FIELD rtdi004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi004
            #add-point:BEFORE FIELD rtdi004 name="construct.b.rtdi004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi004
            
            #add-point:AFTER FIELD rtdi004 name="construct.a.rtdi004"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdistus
            #add-point:BEFORE FIELD rtdistus name="construct.b.rtdistus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdistus
            
            #add-point:AFTER FIELD rtdistus name="construct.a.rtdistus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdistus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdistus
            #add-point:ON ACTION controlp INFIELD rtdistus name="construct.c.rtdistus"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi005
            #add-point:BEFORE FIELD rtdi005 name="construct.b.rtdi005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi005
            
            #add-point:AFTER FIELD rtdi005 name="construct.a.rtdi005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdi005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi005
            #add-point:ON ACTION controlp INFIELD rtdi005 name="construct.c.rtdi005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi006
            #add-point:BEFORE FIELD rtdi006 name="construct.b.rtdi006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi006
            
            #add-point:AFTER FIELD rtdi006 name="construct.a.rtdi006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdi006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi006
            #add-point:ON ACTION controlp INFIELD rtdi006 name="construct.c.rtdi006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi007
            #add-point:BEFORE FIELD rtdi007 name="construct.b.rtdi007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi007
            
            #add-point:AFTER FIELD rtdi007 name="construct.a.rtdi007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdi007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi007
            #add-point:ON ACTION controlp INFIELD rtdi007 name="construct.c.rtdi007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi008
            #add-point:BEFORE FIELD rtdi008 name="construct.b.rtdi008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi008
            
            #add-point:AFTER FIELD rtdi008 name="construct.a.rtdi008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdi008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi008
            #add-point:ON ACTION controlp INFIELD rtdi008 name="construct.c.rtdi008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi009
            #add-point:BEFORE FIELD rtdi009 name="construct.b.rtdi009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi009
            
            #add-point:AFTER FIELD rtdi009 name="construct.a.rtdi009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdi009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi009
            #add-point:ON ACTION controlp INFIELD rtdi009 name="construct.c.rtdi009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi010
            #add-point:BEFORE FIELD rtdi010 name="construct.b.rtdi010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi010
            
            #add-point:AFTER FIELD rtdi010 name="construct.a.rtdi010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdi010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi010
            #add-point:ON ACTION controlp INFIELD rtdi010 name="construct.c.rtdi010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdiunit
            #add-point:BEFORE FIELD rtdiunit name="construct.b.rtdiunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdiunit
            
            #add-point:AFTER FIELD rtdiunit name="construct.a.rtdiunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdiunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdiunit
            #add-point:ON ACTION controlp INFIELD rtdiunit name="construct.c.rtdiunit"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtdiownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdiownid
            #add-point:ON ACTION controlp INFIELD rtdiownid name="construct.c.rtdiownid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdiownid  #顯示到畫面上
            NEXT FIELD rtdiownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdiownid
            #add-point:BEFORE FIELD rtdiownid name="construct.b.rtdiownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdiownid
            
            #add-point:AFTER FIELD rtdiownid name="construct.a.rtdiownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdicrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdicrtid
            #add-point:ON ACTION controlp INFIELD rtdicrtid name="construct.c.rtdicrtid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdicrtid  #顯示到畫面上
            NEXT FIELD rtdicrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdicrtid
            #add-point:BEFORE FIELD rtdicrtid name="construct.b.rtdicrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdicrtid
            
            #add-point:AFTER FIELD rtdicrtid name="construct.a.rtdicrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdiowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdiowndp
            #add-point:ON ACTION controlp INFIELD rtdiowndp name="construct.c.rtdiowndp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdiowndp  #顯示到畫面上
            NEXT FIELD rtdiowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdiowndp
            #add-point:BEFORE FIELD rtdiowndp name="construct.b.rtdiowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdiowndp
            
            #add-point:AFTER FIELD rtdiowndp name="construct.a.rtdiowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdicrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdicrtdp
            #add-point:ON ACTION controlp INFIELD rtdicrtdp name="construct.c.rtdicrtdp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdicrtdp  #顯示到畫面上
            NEXT FIELD rtdicrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdicrtdp
            #add-point:BEFORE FIELD rtdicrtdp name="construct.b.rtdicrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdicrtdp
            
            #add-point:AFTER FIELD rtdicrtdp name="construct.a.rtdicrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdicrtdt
            #add-point:BEFORE FIELD rtdicrtdt name="construct.b.rtdicrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtdimodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdimodid
            #add-point:ON ACTION controlp INFIELD rtdimodid name="construct.c.rtdimodid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdimodid  #顯示到畫面上
            NEXT FIELD rtdimodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdimodid
            #add-point:BEFORE FIELD rtdimodid name="construct.b.rtdimodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdimodid
            
            #add-point:AFTER FIELD rtdimodid name="construct.a.rtdimodid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdicnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdicnfid
            #add-point:ON ACTION controlp INFIELD rtdicnfid name="construct.c.rtdicnfid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdicnfid  #顯示到畫面上
            NEXT FIELD rtdicnfid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdicnfid
            #add-point:BEFORE FIELD rtdicnfid name="construct.b.rtdicnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdicnfid
            
            #add-point:AFTER FIELD rtdicnfid name="construct.a.rtdicnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdimoddt
            #add-point:BEFORE FIELD rtdimoddt name="construct.b.rtdimoddt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdicnfdt
            #add-point:BEFORE FIELD rtdicnfdt name="construct.b.rtdicnfdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON rtdjseq,rtdj001,rtdjsite,rtdjunit
           FROM s_detail1[1].rtdjseq,s_detail1[1].rtdj001,s_detail1[1].rtdjsite,s_detail1[1].rtdjunit 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdjseq
            #add-point:BEFORE FIELD rtdjseq name="construct.b.page1.rtdjseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdjseq
            
            #add-point:AFTER FIELD rtdjseq name="construct.a.page1.rtdjseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtdjseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdjseq
            #add-point:ON ACTION controlp INFIELD rtdjseq name="construct.c.page1.rtdjseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.rtdj001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdj001
            #add-point:ON ACTION controlp INFIELD rtdj001 name="construct.c.page1.rtdj001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            #161024-00025#11   2016/10/31  by 08742 -S
            #LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdj001',g_site,'c')
            #CALL q_ooef001_24()                           #呼叫開窗
            IF s_aooi500_setpoint(g_prog,'rtdj001') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdj001',g_site,'c')
               CALL q_ooef001_24()                   
            ELSE
               CALL q_ooef001()
            END IF
            #161024-00025#11   2016/10/31  by 08742 -E
            
            DISPLAY g_qryparam.return1 TO rtdj001  #顯示到畫面上
            NEXT FIELD rtdj001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdj001
            #add-point:BEFORE FIELD rtdj001 name="construct.b.page1.rtdj001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdj001
            
            #add-point:AFTER FIELD rtdj001 name="construct.a.page1.rtdj001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdjsite
            #add-point:BEFORE FIELD rtdjsite name="construct.b.page1.rtdjsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdjsite
            
            #add-point:AFTER FIELD rtdjsite name="construct.a.page1.rtdjsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtdjsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdjsite
            #add-point:ON ACTION controlp INFIELD rtdjsite name="construct.c.page1.rtdjsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdjunit
            #add-point:BEFORE FIELD rtdjunit name="construct.b.page1.rtdjunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdjunit
            
            #add-point:AFTER FIELD rtdjunit name="construct.a.page1.rtdjunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtdjunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdjunit
            #add-point:ON ACTION controlp INFIELD rtdjunit name="construct.c.page1.rtdjunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON rtdkseq,rtdksite,rtdk002,rtdk001,rtdk003,rtdk004,rtdk005,rtdk006,rtdk007, 
          rtdkunit
           FROM s_detail2[1].rtdkseq,s_detail2[1].rtdksite,s_detail2[1].rtdk002,s_detail2[1].rtdk001, 
               s_detail2[1].rtdk003,s_detail2[1].rtdk004,s_detail2[1].rtdk005,s_detail2[1].rtdk006,s_detail2[1].rtdk007, 
               s_detail2[1].rtdkunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdkseq
            #add-point:BEFORE FIELD rtdkseq name="construct.b.page2.rtdkseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdkseq
            
            #add-point:AFTER FIELD rtdkseq name="construct.a.page2.rtdkseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtdkseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdkseq
            #add-point:ON ACTION controlp INFIELD rtdkseq name="construct.c.page2.rtdkseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdksite
            #add-point:BEFORE FIELD rtdksite name="construct.b.page2.rtdksite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdksite
            
            #add-point:AFTER FIELD rtdksite name="construct.a.page2.rtdksite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtdksite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdksite
            #add-point:ON ACTION controlp INFIELD rtdksite name="construct.c.page2.rtdksite"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdksite',g_site,'c')
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdksite  #顯示到畫面上
            NEXT FIELD rtdksite                     #返回原欄位
            #END add-point
 
 
         #Ctrlp:construct.c.page2.rtdk002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdk002
            #add-point:ON ACTION controlp INFIELD rtdk002 name="construct.c.page2.rtdk002"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_8()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdk002  #顯示到畫面上
            NEXT FIELD rtdk002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdk002
            #add-point:BEFORE FIELD rtdk002 name="construct.b.page2.rtdk002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdk002
            
            #add-point:AFTER FIELD rtdk002 name="construct.a.page2.rtdk002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtdk001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdk001
            #add-point:ON ACTION controlp INFIELD rtdk001 name="construct.c.page2.rtdk001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtdx001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdk001  #顯示到畫面上
            NEXT FIELD rtdk001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdk001
            #add-point:BEFORE FIELD rtdk001 name="construct.b.page2.rtdk001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdk001
            
            #add-point:AFTER FIELD rtdk001 name="construct.a.page2.rtdk001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdk003
            #add-point:BEFORE FIELD rtdk003 name="construct.b.page2.rtdk003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdk003
            
            #add-point:AFTER FIELD rtdk003 name="construct.a.page2.rtdk003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtdk003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdk003
            #add-point:ON ACTION controlp INFIELD rtdk003 name="construct.c.page2.rtdk003"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.rtdk004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdk004
            #add-point:ON ACTION controlp INFIELD rtdk004 name="construct.c.page2.rtdk004"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdk004  #顯示到畫面上
            NEXT FIELD rtdk004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdk004
            #add-point:BEFORE FIELD rtdk004 name="construct.b.page2.rtdk004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdk004
            
            #add-point:AFTER FIELD rtdk004 name="construct.a.page2.rtdk004"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdk005
            #add-point:BEFORE FIELD rtdk005 name="construct.b.page2.rtdk005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdk005
            
            #add-point:AFTER FIELD rtdk005 name="construct.a.page2.rtdk005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtdk005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdk005
            #add-point:ON ACTION controlp INFIELD rtdk005 name="construct.c.page2.rtdk005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdk006
            #add-point:BEFORE FIELD rtdk006 name="construct.b.page2.rtdk006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdk006
            
            #add-point:AFTER FIELD rtdk006 name="construct.a.page2.rtdk006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtdk006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdk006
            #add-point:ON ACTION controlp INFIELD rtdk006 name="construct.c.page2.rtdk006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdk007
            #add-point:BEFORE FIELD rtdk007 name="construct.b.page2.rtdk007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdk007
            
            #add-point:AFTER FIELD rtdk007 name="construct.a.page2.rtdk007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtdk007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdk007
            #add-point:ON ACTION controlp INFIELD rtdk007 name="construct.c.page2.rtdk007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdkunit
            #add-point:BEFORE FIELD rtdkunit name="construct.b.page2.rtdkunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdkunit
            
            #add-point:AFTER FIELD rtdkunit name="construct.a.page2.rtdkunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rtdkunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdkunit
            #add-point:ON ACTION controlp INFIELD rtdkunit name="construct.c.page2.rtdkunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "rtdi_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtdj_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtdk_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="artt460.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION artt460_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON rtdisite,rtdidocno,rtdidocdt,rtdi001,rtdi002,rtdi003,rtdi004,rtdi005, 
          rtdi006,rtdi007,rtdi008,rtdi009,rtdi010
                          FROM s_browse[1].b_rtdisite,s_browse[1].b_rtdidocno,s_browse[1].b_rtdidocdt, 
                              s_browse[1].b_rtdi001,s_browse[1].b_rtdi002,s_browse[1].b_rtdi003,s_browse[1].b_rtdi004, 
                              s_browse[1].b_rtdi005,s_browse[1].b_rtdi006,s_browse[1].b_rtdi007,s_browse[1].b_rtdi008, 
                              s_browse[1].b_rtdi009,s_browse[1].b_rtdi010
 
         BEFORE CONSTRUCT
               DISPLAY artt460_filter_parser('rtdisite') TO s_browse[1].b_rtdisite
            DISPLAY artt460_filter_parser('rtdidocno') TO s_browse[1].b_rtdidocno
            DISPLAY artt460_filter_parser('rtdidocdt') TO s_browse[1].b_rtdidocdt
            DISPLAY artt460_filter_parser('rtdi001') TO s_browse[1].b_rtdi001
            DISPLAY artt460_filter_parser('rtdi002') TO s_browse[1].b_rtdi002
            DISPLAY artt460_filter_parser('rtdi003') TO s_browse[1].b_rtdi003
            DISPLAY artt460_filter_parser('rtdi004') TO s_browse[1].b_rtdi004
            DISPLAY artt460_filter_parser('rtdi005') TO s_browse[1].b_rtdi005
            DISPLAY artt460_filter_parser('rtdi006') TO s_browse[1].b_rtdi006
            DISPLAY artt460_filter_parser('rtdi007') TO s_browse[1].b_rtdi007
            DISPLAY artt460_filter_parser('rtdi008') TO s_browse[1].b_rtdi008
            DISPLAY artt460_filter_parser('rtdi009') TO s_browse[1].b_rtdi009
            DISPLAY artt460_filter_parser('rtdi010') TO s_browse[1].b_rtdi010
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL artt460_filter_show('rtdisite')
   CALL artt460_filter_show('rtdidocno')
   CALL artt460_filter_show('rtdidocdt')
   CALL artt460_filter_show('rtdi001')
   CALL artt460_filter_show('rtdi002')
   CALL artt460_filter_show('rtdi003')
   CALL artt460_filter_show('rtdi004')
   CALL artt460_filter_show('rtdi005')
   CALL artt460_filter_show('rtdi006')
   CALL artt460_filter_show('rtdi007')
   CALL artt460_filter_show('rtdi008')
   CALL artt460_filter_show('rtdi009')
   CALL artt460_filter_show('rtdi010')
 
END FUNCTION
 
{</section>}
 
{<section id="artt460.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION artt460_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="artt460.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION artt460_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = artt460_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="artt460.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION artt460_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_rtdj_d.clear()
   CALL g_rtdj2_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL artt460_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL artt460_browser_fill("")
      CALL artt460_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL artt460_filter_show('rtdisite')
   CALL artt460_filter_show('rtdidocno')
   CALL artt460_filter_show('rtdidocdt')
   CALL artt460_filter_show('rtdi001')
   CALL artt460_filter_show('rtdi002')
   CALL artt460_filter_show('rtdi003')
   CALL artt460_filter_show('rtdi004')
   CALL artt460_filter_show('rtdi005')
   CALL artt460_filter_show('rtdi006')
   CALL artt460_filter_show('rtdi007')
   CALL artt460_filter_show('rtdi008')
   CALL artt460_filter_show('rtdi009')
   CALL artt460_filter_show('rtdi010')
   CALL artt460_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL artt460_fetch("F") 
      #顯示單身筆數
      CALL artt460_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="artt460.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION artt460_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_rtdi_m.rtdidocno = g_browser[g_current_idx].b_rtdidocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE artt460_master_referesh USING g_rtdi_m.rtdidocno INTO g_rtdi_m.rtdisite,g_rtdi_m.rtdidocdt, 
       g_rtdi_m.rtdidocno,g_rtdi_m.rtdi001,g_rtdi_m.rtdi002,g_rtdi_m.rtdi003,g_rtdi_m.rtdi004,g_rtdi_m.rtdistus, 
       g_rtdi_m.rtdi005,g_rtdi_m.rtdi006,g_rtdi_m.rtdi007,g_rtdi_m.rtdi008,g_rtdi_m.rtdi009,g_rtdi_m.rtdi010, 
       g_rtdi_m.rtdiunit,g_rtdi_m.rtdiownid,g_rtdi_m.rtdicrtid,g_rtdi_m.rtdiowndp,g_rtdi_m.rtdicrtdp, 
       g_rtdi_m.rtdicrtdt,g_rtdi_m.rtdimodid,g_rtdi_m.rtdicnfid,g_rtdi_m.rtdimoddt,g_rtdi_m.rtdicnfdt, 
       g_rtdi_m.rtdisite_desc,g_rtdi_m.rtdi001_desc,g_rtdi_m.rtdi002_desc,g_rtdi_m.rtdi003_desc,g_rtdi_m.rtdi004_desc, 
       g_rtdi_m.rtdiownid_desc,g_rtdi_m.rtdicrtid_desc,g_rtdi_m.rtdiowndp_desc,g_rtdi_m.rtdicrtdp_desc, 
       g_rtdi_m.rtdimodid_desc,g_rtdi_m.rtdicnfid_desc
   
   #遮罩相關處理
   LET g_rtdi_m_mask_o.* =  g_rtdi_m.*
   CALL artt460_rtdi_t_mask()
   LET g_rtdi_m_mask_n.* =  g_rtdi_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt460_set_act_visible()   
   CALL artt460_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_rtdi_m_t.* = g_rtdi_m.*
   LET g_rtdi_m_o.* = g_rtdi_m.*
   
   LET g_data_owner = g_rtdi_m.rtdiownid      
   LET g_data_dept  = g_rtdi_m.rtdiowndp
   
   #重新顯示   
   CALL artt460_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="artt460.insert" >}
#+ 資料新增
PRIVATE FUNCTION artt460_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   DEFINE l_success LIKE type_t.num5
   DEFINE l_insert      LIKE type_t.num5 
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_rtdj_d.clear()   
   CALL g_rtdj2_d.clear()  
 
 
   INITIALIZE g_rtdi_m.* TO NULL             #DEFAULT 設定
   
   LET g_rtdidocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rtdi_m.rtdiownid = g_user
      LET g_rtdi_m.rtdiowndp = g_dept
      LET g_rtdi_m.rtdicrtid = g_user
      LET g_rtdi_m.rtdicrtdp = g_dept 
      LET g_rtdi_m.rtdicrtdt = cl_get_current()
      LET g_rtdi_m.rtdimodid = g_user
      LET g_rtdi_m.rtdimoddt = cl_get_current()
      LET g_rtdi_m.rtdistus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值 name="insert.default"
      CALL s_aooi500_default(g_prog,'rtdisite',g_rtdi_m.rtdisite)
         RETURNING l_insert,g_rtdi_m.rtdisite
      IF l_insert = FALSE THEN
         RETURN
      END IF
      LET g_site_flag = FALSE
      CALL artt460_rtdisite_ref()
      CALL artt460_get_ooef(g_site)
      LET g_rtdi_m.rtdidocdt = g_today
     
      LET g_rtdi_m.rtdi003 = g_user
      CALL artt460_rtdi003_ref()
      LET g_rtdi_m.rtdi004 = g_dept
      CALL artt460_rtdi004_ref()
      CALL s_arti200_get_def_doc_type(g_site,g_prog,'1') RETURNING l_success,g_rtdi_m.rtdidocno
      LET g_rtdi_m.rtdi007 = 'N'
      LET g_rtdi_m.rtdi008 = 'N'
      
      CALL s_life_cycle_default(g_prog,'1') RETURNING g_rtdi_m.rtdi006
      CALL s_life_cycle_default(g_prog,'2') RETURNING g_rtdi_m.rtdi005
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_rtdi_m_t.* = g_rtdi_m.*
      LET g_rtdi_m_o.* = g_rtdi_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtdi_m.rtdistus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL artt460_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_rtdi_m.* TO NULL
         INITIALIZE g_rtdj_d TO NULL
         INITIALIZE g_rtdj2_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL artt460_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_rtdj_d.clear()
      #CALL g_rtdj2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt460_set_act_visible()   
   CALL artt460_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtdidocno_t = g_rtdi_m.rtdidocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtdient = " ||g_enterprise|| " AND",
                      " rtdidocno = '", g_rtdi_m.rtdidocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artt460_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE artt460_cl
   
   CALL artt460_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE artt460_master_referesh USING g_rtdi_m.rtdidocno INTO g_rtdi_m.rtdisite,g_rtdi_m.rtdidocdt, 
       g_rtdi_m.rtdidocno,g_rtdi_m.rtdi001,g_rtdi_m.rtdi002,g_rtdi_m.rtdi003,g_rtdi_m.rtdi004,g_rtdi_m.rtdistus, 
       g_rtdi_m.rtdi005,g_rtdi_m.rtdi006,g_rtdi_m.rtdi007,g_rtdi_m.rtdi008,g_rtdi_m.rtdi009,g_rtdi_m.rtdi010, 
       g_rtdi_m.rtdiunit,g_rtdi_m.rtdiownid,g_rtdi_m.rtdicrtid,g_rtdi_m.rtdiowndp,g_rtdi_m.rtdicrtdp, 
       g_rtdi_m.rtdicrtdt,g_rtdi_m.rtdimodid,g_rtdi_m.rtdicnfid,g_rtdi_m.rtdimoddt,g_rtdi_m.rtdicnfdt, 
       g_rtdi_m.rtdisite_desc,g_rtdi_m.rtdi001_desc,g_rtdi_m.rtdi002_desc,g_rtdi_m.rtdi003_desc,g_rtdi_m.rtdi004_desc, 
       g_rtdi_m.rtdiownid_desc,g_rtdi_m.rtdicrtid_desc,g_rtdi_m.rtdiowndp_desc,g_rtdi_m.rtdicrtdp_desc, 
       g_rtdi_m.rtdimodid_desc,g_rtdi_m.rtdicnfid_desc
   
   
   #遮罩相關處理
   LET g_rtdi_m_mask_o.* =  g_rtdi_m.*
   CALL artt460_rtdi_t_mask()
   LET g_rtdi_m_mask_n.* =  g_rtdi_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtdi_m.rtdisite,g_rtdi_m.rtdisite_desc,g_rtdi_m.rtdidocdt,g_rtdi_m.rtdidocno,g_rtdi_m.rtdi001, 
       g_rtdi_m.rtdi001_desc,g_rtdi_m.rtdi002,g_rtdi_m.rtdi002_desc,g_rtdi_m.rtdi003,g_rtdi_m.rtdi003_desc, 
       g_rtdi_m.rtdi004,g_rtdi_m.rtdi004_desc,g_rtdi_m.rtdistus,g_rtdi_m.rtdi005,g_rtdi_m.rtdi006,g_rtdi_m.rtdi007, 
       g_rtdi_m.rtdi008,g_rtdi_m.rtdi009,g_rtdi_m.rtdi010,g_rtdi_m.rtdiunit,g_rtdi_m.rtdiownid,g_rtdi_m.rtdiownid_desc, 
       g_rtdi_m.rtdicrtid,g_rtdi_m.rtdicrtid_desc,g_rtdi_m.rtdiowndp,g_rtdi_m.rtdiowndp_desc,g_rtdi_m.rtdicrtdp, 
       g_rtdi_m.rtdicrtdp_desc,g_rtdi_m.rtdicrtdt,g_rtdi_m.rtdimodid,g_rtdi_m.rtdimodid_desc,g_rtdi_m.rtdicnfid, 
       g_rtdi_m.rtdicnfid_desc,g_rtdi_m.rtdimoddt,g_rtdi_m.rtdicnfdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_rtdi_m.rtdiownid      
   LET g_data_dept  = g_rtdi_m.rtdiowndp
   
   #功能已完成,通報訊息中心
   CALL artt460_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="artt460.modify" >}
#+ 資料修改
PRIVATE FUNCTION artt460_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_rtdi_m_t.* = g_rtdi_m.*
   LET g_rtdi_m_o.* = g_rtdi_m.*
   
   IF g_rtdi_m.rtdidocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_rtdidocno_t = g_rtdi_m.rtdidocno
 
   CALL s_transaction_begin()
   
   OPEN artt460_cl USING g_enterprise,g_rtdi_m.rtdidocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt460_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE artt460_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artt460_master_referesh USING g_rtdi_m.rtdidocno INTO g_rtdi_m.rtdisite,g_rtdi_m.rtdidocdt, 
       g_rtdi_m.rtdidocno,g_rtdi_m.rtdi001,g_rtdi_m.rtdi002,g_rtdi_m.rtdi003,g_rtdi_m.rtdi004,g_rtdi_m.rtdistus, 
       g_rtdi_m.rtdi005,g_rtdi_m.rtdi006,g_rtdi_m.rtdi007,g_rtdi_m.rtdi008,g_rtdi_m.rtdi009,g_rtdi_m.rtdi010, 
       g_rtdi_m.rtdiunit,g_rtdi_m.rtdiownid,g_rtdi_m.rtdicrtid,g_rtdi_m.rtdiowndp,g_rtdi_m.rtdicrtdp, 
       g_rtdi_m.rtdicrtdt,g_rtdi_m.rtdimodid,g_rtdi_m.rtdicnfid,g_rtdi_m.rtdimoddt,g_rtdi_m.rtdicnfdt, 
       g_rtdi_m.rtdisite_desc,g_rtdi_m.rtdi001_desc,g_rtdi_m.rtdi002_desc,g_rtdi_m.rtdi003_desc,g_rtdi_m.rtdi004_desc, 
       g_rtdi_m.rtdiownid_desc,g_rtdi_m.rtdicrtid_desc,g_rtdi_m.rtdiowndp_desc,g_rtdi_m.rtdicrtdp_desc, 
       g_rtdi_m.rtdimodid_desc,g_rtdi_m.rtdicnfid_desc
   
   #檢查是否允許此動作
   IF NOT artt460_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtdi_m_mask_o.* =  g_rtdi_m.*
   CALL artt460_rtdi_t_mask()
   LET g_rtdi_m_mask_n.* =  g_rtdi_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
 
   
   CALL artt460_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
 
    
   WHILE TRUE
      LET g_rtdidocno_t = g_rtdi_m.rtdidocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_rtdi_m.rtdimodid = g_user 
LET g_rtdi_m.rtdimoddt = cl_get_current()
LET g_rtdi_m.rtdimodid_desc = cl_get_username(g_rtdi_m.rtdimodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_rtdi_m.rtdistus MATCHES "[DR]" THEN
         LET g_rtdi_m.rtdistus = "N"
      END IF
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL artt460_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE rtdi_t SET (rtdimodid,rtdimoddt) = (g_rtdi_m.rtdimodid,g_rtdi_m.rtdimoddt)
          WHERE rtdient = g_enterprise AND rtdidocno = g_rtdidocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_rtdi_m.* = g_rtdi_m_t.*
            CALL artt460_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_rtdi_m.rtdidocno != g_rtdi_m_t.rtdidocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE rtdj_t SET rtdjdocno = g_rtdi_m.rtdidocno
 
          WHERE rtdjent = g_enterprise AND rtdjdocno = g_rtdi_m_t.rtdidocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtdj_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtdj_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         
         #end add-point
         
         UPDATE rtdk_t
            SET rtdkdocno = g_rtdi_m.rtdidocno
 
          WHERE rtdkent = g_enterprise AND
                rtdkdocno = g_rtdidocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtdk_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtdk_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt460_set_act_visible()   
   CALL artt460_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " rtdient = " ||g_enterprise|| " AND",
                      " rtdidocno = '", g_rtdi_m.rtdidocno, "' "
 
   #填到對應位置
   CALL artt460_browser_fill("")
 
   CLOSE artt460_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artt460_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="artt460.input" >}
#+ 資料輸入
PRIVATE FUNCTION artt460_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_success              LIKE type_t.num5
   DEFINE  l_errno               LIKE type_t.chr10
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtdi_m.rtdisite,g_rtdi_m.rtdisite_desc,g_rtdi_m.rtdidocdt,g_rtdi_m.rtdidocno,g_rtdi_m.rtdi001, 
       g_rtdi_m.rtdi001_desc,g_rtdi_m.rtdi002,g_rtdi_m.rtdi002_desc,g_rtdi_m.rtdi003,g_rtdi_m.rtdi003_desc, 
       g_rtdi_m.rtdi004,g_rtdi_m.rtdi004_desc,g_rtdi_m.rtdistus,g_rtdi_m.rtdi005,g_rtdi_m.rtdi006,g_rtdi_m.rtdi007, 
       g_rtdi_m.rtdi008,g_rtdi_m.rtdi009,g_rtdi_m.rtdi010,g_rtdi_m.rtdiunit,g_rtdi_m.rtdiownid,g_rtdi_m.rtdiownid_desc, 
       g_rtdi_m.rtdicrtid,g_rtdi_m.rtdicrtid_desc,g_rtdi_m.rtdiowndp,g_rtdi_m.rtdiowndp_desc,g_rtdi_m.rtdicrtdp, 
       g_rtdi_m.rtdicrtdp_desc,g_rtdi_m.rtdicrtdt,g_rtdi_m.rtdimodid,g_rtdi_m.rtdimodid_desc,g_rtdi_m.rtdicnfid, 
       g_rtdi_m.rtdicnfid_desc,g_rtdi_m.rtdimoddt,g_rtdi_m.rtdicnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT rtdjseq,rtdj001,rtdjsite,rtdjunit FROM rtdj_t WHERE rtdjent=? AND rtdjdocno=?  
       AND rtdjseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt460_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   
   #end add-point    
   LET g_forupd_sql = "SELECT rtdkseq,rtdksite,rtdk002,rtdk001,rtdk003,rtdk004,rtdk005,rtdk006,rtdk007, 
       rtdkunit FROM rtdk_t WHERE rtdkent=? AND rtdkdocno=? AND rtdkseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt460_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL artt460_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL artt460_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_rtdi_m.rtdisite,g_rtdi_m.rtdidocdt,g_rtdi_m.rtdidocno,g_rtdi_m.rtdi001,g_rtdi_m.rtdi002, 
       g_rtdi_m.rtdi003,g_rtdi_m.rtdi004,g_rtdi_m.rtdistus,g_rtdi_m.rtdi005,g_rtdi_m.rtdi006,g_rtdi_m.rtdi007, 
       g_rtdi_m.rtdi008,g_rtdi_m.rtdi009,g_rtdi_m.rtdi010,g_rtdi_m.rtdiunit
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="artt460.input.head" >}
      #單頭段
      INPUT BY NAME g_rtdi_m.rtdisite,g_rtdi_m.rtdidocdt,g_rtdi_m.rtdidocno,g_rtdi_m.rtdi001,g_rtdi_m.rtdi002, 
          g_rtdi_m.rtdi003,g_rtdi_m.rtdi004,g_rtdi_m.rtdistus,g_rtdi_m.rtdi005,g_rtdi_m.rtdi006,g_rtdi_m.rtdi007, 
          g_rtdi_m.rtdi008,g_rtdi_m.rtdi009,g_rtdi_m.rtdi010,g_rtdi_m.rtdiunit 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN artt460_cl USING g_enterprise,g_rtdi_m.rtdidocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt460_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE artt460_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL artt460_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL artt460_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdisite
            
            #add-point:AFTER FIELD rtdisite name="input.a.rtdisite"
             IF NOT cl_null(g_rtdi_m.rtdisite) THEN
               CALL s_aooi500_chk(g_prog,'rtdisite',g_rtdi_m.rtdisite,g_rtdi_m.rtdisite) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = g_rtdi_m.rtdisite
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()

                  LET g_rtdi_m.rtdisite = g_rtdi_m_t.rtdisite
                  CALL artt460_rtdisite_ref()
                  NEXT FIELD CURRENT
               END IF

            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ''
               LET g_errparam.code   = 'axc-00120'
               LET g_errparam.popup  = TRUE
               CALL cl_err()
               LET g_rtdi_m.rtdisite = g_rtdi_m_t.rtdisite
               CALL artt460_rtdisite_ref()
               NEXT FIELD CURRENT

            END IF
            
            LET g_site_flag = TRUE           
            CALL artt460_rtdisite_ref()
            CALL artt460_set_entry(p_cmd)  
            CALL artt460_set_no_entry(p_cmd) 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdisite
            #add-point:BEFORE FIELD rtdisite name="input.b.rtdisite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdisite
            #add-point:ON CHANGE rtdisite name="input.g.rtdisite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdidocdt
            #add-point:BEFORE FIELD rtdidocdt name="input.b.rtdidocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdidocdt
            
            #add-point:AFTER FIELD rtdidocdt name="input.a.rtdidocdt"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdidocdt
            #add-point:ON CHANGE rtdidocdt name="input.g.rtdidocdt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdidocno
            #add-point:BEFORE FIELD rtdidocno name="input.b.rtdidocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdidocno
            
            #add-point:AFTER FIELD rtdidocno name="input.a.rtdidocno"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF NOT cl_null(g_rtdi_m.rtdidocno) AND p_cmd = 'a' THEN
               IF NOT s_aooi200_chk_slip(g_site,'',g_rtdi_m.rtdidocno,g_prog) THEN
                  LET g_rtdi_m.rtdidocno = g_rtdi_m_t.rtdidocno
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF  NOT cl_null(g_rtdi_m.rtdidocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_rtdi_m.rtdidocno != g_rtdidocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtdi_t WHERE "||"rtdient = '" ||g_enterprise|| "' AND "||"rtdidocno = '"||g_rtdi_m.rtdidocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdidocno
            #add-point:ON CHANGE rtdidocno name="input.g.rtdidocno"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi001
            
            #add-point:AFTER FIELD rtdi001 name="input.a.rtdi001"
            LET g_rtdi_m.rtdi001_desc =''
            DISPLAY BY NAME g_rtdi_m.rtdi001_desc
            IF NOT cl_null(g_rtdi_m.rtdi001) THEN
               IF NOT artt460_rtdi001_chk() THEN
                  LET g_rtdi_m.rtdi001 = g_rtdi_m_t.rtdi001
                  CALL artt460_rtdi001_ref()
                  NEXT FIELD rtdi001
               END IF 
               IF p_cmd = 'u' THEN
                  CALL artt460_rtdk_ins()
                  CALL artt460_b_fill()
                  CALL artt460_rtdk_reflesh()
               END IF               
            END IF
            CALL artt460_rtdi001_ref()

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi001
            #add-point:BEFORE FIELD rtdi001 name="input.b.rtdi001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdi001
            #add-point:ON CHANGE rtdi001 name="input.g.rtdi001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi002
            
            #add-point:AFTER FIELD rtdi002 name="input.a.rtdi002"
            LET g_rtdi_m.rtdi002_desc = ''
            DISPLAY BY NAME g_rtdi_m.rtdi002_desc 
            IF NOT cl_null(g_rtdi_m.rtdi002) THEN
              LET g_errshow = '1'
              INITIALIZE g_chkparam.* TO NULL
              LET g_chkparam.arg1 = g_rtdi_m.rtdi002
              
              #呼叫檢查存在並帶值的library
              IF NOT cl_chk_exist("v_oocq002_2117") THEN         
                 LET g_rtdi_m.rtdi002= g_rtdi_m.rtdi002
                 CALL artt460_rtdi002_ref()
                 NEXT FIELD rtdi002
              END IF
            END IF
            CALL artt460_rtdi002_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi002
            #add-point:BEFORE FIELD rtdi002 name="input.b.rtdi002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdi002
            #add-point:ON CHANGE rtdi002 name="input.g.rtdi002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi003
            
            #add-point:AFTER FIELD rtdi003 name="input.a.rtdi003"
            LET g_rtdi_m.rtdi003_desc= ''
            DISPLAY BY NAME g_rtdi_m.rtdi003_desc
            IF NOT cl_null(g_rtdi_m.rtdi003) THEN 
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = TRUE #是否開窗 #160318-00025#33  add
               LET g_errshow = '1'
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_rtdi_m.rtdi003               
               LET g_chkparam.err_str[1] = "aim-00070:sub-01302|aooi130|",cl_get_progname("aooi130",g_lang,"2"),"|:EXEPROGaooi130"  #160318-00025#33  add
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_ooag001") THEN
                  LET g_rtdi_m.rtdi003 =g_rtdi_m_t.rtdi003
                  CALL artt460_rtdi003_ref()
                  NEXT FIELD rtdi003
               END IF
            END IF 
            CALL artt460_rtdi003_ref()  


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi003
            #add-point:BEFORE FIELD rtdi003 name="input.b.rtdi003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdi003
            #add-point:ON CHANGE rtdi003 name="input.g.rtdi003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi004
            
            #add-point:AFTER FIELD rtdi004 name="input.a.rtdi004"
            IF NOT cl_null(g_rtdi_m.rtdi004) THEN 
#應用 a19 樣板自動產生(Version:2)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
         
               LET g_errshow = '1'
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = TRUE #是否開窗 #160318-00025#33  add
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_rtdi_m.rtdi004
               LET g_chkparam.arg2 = g_rtdi_m.rtdidocdt
               LET g_chkparam.err_str[1] = "aoo-00029:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"  #160318-00025#33  add
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_ooeg001") THEN
                  LET g_rtdi_m.rtdi004 = g_rtdi_m_t.rtdi004
                  CALL artt460_rtdi004_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF 
            CALL artt460_rtdi004_ref()


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi004
            #add-point:BEFORE FIELD rtdi004 name="input.b.rtdi004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdi004
            #add-point:ON CHANGE rtdi004 name="input.g.rtdi004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdistus
            #add-point:BEFORE FIELD rtdistus name="input.b.rtdistus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdistus
            
            #add-point:AFTER FIELD rtdistus name="input.a.rtdistus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdistus
            #add-point:ON CHANGE rtdistus name="input.g.rtdistus"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi005
            #add-point:BEFORE FIELD rtdi005 name="input.b.rtdi005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi005
            
            #add-point:AFTER FIELD rtdi005 name="input.a.rtdi005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdi005
            #add-point:ON CHANGE rtdi005 name="input.g.rtdi005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi006
            #add-point:BEFORE FIELD rtdi006 name="input.b.rtdi006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi006
            
            #add-point:AFTER FIELD rtdi006 name="input.a.rtdi006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdi006
            #add-point:ON CHANGE rtdi006 name="input.g.rtdi006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi007
            #add-point:BEFORE FIELD rtdi007 name="input.b.rtdi007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi007
            
            #add-point:AFTER FIELD rtdi007 name="input.a.rtdi007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdi007
            #add-point:ON CHANGE rtdi007 name="input.g.rtdi007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi008
            #add-point:BEFORE FIELD rtdi008 name="input.b.rtdi008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi008
            
            #add-point:AFTER FIELD rtdi008 name="input.a.rtdi008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdi008
            #add-point:ON CHANGE rtdi008 name="input.g.rtdi008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi009
            #add-point:BEFORE FIELD rtdi009 name="input.b.rtdi009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi009
            
            #add-point:AFTER FIELD rtdi009 name="input.a.rtdi009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdi009
            #add-point:ON CHANGE rtdi009 name="input.g.rtdi009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdi010
            #add-point:BEFORE FIELD rtdi010 name="input.b.rtdi010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdi010
            
            #add-point:AFTER FIELD rtdi010 name="input.a.rtdi010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdi010
            #add-point:ON CHANGE rtdi010 name="input.g.rtdi010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdiunit
            #add-point:BEFORE FIELD rtdiunit name="input.b.rtdiunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdiunit
            
            #add-point:AFTER FIELD rtdiunit name="input.a.rtdiunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdiunit
            #add-point:ON CHANGE rtdiunit name="input.g.rtdiunit"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.rtdisite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdisite
            #add-point:ON ACTION controlp INFIELD rtdisite name="input.c.rtdisite"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtdi_m.rtdisite             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
         
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdisite',g_rtdi_m.rtdisite,'i')

            CALL q_ooef001_24()                                #呼叫開窗

            LET g_rtdi_m.rtdisite = g_qryparam.return1              

            DISPLAY g_rtdi_m.rtdisite TO rtdisite              #

            NEXT FIELD rtdisite                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.rtdidocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdidocdt
            #add-point:ON ACTION controlp INFIELD rtdidocdt name="input.c.rtdidocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtdidocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdidocno
            #add-point:ON ACTION controlp INFIELD rtdidocno name="input.c.rtdidocno"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtdi_m.rtdidocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #s
            #LET g_qryparam.arg2 = "artt460"     #160705-00042#5 160711 by sakura mark
            LET g_qryparam.arg2 = g_prog         #160705-00042#5 160711 by sakura add

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_rtdi_m.rtdidocno = g_qryparam.return1              

            DISPLAY g_rtdi_m.rtdidocno TO rtdidocno              #

            NEXT FIELD rtdidocno                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.rtdi001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi001
            #add-point:ON ACTION controlp INFIELD rtdi001 name="input.c.rtdi001"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtdi_m.rtdi001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "('1','3')"

            CALL q_pmaa001_1()                                #呼叫開窗

            LET g_rtdi_m.rtdi001 = g_qryparam.return1              

            DISPLAY g_rtdi_m.rtdi001 TO rtdi001              #
            CALL artt460_rtdi001_ref()   
            NEXT FIELD rtdi001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.rtdi002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi002
            #add-point:ON ACTION controlp INFIELD rtdi002 name="input.c.rtdi002"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtdi_m.rtdi002             #給予default值
            LET g_qryparam.default2 = "" #g_rtdi_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "2117" #s


            CALL q_oocq002()                                #呼叫開窗

            LET g_rtdi_m.rtdi002 = g_qryparam.return1              
            #LET g_rtdi_m.oocq002 = g_qryparam.return2 
            DISPLAY g_rtdi_m.rtdi002 TO rtdi002              #
            #DISPLAY g_rtdi_m.oocq002 TO oocq002 #應用分類碼
            CALL artt460_rtdi002_ref() 
            NEXT FIELD rtdi002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.rtdi003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi003
            #add-point:ON ACTION controlp INFIELD rtdi003 name="input.c.rtdi003"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtdi_m.rtdi003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #


            CALL q_ooag001()                                #呼叫開窗

            LET g_rtdi_m.rtdi003 = g_qryparam.return1              

            DISPLAY g_rtdi_m.rtdi003 TO rtdi003              #
            CALL artt460_rtdi003_ref() 
            NEXT FIELD rtdi003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.rtdi004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi004
            #add-point:ON ACTION controlp INFIELD rtdi004 name="input.c.rtdi004"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtdi_m.rtdi004             #給予default值
            LET g_qryparam.default2 = "" #g_rtdi_m.ooeg001 #部門編號
            #給予arg
            LET g_qryparam.arg1 = g_rtdi_m.rtdidocdt #s


            CALL q_ooeg001()                                #呼叫開窗

            LET g_rtdi_m.rtdi004 = g_qryparam.return1              
            #LET g_rtdi_m.ooeg001 = g_qryparam.return2 
            DISPLAY g_rtdi_m.rtdi004 TO rtdi004              #
            #DISPLAY g_rtdi_m.ooeg001 TO ooeg001 #部門編號
            CALL artt460_rtdi004_ref() 
            NEXT FIELD rtdi004                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.rtdistus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdistus
            #add-point:ON ACTION controlp INFIELD rtdistus name="input.c.rtdistus"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtdi005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi005
            #add-point:ON ACTION controlp INFIELD rtdi005 name="input.c.rtdi005"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtdi006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi006
            #add-point:ON ACTION controlp INFIELD rtdi006 name="input.c.rtdi006"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtdi007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi007
            #add-point:ON ACTION controlp INFIELD rtdi007 name="input.c.rtdi007"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtdi008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi008
            #add-point:ON ACTION controlp INFIELD rtdi008 name="input.c.rtdi008"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtdi009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi009
            #add-point:ON ACTION controlp INFIELD rtdi009 name="input.c.rtdi009"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtdi010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdi010
            #add-point:ON ACTION controlp INFIELD rtdi010 name="input.c.rtdi010"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtdiunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdiunit
            #add-point:ON ACTION controlp INFIELD rtdiunit name="input.c.rtdiunit"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_rtdi_m.rtdidocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            CALL s_aooi200_gen_docno(g_site,g_rtdi_m.rtdidocno,g_rtdi_m.rtdidocdt,g_prog) RETURNING l_success,g_rtdi_m.rtdidocno
            IF NOT l_success THEN
               NEXT FIELD rtdidocno
            END IF
            LET  g_rtdi_m.rtdiunit =  g_rtdi_m.rtdisite  
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               
               #end add-point
               
               INSERT INTO rtdi_t (rtdient,rtdisite,rtdidocdt,rtdidocno,rtdi001,rtdi002,rtdi003,rtdi004, 
                   rtdistus,rtdi005,rtdi006,rtdi007,rtdi008,rtdi009,rtdi010,rtdiunit,rtdiownid,rtdicrtid, 
                   rtdiowndp,rtdicrtdp,rtdicrtdt,rtdimodid,rtdicnfid,rtdimoddt,rtdicnfdt)
               VALUES (g_enterprise,g_rtdi_m.rtdisite,g_rtdi_m.rtdidocdt,g_rtdi_m.rtdidocno,g_rtdi_m.rtdi001, 
                   g_rtdi_m.rtdi002,g_rtdi_m.rtdi003,g_rtdi_m.rtdi004,g_rtdi_m.rtdistus,g_rtdi_m.rtdi005, 
                   g_rtdi_m.rtdi006,g_rtdi_m.rtdi007,g_rtdi_m.rtdi008,g_rtdi_m.rtdi009,g_rtdi_m.rtdi010, 
                   g_rtdi_m.rtdiunit,g_rtdi_m.rtdiownid,g_rtdi_m.rtdicrtid,g_rtdi_m.rtdiowndp,g_rtdi_m.rtdicrtdp, 
                   g_rtdi_m.rtdicrtdt,g_rtdi_m.rtdimodid,g_rtdi_m.rtdicnfid,g_rtdi_m.rtdimoddt,g_rtdi_m.rtdicnfdt)  
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_rtdi_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL artt460_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL artt460_b_fill()
                  CALL artt460_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL artt460_rtdi_t_mask_restore('restore_mask_o')
               
               UPDATE rtdi_t SET (rtdisite,rtdidocdt,rtdidocno,rtdi001,rtdi002,rtdi003,rtdi004,rtdistus, 
                   rtdi005,rtdi006,rtdi007,rtdi008,rtdi009,rtdi010,rtdiunit,rtdiownid,rtdicrtid,rtdiowndp, 
                   rtdicrtdp,rtdicrtdt,rtdimodid,rtdicnfid,rtdimoddt,rtdicnfdt) = (g_rtdi_m.rtdisite, 
                   g_rtdi_m.rtdidocdt,g_rtdi_m.rtdidocno,g_rtdi_m.rtdi001,g_rtdi_m.rtdi002,g_rtdi_m.rtdi003, 
                   g_rtdi_m.rtdi004,g_rtdi_m.rtdistus,g_rtdi_m.rtdi005,g_rtdi_m.rtdi006,g_rtdi_m.rtdi007, 
                   g_rtdi_m.rtdi008,g_rtdi_m.rtdi009,g_rtdi_m.rtdi010,g_rtdi_m.rtdiunit,g_rtdi_m.rtdiownid, 
                   g_rtdi_m.rtdicrtid,g_rtdi_m.rtdiowndp,g_rtdi_m.rtdicrtdp,g_rtdi_m.rtdicrtdt,g_rtdi_m.rtdimodid, 
                   g_rtdi_m.rtdicnfid,g_rtdi_m.rtdimoddt,g_rtdi_m.rtdicnfdt)
                WHERE rtdient = g_enterprise AND rtdidocno = g_rtdidocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "rtdi_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL artt460_rtdi_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_rtdi_m_t)
               LET g_log2 = util.JSON.stringify(g_rtdi_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_rtdidocno_t = g_rtdi_m.rtdidocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="artt460.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_rtdj_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtdj_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artt460_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_rtdj_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artt460_cl USING g_enterprise,g_rtdi_m.rtdidocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt460_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE artt460_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_rtdj_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtdj_d[l_ac].rtdjseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_rtdj_d_t.* = g_rtdj_d[l_ac].*  #BACKUP
               LET g_rtdj_d_o.* = g_rtdj_d[l_ac].*  #BACKUP
               CALL artt460_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL artt460_set_no_entry_b(l_cmd)
               IF NOT artt460_lock_b("rtdj_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artt460_bcl INTO g_rtdj_d[l_ac].rtdjseq,g_rtdj_d[l_ac].rtdj001,g_rtdj_d[l_ac].rtdjsite, 
                      g_rtdj_d[l_ac].rtdjunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_rtdj_d_t.rtdjseq,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rtdj_d_mask_o[l_ac].* =  g_rtdj_d[l_ac].*
                  CALL artt460_rtdj_t_mask()
                  LET g_rtdj_d_mask_n[l_ac].* =  g_rtdj_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL artt460_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtdj_d[l_ac].* TO NULL 
            INITIALIZE g_rtdj_d_t.* TO NULL 
            INITIALIZE g_rtdj_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            SELECT MAX(rtdjseq)+1 INTO  g_rtdj_d[l_ac].rtdjseq FROM rtdj_t
             WHERE rtdjent = g_enterprise AND rtdjdocno = g_rtdi_m.rtdidocno
            IF cl_null(g_rtdj_d[l_ac].rtdjseq) THEN
               LET g_rtdj_d[l_ac].rtdjseq = 1
            END IF            
            #end add-point
            LET g_rtdj_d_t.* = g_rtdj_d[l_ac].*     #新輸入資料
            LET g_rtdj_d_o.* = g_rtdj_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artt460_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL artt460_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtdj_d[li_reproduce_target].* = g_rtdj_d[li_reproduce].*
 
               LET g_rtdj_d[li_reproduce_target].rtdjseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM rtdj_t 
             WHERE rtdjent = g_enterprise AND rtdjdocno = g_rtdi_m.rtdidocno
 
               AND rtdjseq = g_rtdj_d[l_ac].rtdjseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtdi_m.rtdidocno
               LET gs_keys[2] = g_rtdj_d[g_detail_idx].rtdjseq
               CALL artt460_insert_b('rtdj_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_rtdj_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtdj_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artt460_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               CALL artt460_rtdk_ins()
               CALL artt460_b_fill()
               CALL artt460_rtdk_reflesh()
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtdi_m.rtdidocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_rtdj_d_t.rtdjseq
 
            
               #刪除同層單身
               IF NOT artt460_delete_b('rtdj_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt460_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT artt460_key_delete_b(gs_keys,'rtdj_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt460_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               CALL artt460_rtdk_ins()
               CALL artt460_b_fill()
               CALL artt460_rtdk_reflesh()
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE artt460_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_rtdj_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rtdj_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdjseq
            #add-point:BEFORE FIELD rtdjseq name="input.b.page1.rtdjseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdjseq
            
            #add-point:AFTER FIELD rtdjseq name="input.a.page1.rtdjseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_rtdi_m.rtdidocno IS NOT NULL AND g_rtdj_d[g_detail_idx].rtdjseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtdi_m.rtdidocno != g_rtdidocno_t OR g_rtdj_d[g_detail_idx].rtdjseq != g_rtdj_d_t.rtdjseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtdj_t WHERE "||"rtdjent = '" ||g_enterprise|| "' AND "||"rtdjdocno = '"||g_rtdi_m.rtdidocno ||"' AND "|| "rtdjseq = '"||g_rtdj_d[g_detail_idx].rtdjseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdjseq
            #add-point:ON CHANGE rtdjseq name="input.g.page1.rtdjseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdj001
            
            #add-point:AFTER FIELD rtdj001 name="input.a.page1.rtdj001"
            IF NOT cl_null(g_rtdj_d[l_ac].rtdj001) THEN
               IF NOT artt460_rtdj001_chk(l_cmd) THEN
                  LET g_rtdj_d[l_ac].rtdj001 = g_rtdj_d_t.rtdj001
                  CALL artt460_rtdj001_ref()
                  NEXT FIELD CURRENT
               END IF             
            END IF
            CALL artt460_rtdj001_ref()

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdj001
            #add-point:BEFORE FIELD rtdj001 name="input.b.page1.rtdj001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdj001
            #add-point:ON CHANGE rtdj001 name="input.g.page1.rtdj001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdjsite
            #add-point:BEFORE FIELD rtdjsite name="input.b.page1.rtdjsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdjsite
            
            #add-point:AFTER FIELD rtdjsite name="input.a.page1.rtdjsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdjsite
            #add-point:ON CHANGE rtdjsite name="input.g.page1.rtdjsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdjunit
            #add-point:BEFORE FIELD rtdjunit name="input.b.page1.rtdjunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdjunit
            
            #add-point:AFTER FIELD rtdjunit name="input.a.page1.rtdjunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdjunit
            #add-point:ON CHANGE rtdjunit name="input.g.page1.rtdjunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.rtdjseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdjseq
            #add-point:ON ACTION controlp INFIELD rtdjseq name="input.c.page1.rtdjseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtdj001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdj001
            #add-point:ON ACTION controlp INFIELD rtdj001 name="input.c.page1.rtdj001"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtdj_d[l_ac].rtdj001             #給予default值
            #161024-00025#11   2016/10/31  by 08742 -S
            #給予arg
            #LET g_qryparam.arg1 = "" #s            
            #LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdj001',g_rtdi_m.rtdisite,'i')
            #CALL q_ooef001_24()                                #呼叫開窗
            IF s_aooi500_setpoint(g_prog,'rtdj001') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdj001',g_rtdi_m.rtdisite,'i')
               CALL q_ooef001_24()                   
            ELSE
               CALL q_ooef001() 
            END IF
            #161024-00025#11   2016/10/31  by 08742 -E
            LET g_rtdj_d[l_ac].rtdj001 = g_qryparam.return1   
            DISPLAY g_rtdj_d[l_ac].rtdj001 TO rtdj001              #
            NEXT FIELD rtdj001                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page1.rtdjsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdjsite
            #add-point:ON ACTION controlp INFIELD rtdjsite name="input.c.page1.rtdjsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtdjunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdjunit
            #add-point:ON ACTION controlp INFIELD rtdjunit name="input.c.page1.rtdjunit"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_rtdj_d[l_ac].* = g_rtdj_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE artt460_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_rtdj_d[l_ac].rtdjseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_rtdj_d[l_ac].* = g_rtdj_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL artt460_rtdj_t_mask_restore('restore_mask_o')
      
               UPDATE rtdj_t SET (rtdjdocno,rtdjseq,rtdj001,rtdjsite,rtdjunit) = (g_rtdi_m.rtdidocno, 
                   g_rtdj_d[l_ac].rtdjseq,g_rtdj_d[l_ac].rtdj001,g_rtdj_d[l_ac].rtdjsite,g_rtdj_d[l_ac].rtdjunit) 
 
                WHERE rtdjent = g_enterprise AND rtdjdocno = g_rtdi_m.rtdidocno 
 
                  AND rtdjseq = g_rtdj_d_t.rtdjseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               CALL artt460_rtdk_ins()
               CALL artt460_b_fill()
               CALL artt460_rtdk_reflesh()
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_rtdj_d[l_ac].* = g_rtdj_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtdj_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_rtdj_d[l_ac].* = g_rtdj_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtdj_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtdi_m.rtdidocno
               LET gs_keys_bak[1] = g_rtdidocno_t
               LET gs_keys[2] = g_rtdj_d[g_detail_idx].rtdjseq
               LET gs_keys_bak[2] = g_rtdj_d_t.rtdjseq
               CALL artt460_update_b('rtdj_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL artt460_rtdj_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_rtdj_d[g_detail_idx].rtdjseq = g_rtdj_d_t.rtdjseq 
 
                  ) THEN
                  LET gs_keys[01] = g_rtdi_m.rtdidocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_rtdj_d_t.rtdjseq
 
                  CALL artt460_key_update_b(gs_keys,'rtdj_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtdi_m),util.JSON.stringify(g_rtdj_d_t)
               LET g_log2 = util.JSON.stringify(g_rtdi_m),util.JSON.stringify(g_rtdj_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
          
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL artt460_unlock_b("rtdj_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_rtdj_d[li_reproduce_target].* = g_rtdj_d[li_reproduce].*
 
               LET g_rtdj_d[li_reproduce_target].rtdjseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_rtdj_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_rtdj_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_rtdj2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = FALSE,
                 APPEND ROW = FALSE)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtdj2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artt460_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_rtdj2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtdj2_d[l_ac].* TO NULL 
            INITIALIZE g_rtdj2_d_t.* TO NULL 
            INITIALIZE g_rtdj2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
            
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            
            #end add-point
            LET g_rtdj2_d_t.* = g_rtdj2_d[l_ac].*     #新輸入資料
            LET g_rtdj2_d_o.* = g_rtdj2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artt460_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
            
            #end add-point
            CALL artt460_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtdj2_d[li_reproduce_target].* = g_rtdj2_d[li_reproduce].*
 
               LET g_rtdj2_d[li_reproduce_target].rtdkseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body2.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[2] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artt460_cl USING g_enterprise,g_rtdi_m.rtdidocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt460_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE artt460_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_rtdj2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtdj2_d[l_ac].rtdkseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_rtdj2_d_t.* = g_rtdj2_d[l_ac].*  #BACKUP
               LET g_rtdj2_d_o.* = g_rtdj2_d[l_ac].*  #BACKUP
               CALL artt460_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               
               #end add-point  
               CALL artt460_set_no_entry_b(l_cmd)
               IF NOT artt460_lock_b("rtdk_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artt460_bcl2 INTO g_rtdj2_d[l_ac].rtdkseq,g_rtdj2_d[l_ac].rtdksite,g_rtdj2_d[l_ac].rtdk002, 
                      g_rtdj2_d[l_ac].rtdk001,g_rtdj2_d[l_ac].rtdk003,g_rtdj2_d[l_ac].rtdk004,g_rtdj2_d[l_ac].rtdk005, 
                      g_rtdj2_d[l_ac].rtdk006,g_rtdj2_d[l_ac].rtdk007,g_rtdj2_d[l_ac].rtdkunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rtdj2_d_mask_o[l_ac].* =  g_rtdj2_d[l_ac].*
                  CALL artt460_rtdk_t_mask()
                  LET g_rtdj2_d_mask_n[l_ac].* =  g_rtdj2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL artt460_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body2.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtdi_m.rtdidocno
               LET gs_keys[gs_keys.getLength()+1] = g_rtdj2_d_t.rtdkseq
            
               #刪除同層單身
               IF NOT artt460_delete_b('rtdk_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt460_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT artt460_key_delete_b(gs_keys,'rtdk_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt460_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身2刪除中 name="input.body2.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE artt460_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body2.a_delete"
               
               #end add-point
               LET l_count = g_rtdj_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rtdj2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body2.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM rtdk_t 
             WHERE rtdkent = g_enterprise AND rtdkdocno = g_rtdi_m.rtdidocno
               AND rtdkseq = g_rtdj2_d[l_ac].rtdkseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body2.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtdi_m.rtdidocno
               LET gs_keys[2] = g_rtdj2_d[g_detail_idx].rtdkseq
               CALL artt460_insert_b('rtdk_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body2.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_rtdj_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtdk_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artt460_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_rtdj2_d[l_ac].* = g_rtdj2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE artt460_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_rtdj2_d[l_ac].* = g_rtdj2_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body2.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL artt460_rtdk_t_mask_restore('restore_mask_o')
                              
               UPDATE rtdk_t SET (rtdkdocno,rtdkseq,rtdksite,rtdk002,rtdk001,rtdk003,rtdk004,rtdk005, 
                   rtdk006,rtdk007,rtdkunit) = (g_rtdi_m.rtdidocno,g_rtdj2_d[l_ac].rtdkseq,g_rtdj2_d[l_ac].rtdksite, 
                   g_rtdj2_d[l_ac].rtdk002,g_rtdj2_d[l_ac].rtdk001,g_rtdj2_d[l_ac].rtdk003,g_rtdj2_d[l_ac].rtdk004, 
                   g_rtdj2_d[l_ac].rtdk005,g_rtdj2_d[l_ac].rtdk006,g_rtdj2_d[l_ac].rtdk007,g_rtdj2_d[l_ac].rtdkunit)  
                   #自訂欄位頁簽
                WHERE rtdkent = g_enterprise AND rtdkdocno = g_rtdi_m.rtdidocno
                  AND rtdkseq = g_rtdj2_d_t.rtdkseq #項次 
                  
               #add-point:單身page2修改中 name="input.body2.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_rtdj2_d[l_ac].* = g_rtdj2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtdk_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_rtdj2_d[l_ac].* = g_rtdj2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtdk_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtdi_m.rtdidocno
               LET gs_keys_bak[1] = g_rtdidocno_t
               LET gs_keys[2] = g_rtdj2_d[g_detail_idx].rtdkseq
               LET gs_keys_bak[2] = g_rtdj2_d_t.rtdkseq
               CALL artt460_update_b('rtdk_t',gs_keys,gs_keys_bak,"'2'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL artt460_rtdk_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_rtdj2_d[g_detail_idx].rtdkseq = g_rtdj2_d_t.rtdkseq 
                  ) THEN
                  LET gs_keys[01] = g_rtdi_m.rtdidocno
                  LET gs_keys[gs_keys.getLength()+1] = g_rtdj2_d_t.rtdkseq
                  CALL artt460_key_update_b(gs_keys,'rtdk_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtdi_m),util.JSON.stringify(g_rtdj2_d_t)
               LET g_log2 = util.JSON.stringify(g_rtdi_m),util.JSON.stringify(g_rtdj2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body2.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdkseq
            #add-point:BEFORE FIELD rtdkseq name="input.b.page2.rtdkseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdkseq
            
            #add-point:AFTER FIELD rtdkseq name="input.a.page2.rtdkseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_rtdi_m.rtdidocno IS NOT NULL AND g_rtdj2_d[g_detail_idx].rtdkseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtdi_m.rtdidocno != g_rtdidocno_t OR g_rtdj2_d[g_detail_idx].rtdkseq != g_rtdj2_d_t.rtdkseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtdk_t WHERE "||"rtdkent = '" ||g_enterprise|| "' AND "||"rtdkdocno = '"||g_rtdi_m.rtdidocno ||"' AND "|| "rtdkseq = '"||g_rtdj2_d[g_detail_idx].rtdkseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdkseq
            #add-point:ON CHANGE rtdkseq name="input.g.page2.rtdkseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdksite
            
            #add-point:AFTER FIELD rtdksite name="input.a.page2.rtdksite"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtdj2_d[l_ac].rtdksite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtdj2_d[l_ac].rtdksite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtdj2_d[l_ac].rtdksite_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdksite
            #add-point:BEFORE FIELD rtdksite name="input.b.page2.rtdksite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdksite
            #add-point:ON CHANGE rtdksite name="input.g.page2.rtdksite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdk002
            #add-point:BEFORE FIELD rtdk002 name="input.b.page2.rtdk002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdk002
            
            #add-point:AFTER FIELD rtdk002 name="input.a.page2.rtdk002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdk002
            #add-point:ON CHANGE rtdk002 name="input.g.page2.rtdk002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdk001
            
            #add-point:AFTER FIELD rtdk001 name="input.a.page2.rtdk001"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rtdj2_d[l_ac].rtdk001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rtdj2_d[l_ac].rtdk001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rtdj2_d[l_ac].rtdk001_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdk001
            #add-point:BEFORE FIELD rtdk001 name="input.b.page2.rtdk001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdk001
            #add-point:ON CHANGE rtdk001 name="input.g.page2.rtdk001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdk003
            #add-point:BEFORE FIELD rtdk003 name="input.b.page2.rtdk003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdk003
            
            #add-point:AFTER FIELD rtdk003 name="input.a.page2.rtdk003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdk003
            #add-point:ON CHANGE rtdk003 name="input.g.page2.rtdk003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdk004
            #add-point:BEFORE FIELD rtdk004 name="input.b.page2.rtdk004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdk004
            
            #add-point:AFTER FIELD rtdk004 name="input.a.page2.rtdk004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdk004
            #add-point:ON CHANGE rtdk004 name="input.g.page2.rtdk004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdk005
            #add-point:BEFORE FIELD rtdk005 name="input.b.page2.rtdk005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdk005
            
            #add-point:AFTER FIELD rtdk005 name="input.a.page2.rtdk005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdk005
            #add-point:ON CHANGE rtdk005 name="input.g.page2.rtdk005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdk006
            #add-point:BEFORE FIELD rtdk006 name="input.b.page2.rtdk006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdk006
            
            #add-point:AFTER FIELD rtdk006 name="input.a.page2.rtdk006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdk006
            #add-point:ON CHANGE rtdk006 name="input.g.page2.rtdk006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdk007
            #add-point:BEFORE FIELD rtdk007 name="input.b.page2.rtdk007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdk007
            
            #add-point:AFTER FIELD rtdk007 name="input.a.page2.rtdk007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdk007
            #add-point:ON CHANGE rtdk007 name="input.g.page2.rtdk007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdkunit
            #add-point:BEFORE FIELD rtdkunit name="input.b.page2.rtdkunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdkunit
            
            #add-point:AFTER FIELD rtdkunit name="input.a.page2.rtdkunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdkunit
            #add-point:ON CHANGE rtdkunit name="input.g.page2.rtdkunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.rtdkseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdkseq
            #add-point:ON ACTION controlp INFIELD rtdkseq name="input.c.page2.rtdkseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtdksite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdksite
            #add-point:ON ACTION controlp INFIELD rtdksite name="input.c.page2.rtdksite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtdk002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdk002
            #add-point:ON ACTION controlp INFIELD rtdk002 name="input.c.page2.rtdk002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtdk001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdk001
            #add-point:ON ACTION controlp INFIELD rtdk001 name="input.c.page2.rtdk001"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtdk003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdk003
            #add-point:ON ACTION controlp INFIELD rtdk003 name="input.c.page2.rtdk003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtdk004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdk004
            #add-point:ON ACTION controlp INFIELD rtdk004 name="input.c.page2.rtdk004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtdk005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdk005
            #add-point:ON ACTION controlp INFIELD rtdk005 name="input.c.page2.rtdk005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtdk006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdk006
            #add-point:ON ACTION controlp INFIELD rtdk006 name="input.c.page2.rtdk006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtdk007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdk007
            #add-point:ON ACTION controlp INFIELD rtdk007 name="input.c.page2.rtdk007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.rtdkunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdkunit
            #add-point:ON ACTION controlp INFIELD rtdkunit name="input.c.page2.rtdkunit"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row name="input.body2.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_rtdj2_d[l_ac].* = g_rtdj2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE artt460_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL artt460_unlock_b("rtdk_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2 name="input.body2.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_rtdj2_d[li_reproduce_target].* = g_rtdj2_d[li_reproduce].*
 
               LET g_rtdj2_d[li_reproduce_target].rtdkseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_rtdj2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_rtdj2_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
 
 
 
{</section>}
 
{<section id="artt460.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'2',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD rtdidocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD rtdjseq
               WHEN "s_detail2"
                  NEXT FIELD rtdkseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="artt460.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION artt460_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL artt460_b_fill() #單身填充
      CALL artt460_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL artt460_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   
   #end add-point
   
   #遮罩相關處理
   LET g_rtdi_m_mask_o.* =  g_rtdi_m.*
   CALL artt460_rtdi_t_mask()
   LET g_rtdi_m_mask_n.* =  g_rtdi_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtdi_m.rtdisite,g_rtdi_m.rtdisite_desc,g_rtdi_m.rtdidocdt,g_rtdi_m.rtdidocno,g_rtdi_m.rtdi001, 
       g_rtdi_m.rtdi001_desc,g_rtdi_m.rtdi002,g_rtdi_m.rtdi002_desc,g_rtdi_m.rtdi003,g_rtdi_m.rtdi003_desc, 
       g_rtdi_m.rtdi004,g_rtdi_m.rtdi004_desc,g_rtdi_m.rtdistus,g_rtdi_m.rtdi005,g_rtdi_m.rtdi006,g_rtdi_m.rtdi007, 
       g_rtdi_m.rtdi008,g_rtdi_m.rtdi009,g_rtdi_m.rtdi010,g_rtdi_m.rtdiunit,g_rtdi_m.rtdiownid,g_rtdi_m.rtdiownid_desc, 
       g_rtdi_m.rtdicrtid,g_rtdi_m.rtdicrtid_desc,g_rtdi_m.rtdiowndp,g_rtdi_m.rtdiowndp_desc,g_rtdi_m.rtdicrtdp, 
       g_rtdi_m.rtdicrtdp_desc,g_rtdi_m.rtdicrtdt,g_rtdi_m.rtdimodid,g_rtdi_m.rtdimodid_desc,g_rtdi_m.rtdicnfid, 
       g_rtdi_m.rtdicnfid_desc,g_rtdi_m.rtdimoddt,g_rtdi_m.rtdicnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtdi_m.rtdistus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_rtdj_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_rtdj2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL artt460_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="artt460.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION artt460_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="artt460.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION artt460_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE rtdi_t.rtdidocno 
   DEFINE l_oldno     LIKE rtdi_t.rtdidocno 
 
   DEFINE l_master    RECORD LIKE rtdi_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE rtdj_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE rtdk_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_rtdi_m.rtdidocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_rtdidocno_t = g_rtdi_m.rtdidocno
 
    
   LET g_rtdi_m.rtdidocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rtdi_m.rtdiownid = g_user
      LET g_rtdi_m.rtdiowndp = g_dept
      LET g_rtdi_m.rtdicrtid = g_user
      LET g_rtdi_m.rtdicrtdp = g_dept 
      LET g_rtdi_m.rtdicrtdt = cl_get_current()
      LET g_rtdi_m.rtdimodid = g_user
      LET g_rtdi_m.rtdimoddt = cl_get_current()
      LET g_rtdi_m.rtdistus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtdi_m.rtdistus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL artt460_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_rtdi_m.* TO NULL
      INITIALIZE g_rtdj_d TO NULL
      INITIALIZE g_rtdj2_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL artt460_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt460_set_act_visible()   
   CALL artt460_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtdidocno_t = g_rtdi_m.rtdidocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtdient = " ||g_enterprise|| " AND",
                      " rtdidocno = '", g_rtdi_m.rtdidocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artt460_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL artt460_idx_chk()
   
   LET g_data_owner = g_rtdi_m.rtdiownid      
   LET g_data_dept  = g_rtdi_m.rtdiowndp
   
   #功能已完成,通報訊息中心
   CALL artt460_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="artt460.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION artt460_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE rtdj_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE rtdk_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE artt460_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtdj_t
    WHERE rtdjent = g_enterprise AND rtdjdocno = g_rtdidocno_t
 
    INTO TEMP artt460_detail
 
   #將key修正為調整後   
   UPDATE artt460_detail 
      #更新key欄位
      SET rtdjdocno = g_rtdi_m.rtdidocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO rtdj_t SELECT * FROM artt460_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt460_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtdk_t 
    WHERE rtdkent = g_enterprise AND rtdkdocno = g_rtdidocno_t
 
    INTO TEMP artt460_detail
 
   #將key修正為調整後   
   UPDATE artt460_detail SET rtdkdocno = g_rtdi_m.rtdidocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO rtdk_t SELECT * FROM artt460_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt460_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_rtdidocno_t = g_rtdi_m.rtdidocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="artt460.delete" >}
#+ 資料刪除
PRIVATE FUNCTION artt460_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_rtdi_m.rtdidocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN artt460_cl USING g_enterprise,g_rtdi_m.rtdidocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt460_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE artt460_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artt460_master_referesh USING g_rtdi_m.rtdidocno INTO g_rtdi_m.rtdisite,g_rtdi_m.rtdidocdt, 
       g_rtdi_m.rtdidocno,g_rtdi_m.rtdi001,g_rtdi_m.rtdi002,g_rtdi_m.rtdi003,g_rtdi_m.rtdi004,g_rtdi_m.rtdistus, 
       g_rtdi_m.rtdi005,g_rtdi_m.rtdi006,g_rtdi_m.rtdi007,g_rtdi_m.rtdi008,g_rtdi_m.rtdi009,g_rtdi_m.rtdi010, 
       g_rtdi_m.rtdiunit,g_rtdi_m.rtdiownid,g_rtdi_m.rtdicrtid,g_rtdi_m.rtdiowndp,g_rtdi_m.rtdicrtdp, 
       g_rtdi_m.rtdicrtdt,g_rtdi_m.rtdimodid,g_rtdi_m.rtdicnfid,g_rtdi_m.rtdimoddt,g_rtdi_m.rtdicnfdt, 
       g_rtdi_m.rtdisite_desc,g_rtdi_m.rtdi001_desc,g_rtdi_m.rtdi002_desc,g_rtdi_m.rtdi003_desc,g_rtdi_m.rtdi004_desc, 
       g_rtdi_m.rtdiownid_desc,g_rtdi_m.rtdicrtid_desc,g_rtdi_m.rtdiowndp_desc,g_rtdi_m.rtdicrtdp_desc, 
       g_rtdi_m.rtdimodid_desc,g_rtdi_m.rtdicnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT artt460_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtdi_m_mask_o.* =  g_rtdi_m.*
   CALL artt460_rtdi_t_mask()
   LET g_rtdi_m_mask_n.* =  g_rtdi_m.*
   
   CALL artt460_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL artt460_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_rtdidocno_t = g_rtdi_m.rtdidocno
 
 
      DELETE FROM rtdi_t
       WHERE rtdient = g_enterprise AND rtdidocno = g_rtdi_m.rtdidocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_rtdi_m.rtdidocno,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM rtdj_t
       WHERE rtdjent = g_enterprise AND rtdjdocno = g_rtdi_m.rtdidocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtdj_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      
      #end add-point
      DELETE FROM rtdk_t
       WHERE rtdkent = g_enterprise AND
             rtdkdocno = g_rtdi_m.rtdidocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtdk_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE artt460_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_rtdj_d.clear() 
      CALL g_rtdj2_d.clear()       
 
     
      CALL artt460_ui_browser_refresh()  
      #CALL artt460_ui_headershow()  
      #CALL artt460_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL artt460_browser_fill("")
         CALL artt460_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE artt460_cl
 
   #功能已完成,通報訊息中心
   CALL artt460_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="artt460.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION artt460_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_rtdj_d.clear()
   CALL g_rtdj2_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF artt460_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtdjseq,rtdj001,rtdjsite,rtdjunit ,t1.ooefl003 FROM rtdj_t",  
               
                     " INNER JOIN rtdi_t ON rtdient = " ||g_enterprise|| " AND rtdidocno = rtdjdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=rtdj001 AND t1.ooefl002='"||g_dlang||"' ",
 
                     " WHERE rtdjent=? AND rtdjdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtdj_t.rtdjseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt460_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR artt460_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_rtdi_m.rtdidocno
                                               
      FOREACH b_fill_cs INTO g_rtdj_d[l_ac].rtdjseq,g_rtdj_d[l_ac].rtdj001,g_rtdj_d[l_ac].rtdjsite,g_rtdj_d[l_ac].rtdjunit, 
          g_rtdj_d[l_ac].rtdj001_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF artt460_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtdkseq,rtdksite,rtdk002,rtdk001,rtdk003,rtdk004,rtdk005,rtdk006, 
             rtdk007,rtdkunit ,t2.ooefl003 ,t3.imaal003 FROM rtdk_t",   
                     " INNER JOIN  rtdi_t ON rtdient = " ||g_enterprise|| " AND rtdidocno = rtdkdocno ",
 
                     "",
                     
                                    " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=rtdksite AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent="||g_enterprise||" AND t3.imaal001=rtdk001 AND t3.imaal002='"||g_dlang||"' ",
 
                     " WHERE rtdkent=? AND rtdkdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtdk_t.rtdkseq"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt460_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR artt460_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_rtdi_m.rtdidocno
                                               
      FOREACH b_fill_cs2 INTO g_rtdj2_d[l_ac].rtdkseq,g_rtdj2_d[l_ac].rtdksite,g_rtdj2_d[l_ac].rtdk002, 
          g_rtdj2_d[l_ac].rtdk001,g_rtdj2_d[l_ac].rtdk003,g_rtdj2_d[l_ac].rtdk004,g_rtdj2_d[l_ac].rtdk005, 
          g_rtdj2_d[l_ac].rtdk006,g_rtdj2_d[l_ac].rtdk007,g_rtdj2_d[l_ac].rtdkunit,g_rtdj2_d[l_ac].rtdksite_desc, 
          g_rtdj2_d[l_ac].rtdk001_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_rtdj_d.deleteElement(g_rtdj_d.getLength())
   CALL g_rtdj2_d.deleteElement(g_rtdj2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE artt460_pb
   FREE artt460_pb2
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_rtdj_d.getLength()
      LET g_rtdj_d_mask_o[l_ac].* =  g_rtdj_d[l_ac].*
      CALL artt460_rtdj_t_mask()
      LET g_rtdj_d_mask_n[l_ac].* =  g_rtdj_d[l_ac].*
   END FOR
   
   LET g_rtdj2_d_mask_o.* =  g_rtdj2_d.*
   FOR l_ac = 1 TO g_rtdj2_d.getLength()
      LET g_rtdj2_d_mask_o[l_ac].* =  g_rtdj2_d[l_ac].*
      CALL artt460_rtdk_t_mask()
      LET g_rtdj2_d_mask_n[l_ac].* =  g_rtdj2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="artt460.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION artt460_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM rtdj_t
       WHERE rtdjent = g_enterprise AND
         rtdjdocno = ps_keys_bak[1] AND rtdjseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtdj_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      
      #end add-point    
      DELETE FROM rtdk_t
       WHERE rtdkent = g_enterprise AND
             rtdkdocno = ps_keys_bak[1] AND rtdkseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtdk_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_rtdj2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="artt460.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION artt460_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO rtdj_t
                  (rtdjent,
                   rtdjdocno,
                   rtdjseq
                   ,rtdj001,rtdjsite,rtdjunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtdj_d[g_detail_idx].rtdj001,g_rtdj_d[g_detail_idx].rtdjsite,g_rtdj_d[g_detail_idx].rtdjunit) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtdj_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtdj_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      
      #end add-point 
      INSERT INTO rtdk_t
                  (rtdkent,
                   rtdkdocno,
                   rtdkseq
                   ,rtdksite,rtdk002,rtdk001,rtdk003,rtdk004,rtdk005,rtdk006,rtdk007,rtdkunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtdj2_d[g_detail_idx].rtdksite,g_rtdj2_d[g_detail_idx].rtdk002,g_rtdj2_d[g_detail_idx].rtdk001, 
                       g_rtdj2_d[g_detail_idx].rtdk003,g_rtdj2_d[g_detail_idx].rtdk004,g_rtdj2_d[g_detail_idx].rtdk005, 
                       g_rtdj2_d[g_detail_idx].rtdk006,g_rtdj2_d[g_detail_idx].rtdk007,g_rtdj2_d[g_detail_idx].rtdkunit) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtdk_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_rtdj2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="artt460.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION artt460_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtdj_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL artt460_rtdj_t_mask_restore('restore_mask_o')
               
      UPDATE rtdj_t 
         SET (rtdjdocno,
              rtdjseq
              ,rtdj001,rtdjsite,rtdjunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtdj_d[g_detail_idx].rtdj001,g_rtdj_d[g_detail_idx].rtdjsite,g_rtdj_d[g_detail_idx].rtdjunit)  
 
         WHERE rtdjent = g_enterprise AND rtdjdocno = ps_keys_bak[1] AND rtdjseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtdj_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtdj_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt460_rtdj_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtdk_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL artt460_rtdk_t_mask_restore('restore_mask_o')
               
      UPDATE rtdk_t 
         SET (rtdkdocno,
              rtdkseq
              ,rtdksite,rtdk002,rtdk001,rtdk003,rtdk004,rtdk005,rtdk006,rtdk007,rtdkunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtdj2_d[g_detail_idx].rtdksite,g_rtdj2_d[g_detail_idx].rtdk002,g_rtdj2_d[g_detail_idx].rtdk001, 
                  g_rtdj2_d[g_detail_idx].rtdk003,g_rtdj2_d[g_detail_idx].rtdk004,g_rtdj2_d[g_detail_idx].rtdk005, 
                  g_rtdj2_d[g_detail_idx].rtdk006,g_rtdj2_d[g_detail_idx].rtdk007,g_rtdj2_d[g_detail_idx].rtdkunit)  
 
         WHERE rtdkent = g_enterprise AND rtdkdocno = ps_keys_bak[1] AND rtdkseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update2"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtdk_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtdk_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt460_rtdk_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="artt460.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION artt460_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="artt460.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION artt460_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="artt460.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION artt460_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL artt460_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "rtdj_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN artt460_bcl USING g_enterprise,
                                       g_rtdi_m.rtdidocno,g_rtdj_d[g_detail_idx].rtdjseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt460_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "rtdk_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN artt460_bcl2 USING g_enterprise,
                                             g_rtdi_m.rtdidocno,g_rtdj2_d[g_detail_idx].rtdkseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt460_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="artt460.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION artt460_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt460_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt460_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="artt460.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION artt460_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("rtdidocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("rtdidocno",TRUE)
      CALL cl_set_comp_entry("rtdidocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("rtdisite",TRUE)    #161024-00025#11   2016/10/31  by 08742 add
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="artt460.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION artt460_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("rtdidocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("rtdidocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("rtdidocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF NOT s_aooi500_comp_entry(g_prog,'rtdisite') OR g_site_flag THEN
      CALL cl_set_comp_entry("rtdisite",FALSE)
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="artt460.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION artt460_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="artt460.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION artt460_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="artt460.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION artt460_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="artt460.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION artt460_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:1)
   IF g_rtdi_m.rtdistus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF


   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="artt460.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION artt460_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="artt460.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION artt460_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="artt460.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION artt460_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " rtdidocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "rtdi_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtdj_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtdk_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="artt460.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION artt460_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_rtdi_m.rtdidocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN artt460_cl USING g_enterprise,g_rtdi_m.rtdidocno
   IF STATUS THEN
      CLOSE artt460_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt460_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE artt460_master_referesh USING g_rtdi_m.rtdidocno INTO g_rtdi_m.rtdisite,g_rtdi_m.rtdidocdt, 
       g_rtdi_m.rtdidocno,g_rtdi_m.rtdi001,g_rtdi_m.rtdi002,g_rtdi_m.rtdi003,g_rtdi_m.rtdi004,g_rtdi_m.rtdistus, 
       g_rtdi_m.rtdi005,g_rtdi_m.rtdi006,g_rtdi_m.rtdi007,g_rtdi_m.rtdi008,g_rtdi_m.rtdi009,g_rtdi_m.rtdi010, 
       g_rtdi_m.rtdiunit,g_rtdi_m.rtdiownid,g_rtdi_m.rtdicrtid,g_rtdi_m.rtdiowndp,g_rtdi_m.rtdicrtdp, 
       g_rtdi_m.rtdicrtdt,g_rtdi_m.rtdimodid,g_rtdi_m.rtdicnfid,g_rtdi_m.rtdimoddt,g_rtdi_m.rtdicnfdt, 
       g_rtdi_m.rtdisite_desc,g_rtdi_m.rtdi001_desc,g_rtdi_m.rtdi002_desc,g_rtdi_m.rtdi003_desc,g_rtdi_m.rtdi004_desc, 
       g_rtdi_m.rtdiownid_desc,g_rtdi_m.rtdicrtid_desc,g_rtdi_m.rtdiowndp_desc,g_rtdi_m.rtdicrtdp_desc, 
       g_rtdi_m.rtdimodid_desc,g_rtdi_m.rtdicnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT artt460_action_chk() THEN
      CLOSE artt460_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtdi_m.rtdisite,g_rtdi_m.rtdisite_desc,g_rtdi_m.rtdidocdt,g_rtdi_m.rtdidocno,g_rtdi_m.rtdi001, 
       g_rtdi_m.rtdi001_desc,g_rtdi_m.rtdi002,g_rtdi_m.rtdi002_desc,g_rtdi_m.rtdi003,g_rtdi_m.rtdi003_desc, 
       g_rtdi_m.rtdi004,g_rtdi_m.rtdi004_desc,g_rtdi_m.rtdistus,g_rtdi_m.rtdi005,g_rtdi_m.rtdi006,g_rtdi_m.rtdi007, 
       g_rtdi_m.rtdi008,g_rtdi_m.rtdi009,g_rtdi_m.rtdi010,g_rtdi_m.rtdiunit,g_rtdi_m.rtdiownid,g_rtdi_m.rtdiownid_desc, 
       g_rtdi_m.rtdicrtid,g_rtdi_m.rtdicrtid_desc,g_rtdi_m.rtdiowndp,g_rtdi_m.rtdiowndp_desc,g_rtdi_m.rtdicrtdp, 
       g_rtdi_m.rtdicrtdp_desc,g_rtdi_m.rtdicrtdt,g_rtdi_m.rtdimodid,g_rtdi_m.rtdimodid_desc,g_rtdi_m.rtdicnfid, 
       g_rtdi_m.rtdicnfid_desc,g_rtdi_m.rtdimoddt,g_rtdi_m.rtdicnfdt
 
   CASE g_rtdi_m.rtdistus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_rtdi_m.rtdistus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CASE g_rtdi_m.rtdistus
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF
         WHEN "R"    #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)
         WHEN "D"    #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)
         WHEN "Y"
            HIDE OPTION "invalid"
         WHEN "X"
            HIDE OPTION "confirmed"
            HIDE OPTION "unconfirmed"
            CALL s_transaction_end('N','0')   #160816-00068#8 by 08209 add
            RETURN
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
            CALL cl_set_act_visible("withdraw",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         WHEN "A"    #只能顯示確認; 其餘應用功能皆隱藏
            CALL cl_set_act_visible("confirmed",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)
      END CASE 
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT artt460_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE artt460_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT artt460_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE artt460_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_rtdi_m.rtdistus = lc_state OR cl_null(lc_state) THEN
      CLOSE artt460_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
  LET l_success = TRUE
   CASE lc_state 
      WHEN 'Y'       
         CALL s_artt460_conf_chk(g_rtdi_m.rtdidocno) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('aim-00108') THEN
               CALL s_transaction_begin()
               CALL s_artt460_conf_upd(g_rtdi_m.rtdidocno) RETURNING l_success
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_rtdi_m.rtdidocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                   CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL s_transaction_end('N','0')   #160816-00068#8 by 08209 add
               RETURN            
            END IF
         ELSE
            IF NOT cl_null(g_errno) THEN
               INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_rtdi_m.rtdidocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
            END IF
            CALL s_transaction_end('N','0')   #160816-00068#8 by 08209 add
            RETURN            
         END IF         
      WHEN 'X'
         CALL s_artt460_void_chk(g_rtdi_m.rtdidocno) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_artt460_void_upd(g_rtdi_m.rtdidocno) RETURNING l_success
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_rtdi_m.rtdidocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL s_transaction_end('N','0')   #160816-00068#8 by 08209 add
               RETURN
            END IF
         ELSE
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = g_rtdi_m.rtdidocno
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')   #160816-00068#8 by 08209 add
            RETURN    
         END IF
         
       WHEN 'N' 
         CALL s_artt460_unconf_chk(g_rtdi_m.rtdidocno) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-015') THEN
               CALL s_transaction_begin()
               CALL s_artt460_unconf_upd(g_rtdi_m.rtdidocno) RETURNING l_success
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_rtdi_m.rtdidocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL s_transaction_end('N','0')   #160816-00068#8 by 08209 add
               RETURN
            END IF
         ELSE
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = g_rtdi_m.rtdidocno
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')   #160816-00068#8 by 08209 add
            RETURN    
         END IF
   END CASE
   #end add-point
   
   LET g_rtdi_m.rtdimodid = g_user
   LET g_rtdi_m.rtdimoddt = cl_get_current()
   LET g_rtdi_m.rtdistus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE rtdi_t 
      SET (rtdistus,rtdimodid,rtdimoddt) 
        = (g_rtdi_m.rtdistus,g_rtdi_m.rtdimodid,g_rtdi_m.rtdimoddt)     
    WHERE rtdient = g_enterprise AND rtdidocno = g_rtdi_m.rtdidocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE artt460_master_referesh USING g_rtdi_m.rtdidocno INTO g_rtdi_m.rtdisite,g_rtdi_m.rtdidocdt, 
          g_rtdi_m.rtdidocno,g_rtdi_m.rtdi001,g_rtdi_m.rtdi002,g_rtdi_m.rtdi003,g_rtdi_m.rtdi004,g_rtdi_m.rtdistus, 
          g_rtdi_m.rtdi005,g_rtdi_m.rtdi006,g_rtdi_m.rtdi007,g_rtdi_m.rtdi008,g_rtdi_m.rtdi009,g_rtdi_m.rtdi010, 
          g_rtdi_m.rtdiunit,g_rtdi_m.rtdiownid,g_rtdi_m.rtdicrtid,g_rtdi_m.rtdiowndp,g_rtdi_m.rtdicrtdp, 
          g_rtdi_m.rtdicrtdt,g_rtdi_m.rtdimodid,g_rtdi_m.rtdicnfid,g_rtdi_m.rtdimoddt,g_rtdi_m.rtdicnfdt, 
          g_rtdi_m.rtdisite_desc,g_rtdi_m.rtdi001_desc,g_rtdi_m.rtdi002_desc,g_rtdi_m.rtdi003_desc,g_rtdi_m.rtdi004_desc, 
          g_rtdi_m.rtdiownid_desc,g_rtdi_m.rtdicrtid_desc,g_rtdi_m.rtdiowndp_desc,g_rtdi_m.rtdicrtdp_desc, 
          g_rtdi_m.rtdimodid_desc,g_rtdi_m.rtdicnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_rtdi_m.rtdisite,g_rtdi_m.rtdisite_desc,g_rtdi_m.rtdidocdt,g_rtdi_m.rtdidocno, 
          g_rtdi_m.rtdi001,g_rtdi_m.rtdi001_desc,g_rtdi_m.rtdi002,g_rtdi_m.rtdi002_desc,g_rtdi_m.rtdi003, 
          g_rtdi_m.rtdi003_desc,g_rtdi_m.rtdi004,g_rtdi_m.rtdi004_desc,g_rtdi_m.rtdistus,g_rtdi_m.rtdi005, 
          g_rtdi_m.rtdi006,g_rtdi_m.rtdi007,g_rtdi_m.rtdi008,g_rtdi_m.rtdi009,g_rtdi_m.rtdi010,g_rtdi_m.rtdiunit, 
          g_rtdi_m.rtdiownid,g_rtdi_m.rtdiownid_desc,g_rtdi_m.rtdicrtid,g_rtdi_m.rtdicrtid_desc,g_rtdi_m.rtdiowndp, 
          g_rtdi_m.rtdiowndp_desc,g_rtdi_m.rtdicrtdp,g_rtdi_m.rtdicrtdp_desc,g_rtdi_m.rtdicrtdt,g_rtdi_m.rtdimodid, 
          g_rtdi_m.rtdimodid_desc,g_rtdi_m.rtdicnfid,g_rtdi_m.rtdicnfid_desc,g_rtdi_m.rtdimoddt,g_rtdi_m.rtdicnfdt 
 
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE artt460_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artt460_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="artt460.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION artt460_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_rtdj_d.getLength() THEN
         LET g_detail_idx = g_rtdj_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtdj_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtdj_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_rtdj2_d.getLength() THEN
         LET g_detail_idx = g_rtdj2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtdj2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtdj2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="artt460.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION artt460_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL artt460_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="artt460.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION artt460_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="artt460.status_show" >}
PRIVATE FUNCTION artt460_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="artt460.mask_functions" >}
&include "erp/art/artt460_mask.4gl"
 
{</section>}
 
{<section id="artt460.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION artt460_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   DEFINE l_success  LIKE type_t.num5
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
 
 
   CALL artt460_show()
   CALL artt460_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   CALL s_artt460_conf_chk(g_rtdi_m.rtdidocno) RETURNING l_success,g_errno
   IF NOT l_success THEN
      CLOSE artt460_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_rtdi_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_rtdj_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_rtdj2_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL artt460_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL artt460_ui_headershow()
   CALL artt460_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION artt460_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL artt460_ui_headershow()  
   CALL artt460_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="artt460.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION artt460_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_rtdi_m.rtdidocno
   LET g_pk_array[1].column = 'rtdidocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="artt460.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="artt460.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION artt460_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL artt460_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_rtdi_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="artt460.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION artt460_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
 
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#35 add-S
   SELECT rtdistus  INTO g_rtdi_m.rtdistus
     FROM rtdi_t
    WHERE rtdient = g_enterprise
      AND rtdidocno = g_rtdi_m.rtdidocno

   IF (g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN     
     LET g_errno = NULL
     CASE g_rtdi_m.rtdistus
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_rtdi_m.rtdidocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL artt460_set_act_visible()
        CALL artt460_set_act_no_visible()
        CALL artt460_show()
        RETURN FALSE
     END IF
   END IF
   #160818-00017#35 add-E
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="artt460.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION artt460_rtdisite_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtdi_m.rtdisite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtdi_m.rtdisite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtdi_m.rtdisite_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION artt460_get_ooef(p_site)
   DEFINE p_site    LIKE rtdi_t.rtdisite

   LET g_ooef004 = ''
   LET g_ooef005 = ''
   
   SELECT ooef004,ooef005 INTO g_ooef004,g_ooef005 FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = p_site
      
   IF cl_null(g_ooef004) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00007'
      LET g_errparam.extend = g_site
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF 
   IF cl_null(g_ooef005) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00008'
      LET g_errparam.extend = g_site
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION artt460_rtdi003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtdi_m.rtdi003
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_rtdi_m.rtdi003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtdi_m.rtdi003_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION artt460_rtdi004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtdi_m.rtdi004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtdi_m.rtdi004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtdi_m.rtdi004_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION artt460_rtdi001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtdi_m.rtdi001
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtdi_m.rtdi001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtdi_m.rtdi001_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION artt460_rtdi001_chk()
DEFINE l_pmaastus  LIKE pmaa_t.pmaastus

   SELECT pmaastus INTO l_pmaastus FROM pmaa_t
    WHERE pmaaent = g_enterprise AND pmaa001 = g_rtdi_m.rtdi001 AND pmaa002 IN ('1','3')
   IF STATUS = 100 OR cl_null(l_pmaastus) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'apm-00016'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   ELSE
      IF l_pmaastus = 'N' THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'apm-00017'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
   RETURN TRUE
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION artt460_rtdi002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtdi_m.rtdi002
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2117' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtdi_m.rtdi002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtdi_m.rtdi002_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION artt460_rtdi005_combo()
DEFINE l_values        STRING             #ComboBox values
DEFINE l_items         STRING             #ComboBox items
DEFINE l_sql           STRING
DEFINE l_rtda001       LIKE rtda_t.rtda001
DEFINE l_rtda002       LIKE rtda_t.rtda002
DEFINE l_rtdal003      LIKE rtdal_t.rtdal003
DEFINE l_str1           STRING
DEFINE l_str2           STRING
DEFINE l_success LIKE type_t.num5  
DEFINE l_n              LIKE type_t.num5

   LET l_values = NULL
   LET l_items = NULL
   LET l_rtda001 = NULL
   LET l_rtdal003 = NULL
   LET l_str1 = NULL
   LET l_str2 = NULL

   LET l_sql = "  SELECT DISTINCT rtda001,rtdal003,rtda002 FROM rtda_t LEFT OUTER JOIN rtdal_t ON rtdaent = rtdalent AND rtda001 = rtdal001 AND rtdal002 = '",g_dlang,"'",
                  "  WHERE rtdaent = '",g_enterprise,"' AND rtdastus = 'Y'" 
                  
   SELECT COUNT(*) INTO l_n FROM  rtda_t LEFT OUTER JOIN rtdal_t ON rtdaent = rtdalent AND rtda001 = rtdal001 AND rtdal002 = g_dlang
    WHERE rtdaent = g_enterprise AND rtda005 = "artt460"
      
   IF l_n > 0 THEN
      LET l_sql = l_sql," AND rtda005 = 'artt460'"
   END IF
   LET l_sql = l_sql," ORDER BY rtda002"
   PREPARE t460_rtdi005_pre FROM l_sql
   DECLARE t460_rtdi005_cs CURSOR FOR t460_rtdi005_pre
    
   FOREACH t460_rtdi005_cs INTO l_rtda001,l_rtdal003,l_rtda002
      LET l_str1 = l_rtda001 
      LET l_str1 = l_str1.trim()
      LET l_str2 = l_rtdal003 
      LET l_str2 = l_str2.trim()
      IF cl_null(l_values) THEN
         LET l_values =  l_str1 CLIPPED        
      ELSE
         LET l_values = l_values CLIPPED ,",",l_str1       
      END IF
    
      IF cl_null(l_items) THEN
         LET l_items = l_str1 CLIPPED,':',l_str2 
      ELSE
         LET l_items = l_items CLIPPED ,",",l_str1 CLIPPED,':',l_str2 
      END IF
   
   END FOREACH
   CALL cl_set_combo_items("rtdi_t.rtdi005",l_values,l_items)

END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION artt460_rtdi006_combo()
DEFINE l_values        STRING             #ComboBox values
DEFINE l_items         STRING             #ComboBox items
DEFINE l_sql           STRING
DEFINE l_rtdb001       LIKE rtdb_t.rtdb001
DEFINE l_rtdb002       LIKE rtdb_t.rtdb002
DEFINE l_rtdbl003      LIKE rtdbl_t.rtdbl003
DEFINE l_str1           STRING
DEFINE l_str2           STRING
DEFINE l_success LIKE type_t.num5  
DEFINE l_n              LIKE type_t.num5

   LET l_values = NULL
   LET l_items = NULL
   LET l_rtdb001 = NULL
   LET l_rtdbl003 = NULL
   LET l_str1 = NULL
   LET l_str2 = NULL

   LET l_sql = "  SELECT DISTINCT rtdb001,rtdbl003,rtdb002 FROM rtdb_t LEFT OUTER JOIN rtdbl_t ON rtdbent = rtdblent AND rtdb001 = rtdbl001 AND rtdbl002 = '",g_dlang,"'",
                  "  WHERE rtdbent = '",g_enterprise,"' AND rtdbstus = 'Y'" 
                  
   SELECT COUNT(*) INTO l_n FROM  rtdb_t LEFT OUTER JOIN rtdbl_t ON rtdbent = rtdblent AND rtdb001 = rtdbl001 AND rtdbl002 = g_dlang
    WHERE rtdbent = g_enterprise AND rtdb003 = "artt460"
      
   IF l_n > 0 THEN
      LET l_sql = l_sql," AND rtdb003 = 'artt460'"
   END IF
   LET l_sql = l_sql," ORDER BY rtdb002"
   PREPARE t460_rtdi006_pre FROM l_sql
   DECLARE t460_rtdi006_cs CURSOR FOR t460_rtdi006_pre
    
   FOREACH t460_rtdi006_cs INTO l_rtdb001,l_rtdbl003,l_rtdb002
      LET l_str1 = l_rtdb001 
      LET l_str1 = l_str1.trim()
      LET l_str2 = l_rtdbl003 
      LET l_str2 = l_str2.trim()
      IF cl_null(l_values) THEN
         LET l_values =  l_str1 CLIPPED        
      ELSE
         LET l_values = l_values CLIPPED ,",",l_str1       
      END IF
    
      IF cl_null(l_items) THEN
         LET l_items = l_str1 CLIPPED,':',l_str2 
      ELSE
         LET l_items = l_items CLIPPED ,",",l_str1 CLIPPED,':',l_str2 
      END IF
   
   END FOREACH
   CALL cl_set_combo_items("rtdi_t.rtdi006",l_values,l_items)
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION artt460_rtdj001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rtdj_d[l_ac].rtdj001
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_rtdj_d[l_ac].rtdj001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_rtdj_d[l_ac].rtdj001_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION artt460_rtdj001_chk(p_cmd)
DEFINE  p_cmd             LIKE type_t.chr1
DEFINE  l_n               LIKE type_t.num5
DEFINE  l_success         LIKE type_t.num5
DEFINE  l_errno           LIKE type_t.chr10


   IF p_cmd = 'a' THEN
      SELECT COUNT(*) INTO l_n FROM rtdj_t 
       WHERE rtdjent = g_enterprise AND rtdjdocno = g_rtdi_m.rtdidocno AND rtdj001 = 'ALL'
   ELSE
      SELECT COUNT(*) INTO l_n FROM rtdj_t 
       WHERE rtdjent = g_enterprise AND rtdjdocno = g_rtdi_m.rtdidocno AND rtdj001 = 'ALL' AND rtdjseq <> g_rtdj_d_t.rtdjseq
   END IF
   IF l_n > 0 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.extend = g_rtdj_d[l_ac].rtdj001
       LET g_errparam.code   = 'art-00494'
       LET g_errparam.popup  = TRUE
       CALL cl_err()
       RETURN FALSE      
   END IF       
   

   IF g_rtdj_d[l_ac].rtdj001 <> 'ALL' THEN
        
      ##161024-00025#9   2016/10/26  by 08742  -S
      #CALL s_aooi500_chk(g_prog,'rtdj001',g_rtdj_d[l_ac].rtdj001,g_rtdi_m.rtdisite) RETURNING l_success,l_errno
      #IF NOT l_success THEN
      #   INITIALIZE g_errparam TO NULL
      #   LET g_errparam.extend = g_rtdj_d[l_ac].rtdj001
      #   LET g_errparam.code   = l_errno
      #   LET g_errparam.popup  = TRUE
      #   CALL cl_err()
      #   RETURN FALSE
      #END IF  
      LET l_success = NULL
      LET l_errno = NULL
      IF NOT cl_null(g_rtdj_d[l_ac].rtdj001) THEN
         IF p_cmd = 'a' OR (p_cmd = 'u' AND g_rtdj_d[l_ac].rtdj001 != g_rtdj_d_t.rtdj001) THEN
            IF s_aooi500_setpoint(g_prog,'rtdj001') THEN
               CALL s_aooi500_chk(g_prog,'rtdj001',g_rtdj_d[l_ac].rtdj001,g_site)
               RETURNING l_success,l_errno
               IF NOT l_success THEN
               
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = ""
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  RETURN FALSE
               END IF
            ELSE
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_rtdj_d[l_ac].rtdj001
               IF NOT cl_chk_exist("v_ooef001_13") THEN
                  
                  LET g_rtdj_d[l_ac].rtdj001 = g_rtdj_d_t.rtdj001
                  CALL s_desc_get_department_desc(g_rtdj_d[l_ac].rtdj001) RETURNING g_rtdj_d[l_ac].rtdj001_desc 
                  DISPLAY BY NAME g_rtdj_d[l_ac].rtdj001_desc
                  #檢查失敗時後續處理
                  RETURN FALSE
               END IF
            END IF
         END IF
      END IF
      ##161024-00025#9   2016/10/26  by 08742 -E
      
      IF p_cmd = 'a' OR (p_cmd = 'u' AND g_rtdj_d[l_ac].rtdj001 <> g_rtdj_d_t.rtdj001) THEN
         SELECT COUNT(*) INTO l_n FROM rtdj_t 
          WHERE rtdjent = g_enterprise AND rtdjdocno = g_rtdi_m.rtdidocno AND rtdj001 =g_rtdj_d[l_ac].rtdj001 
         IF l_n > 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = g_rtdj_d[l_ac].rtdj001
            LET g_errparam.code   = 'art-00491'
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            RETURN FALSE
         END IF                            
      END IF              
   ELSE
      IF p_cmd = 'a' THEN
         SELECT COUNT(*) INTO l_n FROM rtdj_t 
          WHERE rtdjent = g_enterprise AND rtdjdocno = g_rtdi_m.rtdidocno AND rtdj001 <> 'ALL'   
      ELSE
         SELECT COUNT(*) INTO l_n FROM rtdj_t 
          WHERE rtdjent = g_enterprise AND rtdjdocno = g_rtdi_m.rtdidocno AND rtdj001 <> 'ALL' AND rtdjseq <>g_rtdj_d_t.rtdjseq 
      END IF     
      
      IF l_n > 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = g_rtdj_d[l_ac].rtdj001
         LET g_errparam.code   = 'art-00495'
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         RETURN FALSE   
      END IF   
   END IF
   RETURN TRUE   
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION artt460_rtdk_ins()
DEFINE l_sql     STRING 
DEFINE l_n       LIKE type_t.num5
DEFINE l_rtdx    RECORD LIKE rtdx_t.*
DEFINE l_rtdk    RECORD LIKE rtdk_t.*
DEFINE l_imaa146 LIKE imaa_t.imaa146
DEFINE l_imaa104 LIKE imaa_t.imaa104
DEFINE l_inag009_sum LIKE inag_t.inag009
DEFINE l_rate      LIKE inaj_t.inaj014
DEFINE l_i         LIKE type_t.num5
DEFINE l_success   LIKE type_t.num5


   CALL cl_err_collect_init()
   
   DELETE FROM rtdk_t WHERE rtdkent = g_enterprise AND rtdkdocno = g_rtdi_m.rtdidocno
   
   LET l_i = 1 
   LET l_sql = " SELECT rtdx_t.*,imaa146,imaa104 FROM rtdx_t LEFT OUTER JOIN imaa_t ON rtdx001 = imaa001 AND rtdxent = imaaent ,imaf_t ",
               "  WHERE rtdxent = '",g_enterprise,"' AND imaf153 = '",g_rtdi_m.rtdi001,"'",
               "    AND rtdxsite = imafsite AND rtdx001 = imaf001 AND rtdxent = imafent "
   SELECT COUNT(*) INTO l_n FROM rtdj_t
    WHERE rtdjent = g_enterprise AND rtdjdocno =g_rtdi_m.rtdidocno AND rtdj001 = 'ALL'
    
   IF l_n = 0 THEN
      LET l_sql = l_sql," AND rtdxsite IN (SELECT rtdj001 FROM rtdj_t WHERE rtdjent = '",g_enterprise,"'",
                         "                   AND rtdjdocno = '",g_rtdi_m.rtdidocno,"')"
   END IF    
   LET l_sql = l_sql," ORDER BY rtdxsite,rtdx001 "
   
   PREPARE t460_rtdx_pre FROM l_sql   
   DECLARE t460_rtdx_cur CURSOR FOR t460_rtdx_pre

   FOREACH t460_rtdx_cur INTO l_rtdx.*,l_imaa146,l_imaa104
      LET l_rtdk.rtdkent = g_enterprise
      LET l_rtdk.rtdksite = l_rtdx.rtdxsite
      LET l_rtdk.rtdkunit = g_rtdi_m.rtdiunit
      LET l_rtdk.rtdkdocno = g_rtdi_m.rtdidocno
      LET l_rtdk.rtdkseq = l_i
      LET l_rtdk.rtdk001 = l_rtdx.rtdx001
      LET l_rtdk.rtdk002 = l_rtdx.rtdx002
      LET l_rtdk.rtdk003 = ' '
      LET l_rtdk.rtdk004 = l_imaa146            #成本单位      
      #CALL s_cost_get(l_rtdx.rtdxsite,g_today,l_rtdx.rtdx001,' ',l_imaa146,'','','','','','','') RETURNING l_rtdk.rtdk005,l_success #mark by geza 20151110
      #add by geza 20151110(S)  
      #单价改由s_cost_price_get_item_cost元件抓取xccu的单价
      #营运中心编号 帐套 本位币顺序 成本计算类型 会计年度 会计期别 料件编号 产品特征 仓库 批号 库存管理特征 币种        
      CALL s_cost_price_get_item_cost(l_rtdx.rtdxsite,'','1','','','',l_rtdx.rtdx001,'','','','','')  RETURNING l_success,l_rtdk.rtdk005
      #add by geza 20151110(E) 
      IF NOT l_success THEN
         CONTINUE FOREACH
      END IF
      
      SELECT SUM(inag009) INTO l_inag009_sum FROM inag_t     #库存单位对应数量
       WHERE inagent = g_enterprise AND inagsite = l_rtdx.rtdxsite AND inag001 = l_rtdx.rtdx001 AND inag007 =l_imaa104  
      IF cl_null(l_inag009_sum) THEN
         LET l_inag009_sum = 0
      END IF
      CALL s_aimi190_get_convert(l_rtdx.rtdx001,l_imaa104,l_imaa146) RETURNING l_success,l_rate
      IF NOT l_success THEN
         CONTINUE FOREACH
      END IF
      LET l_rtdk.rtdk006 = l_rate*l_inag009_sum
      LET l_rtdk.rtdk007 = l_rtdk.rtdk006*l_rtdk.rtdk005 
      
      INSERT INTO rtdk_t VALUES(l_rtdk.*)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = 'ins rtdk'
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF       
      LET l_i = l_i+1
   END FOREACH
   
   CALL cl_err_collect_show()
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION artt460_rtdk_reflesh()
   DISPLAY ARRAY g_rtdj2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b) 
      BEFORE DISPLAY 
        EXIT DISPLAY
   END DISPLAY 
   
   SELECT SUM(rtdk007) INTO g_rtdi_m.rtdi009 FROM rtdk_t
    WHERE rtdkent = g_enterprise AND rtdkdocno = g_rtdi_m.rtdidocno
    
   SELECT SUM(stbc019*stbc016) INTO g_rtdi_m.rtdi010 FROM stbc_t
   WHERE stbcent = g_enterprise AND stbc008 = g_rtdi_m.rtdi001

   IF cl_null(g_rtdi_m.rtdi010) THEN
      LET g_rtdi_m.rtdi010 = 0
   END IF
    
   UPDATE rtdi_t SET rtdi009 = g_rtdi_m.rtdi009,
                     rtdi010 = g_rtdi_m.rtdi010
    WHERE rtdient = g_enterprise AND rtdidocno = g_rtdi_m.rtdidocno
    
   DISPLAY BY NAME  g_rtdi_m.rtdi009 ,g_rtdi_m.rtdi010
   
   
END FUNCTION

 
{</section>}
 
