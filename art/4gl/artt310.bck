#該程式未解開Section, 採用最新樣板產出!
{<section id="artt310.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0005(2015-06-24 15:49:46), PR版次:0005(2016-09-05 20:54:00)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000045
#+ Filename...: artt310
#+ Description: 商品組成用量異動維護作業
#+ Creator....: 02159(2015-04-22 18:47:24)
#+ Modifier...: 02159 -SD/PR- 07900
 
{</section>}
 
{<section id="artt310.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
#Memos
# Modify......: NO.160816-00068#09   2016/08/17   By 08209    調整transaction
#160818-00017#34 2016-08-24 By 08734 删除修改未重新判断状态码
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_rtdo_m        RECORD
       rtdosite LIKE rtdo_t.rtdosite, 
   rtdosite_desc LIKE type_t.chr80, 
   rtdodocdt LIKE rtdo_t.rtdodocdt, 
   rtdodocno LIKE rtdo_t.rtdodocno, 
   rtdo000 LIKE rtdo_t.rtdo000, 
   rtdounit LIKE rtdo_t.rtdounit, 
   rtdo001 LIKE rtdo_t.rtdo001, 
   rtdo002 LIKE rtdo_t.rtdo002, 
   l_imaal003 LIKE type_t.chr500, 
   l_imaal004 LIKE type_t.chr500, 
   l_imaa009 LIKE type_t.chr500, 
   l_imaa009_desc LIKE type_t.chr80, 
   rtdo003 LIKE rtdo_t.rtdo003, 
   rtdo004 LIKE rtdo_t.rtdo004, 
   l_rtdo004_desc LIKE type_t.chr80, 
   rtdoacti LIKE rtdo_t.rtdoacti, 
   rtdostus LIKE rtdo_t.rtdostus, 
   rtdoownid LIKE rtdo_t.rtdoownid, 
   rtdoownid_desc LIKE type_t.chr80, 
   rtdoowndp LIKE rtdo_t.rtdoowndp, 
   rtdoowndp_desc LIKE type_t.chr80, 
   rtdocrtid LIKE rtdo_t.rtdocrtid, 
   rtdocrtid_desc LIKE type_t.chr80, 
   rtdocrtdp LIKE rtdo_t.rtdocrtdp, 
   rtdocrtdp_desc LIKE type_t.chr80, 
   rtdocrtdt LIKE rtdo_t.rtdocrtdt, 
   rtdomodid LIKE rtdo_t.rtdomodid, 
   rtdomodid_desc LIKE type_t.chr80, 
   rtdomoddt LIKE rtdo_t.rtdomoddt, 
   rtdocnfid LIKE rtdo_t.rtdocnfid, 
   rtdocnfid_desc LIKE type_t.chr80, 
   rtdocnfdt LIKE rtdo_t.rtdocnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_rtdp_d        RECORD
       rtdpsite LIKE rtdp_t.rtdpsite, 
   rtdpunit LIKE rtdp_t.rtdpunit, 
   rtdp002 LIKE rtdp_t.rtdp002, 
   rtdp004 LIKE rtdp_t.rtdp004, 
   rtdp001 LIKE rtdp_t.rtdp001, 
   rtdp003 LIKE rtdp_t.rtdp003, 
   rtdp003_desc LIKE type_t.chr500, 
   rtdp003_desc_desc LIKE type_t.chr500, 
   rtdp005 LIKE rtdp_t.rtdp005, 
   rtdp005_desc LIKE type_t.chr500, 
   rtdp006 LIKE rtdp_t.rtdp006, 
   rtdp007 LIKE rtdp_t.rtdp007, 
   rtdp008 LIKE rtdp_t.rtdp008, 
   rtdp009 LIKE rtdp_t.rtdp009, 
   rtdp010 LIKE rtdp_t.rtdp010, 
   rtdp011 LIKE rtdp_t.rtdp011, 
   rtdp012 LIKE rtdp_t.rtdp012
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_rtdosite LIKE rtdo_t.rtdosite,
      b_rtdounit LIKE rtdo_t.rtdounit,
      b_rtdodocdt LIKE rtdo_t.rtdodocdt,
      b_rtdodocno LIKE rtdo_t.rtdodocno,
      b_rtdo000 LIKE rtdo_t.rtdo000,
      b_rtdo001 LIKE rtdo_t.rtdo001,
      b_rtdo002 LIKE rtdo_t.rtdo002,
      b_rtdo003 LIKE rtdo_t.rtdo003,
      b_rtdo004 LIKE rtdo_t.rtdo004,
      b_rtdoacti LIKE rtdo_t.rtdoacti
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_site_flag           LIKE type_t.num5
DEFINE g_vdate               LIKE type_t.chr20             #單頭有效日期變數
DEFINE g_wc2_rtdo            STRING                        #單頭主檔table所使用的g_wc
#end add-point
       
#模組變數(Module Variables)
DEFINE g_rtdo_m          type_g_rtdo_m
DEFINE g_rtdo_m_t        type_g_rtdo_m
DEFINE g_rtdo_m_o        type_g_rtdo_m
DEFINE g_rtdo_m_mask_o   type_g_rtdo_m #轉換遮罩前資料
DEFINE g_rtdo_m_mask_n   type_g_rtdo_m #轉換遮罩後資料
 
   DEFINE g_rtdodocno_t LIKE rtdo_t.rtdodocno
 
 
DEFINE g_rtdp_d          DYNAMIC ARRAY OF type_g_rtdp_d
DEFINE g_rtdp_d_t        type_g_rtdp_d
DEFINE g_rtdp_d_o        type_g_rtdp_d
DEFINE g_rtdp_d_mask_o   DYNAMIC ARRAY OF type_g_rtdp_d #轉換遮罩前資料
DEFINE g_rtdp_d_mask_n   DYNAMIC ARRAY OF type_g_rtdp_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="artt310.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   DEFINE l_success        LIKE type_t.num5
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("art","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT rtdosite,'',rtdodocdt,rtdodocno,rtdo000,rtdounit,rtdo001,rtdo002,'','', 
       '','',rtdo003,rtdo004,'',rtdoacti,rtdostus,rtdoownid,'',rtdoowndp,'',rtdocrtid,'',rtdocrtdp,'', 
       rtdocrtdt,rtdomodid,'',rtdomoddt,rtdocnfid,'',rtdocnfdt", 
                      " FROM rtdo_t",
                      " WHERE rtdoent= ? AND rtdodocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt310_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.rtdosite,t0.rtdodocdt,t0.rtdodocno,t0.rtdo000,t0.rtdounit,t0.rtdo001, 
       t0.rtdo002,t0.rtdo003,t0.rtdo004,t0.rtdoacti,t0.rtdostus,t0.rtdoownid,t0.rtdoowndp,t0.rtdocrtid, 
       t0.rtdocrtdp,t0.rtdocrtdt,t0.rtdomodid,t0.rtdomoddt,t0.rtdocnfid,t0.rtdocnfdt,t1.ooefl003 ,t2.ooag011 , 
       t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011 ,t7.ooag011",
               " FROM rtdo_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.rtdosite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.rtdoownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.rtdoowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=t0.rtdocrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=t0.rtdocrtdp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=t0.rtdomodid  ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=t0.rtdocnfid  ",
 
               " WHERE t0.rtdoent = " ||g_enterprise|| " AND t0.rtdodocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE artt310_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_artt310 WITH FORM cl_ap_formpath("art",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL artt310_init()   
 
      #進入選單 Menu (="N")
      CALL artt310_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
 
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_artt310
      
   END IF 
   
   CLOSE artt310_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   CALL s_aooi500_drop_temp() RETURNING l_success
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="artt310.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION artt310_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success        LIKE type_t.num5
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('rtdostus','13','N,Y,A,D,R,W,X')
 
      CALL cl_set_combo_scc('rtdo000','32') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   LET l_success = ''
   CALL s_aooi500_create_temp() RETURNING l_success
   LET g_site_flag = FALSE
   LET g_errshow = 1
   #end add-point
   
   #初始化搜尋條件
   CALL artt310_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="artt310.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION artt310_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL artt310_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_rtdo_m.* TO NULL
         CALL g_rtdp_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL artt310_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL artt310_fetch('') # reload data
               LET l_ac = 1
               CALL artt310_ui_detailshow() #Setting the current row 
         
               CALL artt310_idx_chk()
               #NEXT FIELD rtdp002
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_rtdp_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL artt310_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL artt310_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL artt310_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL artt310_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL artt310_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL artt310_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL artt310_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL artt310_set_act_visible()   
            CALL artt310_set_act_no_visible()
            IF NOT (g_rtdo_m.rtdodocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " rtdoent = " ||g_enterprise|| " AND",
                                  " rtdodocno = '", g_rtdo_m.rtdodocno, "' "
 
               #填到對應位置
               CALL artt310_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtdo_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtdp_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL artt310_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rtdo_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rtdp_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL artt310_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL artt310_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL artt310_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL artt310_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt310_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL artt310_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt310_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL artt310_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt310_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL artt310_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt310_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL artt310_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL artt310_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_rtdp_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD rtdp002
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL artt310_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL artt310_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL artt310_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL artt310_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               &include "erp/art/artt310_rep.4gl"
               #add-point:ON ACTION output.after
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL artt310_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL artt310_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL artt310_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL artt310_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL artt310_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_rtdo_m.rtdodocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="artt310.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION artt310_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_where           STRING
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   LET l_where = ''
   CALL s_aooi500_sql_where(g_prog,'rtdosite') RETURNING l_where
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT rtdodocno ",
                      " FROM rtdo_t ",
                      " ",
                      " LEFT JOIN rtdp_t ON rtdpent = rtdoent AND rtdodocno = rtdpdocno ", "  ",
                      #add-point:browser_fill段sql(rtdp_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " ", 
                      " ", 
 
 
                      " WHERE rtdoent = " ||g_enterprise|| " AND rtdpent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("rtdo_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT rtdodocno ",
                      " FROM rtdo_t ", 
                      "  ",
                      "  ",
                      " WHERE rtdoent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("rtdo_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   #串aooi500條件
   LET l_sub_sql = l_sub_sql," AND " ,l_where
   #串單頭"有效日期"條件
   IF NOT cl_null(g_vdate) THEN
      LET l_sub_sql = l_sub_sql CLIPPED," AND (rtdp011 <='", g_vdate,"')",
                                        " AND (rtdp012 >  '",g_vdate,"'"," OR rtdp012 IS NULL )"   
   END IF     
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_rtdo_m.* TO NULL
      CALL g_rtdp_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.rtdosite,t0.rtdounit,t0.rtdodocdt,t0.rtdodocno,t0.rtdo000,t0.rtdo001,t0.rtdo002,t0.rtdo003,t0.rtdo004,t0.rtdoacti Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.rtdostus,t0.rtdosite,t0.rtdounit,t0.rtdodocdt,t0.rtdodocno,t0.rtdo000, 
          t0.rtdo001,t0.rtdo002,t0.rtdo003,t0.rtdo004,t0.rtdoacti ",
                  " FROM rtdo_t t0",
                  "  ",
                  "  LEFT JOIN rtdp_t ON rtdpent = rtdoent AND rtdodocno = rtdpdocno ", "  ", 
                  #add-point:browser_fill段sql(rtdp_t1) name="browser_fill.join.rtdp_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                  
                  " WHERE t0.rtdoent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("rtdo_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.rtdostus,t0.rtdosite,t0.rtdounit,t0.rtdodocdt,t0.rtdodocno,t0.rtdo000, 
          t0.rtdo001,t0.rtdo002,t0.rtdo003,t0.rtdo004,t0.rtdoacti ",
                  " FROM rtdo_t t0",
                  "  ",
                  
                  " WHERE t0.rtdoent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("rtdo_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   LET g_sql = g_sql," AND " ,l_where
   #end add-point
   LET g_sql = g_sql, " ORDER BY rtdodocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"rtdo_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_rtdosite,g_browser[g_cnt].b_rtdounit, 
          g_browser[g_cnt].b_rtdodocdt,g_browser[g_cnt].b_rtdodocno,g_browser[g_cnt].b_rtdo000,g_browser[g_cnt].b_rtdo001, 
          g_browser[g_cnt].b_rtdo002,g_browser[g_cnt].b_rtdo003,g_browser[g_cnt].b_rtdo004,g_browser[g_cnt].b_rtdoacti 
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL artt310_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_rtdodocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="artt310.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION artt310_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_rtdo_m.rtdodocno = g_browser[g_current_idx].b_rtdodocno   
 
   EXECUTE artt310_master_referesh USING g_rtdo_m.rtdodocno INTO g_rtdo_m.rtdosite,g_rtdo_m.rtdodocdt, 
       g_rtdo_m.rtdodocno,g_rtdo_m.rtdo000,g_rtdo_m.rtdounit,g_rtdo_m.rtdo001,g_rtdo_m.rtdo002,g_rtdo_m.rtdo003, 
       g_rtdo_m.rtdo004,g_rtdo_m.rtdoacti,g_rtdo_m.rtdostus,g_rtdo_m.rtdoownid,g_rtdo_m.rtdoowndp,g_rtdo_m.rtdocrtid, 
       g_rtdo_m.rtdocrtdp,g_rtdo_m.rtdocrtdt,g_rtdo_m.rtdomodid,g_rtdo_m.rtdomoddt,g_rtdo_m.rtdocnfid, 
       g_rtdo_m.rtdocnfdt,g_rtdo_m.rtdosite_desc,g_rtdo_m.rtdoownid_desc,g_rtdo_m.rtdoowndp_desc,g_rtdo_m.rtdocrtid_desc, 
       g_rtdo_m.rtdocrtdp_desc,g_rtdo_m.rtdomodid_desc,g_rtdo_m.rtdocnfid_desc
   
   CALL artt310_rtdo_t_mask()
   CALL artt310_show()
      
END FUNCTION
 
{</section>}
 
{<section id="artt310.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION artt310_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="artt310.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION artt310_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_rtdodocno = g_rtdo_m.rtdodocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="artt310.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION artt310_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_rtdo_m.* TO NULL
   CALL g_rtdp_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   INITIALIZE g_vdate TO NULL
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON rtdosite,rtdodocdt,rtdodocno,rtdo000,rtdounit,rtdo001,rtdo002,l_imaa009_desc, 
          rtdo003,rtdo004,l_rtdo004_desc,rtdoacti,rtdostus,rtdoownid,rtdoowndp,rtdocrtid,rtdocrtdp,rtdocrtdt, 
          rtdomodid,rtdomoddt,rtdocnfid,rtdocnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            #LET g_vdate = g_today
            CALL cl_qbe_init()
            #DISPLAY g_vdate TO FORMONLY.l_date
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<rtdocrtdt>>----
         AFTER FIELD rtdocrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<rtdomoddt>>----
         AFTER FIELD rtdomoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtdocnfdt>>----
         AFTER FIELD rtdocnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rtdopstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.rtdosite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdosite
            #add-point:ON ACTION controlp INFIELD rtdosite name="construct.c.rtdosite"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdosite',g_rtdo_m.rtdosite,'c')            
            CALL q_ooef001_24()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdosite  #顯示到畫面上
            NEXT FIELD rtdosite                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdosite
            #add-point:BEFORE FIELD rtdosite name="construct.b.rtdosite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdosite
            
            #add-point:AFTER FIELD rtdosite name="construct.a.rtdosite"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdodocdt
            #add-point:BEFORE FIELD rtdodocdt name="construct.b.rtdodocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdodocdt
            
            #add-point:AFTER FIELD rtdodocdt name="construct.a.rtdodocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdodocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdodocdt
            #add-point:ON ACTION controlp INFIELD rtdodocdt name="construct.c.rtdodocdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtdodocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdodocno
            #add-point:ON ACTION controlp INFIELD rtdodocno name="construct.c.rtdodocno"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtdodocno()                      #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdodocno  #顯示到畫面上
            NEXT FIELD rtdodocno                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdodocno
            #add-point:BEFORE FIELD rtdodocno name="construct.b.rtdodocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdodocno
            
            #add-point:AFTER FIELD rtdodocno name="construct.a.rtdodocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdo000
            #add-point:BEFORE FIELD rtdo000 name="construct.b.rtdo000"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdo000
            
            #add-point:AFTER FIELD rtdo000 name="construct.a.rtdo000"
 
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdo000
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdo000
            #add-point:ON ACTION controlp INFIELD rtdo000 name="construct.c.rtdo000"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdounit
            #add-point:BEFORE FIELD rtdounit name="construct.b.rtdounit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdounit
            
            #add-point:AFTER FIELD rtdounit name="construct.a.rtdounit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdounit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdounit
            #add-point:ON ACTION controlp INFIELD rtdounit name="construct.c.rtdounit"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtdo001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdo001
            #add-point:ON ACTION controlp INFIELD rtdo001 name="construct.c.rtdo001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001_20()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdo001  #顯示到畫面上
            NEXT FIELD rtdo001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdo001
            #add-point:BEFORE FIELD rtdo001 name="construct.b.rtdo001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdo001
            
            #add-point:AFTER FIELD rtdo001 name="construct.a.rtdo001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdo002
            #add-point:BEFORE FIELD rtdo002 name="construct.b.rtdo002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdo002
            
            #add-point:AFTER FIELD rtdo002 name="construct.a.rtdo002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdo002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdo002
            #add-point:ON ACTION controlp INFIELD rtdo002 name="construct.c.rtdo002"
            
            #END add-point
 
 
         #Ctrlp:construct.c.l_imaa009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_imaa009
            #add-point:ON ACTION controlp INFIELD l_imaa009 name="construct.c.l_imaa009"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_imaa009  #顯示到畫面上
            NEXT FIELD l_imaa009                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_imaa009
            #add-point:BEFORE FIELD l_imaa009 name="construct.b.l_imaa009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_imaa009
            
            #add-point:AFTER FIELD l_imaa009 name="construct.a.l_imaa009"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_imaa009_desc
            #add-point:BEFORE FIELD l_imaa009_desc name="construct.b.l_imaa009_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_imaa009_desc
            
            #add-point:AFTER FIELD l_imaa009_desc name="construct.a.l_imaa009_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_imaa009_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_imaa009_desc
            #add-point:ON ACTION controlp INFIELD l_imaa009_desc name="construct.c.l_imaa009_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtdo003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdo003
            #add-point:ON ACTION controlp INFIELD rtdo003 name="construct.c.rtdo003"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaa014()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdo003  #顯示到畫面上
            NEXT FIELD rtdo003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdo003
            #add-point:BEFORE FIELD rtdo003 name="construct.b.rtdo003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdo003
            
            #add-point:AFTER FIELD rtdo003 name="construct.a.rtdo003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdo004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdo004
            #add-point:ON ACTION controlp INFIELD rtdo004 name="construct.c.rtdo004"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdo004  #顯示到畫面上
            NEXT FIELD rtdo004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdo004
            #add-point:BEFORE FIELD rtdo004 name="construct.b.rtdo004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdo004
            
            #add-point:AFTER FIELD rtdo004 name="construct.a.rtdo004"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_rtdo004_desc
            #add-point:BEFORE FIELD l_rtdo004_desc name="construct.b.l_rtdo004_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_rtdo004_desc
            
            #add-point:AFTER FIELD l_rtdo004_desc name="construct.a.l_rtdo004_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_rtdo004_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_rtdo004_desc
            #add-point:ON ACTION controlp INFIELD l_rtdo004_desc name="construct.c.l_rtdo004_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdoacti
            #add-point:BEFORE FIELD rtdoacti name="construct.b.rtdoacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdoacti
            
            #add-point:AFTER FIELD rtdoacti name="construct.a.rtdoacti"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdoacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdoacti
            #add-point:ON ACTION controlp INFIELD rtdoacti name="construct.c.rtdoacti"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdostus
            #add-point:BEFORE FIELD rtdostus name="construct.b.rtdostus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdostus
            
            #add-point:AFTER FIELD rtdostus name="construct.a.rtdostus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdostus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdostus
            #add-point:ON ACTION controlp INFIELD rtdostus name="construct.c.rtdostus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtdoownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdoownid
            #add-point:ON ACTION controlp INFIELD rtdoownid name="construct.c.rtdoownid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdoownid  #顯示到畫面上
            NEXT FIELD rtdoownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdoownid
            #add-point:BEFORE FIELD rtdoownid name="construct.b.rtdoownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdoownid
            
            #add-point:AFTER FIELD rtdoownid name="construct.a.rtdoownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdoowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdoowndp
            #add-point:ON ACTION controlp INFIELD rtdoowndp name="construct.c.rtdoowndp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdoowndp  #顯示到畫面上
            NEXT FIELD rtdoowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdoowndp
            #add-point:BEFORE FIELD rtdoowndp name="construct.b.rtdoowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdoowndp
            
            #add-point:AFTER FIELD rtdoowndp name="construct.a.rtdoowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdocrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdocrtid
            #add-point:ON ACTION controlp INFIELD rtdocrtid name="construct.c.rtdocrtid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdocrtid  #顯示到畫面上
            NEXT FIELD rtdocrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdocrtid
            #add-point:BEFORE FIELD rtdocrtid name="construct.b.rtdocrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdocrtid
            
            #add-point:AFTER FIELD rtdocrtid name="construct.a.rtdocrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rtdocrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdocrtdp
            #add-point:ON ACTION controlp INFIELD rtdocrtdp name="construct.c.rtdocrtdp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdocrtdp  #顯示到畫面上
            NEXT FIELD rtdocrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdocrtdp
            #add-point:BEFORE FIELD rtdocrtdp name="construct.b.rtdocrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdocrtdp
            
            #add-point:AFTER FIELD rtdocrtdp name="construct.a.rtdocrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdocrtdt
            #add-point:BEFORE FIELD rtdocrtdt name="construct.b.rtdocrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtdomodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdomodid
            #add-point:ON ACTION controlp INFIELD rtdomodid name="construct.c.rtdomodid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdomodid  #顯示到畫面上
            NEXT FIELD rtdomodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdomodid
            #add-point:BEFORE FIELD rtdomodid name="construct.b.rtdomodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdomodid
            
            #add-point:AFTER FIELD rtdomodid name="construct.a.rtdomodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdomoddt
            #add-point:BEFORE FIELD rtdomoddt name="construct.b.rtdomoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rtdocnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdocnfid
            #add-point:ON ACTION controlp INFIELD rtdocnfid name="construct.c.rtdocnfid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdocnfid  #顯示到畫面上
            NEXT FIELD rtdocnfid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdocnfid
            #add-point:BEFORE FIELD rtdocnfid name="construct.b.rtdocnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdocnfid
            
            #add-point:AFTER FIELD rtdocnfid name="construct.a.rtdocnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdocnfdt
            #add-point:BEFORE FIELD rtdocnfdt name="construct.b.rtdocnfdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON rtdp002,rtdp004,rtdp003,rtdp005,rtdp006,rtdp007,rtdp008,rtdp009,rtdp010, 
          rtdp011,rtdp012
           FROM s_detail1[1].rtdp002,s_detail1[1].rtdp004,s_detail1[1].rtdp003,s_detail1[1].rtdp005, 
               s_detail1[1].rtdp006,s_detail1[1].rtdp007,s_detail1[1].rtdp008,s_detail1[1].rtdp009,s_detail1[1].rtdp010, 
               s_detail1[1].rtdp011,s_detail1[1].rtdp012
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp002
            #add-point:BEFORE FIELD rtdp002 name="construct.b.page1.rtdp002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp002
            
            #add-point:AFTER FIELD rtdp002 name="construct.a.page1.rtdp002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtdp002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp002
            #add-point:ON ACTION controlp INFIELD rtdp002 name="construct.c.page1.rtdp002"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.rtdp004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp004
            #add-point:ON ACTION controlp INFIELD rtdp004 name="construct.c.page1.rtdp004"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaa014()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdp004  #顯示到畫面上
            NEXT FIELD rtdp004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp004
            #add-point:BEFORE FIELD rtdp004 name="construct.b.page1.rtdp004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp004
            
            #add-point:AFTER FIELD rtdp004 name="construct.a.page1.rtdp004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtdp003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp003
            #add-point:ON ACTION controlp INFIELD rtdp003 name="construct.c.page1.rtdp003"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001_17()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdp003  #顯示到畫面上
            NEXT FIELD rtdp003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp003
            #add-point:BEFORE FIELD rtdp003 name="construct.b.page1.rtdp003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp003
            
            #add-point:AFTER FIELD rtdp003 name="construct.a.page1.rtdp003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtdp005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp005
            #add-point:ON ACTION controlp INFIELD rtdp005 name="construct.c.page1.rtdp005"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rtdp005  #顯示到畫面上
            NEXT FIELD rtdp005                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp005
            #add-point:BEFORE FIELD rtdp005 name="construct.b.page1.rtdp005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp005
            
            #add-point:AFTER FIELD rtdp005 name="construct.a.page1.rtdp005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp006
            #add-point:BEFORE FIELD rtdp006 name="construct.b.page1.rtdp006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp006
            
            #add-point:AFTER FIELD rtdp006 name="construct.a.page1.rtdp006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtdp006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp006
            #add-point:ON ACTION controlp INFIELD rtdp006 name="construct.c.page1.rtdp006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp007
            #add-point:BEFORE FIELD rtdp007 name="construct.b.page1.rtdp007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp007
            
            #add-point:AFTER FIELD rtdp007 name="construct.a.page1.rtdp007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtdp007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp007
            #add-point:ON ACTION controlp INFIELD rtdp007 name="construct.c.page1.rtdp007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp008
            #add-point:BEFORE FIELD rtdp008 name="construct.b.page1.rtdp008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp008
            
            #add-point:AFTER FIELD rtdp008 name="construct.a.page1.rtdp008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtdp008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp008
            #add-point:ON ACTION controlp INFIELD rtdp008 name="construct.c.page1.rtdp008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp009
            #add-point:BEFORE FIELD rtdp009 name="construct.b.page1.rtdp009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp009
            
            #add-point:AFTER FIELD rtdp009 name="construct.a.page1.rtdp009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtdp009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp009
            #add-point:ON ACTION controlp INFIELD rtdp009 name="construct.c.page1.rtdp009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp010
            #add-point:BEFORE FIELD rtdp010 name="construct.b.page1.rtdp010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp010
            
            #add-point:AFTER FIELD rtdp010 name="construct.a.page1.rtdp010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtdp010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp010
            #add-point:ON ACTION controlp INFIELD rtdp010 name="construct.c.page1.rtdp010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp011
            #add-point:BEFORE FIELD rtdp011 name="construct.b.page1.rtdp011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp011
            
            #add-point:AFTER FIELD rtdp011 name="construct.a.page1.rtdp011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtdp011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp011
            #add-point:ON ACTION controlp INFIELD rtdp011 name="construct.c.page1.rtdp011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp012
            #add-point:BEFORE FIELD rtdp012 name="construct.b.page1.rtdp012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp012
            
            #add-point:AFTER FIELD rtdp012 name="construct.a.page1.rtdp012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtdp012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp012
            #add-point:ON ACTION controlp INFIELD rtdp012 name="construct.c.page1.rtdp012"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      CONSTRUCT BY NAME g_wc2_rtdo ON l_date
         BEFORE CONSTRUCT
            CALL cl_qbe_init()
            DISPLAY g_vdate TO FORMONLY.l_date
            
         AFTER FIELD l_date
            LET g_vdate = GET_FLDBUF(l_date)
            
      END CONSTRUCT
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "rtdo_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rtdp_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   #串單頭"有效日期"條件
   IF NOT cl_null(g_vdate) THEN
      LET g_wc2_table1 = g_wc2_table1 CLIPPED," AND (rtdp011 <='", g_vdate,"')",
                                              " AND (rtdp012 >  '",g_vdate,"'"," OR rtdp012 IS NULL )"   
   END IF
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="artt310.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION artt310_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON rtdosite,rtdounit,rtdodocdt,rtdodocno,rtdo000,rtdo001,rtdo002,rtdo003, 
          rtdo004,rtdoacti
                          FROM s_browse[1].b_rtdosite,s_browse[1].b_rtdounit,s_browse[1].b_rtdodocdt, 
                              s_browse[1].b_rtdodocno,s_browse[1].b_rtdo000,s_browse[1].b_rtdo001,s_browse[1].b_rtdo002, 
                              s_browse[1].b_rtdo003,s_browse[1].b_rtdo004,s_browse[1].b_rtdoacti
 
         BEFORE CONSTRUCT
               DISPLAY artt310_filter_parser('rtdosite') TO s_browse[1].b_rtdosite
            DISPLAY artt310_filter_parser('rtdounit') TO s_browse[1].b_rtdounit
            DISPLAY artt310_filter_parser('rtdodocdt') TO s_browse[1].b_rtdodocdt
            DISPLAY artt310_filter_parser('rtdodocno') TO s_browse[1].b_rtdodocno
            DISPLAY artt310_filter_parser('rtdo000') TO s_browse[1].b_rtdo000
            DISPLAY artt310_filter_parser('rtdo001') TO s_browse[1].b_rtdo001
            DISPLAY artt310_filter_parser('rtdo002') TO s_browse[1].b_rtdo002
            DISPLAY artt310_filter_parser('rtdo003') TO s_browse[1].b_rtdo003
            DISPLAY artt310_filter_parser('rtdo004') TO s_browse[1].b_rtdo004
            DISPLAY artt310_filter_parser('rtdoacti') TO s_browse[1].b_rtdoacti
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL artt310_filter_show('rtdosite')
   CALL artt310_filter_show('rtdounit')
   CALL artt310_filter_show('rtdodocdt')
   CALL artt310_filter_show('rtdodocno')
   CALL artt310_filter_show('rtdo000')
   CALL artt310_filter_show('rtdo001')
   CALL artt310_filter_show('rtdo002')
   CALL artt310_filter_show('rtdo003')
   CALL artt310_filter_show('rtdo004')
   CALL artt310_filter_show('rtdoacti')
 
END FUNCTION
 
{</section>}
 
{<section id="artt310.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION artt310_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="artt310.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION artt310_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = artt310_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="artt310.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION artt310_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_rtdp_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL artt310_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL artt310_browser_fill("")
      CALL artt310_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL artt310_filter_show('rtdosite')
   CALL artt310_filter_show('rtdounit')
   CALL artt310_filter_show('rtdodocdt')
   CALL artt310_filter_show('rtdodocno')
   CALL artt310_filter_show('rtdo000')
   CALL artt310_filter_show('rtdo001')
   CALL artt310_filter_show('rtdo002')
   CALL artt310_filter_show('rtdo003')
   CALL artt310_filter_show('rtdo004')
   CALL artt310_filter_show('rtdoacti')
   CALL artt310_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL artt310_fetch("F") 
      #顯示單身筆數
      CALL artt310_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="artt310.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION artt310_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_rtdo_m.rtdodocno = g_browser[g_current_idx].b_rtdodocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE artt310_master_referesh USING g_rtdo_m.rtdodocno INTO g_rtdo_m.rtdosite,g_rtdo_m.rtdodocdt, 
       g_rtdo_m.rtdodocno,g_rtdo_m.rtdo000,g_rtdo_m.rtdounit,g_rtdo_m.rtdo001,g_rtdo_m.rtdo002,g_rtdo_m.rtdo003, 
       g_rtdo_m.rtdo004,g_rtdo_m.rtdoacti,g_rtdo_m.rtdostus,g_rtdo_m.rtdoownid,g_rtdo_m.rtdoowndp,g_rtdo_m.rtdocrtid, 
       g_rtdo_m.rtdocrtdp,g_rtdo_m.rtdocrtdt,g_rtdo_m.rtdomodid,g_rtdo_m.rtdomoddt,g_rtdo_m.rtdocnfid, 
       g_rtdo_m.rtdocnfdt,g_rtdo_m.rtdosite_desc,g_rtdo_m.rtdoownid_desc,g_rtdo_m.rtdoowndp_desc,g_rtdo_m.rtdocrtid_desc, 
       g_rtdo_m.rtdocrtdp_desc,g_rtdo_m.rtdomodid_desc,g_rtdo_m.rtdocnfid_desc
   
   #遮罩相關處理
   LET g_rtdo_m_mask_o.* =  g_rtdo_m.*
   CALL artt310_rtdo_t_mask()
   LET g_rtdo_m_mask_n.* =  g_rtdo_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt310_set_act_visible()   
   CALL artt310_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_rtdo_m_t.* = g_rtdo_m.*
   LET g_rtdo_m_o.* = g_rtdo_m.*
   
   LET g_data_owner = g_rtdo_m.rtdoownid      
   LET g_data_dept  = g_rtdo_m.rtdoowndp
   
   #重新顯示   
   CALL artt310_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="artt310.insert" >}
#+ 資料新增
PRIVATE FUNCTION artt310_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   DEFINE l_insert         LIKE type_t.num5
   DEFINE l_success        LIKE type_t.num5
   DEFINE l_doctype        LIKE rtai_t.rtai004
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_rtdp_d.clear()   
 
 
   INITIALIZE g_rtdo_m.* TO NULL             #DEFAULT 設定
   
   LET g_rtdodocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rtdo_m.rtdoownid = g_user
      LET g_rtdo_m.rtdoowndp = g_dept
      LET g_rtdo_m.rtdocrtid = g_user
      LET g_rtdo_m.rtdocrtdp = g_dept 
      LET g_rtdo_m.rtdocrtdt = cl_get_current()
      LET g_rtdo_m.rtdomodid = g_user
      LET g_rtdo_m.rtdomoddt = cl_get_current()
      LET g_rtdo_m.rtdostus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_rtdo_m.rtdo000 = "I"
      LET g_rtdo_m.rtdo002 = "0"
      LET g_rtdo_m.rtdoacti = "Y"
      LET g_rtdo_m.rtdostus = "N"
 
  
      #add-point:單頭預設值 name="insert.default"
      #申請組織
      LET l_insert = ''
      CALL s_aooi500_default(g_prog,'rtdo_t',g_rtdo_m.rtdosite) RETURNING l_insert,g_rtdo_m.rtdosite
      IF l_insert = FALSE THEN
         RETURN
      END IF
      CALL s_desc_get_department_desc(g_rtdo_m.rtdosite) RETURNING g_rtdo_m.rtdosite_desc
      DISPLAY BY NAME g_rtdo_m.rtdosite_desc
      
      #申請日期
      LET g_rtdo_m.rtdodocdt = g_today
      
      #單據編號
      CALL s_arti200_get_def_doc_type(g_rtdo_m.rtdosite,g_prog,'1')
         RETURNING l_success,l_doctype
      LET g_rtdo_m.rtdodocno = l_doctype
      DISPLAY BY NAME g_rtdo_m.rtdodocno
      
      #版本
      IF g_rtdo_m.rtdo000 = 'I' THEN
         LET g_rtdo_m.rtdo002 = 0
      END IF
      
      LET g_site_flag = FALSE
      LET g_rtdo_m_t.* = g_rtdo_m.*
      LET g_rtdo_m_o.* = g_rtdo_m.*
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_rtdo_m_t.* = g_rtdo_m.*
      LET g_rtdo_m_o.* = g_rtdo_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtdo_m.rtdostus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL artt310_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_rtdo_m.* TO NULL
         INITIALIZE g_rtdp_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL artt310_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_rtdp_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt310_set_act_visible()   
   CALL artt310_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtdodocno_t = g_rtdo_m.rtdodocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtdoent = " ||g_enterprise|| " AND",
                      " rtdodocno = '", g_rtdo_m.rtdodocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artt310_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE artt310_cl
   
   CALL artt310_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE artt310_master_referesh USING g_rtdo_m.rtdodocno INTO g_rtdo_m.rtdosite,g_rtdo_m.rtdodocdt, 
       g_rtdo_m.rtdodocno,g_rtdo_m.rtdo000,g_rtdo_m.rtdounit,g_rtdo_m.rtdo001,g_rtdo_m.rtdo002,g_rtdo_m.rtdo003, 
       g_rtdo_m.rtdo004,g_rtdo_m.rtdoacti,g_rtdo_m.rtdostus,g_rtdo_m.rtdoownid,g_rtdo_m.rtdoowndp,g_rtdo_m.rtdocrtid, 
       g_rtdo_m.rtdocrtdp,g_rtdo_m.rtdocrtdt,g_rtdo_m.rtdomodid,g_rtdo_m.rtdomoddt,g_rtdo_m.rtdocnfid, 
       g_rtdo_m.rtdocnfdt,g_rtdo_m.rtdosite_desc,g_rtdo_m.rtdoownid_desc,g_rtdo_m.rtdoowndp_desc,g_rtdo_m.rtdocrtid_desc, 
       g_rtdo_m.rtdocrtdp_desc,g_rtdo_m.rtdomodid_desc,g_rtdo_m.rtdocnfid_desc
   
   
   #遮罩相關處理
   LET g_rtdo_m_mask_o.* =  g_rtdo_m.*
   CALL artt310_rtdo_t_mask()
   LET g_rtdo_m_mask_n.* =  g_rtdo_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtdo_m.rtdosite,g_rtdo_m.rtdosite_desc,g_rtdo_m.rtdodocdt,g_rtdo_m.rtdodocno,g_rtdo_m.rtdo000, 
       g_rtdo_m.rtdounit,g_rtdo_m.rtdo001,g_rtdo_m.rtdo002,g_rtdo_m.l_imaal003,g_rtdo_m.l_imaal004,g_rtdo_m.l_imaa009, 
       g_rtdo_m.l_imaa009_desc,g_rtdo_m.rtdo003,g_rtdo_m.rtdo004,g_rtdo_m.l_rtdo004_desc,g_rtdo_m.rtdoacti, 
       g_rtdo_m.rtdostus,g_rtdo_m.rtdoownid,g_rtdo_m.rtdoownid_desc,g_rtdo_m.rtdoowndp,g_rtdo_m.rtdoowndp_desc, 
       g_rtdo_m.rtdocrtid,g_rtdo_m.rtdocrtid_desc,g_rtdo_m.rtdocrtdp,g_rtdo_m.rtdocrtdp_desc,g_rtdo_m.rtdocrtdt, 
       g_rtdo_m.rtdomodid,g_rtdo_m.rtdomodid_desc,g_rtdo_m.rtdomoddt,g_rtdo_m.rtdocnfid,g_rtdo_m.rtdocnfid_desc, 
       g_rtdo_m.rtdocnfdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_rtdo_m.rtdoownid      
   LET g_data_dept  = g_rtdo_m.rtdoowndp
   
   #功能已完成,通報訊息中心
   CALL artt310_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="artt310.modify" >}
#+ 資料修改
PRIVATE FUNCTION artt310_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_rtdo_m_t.* = g_rtdo_m.*
   LET g_rtdo_m_o.* = g_rtdo_m.*
   
   IF g_rtdo_m.rtdodocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_rtdodocno_t = g_rtdo_m.rtdodocno
 
   CALL s_transaction_begin()
   
   OPEN artt310_cl USING g_enterprise,g_rtdo_m.rtdodocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt310_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE artt310_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artt310_master_referesh USING g_rtdo_m.rtdodocno INTO g_rtdo_m.rtdosite,g_rtdo_m.rtdodocdt, 
       g_rtdo_m.rtdodocno,g_rtdo_m.rtdo000,g_rtdo_m.rtdounit,g_rtdo_m.rtdo001,g_rtdo_m.rtdo002,g_rtdo_m.rtdo003, 
       g_rtdo_m.rtdo004,g_rtdo_m.rtdoacti,g_rtdo_m.rtdostus,g_rtdo_m.rtdoownid,g_rtdo_m.rtdoowndp,g_rtdo_m.rtdocrtid, 
       g_rtdo_m.rtdocrtdp,g_rtdo_m.rtdocrtdt,g_rtdo_m.rtdomodid,g_rtdo_m.rtdomoddt,g_rtdo_m.rtdocnfid, 
       g_rtdo_m.rtdocnfdt,g_rtdo_m.rtdosite_desc,g_rtdo_m.rtdoownid_desc,g_rtdo_m.rtdoowndp_desc,g_rtdo_m.rtdocrtid_desc, 
       g_rtdo_m.rtdocrtdp_desc,g_rtdo_m.rtdomodid_desc,g_rtdo_m.rtdocnfid_desc
   
   #檢查是否允許此動作
   IF NOT artt310_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtdo_m_mask_o.* =  g_rtdo_m.*
   CALL artt310_rtdo_t_mask()
   LET g_rtdo_m_mask_n.* =  g_rtdo_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   LET g_site_flag = TRUE
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL artt310_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_rtdodocno_t = g_rtdo_m.rtdodocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_rtdo_m.rtdomodid = g_user 
LET g_rtdo_m.rtdomoddt = cl_get_current()
LET g_rtdo_m.rtdomodid_desc = cl_get_username(g_rtdo_m.rtdomodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL artt310_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE rtdo_t SET (rtdomodid,rtdomoddt) = (g_rtdo_m.rtdomodid,g_rtdo_m.rtdomoddt)
          WHERE rtdoent = g_enterprise AND rtdodocno = g_rtdodocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_rtdo_m.* = g_rtdo_m_t.*
            CALL artt310_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_rtdo_m.rtdodocno != g_rtdo_m_t.rtdodocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE rtdp_t SET rtdpdocno = g_rtdo_m.rtdodocno
 
          WHERE rtdpent = g_enterprise AND rtdpdocno = g_rtdo_m_t.rtdodocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rtdp_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtdp_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt310_set_act_visible()   
   CALL artt310_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " rtdoent = " ||g_enterprise|| " AND",
                      " rtdodocno = '", g_rtdo_m.rtdodocno, "' "
 
   #填到對應位置
   CALL artt310_browser_fill("")
 
   CLOSE artt310_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artt310_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="artt310.input" >}
#+ 資料輸入
PRIVATE FUNCTION artt310_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE l_ooef004              LIKE ooef_t.ooef004   
   DEFINE l_errno                LIKE type_t.chr10
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_where                STRING
   DEFINE l_ln                   LIKE type_t.num5     #間隔項次
   DEFINE l_rtdo003              LIKE rtdo_t.rtdo003  
   DEFINE l_rtdo004              LIKE rtdo_t.rtdo004
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtdo_m.rtdosite,g_rtdo_m.rtdosite_desc,g_rtdo_m.rtdodocdt,g_rtdo_m.rtdodocno,g_rtdo_m.rtdo000, 
       g_rtdo_m.rtdounit,g_rtdo_m.rtdo001,g_rtdo_m.rtdo002,g_rtdo_m.l_imaal003,g_rtdo_m.l_imaal004,g_rtdo_m.l_imaa009, 
       g_rtdo_m.l_imaa009_desc,g_rtdo_m.rtdo003,g_rtdo_m.rtdo004,g_rtdo_m.l_rtdo004_desc,g_rtdo_m.rtdoacti, 
       g_rtdo_m.rtdostus,g_rtdo_m.rtdoownid,g_rtdo_m.rtdoownid_desc,g_rtdo_m.rtdoowndp,g_rtdo_m.rtdoowndp_desc, 
       g_rtdo_m.rtdocrtid,g_rtdo_m.rtdocrtid_desc,g_rtdo_m.rtdocrtdp,g_rtdo_m.rtdocrtdp_desc,g_rtdo_m.rtdocrtdt, 
       g_rtdo_m.rtdomodid,g_rtdo_m.rtdomodid_desc,g_rtdo_m.rtdomoddt,g_rtdo_m.rtdocnfid,g_rtdo_m.rtdocnfid_desc, 
       g_rtdo_m.rtdocnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT rtdpsite,rtdpunit,rtdp002,rtdp004,rtdp001,rtdp003,rtdp005,rtdp006,rtdp007, 
       rtdp008,rtdp009,rtdp010,rtdp011,rtdp012 FROM rtdp_t WHERE rtdpent=? AND rtdpdocno=? AND rtdp002=?  
       FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE artt310_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL artt310_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL artt310_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_rtdo_m.rtdosite,g_rtdo_m.rtdodocdt,g_rtdo_m.rtdodocno,g_rtdo_m.rtdo000,g_rtdo_m.rtdounit, 
       g_rtdo_m.rtdo001,g_rtdo_m.rtdo003,g_rtdo_m.rtdoacti,g_rtdo_m.rtdostus
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="artt310.input.head" >}
      #單頭段
      INPUT BY NAME g_rtdo_m.rtdosite,g_rtdo_m.rtdodocdt,g_rtdo_m.rtdodocno,g_rtdo_m.rtdo000,g_rtdo_m.rtdounit, 
          g_rtdo_m.rtdo001,g_rtdo_m.rtdo003,g_rtdo_m.rtdoacti,g_rtdo_m.rtdostus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN artt310_cl USING g_enterprise,g_rtdo_m.rtdodocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt310_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE artt310_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL artt310_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL artt310_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdosite
            
            #add-point:AFTER FIELD rtdosite name="input.a.rtdosite"
            LET g_rtdo_m.rtdosite_desc = ' '
            IF NOT cl_null(g_rtdo_m.rtdosite) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_rtdo_m.rtdosite != g_rtdo_m_t.rtdosite OR g_rtdo_m_t.rtdosite IS NULL )) THEN
                  LET l_success = ''
                  LET l_errno = ''
                  CALL s_aooi500_chk(g_prog,'rtdosite',g_rtdo_m.rtdosite,g_rtdo_m.rtdosite)
                     RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = ""
                     LET g_errparam.code   = l_errno
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     LET g_rtdo_m.rtdosite = g_rtdo_m_t.rtdosite
                     CALL s_desc_get_department_desc(g_rtdo_m.rtdosite)
                        RETURNING g_rtdo_m.rtdosite_desc
                  END IF
               END IF
			   ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ''
               LET g_errparam.code   = 'axc-00120'
               LET g_errparam.popup  = TRUE
               CALL cl_err()

               LET g_rtdo_m.rtdosite = g_rtdo_m_t.rtdosite
               CALL s_desc_get_department_desc(g_rtdo_m.rtdosite) RETURNING g_rtdo_m.rtdosite_desc
               NEXT FIELD CURRENT			
            END IF
            CALL s_desc_get_department_desc(g_rtdo_m.rtdosite)
               RETURNING g_rtdo_m.rtdosite_desc			
            LET g_site_flag = TRUE
            CALL artt310_set_entry(p_cmd)
            CALL artt310_set_no_entry(p_cmd)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdosite
            #add-point:BEFORE FIELD rtdosite name="input.b.rtdosite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdosite
            #add-point:ON CHANGE rtdosite name="input.g.rtdosite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdodocdt
            #add-point:BEFORE FIELD rtdodocdt name="input.b.rtdodocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdodocdt
            
            #add-point:AFTER FIELD rtdodocdt name="input.a.rtdodocdt"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdodocdt
            #add-point:ON CHANGE rtdodocdt name="input.g.rtdodocdt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdodocno
            #add-point:BEFORE FIELD rtdodocno name="input.b.rtdodocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdodocno
            
            #add-point:AFTER FIELD rtdodocno name="input.a.rtdodocno"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_rtdo_m.rtdodocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_rtdo_m.rtdodocno != g_rtdodocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtdo_t WHERE "||"rtdoent = '" ||g_enterprise|| "' AND "||"rtdodocno = '"||g_rtdo_m.rtdodocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF NOT s_aooi200_chk_slip(g_rtdo_m.rtdosite,'',g_rtdo_m.rtdodocno,g_prog) THEN
                     LET g_rtdo_m.rtdodocno = g_rtdodocno_t
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdodocno
            #add-point:ON CHANGE rtdodocno name="input.g.rtdodocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdo000
            #add-point:BEFORE FIELD rtdo000 name="input.b.rtdo000"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdo000
            
            #add-point:AFTER FIELD rtdo000 name="input.a.rtdo000"
            CALL artt310_set_entry(p_cmd)
            CALL artt310_set_no_entry(p_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdo000
            #add-point:ON CHANGE rtdo000 name="input.g.rtdo000"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdounit
            #add-point:BEFORE FIELD rtdounit name="input.b.rtdounit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdounit
            
            #add-point:AFTER FIELD rtdounit name="input.a.rtdounit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdounit
            #add-point:ON CHANGE rtdounit name="input.g.rtdounit"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdo001
            #add-point:BEFORE FIELD rtdo001 name="input.b.rtdo001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdo001
            
            #add-point:AFTER FIELD rtdo001 name="input.a.rtdo001"
            LET g_rtdo_m.l_imaal003 = ''
            LET g_rtdo_m.l_imaal004 = ''
            IF NOT cl_null(g_rtdo_m.rtdo001) THEN 
               IF g_rtdo_m.rtdo001 != g_rtdo_m_o.rtdo001 OR cl_null(g_rtdo_m_o.rtdo001) THEN
                  IF NOT artt310_rtdo001_chk() THEN
                     LET g_rtdo_m.rtdo001 = g_rtdo_m_o.rtdo001
                     NEXT FIELD CURRENT
                  END IF
                  #取得商品條碼、單位(主商品)
                  CALL artt310_get_imaa014(g_rtdo_m.rtdo001) RETURNING g_rtdo_m.rtdo003,g_rtdo_m.rtdo004
                  DISPLAY BY NAME g_rtdo_m.rtdo003,g_rtdo_m.rtdo004
                  #取狀態碼
                  CALL artt310_get_rtdoacti()
                  CALL artt310_rtdo001_default()
               END IF                              
            END IF
            #取得商品條碼、單位(主商品)
            CALL artt310_get_imaa014(g_rtdo_m.rtdo001) RETURNING g_rtdo_m.rtdo003,g_rtdo_m.rtdo004
            DISPLAY BY NAME g_rtdo_m.rtdo003,g_rtdo_m.rtdo004
            LET g_rtdo_m_o.rtdo003 = g_rtdo_m.rtdo003 #商品條碼
            LET g_rtdo_m_o.rtdo001 = g_rtdo_m.rtdo001 #商品編號
            
            #申請類別為U.修改時,重新抓取商品條碼,單位(以商品主檔為主)
            LET l_rtdo003 = ''
            LET l_rtdo004 = ''            
            SELECT rtdm003,rtdm004 INTO l_rtdo003,l_rtdo004
              FROM rtdm_t 
             WHERE rtdment = g_enterprise
               AND rtdm001 = g_rtdo_m.rtdo001
            IF g_rtdo_m.rtdo000 = 'U' THEN
               IF (g_rtdo_m.rtdo003 <> l_rtdo003) OR (g_rtdo_m.rtdo004 <> l_rtdo004) THEN
			         #記錄錯誤訊息提示
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'art-00562'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
			         LET g_errparam.replace[1] = g_rtdo_m.rtdo001 #商品編號
                  CALL cl_err()                  
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdo001
            #add-point:ON CHANGE rtdo001 name="input.g.rtdo001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdo003
            #add-point:BEFORE FIELD rtdo003 name="input.b.rtdo003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdo003
            
            #add-point:AFTER FIELD rtdo003 name="input.a.rtdo003"
            LET g_rtdo_m.l_imaal003 = ''
            LET g_rtdo_m.l_imaal004 = ''
            IF NOT cl_null(g_rtdo_m.rtdo003) THEN
               IF g_rtdo_m.rtdo003 != g_rtdo_m_o.rtdo003 OR cl_null(g_rtdo_m_o.rtdo003) THEN                  
                  IF NOT artt310_rtdo003_chk() THEN
                     LET g_rtdo_m.rtdo003 = g_rtdo_m_o.rtdo003
                     NEXT FIELD CURRENT
                  END IF                  
                  CALL artt310_get_imaa001(g_rtdo_m.rtdo003) RETURNING g_rtdo_m.rtdo001
                  DISPLAY BY NAME g_rtdo_m.rtdo001
                  IF NOT artt310_rtdo001_chk() THEN
                     LET g_rtdo_m.rtdo003 = g_rtdo_m_o.rtdo003
                     LET g_rtdo_m.rtdo001 = g_rtdo_m_o.rtdo001
                     NEXT FIELD CURRENT
                  END IF
                  CALL artt310_rtdo001_default()                               
               END IF              
            END IF
            CALL artt310_get_imaa001(g_rtdo_m.rtdo003) RETURNING g_rtdo_m.rtdo001
            DISPLAY BY NAME g_rtdo_m.rtdo001
            CALL artt310_get_imaa014(g_rtdo_m.rtdo001) RETURNING g_rtdo_m.rtdo003,g_rtdo_m.rtdo004
            DISPLAY BY NAME g_rtdo_m.rtdo003,g_rtdo_m.rtdo004
            LET g_rtdo_m_o.rtdo003 = g_rtdo_m.rtdo003 #商品條碼 
            LET g_rtdo_m_o.rtdo001 = g_rtdo_m.rtdo001 #商品編號
            
            #申請類別為U.修改時,重新抓取商品條碼,單位(以商品主檔為主)
            LET l_rtdo003 = ''
            LET l_rtdo004 = ''
            SELECT rtdm003,rtdm004 INTO l_rtdo003,l_rtdo004
              FROM rtdm_t 
             WHERE rtdment = g_enterprise
               AND rtdm001 = g_rtdo_m.rtdo001
            IF g_rtdo_m.rtdo000 = 'U' THEN
               IF (g_rtdo_m.rtdo003 <> l_rtdo003) OR (g_rtdo_m.rtdo004 <> l_rtdo004) THEN
			         #記錄錯誤訊息提示
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'art-00562'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
			         LET g_errparam.replace[1] = g_rtdo_m.rtdo001 #商品編號
                  CALL cl_err()                  
               END IF
            END IF            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdo003
            #add-point:ON CHANGE rtdo003 name="input.g.rtdo003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdoacti
            #add-point:BEFORE FIELD rtdoacti name="input.b.rtdoacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdoacti
            
            #add-point:AFTER FIELD rtdoacti name="input.a.rtdoacti"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdoacti
            #add-point:ON CHANGE rtdoacti name="input.g.rtdoacti"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdostus
            #add-point:BEFORE FIELD rtdostus name="input.b.rtdostus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdostus
            
            #add-point:AFTER FIELD rtdostus name="input.a.rtdostus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdostus
            #add-point:ON CHANGE rtdostus name="input.g.rtdostus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.rtdosite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdosite
            #add-point:ON ACTION controlp INFIELD rtdosite name="input.c.rtdosite"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtdo_m.rtdosite             #給予default值
            #給予arg
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdosite',g_rtdo_m.rtdosite,'i')
            CALL q_ooef001_24()                                #呼叫開窗
            LET g_rtdo_m.rtdosite = g_qryparam.return1              
            DISPLAY g_rtdo_m.rtdosite TO rtdosite
            CALL s_desc_get_department_desc(g_rtdo_m.rtdosite)
               RETURNING g_rtdo_m.rtdosite_desc
            NEXT FIELD rtdosite                         #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.rtdodocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdodocdt
            #add-point:ON ACTION controlp INFIELD rtdodocdt name="input.c.rtdodocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtdodocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdodocno
            #add-point:ON ACTION controlp INFIELD rtdodocno name="input.c.rtdodocno"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtdo_m.rtdodocno             #給予default值
            LET l_ooef004 = ''
            SELECT ooef004 INTO l_ooef004
              FROM ooef_t
             WHERE ooefent = g_enterprise
               AND ooef001 = g_rtdo_m.rtdosite
            LET g_qryparam.arg1 = l_ooef004
            LET g_qryparam.arg2 = g_prog
            CALL q_ooba002_1()
            LET g_rtdo_m.rtdodocno = g_qryparam.return1              
            DISPLAY g_rtdo_m.rtdodocno TO rtdodocno
            NEXT FIELD rtdodocno
            #END add-point
 
 
         #Ctrlp:input.c.rtdo000
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdo000
            #add-point:ON ACTION controlp INFIELD rtdo000 name="input.c.rtdo000"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtdounit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdounit
            #add-point:ON ACTION controlp INFIELD rtdounit name="input.c.rtdounit"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtdo001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdo001
            #add-point:ON ACTION controlp INFIELD rtdo001 name="input.c.rtdo001"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rtdo_m.rtdo001             #給予default值
            LET g_qryparam.default2 = "" #g_rtdo_m.imaa009 #產品分類
            LET g_qryparam.default3 = "" #g_rtdo_m.imaa014 #產品條碼編號
            LET g_qryparam.default4 = "" #g_rtdo_m.imaal003 #品名
            LET g_qryparam.default5 = "" #g_rtdo_m.imaal004 #規格
            LET g_qryparam.default6 = "" #g_rtdo_m.rtaxl003 #說明
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_imaa001_20()                                #呼叫開窗

            LET g_rtdo_m.rtdo001 = g_qryparam.return1              
            #LET g_rtdo_m.imaa009 = g_qryparam.return2 
            #LET g_rtdo_m.imaa014 = g_qryparam.return3 
            #LET g_rtdo_m.imaal003 = g_qryparam.return4 
            #LET g_rtdo_m.imaal004 = g_qryparam.return5 
            #LET g_rtdo_m.rtaxl003 = g_qryparam.return6 
            DISPLAY g_rtdo_m.rtdo001 TO rtdo001              #
            #DISPLAY g_rtdo_m.imaa009 TO imaa009 #產品分類
            #DISPLAY g_rtdo_m.imaa014 TO imaa014 #產品條碼編號
            #DISPLAY g_rtdo_m.imaal003 TO imaal003 #品名
            #DISPLAY g_rtdo_m.imaal004 TO imaal004 #規格
            #DISPLAY g_rtdo_m.rtaxl003 TO rtaxl003 #說明
            NEXT FIELD rtdo001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.rtdo003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdo003
            #add-point:ON ACTION controlp INFIELD rtdo003 name="input.c.rtdo003"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtdo_m.rtdo003
            CALL q_imaa014()
            LET g_rtdo_m.rtdo003 = g_qryparam.return1              
            DISPLAY g_rtdo_m.rtdo003 TO rtdo003              
            NEXT FIELD rtdo003
            #END add-point
 
 
         #Ctrlp:input.c.rtdoacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdoacti
            #add-point:ON ACTION controlp INFIELD rtdoacti name="input.c.rtdoacti"
            
            #END add-point
 
 
         #Ctrlp:input.c.rtdostus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdostus
            #add-point:ON ACTION controlp INFIELD rtdostus name="input.c.rtdostus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_rtdo_m.rtdodocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               LET g_rtdo_m.rtdounit = g_rtdo_m.rtdosite
               
               CALL s_aooi200_gen_docno(g_rtdo_m.rtdosite,g_rtdo_m.rtdodocno,g_rtdo_m.rtdodocdt,g_prog)
                  RETURNING l_success,g_rtdo_m.rtdodocno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_rtdo_m.rtdodocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD rtdodocno
               END IF
               #end add-point
               
               INSERT INTO rtdo_t (rtdoent,rtdosite,rtdodocdt,rtdodocno,rtdo000,rtdounit,rtdo001,rtdo002, 
                   rtdo003,rtdo004,rtdoacti,rtdostus,rtdoownid,rtdoowndp,rtdocrtid,rtdocrtdp,rtdocrtdt, 
                   rtdomodid,rtdomoddt,rtdocnfid,rtdocnfdt)
               VALUES (g_enterprise,g_rtdo_m.rtdosite,g_rtdo_m.rtdodocdt,g_rtdo_m.rtdodocno,g_rtdo_m.rtdo000, 
                   g_rtdo_m.rtdounit,g_rtdo_m.rtdo001,g_rtdo_m.rtdo002,g_rtdo_m.rtdo003,g_rtdo_m.rtdo004, 
                   g_rtdo_m.rtdoacti,g_rtdo_m.rtdostus,g_rtdo_m.rtdoownid,g_rtdo_m.rtdoowndp,g_rtdo_m.rtdocrtid, 
                   g_rtdo_m.rtdocrtdp,g_rtdo_m.rtdocrtdt,g_rtdo_m.rtdomodid,g_rtdo_m.rtdomoddt,g_rtdo_m.rtdocnfid, 
                   g_rtdo_m.rtdocnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_rtdo_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               #申請類別為U.修改時,需預設帶出主檔單身資料
               IF g_rtdo_m.rtdo000 = 'U' THEN
                  CALL cl_err_collect_init()
                  CALL artt310_carry_detail() RETURNING l_success
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                     NEXT FIELD CURRENT
                  END IF
                  CALL cl_err_collect_show()
               END IF               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL artt310_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL artt310_b_fill()
                  CALL artt310_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL artt310_rtdo_t_mask_restore('restore_mask_o')
               
               UPDATE rtdo_t SET (rtdosite,rtdodocdt,rtdodocno,rtdo000,rtdounit,rtdo001,rtdo002,rtdo003, 
                   rtdo004,rtdoacti,rtdostus,rtdoownid,rtdoowndp,rtdocrtid,rtdocrtdp,rtdocrtdt,rtdomodid, 
                   rtdomoddt,rtdocnfid,rtdocnfdt) = (g_rtdo_m.rtdosite,g_rtdo_m.rtdodocdt,g_rtdo_m.rtdodocno, 
                   g_rtdo_m.rtdo000,g_rtdo_m.rtdounit,g_rtdo_m.rtdo001,g_rtdo_m.rtdo002,g_rtdo_m.rtdo003, 
                   g_rtdo_m.rtdo004,g_rtdo_m.rtdoacti,g_rtdo_m.rtdostus,g_rtdo_m.rtdoownid,g_rtdo_m.rtdoowndp, 
                   g_rtdo_m.rtdocrtid,g_rtdo_m.rtdocrtdp,g_rtdo_m.rtdocrtdt,g_rtdo_m.rtdomodid,g_rtdo_m.rtdomoddt, 
                   g_rtdo_m.rtdocnfid,g_rtdo_m.rtdocnfdt)
                WHERE rtdoent = g_enterprise AND rtdodocno = g_rtdodocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "rtdo_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL artt310_rtdo_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_rtdo_m_t)
               LET g_log2 = util.JSON.stringify(g_rtdo_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_rtdodocno_t = g_rtdo_m.rtdodocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="artt310.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_rtdp_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rtdp_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL artt310_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_rtdp_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN artt310_cl USING g_enterprise,g_rtdo_m.rtdodocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN artt310_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE artt310_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_rtdp_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rtdp_d[l_ac].rtdp002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_rtdp_d_t.* = g_rtdp_d[l_ac].*  #BACKUP
               LET g_rtdp_d_o.* = g_rtdp_d[l_ac].*  #BACKUP
               CALL artt310_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL artt310_set_no_entry_b(l_cmd)
               IF NOT artt310_lock_b("rtdp_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH artt310_bcl INTO g_rtdp_d[l_ac].rtdpsite,g_rtdp_d[l_ac].rtdpunit,g_rtdp_d[l_ac].rtdp002, 
                      g_rtdp_d[l_ac].rtdp004,g_rtdp_d[l_ac].rtdp001,g_rtdp_d[l_ac].rtdp003,g_rtdp_d[l_ac].rtdp005, 
                      g_rtdp_d[l_ac].rtdp006,g_rtdp_d[l_ac].rtdp007,g_rtdp_d[l_ac].rtdp008,g_rtdp_d[l_ac].rtdp009, 
                      g_rtdp_d[l_ac].rtdp010,g_rtdp_d[l_ac].rtdp011,g_rtdp_d[l_ac].rtdp012
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_rtdp_d_t.rtdp002,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rtdp_d_mask_o[l_ac].* =  g_rtdp_d[l_ac].*
                  CALL artt310_rtdp_t_mask()
                  LET g_rtdp_d_mask_n[l_ac].* =  g_rtdp_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL artt310_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rtdp_d[l_ac].* TO NULL 
            INITIALIZE g_rtdp_d_t.* TO NULL 
            INITIALIZE g_rtdp_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_rtdp_d[l_ac].rtdp006 = "1"
      LET g_rtdp_d[l_ac].rtdp007 = "1"
      LET g_rtdp_d[l_ac].rtdp008 = "0"
      LET g_rtdp_d[l_ac].rtdp009 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            #主商品編號
            LET g_rtdp_d[l_ac].rtdp001 = g_rtdo_m.rtdo001
            LET g_rtdp_d[l_ac].rtdpsite = g_rtdo_m.rtdosite
            LET g_rtdp_d[l_ac].rtdpunit = g_rtdo_m.rtdounit
                 
            #項次
            SELECT MAX(rtdp002) INTO g_rtdp_d[l_ac].rtdp002
              FROM rtdo_t,rtdp_t
             WHERE rtdoent = rtdpent
               AND rtdodocno = rtdpdocno
               AND rtdpent = g_enterprise
               AND rtdp001 = g_rtdo_m.rtdo001
               AND rtdostus = 'N'
            IF g_rtdp_d[l_ac].rtdp002 IS NULL THEN
               LET g_rtdp_d[l_ac].rtdp002 = 0
            END IF
            CALL cl_get_para(g_enterprise,g_site,'E-BAS-0008') RETURNING l_ln
            IF cl_null(l_ln) OR l_ln = 0 THEN 
               LET l_ln = 1 
            END IF
            LET g_rtdp_d[l_ac].rtdp002 = g_rtdp_d[l_ac].rtdp002 + l_ln
            
            #生效日期
            LET g_rtdp_d[l_ac].rtdp011 = g_today
            #end add-point
            LET g_rtdp_d_t.* = g_rtdp_d[l_ac].*     #新輸入資料
            LET g_rtdp_d_o.* = g_rtdp_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL artt310_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL artt310_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rtdp_d[li_reproduce_target].* = g_rtdp_d[li_reproduce].*
 
               LET g_rtdp_d[li_reproduce_target].rtdp002 = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM rtdp_t 
             WHERE rtdpent = g_enterprise AND rtdpdocno = g_rtdo_m.rtdodocno
 
               AND rtdp002 = g_rtdp_d[l_ac].rtdp002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtdo_m.rtdodocno
               LET gs_keys[2] = g_rtdp_d[g_detail_idx].rtdp002
               CALL artt310_insert_b('rtdp_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_rtdp_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rtdp_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL artt310_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rtdo_m.rtdodocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_rtdp_d_t.rtdp002
 
            
               #刪除同層單身
               IF NOT artt310_delete_b('rtdp_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt310_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT artt310_key_delete_b(gs_keys,'rtdp_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE artt310_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE artt310_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_rtdp_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rtdp_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp002
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtdp_d[l_ac].rtdp002,"0","0","","","azz-00079",1) THEN
               NEXT FIELD rtdp002
            END IF 
 
 
 
            #add-point:AFTER FIELD rtdp002 name="input.a.page1.rtdp002"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_rtdo_m.rtdodocno IS NOT NULL AND g_rtdp_d[g_detail_idx].rtdp002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rtdo_m.rtdodocno != g_rtdodocno_t OR g_rtdp_d[g_detail_idx].rtdp002 != g_rtdp_d_t.rtdp002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rtdp_t WHERE "||"rtdpent = '" ||g_enterprise|| "' AND "||"rtdpdocno = '"||g_rtdo_m.rtdodocno ||"' AND "|| "rtdp002 = '"||g_rtdp_d[g_detail_idx].rtdp002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp002
            #add-point:BEFORE FIELD rtdp002 name="input.b.page1.rtdp002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdp002
            #add-point:ON CHANGE rtdp002 name="input.g.page1.rtdp002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp004
            #add-point:BEFORE FIELD rtdp004 name="input.b.page1.rtdp004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp004
            
            #add-point:AFTER FIELD rtdp004 name="input.a.page1.rtdp004"
            LET g_rtdp_d[l_ac].rtdp003_desc= ''           #品名
            LET g_rtdp_d[l_ac].rtdp003_desc_desc  = ''    #規格
			   LET g_rtdp_d[l_ac].rtdp005_desc  = ''         #單位
            IF NOT cl_null(g_rtdp_d[l_ac].rtdp004) THEN 
               IF g_rtdp_d[l_ac].rtdp004 != g_rtdp_d_o.rtdp004 OR cl_null(g_rtdp_d_o.rtdp004) THEN 
                  IF NOT artt310_rtdp004_chk() THEN  
                     LET g_rtdp_d[l_ac].rtdp003 = g_rtdp_d_o.rtdp003
                     LET g_rtdp_d[l_ac].rtdp004 = g_rtdp_d_o.rtdp004
					      LET g_rtdp_d[l_ac].rtdp005 = g_rtdp_d_o.rtdp005
                     #取得商品編號相關資訊
                     CALL artt310_rtdp003_default()                      
                     NEXT FIELD CURRENT
                  END IF
                  #檢查子商品輸入後是否會造成無窮迴圈
                  CALL s_artm310_rtdn003_loop_chk(g_rtdo_m.rtdo001,g_rtdp_d[l_ac].rtdp003,NULL) RETURNING l_success
                  IF l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'art-00554'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     LET g_errparam.replace [1] = g_rtdp_d[l_ac].rtdp003
                     CALL cl_err()     
                     
                     LET g_rtdp_d[l_ac].rtdp003 = g_rtdp_d_o.rtdp003
                     LET g_rtdp_d[l_ac].rtdp004 = g_rtdp_d_o.rtdp004
					      LET g_rtdp_d[l_ac].rtdp005 = g_rtdp_d_o.rtdp005
                     #取得商品編號相關資訊
                     CALL artt310_rtdp003_default() 
                     NEXT FIELD CURRENT                    
                  END IF                  
				      #取商品編號
				      CALL artt310_get_imaa001(g_rtdp_d[l_ac].rtdp004) RETURNING g_rtdp_d[l_ac].rtdp003
                  #取得商品條碼、單位(主商品)
                  CALL artt310_get_imaa014(g_rtdp_d[l_ac].rtdp003) RETURNING g_rtdp_d[l_ac].rtdp004,g_rtdp_d[l_ac].rtdp005
                  #取得商品編號相關資訊
                  CALL artt310_rtdp003_default()                 
               END IF             
            END IF
				#取商品編號
				CALL artt310_get_imaa001(g_rtdp_d[l_ac].rtdp004) RETURNING g_rtdp_d[l_ac].rtdp003            
				#取得商品條碼、單位(主商品)
            CALL artt310_get_imaa014(g_rtdp_d[l_ac].rtdp003) RETURNING g_rtdp_d[l_ac].rtdp004,g_rtdp_d[l_ac].rtdp005            
            LET g_rtdp_d_o.rtdp003 = g_rtdp_d[l_ac].rtdp003
            LET g_rtdp_d_o.rtdp004 = g_rtdp_d[l_ac].rtdp004
			   LET g_rtdp_d_o.rtdp005 = g_rtdp_d[l_ac].rtdp005
            #取得商品編號相關資訊
            CALL artt310_rtdp003_default()
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdp004
            #add-point:ON CHANGE rtdp004 name="input.g.page1.rtdp004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp003
            
            #add-point:AFTER FIELD rtdp003 name="input.a.page1.rtdp003"
            LET g_rtdp_d[l_ac].rtdp003_desc = ''         #品名
            LET g_rtdp_d[l_ac].rtdp003_desc_desc = ''    #規格
			   LET g_rtdp_d[l_ac].rtdp005_desc  = ''        #單位
            IF NOT cl_null(g_rtdp_d[l_ac].rtdp003) THEN 
               IF g_rtdp_d[l_ac].rtdp003 != g_rtdp_d_o.rtdp003 OR cl_null(g_rtdp_d_o.rtdp003) THEN 
                  IF NOT artt310_rtdp003_chk() THEN  
                     LET g_rtdp_d[l_ac].rtdp003 = g_rtdp_d_o.rtdp003
                     LET g_rtdp_d[l_ac].rtdp004 = g_rtdp_d_o.rtdp004
					      LET g_rtdp_d[l_ac].rtdp005 = g_rtdp_d_o.rtdp005
                     #取得商品編號相關資訊
                     CALL artt310_rtdp003_default()                      
                     NEXT FIELD rtdp003
                  END IF
                  #檢查子商品輸入後是否會造成無窮迴圈
                  CALL s_artm310_rtdn003_loop_chk(g_rtdo_m.rtdo001,g_rtdp_d[l_ac].rtdp003,NULL) RETURNING l_success
                  IF l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'art-00554'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     LET g_errparam.replace [1] = g_rtdp_d[l_ac].rtdp003
                     CALL cl_err()     
                     
                     LET g_rtdp_d[l_ac].rtdp003 = g_rtdp_d_o.rtdp003
                     LET g_rtdp_d[l_ac].rtdp004 = g_rtdp_d_o.rtdp004
					      LET g_rtdp_d[l_ac].rtdp005 = g_rtdp_d_o.rtdp005
                     #取得商品編號相關資訊
                     CALL artt310_rtdp003_default() 
                     NEXT FIELD CURRENT                    
                  END IF                  
                  #取得商品條碼、單位(主商品)
                  CALL artt310_get_imaa014(g_rtdp_d[l_ac].rtdp003) RETURNING g_rtdp_d[l_ac].rtdp004,g_rtdp_d[l_ac].rtdp005
                  #取得商品編號相關資訊
                  CALL artt310_rtdp003_default()                 
               END IF             
            END IF
            CALL artt310_get_imaa014(g_rtdp_d[l_ac].rtdp003) RETURNING g_rtdp_d[l_ac].rtdp004,g_rtdp_d[l_ac].rtdp005            
            LET g_rtdp_d_o.rtdp003 = g_rtdp_d[l_ac].rtdp003
            LET g_rtdp_d_o.rtdp004 = g_rtdp_d[l_ac].rtdp004
			   LET g_rtdp_d_o.rtdp005 = g_rtdp_d[l_ac].rtdp005
            #取得商品編號相關資訊
            CALL artt310_rtdp003_default()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp003
            #add-point:BEFORE FIELD rtdp003 name="input.b.page1.rtdp003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdp003
            #add-point:ON CHANGE rtdp003 name="input.g.page1.rtdp003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp006
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtdp_d[l_ac].rtdp006,"0","0","","","azz-00079",1) THEN
               NEXT FIELD rtdp006
            END IF 
 
 
 
            #add-point:AFTER FIELD rtdp006 name="input.a.page1.rtdp006"
            IF NOT cl_null(g_rtdp_d[l_ac].rtdp006) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp006
            #add-point:BEFORE FIELD rtdp006 name="input.b.page1.rtdp006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdp006
            #add-point:ON CHANGE rtdp006 name="input.g.page1.rtdp006"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp007
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtdp_d[l_ac].rtdp007,"0","0","","","azz-00079",1) THEN
               NEXT FIELD rtdp007
            END IF 
 
 
 
            #add-point:AFTER FIELD rtdp007 name="input.a.page1.rtdp007"
            IF NOT cl_null(g_rtdp_d[l_ac].rtdp007) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp007
            #add-point:BEFORE FIELD rtdp007 name="input.b.page1.rtdp007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdp007
            #add-point:ON CHANGE rtdp007 name="input.g.page1.rtdp007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp008
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtdp_d[l_ac].rtdp008,"0","1","","","azz-00079",1) THEN
               NEXT FIELD rtdp008
            END IF 
 
 
 
            #add-point:AFTER FIELD rtdp008 name="input.a.page1.rtdp008"
            IF NOT cl_null(g_rtdp_d[l_ac].rtdp008) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp008
            #add-point:BEFORE FIELD rtdp008 name="input.b.page1.rtdp008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdp008
            #add-point:ON CHANGE rtdp008 name="input.g.page1.rtdp008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp009
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtdp_d[l_ac].rtdp009,"0","1","","","azz-00079",1) THEN
               NEXT FIELD rtdp009
            END IF 
 
 
 
            #add-point:AFTER FIELD rtdp009 name="input.a.page1.rtdp009"
            IF NOT cl_null(g_rtdp_d[l_ac].rtdp009) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp009
            #add-point:BEFORE FIELD rtdp009 name="input.b.page1.rtdp009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdp009
            #add-point:ON CHANGE rtdp009 name="input.g.page1.rtdp009"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp010
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_rtdp_d[l_ac].rtdp010,"0","0","","","azz-00079",1) THEN
               NEXT FIELD rtdp010
            END IF 
 
 
 
            #add-point:AFTER FIELD rtdp010 name="input.a.page1.rtdp010"
            IF NOT cl_null(g_rtdp_d[l_ac].rtdp010) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp010
            #add-point:BEFORE FIELD rtdp010 name="input.b.page1.rtdp010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdp010
            #add-point:ON CHANGE rtdp010 name="input.g.page1.rtdp010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp011
            #add-point:BEFORE FIELD rtdp011 name="input.b.page1.rtdp011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp011
            
            #add-point:AFTER FIELD rtdp011 name="input.a.page1.rtdp011"
            IF NOT cl_null(g_rtdp_d[l_ac].rtdp011) THEN
               IF g_rtdp_d[l_ac].rtdp011 != g_rtdp_d_o.rtdp011 OR cl_null(g_rtdp_d_o.rtdp011) THEN 
                  IF NOT cl_null(g_rtdp_d[l_ac].rtdp012) AND g_rtdp_d[l_ac].rtdp011 > g_rtdp_d[l_ac].rtdp012 THEN
                     LET g_rtdp_d[l_ac].rtdp011 = g_rtdp_d_o.rtdp011                  
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = ""
                     LET g_errparam.code   = "art-00545"
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF               
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdp011
            #add-point:ON CHANGE rtdp011 name="input.g.page1.rtdp011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtdp012
            #add-point:BEFORE FIELD rtdp012 name="input.b.page1.rtdp012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtdp012
            
            #add-point:AFTER FIELD rtdp012 name="input.a.page1.rtdp012"
            IF NOT cl_null(g_rtdp_d[l_ac].rtdp012) THEN
               IF g_rtdp_d[l_ac].rtdp012 != g_rtdp_d_o.rtdp012 OR cl_null(g_rtdp_d_o.rtdp012) THEN 
                  IF NOT cl_null(g_rtdp_d[l_ac].rtdp011) AND g_rtdp_d[l_ac].rtdp011 > g_rtdp_d[l_ac].rtdp012 THEN
                     LET g_rtdp_d[l_ac].rtdp012 = g_rtdp_d_o.rtdp012
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = ""
                     LET g_errparam.code   = "art-00546"
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtdp012
            #add-point:ON CHANGE rtdp012 name="input.g.page1.rtdp012"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.rtdp002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp002
            #add-point:ON ACTION controlp INFIELD rtdp002 name="input.c.page1.rtdp002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtdp004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp004
            #add-point:ON ACTION controlp INFIELD rtdp004 name="input.c.page1.rtdp004"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtdp_d[l_ac].rtdp004             #給予default值
            #給予arg
            CALL q_imaa014()                                #呼叫開窗
            LET g_rtdp_d[l_ac].rtdp004 = g_qryparam.return1              
            DISPLAY g_rtdp_d[l_ac].rtdp004 TO rtdp004              #
            NEXT FIELD rtdp004                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtdp003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp003
            #add-point:ON ACTION controlp INFIELD rtdp003 name="input.c.page1.rtdp003"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_rtdp_d[l_ac].rtdp003             #給予default值
            #給予arg
            CALL q_imaa001_17()                                #呼叫開窗
            LET g_rtdp_d[l_ac].rtdp003 = g_qryparam.return1              
            DISPLAY g_rtdp_d[l_ac].rtdp003 TO rtdp003
            NEXT FIELD rtdp003                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtdp006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp006
            #add-point:ON ACTION controlp INFIELD rtdp006 name="input.c.page1.rtdp006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtdp007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp007
            #add-point:ON ACTION controlp INFIELD rtdp007 name="input.c.page1.rtdp007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtdp008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp008
            #add-point:ON ACTION controlp INFIELD rtdp008 name="input.c.page1.rtdp008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtdp009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp009
            #add-point:ON ACTION controlp INFIELD rtdp009 name="input.c.page1.rtdp009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtdp010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp010
            #add-point:ON ACTION controlp INFIELD rtdp010 name="input.c.page1.rtdp010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtdp011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp011
            #add-point:ON ACTION controlp INFIELD rtdp011 name="input.c.page1.rtdp011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtdp012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtdp012
            #add-point:ON ACTION controlp INFIELD rtdp012 name="input.c.page1.rtdp012"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_rtdp_d[l_ac].* = g_rtdp_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE artt310_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_rtdp_d[l_ac].rtdp002 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_rtdp_d[l_ac].* = g_rtdp_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
 
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL artt310_rtdp_t_mask_restore('restore_mask_o')
      
               UPDATE rtdp_t SET (rtdpdocno,rtdpsite,rtdpunit,rtdp002,rtdp004,rtdp001,rtdp003,rtdp005, 
                   rtdp006,rtdp007,rtdp008,rtdp009,rtdp010,rtdp011,rtdp012) = (g_rtdo_m.rtdodocno,g_rtdp_d[l_ac].rtdpsite, 
                   g_rtdp_d[l_ac].rtdpunit,g_rtdp_d[l_ac].rtdp002,g_rtdp_d[l_ac].rtdp004,g_rtdp_d[l_ac].rtdp001, 
                   g_rtdp_d[l_ac].rtdp003,g_rtdp_d[l_ac].rtdp005,g_rtdp_d[l_ac].rtdp006,g_rtdp_d[l_ac].rtdp007, 
                   g_rtdp_d[l_ac].rtdp008,g_rtdp_d[l_ac].rtdp009,g_rtdp_d[l_ac].rtdp010,g_rtdp_d[l_ac].rtdp011, 
                   g_rtdp_d[l_ac].rtdp012)
                WHERE rtdpent = g_enterprise AND rtdpdocno = g_rtdo_m.rtdodocno 
 
                  AND rtdp002 = g_rtdp_d_t.rtdp002 #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_rtdp_d[l_ac].* = g_rtdp_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtdp_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_rtdp_d[l_ac].* = g_rtdp_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rtdp_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rtdo_m.rtdodocno
               LET gs_keys_bak[1] = g_rtdodocno_t
               LET gs_keys[2] = g_rtdp_d[g_detail_idx].rtdp002
               LET gs_keys_bak[2] = g_rtdp_d_t.rtdp002
               CALL artt310_update_b('rtdp_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL artt310_rtdp_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_rtdp_d[g_detail_idx].rtdp002 = g_rtdp_d_t.rtdp002 
 
                  ) THEN
                  LET gs_keys[01] = g_rtdo_m.rtdodocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_rtdp_d_t.rtdp002
 
                  CALL artt310_key_update_b(gs_keys,'rtdp_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rtdo_m),util.JSON.stringify(g_rtdp_d_t)
               LET g_log2 = util.JSON.stringify(g_rtdo_m),util.JSON.stringify(g_rtdp_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL artt310_unlock_b("rtdp_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_rtdp_d[li_reproduce_target].* = g_rtdp_d[li_reproduce].*
 
               LET g_rtdp_d[li_reproduce_target].rtdp002 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_rtdp_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_rtdp_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
 
{</section>}
 
{<section id="artt310.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            NEXT FIELD rtdosite
            #end add-point  
            NEXT FIELD rtdodocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD rtdpsite
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="artt310.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION artt310_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL artt310_b_fill() #單身填充
      CALL artt310_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL artt310_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   DISPLAY g_vdate TO FORMONLY.l_date   
   CALL artt310_rtdo001_default()
   #end add-point
   
   #遮罩相關處理
   LET g_rtdo_m_mask_o.* =  g_rtdo_m.*
   CALL artt310_rtdo_t_mask()
   LET g_rtdo_m_mask_n.* =  g_rtdo_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rtdo_m.rtdosite,g_rtdo_m.rtdosite_desc,g_rtdo_m.rtdodocdt,g_rtdo_m.rtdodocno,g_rtdo_m.rtdo000, 
       g_rtdo_m.rtdounit,g_rtdo_m.rtdo001,g_rtdo_m.rtdo002,g_rtdo_m.l_imaal003,g_rtdo_m.l_imaal004,g_rtdo_m.l_imaa009, 
       g_rtdo_m.l_imaa009_desc,g_rtdo_m.rtdo003,g_rtdo_m.rtdo004,g_rtdo_m.l_rtdo004_desc,g_rtdo_m.rtdoacti, 
       g_rtdo_m.rtdostus,g_rtdo_m.rtdoownid,g_rtdo_m.rtdoownid_desc,g_rtdo_m.rtdoowndp,g_rtdo_m.rtdoowndp_desc, 
       g_rtdo_m.rtdocrtid,g_rtdo_m.rtdocrtid_desc,g_rtdo_m.rtdocrtdp,g_rtdo_m.rtdocrtdp_desc,g_rtdo_m.rtdocrtdt, 
       g_rtdo_m.rtdomodid,g_rtdo_m.rtdomodid_desc,g_rtdo_m.rtdomoddt,g_rtdo_m.rtdocnfid,g_rtdo_m.rtdocnfid_desc, 
       g_rtdo_m.rtdocnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtdo_m.rtdostus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_rtdp_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL artt310_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="artt310.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION artt310_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="artt310.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION artt310_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE rtdo_t.rtdodocno 
   DEFINE l_oldno     LIKE rtdo_t.rtdodocno 
 
   DEFINE l_master    RECORD LIKE rtdo_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE rtdp_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_rtdo_m.rtdodocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_rtdodocno_t = g_rtdo_m.rtdodocno
 
    
   LET g_rtdo_m.rtdodocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rtdo_m.rtdoownid = g_user
      LET g_rtdo_m.rtdoowndp = g_dept
      LET g_rtdo_m.rtdocrtid = g_user
      LET g_rtdo_m.rtdocrtdp = g_dept 
      LET g_rtdo_m.rtdocrtdt = cl_get_current()
      LET g_rtdo_m.rtdomodid = g_user
      LET g_rtdo_m.rtdomoddt = cl_get_current()
      LET g_rtdo_m.rtdostus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rtdo_m.rtdostus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL artt310_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_rtdo_m.* TO NULL
      INITIALIZE g_rtdp_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL artt310_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL artt310_set_act_visible()   
   CALL artt310_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rtdodocno_t = g_rtdo_m.rtdodocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rtdoent = " ||g_enterprise|| " AND",
                      " rtdodocno = '", g_rtdo_m.rtdodocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL artt310_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL artt310_idx_chk()
   
   LET g_data_owner = g_rtdo_m.rtdoownid      
   LET g_data_dept  = g_rtdo_m.rtdoowndp
   
   #功能已完成,通報訊息中心
   CALL artt310_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="artt310.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION artt310_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE rtdp_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE artt310_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rtdp_t
    WHERE rtdpent = g_enterprise AND rtdpdocno = g_rtdodocno_t
 
    INTO TEMP artt310_detail
 
   #將key修正為調整後   
   UPDATE artt310_detail 
      #更新key欄位
      SET rtdpdocno = g_rtdo_m.rtdodocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO rtdp_t SELECT * FROM artt310_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE artt310_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_rtdodocno_t = g_rtdo_m.rtdodocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="artt310.delete" >}
#+ 資料刪除
PRIVATE FUNCTION artt310_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_rtdo_m.rtdodocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN artt310_cl USING g_enterprise,g_rtdo_m.rtdodocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt310_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE artt310_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE artt310_master_referesh USING g_rtdo_m.rtdodocno INTO g_rtdo_m.rtdosite,g_rtdo_m.rtdodocdt, 
       g_rtdo_m.rtdodocno,g_rtdo_m.rtdo000,g_rtdo_m.rtdounit,g_rtdo_m.rtdo001,g_rtdo_m.rtdo002,g_rtdo_m.rtdo003, 
       g_rtdo_m.rtdo004,g_rtdo_m.rtdoacti,g_rtdo_m.rtdostus,g_rtdo_m.rtdoownid,g_rtdo_m.rtdoowndp,g_rtdo_m.rtdocrtid, 
       g_rtdo_m.rtdocrtdp,g_rtdo_m.rtdocrtdt,g_rtdo_m.rtdomodid,g_rtdo_m.rtdomoddt,g_rtdo_m.rtdocnfid, 
       g_rtdo_m.rtdocnfdt,g_rtdo_m.rtdosite_desc,g_rtdo_m.rtdoownid_desc,g_rtdo_m.rtdoowndp_desc,g_rtdo_m.rtdocrtid_desc, 
       g_rtdo_m.rtdocrtdp_desc,g_rtdo_m.rtdomodid_desc,g_rtdo_m.rtdocnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT artt310_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rtdo_m_mask_o.* =  g_rtdo_m.*
   CALL artt310_rtdo_t_mask()
   LET g_rtdo_m_mask_n.* =  g_rtdo_m.*
   
   CALL artt310_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL artt310_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_rtdodocno_t = g_rtdo_m.rtdodocno
 
 
      DELETE FROM rtdo_t
       WHERE rtdoent = g_enterprise AND rtdodocno = g_rtdo_m.rtdodocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_rtdo_m.rtdodocno,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      IF NOT s_aooi200_del_docno(g_rtdo_m.rtdodocno,g_rtdo_m.rtdodocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM rtdp_t
       WHERE rtdpent = g_enterprise AND rtdpdocno = g_rtdo_m.rtdodocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtdp_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE artt310_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_rtdp_d.clear() 
 
     
      CALL artt310_ui_browser_refresh()  
      #CALL artt310_ui_headershow()  
      #CALL artt310_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL artt310_browser_fill("")
         CALL artt310_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE artt310_cl
 
   #功能已完成,通報訊息中心
   CALL artt310_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="artt310.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION artt310_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_rtdp_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF artt310_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rtdpsite,rtdpunit,rtdp002,rtdp004,rtdp001,rtdp003,rtdp005,rtdp006, 
             rtdp007,rtdp008,rtdp009,rtdp010,rtdp011,rtdp012 ,t1.imaal003 ,t2.imaal004 ,t3.oocal003 FROM rtdp_t", 
                
                     " INNER JOIN rtdo_t ON rtdoent = " ||g_enterprise|| " AND rtdodocno = rtdpdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=rtdp003 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=rtdp003 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent="||g_enterprise||" AND t3.oocal001=rtdp005 AND t3.oocal002='"||g_dlang||"' ",
 
                     " WHERE rtdpent=? AND rtdpdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rtdp_t.rtdp002"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE artt310_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR artt310_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_rtdo_m.rtdodocno
                                               
      FOREACH b_fill_cs INTO g_rtdp_d[l_ac].rtdpsite,g_rtdp_d[l_ac].rtdpunit,g_rtdp_d[l_ac].rtdp002, 
          g_rtdp_d[l_ac].rtdp004,g_rtdp_d[l_ac].rtdp001,g_rtdp_d[l_ac].rtdp003,g_rtdp_d[l_ac].rtdp005, 
          g_rtdp_d[l_ac].rtdp006,g_rtdp_d[l_ac].rtdp007,g_rtdp_d[l_ac].rtdp008,g_rtdp_d[l_ac].rtdp009, 
          g_rtdp_d[l_ac].rtdp010,g_rtdp_d[l_ac].rtdp011,g_rtdp_d[l_ac].rtdp012,g_rtdp_d[l_ac].rtdp003_desc, 
          g_rtdp_d[l_ac].rtdp003_desc_desc,g_rtdp_d[l_ac].rtdp005_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_rtdp_d.deleteElement(g_rtdp_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE artt310_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_rtdp_d.getLength()
      LET g_rtdp_d_mask_o[l_ac].* =  g_rtdp_d[l_ac].*
      CALL artt310_rtdp_t_mask()
      LET g_rtdp_d_mask_n[l_ac].* =  g_rtdp_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="artt310.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION artt310_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM rtdp_t
       WHERE rtdpent = g_enterprise AND
         rtdpdocno = ps_keys_bak[1] AND rtdp002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtdp_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="artt310.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION artt310_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO rtdp_t
                  (rtdpent,
                   rtdpdocno,
                   rtdp002
                   ,rtdpsite,rtdpunit,rtdp004,rtdp001,rtdp003,rtdp005,rtdp006,rtdp007,rtdp008,rtdp009,rtdp010,rtdp011,rtdp012) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rtdp_d[g_detail_idx].rtdpsite,g_rtdp_d[g_detail_idx].rtdpunit,g_rtdp_d[g_detail_idx].rtdp004, 
                       g_rtdp_d[g_detail_idx].rtdp001,g_rtdp_d[g_detail_idx].rtdp003,g_rtdp_d[g_detail_idx].rtdp005, 
                       g_rtdp_d[g_detail_idx].rtdp006,g_rtdp_d[g_detail_idx].rtdp007,g_rtdp_d[g_detail_idx].rtdp008, 
                       g_rtdp_d[g_detail_idx].rtdp009,g_rtdp_d[g_detail_idx].rtdp010,g_rtdp_d[g_detail_idx].rtdp011, 
                       g_rtdp_d[g_detail_idx].rtdp012)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rtdp_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rtdp_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="artt310.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION artt310_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rtdp_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL artt310_rtdp_t_mask_restore('restore_mask_o')
               
      UPDATE rtdp_t 
         SET (rtdpdocno,
              rtdp002
              ,rtdpsite,rtdpunit,rtdp004,rtdp001,rtdp003,rtdp005,rtdp006,rtdp007,rtdp008,rtdp009,rtdp010,rtdp011,rtdp012) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rtdp_d[g_detail_idx].rtdpsite,g_rtdp_d[g_detail_idx].rtdpunit,g_rtdp_d[g_detail_idx].rtdp004, 
                  g_rtdp_d[g_detail_idx].rtdp001,g_rtdp_d[g_detail_idx].rtdp003,g_rtdp_d[g_detail_idx].rtdp005, 
                  g_rtdp_d[g_detail_idx].rtdp006,g_rtdp_d[g_detail_idx].rtdp007,g_rtdp_d[g_detail_idx].rtdp008, 
                  g_rtdp_d[g_detail_idx].rtdp009,g_rtdp_d[g_detail_idx].rtdp010,g_rtdp_d[g_detail_idx].rtdp011, 
                  g_rtdp_d[g_detail_idx].rtdp012) 
         WHERE rtdpent = g_enterprise AND rtdpdocno = ps_keys_bak[1] AND rtdp002 = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtdp_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rtdp_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL artt310_rtdp_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="artt310.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION artt310_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="artt310.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION artt310_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="artt310.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION artt310_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL artt310_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "rtdp_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN artt310_bcl USING g_enterprise,
                                       g_rtdo_m.rtdodocno,g_rtdp_d[g_detail_idx].rtdp002     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "artt310_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="artt310.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION artt310_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE artt310_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="artt310.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION artt310_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("rtdodocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("rtdodocno",TRUE)
      CALL cl_set_comp_entry("rtdodocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   CALL cl_set_comp_entry("rtdosite",TRUE)   #申請組織
   CALL cl_set_comp_entry("rtdo000",TRUE)    #作業方式
   CALL cl_set_comp_entry("rtdo001",TRUE)    #主商品編號
   CALL cl_set_comp_entry("rtdo003",TRUE)    #商品條碼
   CALL cl_set_comp_entry("rtdoacti",TRUE) #資料有效  
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="artt310.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION artt310_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   DEFINE l_cnt   LIKE type_t.num5
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("rtdodocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("rtdodocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("rtdodocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   #申請組織
   IF NOT s_aooi500_comp_entry(g_prog,'rtdosite') OR g_site_flag THEN
      CALL cl_set_comp_entry("rtdosite",FALSE)
   END IF
   
   LET l_cnt = 0
   SELECT COUNT(rtdp002) INTO l_cnt
     FROM rtdp_t
    WHERE rtdpent = g_enterprise
      AND rtdpdocno = g_rtdo_m.rtdodocno
   IF l_cnt >= 1 THEN
      CALL cl_set_comp_entry("rtdo000",FALSE)    #作業方式
      CALL cl_set_comp_entry("rtdo001",FALSE)    #主商品編號
      CALL cl_set_comp_entry("rtdo003",FALSE)    #商品條碼
   END IF
   IF g_rtdo_m.rtdo000 = 'I' THEN
      CALL cl_set_comp_entry("rtdoacti",FALSE) #資料有效
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="artt310.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION artt310_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="artt310.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION artt310_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="artt310.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION artt310_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="artt310.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION artt310_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:1)
   IF g_rtdo_m.rtdostus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF


   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="artt310.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION artt310_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="artt310.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION artt310_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="artt310.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION artt310_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " rtdodocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "rtdo_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rtdp_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="artt310.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION artt310_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   IF g_rtdo_m.rtdostus = 'Y' OR g_rtdo_m.rtdostus = 'X' THEN
      RETURN
   END IF
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_rtdo_m.rtdodocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN artt310_cl USING g_enterprise,g_rtdo_m.rtdodocno
   IF STATUS THEN
      CLOSE artt310_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt310_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE artt310_master_referesh USING g_rtdo_m.rtdodocno INTO g_rtdo_m.rtdosite,g_rtdo_m.rtdodocdt, 
       g_rtdo_m.rtdodocno,g_rtdo_m.rtdo000,g_rtdo_m.rtdounit,g_rtdo_m.rtdo001,g_rtdo_m.rtdo002,g_rtdo_m.rtdo003, 
       g_rtdo_m.rtdo004,g_rtdo_m.rtdoacti,g_rtdo_m.rtdostus,g_rtdo_m.rtdoownid,g_rtdo_m.rtdoowndp,g_rtdo_m.rtdocrtid, 
       g_rtdo_m.rtdocrtdp,g_rtdo_m.rtdocrtdt,g_rtdo_m.rtdomodid,g_rtdo_m.rtdomoddt,g_rtdo_m.rtdocnfid, 
       g_rtdo_m.rtdocnfdt,g_rtdo_m.rtdosite_desc,g_rtdo_m.rtdoownid_desc,g_rtdo_m.rtdoowndp_desc,g_rtdo_m.rtdocrtid_desc, 
       g_rtdo_m.rtdocrtdp_desc,g_rtdo_m.rtdomodid_desc,g_rtdo_m.rtdocnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT artt310_action_chk() THEN
      CLOSE artt310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rtdo_m.rtdosite,g_rtdo_m.rtdosite_desc,g_rtdo_m.rtdodocdt,g_rtdo_m.rtdodocno,g_rtdo_m.rtdo000, 
       g_rtdo_m.rtdounit,g_rtdo_m.rtdo001,g_rtdo_m.rtdo002,g_rtdo_m.l_imaal003,g_rtdo_m.l_imaal004,g_rtdo_m.l_imaa009, 
       g_rtdo_m.l_imaa009_desc,g_rtdo_m.rtdo003,g_rtdo_m.rtdo004,g_rtdo_m.l_rtdo004_desc,g_rtdo_m.rtdoacti, 
       g_rtdo_m.rtdostus,g_rtdo_m.rtdoownid,g_rtdo_m.rtdoownid_desc,g_rtdo_m.rtdoowndp,g_rtdo_m.rtdoowndp_desc, 
       g_rtdo_m.rtdocrtid,g_rtdo_m.rtdocrtid_desc,g_rtdo_m.rtdocrtdp,g_rtdo_m.rtdocrtdp_desc,g_rtdo_m.rtdocrtdt, 
       g_rtdo_m.rtdomodid,g_rtdo_m.rtdomodid_desc,g_rtdo_m.rtdomoddt,g_rtdo_m.rtdocnfid,g_rtdo_m.rtdocnfid_desc, 
       g_rtdo_m.rtdocnfdt
 
   CASE g_rtdo_m.rtdostus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_rtdo_m.rtdostus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      #open皆改為unconfirmed
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      #提交和抽單一開始先無條件關
      CALL cl_set_act_visible("signing,withdraw",FALSE)

      CASE g_rtdo_m.rtdostus
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF

         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed",FALSE)

         #已核准只能顯示確認;其餘應用功能皆隱藏
         WHEN "A"
            CALL cl_set_act_visible("confirmed ",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid",FALSE)

        #保留修改的功能(如作廢)，隱藏其他應用功能
         WHEN "R"
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)

         WHEN "D"
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)

         #送簽中只能顯示抽單;其餘應用功能皆隱藏
         WHEN "W"
            CALL cl_set_act_visible("withdraw",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)

      END CASE
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT artt310_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE artt310_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT artt310_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE artt310_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_rtdo_m.rtdostus = lc_state OR cl_null(lc_state) THEN
      CLOSE artt310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   CALL s_transaction_begin()

   OPEN artt310_cl USING g_enterprise,g_rtdo_m.rtdodocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN artt310_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE artt310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   CALL cl_err_collect_init()
   IF lc_state = 'Y' THEN
      IF NOT s_artt310_conf_chk(g_rtdo_m.rtdodocno) THEN
         CALL cl_err_collect_show()
         CALL s_transaction_end('N','0')   #160816-00068#09 by 08209 add
         RETURN
      ELSE 
         IF NOT cl_ask_confirm('aim-00108') THEN
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')   #160816-00068#09 by 08209 add
            RETURN
         ELSE
            IF NOT s_artt310_conf_upd(g_rtdo_m.rtdodocno) THEN
               CALL s_transaction_end('N','0')
               CALL cl_err_collect_show()
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
               CALL cl_err_collect_show()
            END IF
         END IF
      END IF
   END IF
   
   IF lc_state = 'X' THEN
      IF NOT s_artt310_invalid_chk(g_rtdo_m.rtdodocno) THEN
         CALL cl_err_collect_show()
         CALL s_transaction_end('N','0')   #160816-00068#09 by 08209 add
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00109') THEN
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')   #160816-00068#09 by 08209 add
            RETURN
         ELSE
            IF NOT s_artt310_invalid_upd(g_rtdo_m.rtdodocno)  THEN
               CALL s_transaction_end('N','0')
               CALL cl_err_collect_show()
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
               CALL cl_err_collect_show()
            END IF
         END IF
      END IF
   END IF
   #end add-point
   
   LET g_rtdo_m.rtdomodid = g_user
   LET g_rtdo_m.rtdomoddt = cl_get_current()
   LET g_rtdo_m.rtdostus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE rtdo_t 
      SET (rtdostus,rtdomodid,rtdomoddt) 
        = (g_rtdo_m.rtdostus,g_rtdo_m.rtdomodid,g_rtdo_m.rtdomoddt)     
    WHERE rtdoent = g_enterprise AND rtdodocno = g_rtdo_m.rtdodocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE artt310_master_referesh USING g_rtdo_m.rtdodocno INTO g_rtdo_m.rtdosite,g_rtdo_m.rtdodocdt, 
          g_rtdo_m.rtdodocno,g_rtdo_m.rtdo000,g_rtdo_m.rtdounit,g_rtdo_m.rtdo001,g_rtdo_m.rtdo002,g_rtdo_m.rtdo003, 
          g_rtdo_m.rtdo004,g_rtdo_m.rtdoacti,g_rtdo_m.rtdostus,g_rtdo_m.rtdoownid,g_rtdo_m.rtdoowndp, 
          g_rtdo_m.rtdocrtid,g_rtdo_m.rtdocrtdp,g_rtdo_m.rtdocrtdt,g_rtdo_m.rtdomodid,g_rtdo_m.rtdomoddt, 
          g_rtdo_m.rtdocnfid,g_rtdo_m.rtdocnfdt,g_rtdo_m.rtdosite_desc,g_rtdo_m.rtdoownid_desc,g_rtdo_m.rtdoowndp_desc, 
          g_rtdo_m.rtdocrtid_desc,g_rtdo_m.rtdocrtdp_desc,g_rtdo_m.rtdomodid_desc,g_rtdo_m.rtdocnfid_desc 
 
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_rtdo_m.rtdosite,g_rtdo_m.rtdosite_desc,g_rtdo_m.rtdodocdt,g_rtdo_m.rtdodocno, 
          g_rtdo_m.rtdo000,g_rtdo_m.rtdounit,g_rtdo_m.rtdo001,g_rtdo_m.rtdo002,g_rtdo_m.l_imaal003,g_rtdo_m.l_imaal004, 
          g_rtdo_m.l_imaa009,g_rtdo_m.l_imaa009_desc,g_rtdo_m.rtdo003,g_rtdo_m.rtdo004,g_rtdo_m.l_rtdo004_desc, 
          g_rtdo_m.rtdoacti,g_rtdo_m.rtdostus,g_rtdo_m.rtdoownid,g_rtdo_m.rtdoownid_desc,g_rtdo_m.rtdoowndp, 
          g_rtdo_m.rtdoowndp_desc,g_rtdo_m.rtdocrtid,g_rtdo_m.rtdocrtid_desc,g_rtdo_m.rtdocrtdp,g_rtdo_m.rtdocrtdp_desc, 
          g_rtdo_m.rtdocrtdt,g_rtdo_m.rtdomodid,g_rtdo_m.rtdomodid_desc,g_rtdo_m.rtdomoddt,g_rtdo_m.rtdocnfid, 
          g_rtdo_m.rtdocnfid_desc,g_rtdo_m.rtdocnfdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE artt310_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL artt310_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="artt310.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION artt310_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_rtdp_d.getLength() THEN
         LET g_detail_idx = g_rtdp_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rtdp_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rtdp_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="artt310.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION artt310_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL artt310_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="artt310.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION artt310_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="artt310.status_show" >}
PRIVATE FUNCTION artt310_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="artt310.mask_functions" >}
&include "erp/art/artt310_mask.4gl"
 
{</section>}
 
{<section id="artt310.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION artt310_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL artt310_show()
   CALL artt310_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_rtdo_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_rtdp_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL artt310_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL artt310_ui_headershow()
   CALL artt310_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION artt310_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL artt310_ui_headershow()  
   CALL artt310_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="artt310.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION artt310_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_rtdo_m.rtdodocno
   LET g_pk_array[1].column = 'rtdodocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="artt310.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="artt310.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION artt310_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL artt310_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_rtdo_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="artt310.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION artt310_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#34 add-S
   SELECT rtdostus  INTO g_rtdo_m.rtdostus
     FROM rtdo_t
    WHERE rtdoent = g_enterprise
      AND rtdodocno = g_rtdo_m.rtdodocno

   IF (g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_rtdo_m.rtdostus
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_rtdo_m.rtdodocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL artt310_set_act_visible()
        CALL artt310_set_act_no_visible()
        CALL artt310_show()
        RETURN FALSE
     END IF
   END IF
   #160818-00017#34 add-E
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="artt310.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 取得品類編號
# Memo...........:
# Usage..........: CALL artt310_get_imaa009(p_rtdo001)
#                  RETURNING r_imaa009
# Input parameter: p_rtdo001      商品編號
# Return code....: r_imaa009      品類編號
# Date & Author..: 2015\04\17 By sakura
# Modify.........:
################################################################################
PRIVATE FUNCTION artt310_get_imaa009(p_rtdo001)
DEFINE p_rtdo001      LIKE rtdo_t.rtdo001
DEFINE r_imaa009      LIKE imaa_t.imaa009

   LET r_imaa009 = ''
   SELECT imaa009 INTO r_imaa009 
     FROM imaa_t 
    WHERE imaaent = g_enterprise 
      AND imaa001 = p_rtdo001
              
   RETURN r_imaa009
END FUNCTION

################################################################################
# Descriptions...: 取得商品編號(主商品)
# Memo...........:
# Usage..........: CALL artt310_get_imaa001(p_rtdo003)
#                  RETURNING r_imay001
# Input parameter: p_rtdo003      商品主條碼(主商品)
# Return code....: r_imaa001      商品編號(主商品)
# Date & Author..: 2015/04/27 By sakura
# Modify.........:
################################################################################
PRIVATE FUNCTION artt310_get_imaa001(p_rtdo003)
DEFINE p_rtdo003      LIKE rtdo_t.rtdo003
DEFINE r_imaa001      LIKE imaa_t.imaa001

   LET r_imaa001 = ''
   SELECT imaa001 INTO r_imaa001 
     FROM imaa_t 
    WHERE imaaent = g_enterprise 
      AND imaa014 = p_rtdo003
              
   RETURN r_imaa001
END FUNCTION

################################################################################
# Descriptions...: 取得商品條碼、單位(主商品)
# Memo...........:
# Usage..........: CALL artt310_get_imaa014(p_rtdo001)
#                  RETURNING r_imaa014,r_imay004
# Input parameter: p_rtdo001      商品編號(主商品)
# Return code....: r_imaa014      商品條碼
#                  r_imay004      條碼檔單位
# Date & Author..: 2015/04/27 By sakura
# Modify.........:
################################################################################
PRIVATE FUNCTION artt310_get_imaa014(p_rtdo001)
DEFINE p_rtdo001      LIKE rtdo_t.rtdo001
DEFINE r_imaa014      LIKE imaa_t.imaa014
DEFINE r_imay004      LIKE imay_t.imay004

   LET r_imaa014 = ''
   SELECT imaa014,imay004 INTO r_imaa014,r_imay004
     FROM imaa_t , imay_t
    WHERE imaaent = imayent
      AND imaa014 = imay003
      AND imaaent = g_enterprise 
      AND imaa001 = p_rtdo001
              
   RETURN r_imaa014,r_imay004
END FUNCTION

################################################################################
# Descriptions...: 主商品編號帶出其他欄位
# Memo...........:
# Usage..........: CALL artt310_rtdo001_default()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015/04/27 By sakura
# Modify.........:
################################################################################
PRIVATE FUNCTION artt310_rtdo001_default()
DEFINE l_rtdoacti LIKE rtdo_t.rtdoacti

   #先清空原本帶值欄位資料   
   LET g_rtdo_m.l_imaal003 = ''
   LET g_rtdo_m.l_imaal004 = ''
   LET g_rtdo_m.l_imaa009  = ''
   LET g_rtdo_m.l_imaa009_desc = ''
   LET g_rtdo_m.l_rtdo004_desc = ''
   
   #品名、規格
   CALL s_desc_get_item_desc(g_rtdo_m.rtdo001) RETURNING g_rtdo_m.l_imaal003,g_rtdo_m.l_imaal004
   DISPLAY BY NAME g_rtdo_m.l_imaal003,g_rtdo_m.l_imaal004
   
   #產品分類
   CALL artt310_get_imaa009(g_rtdo_m.rtdo001) RETURNING g_rtdo_m.l_imaa009
   DISPLAY BY NAME g_rtdo_m.l_imaa009
   
   #產品分類說明
   CALL s_desc_get_rtaxl003_desc(g_rtdo_m.l_imaa009) RETURNING g_rtdo_m.l_imaa009_desc
   DISPLAY BY NAME g_rtdo_m.l_imaa009_desc
   
   #單位說明
   CALL s_desc_get_unit_desc(g_rtdo_m.rtdo004) RETURNING g_rtdo_m.l_rtdo004_desc
   DISPLAY BY NAME g_rtdo_m.l_rtdo004_desc
   
   #當申請類別 = U.修改
   IF g_rtdo_m.rtdo000 = 'U' THEN
      SELECT COALESCE(MAX(rtdm002),'0')+1
        INTO g_rtdo_m.rtdo002
        FROM rtdm_t
       WHERE rtdment = g_enterprise
         AND rtdm001 = g_rtdo_m.rtdo001
      DISPLAY BY NAME g_rtdo_m.rtdo002
   END IF   
   
END FUNCTION

################################################################################
# Descriptions...: 子商品編號帶出其他欄位
# Memo...........:
# Usage..........: CALL artt310_rtdp003_default()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015/04/27 By sakura
# Modify.........:
################################################################################
PRIVATE FUNCTION artt310_rtdp003_default()
   #先清空原本帶值欄位資料   
   LET g_rtdp_d[l_ac].rtdp003_desc = ''
   LET g_rtdp_d[l_ac].rtdp003_desc_desc = ''
   LET g_rtdp_d[l_ac].rtdp005_desc = ''
   
   #品名、規格
   CALL s_desc_get_item_desc(g_rtdp_d[l_ac].rtdp003) 
      RETURNING g_rtdp_d[l_ac].rtdp003_desc,g_rtdp_d[l_ac].rtdp003_desc_desc
   
   #單位說明
   CALL s_desc_get_unit_desc(g_rtdp_d[l_ac].rtdp005) 
      RETURNING g_rtdp_d[l_ac].rtdp005_desc
END FUNCTION

################################################################################
# Descriptions...: 主商品編號校驗
# Memo...........:
# Usage..........: CALL artt310_rtdo001_chk()
#                     RETURNING r_success
# Input parameter: 無
# Return code....: r_success      True/False
# Date & Author..: 2015/04/27 By sakura
# Modify.........:
################################################################################
PRIVATE FUNCTION artt310_rtdo001_chk()
DEFINE r_success         LIKE type_t.num5
DEFINE l_cnt             LIKE type_t.num5
DEFINE l_sql             STRING

   LET r_success = TRUE
   
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = g_rtdo_m.rtdo001
   LET g_chkparam.err_str[1] = "aim-00001:art-00691"
   IF NOT cl_chk_exist("v_imaa001") THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #商品編號不可重複在單身
   LET l_cnt = 0
   LET l_sql = "SELECT COUNT(rtdp002)",
               "  FROM rtdp_t",
               " WHERE rtdpent = ",g_enterprise,
               "   AND rtdpdocno = '",g_rtdo_m.rtdodocno,"'",
               "   AND rtdp001 = '",g_rtdo_m.rtdo001,"'"
   PREPARE artt310_rtdo001_chk FROM l_sql
   EXECUTE artt310_rtdo001_chk INTO l_cnt
      
   IF l_cnt >= 1 THEN
      #輸入的主商品編號已經存在單身[組成用量異動明細]中！
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00548'
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
	  LET g_errparam.replace[1] = g_rtdo_m.rtdo001
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #當作業方式 = I.新增
   LET l_cnt = 0
   LET l_sql = "SELECT COUNT(rtdo001)",
               "  FROM rtdo_t",
               " WHERE rtdoent = ",g_enterprise,
               "   AND rtdostus = 'N'",
               "   AND rtdo001 = '",g_rtdo_m.rtdo001,"'"
   PREPARE artt310_rtdo001_chk1 FROM l_sql
   EXECUTE artt310_rtdo001_chk1 INTO l_cnt
   IF l_cnt >= 1 THEN
      #輸入的主商品編號已經存在[未確認]申請單中！
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00550'
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
	  LET g_errparam.replace[1] = g_rtdo_m.rtdo001
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   LET l_cnt = 0
   SELECT COUNT(rtdm001) INTO l_cnt
     FROM rtdm_t
    WHERE rtdment = g_enterprise
      AND rtdm001 = g_rtdo_m.rtdo001
   
   #作業方式 = I.新增 不可以存在[artm310商品組成用量維護作業]中 
   IF g_rtdo_m.rtdo000 = 'I' AND l_cnt >= 1 THEN
      #輸入的主商品編號已存在[artm310商品組成用量維護作業]中！
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00551'
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
	  LET g_errparam.replace[1] = g_rtdo_m.rtdo001
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #作業方式 = U.修改 需存在[artm310商品組成用量維護作業]中
   IF g_rtdo_m.rtdo000 = 'U' AND l_cnt = 0 THEN
      #輸入的主商品編號不存在[artm310商品組成用量異動維護作業]中！
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00549'
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      LET g_errparam.replace[1] = g_rtdo_m.rtdo001
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 商品主條碼校驗
# Memo...........:
# Usage..........: CALL artt310_rtdo003_chk()
#                  RETURNING r_success
# Input parameter: 無
# Return code....: r_success     True/False
# Date & Author..: 2015/04/27 By sakura
# Modify.........:
################################################################################
PRIVATE FUNCTION artt310_rtdo003_chk()
DEFINE r_success         LIKE type_t.num5
DEFINE l_cnt             LIKE type_t.num5

   LET r_success = TRUE
   
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = g_rtdo_m.rtdo003
   IF NOT cl_chk_exist("v_imay003") THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 子商品編號校驗
# Memo...........:
# Usage..........: CALL artt310_rtdp003_chk()
#                     RETURNING r_success
# Input parameter: 無
# Return code....: r_success      True/False
# Date & Author..: 2015/04/27 By sakura
# Modify.........:
################################################################################
PRIVATE FUNCTION artt310_rtdp003_chk()
DEFINE r_success         LIKE type_t.num5
DEFINE l_cnt             LIKE type_t.num5
DEFINE l_sql             STRING

   LET r_success = TRUE
   
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = g_rtdp_d[l_ac].rtdp003
   LET g_chkparam.err_str[1] = "aim-00001:art-00691"
   IF NOT cl_chk_exist("v_imaa001") THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #商品編號不可重複在單頭
   LET l_cnt = 0
   LET l_sql = "SELECT COUNT(rtdo001)",
               "  FROM rtdo_t",
               " WHERE rtdoent = ",g_enterprise,
               "   AND rtdodocno = '",g_rtdo_m.rtdodocno,"'",
               "   AND rtdo001 = '",g_rtdp_d[l_ac].rtdp003,"'"
   PREPARE artt310_rtdp003_chk FROM l_sql
   EXECUTE artt310_rtdp003_chk INTO l_cnt
      
   IF l_cnt = 1 THEN
      #輸入的子商品編號不能與單頭相同！
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00555'
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
	  LET g_errparam.replace[1] = g_rtdp_d[l_ac].rtdp003
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 商品條碼校驗
# Memo...........:
# Usage..........: CALL artt310_rtdp004_chk()
#                  RETURNING r_success
# Input parameter: 無
# Return code....: r_success     True/False
# Date & Author..: 2015/04/27 By sakura
# Modify.........:
################################################################################
PRIVATE FUNCTION artt310_rtdp004_chk()
DEFINE r_success         LIKE type_t.num5
DEFINE l_cnt             LIKE type_t.num5
DEFINE l_sql             STRING

   LET r_success = TRUE
   
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = g_rtdp_d[l_ac].rtdp004
   IF NOT cl_chk_exist("v_imay003") THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   #商品條碼不可重複在單頭
   LET l_cnt = 0
   LET l_sql = "SELECT COUNT(rtdo001)",
               "  FROM rtdo_t",
               " WHERE rtdoent = ",g_enterprise,
               "   AND rtdodocno = '",g_rtdo_m.rtdodocno,"'",
               "   AND rtdo003 = '",g_rtdp_d[l_ac].rtdp004,"'"
   PREPARE artt310_rtdp004_chk FROM l_sql
   EXECUTE artt310_rtdp004_chk INTO l_cnt
      
   IF l_cnt = 1 THEN
      #輸入的商品條碼不能與單頭相同！
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00556'
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
	  LET g_errparam.replace[1] = g_rtdp_d[l_ac].rtdp004
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF   
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 檢查是否為無窮迴圈
# Memo...........: r_success 回傳TRUE時代表會有無窮迴圈
#                : r_success 回傳FALSE時代表沒有無窮迴圈
# Usage..........: CALL artt310_rtdp003_loop_chk(p_rtdp001,p_rtdp003,p_flag)
#                  RETURNING r_success
# Input parameter: p_rtdp001   主商品編號
#                : p_rtdp003   子商品編號
#                : p_flag      是否已跑遞迴
# Return code....: r_success   True/False
# Date & Author..: 2015/04/28 By sakura
# Modify.........:
################################################################################
PRIVATE FUNCTION artt310_rtdp003_loop_chk(p_rtdp001,p_rtdp003,p_flag)
   DEFINE p_rtdp001          LIKE rtdp_t.rtdp001
   DEFINE p_rtdp003          LIKE rtdp_t.rtdp003            #要增加的節點子商品
   DEFINE p_flag             LIKE type_t.chr1               #是否已跑遞迴
   DEFINE l_path_add         DYNAMIC ARRAY OF STRING        #tree要增加的節點底層路徑(check loop)
   DEFINE l_rtdp             DYNAMIC ARRAY OF RECORD
              rtdp003        LIKE rtdp_t.rtdp003
              END RECORD
   DEFINE l_child            INTEGER
   DEFINE l_i                LIKE type_t.num5
   DEFINE l_cnt              LIKE type_t.num5
   DEFINE l_idx              LIKE type_t.num5   
   DEFINE r_success          LIKE type_t.num5      #是否為無窮迴圈Y/N

   #第一次進遞迴
   IF cl_null(p_flag) THEN   
      LET l_idx = 1
      LET l_path_add[l_idx] = p_rtdp003
      #如果主料與元料相同	  
      IF l_path_add[l_idx] = p_rtdp001 THEN 
         LET r_success = TRUE
         RETURN r_success
      END IF
   END IF
   
   LET p_flag = "Y"
   IF cl_null(r_success) THEN
      LET r_success = FALSE
   END IF

   IF NOT cl_null(p_rtdp003) THEN
      LET g_sql = "SELECT UNIQUE rtdn003 ",
                  "  FROM rtdn_t ",
                  " WHERE rtdn001 = '", p_rtdp003 CLIPPED,"'",  
                  " ORDER BY rtdn003"      
      PREPARE artt310_tree_pre FROM g_sql
      DECLARE artt310_tree_cs  CURSOR FOR artt310_tree_pre

      #在FOREACH中直接使用遞迴,資料會錯亂,所以先將資料放到陣列後,在FOR迴圈處理
      LET l_cnt = 1
      CALL l_rtdp.clear()
      FOREACH artt310_tree_cs INTO l_rtdp[l_cnt].*
         IF SQLCA.sqlcode THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.extend = 'FOREACH:'
             LET g_errparam.code = SQLCA.sqlcode
             LET g_errparam.popup = TRUE
             CALL cl_err()
             EXIT FOREACH			 
         END IF
         LET l_cnt = l_cnt + 1
      END FOREACH
      CALL l_rtdp.deleteelement(l_cnt)  #刪除FOREACH最後新增的空白列
      LET l_cnt = l_cnt - 1

      IF l_cnt >0 THEN
         FOR l_i=1 TO l_cnt
            LET l_idx = l_idx + 1
            LET l_path_add[l_idx] = l_rtdp[l_i].rtdp003
            IF l_path_add[l_idx] = p_rtdp001 THEN
               LET r_success = TRUE
               RETURN r_success
            END IF
            #有子節點
            SELECT COUNT(rtdp003) INTO l_child FROM rtdp_t WHERE rtdp001 = l_rtdp[l_i].rtdp003 AND rtdpent = g_enterprise #160905-00007#14 add  rtdpent = g_enterprise
            IF l_child > 0 THEN
               CALL artt310_rtdp003_loop_chk(p_rtdp001,l_rtdp[l_i].rtdp003,p_flag) RETURNING r_success
               IF r_success = TRUE THEN            
                  RETURN r_success 
               END IF       
            END IF
          END FOR
      END IF
   END IF
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 預設帶組成用量明細(rtdn_t)資料
# Memo...........:
# Usage..........: CALL artt310_carry_detail()
#                     RETURNING r_success
# Input parameter: 無
# Return code....: r_success      True/False
# Date & Author..: 2015/04/29 By  sakura
# Modify.........:
################################################################################
PRIVATE FUNCTION artt310_carry_detail()
DEFINE r_success    LIKE type_t.num5
DEFINE l_Sql        STRING
DEFINE l_cnt        LIKE type_t.num5
DEFINE l_rtdp       RECORD #商品組成用量異動單身檔
       rtdpent      LIKE rtdp_t.rtdpent   ,  #企業編號 
       rtdpsite     LIKE rtdp_t.rtdpsite  ,  #營運據點
       rtdpunit     LIKE rtdp_t.rtdpunit  ,  #應用組織
       rtdpdocno    LIKE rtdp_t.rtdpdocno ,  #單據編號
       rtdp001      LIKE rtdp_t.rtdp001   ,  #主商品編號
       rtdp002      LIKE rtdp_t.rtdp002   ,  #項次
       rtdp003      LIKE rtdp_t.rtdp003   ,  #子商品編號
       rtdp004      LIKE rtdp_t.rtdp004   ,  #商品條碼
       rtdp005      LIKE rtdp_t.rtdp005   ,  #單位
       rtdp006      LIKE rtdp_t.rtdp006   ,  #組成用量
       rtdp007      LIKE rtdp_t.rtdp007   ,  #主件底數
       rtdp008      LIKE rtdp_t.rtdp008   ,  #變動損耗率
       rtdp009      LIKE rtdp_t.rtdp009   ,  #固定損耗率
       rtdp010      LIKE rtdp_t.rtdp010   ,  #成本分攤比例
       rtdp011      LIKE rtdp_t.rtdp011   ,  #生效日期時間
       rtdp012      LIKE rtdp_t.rtdp012      #失效日期時間
                    END RECORD
DEFINE l_rtdp004    LIKE rtdp_t.rtdp004      #重抓取的商品條碼                    
DEFINE l_rtdp005    LIKE rtdp_t.rtdp005      #重抓取的單位
   
   LET r_success = TRUE
   IF g_rtdo_m.rtdo000 = 'I' THEN
      RETURN
   END IF
   
   LET l_cnt = 0 
   SELECT COUNT(*) INTO l_cnt FROM rtdp_t
    WHERE rtdpent = g_enterprise
      AND rtdpdocno = g_rtdo_m.rtdodocno
	  
   IF l_cnt = 0 THEN
      LET l_sql = " SELECT rtdnent , rtdn001, rtdn002 , rtdn003 , rtdn004 ,  ",
                  "        rtdn005 , rtdn006 , rtdn007, rtdn008 , rtdn009 ,  ",
                  "        rtdn010 , rtdn011 ,rtdn012",
                  "   FROM rtdn_t ",
                  "  WHERE rtdnent = ",g_enterprise," AND rtdn001 = '",g_rtdo_m.rtdo001,"'"
      DECLARE l_sql_rtdn_cs CURSOR FROM l_sql
      FOREACH l_sql_rtdn_cs INTO l_rtdp.rtdpent ,l_rtdp.rtdp001 ,l_rtdp.rtdp002 ,l_rtdp.rtdp003 ,l_rtdp.rtdp004  ,
	                              l_rtdp.rtdp005 ,l_rtdp.rtdp006 ,l_rtdp.rtdp007 ,l_rtdp.rtdp008 ,l_rtdp.rtdp009  ,
								         l_rtdp.rtdp010 ,l_rtdp.rtdp011 ,l_rtdp.rtdp012
            
			LET l_rtdp.rtdpsite = g_rtdo_m.rtdosite
			LET l_rtdp.rtdpunit = g_rtdo_m.rtdosite
			LET l_rtdp.rtdpdocno = g_rtdo_m.rtdodocno
			
			#重新抓取商品條碼,單位(以商品主檔為主)
			CALL artt310_get_imaa014(l_rtdp.rtdp003) RETURNING l_rtdp004,l_rtdp005
			IF (l_rtdp.rtdp004 <> l_rtdp004) OR (l_rtdp.rtdp005 <> l_rtdp005) THEN
			   LET l_rtdp.rtdp004 = l_rtdp004
			   LET l_rtdp.rtdp005 = l_rtdp005
			   
			   #記錄錯誤訊息提示
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'art-00562'
               LET g_errparam.extend = ""
               LET g_errparam.popup = TRUE
			      LET g_errparam.replace[1] = l_rtdp.rtdp003 #商品編號
               CALL cl_err()			 
			END IF
			
         INSERT INTO rtdp_t (rtdpent ,rtdpsite ,rtdpunit ,rtdpdocno ,rtdp001 ,
			                    rtdp002 ,rtdp003  ,rtdp004  ,rtdp005   ,rtdp006 ,
							        rtdp007 ,rtdp008  ,rtdp009  ,rtdp010   ,rtdp011 ,
							        rtdp012)
			             VALUES(l_rtdp.rtdpent ,l_rtdp.rtdpsite ,l_rtdp.rtdpunit ,l_rtdp.rtdpdocno ,l_rtdp.rtdp001 ,
					              l_rtdp.rtdp002 ,l_rtdp.rtdp003  ,l_rtdp.rtdp004  ,l_rtdp.rtdp005   ,l_rtdp.rtdp006 ,
						    	     l_rtdp.rtdp007 ,l_rtdp.rtdp008  ,l_rtdp.rtdp009  ,l_rtdp.rtdp010   ,l_rtdp.rtdp011 ,
						    	     l_rtdp.rtdp012)								
                      
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "Ins rtdp_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()
            LET r_success = FALSE
         END IF
      END FOREACH
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 帶出[資料有效]值
# Memo...........:
# Usage..........: CALL artt310_get_rtdoacti()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015/04/27 By sakura
# Modify.........:
################################################################################
PRIVATE FUNCTION artt310_get_rtdoacti()
DEFINE l_rtdoacti LIKE rtdo_t.rtdoacti  
   
   #當申請類別 = U.修改
   IF g_rtdo_m.rtdo000 = 'U' THEN
      SELECT rtdmstus
        INTO l_rtdoacti
        FROM rtdm_t
       WHERE rtdment = g_enterprise
         AND rtdm001 = g_rtdo_m.rtdo001
         
      CASE l_rtdoacti 
        WHEN 'N' #未確認 
         LET g_rtdo_m.rtdoacti = 'Y'
        WHEN 'Y' #確認
         LET g_rtdo_m.rtdoacti = 'Y'
        WHEN 'X' #無效
         LET g_rtdo_m.rtdoacti = 'N'
      END CASE
      
      DISPLAY BY NAME g_rtdo_m.rtdoacti
   END IF
   
END FUNCTION

 
{</section>}
 
