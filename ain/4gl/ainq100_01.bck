#該程式未解開Section, 採用最新樣板產出!
{<section id="ainq100_01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0006(2016-05-24 18:31:22), PR版次:0006(1900-01-01 00:00:00)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000064
#+ Filename...: ainq100_01
#+ Description: 
#+ Creator....: 01534(2015-01-15 16:03:00)
#+ Modifier...: 01534 -SD/PR- 00000
 
{</section>}
 
{<section id="ainq100_01.global" >}
#應用 i02 樣板自動產生(Version:34)
#add-point:填寫註解說明
#160510-00019#3  2016/05/24   By lixh  效能优化
#160731-00163#1  2016/08/17   By lixh  BOM 用途查询，是查询料号的上层节点 CONNECT BY PRIOR bmba003 = bmba001 用量查询是CONNECT BY PRIOR bmba001 = bmba003关联
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"
 
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
GLOBALS
   DEFINE  p_bmba003    LIKE bmba_t.bmba003
END GLOBALS
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_bmba_d RECORD
       bmba001 LIKE bmba_t.bmba001, 
   bmba001_desc LIKE type_t.chr500, 
   bmba001_desc_desc LIKE type_t.chr500, 
   bmba002 LIKE bmba_t.bmba002, 
   bmba003 LIKE bmba_t.bmba003, 
   bmba003_desc LIKE type_t.chr500, 
   bmba003_desc_desc LIKE type_t.chr500, 
   bmba007 LIKE bmba_t.bmba007, 
   bmba008 LIKE bmba_t.bmba008, 
   bmba009 LIKE bmba_t.bmba009, 
   bmba004 LIKE bmba_t.bmba004, 
   bmba004_desc LIKE type_t.chr500, 
   bmba010 LIKE bmba_t.bmba010, 
   bmba010_desc LIKE type_t.chr500, 
   bmba011 LIKE bmba_t.bmba011, 
   bmba012 LIKE bmba_t.bmba012, 
   bmba005 LIKE bmba_t.bmba005, 
   bmba006 LIKE bmba_t.bmba006, 
   bmba013 LIKE bmba_t.bmba013, 
   bmba029 LIKE bmba_t.bmba029, 
   bmba024 LIKE bmba_t.bmba024, 
   bmba024_desc LIKE type_t.chr500, 
   bmba024_desc_desc LIKE type_t.chr500
       END RECORD
 
 
 
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"

#end add-point
 
#模組變數(Module Variables)
DEFINE g_bmba_d          DYNAMIC ARRAY OF type_g_bmba_d #單身變數
DEFINE g_bmba_d_t        type_g_bmba_d                  #單身備份
DEFINE g_bmba_d_o        type_g_bmba_d                  #單身備份
DEFINE g_bmba_d_mask_o   DYNAMIC ARRAY OF type_g_bmba_d #單身變數
DEFINE g_bmba_d_mask_n   DYNAMIC ARRAY OF type_g_bmba_d #單身變數
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10             #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num10             #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num10             #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
DEFINE g_log1               STRING                        #log用
DEFINE g_log2               STRING                        #log用
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="ainq100_01.main" >}
#應用 a27 樣板自動產生(Version:6)
#+ 作業開始(子程式類型)
PUBLIC FUNCTION ainq100_01(--)
   #add-point:main段變數傳入 name="main.get_var"
   p_bmba003     
   #end add-point
   )
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   DEFINE  p_bmba003    LIKE bmba_t.bmba003
   #end add-point   
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
 
   
   #add-point:main段define_sql name="main.body.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT bmba001,bmba002,bmba003,bmba007,bmba008,bmba009,bmba004,bmba010,bmba011, 
       bmba012,bmba005,bmba006,bmba013,bmba029,bmba024 FROM bmba_t WHERE bmbaent=? AND bmbasite=? AND  
       bmba001=? AND bmba002=? AND bmba003=? AND bmba004=? AND bmba005=? AND bmba007=? AND bmba008=?  
       FOR UPDATE"
   #add-point:main段define_sql name="main.body.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ainq100_01_bcl CURSOR FROM g_forupd_sql
 
 
   
   #畫面開啟 (identifier)
   OPEN WINDOW w_ainq100_01 WITH FORM cl_ap_formpath("ain","ainq100_01")
   
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   #程式初始化
   CALL ainq100_01_init()   
 
   #進入選單 Menu (="N")
   CALL ainq100_01_ui_dialog() 
 
   #畫面關閉
   CLOSE WINDOW w_ainq100_01
 
   
   
 
   #add-point:離開前 name="main.exit"
   
   #end add-point
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="ainq100_01.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION ainq100_01_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   
      CALL cl_set_combo_scc('bmba013','1101') 
   CALL cl_set_combo_scc('bmba029','1108') 
 
   LET g_error_show = 1
   
   #add-point:畫面資料初始化 name="init.init"
   
   #end add-point
   
   CALL ainq100_01_default_search()
   
END FUNCTION
 
{</section>}
 
{<section id="ainq100_01.ui_dialog" >}
#+ 功能選單 
PRIVATE FUNCTION ainq100_01_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx   LIKE type_t.num10
   DEFINE la_param  RECORD #串查用
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_bmba_d.clear()
 
         LET g_wc2 = ' 1=2'
         LET g_action_choice = ""
         CALL ainq100_01_init()
      END IF
   
      CALL ainq100_01_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_bmba_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display  name="ui_dialog.body.before_display"
               
               #end add-point
               #讓各頁籤能夠同步指到特定資料
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2 name="ui_dialog.body.before_display2"
               
               #end add-point
               
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #顯示followup圖示
               #應用 a48 樣板自動產生(Version:3)
   CALL ainq100_01_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
               #add-point:display array-before row name="ui_dialog.before_row"
               
               #end add-point
         
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
 
      
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
    
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
 
            #add-point:ui_dialog段before name="ui_dialog.b_dialog"
            
            #end add-point
            NEXT FIELD CURRENT
      
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL ainq100_01_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL ainq100_01_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo name="menu.datainfo"
               
               #END add-point
               
            END IF
 
 
 
 
      
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_bmba_d)
               LET g_export_id[1]   = "s_detail1"
 
               #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
               
               #END add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
            
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            CANCEL DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            CANCEL DIALOG
            
         
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL ainq100_01_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL ainq100_01_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL ainq100_01_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
 
{</section>}
 
{<section id="ainq100_01.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION ainq100_01_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_bmba_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON bmba001,bmba002,bmba003,bmba007,bmba008,bmba009,bmba004,bmba010,bmba011,bmba012, 
          bmba005,bmba006,bmba013,bmba029,bmba024 
 
         FROM s_detail1[1].bmba001,s_detail1[1].bmba002,s_detail1[1].bmba003,s_detail1[1].bmba007,s_detail1[1].bmba008, 
             s_detail1[1].bmba009,s_detail1[1].bmba004,s_detail1[1].bmba010,s_detail1[1].bmba011,s_detail1[1].bmba012, 
             s_detail1[1].bmba005,s_detail1[1].bmba006,s_detail1[1].bmba013,s_detail1[1].bmba029,s_detail1[1].bmba024  
 
      
         
      
                  #Ctrlp:construct.c.page1.bmba001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba001
            #add-point:ON ACTION controlp INFIELD bmba001 name="construct.c.page1.bmba001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_bmaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba001  #顯示到畫面上
            NEXT FIELD bmba001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba001
            #add-point:BEFORE FIELD bmba001 name="query.b.page1.bmba001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba001
            
            #add-point:AFTER FIELD bmba001 name="query.a.page1.bmba001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba002
            #add-point:BEFORE FIELD bmba002 name="query.b.page1.bmba002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba002
            
            #add-point:AFTER FIELD bmba002 name="query.a.page1.bmba002"
            
            #END add-point
            
 
 
         #Ctrlp:query.c.page1.bmba002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba002
            #add-point:ON ACTION controlp INFIELD bmba002 name="query.c.page1.bmba002"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.bmba003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba003
            #add-point:ON ACTION controlp INFIELD bmba003 name="construct.c.page1.bmba003"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba003  #顯示到畫面上
            NEXT FIELD bmba003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba003
            #add-point:BEFORE FIELD bmba003 name="query.b.page1.bmba003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba003
            
            #add-point:AFTER FIELD bmba003 name="query.a.page1.bmba003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bmba007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba007
            #add-point:ON ACTION controlp INFIELD bmba007 name="construct.c.page1.bmba007"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba007  #顯示到畫面上
            NEXT FIELD bmba007                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba007
            #add-point:BEFORE FIELD bmba007 name="query.b.page1.bmba007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba007
            
            #add-point:AFTER FIELD bmba007 name="query.a.page1.bmba007"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba008
            #add-point:BEFORE FIELD bmba008 name="query.b.page1.bmba008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba008
            
            #add-point:AFTER FIELD bmba008 name="query.a.page1.bmba008"
            
            #END add-point
            
 
 
         #Ctrlp:query.c.page1.bmba008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba008
            #add-point:ON ACTION controlp INFIELD bmba008 name="query.c.page1.bmba008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba009
            #add-point:BEFORE FIELD bmba009 name="query.b.page1.bmba009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba009
            
            #add-point:AFTER FIELD bmba009 name="query.a.page1.bmba009"
            
            #END add-point
            
 
 
         #Ctrlp:query.c.page1.bmba009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba009
            #add-point:ON ACTION controlp INFIELD bmba009 name="query.c.page1.bmba009"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.bmba004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba004
            #add-point:ON ACTION controlp INFIELD bmba004 name="construct.c.page1.bmba004"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba004  #顯示到畫面上
            NEXT FIELD bmba004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba004
            #add-point:BEFORE FIELD bmba004 name="query.b.page1.bmba004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba004
            
            #add-point:AFTER FIELD bmba004 name="query.a.page1.bmba004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bmba010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba010
            #add-point:ON ACTION controlp INFIELD bmba010 name="construct.c.page1.bmba010"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba010  #顯示到畫面上
            NEXT FIELD bmba010                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba010
            #add-point:BEFORE FIELD bmba010 name="query.b.page1.bmba010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba010
            
            #add-point:AFTER FIELD bmba010 name="query.a.page1.bmba010"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba011
            #add-point:BEFORE FIELD bmba011 name="query.b.page1.bmba011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba011
            
            #add-point:AFTER FIELD bmba011 name="query.a.page1.bmba011"
            
            #END add-point
            
 
 
         #Ctrlp:query.c.page1.bmba011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba011
            #add-point:ON ACTION controlp INFIELD bmba011 name="query.c.page1.bmba011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba012
            #add-point:BEFORE FIELD bmba012 name="query.b.page1.bmba012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba012
            
            #add-point:AFTER FIELD bmba012 name="query.a.page1.bmba012"
            
            #END add-point
            
 
 
         #Ctrlp:query.c.page1.bmba012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba012
            #add-point:ON ACTION controlp INFIELD bmba012 name="query.c.page1.bmba012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba005
            #add-point:BEFORE FIELD bmba005 name="query.b.page1.bmba005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba005
            
            #add-point:AFTER FIELD bmba005 name="query.a.page1.bmba005"
            
            #END add-point
            
 
 
         #Ctrlp:query.c.page1.bmba005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba005
            #add-point:ON ACTION controlp INFIELD bmba005 name="query.c.page1.bmba005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba006
            #add-point:BEFORE FIELD bmba006 name="query.b.page1.bmba006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba006
            
            #add-point:AFTER FIELD bmba006 name="query.a.page1.bmba006"
            
            #END add-point
            
 
 
         #Ctrlp:query.c.page1.bmba006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba006
            #add-point:ON ACTION controlp INFIELD bmba006 name="query.c.page1.bmba006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba013
            #add-point:BEFORE FIELD bmba013 name="query.b.page1.bmba013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba013
            
            #add-point:AFTER FIELD bmba013 name="query.a.page1.bmba013"
            
            #END add-point
            
 
 
         #Ctrlp:query.c.page1.bmba013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba013
            #add-point:ON ACTION controlp INFIELD bmba013 name="query.c.page1.bmba013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba029
            #add-point:BEFORE FIELD bmba029 name="query.b.page1.bmba029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba029
            
            #add-point:AFTER FIELD bmba029 name="query.a.page1.bmba029"
            
            #END add-point
            
 
 
         #Ctrlp:query.c.page1.bmba029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba029
            #add-point:ON ACTION controlp INFIELD bmba029 name="query.c.page1.bmba029"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.bmba024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba024
            #add-point:ON ACTION controlp INFIELD bmba024 name="construct.c.page1.bmba024"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba024  #顯示到畫面上
            NEXT FIELD bmba024                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba024
            #add-point:BEFORE FIELD bmba024 name="query.b.page1.bmba024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba024
            
            #add-point:AFTER FIELD bmba024 name="query.a.page1.bmba024"
            
            #END add-point
            
 
 
  
         
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.before_construct"
            
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct name="query.more_construct"
      
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog name="query.before_dialog"
         
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         CANCEL DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
      CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct name="query.after_construct"
   
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      #LET g_wc2 = ls_wc
      LET g_wc2 = " 1=2"
      RETURN
   ELSE
      LET g_error_show = 1
      LET g_detail_idx = 1
   END IF
    
   CALL ainq100_01_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
 
{</section>}
 
{<section id="ainq100_01.insert" >}
#+ 資料新增
PRIVATE FUNCTION ainq100_01_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point                
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #add-point:單身新增前 name="insert.b_insert"
   
   #end add-point
   
   LET g_insert = 'Y'
   CALL ainq100_01_modify()
            
   #add-point:單身新增後 name="insert.a_insert"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="ainq100_01.modify" >}
#+ 資料修改
PRIVATE FUNCTION ainq100_01_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num10
   DEFINE  l_i                    LIKE type_t.num10
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num10
   DEFINE  li_reproduce_target    LIKE type_t.num10
   DEFINE  lb_reproduce           BOOLEAN
   DEFINE  l_insert               BOOLEAN
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #add-point:modify開始前 name="modify.define_sql"
   
   #end add-point
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
   LET l_insert = FALSE
 
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
 
   #add-point:modify段修改前 name="modify.before_input"
   
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_bmba_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = FALSE, 
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmba_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL ainq100_01_b_fill(g_wc2)
            LET g_detail_cnt = g_bmba_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = g_detail_idx
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_bmba_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_bmba_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_bmba_d[l_ac].bmba001 IS NOT NULL
               AND g_bmba_d[l_ac].bmba002 IS NOT NULL
               AND g_bmba_d[l_ac].bmba003 IS NOT NULL
               AND g_bmba_d[l_ac].bmba004 IS NOT NULL
               AND g_bmba_d[l_ac].bmba005 IS NOT NULL
               AND g_bmba_d[l_ac].bmba007 IS NOT NULL
               AND g_bmba_d[l_ac].bmba008 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_bmba_d_t.* = g_bmba_d[l_ac].*  #BACKUP
               LET g_bmba_d_o.* = g_bmba_d[l_ac].*  #BACKUP
               IF NOT ainq100_01_lock_b("bmba_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH ainq100_01_bcl INTO g_bmba_d[l_ac].bmba001,g_bmba_d[l_ac].bmba002,g_bmba_d[l_ac].bmba003, 
                      g_bmba_d[l_ac].bmba007,g_bmba_d[l_ac].bmba008,g_bmba_d[l_ac].bmba009,g_bmba_d[l_ac].bmba004, 
                      g_bmba_d[l_ac].bmba010,g_bmba_d[l_ac].bmba011,g_bmba_d[l_ac].bmba012,g_bmba_d[l_ac].bmba005, 
                      g_bmba_d[l_ac].bmba006,g_bmba_d[l_ac].bmba013,g_bmba_d[l_ac].bmba029,g_bmba_d[l_ac].bmba024 
 
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_bmba_d_t.bmba001,":",SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_bmba_d_mask_o[l_ac].* =  g_bmba_d[l_ac].*
                  CALL ainq100_01_bmba_t_mask()
                  LET g_bmba_d_mask_n[l_ac].* =  g_bmba_d[l_ac].*
                  
                  CALL ainq100_01_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            CALL ainq100_01_set_entry_b(l_cmd)
            CALL ainq100_01_set_no_entry_b(l_cmd)
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmba_d_t.* TO NULL
            INITIALIZE g_bmba_d_o.* TO NULL
            INITIALIZE g_bmba_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值(單身1)
                  LET g_bmba_d[l_ac].bmba013 = "1"
      LET g_bmba_d[l_ac].bmba029 = "1"
 
            #add-point:modify段before備份 name="input.body.before_bak"
            
            #end add-point
            LET g_bmba_d_t.* = g_bmba_d[l_ac].*     #新輸入資料
            LET g_bmba_d_o.* = g_bmba_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmba_d[li_reproduce_target].* = g_bmba_d[li_reproduce].*
 
               LET g_bmba_d[g_bmba_d.getLength()].bmba001 = NULL
               LET g_bmba_d[g_bmba_d.getLength()].bmba002 = NULL
               LET g_bmba_d[g_bmba_d.getLength()].bmba003 = NULL
               LET g_bmba_d[g_bmba_d.getLength()].bmba004 = NULL
               LET g_bmba_d[g_bmba_d.getLength()].bmba005 = NULL
               LET g_bmba_d[g_bmba_d.getLength()].bmba007 = NULL
               LET g_bmba_d[g_bmba_d.getLength()].bmba008 = NULL
 
            END IF
            
 
            CALL ainq100_01_set_entry_b(l_cmd)
            CALL ainq100_01_set_no_entry_b(l_cmd)
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM bmba_t 
             WHERE bmbaent = g_enterprise AND bmbasite = g_site AND bmba001 = g_bmba_d[l_ac].bmba001
                                       AND bmba002 = g_bmba_d[l_ac].bmba002
                                       AND bmba003 = g_bmba_d[l_ac].bmba003
                                       AND bmba004 = g_bmba_d[l_ac].bmba004
                                       AND bmba005 = g_bmba_d[l_ac].bmba005
                                       AND bmba007 = g_bmba_d[l_ac].bmba007
                                       AND bmba008 = g_bmba_d[l_ac].bmba008
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmba_d[g_detail_idx].bmba001
               LET gs_keys[2] = g_bmba_d[g_detail_idx].bmba002
               LET gs_keys[3] = g_bmba_d[g_detail_idx].bmba003
               LET gs_keys[4] = g_bmba_d[g_detail_idx].bmba004
               LET gs_keys[5] = g_bmba_d[g_detail_idx].bmba005
               LET gs_keys[6] = g_bmba_d[g_detail_idx].bmba007
               LET gs_keys[7] = g_bmba_d[g_detail_idx].bmba008
               CALL ainq100_01_insert_b('bmba_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_bmba_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmba_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL ainq100_01_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               ##ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (bmba001 = '", g_bmba_d[l_ac].bmba001, "' "
                                  ," AND bmba002 = '", g_bmba_d[l_ac].bmba002, "' "
                                  ," AND bmba003 = '", g_bmba_d[l_ac].bmba003, "' "
                                  ," AND bmba004 = '", g_bmba_d[l_ac].bmba004, "' "
                                  ," AND bmba005 = '", g_bmba_d[l_ac].bmba005, "' "
                                  ," AND bmba007 = '", g_bmba_d[l_ac].bmba007, "' "
                                  ," AND bmba008 = '", g_bmba_d[l_ac].bmba008, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除ask前 name="input.body.b_delete_ask"
               
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point   
               
               DELETE FROM bmba_t
                WHERE bmbaent = g_enterprise AND bmbasite = g_site AND 
                      bmba001 = g_bmba_d_t.bmba001
                      AND bmba002 = g_bmba_d_t.bmba002
                      AND bmba003 = g_bmba_d_t.bmba003
                      AND bmba004 = g_bmba_d_t.bmba004
                      AND bmba005 = g_bmba_d_t.bmba005
                      AND bmba007 = g_bmba_d_t.bmba007
                      AND bmba008 = g_bmba_d_t.bmba008
 
                      
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "bmba_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
 
                  #add-point:單身刪除後 name="input.body.a_delete"
                  
                  #end add-point
                  #修改歷程記錄(刪除)
                  CALL ainq100_01_set_pk_array()
                  IF NOT cl_log_modified_record('','') THEN 
                  ELSE
                  END IF
               END IF 
               CLOSE ainq100_01_bcl
               #add-point:單身關閉bcl name="input.body.close"
               
               #end add-point
               LET l_count = g_bmba_d.getLength()
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmba_d_t.bmba001
               LET gs_keys[2] = g_bmba_d_t.bmba002
               LET gs_keys[3] = g_bmba_d_t.bmba003
               LET gs_keys[4] = g_bmba_d_t.bmba004
               LET gs_keys[5] = g_bmba_d_t.bmba005
               LET gs_keys[6] = g_bmba_d_t.bmba007
               LET gs_keys[7] = g_bmba_d_t.bmba008
 
               #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL ainq100_01_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
 
            END IF 
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身刪除後2 name="input.body.after_delete"
               
               #end add-point
                              CALL ainq100_01_delete_b('bmba_t',gs_keys,"'1'")
            END IF
            #如果是最後一筆
            IF l_ac = (g_bmba_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            #add-point:單身刪除後3 name="input.body.after_delete3"
            
            #end add-point
 
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba001
            
            #add-point:AFTER FIELD bmba001 name="input.a.page1.bmba001"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_bmba_d[g_detail_idx].bmba001 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba002 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba003 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba004 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba005 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba007 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmba_d[g_detail_idx].bmba001 != g_bmba_d_t.bmba001 OR g_bmba_d[g_detail_idx].bmba002 != g_bmba_d_t.bmba002 OR g_bmba_d[g_detail_idx].bmba003 != g_bmba_d_t.bmba003 OR g_bmba_d[g_detail_idx].bmba004 != g_bmba_d_t.bmba004 OR g_bmba_d[g_detail_idx].bmba005 != g_bmba_d_t.bmba005 OR g_bmba_d[g_detail_idx].bmba007 != g_bmba_d_t.bmba007 OR g_bmba_d[g_detail_idx].bmba008 != g_bmba_d_t.bmba008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site|| "' AND "||"bmba001 = '"||g_bmba_d[g_detail_idx].bmba001 ||"' AND "|| "bmba002 = '"||g_bmba_d[g_detail_idx].bmba002 ||"' AND "|| "bmba003 = '"||g_bmba_d[g_detail_idx].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d[g_detail_idx].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d[g_detail_idx].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d[g_detail_idx].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d[g_detail_idx].bmba008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_d[l_ac].bmba001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmba_d[l_ac].bmba001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_d[l_ac].bmba001_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba001
            #add-point:BEFORE FIELD bmba001 name="input.b.page1.bmba001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmba001
            #add-point:ON CHANGE bmba001 name="input.g.page1.bmba001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba002
            #add-point:BEFORE FIELD bmba002 name="input.b.page1.bmba002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba002
            
            #add-point:AFTER FIELD bmba002 name="input.a.page1.bmba002"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_bmba_d[g_detail_idx].bmba001 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba002 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba003 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba004 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba005 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba007 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmba_d[g_detail_idx].bmba001 != g_bmba_d_t.bmba001 OR g_bmba_d[g_detail_idx].bmba002 != g_bmba_d_t.bmba002 OR g_bmba_d[g_detail_idx].bmba003 != g_bmba_d_t.bmba003 OR g_bmba_d[g_detail_idx].bmba004 != g_bmba_d_t.bmba004 OR g_bmba_d[g_detail_idx].bmba005 != g_bmba_d_t.bmba005 OR g_bmba_d[g_detail_idx].bmba007 != g_bmba_d_t.bmba007 OR g_bmba_d[g_detail_idx].bmba008 != g_bmba_d_t.bmba008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site|| "' AND "||"bmba001 = '"||g_bmba_d[g_detail_idx].bmba001 ||"' AND "|| "bmba002 = '"||g_bmba_d[g_detail_idx].bmba002 ||"' AND "|| "bmba003 = '"||g_bmba_d[g_detail_idx].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d[g_detail_idx].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d[g_detail_idx].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d[g_detail_idx].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d[g_detail_idx].bmba008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmba002
            #add-point:ON CHANGE bmba002 name="input.g.page1.bmba002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba003
            
            #add-point:AFTER FIELD bmba003 name="input.a.page1.bmba003"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_bmba_d[g_detail_idx].bmba001 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba002 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba003 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba004 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba005 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba007 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmba_d[g_detail_idx].bmba001 != g_bmba_d_t.bmba001 OR g_bmba_d[g_detail_idx].bmba002 != g_bmba_d_t.bmba002 OR g_bmba_d[g_detail_idx].bmba003 != g_bmba_d_t.bmba003 OR g_bmba_d[g_detail_idx].bmba004 != g_bmba_d_t.bmba004 OR g_bmba_d[g_detail_idx].bmba005 != g_bmba_d_t.bmba005 OR g_bmba_d[g_detail_idx].bmba007 != g_bmba_d_t.bmba007 OR g_bmba_d[g_detail_idx].bmba008 != g_bmba_d_t.bmba008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site|| "' AND "||"bmba001 = '"||g_bmba_d[g_detail_idx].bmba001 ||"' AND "|| "bmba002 = '"||g_bmba_d[g_detail_idx].bmba002 ||"' AND "|| "bmba003 = '"||g_bmba_d[g_detail_idx].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d[g_detail_idx].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d[g_detail_idx].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d[g_detail_idx].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d[g_detail_idx].bmba008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba003
            #add-point:BEFORE FIELD bmba003 name="input.b.page1.bmba003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmba003
            #add-point:ON CHANGE bmba003 name="input.g.page1.bmba003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba007
            #add-point:BEFORE FIELD bmba007 name="input.b.page1.bmba007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba007
            
            #add-point:AFTER FIELD bmba007 name="input.a.page1.bmba007"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_bmba_d[g_detail_idx].bmba001 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba002 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba003 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba004 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba005 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba007 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmba_d[g_detail_idx].bmba001 != g_bmba_d_t.bmba001 OR g_bmba_d[g_detail_idx].bmba002 != g_bmba_d_t.bmba002 OR g_bmba_d[g_detail_idx].bmba003 != g_bmba_d_t.bmba003 OR g_bmba_d[g_detail_idx].bmba004 != g_bmba_d_t.bmba004 OR g_bmba_d[g_detail_idx].bmba005 != g_bmba_d_t.bmba005 OR g_bmba_d[g_detail_idx].bmba007 != g_bmba_d_t.bmba007 OR g_bmba_d[g_detail_idx].bmba008 != g_bmba_d_t.bmba008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site|| "' AND "||"bmba001 = '"||g_bmba_d[g_detail_idx].bmba001 ||"' AND "|| "bmba002 = '"||g_bmba_d[g_detail_idx].bmba002 ||"' AND "|| "bmba003 = '"||g_bmba_d[g_detail_idx].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d[g_detail_idx].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d[g_detail_idx].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d[g_detail_idx].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d[g_detail_idx].bmba008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmba007
            #add-point:ON CHANGE bmba007 name="input.g.page1.bmba007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba008
            #add-point:BEFORE FIELD bmba008 name="input.b.page1.bmba008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba008
            
            #add-point:AFTER FIELD bmba008 name="input.a.page1.bmba008"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_bmba_d[g_detail_idx].bmba001 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba002 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba003 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba004 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba005 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba007 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmba_d[g_detail_idx].bmba001 != g_bmba_d_t.bmba001 OR g_bmba_d[g_detail_idx].bmba002 != g_bmba_d_t.bmba002 OR g_bmba_d[g_detail_idx].bmba003 != g_bmba_d_t.bmba003 OR g_bmba_d[g_detail_idx].bmba004 != g_bmba_d_t.bmba004 OR g_bmba_d[g_detail_idx].bmba005 != g_bmba_d_t.bmba005 OR g_bmba_d[g_detail_idx].bmba007 != g_bmba_d_t.bmba007 OR g_bmba_d[g_detail_idx].bmba008 != g_bmba_d_t.bmba008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site|| "' AND "||"bmba001 = '"||g_bmba_d[g_detail_idx].bmba001 ||"' AND "|| "bmba002 = '"||g_bmba_d[g_detail_idx].bmba002 ||"' AND "|| "bmba003 = '"||g_bmba_d[g_detail_idx].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d[g_detail_idx].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d[g_detail_idx].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d[g_detail_idx].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d[g_detail_idx].bmba008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmba008
            #add-point:ON CHANGE bmba008 name="input.g.page1.bmba008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba009
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_bmba_d[l_ac].bmba009,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD bmba009
            END IF 
 
 
 
            #add-point:AFTER FIELD bmba009 name="input.a.page1.bmba009"
            IF NOT cl_null(g_bmba_d[l_ac].bmba009) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba009
            #add-point:BEFORE FIELD bmba009 name="input.b.page1.bmba009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmba009
            #add-point:ON CHANGE bmba009 name="input.g.page1.bmba009"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba004
            
            #add-point:AFTER FIELD bmba004 name="input.a.page1.bmba004"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_bmba_d[g_detail_idx].bmba001 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba002 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba003 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba004 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba005 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba007 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmba_d[g_detail_idx].bmba001 != g_bmba_d_t.bmba001 OR g_bmba_d[g_detail_idx].bmba002 != g_bmba_d_t.bmba002 OR g_bmba_d[g_detail_idx].bmba003 != g_bmba_d_t.bmba003 OR g_bmba_d[g_detail_idx].bmba004 != g_bmba_d_t.bmba004 OR g_bmba_d[g_detail_idx].bmba005 != g_bmba_d_t.bmba005 OR g_bmba_d[g_detail_idx].bmba007 != g_bmba_d_t.bmba007 OR g_bmba_d[g_detail_idx].bmba008 != g_bmba_d_t.bmba008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site|| "' AND "||"bmba001 = '"||g_bmba_d[g_detail_idx].bmba001 ||"' AND "|| "bmba002 = '"||g_bmba_d[g_detail_idx].bmba002 ||"' AND "|| "bmba003 = '"||g_bmba_d[g_detail_idx].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d[g_detail_idx].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d[g_detail_idx].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d[g_detail_idx].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d[g_detail_idx].bmba008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_d[l_ac].bmba004
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='215' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmba_d[l_ac].bmba004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_d[l_ac].bmba004_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba004
            #add-point:BEFORE FIELD bmba004 name="input.b.page1.bmba004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmba004
            #add-point:ON CHANGE bmba004 name="input.g.page1.bmba004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba010
            
            #add-point:AFTER FIELD bmba010 name="input.a.page1.bmba010"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_d[l_ac].bmba010
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmba_d[l_ac].bmba010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_d[l_ac].bmba010_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba010
            #add-point:BEFORE FIELD bmba010 name="input.b.page1.bmba010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmba010
            #add-point:ON CHANGE bmba010 name="input.g.page1.bmba010"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba011
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_bmba_d[l_ac].bmba011,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD bmba011
            END IF 
 
 
 
            #add-point:AFTER FIELD bmba011 name="input.a.page1.bmba011"
            IF NOT cl_null(g_bmba_d[l_ac].bmba011) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba011
            #add-point:BEFORE FIELD bmba011 name="input.b.page1.bmba011"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmba011
            #add-point:ON CHANGE bmba011 name="input.g.page1.bmba011"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba012
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_bmba_d[l_ac].bmba012,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD bmba012
            END IF 
 
 
 
            #add-point:AFTER FIELD bmba012 name="input.a.page1.bmba012"
            IF NOT cl_null(g_bmba_d[l_ac].bmba012) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba012
            #add-point:BEFORE FIELD bmba012 name="input.b.page1.bmba012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmba012
            #add-point:ON CHANGE bmba012 name="input.g.page1.bmba012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba005
            #add-point:BEFORE FIELD bmba005 name="input.b.page1.bmba005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba005
            
            #add-point:AFTER FIELD bmba005 name="input.a.page1.bmba005"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_bmba_d[g_detail_idx].bmba001 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba002 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba003 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba004 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba005 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba007 IS NOT NULL AND g_bmba_d[g_detail_idx].bmba008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmba_d[g_detail_idx].bmba001 != g_bmba_d_t.bmba001 OR g_bmba_d[g_detail_idx].bmba002 != g_bmba_d_t.bmba002 OR g_bmba_d[g_detail_idx].bmba003 != g_bmba_d_t.bmba003 OR g_bmba_d[g_detail_idx].bmba004 != g_bmba_d_t.bmba004 OR g_bmba_d[g_detail_idx].bmba005 != g_bmba_d_t.bmba005 OR g_bmba_d[g_detail_idx].bmba007 != g_bmba_d_t.bmba007 OR g_bmba_d[g_detail_idx].bmba008 != g_bmba_d_t.bmba008)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site|| "' AND "||"bmba001 = '"||g_bmba_d[g_detail_idx].bmba001 ||"' AND "|| "bmba002 = '"||g_bmba_d[g_detail_idx].bmba002 ||"' AND "|| "bmba003 = '"||g_bmba_d[g_detail_idx].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d[g_detail_idx].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d[g_detail_idx].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d[g_detail_idx].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d[g_detail_idx].bmba008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmba005
            #add-point:ON CHANGE bmba005 name="input.g.page1.bmba005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba006
            #add-point:BEFORE FIELD bmba006 name="input.b.page1.bmba006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba006
            
            #add-point:AFTER FIELD bmba006 name="input.a.page1.bmba006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmba006
            #add-point:ON CHANGE bmba006 name="input.g.page1.bmba006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba013
            #add-point:BEFORE FIELD bmba013 name="input.b.page1.bmba013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba013
            
            #add-point:AFTER FIELD bmba013 name="input.a.page1.bmba013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmba013
            #add-point:ON CHANGE bmba013 name="input.g.page1.bmba013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba029
            #add-point:BEFORE FIELD bmba029 name="input.b.page1.bmba029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba029
            
            #add-point:AFTER FIELD bmba029 name="input.a.page1.bmba029"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmba029
            #add-point:ON CHANGE bmba029 name="input.g.page1.bmba029"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmba024
            
            #add-point:AFTER FIELD bmba024 name="input.a.page1.bmba024"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_d[l_ac].bmba024
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmba_d[l_ac].bmba024_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_d[l_ac].bmba024_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmba024
            #add-point:BEFORE FIELD bmba024 name="input.b.page1.bmba024"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmba024
            #add-point:ON CHANGE bmba024 name="input.g.page1.bmba024"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.bmba001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba001
            #add-point:ON ACTION controlp INFIELD bmba001 name="input.c.page1.bmba001"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmba002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba002
            #add-point:ON ACTION controlp INFIELD bmba002 name="input.c.page1.bmba002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmba003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba003
            #add-point:ON ACTION controlp INFIELD bmba003 name="input.c.page1.bmba003"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmba_d[l_ac].bmba003             #給予default值
            LET g_qryparam.default2 = "" #g_bmba_d[l_ac].imaal003 #品名
            LET g_qryparam.default3 = "" #g_bmba_d[l_ac].imaal004 #規格
            #給予arg
            LET g_qryparam.arg1 = "" #


            CALL q_imaa001()                                #呼叫開窗

            LET g_bmba_d[l_ac].bmba003 = g_qryparam.return1              
            #LET g_bmba_d[l_ac].imaal003 = g_qryparam.return2 
            #LET g_bmba_d[l_ac].imaal004 = g_qryparam.return3 
            DISPLAY g_bmba_d[l_ac].bmba003 TO bmba003              #
            #DISPLAY g_bmba_d[l_ac].imaal003 TO imaal003 #品名
            #DISPLAY g_bmba_d[l_ac].imaal004 TO imaal004 #規格
            NEXT FIELD bmba003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.bmba007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba007
            #add-point:ON ACTION controlp INFIELD bmba007 name="input.c.page1.bmba007"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmba_d[l_ac].bmba007             #給予default值
            LET g_qryparam.default2 = "" #g_bmba_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_oocq002()                                #呼叫開窗

            LET g_bmba_d[l_ac].bmba007 = g_qryparam.return1              
            #LET g_bmba_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmba_d[l_ac].bmba007 TO bmba007              #
            #DISPLAY g_bmba_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmba007                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.bmba008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba008
            #add-point:ON ACTION controlp INFIELD bmba008 name="input.c.page1.bmba008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmba009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba009
            #add-point:ON ACTION controlp INFIELD bmba009 name="input.c.page1.bmba009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmba004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba004
            #add-point:ON ACTION controlp INFIELD bmba004 name="input.c.page1.bmba004"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmba_d[l_ac].bmba004             #給予default值
            LET g_qryparam.default2 = "" #g_bmba_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_oocq002()                                #呼叫開窗

            LET g_bmba_d[l_ac].bmba004 = g_qryparam.return1              
            #LET g_bmba_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmba_d[l_ac].bmba004 TO bmba004              #
            #DISPLAY g_bmba_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmba004                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.bmba010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba010
            #add-point:ON ACTION controlp INFIELD bmba010 name="input.c.page1.bmba010"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmba_d[l_ac].bmba010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooca001()                                #呼叫開窗

            LET g_bmba_d[l_ac].bmba010 = g_qryparam.return1              

            DISPLAY g_bmba_d[l_ac].bmba010 TO bmba010              #

            NEXT FIELD bmba010                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.bmba011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba011
            #add-point:ON ACTION controlp INFIELD bmba011 name="input.c.page1.bmba011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmba012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba012
            #add-point:ON ACTION controlp INFIELD bmba012 name="input.c.page1.bmba012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmba005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba005
            #add-point:ON ACTION controlp INFIELD bmba005 name="input.c.page1.bmba005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmba006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba006
            #add-point:ON ACTION controlp INFIELD bmba006 name="input.c.page1.bmba006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmba013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba013
            #add-point:ON ACTION controlp INFIELD bmba013 name="input.c.page1.bmba013"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmba029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba029
            #add-point:ON ACTION controlp INFIELD bmba029 name="input.c.page1.bmba029"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmba024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmba024
            #add-point:ON ACTION controlp INFIELD bmba024 name="input.c.page1.bmba024"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmba_d[l_ac].bmba024             #給予default值
            LET g_qryparam.default2 = "" #g_bmba_d[l_ac].imaal003 #品名
            LET g_qryparam.default3 = "" #g_bmba_d[l_ac].imaal004 #規格
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_imaa001()                                #呼叫開窗

            LET g_bmba_d[l_ac].bmba024 = g_qryparam.return1              
            #LET g_bmba_d[l_ac].imaal003 = g_qryparam.return2 
            #LET g_bmba_d[l_ac].imaal004 = g_qryparam.return3 
            DISPLAY g_bmba_d[l_ac].bmba024 TO bmba024              #
            #DISPLAY g_bmba_d[l_ac].imaal003 TO imaal003 #品名
            #DISPLAY g_bmba_d[l_ac].imaal004 TO imaal004 #規格
            NEXT FIELD bmba024                          #返回原欄位


            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CLOSE ainq100_01_bcl
               LET INT_FLAG = 0
               LET g_bmba_d[l_ac].* = g_bmba_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               #add-point:單身取消時 name="input.body.cancel"
               
               #end add-point
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_bmba_d[l_ac].bmba001 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_bmba_d[l_ac].* = g_bmba_d_t.*
            ELSE
               #寫入修改者/修改日期資訊(單身)
               
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL ainq100_01_bmba_t_mask_restore('restore_mask_o')
 
               UPDATE bmba_t SET (bmba001,bmba002,bmba003,bmba007,bmba008,bmba009,bmba004,bmba010,bmba011, 
                   bmba012,bmba005,bmba006,bmba013,bmba029,bmba024) = (g_bmba_d[l_ac].bmba001,g_bmba_d[l_ac].bmba002, 
                   g_bmba_d[l_ac].bmba003,g_bmba_d[l_ac].bmba007,g_bmba_d[l_ac].bmba008,g_bmba_d[l_ac].bmba009, 
                   g_bmba_d[l_ac].bmba004,g_bmba_d[l_ac].bmba010,g_bmba_d[l_ac].bmba011,g_bmba_d[l_ac].bmba012, 
                   g_bmba_d[l_ac].bmba005,g_bmba_d[l_ac].bmba006,g_bmba_d[l_ac].bmba013,g_bmba_d[l_ac].bmba029, 
                   g_bmba_d[l_ac].bmba024)
                WHERE bmbaent = g_enterprise AND bmbasite = g_site AND
                  bmba001 = g_bmba_d_t.bmba001 #項次   
                  AND bmba002 = g_bmba_d_t.bmba002  
                  AND bmba003 = g_bmba_d_t.bmba003  
                  AND bmba004 = g_bmba_d_t.bmba004  
                  AND bmba005 = g_bmba_d_t.bmba005  
                  AND bmba007 = g_bmba_d_t.bmba007  
                  AND bmba008 = g_bmba_d_t.bmba008  
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmba_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmba_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmba_d[g_detail_idx].bmba001
               LET gs_keys_bak[1] = g_bmba_d_t.bmba001
               LET gs_keys[2] = g_bmba_d[g_detail_idx].bmba002
               LET gs_keys_bak[2] = g_bmba_d_t.bmba002
               LET gs_keys[3] = g_bmba_d[g_detail_idx].bmba003
               LET gs_keys_bak[3] = g_bmba_d_t.bmba003
               LET gs_keys[4] = g_bmba_d[g_detail_idx].bmba004
               LET gs_keys_bak[4] = g_bmba_d_t.bmba004
               LET gs_keys[5] = g_bmba_d[g_detail_idx].bmba005
               LET gs_keys_bak[5] = g_bmba_d_t.bmba005
               LET gs_keys[6] = g_bmba_d[g_detail_idx].bmba007
               LET gs_keys_bak[6] = g_bmba_d_t.bmba007
               LET gs_keys[7] = g_bmba_d[g_detail_idx].bmba008
               LET gs_keys_bak[7] = g_bmba_d_t.bmba008
               CALL ainq100_01_update_b('bmba_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     #修改歷程記錄(修改)
                     LET g_log1 = util.JSON.stringify(g_bmba_d_t)
                     LET g_log2 = util.JSON.stringify(g_bmba_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                     END IF
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL ainq100_01_bmba_t_mask_restore('restore_mask_n')
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL ainq100_01_unlock_b("bmba_t")
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bmba_d[l_ac].* = g_bmba_d_t.*
               END IF
               #add-point:單身after row name="input.body.a_close"
               
               #end add-point
            ELSE
            END IF
            #其他table進行unlock
            
             #add-point:單身after row name="input.body.a_row"
            
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後 name="input.body.a_input"
            
            #end add-point
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            
         ON ACTION controlo   
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_bmba_d[li_reproduce_target].* = g_bmba_d[li_reproduce].*
 
               LET g_bmba_d[li_reproduce_target].bmba001 = NULL
               LET g_bmba_d[li_reproduce_target].bmba002 = NULL
               LET g_bmba_d[li_reproduce_target].bmba003 = NULL
               LET g_bmba_d[li_reproduce_target].bmba004 = NULL
               LET g_bmba_d[li_reproduce_target].bmba005 = NULL
               LET g_bmba_d[li_reproduce_target].bmba007 = NULL
               LET g_bmba_d[li_reproduce_target].bmba008 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_bmba_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_bmba_d.getLength()+1
            END IF
            
      END INPUT
      
 
      
 
      
      #add-point:before_more_input name="input.more_input"
      
      #end add-point
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()      
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         #LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog name="input.before_dialog"
         
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD bmba001
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         CANCEL DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
    
   #新增後取消
   IF l_cmd = 'a' THEN
      #當取消或無輸入資料按確定時刪除對應資料
      IF INT_FLAG OR cl_null(g_bmba_d[g_detail_idx].bmba001) THEN
         CALL g_bmba_d.deleteElement(g_detail_idx)
 
      END IF
   END IF
   
   #修改後取消
   IF l_cmd = 'u' AND INT_FLAG THEN
      LET g_bmba_d[g_detail_idx].* = g_bmba_d_t.*
   END IF
   
   #add-point:modify段修改後 name="modify.after_input"
   
   #end add-point
 
   CLOSE ainq100_01_bcl
   
END FUNCTION
 
{</section>}
 
{<section id="ainq100_01.delete" >}
#+ 資料刪除
PRIVATE FUNCTION ainq100_01_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point
   DEFINE li_idx          LIKE type_t.num10
   DEFINE li_ac_t         LIKE type_t.num10
   DEFINE li_detail_tmp   LIKE type_t.num10
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="delete.body.before_delete"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET li_ac_t = l_ac
   
   LET li_detail_tmp = g_detail_idx
    
   #lock所有所選資料
   FOR li_idx = 1 TO g_bmba_d.getLength()
      LET g_detail_idx = li_idx
      #已選擇的資料
      IF g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         #確定是否有被鎖定
         IF NOT ainq100_01_lock_b("bmba_t") THEN
            #已被他人鎖定
            RETURN
         END IF
      END IF
   END FOR
   
   #add-point:單身刪除詢問前 name="delete.body.b_delete_ask"
   
   #end add-point  
   
   #詢問是否確定刪除所選資料
   IF NOT cl_ask_del_detail() THEN
      RETURN
   END IF
   
   FOR li_idx = 1 TO g_bmba_d.getLength()
      IF g_bmba_d[li_idx].bmba001 IS NOT NULL
         AND g_bmba_d[li_idx].bmba002 IS NOT NULL
         AND g_bmba_d[li_idx].bmba003 IS NOT NULL
         AND g_bmba_d[li_idx].bmba004 IS NOT NULL
         AND g_bmba_d[li_idx].bmba005 IS NOT NULL
         AND g_bmba_d[li_idx].bmba007 IS NOT NULL
         AND g_bmba_d[li_idx].bmba008 IS NOT NULL
 
         AND g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         
         #add-point:單身刪除前 name="delete.body.b_delete"
         
         #end add-point   
         
         DELETE FROM bmba_t
          WHERE bmbaent = g_enterprise AND bmbasite = g_site AND 
                bmba001 = g_bmba_d[li_idx].bmba001
                AND bmba002 = g_bmba_d[li_idx].bmba002
                AND bmba003 = g_bmba_d[li_idx].bmba003
                AND bmba004 = g_bmba_d[li_idx].bmba004
                AND bmba005 = g_bmba_d[li_idx].bmba005
                AND bmba007 = g_bmba_d[li_idx].bmba007
                AND bmba008 = g_bmba_d[li_idx].bmba008
 
         #add-point:單身刪除中 name="delete.body.m_delete"
         
         #end add-point  
                
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bmba_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            RETURN
         ELSE
            LET g_detail_cnt = g_detail_cnt-1
            LET l_ac = li_idx
            
 
 
            
 
 
            #add-point:單身同步刪除前(同層table) name="delete.body.a_delete"
            
            #end add-point
            LET g_detail_idx = li_idx
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmba_d_t.bmba001
               LET gs_keys[2] = g_bmba_d_t.bmba002
               LET gs_keys[3] = g_bmba_d_t.bmba003
               LET gs_keys[4] = g_bmba_d_t.bmba004
               LET gs_keys[5] = g_bmba_d_t.bmba005
               LET gs_keys[6] = g_bmba_d_t.bmba007
               LET gs_keys[7] = g_bmba_d_t.bmba008
 
            #add-point:單身同步刪除中(同層table) name="delete.body.a_delete2"
            
            #end add-point
                           CALL ainq100_01_delete_b('bmba_t',gs_keys,"'1'")
            #add-point:單身同步刪除後(同層table) name="delete.body.a_delete3"
            
            #end add-point
            #刪除相關文件
            #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL ainq100_01_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove.func"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
 
            
         END IF 
      END IF 
    
   END FOR
   
   LET g_detail_idx = li_detail_tmp
            
   #add-point:單身刪除後 name="delete.after"
   
   #end add-point  
   
   LET l_ac = li_ac_t
   
   #刷新資料
   CALL ainq100_01_b_fill(g_wc2)
            
END FUNCTION
 
{</section>}
 
{<section id="ainq100_01.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION ainq100_01_b_fill(p_wc2)              #BODY FILL UP
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point
   DEFINE p_wc2    STRING
   #add-point:b_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE g_sql1   STRING
   DEFINE g_sql2   STRING
   #end add-point
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前 name="b_fill.sql_before"
   
   #end add-point
 
   LET g_sql = "SELECT  DISTINCT t0.bmba001,t0.bmba002,t0.bmba003,t0.bmba007,t0.bmba008,t0.bmba009,t0.bmba004, 
       t0.bmba010,t0.bmba011,t0.bmba012,t0.bmba005,t0.bmba006,t0.bmba013,t0.bmba029,t0.bmba024 ,t1.imaal003 , 
       t2.imaal004 ,t3.imaal003 ,t4.imaal004 ,t5.oocql004 ,t6.oocal003 ,t7.imaal003 ,t8.imaal004 FROM bmba_t t0", 
 
               "",
                              " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=t0.bmba001 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=t0.bmba001 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent="||g_enterprise||" AND t3.imaal001=t0.bmba003 AND t3.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t4 ON t4.imaalent="||g_enterprise||" AND t4.imaal001=t0.bmba003 AND t4.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent="||g_enterprise||" AND t5.oocql001='215' AND t5.oocql002=t0.bmba004 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t6 ON t6.oocalent="||g_enterprise||" AND t6.oocal001=t0.bmba010 AND t6.oocal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t7 ON t7.imaalent="||g_enterprise||" AND t7.imaal001=t0.bmba024 AND t7.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t8 ON t8.imaalent="||g_enterprise||" AND t8.imaal001=t0.bmba024 AND t8.imaal002='"||g_dlang||"' ",
 
               " WHERE t0.bmbaent= ?  AND t0. bmbasite= ?  AND  1=1 AND (", p_wc2, ") " 
   #add-point:b_fill段sql wc name="b_fill.sql_wc"
   
   #end add-point
   LET g_sql = g_sql, cl_sql_add_filter("bmba_t"),
                      " ORDER BY t0.bmba001,t0.bmba002,t0.bmba003,t0.bmba004,t0.bmba005,t0.bmba007,t0.bmba008"
   
   #add-point:b_fill段sql之後 name="b_fill.sql_after"
      
      LET g_sql1 = "SELECT DISTINCT bmba001,bmba002,bmba003 ",
                   "  FROM bmba_t",      
                   " WHERE bmbaent = '",g_enterprise,"' AND bmbasite = '",g_site,"' AND bmba003 = '",p_bmba003,"'",
                   "   AND bmba005 <= SYSDATE ",
                   "   AND (bmba006 >= SYSDATE OR bmba006 IS NULL) "                    
      #160510-00019#3-s            
      #LET g_sql = " SELECT DISTINCT bmba001,bmba002,bmba003,bmba007,bmba008,bmba009,bmba004,bmba010,bmba011,bmba012,bmba005,bmba006,bmba013,bmba029,bmba024,'','' FROM bmba_t,bmaa_t ",
      LET g_sql = " SELECT DISTINCT bmba001,bmba002,bmba003,bmba007,bmba008,bmba009,bmba004,bmba010,bmba011,bmba012,bmba005,bmba006,bmba013,bmba029,bmba024,",
                  "        (SELECT imaal003 FROM imaal_t WHERE imaalent = bmbaent AND imaal002 = bmba001 AND imaal003 = '",g_lang,"') imaal003,",
                  "        (SELECT imaal004 FROM imaal_t WHERE imaalent = bmbaent AND imaal002 = bmba001 AND imaal003 = '",g_lang,"') imaal004,",
                  "        (SELECT imaal003 FROM imaal_t WHERE imaalent = bmbaent AND imaal002 = bmba003 AND imaal003 = '",g_lang,"') a_imaal003,",
                  "        (SELECT imaal004 FROM imaal_t WHERE imaalent = bmbaent AND imaal002 = bmba003 AND imaal003 = '",g_lang,"') b_imaal004,", 
                  "        (SELECT oocql004 FROM oocql_t WHERE oocqlent = bmbaent AND oocql001 = '215' AND oocql002 = bmba004 AND oocql003 = '",g_lang,"') oocql004,",  
                  "        (SELECT imaal003 FROM imaal_t WHERE imaalent = bmbaent AND imaal002 = bmba024 AND imaal003 = '",g_lang,"') c_imaal003,",
                  "        (SELECT imaal004 FROM imaal_t WHERE imaalent = bmbaent AND imaal002 = bmba024 AND imaal003 = '",g_lang,"') d_imaal004" ,                  
                  " FROM bmba_t,bmaa_t ",
      #160510-00019#3-e
                  "  WHERE bmbaent = ? AND bmbasite = ? ",
                  "    AND bmbaent = bmaaent ",
                  "    AND bmbasite = bmaasite ",
                  "    AND bmba001 = bmaa001 ",
                  "    AND bmba002 = bmaa002 ",
                  "    AND bmba005 <= SYSDATE ",
                  "    AND (bmba006 >= SYSDATE OR bmba006 IS NULL) ",
                  "    AND bmaastus = 'Y' ",
                  "  START WITH (bmba001,bmba002,bmba003) IN (",g_sql1,")",
                 # "  CONNECT BY PRIOR bmba001 = bmba003 AND PRIOR bmba002 = bmba002 AND bmbasite = '",g_site,"' ORDER BY bmba001 "  
                  "  CONNECT BY PRIOR bmba003 = bmba001 AND PRIOR bmba002 = bmba002 AND bmbasite = '",g_site,"' ORDER BY bmba001 "    #160731-00163#1               
                  
     
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"bmba_t")            #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE ainq100_01_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR ainq100_01_pb
   
   OPEN b_fill_curs USING g_enterprise, g_site
 
   CALL g_bmba_d.clear()
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_bmba_d[l_ac].bmba001,g_bmba_d[l_ac].bmba002,g_bmba_d[l_ac].bmba003,g_bmba_d[l_ac].bmba007, 
       g_bmba_d[l_ac].bmba008,g_bmba_d[l_ac].bmba009,g_bmba_d[l_ac].bmba004,g_bmba_d[l_ac].bmba010,g_bmba_d[l_ac].bmba011, 
       g_bmba_d[l_ac].bmba012,g_bmba_d[l_ac].bmba005,g_bmba_d[l_ac].bmba006,g_bmba_d[l_ac].bmba013,g_bmba_d[l_ac].bmba029, 
       g_bmba_d[l_ac].bmba024,g_bmba_d[l_ac].bmba001_desc,g_bmba_d[l_ac].bmba001_desc_desc,g_bmba_d[l_ac].bmba003_desc, 
       g_bmba_d[l_ac].bmba003_desc_desc,g_bmba_d[l_ac].bmba004_desc,g_bmba_d[l_ac].bmba010_desc,g_bmba_d[l_ac].bmba024_desc, 
       g_bmba_d[l_ac].bmba024_desc_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充 name="b_fill.fill"
#160510-00019#3-s mark
#      CALL s_desc_get_item_desc(g_bmba_d[l_ac].bmba001) RETURNING g_bmba_d[l_ac].bmba001_desc,g_bmba_d[l_ac].bmba001_desc_desc
#      CALL s_desc_get_item_desc(g_bmba_d[l_ac].bmba003) RETURNING g_bmba_d[l_ac].bmba003_desc,g_bmba_d[l_ac].bmba003_desc_desc
#      CALL s_desc_get_acc_desc('215',g_bmba_d[l_ac].bmba004) RETURNING g_bmba_d[l_ac].bmba004_desc
#      CALL s_desc_get_unit_desc(g_bmba_d[l_ac].bmba010) RETURNING g_bmba_d[l_ac].bmba010_desc
#      CALL s_desc_get_item_desc(g_bmba_d[l_ac].bmba024) RETURNING g_bmba_d[l_ac].bmba024_desc,g_bmba_d[l_ac].bmba024_desc_desc
#160510-00019#3-e mark
      #end add-point
      
      CALL ainq100_01_detail_show()      
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
         END IF
         EXIT FOREACH
      END IF
 
      LET l_ac = l_ac + 1
      
   END FOREACH
 
   LET g_error_show = 0
   
 
   
   CALL g_bmba_d.deleteElement(g_bmba_d.getLength())   
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_bmba_d.getLength()
 
      #add-point:b_fill段key值相關欄位 name="b_fill.keys.fill"
      
      #end add-point
   END FOR
   
   IF g_cnt > g_bmba_d.getLength() THEN
      LET l_ac = g_bmba_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #遮罩相關處理
   FOR l_ac = 1 TO g_bmba_d.getLength()
      LET g_bmba_d_mask_o[l_ac].* =  g_bmba_d[l_ac].*
      CALL ainq100_01_bmba_t_mask()
      LET g_bmba_d_mask_n[l_ac].* =  g_bmba_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = g_cnt
 
   #add-point:b_fill段資料填充(其他單身) name="b_fill.others.fill"
   
   #end add-point
   
   ERROR "" 
 
   LET g_detail_cnt = g_bmba_d.getLength()
   DISPLAY g_detail_idx TO FORMONLY.idx
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs
   FREE ainq100_01_pb
   
END FUNCTION
 
{</section>}
 
{<section id="ainq100_01.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION ainq100_01_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="detail_show.before"
   
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
 
   
   #讀入ref值
   #add-point:show段單身reference name="detail_show.reference"
   
   #end add-point
   
 
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="ainq100_01.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION ainq100_01_set_entry_b(p_cmd)                                                  
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point
 
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry_b段欄位控制 name="set_entry_b.field_control"
      
      #end add-point 
   END IF
   
   #add-point:set_entry_b段control name="set_entry_b.set_entry_b"
   
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                 
 
{</section>}
 
{<section id="ainq100_01.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION ainq100_01_set_no_entry_b(p_cmd)                                               
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point   
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF
   
   #add-point:set_no_entry_b段control name="set_no_entry_b.set_no_entry_b"
   
   #end add-point       
                                                                                
END FUNCTION
 
{</section>}
 
{<section id="ainq100_01.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION ainq100_01_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="default_search.before"
   
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " bmba001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " bmba002 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " bmba003 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " bmba004 = '", g_argv[04], "' AND "
   END IF
   IF NOT cl_null(g_argv[05]) THEN
      LET ls_wc = ls_wc, " bmba005 = '", g_argv[05], "' AND "
   END IF
   IF NOT cl_null(g_argv[06]) THEN
      LET ls_wc = ls_wc, " bmba007 = '", g_argv[06], "' AND "
   END IF
   IF NOT cl_null(g_argv[07]) THEN
      LET ls_wc = ls_wc, " bmba008 = '", g_argv[07], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
      #預設查詢條件
      LET g_wc2 = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc2) THEN
         LET g_wc2 = " 1=1"
      END IF
   END IF
 
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="ainq100_01.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION ainq100_01_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   #判斷是否是同一群組的table
   LET ls_group = "bmba_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      IF ps_table <> 'bmba_t' THEN
         #add-point:delete_b段刪除前 name="delete_b.b_delete"
         
         #end add-point     
         
         DELETE FROM bmba_t
          WHERE bmbaent = g_enterprise AND bmbasite = g_site AND
            bmba001 = ps_keys_bak[1] AND bmba002 = ps_keys_bak[2] AND bmba003 = ps_keys_bak[3] AND bmba004 = ps_keys_bak[4] AND bmba005 = ps_keys_bak[5] AND bmba007 = ps_keys_bak[6] AND bmba008 = ps_keys_bak[7]
         
         #add-point:delete_b段刪除中 name="delete_b.m_delete"
         
         #end add-point  
            
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = ":",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = FALSE 
            CALL cl_err()
         END IF
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_bmba_d.deleteElement(li_idx) 
      END IF 
 
      
      #add-point:delete_b段刪除後 name="delete_b.a_delete"
      
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="ainq100_01.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION ainq100_01_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   #判斷是否是同一群組的table
   LET ls_group = "bmba_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前 name="insert_b.b_insert"
      
      #end add-point    
      INSERT INTO bmba_t
                  (bmbaent, bmbasite,
                   bmba001,bmba002,bmba003,bmba004,bmba005,bmba007,bmba008
                   ,bmba009,bmba010,bmba011,bmba012,bmba006,bmba013,bmba029,bmba024) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7]
                   ,g_bmba_d[l_ac].bmba009,g_bmba_d[l_ac].bmba010,g_bmba_d[l_ac].bmba011,g_bmba_d[l_ac].bmba012, 
                       g_bmba_d[l_ac].bmba006,g_bmba_d[l_ac].bmba013,g_bmba_d[l_ac].bmba029,g_bmba_d[l_ac].bmba024) 
 
      #add-point:insert_b段新增中 name="insert_b.m_insert"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmba_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      #add-point:insert_b段新增後 name="insert_b.a_insert"
      
      #end add-point    
   #END IF
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="ainq100_01.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION ainq100_01_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   #比對新舊值, 判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #若key無變動, 不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #若key有變動, 則連動其他table的資料   
   #判斷是否是同一群組的table
   LET ls_group = "bmba_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "bmba_t" THEN
      #add-point:update_b段修改前 name="update_b.b_update"
      
      #end add-point     
      UPDATE bmba_t 
         SET (bmba001,bmba002,bmba003,bmba004,bmba005,bmba007,bmba008
              ,bmba009,bmba010,bmba011,bmba012,bmba006,bmba013,bmba029,bmba024) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7]
              ,g_bmba_d[l_ac].bmba009,g_bmba_d[l_ac].bmba010,g_bmba_d[l_ac].bmba011,g_bmba_d[l_ac].bmba012, 
                  g_bmba_d[l_ac].bmba006,g_bmba_d[l_ac].bmba013,g_bmba_d[l_ac].bmba029,g_bmba_d[l_ac].bmba024)  
 
         WHERE bmbaent = g_enterprise AND bmbasite = g_site AND bmba001 = ps_keys_bak[1] AND bmba002 = ps_keys_bak[2] AND bmba003 = ps_keys_bak[3] AND bmba004 = ps_keys_bak[4] AND bmba005 = ps_keys_bak[5] AND bmba007 = ps_keys_bak[6] AND bmba008 = ps_keys_bak[7]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bmba_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bmba_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後 name="update_b.a_update"
      
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="ainq100_01.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION ainq100_01_lock_b(ps_table)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
   
   #先刷新資料
   #CALL ainq100_01_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "bmba_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN ainq100_01_bcl USING g_enterprise, g_site,
                                       g_bmba_d[g_detail_idx].bmba001,g_bmba_d[g_detail_idx].bmba002, 
                                           g_bmba_d[g_detail_idx].bmba003,g_bmba_d[g_detail_idx].bmba004, 
                                           g_bmba_d[g_detail_idx].bmba005,g_bmba_d[g_detail_idx].bmba007, 
                                           g_bmba_d[g_detail_idx].bmba008
                                       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "ainq100_01_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="ainq100_01.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION ainq100_01_unlock_b(ps_table)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE ainq100_01_bcl
   #END IF
   
 
   
   #add-point:unlock_b段結束前 name="unlock_b.after"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="ainq100_01.modify_detail_chk" >}
#+ 單身輸入判定(因應modify_detail)
PRIVATE FUNCTION ainq100_01_modify_detail_chk(ps_record)
   #add-point:modify_detail_chk段define(客製用) name="modify_detail_chk.define_customerization"
   
   #end add-point
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify_detail_chk.define"
   
   #end add-point
   
   #add-point:modify_detail_chk段開始前 name="modify_detail_chk.before"
   
   #end add-point
   
   #根據sr名稱確定該page第一個欄位的名稱
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "bmba001"
 
      #add-point:modify_detail_chk段自訂page控制 name="modify_detail_chk.page_control"
      
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前 name="modify_detail_chk.after"
   
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
 
{</section>}
 
{<section id="ainq100_01.mask_functions" >}
&include "erp/ain/ainq100_01_mask.4gl"
 
{</section>}
 
{<section id="ainq100_01.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION ainq100_01_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_bmba_d[l_ac].bmba001
   LET g_pk_array[1].column = 'bmba001'
   LET g_pk_array[2].values = g_bmba_d[l_ac].bmba002
   LET g_pk_array[2].column = 'bmba002'
   LET g_pk_array[3].values = g_bmba_d[l_ac].bmba003
   LET g_pk_array[3].column = 'bmba003'
   LET g_pk_array[4].values = g_bmba_d[l_ac].bmba004
   LET g_pk_array[4].column = 'bmba004'
   LET g_pk_array[5].values = g_bmba_d[l_ac].bmba005
   LET g_pk_array[5].column = 'bmba005'
   LET g_pk_array[6].values = g_bmba_d[l_ac].bmba007
   LET g_pk_array[6].column = 'bmba007'
   LET g_pk_array[7].values = g_bmba_d[l_ac].bmba008
   LET g_pk_array[7].column = 'bmba008'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="ainq100_01.state_change" >}
   
 
{</section>}
 
{<section id="ainq100_01.other_dialog" readonly="Y" >}

 
{</section>}
 
{<section id="ainq100_01.other_function" readonly="Y" >}

 
{</section>}
 
