#該程式未解開Section, 採用最新樣板產出!
{<section id="ainp890.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0002(2014-07-18 10:14:17), PR版次:0002(2016-05-18 13:02:48)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000057
#+ Filename...: ainp890
#+ Description: 盤點存貨凍結解除作業
#+ Creator....: 01534(2014-07-17 18:44:55)
#+ Modifier...: 01534 -SD/PR- 01534
 
{</section>}
 
{<section id="ainp890.global" >}
#應用 p01 樣板自動產生(Version:18)
#add-point:填寫註解說明
#160517-00016#1   2016/05/17   By lixh  更新inpd002
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       inpadocno LIKE inpa_t.inpadocno, 
   inpa002 LIKE inpa_t.inpa002, 
   inpa002_desc LIKE type_t.chr80, 
   inpadocno_desc LIKE type_t.chr80, 
   inpa005 LIKE inpa_t.inpa005, 
   freeze LIKE type_t.chr500, 
   inpa006 LIKE inpa_t.inpa006, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
DEFINE g_master_t  type_master
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
 
#add-point:傳入參數說明

#end add-point
 
{</section>}
 
{<section id="ainp890.main" >}
MAIN
   #add-point:main段define (客製用)
   
   #end add-point 
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call
      
      #end add-point
      CALL ainp890_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ainp890 WITH FORM cl_ap_formpath("ain",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL ainp890_init()
 
      #進入選單 Menu (="N")
      CALL ainp890_ui_dialog()
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_ainp890
   END IF
 
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="ainp890.init" >}
#+ 初始化作業
PRIVATE FUNCTION ainp890_init()
 
   #add-point:init段define (客製用)
   
   #end add-point
   #add-point:ui_dialog段define 
   
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="ainp890.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION ainp890_ui_dialog()
 
   #add-point:ui_dialog段define (客製用)
   
   #end add-point
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 
   DEFINE l_inpa006 LIKE inpa_t.inpa006
   DEFINE l_cnt     LIKE type_t.num5
   #end add-point
   
   #add-point:ui_dialog段before dialog
   
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      LET g_errshow = 1
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:3)
         INPUT BY NAME g_master.inpadocno,g_master.freeze 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前 name="input.m.before_input"
               
               #end add-point
         
                     #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inpadocno
            
            #add-point:AFTER FIELD inpadocno name="input.a.inpadocno"
            CALL ainp890_inpa_default()
            IF NOT cl_null(g_master.inpadocno) THEN 
#此段落由子樣板a19產生
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_master.inpadocno   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inpadocno") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_master.inpadocno = g_master_t.inpadocno
                  CALL ainp890_inpa_default()
                  NEXT FIELD CURRENT
               END IF
               CALL ainp890_inpa_default()
               IF NOT ainp890_freeze_chk() THEN
                  NEXT FIELD CURRENT
               END IF
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inpadocno
            #add-point:BEFORE FIELD inpadocno name="input.b.inpadocno"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE inpadocno
            #add-point:ON CHANGE inpadocno name="input.g.inpadocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD freeze
            #add-point:BEFORE FIELD freeze name="input.b.freeze"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD freeze
            
            #add-point:AFTER FIELD freeze name="input.a.freeze"
            IF g_master.freeze = 'Y' THEN   #存貨凍結
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt FROM inpb_t
                WHERE inpbent = g_enterprise
                  AND inpbdocno = g_master.inpadocno
                  AND inpb001 = '4'
               IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
               IF l_cnt = 0 THEN
                  LET g_master.freeze = ''
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ain-00304"
                  LET g_errparam.extend = g_master.inpadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()                      
                  NEXT FIELD inpadocno
               END IF                              
            END IF
            
            IF g_master.freeze = 'N' THEN   #解除存貨凍結
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt FROM inpb_t
                WHERE inpbent = g_enterprise
                  AND inpbdocno = g_master.inpadocno
                  AND inpb001 = '14'
               IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
               IF l_cnt = 0 THEN
                  LET g_master.freeze = ''
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ain-00305"
                  LET g_errparam.extend = g_master.inpadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err() 
                  NEXT FIELD inpadocno
               END IF          
            END IF 
            SELECT inpa006 INTO l_inpa006 FROM inpa_t
             WHERE inpaent = g_enterprise
               AND inpadocno = g_master.inpadocno
            IF cl_null(l_inpa006) THEN LET g_master.freeze = 'Y' END IF
            IF NOT cl_null(l_inpa006) THEN LET g_master.freeze = 'N' END IF     
            DISPLAY BY NAME g_master.freeze            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE freeze
            #add-point:ON CHANGE freeze name="input.g.freeze"
            
            #END add-point 
 
 
 
                     #Ctrlp:input.c.inpadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inpadocno
            #add-point:ON ACTION controlp INFIELD inpadocno name="input.c.inpadocno"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_master.inpadocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inpadocno_3()                                #呼叫開窗

            LET g_master.inpadocno = g_qryparam.return1              

            DISPLAY g_master.inpadocno TO inpadocno              #

            NEXT FIELD inpadocno                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.freeze
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD freeze
            #add-point:ON ACTION controlp INFIELD freeze name="input.c.freeze"
            
            #END add-point
 
 
 
               
            AFTER INPUT
               #add-point:資料輸入後 name="input.m.after_input"
               
               #end add-point
               
            #add-point:其他管控(on row change, etc...) name="input.other"
            
            #end add-point
         END INPUT
 
 
 
         
         
      
         #add-point:ui_dialog段construct
         
         #end add-point
         #add-point:ui_dialog段input
         
         #end add-point
         #add-point:ui_dialog段自定義display array
         
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL ainp890_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog
            
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear
         
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL ainp890_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog
      
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL ainp890_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = ainp890_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="ainp890.transfer_argv" >}
#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION ainp890_transfer_argv(ls_js)
 
   #add-point:transfer_agrv段define (客製用)
   
   #end add-point
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
 
{</section>}
 
{<section id="ainp890.process" >}
#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION ainp890_process(ls_js)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define 
   DEFINE l_inpc001   LIKE inpc_t.inpc001
   DEFINE l_sql       STRING
   DEFINE l_flag      LIKE type_t.num5
   DEFINE l_cnt_xd    LIKE type_t.num5   
   DEFINE l_success   LIKE type_t.num5   
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
   LET li_p01_status = 1
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理
   
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE ainp890_process_cs CURSOR FROM ls_sql
#  FOREACH ainp890_process_cs INTO
   #add-point:process段process
   
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      CALL s_transaction_begin()
      CALL cl_showmsg_init() 
      LET l_flag = 'Y'
      LET l_success = TRUE   
      IF g_master.freeze = 'Y' THEN    #存貨凍結        
         LET l_cnt_xd = 0
         SELECT COUNT(*) INTO l_cnt_xd FROM inpc_t
          WHERE inpcent = g_enterprise
           AND inpcsite = g_site
           AND inpcdocno = g_master.inpadocno
         IF cl_null(l_cnt_xd) THEN LET l_cnt_xd = 0 END IF       
         IF l_cnt_xd > 0 THEN   #有限定
            LET l_sql = " SELECT inpc001 FROM inpc_t ",
                        "  WHERE inpcent = '",g_enterprise,"'",
                        "    AND inpcdocno = '",g_master.inpadocno,"'"
            PREPARE ainp890_inpc_pre FROM l_sql
            DECLARE ainp890_inpc_cur CURSOR FOR ainp890_inpc_pre   
            FOREACH ainp890_inpc_cur INTO l_inpc001       
               UPDATE inaa_t SET inaa017 = 'Y'
                WHERE inaaent = g_enterprise
                  AND inaasite = g_site   
                  AND inaa001 = l_inpc001
               IF SQLCA.sqlcode <> 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "inaa_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()               
                  CALL s_transaction_end('N','0')
                  LET l_flag = 'N'              
                  EXIT FOREACH
               END IF                
            END FOREACH 
         ELSE
            UPDATE inaa_t SET inaa017 = 'Y'
             WHERE inaaent = g_enterprise
               AND inaasite = g_site
         
            IF SQLCA.sqlcode <> 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "inaa_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()              
               CALL s_transaction_end('N','0')
               RETURN 
            END IF         
         END IF
         IF l_flag = 'N' THEN   
            RETURN  
         END IF
         UPDATE inpa_t SET inpa006 = g_today   
          WHERE inpaent = g_enterprise
            AND inpadocno = g_master.inpadocno
         IF SQLCA.sqlcode <> 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "inpa_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()           
            CALL s_transaction_end('N','0')
            RETURN 
         END IF 
      END IF      
      
      IF g_master.freeze = 'N' THEN  #取消凍結   
         LET l_cnt_xd = 0
         SELECT COUNT(*) INTO l_cnt_xd FROM inpc_t,inpa_t
          WHERE inpaent = inpcent
            AND inpadocno = inpcdocno
            AND inpasite = inpcsite
            AND inpcent = g_enterprise
            AND inpcsite = g_site
            AND inpcdocno = g_master.inpadocno
            AND inpa006 IS NOT NULL

         IF cl_null(l_cnt_xd) THEN LET l_cnt_xd = 0 END IF       
         IF l_cnt_xd > 0 THEN   #有限定
            LET l_sql = " SELECT inpc001 FROM inpc_t ",
                        "  WHERE inpcent = '",g_enterprise,"'",
                        "    AND inpcdocno = '",g_master.inpadocno,"'"
            PREPARE ainp890_inpc_pre01 FROM l_sql
            DECLARE ainp890_inpc_cur01 CURSOR FOR ainp890_inpc_pre01   
            FOREACH ainp890_inpc_cur01 INTO l_inpc001       
               UPDATE inaa_t SET inaa017 = 'N'
                WHERE inaaent = g_enterprise
                  AND inaasite = g_site   
                  AND inaa001 = l_inpc001
               IF SQLCA.sqlcode <> 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "inaa_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()               
                  CALL s_transaction_end('N','0')
                  LET l_flag = 'N'              
                  EXIT FOREACH
               END IF                
            END FOREACH 
         ELSE
            UPDATE inaa_t SET inaa017 = 'N'
             WHERE inaaent = g_enterprise
               AND inaasite = g_site
         
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "inaa_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()              
               CALL s_transaction_end('N','0')
               RETURN 

            END IF         
         END IF
         IF l_flag = 'N' THEN   
            RETURN  
         END IF
#         UPDATE inpa_t SET inpa006 = ''  
#          WHERE inpaent = g_enterprise
#            AND inpadocno = g_master.inpadocno
#         IF SQLCA.sqlcode THEN
#            INITIALIZE g_errparam TO NULL
#            LET g_errparam.code = SQLCA.sqlcode
#            LET g_errparam.extend = "inpa_t"
#            LET g_errparam.popup = TRUE
#            CALL cl_err()           
#            CALL s_transaction_end('N','0')
#            RETURN 
#         ELSE
           #160517-00016#1
           #回写单身 inpd002
            UPDATE inpb_t SET inpb002 = 'Y',
                              inpb003 = 100            
             WHERE inpbent = g_enterprise
               AND inpbdocno = g_master.inpadocno   
               AND inpb001 = '14'
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "inpb_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()           
            CALL s_transaction_end('N','0')
            RETURN                
         END IF   
           #160517-00016#1               
#         END IF      
      END IF
      CALL s_transaction_end('Y','0')    
      DISPLAY 100 TO stagecomplete   
      CALL ainp890_inpa_default()      
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      DISPLAY 100 TO stagecomplete
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL ainp890_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="ainp890.get_buffer" >}
PRIVATE FUNCTION ainp890_get_buffer(p_dialog)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE p_dialog   ui.DIALOG
   #add-point:process段define
   
   #end add-point
 
   
   LET g_master.inpadocno = p_dialog.getFieldBuffer('inpadocno')
   LET g_master.freeze = p_dialog.getFieldBuffer('freeze')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="ainp890.msgcentre_notify" >}
PRIVATE FUNCTION ainp890_msgcentre_notify()
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE lc_state LIKE type_t.chr5
   #add-point:process段define
   
   #end add-point
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="ainp890.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

################################################################################
# Descriptions...: 帶出欄位資料
# Memo...........:
# Usage..........: CALL ainp890_inpa_default()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION ainp890_inpa_default()
   IF NOT cl_null(g_master.inpadocno) THEN
      SELECT inpa002,inpa005,inpa006 INTO g_master.inpa002,g_master.inpa005,g_master.inpa006 
        FROM inpa_t
       WHERE inpaent = g_enterprise
         AND inpadocno = g_master.inpadocno
      CALL s_desc_get_person_desc(g_master.inpa002) RETURNING g_master.inpa002_desc  
      DISPLAY BY NAME g_master.inpa002,g_master.inpa002_desc
      DISPLAY BY NAME g_master.inpa005,g_master.inpa006     
      IF NOT cl_null(g_master.inpa006) THEN 
         LET g_master.freeze = 'N'          
      END IF
#      IF NOT cl_null(g_master.inpa005) AND cl_null(g_master.inpa006) THEN
#         LET g_master.freeze = 'Y' 
#      END IF
      IF cl_null(g_master.inpa006) THEN
         LET g_master.freeze = 'Y' 
      END IF
      DISPLAY BY NAME g_master.freeze
   END IF
   
    
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ainp890_freeze_chk()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION ainp890_freeze_chk()
DEFINE  l_cnt       LIKE type_t.num5
DEFINE  l_inpa006   LIKE inpa_t.inpa006

   IF g_master.freeze = 'Y' THEN   #存貨凍結
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt FROM inpb_t
       WHERE inpbent = g_enterprise
         AND inpbdocno = g_master.inpadocno
         AND inpb001 = '4'
       IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
       IF l_cnt = 0 THEN
          LET g_master.freeze = ''
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = "ain-00304"
          LET g_errparam.extend = g_master.inpadocno
          LET g_errparam.popup = TRUE
          CALL cl_err()                      
          RETURN FALSE
       END IF                              
    END IF
    
    IF g_master.freeze = 'N' THEN   #解除存貨凍結
       LET l_cnt = 0
       SELECT COUNT(*) INTO l_cnt FROM inpb_t
        WHERE inpbent = g_enterprise
          AND inpbdocno = g_master.inpadocno
          AND inpb001 = '14'
       IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
       IF l_cnt = 0 THEN
          LET g_master.freeze = ''
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = "ain-00305"
          LET g_errparam.extend = g_master.inpadocno
          LET g_errparam.popup = TRUE
          CALL cl_err() 
          RETURN FALSE
       END IF          
    END IF 
    SELECT inpa006 INTO l_inpa006 FROM inpa_t
     WHERE inpaent = g_enterprise
       AND inpadocno = g_master.inpadocno
    IF cl_null(l_inpa006) THEN LET g_master.freeze = 'Y' END IF
    IF NOT cl_null(l_inpa006) THEN LET g_master.freeze = 'N' END IF     
    DISPLAY BY NAME g_master.freeze
    RETURN TRUE
END FUNCTION

#end add-point
 
{</section>}
 
