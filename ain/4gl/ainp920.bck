#該程式未解開Section, 採用最新樣板產出!
{<section id="ainp920.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0002(2014-12-24 16:07:41), PR版次:0002(1900-01-01 00:00:00)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000059
#+ Filename...: ainp920
#+ Description: ABC料件分類計算作業
#+ Creator....: 02295(2014-10-22 13:53:25)
#+ Modifier...: 02295 -SD/PR- 00000
 
{</section>}
 
{<section id="ainp920.global" >}
#應用 p01 樣板自動產生(Version:18)
#add-point:填寫註解說明
#Memos
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       inph0071 LIKE type_t.chr1, 
   inph001 LIKE type_t.chr1, 
   inph003 LIKE type_t.chr1, 
   inph002 LIKE type_t.num5, 
   inph005 LIKE type_t.num20_6, 
   inph006 LIKE type_t.num20_6, 
   inph0072 LIKE type_t.chr1, 
   inph004 LIKE type_t.chr1, 
   inph008 LIKE type_t.num20_6, 
   inph009 LIKE type_t.num20_6, 
   inph0073 LIKE type_t.chr1, 
   yy LIKE type_t.chr500, 
   stage LIKE type_t.chr500, 
   print LIKE type_t.chr500, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
DEFINE g_tmc   STRING
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
 
#add-point:傳入參數說明

#end add-point
 
{</section>}
 
{<section id="ainp920.main" >}
MAIN
   #add-point:main段define (客製用)
   
   #end add-point 
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call
      
      #end add-point
      CALL ainp920_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ainp920 WITH FORM cl_ap_formpath("ain",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL ainp920_init()
 
      #進入選單 Menu (="N")
      CALL ainp920_ui_dialog()
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_ainp920
   END IF
 
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="ainp920.init" >}
#+ 初始化作業
PRIVATE FUNCTION ainp920_init()
 
   #add-point:init段define (客製用)
   
   #end add-point
   #add-point:ui_dialog段define 
   
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   CALL cl_set_combo_scc_part('inph0071','2212','1')
   CALL cl_set_combo_scc_part('inph0072','2212','2')
   CALL cl_set_combo_scc_part('inph0073','2212','3')
   CALL cl_set_combo_scc('inph001','2209') 
   CALL cl_set_combo_scc('inph003','2210') 
   CALL cl_set_combo_scc('inph004','2211')          
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="ainp920.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION ainp920_ui_dialog()
 
   #add-point:ui_dialog段define (客製用)
   
   #end add-point
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 
   
   #end add-point
   
   #add-point:ui_dialog段before dialog
   
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:3)
         INPUT BY NAME g_master.inph0071,g_master.inph001,g_master.inph003,g_master.inph002,g_master.inph005, 
             g_master.inph006,g_master.inph0072,g_master.inph004,g_master.inph008,g_master.inph009,g_master.inph0073, 
             g_master.yy,g_master.stage,g_master.print 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前 name="input.m.before_input"
               SELECT inph007,inph001,inph002,inph003,inph005,inph006,inph007,
                      inph004,inph008,inph009,inph007
                 INTO g_master.inph0071,g_master.inph001,g_master.inph002,g_master.inph003,
                      g_master.inph005,g_master.inph006,g_master.inph0072,
                      g_master.inph004,g_master.inph008,g_master.inph009,g_master.inph0073
                 FROM inph_t
                WHERE inphent = g_enterprise
                  AND inphsite = g_site 
                LET g_master.yy = '' 
                LET g_master.stage = ''
                LET g_master.print ='N'  
                DISPLAY BY NAME g_master.*   
               #end add-point
         
                     #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inph0071
            #add-point:BEFORE FIELD inph0071 name="input.b.inph0071"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inph0071
            
            #add-point:AFTER FIELD inph0071 name="input.a.inph0071"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE inph0071
            #add-point:ON CHANGE inph0071 name="input.g.inph0071"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inph001
            #add-point:BEFORE FIELD inph001 name="input.b.inph001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inph001
            
            #add-point:AFTER FIELD inph001 name="input.a.inph001"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE inph001
            #add-point:ON CHANGE inph001 name="input.g.inph001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inph003
            #add-point:BEFORE FIELD inph003 name="input.b.inph003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inph003
            
            #add-point:AFTER FIELD inph003 name="input.a.inph003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE inph003
            #add-point:ON CHANGE inph003 name="input.g.inph003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inph002
            #add-point:BEFORE FIELD inph002 name="input.b.inph002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inph002
            
            #add-point:AFTER FIELD inph002 name="input.a.inph002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE inph002
            #add-point:ON CHANGE inph002 name="input.g.inph002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inph005
            #add-point:BEFORE FIELD inph005 name="input.b.inph005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inph005
            
            #add-point:AFTER FIELD inph005 name="input.a.inph005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE inph005
            #add-point:ON CHANGE inph005 name="input.g.inph005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inph006
            #add-point:BEFORE FIELD inph006 name="input.b.inph006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inph006
            
            #add-point:AFTER FIELD inph006 name="input.a.inph006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE inph006
            #add-point:ON CHANGE inph006 name="input.g.inph006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inph0072
            #add-point:BEFORE FIELD inph0072 name="input.b.inph0072"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inph0072
            
            #add-point:AFTER FIELD inph0072 name="input.a.inph0072"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE inph0072
            #add-point:ON CHANGE inph0072 name="input.g.inph0072"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inph004
            #add-point:BEFORE FIELD inph004 name="input.b.inph004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inph004
            
            #add-point:AFTER FIELD inph004 name="input.a.inph004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE inph004
            #add-point:ON CHANGE inph004 name="input.g.inph004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inph008
            #add-point:BEFORE FIELD inph008 name="input.b.inph008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inph008
            
            #add-point:AFTER FIELD inph008 name="input.a.inph008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE inph008
            #add-point:ON CHANGE inph008 name="input.g.inph008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inph009
            #add-point:BEFORE FIELD inph009 name="input.b.inph009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inph009
            
            #add-point:AFTER FIELD inph009 name="input.a.inph009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE inph009
            #add-point:ON CHANGE inph009 name="input.g.inph009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inph0073
            #add-point:BEFORE FIELD inph0073 name="input.b.inph0073"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inph0073
            
            #add-point:AFTER FIELD inph0073 name="input.a.inph0073"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE inph0073
            #add-point:ON CHANGE inph0073 name="input.g.inph0073"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD yy
            #add-point:BEFORE FIELD yy name="input.b.yy"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD yy
            
            #add-point:AFTER FIELD yy name="input.a.yy"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE yy
            #add-point:ON CHANGE yy name="input.g.yy"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stage
            #add-point:BEFORE FIELD stage name="input.b.stage"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stage
            
            #add-point:AFTER FIELD stage name="input.a.stage"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stage
            #add-point:ON CHANGE stage name="input.g.stage"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD print
            #add-point:BEFORE FIELD print name="input.b.print"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD print
            
            #add-point:AFTER FIELD print name="input.a.print"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE print
            #add-point:ON CHANGE print name="input.g.print"
            
            #END add-point 
 
 
 
                     #Ctrlp:input.c.inph0071
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inph0071
            #add-point:ON ACTION controlp INFIELD inph0071 name="input.c.inph0071"
            
            #END add-point
 
 
         #Ctrlp:input.c.inph001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inph001
            #add-point:ON ACTION controlp INFIELD inph001 name="input.c.inph001"
            
            #END add-point
 
 
         #Ctrlp:input.c.inph003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inph003
            #add-point:ON ACTION controlp INFIELD inph003 name="input.c.inph003"
            
            #END add-point
 
 
         #Ctrlp:input.c.inph002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inph002
            #add-point:ON ACTION controlp INFIELD inph002 name="input.c.inph002"
            
            #END add-point
 
 
         #Ctrlp:input.c.inph005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inph005
            #add-point:ON ACTION controlp INFIELD inph005 name="input.c.inph005"
            
            #END add-point
 
 
         #Ctrlp:input.c.inph006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inph006
            #add-point:ON ACTION controlp INFIELD inph006 name="input.c.inph006"
            
            #END add-point
 
 
         #Ctrlp:input.c.inph0072
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inph0072
            #add-point:ON ACTION controlp INFIELD inph0072 name="input.c.inph0072"
            
            #END add-point
 
 
         #Ctrlp:input.c.inph004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inph004
            #add-point:ON ACTION controlp INFIELD inph004 name="input.c.inph004"
            
            #END add-point
 
 
         #Ctrlp:input.c.inph008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inph008
            #add-point:ON ACTION controlp INFIELD inph008 name="input.c.inph008"
            
            #END add-point
 
 
         #Ctrlp:input.c.inph009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inph009
            #add-point:ON ACTION controlp INFIELD inph009 name="input.c.inph009"
            
            #END add-point
 
 
         #Ctrlp:input.c.inph0073
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inph0073
            #add-point:ON ACTION controlp INFIELD inph0073 name="input.c.inph0073"
            
            #END add-point
 
 
         #Ctrlp:input.c.yy
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD yy
            #add-point:ON ACTION controlp INFIELD yy name="input.c.yy"
            
            #END add-point
 
 
         #Ctrlp:input.c.stage
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stage
            #add-point:ON ACTION controlp INFIELD stage name="input.c.stage"
            
            #END add-point
 
 
         #Ctrlp:input.c.print
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD print
            #add-point:ON ACTION controlp INFIELD print name="input.c.print"
            
            #END add-point
 
 
 
               
            AFTER INPUT
               #add-point:資料輸入後 name="input.m.after_input"
               
               #end add-point
               
            #add-point:其他管控(on row change, etc...) name="input.other"
            
            #end add-point
         END INPUT
 
 
 
         
         
      
         #add-point:ui_dialog段construct
         
         #end add-point
         #add-point:ui_dialog段input
 
         #end add-point
         #add-point:ui_dialog段自定義display array
         
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL ainp920_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog
            DISPLAY 0 TO stagecomplete
            DISPLAY '' TO stagenow
            NEXT FIELD yy
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear
         
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL ainp920_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog
      
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL ainp920_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = ainp920_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="ainp920.transfer_argv" >}
#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION ainp920_transfer_argv(ls_js)
 
   #add-point:transfer_agrv段define (客製用)
   
   #end add-point
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
 
{</section>}
 
{<section id="ainp920.process" >}
#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION ainp920_process(ls_js)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define 
   DEFINE l_stagecount LIKE type_t.num5
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
   LET li_p01_status = 1
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理
   LET g_tmc = "1=1"
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE ainp920_process_cs CURSOR FROM ls_sql
#  FOREACH ainp920_process_cs INTO
   #add-point:process段process
   CALL s_transaction_begin()
   LET g_success = 'Y'
   CASE g_master.inph0071
      WHEN '1' CALL ainp920_p1()
      WHEN '2' CALL ainp920_p2()
      WHEN '3' CALL ainp920_p3()
   END CASE
   LET l_stagecount = 100
   DISPLAY l_stagecount TO FORMONLY.stagecomplete  
   IF g_success = 'Y' THEN 
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
   
   IF g_master.print = 'Y' THEN 
      CASE g_master.inph0071
         WHEN '1'      
            IF g_master.inph001 = '1' THEN      
               CALL ainr900_x01(g_tmc,'Y')
            ELSE
               CALL ainr900_x03(g_tmc,'Y')
            END IF 
         WHEN '2'
            CALL ainr900_x04(g_tmc,'Y')
         WHEN '3'
            CALL ainr900_x02(g_tmc,'Y')
      END CASE   
   END IF
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL ainp920_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="ainp920.get_buffer" >}
PRIVATE FUNCTION ainp920_get_buffer(p_dialog)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE p_dialog   ui.DIALOG
   #add-point:process段define
   
   #end add-point
 
   
   LET g_master.inph0071 = p_dialog.getFieldBuffer('inph0071')
   LET g_master.inph001 = p_dialog.getFieldBuffer('inph001')
   LET g_master.inph003 = p_dialog.getFieldBuffer('inph003')
   LET g_master.inph002 = p_dialog.getFieldBuffer('inph002')
   LET g_master.inph005 = p_dialog.getFieldBuffer('inph005')
   LET g_master.inph006 = p_dialog.getFieldBuffer('inph006')
   LET g_master.inph0072 = p_dialog.getFieldBuffer('inph0072')
   LET g_master.inph004 = p_dialog.getFieldBuffer('inph004')
   LET g_master.inph008 = p_dialog.getFieldBuffer('inph008')
   LET g_master.inph009 = p_dialog.getFieldBuffer('inph009')
   LET g_master.inph0073 = p_dialog.getFieldBuffer('inph0073')
   LET g_master.yy = p_dialog.getFieldBuffer('yy')
   LET g_master.stage = p_dialog.getFieldBuffer('stage')
   LET g_master.print = p_dialog.getFieldBuffer('print')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="ainp920.msgcentre_notify" >}
PRIVATE FUNCTION ainp920_msgcentre_notify()
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE lc_state LIKE type_t.chr5
   #add-point:process段define
   
   #end add-point
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="ainp920.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

################################################################################
#依過去期間
################################################################################
PRIVATE FUNCTION ainp920_p1()
DEFINE g1,g2      LIKE type_t.num10    
DEFINE l_imaa001  LIKE imaa_t.imaa001,
       l_amt      LIKE xccc_t.xccc902,
       l_tt       LIKE xccc_t.xccc902,
       l_sum      LIKE xccc_t.xccc902,
       l_imaf057  LIKE imaf_t.imaf057,
       l_inpr002  LIKE inpr_t.inpr002
DEFINE l_count    LIKE type_t.num5
DEFINE l_stagecount LIKE type_t.num5
DEFINE l_cnt      LIKE type_t.num5
DEFINE l_stagenow STRING
DEFINE l_ooef017  LIKE ooef_t.ooef017

   DROP TABLE temp_x;

   CREATE TEMP TABLE temp_x(
     imaa01  varchar(40),
     l_amt   decimal(10,2));
     
   LET g1=g_master.yy*13+g_master.stage
   LET g2=g1-g_master.inph002
   
   SELECT ooef017 INTO l_ooef017
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site
      
   IF g_master.inph001 = '1' THEN   
      IF g_master.inph003 = '1' THEN  
         LET g_sql = " INSERT INTO temp_x ",
                     " SELECT DISTINCT imaa001,SUM(xccc902)-SUM(xccc903)-SUM(xccc401-xccc402)",
                     "  FROM imaa_t,xccc_t ",  
                     " WHERE xcccent = imaaent AND xccc006 = imaa001 ",
                     "   AND imaaent = '",g_enterprise,"'",
                     "   AND imaastus = 'Y' ",
                     "   AND xccccomp = '",l_ooef017,"'",
                     "   AND (xccc004*13+xccc005) BETWEEN ",g2," AND ",g1,
                     " GROUP BY imaa001"
      ELSE
         LET g_sql = "INSERT INTO temp_x ",
                     " SELECT DISTINCT imaa001,SUM(xccc903)+SUM(xccc401-xccc402)",
                     "  FROM imaa_t,xccc_t ",  
                     " WHERE xcccent = imaaent AND xccc006 = imaa001 ",
                     "   AND imaaent = '",g_enterprise,"'",
                     "   AND imaastus = 'Y' ",
                     "   AND xccccomp = '",l_ooef017,"'",
                     "   AND (xccc004*13+xccc005) BETWEEN ",g2," AND ",g1,
                     " GROUP BY imaa001"
      END IF
   ELSE
      LET g_sql = "INSERT INTO temp_x ",
                  "SELECT DISTINCT imaa001,SUM(xccc902)",
                  "  FROM imaa_t,xccc_t ",  
                  " WHERE xcccent = imaaent AND xccc006 = imaa001 ",
                  "   AND imaaent = '",g_enterprise,"'",
                  "   AND imaastus = 'Y' ",
                  "   AND xccccomp = '",l_ooef017,"'",
                  "   AND (xccc004*13+xccc005) BETWEEN ",g2," AND ",g1,
                  " GROUP BY imaa001"
   END IF
   PREPARE ainp920_pb FROM g_sql
   EXECUTE ainp920_pb
   
   LET g_sql = " SELECT SUM(l_amt)  FROM temp_x "
   PREPARE get_tt FROM g_sql
   EXECUTE get_tt INTO l_tt
   
   SELECT COUNT(*) INTO l_count
     FROM temp_x
     
   DECLARE ainp920_cs CURSOR WITH HOLD FOR
           SELECT DISTINCT temp_x.imaa01,temp_x.l_amt 
             FROM temp_x
            ORDER BY temp_x.l_amt DESC
   LET l_sum  = 0 
   
   LET l_cnt = 1   
   FOREACH ainp920_cs INTO l_imaa001,l_amt
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
      
      LET l_stagecount = l_cnt/l_count
      DISPLAY l_stagecount TO FORMONLY.stagecomplete
      LET l_stagenow = l_imaa001
      DISPLAY l_stagenow TO stagenow
      
      IF l_cnt = 1 THEN 
         LET g_tmc = " inpr001 IN ('",l_imaa001,"'" 
      ELSE
         LET g_tmc = g_tmc,",'",l_imaa001,"'"
      END IF
      LET l_sum = l_sum + l_amt 
      SELECT imaf057 INTO l_imaf057 FROM imaf_t
        WHERE imafent = g_enterprise
          AND imafsite = g_site
          AND imaf001 = l_imaa001
    
      IF (l_sum/l_tt)*100 <= g_master.inph005 THEN 
         UPDATE imaf_t SET imaf057 = 'A'
          WHERE imafent = g_enterprise
            AND imafsite = g_site
            AND imaf001 = l_imaa001
         IF SQLCA.sqlcode THEN 
            LET g_success = 'N'
            EXIT FOREACH
         END IF
         LET l_inpr002 = 'A'
      ELSE
         IF (l_sum/l_tt)*100 <= g_master.inph006 THEN
            UPDATE imaf_t SET imaf057 = 'B'
             WHERE imafent = g_enterprise
               AND imafsite = g_site
               AND imaf001 = l_imaa001 
            IF SQLCA.sqlcode THEN 
               LET g_success = 'N'
               EXIT FOREACH
            END IF
            LET l_inpr002 = 'B'            
         ELSE 
            UPDATE imaf_t SET imaf057 = 'C'
             WHERE imafent = g_enterprise
               AND imafsite = g_site
               AND imaf001 = l_imaa001
            IF SQLCA.sqlcode THEN 
               LET g_success = 'N'
               EXIT FOREACH
            END IF 
            LET l_inpr002 = 'C'            
         END IF
      END IF 
      DELETE FROM inpr_t
       WHERE inprent = g_enterprise
         AND inprsite = g_site
         AND inpr001 = l_imaa001
      IF g_master.inph001 = '1' THEN 
         INSERT INTO inpr_t
          VALUES (g_enterprise,g_site,l_imaa001,l_inpr002,l_imaf057,g_master.inph0071,0,l_sum,0,
                  g_master.yy,g_master.stage)
      ELSE
         INSERT INTO inpr_t
          VALUES (g_enterprise,g_site,l_imaa001,l_inpr002,l_imaf057,g_master.inph0071,0,0,l_sum,
                  g_master.yy,g_master.stage)
      END IF
      IF SQLCA.sqlcode THEN 
         LET g_success = 'N'
         EXIT FOREACH
      END IF
      LET l_cnt = l_cnt + 1      
   END FOREACH
   LET g_tmc= g_tmc,")"
   DROP TABLE temp_x;
   
END FUNCTION

################################################################################
#依料件成本
################################################################################
PRIVATE FUNCTION ainp920_p2()

END FUNCTION

################################################################################
#依產品分類
################################################################################
PRIVATE FUNCTION ainp920_p3()
DEFINE l_sql  STRING

 
   LET l_sql =  " DELETE FROM inpr_t ",
                "  WHERE inprent = '",g_enterprise,"'",
                "    AND inprsite = '",g_site,"'",
                "    AND inpr001 IN (SELECT imaa001 FROM imaa_t,inpi_t WHERE imaaent = inpient AND imaaent = '",g_enterprise,"' AND imaa009 = inpi002 AND inpisite = '",g_site,"' AND (inpi001 = 'A' OR inpi001 = 'B' OR inpi001 = 'C'))"
   PREPARE del_inpr FROM l_sql
   EXECUTE del_inpr 
   IF SQLCA.sqlcode THEN 
      LET g_success = 'N'
      RETURN
   END IF                    
   LET l_sql =  "INSERT INTO inpr_t ",
                " SELECT imafent,imafsite,imaf001,'A',imaf057,'",g_master.inph0071,"',0,0,0,'",g_master.yy,"','",g_master.stage,"'",
                "   FROM imaf_t ",
                "  WHERE imafent = '",g_enterprise,"'",
                "    AND imafsite = '",g_site,"'",
                "    AND imaf001 IN (SELECT imaa001 FROM imaa_t,inpi_t WHERE imaaent = inpient AND imaaent = '",g_enterprise,"' AND imaa009 = inpi002 AND inpisite = '",g_site,"' AND inpi001 = 'A')"        
   PREPARE ins_inpr1 FROM l_sql
   EXECUTE ins_inpr1 
   IF SQLCA.sqlcode THEN 
      LET g_success = 'N'
      RETURN
   END IF 
   
   UPDATE imaf_t
      SET imaf057 = 'A'
    WHERE imafent = g_enterprise
      AND imafsite = g_site
      AND imaf001 IN (SELECT imaa001 FROM imaa_t,inpi_t WHERE imaaent = inpient AND imaaent = g_enterprise AND imaa009 = inpi002 AND inpisite = g_site AND inpi001 = 'A') 
   IF SQLCA.sqlcode THEN 
      LET g_success = 'N'
      RETURN
   END IF 
   
   LET l_sql =  "INSERT INTO inpr_t ",
                " SELECT imafent,imafsite,imaf001,'B',imaf057,'",g_master.inph0071,"',0,0,0,'",g_master.yy,"','",g_master.stage,"'",
                "   FROM imaf_t ",
                "  WHERE imafent = '",g_enterprise,"'",
                "    AND imafsite = '",g_site,"'",
                "    AND imaf001 IN (SELECT imaa001 FROM imaa_t,inpi_t WHERE imaaent = inpient AND imaaent = '",g_enterprise,"' AND imaa009 = inpi002 AND inpisite = '",g_site,"' AND inpi001 = 'B')"        
   PREPARE ins_inpr2 FROM l_sql
   EXECUTE ins_inpr2 
   IF SQLCA.sqlcode THEN 
      LET g_success = 'N'
      RETURN
   END IF 

   UPDATE imaf_t
      SET imaf057 = 'B'
    WHERE imafent = g_enterprise
      AND imafsite = g_site
      AND imaf001 IN (SELECT imaa001 FROM imaa_t,inpi_t WHERE imaaent = inpient AND imaaent = g_enterprise AND imaa009 = inpi002 AND inpisite = g_site AND inpi001 = 'B') 
   IF SQLCA.sqlcode THEN 
      LET g_success = 'N'
      RETURN
   END IF 
   
   LET l_sql =  "INSERT INTO inpr_t ",
                " SELECT imafent,imafsite,imaf001,'C',imaf057,'",g_master.inph0071,"',0,0,0,'",g_master.yy,"','",g_master.stage,"'",
                "   FROM imaf_t ",
                "  WHERE imafent = '",g_enterprise,"'",
                "    AND imafsite = '",g_site,"'",
                "    AND imaf001 IN (SELECT imaa001 FROM imaa_t,inpi_t WHERE imaaent = inpient AND imaaent = '",g_enterprise,"' AND imaa009 = inpi002 AND inpisite = '",g_site,"' AND inpi001 = 'C')"        
   PREPARE ins_inpr3 FROM l_sql
   EXECUTE ins_inpr3 
   IF SQLCA.sqlcode THEN 
      LET g_success = 'N'
      RETURN
   END IF 
   
   UPDATE imaf_t
      SET imaf057 = 'C'
    WHERE imafent = g_enterprise
      AND imafsite = g_site
      AND imaf001 IN (SELECT imaa001 FROM imaa_t,inpi_t WHERE imaaent = inpient AND imaaent = g_enterprise AND imaa009 = inpi002 AND inpisite = g_site AND inpi001 = 'C') 
   IF SQLCA.sqlcode THEN 
      LET g_success = 'N'
      RETURN
   END IF 
    
   LET g_tmc =  " inpr001 IN (SELECT DISTINCT imaa001 FROM imaa_t,inpi_t WHERE imaaent = inpient AND imaaent = '",g_enterprise,"' AND imaa009 = inpi002 AND inpisite = '",g_site,"' )" 
END FUNCTION

#end add-point
 
{</section>}
 
