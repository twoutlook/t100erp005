<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="ainp870" std_prog="ainp870" erpver="1.0" module="AIN" ver="3" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="P" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.ainp870_inpa002_desc" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 人員说明
# Memo...........:
# Usage..........: CALL ainp870_inpa002_desc()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION ainp870_inpa002_desc()
   SELECT inpa002 INTO g_master.inpa002 FROM inpa_t 
    WHERE inpaent = g_enterprise
      AND inpadocno = g_master.inpadocno   
   CALL s_desc_get_person_desc(g_master.inpa002) RETURNING g_master.inpa002_desc 
   DISPLAY BY NAME g_master.inpa002_desc 
   DISPLAY BY NAME g_master.inpa002
END FUNCTION]]>
  </point>
  <point name="function.ainp870_set_no_entry" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ainp870_set_no_entry()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION ainp870_set_no_entry()
DEFINE l_inpa009    LIKE inpa_t.inpa009
DEFINE l_inpa010    LIKE inpa_t.inpa009
DEFINE l_inpa011    LIKE inpa_t.inpa009
DEFINE l_inpa012    LIKE inpa_t.inpa009
DEFINE l_inpa013    LIKE inpa_t.inpa009
DEFINE l_inpa014    LIKE inpa_t.inpa009
DEFINE l_inpa015    LIKE inpa_t.inpa009
DEFINE l_inpa016    LIKE inpa_t.inpa009

   SELECT inpa009,inpa010,inpa011,inpa012,inpa013,inpa014,inpa015,inpa016 
     INTO l_inpa009,l_inpa010,l_inpa011,l_inpa012,l_inpa013,l_inpa014,l_inpa015,l_inpa016
     FROM inpa_t
    WHERE inpaent = g_enterprise
      AND inpadocno = g_master.inpadocno
      
   IF l_inpa009 = 'N' AND l_inpa010 = 'N' AND l_inpa011 = 'N' AND l_inpa012 = 'N' THEN
      CALL cl_set_comp_entry("blank1,number1",FALSE)      
   END IF
   
   IF l_inpa013 = 'N' AND l_inpa014 = 'N' AND l_inpa015 = 'N' AND l_inpa016 = 'N' THEN
      CALL cl_set_comp_entry("blank2,number2",FALSE)      
   END IF   
   IF g_master.blank1 = 'N' THEN
      CALL cl_set_comp_entry("number1",FALSE)
   END IF
   IF g_master.blank2 = 'N' THEN
      CALL cl_set_comp_entry("number2",FALSE)
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.ainp870_set_entry" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ainp870_set_entry()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION ainp870_set_entry()
   CALL cl_set_comp_entry("blank1,number1,blank2,number2",TRUE)
END FUNCTION]]>
  </point>
  <point name="function.ainp870_set_no_required" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ainp870_set_no_required()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION ainp870_set_no_required()
   CALL cl_set_comp_required("number1",FALSE)
   CALL cl_set_comp_required("number2",FALSE)
END FUNCTION]]>
  </point>
  <point name="function.ainp870_set_required" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL ainp870_set_required()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION ainp870_set_required()
   IF g_master.blank1 = 'Y' THEN  
      CALL cl_set_comp_required("number1",TRUE)
   END IF
   IF g_master.blank2 = 'Y' THEN    
      CALL cl_set_comp_required("number2",TRUE)
   END IF  
END FUNCTION]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_master_t  type_master]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF cl_null(g_master.blank1) THEN LET g_master.blank1 = 'N' END IF
   IF cl_null(g_master.blank2) THEN LET g_master.blank2 = 'N' END IF]]>
  </point>
  <point name="input.a.blank1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL ainp870_set_entry()
               CALL ainp870_set_no_required()
               CALL ainp870_set_required()                 
               CALL ainp870_set_no_entry()]]>
  </point>
  <point name="input.a.blank2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL ainp870_set_entry()
               CALL ainp870_set_no_required()
               CALL ainp870_set_required()                 
               CALL ainp870_set_no_entry()]]>
  </point>
  <point name="input.a.inpadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_aooi200_get_slip_desc(g_master.inpadocno) RETURNING g_master.inpadocno_desc
               DISPLAY BY NAME g_master.inpadocno_desc  
               IF NOT cl_null(g_master.inpadocno) THEN 

                  INITIALIZE g_chkparam.* TO NULL
               
                  LET g_chkparam.arg1 = g_master.inpadocno
                  
                  IF cl_chk_exist("v_inpadocno") THEN
                  ELSE
                     LET g_master.inpadocno = g_master_t.inpadocno
                     CALL ainp870_inpa002_desc()
                     NEXT FIELD inpadocno
                  END IF 
                  #未過賬
                  SELECT COUNT(*) INTO l_cnt FROM inpd_t
                   WHERE inpdent = g_enterprise
                     AND inpdsite = g_site
                     AND inpd008 = g_master.inpadocno
                     AND inpdstus = 'S'
                  IF l_cnt > 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "ain-00302"
                     LET g_errparam.extend = "inpd_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()   
                     LET g_master.inpadocno = g_master_t.inpadocno      
                     CALL s_aooi200_get_slip_desc(g_master.inpadocno) RETURNING g_master.inpadocno_desc 
                     DISPLAY BY NAME g_master.inpadocno_desc                     
                     NEXT FIELD inpadocno
                  END IF                  
                  CALL s_aooi200_get_slip_desc(g_master.inpadocno) RETURNING g_master.inpadocno_desc 
                  DISPLAY BY NAME g_master.inpadocno_desc                  
                  CALL ainp870_inpa002_desc()
               ELSE 
                  LET g_master.inpa002 = ''
                  LET g_master.inpa002_desc = '' 
                  DISPLAY BY NAME g_master.inpa002_desc 
                  DISPLAY BY NAME g_master.inpa002                  
               END IF
               CALL ainp870_set_entry()
               CALL ainp870_set_no_required()
               CALL ainp870_set_required()                 
               CALL ainp870_set_no_entry()               
               NEXT FIELD blank1]]>
  </point>
  <point name="input.a.number1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_master.number1) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.number2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_master.number2) THEN 
            END IF 

]]>
  </point>
  <point name="input.c.inpadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_master.inpadocno             #給予default值

            #給予arg
            
            CALL q_inpadocno_3()                                #呼叫開窗

            LET g_master.inpadocno = g_qryparam.return1              

            DISPLAY g_master.inpadocno TO inpadocno              #

            NEXT FIELD inpadocno                          #返回原欄位

]]>
  </point>
  <point name="input.g.blank1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL ainp870_set_entry()
               CALL ainp870_set_no_required()
               CALL ainp870_set_required()                 
               CALL ainp870_set_no_entry()
            IF g_master.blank1 = 'N' THEN 
               LET g_master.number1 = ''
               DISPLAY g_master.number1 TO number1
            END IF                   ]]>
  </point>
  <point name="input.g.blank2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL ainp870_set_entry()
               CALL ainp870_set_no_required()
               CALL ainp870_set_required()                 
               CALL ainp870_set_no_entry()
            IF g_master.blank2 = 'N' THEN 
               LET g_master.number2 = ''
               DISPLAY g_master.number2 TO number2
            END IF                   ]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_master.blank1 = 'N'
               LET g_master.blank2 = 'N'
               LET g_master.number1 = ''
               LET g_master.number2 = ''
               CALL ainp870_set_entry()
               CALL ainp870_set_no_required()
               CALL ainp870_set_required()                 
               CALL ainp870_set_no_entry()]]>
  </point>
  <point name="process.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_inpa      RECORD LIKE inpa_t.*
   DEFINE l_cnt       LIKE type_t.num5  
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_flag      LIKE type_t.chr1   
   DEFINE l_inpd      RECORD LIKE inpd_t.*
   DEFINE g_inpddocno LIKE inpa_t.inpadocno
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_inpf      RECORD LIKE inpf_t.*   
   DEFINE l_inpg      RECORD LIKE inpg_t.*    
   DEFINE l_i         LIKE type_t.num5
   DEFINE l_sql       STRING        ]]>
  </point>
  <point name="process.process" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   SELECT * INTO l_inpa.* FROM inpa_t 
    WHERE inpaent = g_enterprise
      AND inpasite = g_site
      AND inpadocno = g_master.inpadocno
   CALL s_transaction_begin()   
   IF g_master.blank1 = 'Y' THEN   #現有庫存空白標籤
      IF g_master.blank1 = 'Y' AND g_master.number1 > 0 THEN   #產生空白標籤
         IF l_inpa.inpa020 = '2' THEN  #同盤點卡號用項次呈現
            IF NOT cl_null(l_inpa.inpa019) THEN
               CALL s_aooi200_gen_docno(g_site,l_inpa.inpa019,g_today,'aint830') 
                    RETURNING r_success,g_inpddocno            
            END IF
         END IF   
            FOR l_i = 1 TO g_master.number1
                INITIALIZE l_inpd.* TO NULL
                
                IF l_inpa.inpa020 = '2' THEN  #同盤點卡號用項次呈現
                   LET l_inpd.inpddocno = g_inpddocno 
                   SELECT MAX(inpdseq)+1 INTO l_inpd.inpdseq FROM inpd_t
                    WHERE inpdent = g_enterprise
                      AND inpdsite = g_site
                      AND inpddocno = g_inpddocno    
                   IF cl_null(l_inpd.inpdseq) THEN LET l_inpd.inpdseq = 1 END IF      
                ELSE
                   #一料一盤點卡號 =>不同資料，依序增加   
                   LET g_inpddocno = ''
                   CALL s_aooi200_gen_docno(g_site,l_inpa.inpa019,g_today,'aint830')    
                        RETURNING r_success,g_inpddocno      
                   LET l_inpd.inpddocno = g_inpddocno    
                   LET l_inpd.inpdseq = 0                   
                END IF
                
                LET l_inpd.inpd008 = g_master.inpadocno
                LET l_inpd.inpd009 ='Y'
                LET l_inpd.inpd016 = g_user
                LET l_inpd.inpd017 = g_today   
                LET l_inpd.inpdownid = g_user
                LET l_inpd.inpdowndp = g_dept
                LET l_inpd.inpdcrtid = g_user
                LET l_inpd.inpdcrtdp = g_dept  
                LET l_inpd.inpdcrtdt = g_today
                LET l_inpd.inpdstus = 'N'                
                INSERT INTO inpd_t (inpdent,inpdsite,inpddocno,inpdseq,inpd008,inpd009,inpd016,inpd017,inpdownid,inpdowndp,
                                    inpdcrtid,inpdcrtdp,inpdcrtdt,inpdstus)
                            VALUES (g_enterprise,g_site,l_inpd.inpddocno,l_inpd.inpdseq,l_inpd.inpd008,l_inpd.inpd009,
                                    l_inpd.inpd016,l_inpd.inpd017,l_inpd.inpdownid,l_inpd.inpdowndp,l_inpd.inpdcrtid,
                                    l_inpd.inpdcrtdp,l_inpd.inpdcrtdt,l_inpd.inpdstus)  
                IF SQLCA.sqlerrd[3] = 0 THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = "std-00009"
                   LET g_errparam.extend = "inpd_t"
                   LET g_errparam.popup = TRUE
                   CALL cl_err()                     
                   CALL s_transaction_end('N','0')
                   RETURN                
                END IF                
            END FOR        
      END IF    
   END IF
   CALL s_transaction_end('Y','0')
   CALL s_transaction_begin()  
   IF g_master.blank2 = 'Y' THEN   #在製工單空白標籤
      IF g_master.blank2 = 'Y' THEN   #產生在製程工單空白標籤
         LET g_inpddocno = ''
         IF NOT cl_null(l_inpa.inpa022) THEN
            CALL s_aooi200_gen_docno(g_site,l_inpa.inpa022,g_today,'aint835')    
                 RETURNING r_success,g_inpddocno            
         END IF
      　 FOR l_i = 1 TO g_master.number2
             IF l_inpa.inpa020 = '2' THEN    #同盤點卡
                LET l_inpf.inpfdocno = g_inpddocno
                LET l_inpf.inpfseq = l_i
             END IF
             IF l_inpa.inpa020 = '1' THEN    #一料一盤點卡
                CALL s_aooi200_gen_docno(g_site,l_inpa.inpa022,g_today,'aint835')    
                     RETURNING r_success,g_inpddocno 
                LET l_inpf.inpfdocno = g_inpddocno     
                LET l_inpf.inpfseq = 0
             END IF      
             LET l_inpf.inpf005 = 'Y'
             LET l_inpf.inpf004 = g_master.inpadocno
             LET l_inpf.inpf015 = g_user
             LET l_inpf.inpf016 = g_today     
             LET l_inpf.inpfownid = g_user
             LET l_inpf.inpfowndp = g_dept
             LET l_inpf.inpfcrtid = g_user
             LET l_inpf.inpfcrtdp = g_dept
             LET l_inpf.inpfcrtdt = g_today
             LET l_inpf.inpfstus = 'N'       
             INSERT INTO inpf_t (inpfent,inpfsite,inpfdocno,inpfseq,inpf004,inpf005,inpf015,inpf016,inpfownid,inpfowndp,inpfcrtid,
                                 inpfcrtdp,inpfcrtdt,inpfstus)
                         VALUES (g_enterprise,g_site,l_inpf.inpfdocno,l_inpf.inpfseq,l_inpf.inpf004,l_inpf.inpf005,l_inpf.inpf015,l_inpf.inpf016,
                                 l_inpf.inpfownid,l_inpf.inpfowndp,l_inpf.inpfcrtid,l_inpf.inpfcrtdp,l_inpf.inpfcrtdt,l_inpf.inpfstus)


            IF SQLCA.sqlerrd[3] = 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'std-00009'
               LET g_errparam.extend = "inpf_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()                 
               CALL s_transaction_end('N','0')
               RETURN                
            END IF           
         END FOR
      END IF
   END IF 
   DISPLAY 100 TO stagecomplete
   CALL s_transaction_end('Y','0')]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_errshow = 1]]>
  </point>
  <point name="ui_dialog.before_dialog3" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_master.blank1 = 'N'
               LET g_master.blank2 = 'N'
               LET g_master.number1 = ''
               LET g_master.number2 = ''
               DISPLAY g_master.blank1 TO blank1
               DISPLAY g_master.blank2 TO blank2]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_cnt       LIKE type_t.num5]]>
  </point>
  <section id="ainp870.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000051
#+ 
#+ Filename...: ainp870
#+ Description: 空白標籤產生作業
#+ Creator....: 01534(2014-07-08 14:20:38)
#+ Modifier...: 01534(2015-06-29 16:32:37) -SD/PR-
]]>
  </section>
  <section id="ainp870.get_buffer" ver="3" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION ainp870_get_buffer(p_dialog)
   DEFINE p_dialog   ui.DIALOG
   
   LET g_master.inpadocno = p_dialog.getFieldBuffer('inpadocno')
   LET g_master.blank1 = p_dialog.getFieldBuffer('blank1')
   LET g_master.number1 = p_dialog.getFieldBuffer('number1')
   LET g_master.blank2 = p_dialog.getFieldBuffer('blank2')
   LET g_master.number2 = p_dialog.getFieldBuffer('number2')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   {<point name="get_buffer.others"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="ainp870.global" ver="9" status="" src="s" readonly="">
    <![CDATA[#應用 p01 樣板自動產生(Version:10)
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       inpadocno LIKE inpa_t.inpadocno, 
   inpa002 LIKE inpa_t.inpa002, 
   inpa002_desc LIKE type_t.chr80, 
   inpadocno_desc LIKE type_t.chr80, 
   blank1 LIKE type_t.chr1, 
   number1 LIKE type_t.num10, 
   blank2 LIKE type_t.chr1, 
   number2 LIKE type_t.num10, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="ainp870.init" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 初始化作業
PRIVATE FUNCTION ainp870_init()
   #add-point:init段define 
   {<point name="init.define" edit="s"/>}
   #end add-point
   #add-point:init段define (客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ainp870.main" ver="4" status="" src="s" readonly="">
    <![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   {<point name="main.define" edit="s"/>}
   #end add-point 
   #add-point:main段define (客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL ainp870_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ainp870 WITH FORM cl_ap_formpath("ain",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL ainp870_init()
 
      #進入選單 Menu (="N")
      CALL ainp870_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_ainp870
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
  </section>
  <section id="ainp870.msgcentre_notify" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION ainp870_msgcentre_notify()
 
   DEFINE lc_state LIKE type_t.chr5
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知
   {<point name="msg_centre.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
]]>
  </section>
  <section id="ainp870.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
  <section id="ainp870.process" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION ainp870_process(ls_js)
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define 
   {<point name="process.define" edit="s"/>}
   #end add-point
   #add-point:process段define (客製用)
   {<point name="process.define_customerization" edit="c"/>}
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE ainp870_process_cs CURSOR FROM ls_sql
#  FOREACH ainp870_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL ainp870_msgcentre_notify()
 
END FUNCTION
]]>
  </section>
  <section id="ainp870.transfer_argv" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION ainp870_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   {<point name="transfer_agrv.define" edit="s"/>}
   #end add-point
   #add-point:transfer_agrv段define (客製用)
   {<point name="transfer_agrv.define_customerization" edit="c"/>}
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
  </section>
  <section id="ainp870.ui_dialog" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION ainp870_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define (客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      {<point name="ui_dialog.before_dialog2"/>}
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:2)
         INPUT BY NAME g_master.inpadocno,g_master.blank1,g_master.number1,g_master.blank2,g_master.number2  

            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前
               {<point name="input.m.before_input"/>}
               #end add-point
         
                     #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpadocno
            
            #add-point:AFTER FIELD inpadocno
            {<point name="input.a.inpadocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpadocno
            #add-point:BEFORE FIELD inpadocno
            {<point name="input.b.inpadocno" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpadocno
            #add-point:ON CHANGE inpadocno
            {<point name="input.g.inpadocno" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD blank1
            #add-point:BEFORE FIELD blank1
            {<point name="input.b.blank1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD blank1
            
            #add-point:AFTER FIELD blank1
            {<point name="input.a.blank1" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE blank1
            #add-point:ON CHANGE blank1
            {<point name="input.g.blank1" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD number1
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_master.number1,"0","0","","","azz-00079",1) THEN
               NEXT FIELD number1
            END IF 
 
 
            #add-point:AFTER FIELD number1
            {<point name="input.a.number1" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD number1
            #add-point:BEFORE FIELD number1
            {<point name="input.b.number1" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE number1
            #add-point:ON CHANGE number1
            {<point name="input.g.number1" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD blank2
            #add-point:BEFORE FIELD blank2
            {<point name="input.b.blank2" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD blank2
            
            #add-point:AFTER FIELD blank2
            {<point name="input.a.blank2" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE blank2
            #add-point:ON CHANGE blank2
            {<point name="input.g.blank2" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD number2
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_master.number2,"0","0","","","azz-00079",1) THEN
               NEXT FIELD number2
            END IF 
 
 
            #add-point:AFTER FIELD number2
            {<point name="input.a.number2" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD number2
            #add-point:BEFORE FIELD number2
            {<point name="input.b.number2" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE number2
            #add-point:ON CHANGE number2
            {<point name="input.g.number2" />}
            #END add-point 
 
 
                     #Ctrlp:input.c.inpadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpadocno
            #add-point:ON ACTION controlp INFIELD inpadocno
            {<point name="input.c.inpadocno" />}
            #END add-point
 
         #Ctrlp:input.c.blank1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD blank1
            #add-point:ON ACTION controlp INFIELD blank1
            {<point name="input.c.blank1" />}
            #END add-point
 
         #Ctrlp:input.c.number1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD number1
            #add-point:ON ACTION controlp INFIELD number1
            {<point name="input.c.number1" />}
            #END add-point
 
         #Ctrlp:input.c.blank2
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD blank2
            #add-point:ON ACTION controlp INFIELD blank2
            {<point name="input.c.blank2" />}
            #END add-point
 
         #Ctrlp:input.c.number2
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD number2
            #add-point:ON ACTION controlp INFIELD number2
            {<point name="input.c.number2" />}
            #END add-point
 
 
               
            AFTER INPUT
               #add-point:資料輸入後
               {<point name="input.m.after_input"/>}
               #end add-point
               
            #add-point:其他管控(on row change, etc...)
            {<point name="input.other"/>}
            #end add-point
         END INPUT
 
 
         
         
      
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL ainp870_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog
            {<point name="ui_dialog.before_dialog3"/>}
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear
         {<point name="ui_dialog.before_qbeclear" mark="Y"/>}
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL ainp870_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL ainp870_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = ainp870_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         {<point name="process.after_schedule"/>}
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
  </section>
</add_points>
