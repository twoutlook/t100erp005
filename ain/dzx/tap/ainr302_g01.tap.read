<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="ainr302_g01" std_prog="ainr302_g01" erpver="1.0" module="AIN" ver="6" env="s" zone="t10prd" booking="N" type="G" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="G" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.ainr302_g01_show" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION ainr302_g01_show(p_arg1,p_arg2)
   DEFINE p_arg1 LIKE type_t.chr1000
   DEFINE p_arg2 LIKE type_t.chr1000
   DEFINE r_show LIKE type_t.chr1
   
      IF cl_null(p_arg1) AND cl_null(p_arg2) THEN
         LET r_show = "N"
      ELSE
         LET r_show = "Y"
      END IF
      RETURN r_show
END FUNCTION]]>
  </point>
  <point name="report.ainr302_g01_subrep05" order="1" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE REPORT ainr302_g01_subrep05(sr3)
   DEFINE sr3 sr3_r
   ORDER EXTERNAL BY sr3.inbcdocno
   FORMAT        
      ON EVERY ROW
         PRINTX g_grNumFmt.*
         PRINTX sr3.*
END REPORT]]>
  </point>
  <point name="function.ainr302_g01_initialize" order="2" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION ainr302_g01_initialize(p_arg,p_exp)
DEFINE p_arg   STRING
DEFINE p_exp   STRING
DEFINE r_exp   STRING
   IF cl_null(p_arg) THEN
      INITIALIZE r_exp TO NULL
   ELSE
      LET r_exp = p_exp
   END IF
RETURN r_exp
END FUNCTION]]>
  </point>
  <point name="report.ainr302_g01_subrep06" order="2" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE REPORT ainr302_g01_subrep06(sr4)
   DEFINE sr4 sr4_r
   ORDER EXTERNAL BY sr4.inaodocno
   FORMAT        
      ON EVERY ROW
         PRINTX g_grNumFmt.*
         PRINTX sr4.*
END REPORT]]>
  </point>
  <point name="report.ainr302_g01_subrep07" order="3" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE REPORT ainr302_g01_subrep07(sr5)
   DEFINE sr5 sr5_r
   ORDER EXTERNAL BY sr5.inaodocno
   FORMAT        
      ON EVERY ROW
         PRINTX g_grNumFmt.*
         PRINTX sr5.*
END REPORT]]>
  </point>
  <point name="component.get_var" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[p_arg1,p_arg2,p_arg3]]>
  </point>
  <point name="global.variable" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[TYPE sr3_r RECORD
   inbcdocno LIKE inbc_t.inbcdocno,
   inbc005 LIKE inbc_t.inbc005,              #庫位
   inbc006 LIKE inbc_t.inbc006,              #儲位
   inbc007 LIKE inbc_t.inbc007,              #批號
   inbc003 LIKE inbc_t.inbc003,              #庫存管理特徵
   inbc010 LIKE inbc_t.inbc010,              #數量
   inbc009 LIKE inbc_t.inbc009,              #單位
   l_inayl003 LIKE inayl_t.inayl003,         #庫位名稱
   l_inab003 LIKE inab_t.inab003,            #儲位名稱
   l_inbc005_inayl003 LIKE type_t.chr1000,   #庫位.庫位名稱
   l_inbc006_inab003 LIKE type_t.chr1000,    #儲位.儲位名稱
   l_inbc005_inayl003_show LIKE type_t.chr1,
   l_inbc006_inab003_show LIKE type_t.chr1
END RECORD
TYPE sr4_r RECORD
   inaodocno LIKE inao_t.inaodocno,
   inao008_1 LIKE inao_t.inao008,            #製造批號
   inao009_1 LIKE inao_t.inao009,            #製造序號
   inao008_2 LIKE inao_t.inao008,            #製造批號
   inao009_2 LIKE inao_t.inao009,            #製造序號
   inao008_3 LIKE inao_t.inao008,            #製造批號
   inao009_3 LIKE inao_t.inao009,            #製造序號 
   l_inao008_1_inao009_1 LIKE type_t.chr100, #批號/序號 1
   l_inao008_2_inao009_2 LIKE type_t.chr100, #批號/序號 2 
   l_inao008_3_inao009_3 LIKE type_t.chr100  #批號/序號 3     
END RECORD
TYPE sr5_r RECORD
   inaodocno LIKE inao_t.inaodocno,
   inao008_1 LIKE inao_t.inao008,            #製造批號
   inao012_1 LIKE inao_t.inao012,            #數量
   inao008_2 LIKE inao_t.inao008,            #製造批號
   inao012_2 LIKE inao_t.inao012,            #數量
   inao008_3 LIKE inao_t.inao008,            #製造批號
   inao012_3 LIKE inao_t.inao012,            #數量 
   l_inao008_1_inao012_1 LIKE type_t.chr100, #批號/數量 1
   l_inao008_2_inao012_2 LIKE type_t.chr100, #批號/數量 2 
   l_inao008_3_inao012_3 LIKE type_t.chr100  #批號/數量 3       
END RECORD 
TYPE sr6_r RECORD
   inaodocno LIKE inao_t.inaodocno,
   inao008 LIKE inao_t.inao008,          #製造批號
   inao009 LIKE inao_t.inao009           #製造序號
   END RECORD
TYPE sr7_r RECORD
   inaodocno LIKE inao_t.inaodocno,
   inao008 LIKE inao_t.inao008,          #製造批號
   inao012 LIKE inao_t.inao012           #數量
END RECORD
DEFINE sr6 DYNAMIC ARRAY OF sr6_r
DEFINE sr7 DYNAMIC ARRAY OF sr7_r]]>
  </point>
  <point name="ins_data.define" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_inayl003 LIKE inayl_t.inayl003
   DEFINE l_inab003  LIKE inab_t.inab003]]>
  </point>
  <point name="ins_data.foreach" order="" ver="6" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[       #理由碼(應用分類碼轉換)
       CALL s_desc_get_acc_desc(216,sr_s.inbb016) RETURNING sr_s.l_inbb016_desc
       #庫位名稱及組合
       LET l_inayl003 = ''
       CALL s_desc_get_stock_desc(g_site,sr_s.inbb007) RETURNING l_inayl003
       LET sr_s.l_inbb007_inayl003 = sr_s.inbb007 CLIPPED,'.',l_inayl003 CLIPPED
       #儲位名稱及組合 
       LET l_inab003 = ''
       CALL s_desc_get_locator_desc(g_site,sr_s.inbb007,sr_s.inbb008) RETURNING l_inab003
       LET sr_s.l_inbb008_inab003 = sr_s.inbb007 CLIPPED,'.',l_inab003 CLIPPED
       #單頭備註顯示否
       CALL ainr302_g01_show(sr_s.inba008,'') RETURNING sr_s.l_inba008_show
       #單身備註顯示否(單身5)
       CALL ainr302_g01_show(sr_s.inbb020,'') RETURNING sr_s.l_inbb020_show
       #產品特徵/庫存管理特徵顯示否(單身4)
       CALL ainr302_g01_show(sr_s.inbb002,sr_s.inbb003) RETURNING sr_s.l_inbb002_inbb003_show
       #產品規格/批號顯示否(單身3)
       CALL ainr302_g01_show(sr_s.x_t1_imaal004,sr_s.inbb009) RETURNING sr_s.l_imaal004_inbb009_show
       #產品品名/儲位顯示否(單身2)
       CALL ainr302_g01_show(sr_s.x_t1_imaal003,sr_s.inbb008) RETURNING sr_s.l_imaal003_inbb008_show
       #庫位.名稱顯示否(單身1)
       CALL ainr302_g01_show(sr_s.inbb007,'') RETURNING sr_s.l_inbb007_inayl003_show
       #儲位.名稱顯示否(單身2)
       CALL ainr302_g01_show(sr_s.inbb008,l_inab003) RETURNING sr_s.l_inbb008_inab003_show
       #當前面編號為空時，清空編號.說明的字串(避免編號為空會只顯示一個 .)
       CALL ainr302_g01_initialize(sr_s.inbb007,sr_s.l_inbb007_inayl003) RETURNING sr_s.l_inbb007_inayl003
       CALL ainr302_g01_initialize(sr_s.inbb008,sr_s.l_inbb008_inab003) RETURNING sr_s.l_inbb008_inab003
       CALL ainr302_g01_initialize(sr_s.inba003,sr_s.l_inba003_ooag011) RETURNING sr_s.l_inba003_ooag011
       CALL ainr302_g01_initialize(sr_s.inba004,sr_s.l_inba004_ooefl003) RETURNING sr_s.l_inba004_ooefl003]]>
  </point>
  <point name="rep.define" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE sr3       sr3_r
DEFINE sr4       sr4_r
DEFINE sr5       sr5_r
DEFINE l_ac              INTEGER
DEFINE l_i               INTEGER
DEFINE l_count           INTEGER
DEFINE l_subrep05_show   LIKE type_t.chr1
DEFINE l_subrep06_show   LIKE type_t.chr1
DEFINE l_subrep07_show   LIKE type_t.chr1]]>
  </point>
  <point name="rep.everyrow.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="rep.everyrow.afterrow" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="rep.everyrow.beforerow" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="rep.sub03.after" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            START REPORT ainr302_g01_subrep05
            IF tm.a1 ="Y" THEN
               IF NOT cl_null(sr1.inbbseq) THEN
                  LET g_sql = "SELECT inbcdocno,inbc005,inbc006,inbc007,inbc003,inbc010,inbc009 ",
                              "  FROM inbc_t ",
                              " WHERE inbcdocno = '",sr1.inbbdocno CLIPPED,"'",
                              "   AND inbcent   = '",sr1.inbbent   CLIPPED,"'",
                              "   AND inbcseq   = '",sr1.inbbseq   CLIPPED,"' ",                         
                              "   ORDER BY inbcseq "
                                     
                  DECLARE ainr302_g01_repcur05 CURSOR FROM g_sql
                  FOREACH ainr302_g01_repcur05 INTO sr3.*
                  INITIALIZE sr3.l_inbc005_inayl003 TO NULL
                  INITIALIZE sr3.l_inbc006_inab003 TO NULL
                  INITIALIZE sr3.l_inayl003 TO NULL
                  INITIALIZE sr3.l_inab003 TO NULL
                  LET sr3.l_inbc005_inayl003_show = "N"
                  LET sr3.l_inbc006_inab003_show = "N"
                  #取庫位名稱
                  CALL s_desc_get_stock_desc(sr1.inbasite,sr3.inbc005) RETURNING sr3.l_inayl003
#                  IF NOT cl_null(sr3.inbc005) THEN
#                     LET sr3.l_inbc005_inayl003_show = "Y"
#                     SELECT inayl003 INTO sr3.l_inayl003
#                       FROM inaa_t
#                      WHERE inaaent = sr1.inbaent
#                        AND inaasite = sr1.inbasite
#                        AND inaa001 = sr3.inbc005
#                  END IF
                     #取儲位名稱
                  IF NOT(sr3.inbc006 IS NULL) THEN
                     SELECT inab003 INTO sr3.l_inab003
                       FROM inab_t
                      WHERE inabent = sr1.inbaent
                        AND inabsite = sr1.inbasite
                        AND inab001 = sr3.inbc005
                        AND inab002 = sr3.inbc006
                  END IF
                     #組合庫位/庫名
                     IF cl_null(sr3.inbc005) OR cl_null(sr3.l_inayl003) THEN
                        LET sr3.l_inbc005_inayl003 = sr3.inbc005 , "." , sr3.l_inayl003
                     ELSE
                        LET sr3.l_inbc005_inayl003 = sr3.inbc005 || "." || sr3.l_inayl003
                     END IF
                     #組合儲位/儲名
                     IF NOT(sr3.inbc006 IS NULL) OR cl_null(sr3.l_inab003) THEN
                        LET sr3.l_inbc006_inab003 = sr3.inbc006 , "." , sr3.l_inab003
                     ELSE
                        LET sr3.l_inbc006_inab003 = sr3.inbc006 || "." || sr3.l_inab003
                     END IF
                     #庫位.庫名顯示否 
                     CALL ainr302_g01_show(sr3.inbc005,'') RETURNING sr3.l_inbc005_inayl003_show
                     #儲位.儲名顯示否
                     CALL ainr302_g01_show(sr3.inbc006,sr3.l_inab003) RETURNING sr3.l_inbc006_inab003_show
                     OUTPUT TO REPORT ainr302_g01_subrep05(sr3.*)
                  END FOREACH 
               END IF
            END IF
            FINISH REPORT ainr302_g01_subrep05
#            
            
            START REPORT ainr302_g01_subrep06           
            IF tm.a2 ="Y" THEN                     
               LET g_sql = "SELECT inaodocno,inao008,inao009",
                           "  FROM inao_t ",
                           " WHERE inaoent     = '",sr1.inbbent      CLIPPED,"'",                                               
                           "   AND inaosite    = '",sr1.inbbsite     CLIPPED,"'",
                           "   AND inaodocno   = '",sr1.inbadocno    CLIPPED,"'",                    
                           "   AND inaoseq     = '",sr1.inbbseq      CLIPPED,"'",
                           "   AND inao000     = '1'",
                           "   AND inao008 IS NOT NULL  ",
                           "   AND inao009 IS NOT NULL  "                        
                       
            
               LET l_ac = 1                              
               CALL sr6.clear()                 
               DECLARE ainr302_g01_repcur06 CURSOR FROM g_sql
               FOREACH ainr302_g01_repcur06 INTO sr6[l_ac].*  
                  LET l_ac = l_ac+1                                
               END FOREACH      
               LET l_ac = l_ac-1               
               LET l_i = 1                       
               IF l_ac > 0 THEN      
                  WHILE TRUE                         
                     INITIALIZE sr4.* TO NULL
                     LET sr4.inaodocno = sr6[l_i].inaodocno
                     LET sr4.inao008_1 = sr6[l_i].inao008
                     LET sr4.inao009_1 = sr6[l_i].inao009
                     LET sr4.l_inao008_1_inao009_1  = sr4.inao008_1  , "/" , sr4.inao009_1                                                                                         
                     IF l_i+1 <= l_ac THEN    
                        LET sr4.inaodocno = sr6[l_i+1].inaodocno
                        LET sr4.inao008_2 = sr6[l_i+1].inao008
                        LET sr4.inao009_2 = sr6[l_i+1].inao009
                        LET sr4.l_inao008_2_inao009_2 =  sr4.inao008_2 , "/" , sr4.inao009_2                              
                     END IF
                     
                     IF l_i+2 <= l_ac THEN    
                        LET sr4.inaodocno = sr6[l_i+2].inaodocno
                        LET sr4.inao008_3 = sr6[l_i+2].inao008
                        LET sr4.inao009_3 = sr6[l_i+2].inao009                  
                        LET sr4.l_inao008_3_inao009_3 = sr4.inao008_3 , "/" , sr4.inao009_3
                     END IF              
                            
                     OUTPUT TO REPORT ainr302_g01_subrep06(sr4.*)              
                     LET l_i = l_i + 3
                     IF l_i > l_ac THEN  
                        EXIT WHILE
                     END IF                     
                  END  WHILE                                                
               END IF                    
            END IF                      
            FINISH REPORT ainr302_g01_subrep06               
# 
            START REPORT ainr302_g01_subrep07           
            IF tm.a2 ="Y" THEN          
               LET g_sql = "SELECT inaodocno,inao008,inao012",
                           "  FROM inao_t ",
                           " WHERE inaoent     = '",sr1.inbbent      CLIPPED,"'",                                               
                           "   AND inaosite    = '",sr1.inbbsite     CLIPPED,"'",
                           "   AND inaodocno   = '",sr1.inbadocno    CLIPPED,"'",                    
                           "   AND inaoseq     = '",sr1.inbbseq      CLIPPED,"'",                          
                           "   AND inao000     = '1'",
                           "   AND inao008 IS NOT NULL ",
                           "   AND inao009 IS NULL "  
                             
               LET l_ac = 1                              
               CALL sr7.clear()                 
               DECLARE ainr302_g01_repcur07 CURSOR FROM g_sql
               FOREACH ainr302_g01_repcur07 INTO sr7[l_ac].*
                   LET l_ac = l_ac+1                                
               END FOREACH      
               LET l_ac = l_ac-1               
               LET l_i = 1                           
               IF l_ac > 0 THEN
                  WHILE TRUE                         
                     INITIALIZE sr5.* TO NULL
                     LET sr5.inaodocno = sr7[l_i].inaodocno
                     LET sr5.inao008_1 = sr7[l_i].inao008
                     LET sr5.inao012_1 = sr7[l_i].inao012
                     LET sr5.l_inao008_1_inao012_1  = sr5.inao008_1  , "/" , sr5.inao012_1                                                                                         
                     IF l_i+1 <= l_ac THEN    
                        LET sr5.inaodocno = sr7[l_i].inaodocno
                        LET sr5.inao008_2 = sr7[l_i+1].inao008
                        LET sr5.inao012_2 = sr7[l_i+1].inao012
                        LET sr5.l_inao008_2_inao012_2 =  sr5.inao008_2 , "/" , sr5.inao012_2                              
                     END IF
                     
                     IF l_i+2 <= l_ac THEN    
                        LET sr5.inaodocno = sr7[l_i].inaodocno
                        LET sr5.inao008_3 = sr7[l_i+2].inao008
                        LET sr5.inao012_3 = sr7[l_i+2].inao012                  
                        LET sr5.l_inao008_3_inao012_3 = sr5.inao008_3 , "/" , sr5.inao012_3
                     END IF              
                            
                     OUTPUT TO REPORT ainr302_g01_subrep07(sr5.*)              
                     LET l_i = l_i + 3
                     IF l_i > l_ac THEN  
                        EXIT WHILE
                     END IF                     
                  END  WHILE 
               END IF                    
            END IF
                       
            FINISH REPORT ainr302_g01_subrep07  ]]>
  </point>
  <point name="sel_prep.g_from" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <section id="ainr302_g01.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:6,PR版次:6) Build-000190
#+ 
#+ Filename...: ainr302_g01
#+ Description: 雜項收料單
#+ Creator....: 05384(2014-06-10 17:01:52)
#+ Modifier...: 05384(2015-06-17 19:06:28) -SD/PR-
]]>
  </section>
  <section id="ainr302_g01.global" ver="22" status="" src="s" readonly="">
    <![CDATA[#報表 g01 樣板自動產生(Version:1)
 
IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
PRIVATE TYPE sr1_r RECORD
   inba002 LIKE inba_t.inba002, 
   inba003 LIKE inba_t.inba003, 
   inba004 LIKE inba_t.inba004, 
   inba005 LIKE inba_t.inba005, 
   inba006 LIKE inba_t.inba006, 
   inba007 LIKE inba_t.inba007, 
   inba008 LIKE inba_t.inba008, 
   inbadocdt LIKE inba_t.inbadocdt, 
   inbadocno LIKE inba_t.inbadocno, 
   inbaent LIKE inba_t.inbaent, 
   inbasite LIKE inba_t.inbasite, 
   inbastus LIKE inba_t.inbastus, 
   inbb001 LIKE inbb_t.inbb001, 
   inbb002 LIKE inbb_t.inbb002, 
   inbb003 LIKE inbb_t.inbb003, 
   inbb004 LIKE inbb_t.inbb004, 
   inbb007 LIKE inbb_t.inbb007, 
   inbb008 LIKE inbb_t.inbb008, 
   inbb009 LIKE inbb_t.inbb009, 
   inbb010 LIKE inbb_t.inbb010, 
   inbb011 LIKE inbb_t.inbb011, 
   inbb012 LIKE inbb_t.inbb012, 
   inbb013 LIKE inbb_t.inbb013, 
   inbb014 LIKE inbb_t.inbb014, 
   inbb015 LIKE inbb_t.inbb015, 
   inbb016 LIKE inbb_t.inbb016, 
   inbb017 LIKE inbb_t.inbb017, 
   inbb018 LIKE inbb_t.inbb018, 
   inbb020 LIKE inbb_t.inbb020, 
   inbb021 LIKE inbb_t.inbb021, 
   inbbseq LIKE inbb_t.inbbseq, 
   inbbsite LIKE inbb_t.inbbsite, 
   ooag_t_ooag011 LIKE ooag_t.ooag011, 
   ooefl_t_ooefl003 LIKE ooefl_t.ooefl003, 
   x_imaal_t_imaal003 LIKE imaal_t.imaal003, 
   x_t1_imaal003 LIKE imaal_t.imaal003, 
   x_t1_imaal004 LIKE imaal_t.imaal004, 
   x_oocal_t_oocal003 LIKE oocal_t.oocal003, 
   l_inba003_ooag011 LIKE type_t.chr300, 
   l_inba004_ooefl003 LIKE type_t.chr1000, 
   inbbent LIKE inbb_t.inbbent, 
   x_t2_oocal003 LIKE oocal_t.oocal003, 
   l_inbb016_desc LIKE oocql_t.oocql004, 
   inbbdocno LIKE inbb_t.inbbdocno, 
   l_inba008_show LIKE type_t.chr1, 
   l_inbb020_show LIKE type_t.chr1, 
   l_inbb002_inbb003_show LIKE type_t.chr1, 
   l_imaal004_inbb009_show LIKE type_t.chr1, 
   l_imaal003_inbb008_show LIKE type_t.chr1, 
   l_inbb008_inab003_show LIKE type_t.chr1, 
   l_inbb007_inayl003_show LIKE type_t.chr1, 
   l_inbb007_inayl003 LIKE type_t.chr1000, 
   l_inbb008_inab003 LIKE type_t.chr1000
END RECORD
 
PRIVATE TYPE sr2_r RECORD
   ooff013 LIKE ooff_t.ooff013
END RECORD
 
 
DEFINE tm RECORD
       wc STRING,                  #where condition 
       a1 LIKE type_t.chr1,         #實際入庫 
       a2 LIKE type_t.chr1          #製造批序號
       END RECORD
DEFINE sr DYNAMIC ARRAY OF sr1_r                   #宣告sr為sr1_t資料結構的動態陣列
DEFINE g_select        STRING
DEFINE g_from          STRING
DEFINE g_where         STRING
DEFINE g_order         STRING
DEFINE g_sql           STRING                         #report_select_prep,REPORT段使用
 
#add-point:自定義環境變數(Global Variable)
{<point name="global.variable"/>}
#end add-point
]]>
  </section>
  <section id="ainr302_g01.ins_data" ver="23" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION ainr302_g01_ins_data()
#主報表record(用於select子句)
   DEFINE sr_s RECORD 
   inba002 LIKE inba_t.inba002, 
   inba003 LIKE inba_t.inba003, 
   inba004 LIKE inba_t.inba004, 
   inba005 LIKE inba_t.inba005, 
   inba006 LIKE inba_t.inba006, 
   inba007 LIKE inba_t.inba007, 
   inba008 LIKE inba_t.inba008, 
   inbadocdt LIKE inba_t.inbadocdt, 
   inbadocno LIKE inba_t.inbadocno, 
   inbaent LIKE inba_t.inbaent, 
   inbasite LIKE inba_t.inbasite, 
   inbastus LIKE inba_t.inbastus, 
   inbb001 LIKE inbb_t.inbb001, 
   inbb002 LIKE inbb_t.inbb002, 
   inbb003 LIKE inbb_t.inbb003, 
   inbb004 LIKE inbb_t.inbb004, 
   inbb007 LIKE inbb_t.inbb007, 
   inbb008 LIKE inbb_t.inbb008, 
   inbb009 LIKE inbb_t.inbb009, 
   inbb010 LIKE inbb_t.inbb010, 
   inbb011 LIKE inbb_t.inbb011, 
   inbb012 LIKE inbb_t.inbb012, 
   inbb013 LIKE inbb_t.inbb013, 
   inbb014 LIKE inbb_t.inbb014, 
   inbb015 LIKE inbb_t.inbb015, 
   inbb016 LIKE inbb_t.inbb016, 
   inbb017 LIKE inbb_t.inbb017, 
   inbb018 LIKE inbb_t.inbb018, 
   inbb020 LIKE inbb_t.inbb020, 
   inbb021 LIKE inbb_t.inbb021, 
   inbbseq LIKE inbb_t.inbbseq, 
   inbbsite LIKE inbb_t.inbbsite, 
   ooag_t_ooag011 LIKE ooag_t.ooag011, 
   ooefl_t_ooefl003 LIKE ooefl_t.ooefl003, 
   x_imaal_t_imaal003 LIKE imaal_t.imaal003, 
   x_t1_imaal003 LIKE imaal_t.imaal003, 
   x_t1_imaal004 LIKE imaal_t.imaal004, 
   x_oocal_t_oocal003 LIKE oocal_t.oocal003, 
   l_inba003_ooag011 LIKE type_t.chr300, 
   l_inba004_ooefl003 LIKE type_t.chr1000, 
   inbbent LIKE inbb_t.inbbent, 
   x_t2_oocal003 LIKE oocal_t.oocal003, 
   l_inbb016_desc LIKE oocql_t.oocql004, 
   inbbdocno LIKE inbb_t.inbbdocno, 
   l_inba008_show LIKE type_t.chr1, 
   l_inbb020_show LIKE type_t.chr1, 
   l_inbb002_inbb003_show LIKE type_t.chr1, 
   l_imaal004_inbb009_show LIKE type_t.chr1, 
   l_imaal003_inbb008_show LIKE type_t.chr1, 
   l_inbb008_inab003_show LIKE type_t.chr1, 
   l_inbb007_inayl003_show LIKE type_t.chr1, 
   l_inbb007_inayl003 LIKE type_t.chr1000, 
   l_inbb008_inab003 LIKE type_t.chr1000
 END RECORD
   DEFINE l_cnt           INTEGER
#add-point:ins_data段define
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before
    {<point name="ins_data.before"/>}
    #end add-point
 
    CALL sr.clear()                                  #rep sr
    LET l_cnt = 1
    FOREACH ainr302_g01_curs INTO sr_s.*
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()       
          LET g_rep_success = 'N'    
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before_arr
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #set rep array value
       LET sr[l_cnt].inba002 = sr_s.inba002
       LET sr[l_cnt].inba003 = sr_s.inba003
       LET sr[l_cnt].inba004 = sr_s.inba004
       LET sr[l_cnt].inba005 = sr_s.inba005
       LET sr[l_cnt].inba006 = sr_s.inba006
       LET sr[l_cnt].inba007 = sr_s.inba007
       LET sr[l_cnt].inba008 = sr_s.inba008
       LET sr[l_cnt].inbadocdt = sr_s.inbadocdt
       LET sr[l_cnt].inbadocno = sr_s.inbadocno
       LET sr[l_cnt].inbaent = sr_s.inbaent
       LET sr[l_cnt].inbasite = sr_s.inbasite
       LET sr[l_cnt].inbastus = sr_s.inbastus
       LET sr[l_cnt].inbb001 = sr_s.inbb001
       LET sr[l_cnt].inbb002 = sr_s.inbb002
       LET sr[l_cnt].inbb003 = sr_s.inbb003
       LET sr[l_cnt].inbb004 = sr_s.inbb004
       LET sr[l_cnt].inbb007 = sr_s.inbb007
       LET sr[l_cnt].inbb008 = sr_s.inbb008
       LET sr[l_cnt].inbb009 = sr_s.inbb009
       LET sr[l_cnt].inbb010 = sr_s.inbb010
       LET sr[l_cnt].inbb011 = sr_s.inbb011
       LET sr[l_cnt].inbb012 = sr_s.inbb012
       LET sr[l_cnt].inbb013 = sr_s.inbb013
       LET sr[l_cnt].inbb014 = sr_s.inbb014
       LET sr[l_cnt].inbb015 = sr_s.inbb015
       LET sr[l_cnt].inbb016 = sr_s.inbb016
       LET sr[l_cnt].inbb017 = sr_s.inbb017
       LET sr[l_cnt].inbb018 = sr_s.inbb018
       LET sr[l_cnt].inbb020 = sr_s.inbb020
       LET sr[l_cnt].inbb021 = sr_s.inbb021
       LET sr[l_cnt].inbbseq = sr_s.inbbseq
       LET sr[l_cnt].inbbsite = sr_s.inbbsite
       LET sr[l_cnt].ooag_t_ooag011 = sr_s.ooag_t_ooag011
       LET sr[l_cnt].ooefl_t_ooefl003 = sr_s.ooefl_t_ooefl003
       LET sr[l_cnt].x_imaal_t_imaal003 = sr_s.x_imaal_t_imaal003
       LET sr[l_cnt].x_t1_imaal003 = sr_s.x_t1_imaal003
       LET sr[l_cnt].x_t1_imaal004 = sr_s.x_t1_imaal004
       LET sr[l_cnt].x_oocal_t_oocal003 = sr_s.x_oocal_t_oocal003
       LET sr[l_cnt].l_inba003_ooag011 = sr_s.l_inba003_ooag011
       LET sr[l_cnt].l_inba004_ooefl003 = sr_s.l_inba004_ooefl003
       LET sr[l_cnt].inbbent = sr_s.inbbent
       LET sr[l_cnt].x_t2_oocal003 = sr_s.x_t2_oocal003
       LET sr[l_cnt].l_inbb016_desc = sr_s.l_inbb016_desc
       LET sr[l_cnt].inbbdocno = sr_s.inbbdocno
       LET sr[l_cnt].l_inba008_show = sr_s.l_inba008_show
       LET sr[l_cnt].l_inbb020_show = sr_s.l_inbb020_show
       LET sr[l_cnt].l_inbb002_inbb003_show = sr_s.l_inbb002_inbb003_show
       LET sr[l_cnt].l_imaal004_inbb009_show = sr_s.l_imaal004_inbb009_show
       LET sr[l_cnt].l_imaal003_inbb008_show = sr_s.l_imaal003_inbb008_show
       LET sr[l_cnt].l_inbb008_inab003_show = sr_s.l_inbb008_inab003_show
       LET sr[l_cnt].l_inbb007_inayl003_show = sr_s.l_inbb007_inayl003_show
       LET sr[l_cnt].l_inbb007_inayl003 = sr_s.l_inbb007_inayl003
       LET sr[l_cnt].l_inbb008_inab003 = sr_s.l_inbb008_inab003
 
 
       #add-point:ins_data段after_arr
       {<point name="ins_data.after.save"/>}
       #end add-point
       LET l_cnt = l_cnt + 1
    END FOREACH
    CALL sr.deleteElement(l_cnt)
 
    #add-point:ins_data段after
    {<point name="ins_data.after"/>}
    #end add-point
END FUNCTION
]]>
  </section>
  <section id="ainr302_g01.main" ver="4" status="" src="s" readonly="">
    <![CDATA[PUBLIC FUNCTION ainr302_g01(p_arg1,p_arg2,p_arg3)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 LIKE type_t.chr1         #tm.a1  實際入庫 
DEFINE  p_arg3 LIKE type_t.chr1         #tm.a2  製造批序號
#add-point:init段define
{<point name="component_name.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.a1 = p_arg2
   LET tm.a2 = p_arg3
 
   #add-point:報表元件參數準備
   {<point name="component.arg.prep" />}
   #end add-point
   #報表元件代號
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'   
   
   LET g_rep_code = "ainr302_g01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #主報表select子句準備
   CALL ainr302_g01_sel_prep()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料存入array
   CALL ainr302_g01_ins_data()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料印出
   CALL ainr302_g01_rep_data()
 
END FUNCTION
]]>
  </section>
  <section id="ainr302_g01.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="ainr302_g01.other_report" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.report"/>}
]]>
  </section>
  <section id="ainr302_g01.rep" ver="29" status="" src="s" readonly="">
    <![CDATA[PRIVATE REPORT ainr302_g01_rep(sr1)
DEFINE sr1 sr1_r
DEFINE sr2 sr2_r
DEFINE l_subrep01_show  LIKE type_t.chr1,
       l_subrep02_show  LIKE type_t.chr1,
       l_subrep03_show  LIKE type_t.chr1,
       l_subrep04_show  LIKE type_t.chr1
DEFINE l_cnt           LIKE type_t.num5
DEFINE l_sub_sql       STRING
#add-point:rep段define
{<point name="rep.define"/>}
#end add-point
 
    #add-point:rep段ORDER_before
    {<point name="rep.order.before" mark="Y"/>}
    #end add-point
    ORDER  BY sr1.inbadocno,sr1.inbbseq
    #add-point:rep段ORDER_after
    {<point name="rep.order.after"/>}
    #end add-point
    
    FORMAT
       FIRST PAGE HEADER          
          PRINTX g_user,g_pdate,g_rep_code,g_company,g_ptime,g_user_name,g_date_fmt
          PRINTX tm.*
          PRINTX g_grNumFmt.*
 
          #讀取beforeGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:1)
        BEFORE GROUP OF sr1.inbadocno
            #報表 d05 樣板自動產生(Version:5)
            CALL cl_gr_title_clear()  #清除title變數值 
            #add-point:rep.header  #公司資訊(不在公用變數內)
            {<point name="rep.header"  mark="Y"/>}
            #end add-point:rep.header 
            LET g_rep_docno = sr1.inbadocno
            CALL cl_gr_init_pageheader() #表頭資訊
            PRINTX g_grPageHeader.*
            PRINTX g_grPageFooter.*
            #add-point:rep.apr.signstr.before
            {<point name="rep.apr.signstr.before"  mark="Y"/>}              
            #end add-point:rep.apr.signstr.before   
            LET g_doc_key = 'inbaent=' ,sr1.inbaent,'{+}inbadocno=' ,sr1.inbadocno         
            CALL cl_gr_init_apr(sr1.inbadocno)
            #add-point:rep.apr.signstr
            {<point name="rep.apr.signstr"/>}              
            #end add-point:rep.apr.signstr
            PRINTX g_grSign.*
 
 
 
           #add-point:rep.b_group.inbadocno.before
           {<point name="rep.b_group.inbadocno.before"/>}
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub01.before
           {<point name="rep.sub01.before"/>}
           #end add-point:rep.sub01.before
 
           #add-point:rep.sub01.sql
           {<point name="rep.sub01.sql" mark="Y"/>}
           #end add-point:rep.sub01.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='2' AND ooffent = '", 
                sr1.inbaent CLIPPED ,"'", " AND  ooff002 = '", sr1.inbadocno CLIPPED ,"'"
 
           #add-point:rep.sub01.afsql
           {<point name="rep.sub01.afsql"/>}
           #end add-point:rep.sub01.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep01_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE ainr302_g01_repcur01_cnt_pre FROM l_sub_sql
           EXECUTE ainr302_g01_repcur01_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep01_show ="Y"
           END IF
           PRINTX l_subrep01_show
           START REPORT ainr302_g01_subrep01
           DECLARE ainr302_g01_repcur01 CURSOR FROM g_sql
           FOREACH ainr302_g01_repcur01 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "ainr302_g01_repcur01:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub01.foreach
              {<point name="rep.sub01.foreach"/>}
              #end add-point:rep.sub01.foreach
              OUTPUT TO REPORT ainr302_g01_subrep01(sr2.*)
           END FOREACH
           FINISH REPORT ainr302_g01_subrep01
           #add-point:rep.sub01.after
           {<point name="rep.sub01.after"/>}
           #end add-point:rep.sub01.after
 
 
 
           #add-point:rep.b_group.inbadocno.after
           {<point name="rep.b_group.inbadocno.after"/>}
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:1)
        BEFORE GROUP OF sr1.inbbseq
 
           #add-point:rep.b_group.inbbseq.before
           {<point name="rep.b_group.inbbseq.before"/>}
           #end add-point:
 
 
           #add-point:rep.b_group.inbbseq.after
           {<point name="rep.b_group.inbbseq.after"/>}
           #end add-point:
 
 
 
 
       ON EVERY ROW
          #add-point:rep.everyrow.before
          {<point name="rep.everyrow.before"/>}
          #end add-point:rep.everyrow.before
 
          #單身前備註
             #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub02.before
           {<point name="rep.sub02.before"/>}
           #end add-point:rep.sub02.before
 
           #add-point:rep.sub02.sql
           {<point name="rep.sub02.sql" mark="Y"/>}
           #end add-point:rep.sub02.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='2' AND ooffent = '", 
                sr1.inbaent CLIPPED ,"'", " AND  ooff002 = '", sr1.inbadocno CLIPPED ,"'", " AND  ooff003 = '", 
                sr1.inbbseq CLIPPED ,"'"
 
           #add-point:rep.sub02.afsql
           {<point name="rep.sub02.afsql"/>}
           #end add-point:rep.sub02.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep02_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE ainr302_g01_repcur02_cnt_pre FROM l_sub_sql
           EXECUTE ainr302_g01_repcur02_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep02_show ="Y"
           END IF
           PRINTX l_subrep02_show
           START REPORT ainr302_g01_subrep02
           DECLARE ainr302_g01_repcur02 CURSOR FROM g_sql
           FOREACH ainr302_g01_repcur02 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "ainr302_g01_repcur02:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub02.foreach
              {<point name="rep.sub02.foreach"/>}
              #end add-point:rep.sub02.foreach
              OUTPUT TO REPORT ainr302_g01_subrep02(sr2.*)
           END FOREACH
           FINISH REPORT ainr302_g01_subrep02
           #add-point:rep.sub02.after
           {<point name="rep.sub02.after"/>}
           #end add-point:rep.sub02.after
 
 
 
          #add-point:rep.everyrow.beforerow
          {<point name="rep.everyrow.beforerow"/>}
          #end add-point:rep.everyrow.beforerow
            
          PRINTX sr1.*
 
          #add-point:rep.everyrow.afterrow
          {<point name="rep.everyrow.afterrow"/>}
          #end add-point:rep.everyrow.afterrow
 
          #單身後備註
             #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub03.before
           {<point name="rep.sub03.before"/>}
           #end add-point:rep.sub03.before
 
           #add-point:rep.sub03.sql
           {<point name="rep.sub03.sql" mark="Y"/>}
           #end add-point:rep.sub03.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='1' AND ooffent = '", 
                sr1.inbaent CLIPPED ,"'", " AND  ooff002 = '", sr1.inbadocno CLIPPED ,"'", " AND  ooff003 = '", 
                sr1.inbbseq CLIPPED ,"'"
 
           #add-point:rep.sub03.afsql
           {<point name="rep.sub03.afsql"/>}
           #end add-point:rep.sub03.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep03_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE ainr302_g01_repcur03_cnt_pre FROM l_sub_sql
           EXECUTE ainr302_g01_repcur03_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep03_show ="Y"
           END IF
           PRINTX l_subrep03_show
           START REPORT ainr302_g01_subrep03
           DECLARE ainr302_g01_repcur03 CURSOR FROM g_sql
           FOREACH ainr302_g01_repcur03 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "ainr302_g01_repcur03:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub03.foreach
              {<point name="rep.sub03.foreach"/>}
              #end add-point:rep.sub03.foreach
              OUTPUT TO REPORT ainr302_g01_subrep03(sr2.*)
           END FOREACH
           FINISH REPORT ainr302_g01_subrep03
           #add-point:rep.sub03.after
           {<point name="rep.sub03.after"/>}
           #end add-point:rep.sub03.after
 
 
 
          #add-point:rep.everyrow.after
          {<point name="rep.everyrow.after"/>}
          #end add-point:rep.everyrow.after        
 
          #讀取afterGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:1)
        AFTER GROUP OF sr1.inbadocno
 
           #add-point:rep.a_group.inbadocno.before
           {<point name="rep.a_group.inbadocno.before"/>}
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub04.before
           {<point name="rep.sub04.before"/>}
           #end add-point:rep.sub04.before
 
           #add-point:rep.sub04.sql
           {<point name="rep.sub04.sql" mark="Y"/>}
           #end add-point:rep.sub04.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='1' AND ooffent = '", 
                sr1.inbaent CLIPPED ,"'", " AND  ooff002 = '", sr1.inbadocno CLIPPED ,"'"
 
           #add-point:rep.sub04.afsql
           {<point name="rep.sub04.afsql"/>}
           #end add-point:rep.sub04.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep04_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE ainr302_g01_repcur04_cnt_pre FROM l_sub_sql
           EXECUTE ainr302_g01_repcur04_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep04_show ="Y"
           END IF
           PRINTX l_subrep04_show
           START REPORT ainr302_g01_subrep04
           DECLARE ainr302_g01_repcur04 CURSOR FROM g_sql
           FOREACH ainr302_g01_repcur04 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "ainr302_g01_repcur04:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub04.foreach
              {<point name="rep.sub04.foreach"/>}
              #end add-point:rep.sub04.foreach
              OUTPUT TO REPORT ainr302_g01_subrep04(sr2.*)
           END FOREACH
           FINISH REPORT ainr302_g01_subrep04
           #add-point:rep.sub04.after
           {<point name="rep.sub04.after"/>}
           #end add-point:rep.sub04.after
 
 
 
           #add-point:rep.a_group.inbadocno.after
           {<point name="rep.a_group.inbadocno.after"/>}
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:1)
        AFTER GROUP OF sr1.inbbseq
 
           #add-point:rep.a_group.inbbseq.before
           {<point name="rep.a_group.inbbseq.before"/>}
           #end add-point:
 
 
           #add-point:rep.a_group.inbbseq.after
           {<point name="rep.a_group.inbbseq.after"/>}
           #end add-point:
 
 
 
       ON LAST ROW
            #add-point:rep.lastrow.before  
            {<point name="rep.lastrow.before"/>}        
            #edn add point :rep.lastrow.before
 
            #add-point:rep.lastrow.after
            {<point name="rep.lastrow.after"/>}
            #edn add point :rep.lastrow.after
END REPORT
]]>
  </section>
  <section id="ainr302_g01.rep_data" ver="5" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION ainr302_g01_rep_data()
   DEFINE HANDLER         om.SaxDocumentHandler
   DEFINE l_i             INTEGER
 
    #判斷是否有報表資料，若回彈出訊息視窗
    IF sr.getLength() = 0 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = "adz-00285"
       LET g_errparam.extend = NULL
       LET g_errparam.popup  = FALSE
       LET g_errparam.replace[1] = ''
       CALL cl_err()  
       RETURN 
    END IF
    WHILE TRUE               
       LET handler = cl_gr_handler()
       IF handler IS NOT NULL THEN
          START REPORT ainr302_g01_rep TO XML HANDLER handler
          FOR l_i = 1 TO sr.getLength()
             OUTPUT TO REPORT ainr302_g01_rep(sr[l_i].*)
          END FOR
          FINISH REPORT ainr302_g01_rep
       END IF
       IF INT_FLAG = TRUE THEN
          LET INT_FLAG = FALSE
          EXIT WHILE
       END IF
    END WHILE
    CALL cl_gr_close_report()
END FUNCTION
]]>
  </section>
  <section id="ainr302_g01.sel_prep" ver="28" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION ainr302_g01_sel_prep()
   #add-point:sel_prep段define
   {<point name="sel_prep.define"/>}
   #end add-point
 
   #add-point:sel_prep before
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
   
   #add-point:sel_prep g_select
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT inba002,inba003,inba004,inba005,inba006,inba007,inba008,inbadocdt,inbadocno, 
       inbaent,inbasite,inbastus,inbb001,inbb002,inbb003,inbb004,inbb007,inbb008,inbb009,inbb010,inbb011, 
       inbb012,inbb013,inbb014,inbb015,inbb016,inbb017,inbb018,inbb020,inbb021,inbbseq,inbbsite,ooag_t.ooag011, 
       ooefl_t.ooefl003,x.imaal_t_imaal003,x.t1_imaal003,x.t1_imaal004,x.oocal_t_oocal003,trim(inba003)||'.'||trim(ooag_t.ooag011), 
       trim(inba004)||'.'||trim(ooefl_t.ooefl003),inbbent,x.t2_oocal003,'',inbbdocno,'','','','','', 
       '','','',''"
 
   #add-point:sel_prep g_from
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM inba_t LEFT OUTER JOIN ooag_t ON ooag_t.ooag001 = inba_t.inba003 AND ooag_t.ooagent = inba_t.inbaent             LEFT OUTER JOIN ooefl_t ON ooefl_t.ooefl001 = inba_t.inba004 AND ooefl_t.ooeflent = inba_t.inbaent AND ooefl_t.ooefl002 = '" , 
        g_dlang,"'" ," LEFT OUTER JOIN ( SELECT inbb_t.*,imaal_t.imaal003 imaal_t_imaal003,t1.imaal003 t1_imaal003, 
        t1.imaal004 t1_imaal004,oocal_t.oocal003 oocal_t_oocal003,t2.oocal003 t2_oocal003 FROM inbb_t             LEFT OUTER JOIN oocal_t ON oocal_t.oocal001 = inbb_t.inbb013 AND oocal_t.oocalent = inbb_t.inbbent AND oocal_t.oocal002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN imaal_t ON imaal_t.imaal001 = inbb_t.inbb004 AND imaal_t.imaalent = inbb_t.inbbent AND imaal_t.imaal002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN imaal_t t1 ON t1.imaal001 = inbb_t.inbb001 AND t1.imaalent = inbb_t.inbbent AND t1.imaal002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN oocal_t t2 ON t2.oocal001 = inbb_t.inbb010 AND t2.oocalent = inbb_t.inbbent AND t2.oocal002 = '" , 
        g_dlang,"'" ," ) x  ON inba_t.inbaent = x.inbbent AND inba_t.inbadocno = x.inbbdocno"
 
   #add-point:sel_prep g_where
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE inba_t.inba001 = '2' AND " ,tm.wc CLIPPED 
 
   #add-point:sel_prep g_order
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
    LET g_order = " ORDER BY inbadocno,inbbseq"
 
   #add-point:sel_prep.sql.before
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("inba_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED ," ",g_order CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段 
 
   #add-point:sel_prep.sql.after
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE ainr302_g01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()   
      LET g_rep_success = 'N'    
   END IF
   DECLARE ainr302_g01_curs CURSOR FOR ainr302_g01_prepare
 
END FUNCTION
]]>
  </section>
  <section id="ainr302_g01.subrep_str" ver="2" status="" src="s" readonly="">
    <![CDATA[#讀取子報表樣板
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT ainr302_g01_subrep01(sr2)
DEFINE  sr2  sr2_r
#add-point:sub01.define
{<point name="sub01.define"/>}
#end add-point:sub01.define
 
    #add-point:sub01.order.before
    {<point name="sub01.order.before"/>}
    #end add-point:sub01.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub01.everyrow.before
            {<point name="sub01.everyrow.before"/>}              
            #end add-point:sub01.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub01.everyrow.after
            {<point name="sub01.everyrow.after"/>}
            #end add-point:sub01.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT ainr302_g01_subrep02(sr2)
DEFINE  sr2  sr2_r
#add-point:sub02.define
{<point name="sub02.define"/>}
#end add-point:sub02.define
 
    #add-point:sub02.order.before
    {<point name="sub02.order.before"/>}
    #end add-point:sub02.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub02.everyrow.before
            {<point name="sub02.everyrow.before"/>}              
            #end add-point:sub02.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub02.everyrow.after
            {<point name="sub02.everyrow.after"/>}
            #end add-point:sub02.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT ainr302_g01_subrep03(sr2)
DEFINE  sr2  sr2_r
#add-point:sub03.define
{<point name="sub03.define"/>}
#end add-point:sub03.define
 
    #add-point:sub03.order.before
    {<point name="sub03.order.before"/>}
    #end add-point:sub03.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub03.everyrow.before
            {<point name="sub03.everyrow.before"/>}              
            #end add-point:sub03.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub03.everyrow.after
            {<point name="sub03.everyrow.after"/>}
            #end add-point:sub03.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT ainr302_g01_subrep04(sr2)
DEFINE  sr2  sr2_r
#add-point:sub04.define
{<point name="sub04.define"/>}
#end add-point:sub04.define
 
    #add-point:sub04.order.before
    {<point name="sub04.order.before"/>}
    #end add-point:sub04.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub04.everyrow.before
            {<point name="sub04.everyrow.before"/>}              
            #end add-point:sub04.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub04.everyrow.after
            {<point name="sub04.everyrow.after"/>}
            #end add-point:sub04.everyrow.after
 
 
END REPORT
 
 
 
]]>
  </section>
</add_points>
