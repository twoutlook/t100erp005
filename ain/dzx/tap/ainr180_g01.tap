<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="ainr180_g01" std_prog="ainr180_g01" erpver="1.0" module="AIN" ver="1" env="s" zone="t10prd" booking="Y" type="G" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="G" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.ainr180_g01_desc" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#GET DESC
PRIVATE FUNCTION ainr180_g01_desc(p_class,p_num,p_target)
   DEFINE p_class  LIKE type_t.chr2
   DEFINE p_num    LIKE type_t.num5
   DEFINE p_target LIKE type_t.chr10
   DEFINE r_desc   LIKE type_t.chr500
   
   CASE p_class
   WHEN '1' #获取SCC码说明
      SELECT gzcbl004 INTO r_desc
        FROM gzcbl_t
       WHERE gzcbl001 = p_num
         AND gzcbl002 = p_target
         AND gzcbl003 = g_dlang
         
   WHEN '2' #获取ACC码说明
      SELECT oocql004 INTO r_desc
        FROM oocql_t
       WHERE oocql001 = p_num
         AND oocql002 = p_target
         AND oocql003 = g_dlang
         AND oocqlent = g_enterprise


   WHEN '3' #获取人员名称
      SELECT ooag011 INTO r_desc
        FROM ooag_t
       WHERE ooag001 = p_target
         AND ooagent = g_enterprise
   
   WHEN '4' #获取部门名称
      SELECT ooefl003 INTO r_desc
        FROM ooefl_t
       WHERE ooefl001 = p_target
         AND ooefl002 = g_dlang
         AND ooeflent = g_enterprise         
         
   END CASE
   
   RETURN r_desc 
END FUNCTION]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_acc           LIKE gzcb_t.gzcb004]]>
  </point>
  <point name="ins_data.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE l_success  LIKE type_t.chr2
SELECT gzcb004 INTO g_acc FROM gzcb_t WHERE gzcb001 = '24' AND gzcb002 = 'aint180'
]]>
  </point>
  <point name="ins_data.foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[       #申請人員 inbk001
       IF NOT cl_null(sr_s.inbk001) THEN
          CALL ainr180_g01_desc('3','',sr_s.inbk001) RETURNING sr_s.l_inbk001_desc
          LET sr_s.l_inbk001_desc = sr_s.inbk001,'.',sr_s.l_inbk001_desc
       END IF
       #modify mark
       #申請部門 inbk002
       IF NOT cl_null(sr_s.inbk002) THEN
          CALL ainr180_g01_desc('4','',sr_s.inbk002) RETURNING sr_s.l_inbk002_desc
          LET sr_s.l_inbk002_desc = sr_s.inbk002,'.',sr_s.l_inbk002_desc
       END IF
       #單頭原因碼 inbk005
       IF NOT cl_null(sr_s.inbk005) THEN
          CALL ainr180_g01_desc('2',g_acc,sr_s.inbk005) RETURNING sr_s.l_inbk005_desc
          LET sr_s.l_inbk005_desc = sr_s.inbk005,'.',sr_s.l_inbk005_desc
       END IF
       #產品特征 inbl002
       IF NOT cl_null(sr_s.inbl002) THEN
         CALL s_feature_description(sr_s.inbl001,sr_s.inbl002) RETURNING l_success,sr_s.l_inbl002_desc
         LET sr_s.l_inbl002_desc = sr_s.inbl002 CLIPPED,".",sr_s.l_inbl002_desc CLIPPED
       ELSE 
         LET sr_s.l_inbl002_desc = NULL
       END IF
       #單身原因碼 inbl008
       IF NOT cl_null(sr_s.inbl008) THEN
          CALL ainr180_g01_desc('2',g_acc,sr_s.inbl008) RETURNING sr_s.l_inbl008_desc
          LET sr_s.l_inbl008_desc = sr_s.inbl008,'.',sr_s.l_inbl008_desc
       END IF]]>
  </point>
  <point name="rep.b_group.inbkdocno.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           LET l_show1 = 'N'
           IF NOT cl_null(sr1.inbk006) THEN
              LET l_show1 = 'Y'
           END IF
           PRINTX l_show1]]>
  </point>
  <point name="rep.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE l_show1    LIKE type_t.chr2
DEFINE l_show2    LIKE type_t.chr2]]>
  </point>
  <point name="rep.everyrow.beforerow" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[          LET l_show2 = 'N'
          IF NOT cl_null(sr1.inbl009) THEN
             LET l_show2 = 'Y'
          END IF
          PRINTX l_show2]]>
  </point>
  <point name="rep.order.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[    ]]>
  </point>
  <point name="sel_prep.g_from" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="Y">
    <![CDATA[   LET g_from = " FROM inbk_t LEFT OUTER JOIN inbl_t ON inbkdocno = inbldocno AND inbkent = inblent AND inbksite = inblsite ",
                "             LEFT OUTER JOIN imaal_t ON imaal001 = inbl001 AND imaalent = inblent AND imaal002 = '",g_dlang,"' "]]>
  </point>
  <point name="sel_prep.g_order" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="Y">
    <![CDATA[    LET g_order = " ORDER BY inbkdocno,inblseq"
   ]]>
  </point>
  <point name="sel_prep.g_select" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="Y">
    <![CDATA[   LET g_select = " SELECT inbkdocno,inbkocdt,inbk006,inbk001,NULL,inbk002,NULL,inbk005,NULL,inbkent, 
       inbksite,inblseq,inbl001,imaal003,imaal004,inbl002,NULL,inbl009,inbl003,inbl008,NULL,inbl006,inbl007"]]>
  </point>
  <section id="ainr180_g01.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000018
#+ 
#+ Filename...: ainr180_g01
#+ Description: 庫存有效日期變更憑證
#+ Creator....: 05423(2015-03-18 11:27:09)
#+ Modifier...: 05423(2015-03-20 09:28:07) -SD/PR-
]]>
  </section>
  <section id="ainr180_g01.global" ver="2" status="" src="s" readonly="">
    <![CDATA[#報表 g01 樣板自動產生(Version:1)
 
IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
PRIVATE TYPE sr1_r RECORD
   inbkdocno LIKE inbk_t.inbkdocno, 
   inbkocdt LIKE inbk_t.inbkocdt, 
   inbk006 LIKE inbk_t.inbk006, 
   inbk001 LIKE inbk_t.inbk001, 
   l_inbk001_desc LIKE ooag_t.ooag011, 
   inbk002 LIKE inbk_t.inbk002, 
   l_inbk002_desc LIKE ooefl_t.ooefl004, 
   inbk005 LIKE inbk_t.inbk005, 
   l_inbk005_desc LIKE oocql_t.oocql004, 
   inbkent LIKE inbk_t.inbkent, 
   inbksite LIKE inbk_t.inbksite, 
   inblseq LIKE inbl_t.inblseq, 
   inbl001 LIKE inbl_t.inbl001, 
   l_imaal003 LIKE imaal_t.imaal003, 
   l_imaal004 LIKE imaal_t.imaal004, 
   inbl002 LIKE inbl_t.inbl002, 
   l_inbl002_desc LIKE oocql_t.oocql004, 
   inbl009 LIKE inbl_t.inbl009, 
   inbl003 LIKE inbl_t.inbl003, 
   inbl008 LIKE inbl_t.inbl008, 
   l_inbl008_desc LIKE oocql_t.oocql004, 
   inbl006 LIKE inbl_t.inbl006, 
   inbl007 LIKE inbl_t.inbl007
END RECORD
 
PRIVATE TYPE sr2_r RECORD
   ooff013 LIKE ooff_t.ooff013
END RECORD
 
 
DEFINE tm RECORD
       wc STRING                   #where condition
       END RECORD
DEFINE sr DYNAMIC ARRAY OF sr1_r                   #宣告sr為sr1_t資料結構的動態陣列
DEFINE g_select        STRING
DEFINE g_from          STRING
DEFINE g_where         STRING
DEFINE g_order         STRING
DEFINE g_sql           STRING                         #report_select_prep,REPORT段使用
 
#add-point:自定義環境變數(Global Variable)
{<point name="global.variable"/>}
#end add-point
]]>
  </section>
  <section id="ainr180_g01.ins_data" ver="2" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION ainr180_g01_ins_data()
#主報表record(用於select子句)
   DEFINE sr_s RECORD 
   inbkdocno LIKE inbk_t.inbkdocno, 
   inbkocdt LIKE inbk_t.inbkocdt, 
   inbk006 LIKE inbk_t.inbk006, 
   inbk001 LIKE inbk_t.inbk001, 
   l_inbk001_desc LIKE ooag_t.ooag011, 
   inbk002 LIKE inbk_t.inbk002, 
   l_inbk002_desc LIKE ooefl_t.ooefl004, 
   inbk005 LIKE inbk_t.inbk005, 
   l_inbk005_desc LIKE oocql_t.oocql004, 
   inbkent LIKE inbk_t.inbkent, 
   inbksite LIKE inbk_t.inbksite, 
   inblseq LIKE inbl_t.inblseq, 
   inbl001 LIKE inbl_t.inbl001, 
   l_imaal003 LIKE imaal_t.imaal003, 
   l_imaal004 LIKE imaal_t.imaal004, 
   inbl002 LIKE inbl_t.inbl002, 
   l_inbl002_desc LIKE oocql_t.oocql004, 
   inbl009 LIKE inbl_t.inbl009, 
   inbl003 LIKE inbl_t.inbl003, 
   inbl008 LIKE inbl_t.inbl008, 
   l_inbl008_desc LIKE oocql_t.oocql004, 
   inbl006 LIKE inbl_t.inbl006, 
   inbl007 LIKE inbl_t.inbl007
 END RECORD
   DEFINE l_cnt           INTEGER
#add-point:ins_data段define
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before
    {<point name="ins_data.before"/>}
    #end add-point
 
    CALL sr.clear()                                  #rep sr
    LET l_cnt = 1
    FOREACH ainr180_g01_curs INTO sr_s.*
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()       
          LET g_rep_success = 'N'    
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before_arr
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #set rep array value
       LET sr[l_cnt].inbkdocno = sr_s.inbkdocno
       LET sr[l_cnt].inbkocdt = sr_s.inbkocdt
       LET sr[l_cnt].inbk006 = sr_s.inbk006
       LET sr[l_cnt].inbk001 = sr_s.inbk001
       LET sr[l_cnt].l_inbk001_desc = sr_s.l_inbk001_desc
       LET sr[l_cnt].inbk002 = sr_s.inbk002
       LET sr[l_cnt].l_inbk002_desc = sr_s.l_inbk002_desc
       LET sr[l_cnt].inbk005 = sr_s.inbk005
       LET sr[l_cnt].l_inbk005_desc = sr_s.l_inbk005_desc
       LET sr[l_cnt].inbkent = sr_s.inbkent
       LET sr[l_cnt].inbksite = sr_s.inbksite
       LET sr[l_cnt].inblseq = sr_s.inblseq
       LET sr[l_cnt].inbl001 = sr_s.inbl001
       LET sr[l_cnt].l_imaal003 = sr_s.l_imaal003
       LET sr[l_cnt].l_imaal004 = sr_s.l_imaal004
       LET sr[l_cnt].inbl002 = sr_s.inbl002
       LET sr[l_cnt].l_inbl002_desc = sr_s.l_inbl002_desc
       LET sr[l_cnt].inbl009 = sr_s.inbl009
       LET sr[l_cnt].inbl003 = sr_s.inbl003
       LET sr[l_cnt].inbl008 = sr_s.inbl008
       LET sr[l_cnt].l_inbl008_desc = sr_s.l_inbl008_desc
       LET sr[l_cnt].inbl006 = sr_s.inbl006
       LET sr[l_cnt].inbl007 = sr_s.inbl007
 
 
       #add-point:ins_data段after_arr
       {<point name="ins_data.after.save"/>}
       #end add-point
       LET l_cnt = l_cnt + 1
    END FOREACH
    CALL sr.deleteElement(l_cnt)
 
    #add-point:ins_data段after
    {<point name="ins_data.after"/>}
    #end add-point
END FUNCTION
]]>
  </section>
  <section id="ainr180_g01.main" ver="1" status="" src="s" readonly="">
    <![CDATA[PUBLIC FUNCTION ainr180_g01(p_arg1)
DEFINE  p_arg1 STRING                  #tm.wc  where condition
#add-point:init段define
{<point name="component_name.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
 
   #add-point:報表元件參數準備
   {<point name="component.arg.prep" />}
   #end add-point
   #報表元件代號
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'   
   
   LET g_rep_code = "ainr180_g01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #主報表select子句準備
   CALL ainr180_g01_sel_prep()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料存入array
   CALL ainr180_g01_ins_data()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料印出
   CALL ainr180_g01_rep_data()
 
END FUNCTION
]]>
  </section>
  <section id="ainr180_g01.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="ainr180_g01.other_report" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.report"/>}
]]>
  </section>
  <section id="ainr180_g01.rep" ver="4" status="" src="s" readonly="">
    <![CDATA[PRIVATE REPORT ainr180_g01_rep(sr1)
DEFINE sr1 sr1_r
DEFINE sr2 sr2_r
DEFINE l_subrep01_show  LIKE type_t.chr1,
       l_subrep02_show  LIKE type_t.chr1,
       l_subrep03_show  LIKE type_t.chr1,
       l_subrep04_show  LIKE type_t.chr1
DEFINE l_cnt           LIKE type_t.num5
DEFINE l_sub_sql       STRING
#add-point:rep段define
{<point name="rep.define"/>}
#end add-point
 
    #add-point:rep段ORDER_before
    {<point name="rep.order.before" mark="Y"/>}
    #end add-point
    ORDER EXTERNAL BY sr1.inbkdocno,sr1.inblseq
    #add-point:rep段ORDER_after
    {<point name="rep.order.after"/>}
    #end add-point
    
    FORMAT
       FIRST PAGE HEADER          
          PRINTX g_user,g_pdate,g_rep_code,g_company,g_ptime,g_user_name,g_date_fmt
          PRINTX tm.*
          PRINTX g_grNumFmt.*
 
          #讀取beforeGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:1)
        BEFORE GROUP OF sr1.inbkdocno
            #報表 d05 樣板自動產生(Version:5)
            CALL cl_gr_title_clear()  #清除title變數值 
            #add-point:rep.header  #公司資訊(不在公用變數內)
            {<point name="rep.header"  mark="Y"/>}
            #end add-point:rep.header 
            LET g_rep_docno = sr1.inbkdocno
            CALL cl_gr_init_pageheader() #表頭資訊
            PRINTX g_grPageHeader.*
            PRINTX g_grPageFooter.*
            #add-point:rep.apr.signstr.before
            {<point name="rep.apr.signstr.before"  mark="Y"/>}              
            #end add-point:rep.apr.signstr.before   
            LET g_doc_key = 'inbkent=' ,sr1.inbkent,'{+}inbkdocno=' ,sr1.inbkdocno         
            CALL cl_gr_init_apr(sr1.inbkdocno)
            #add-point:rep.apr.signstr
            {<point name="rep.apr.signstr"/>}              
            #end add-point:rep.apr.signstr
            PRINTX g_grSign.*
 
 
 
           #add-point:rep.b_group.inbkdocno.before
           {<point name="rep.b_group.inbkdocno.before"/>}
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub01.before
           {<point name="rep.sub01.before"/>}
           #end add-point:rep.sub01.before
 
           #add-point:rep.sub01.sql
           {<point name="rep.sub01.sql" mark="Y"/>}
           #end add-point:rep.sub01.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='2' AND ooffent = '", 
                sr1.inbkent CLIPPED ,"'", " AND  ooff002 = '", sr1.inbkdocno CLIPPED ,"'"
 
           #add-point:rep.sub01.afsql
           {<point name="rep.sub01.afsql"/>}
           #end add-point:rep.sub01.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep01_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE ainr180_g01_repcur01_cnt_pre FROM l_sub_sql
           EXECUTE ainr180_g01_repcur01_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep01_show ="Y"
           END IF
           PRINTX l_subrep01_show
           START REPORT ainr180_g01_subrep01
           DECLARE ainr180_g01_repcur01 CURSOR FROM g_sql
           FOREACH ainr180_g01_repcur01 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "ainr180_g01_repcur01:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub01.foreach
              {<point name="rep.sub01.foreach"/>}
              #end add-point:rep.sub01.foreach
              OUTPUT TO REPORT ainr180_g01_subrep01(sr2.*)
           END FOREACH
           FINISH REPORT ainr180_g01_subrep01
           #add-point:rep.sub01.after
           {<point name="rep.sub01.after"/>}
           #end add-point:rep.sub01.after
 
 
 
           #add-point:rep.b_group.inbkdocno.after
           {<point name="rep.b_group.inbkdocno.after"/>}
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:1)
        BEFORE GROUP OF sr1.inblseq
 
           #add-point:rep.b_group.inblseq.before
           {<point name="rep.b_group.inblseq.before"/>}
           #end add-point:
 
 
           #add-point:rep.b_group.inblseq.after
           {<point name="rep.b_group.inblseq.after"/>}
           #end add-point:
 
 
 
 
       ON EVERY ROW
          #add-point:rep.everyrow.before
          {<point name="rep.everyrow.before"/>}
          #end add-point:rep.everyrow.before
 
          #單身前備註
             #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub02.before
           {<point name="rep.sub02.before"/>}
           #end add-point:rep.sub02.before
 
           #add-point:rep.sub02.sql
           {<point name="rep.sub02.sql" mark="Y"/>}
           #end add-point:rep.sub02.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='2' AND ooffent = '", 
                sr1.inbkent CLIPPED ,"'", " AND  ooff002 = '", sr1.inbkdocno CLIPPED ,"'", " AND  ooff003 = '", 
                sr1.inblseq CLIPPED ,"'"
 
           #add-point:rep.sub02.afsql
           {<point name="rep.sub02.afsql"/>}
           #end add-point:rep.sub02.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep02_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE ainr180_g01_repcur02_cnt_pre FROM l_sub_sql
           EXECUTE ainr180_g01_repcur02_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep02_show ="Y"
           END IF
           PRINTX l_subrep02_show
           START REPORT ainr180_g01_subrep02
           DECLARE ainr180_g01_repcur02 CURSOR FROM g_sql
           FOREACH ainr180_g01_repcur02 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "ainr180_g01_repcur02:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub02.foreach
              {<point name="rep.sub02.foreach"/>}
              #end add-point:rep.sub02.foreach
              OUTPUT TO REPORT ainr180_g01_subrep02(sr2.*)
           END FOREACH
           FINISH REPORT ainr180_g01_subrep02
           #add-point:rep.sub02.after
           {<point name="rep.sub02.after"/>}
           #end add-point:rep.sub02.after
 
 
 
          #add-point:rep.everyrow.beforerow
          {<point name="rep.everyrow.beforerow"/>}
          #end add-point:rep.everyrow.beforerow
            
          PRINTX sr1.*
 
          #add-point:rep.everyrow.afterrow
          {<point name="rep.everyrow.afterrow"/>}
          #end add-point:rep.everyrow.afterrow
 
          #單身後備註
             #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub03.before
           {<point name="rep.sub03.before"/>}
           #end add-point:rep.sub03.before
 
           #add-point:rep.sub03.sql
           {<point name="rep.sub03.sql" mark="Y"/>}
           #end add-point:rep.sub03.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='1' AND ooffent = '", 
                sr1.inbkent CLIPPED ,"'", " AND  ooff002 = '", sr1.inbkdocno CLIPPED ,"'", " AND  ooff003 = '", 
                sr1.inblseq CLIPPED ,"'"
 
           #add-point:rep.sub03.afsql
           {<point name="rep.sub03.afsql"/>}
           #end add-point:rep.sub03.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep03_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE ainr180_g01_repcur03_cnt_pre FROM l_sub_sql
           EXECUTE ainr180_g01_repcur03_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep03_show ="Y"
           END IF
           PRINTX l_subrep03_show
           START REPORT ainr180_g01_subrep03
           DECLARE ainr180_g01_repcur03 CURSOR FROM g_sql
           FOREACH ainr180_g01_repcur03 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "ainr180_g01_repcur03:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub03.foreach
              {<point name="rep.sub03.foreach"/>}
              #end add-point:rep.sub03.foreach
              OUTPUT TO REPORT ainr180_g01_subrep03(sr2.*)
           END FOREACH
           FINISH REPORT ainr180_g01_subrep03
           #add-point:rep.sub03.after
           {<point name="rep.sub03.after"/>}
           #end add-point:rep.sub03.after
 
 
 
          #add-point:rep.everyrow.after
          {<point name="rep.everyrow.after"/>}
          #end add-point:rep.everyrow.after        
 
          #讀取afterGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:1)
        AFTER GROUP OF sr1.inbkdocno
 
           #add-point:rep.a_group.inbkdocno.before
           {<point name="rep.a_group.inbkdocno.before"/>}
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub04.before
           {<point name="rep.sub04.before"/>}
           #end add-point:rep.sub04.before
 
           #add-point:rep.sub04.sql
           {<point name="rep.sub04.sql" mark="Y"/>}
           #end add-point:rep.sub04.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='1' AND ooffent = '", 
                sr1.inbkent CLIPPED ,"'", " AND  ooff002 = '", sr1.inbkdocno CLIPPED ,"'"
 
           #add-point:rep.sub04.afsql
           {<point name="rep.sub04.afsql"/>}
           #end add-point:rep.sub04.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep04_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE ainr180_g01_repcur04_cnt_pre FROM l_sub_sql
           EXECUTE ainr180_g01_repcur04_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep04_show ="Y"
           END IF
           PRINTX l_subrep04_show
           START REPORT ainr180_g01_subrep04
           DECLARE ainr180_g01_repcur04 CURSOR FROM g_sql
           FOREACH ainr180_g01_repcur04 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "ainr180_g01_repcur04:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub04.foreach
              {<point name="rep.sub04.foreach"/>}
              #end add-point:rep.sub04.foreach
              OUTPUT TO REPORT ainr180_g01_subrep04(sr2.*)
           END FOREACH
           FINISH REPORT ainr180_g01_subrep04
           #add-point:rep.sub04.after
           {<point name="rep.sub04.after"/>}
           #end add-point:rep.sub04.after
 
 
 
           #add-point:rep.a_group.inbkdocno.after
           {<point name="rep.a_group.inbkdocno.after"/>}
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:1)
        AFTER GROUP OF sr1.inblseq
 
           #add-point:rep.a_group.inblseq.before
           {<point name="rep.a_group.inblseq.before"/>}
           #end add-point:
 
 
           #add-point:rep.a_group.inblseq.after
           {<point name="rep.a_group.inblseq.after"/>}
           #end add-point:
 
 
 
       ON LAST ROW
            #add-point:rep.lastrow.before  
            {<point name="rep.lastrow.before"/>}        
            #edn add point :rep.lastrow.before
 
            #add-point:rep.lastrow.after
            {<point name="rep.lastrow.after"/>}
            #edn add point :rep.lastrow.after
END REPORT
]]>
  </section>
  <section id="ainr180_g01.rep_data" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION ainr180_g01_rep_data()
   DEFINE HANDLER         om.SaxDocumentHandler
   DEFINE l_i             INTEGER
 
    #判斷是否有報表資料，若回彈出訊息視窗
    IF sr.getLength() = 0 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = "adz-00285"
       LET g_errparam.extend = NULL
       LET g_errparam.popup  = FALSE
       LET g_errparam.replace[1] = ''
       CALL cl_err()  
       RETURN 
    END IF
    WHILE TRUE               
       LET handler = cl_gr_handler()
       IF handler IS NOT NULL THEN
          START REPORT ainr180_g01_rep TO XML HANDLER handler
          FOR l_i = 1 TO sr.getLength()
             OUTPUT TO REPORT ainr180_g01_rep(sr[l_i].*)
          END FOR
          FINISH REPORT ainr180_g01_rep
       END IF
       IF INT_FLAG = TRUE THEN
          LET INT_FLAG = FALSE
          EXIT WHILE
       END IF
    END WHILE
    CALL cl_gr_close_report()
END FUNCTION
]]>
  </section>
  <section id="ainr180_g01.sel_prep" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION ainr180_g01_sel_prep()
   #add-point:sel_prep段define
   {<point name="sel_prep.define"/>}
   #end add-point
 
   #add-point:sel_prep before
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
   
   #add-point:sel_prep g_select
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT inbkdocno,inbkocdt,inbk006,inbk001,NULL,inbk002,NULL,inbk005,NULL,inbkent, 
       inbksite,inblseq,inbl001,NULL,NULL,inbl002,NULL,inbl009,inbl003,inbl008,NULL,inbl006,inbl007" 

 
   #add-point:sel_prep g_from
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM inbk_t,inbl_t"
 
   #add-point:sel_prep g_where
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED 
 
   #add-point:sel_prep g_order
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
    LET g_order = " ORDER BY inbkdocno,inblseq"
 
   #add-point:sel_prep.sql.before
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("inbk_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED ," ",g_order CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段 
 
   #add-point:sel_prep.sql.after
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE ainr180_g01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()   
      LET g_rep_success = 'N'    
   END IF
   DECLARE ainr180_g01_curs CURSOR FOR ainr180_g01_prepare
 
END FUNCTION
]]>
  </section>
  <section id="ainr180_g01.subrep_str" ver="1" status="" src="s" readonly="">
    <![CDATA[#讀取子報表樣板
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT ainr180_g01_subrep01(sr2)
DEFINE  sr2  sr2_r
#add-point:sub01.define
{<point name="sub01.define"/>}
#end add-point:sub01.define
 
    #add-point:sub01.order.before
    {<point name="sub01.order.before"/>}
    #end add-point:sub01.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub01.everyrow.before
            {<point name="sub01.everyrow.before"/>}              
            #end add-point:sub01.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub01.everyrow.after
            {<point name="sub01.everyrow.after"/>}
            #end add-point:sub01.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT ainr180_g01_subrep02(sr2)
DEFINE  sr2  sr2_r
#add-point:sub02.define
{<point name="sub02.define"/>}
#end add-point:sub02.define
 
    #add-point:sub02.order.before
    {<point name="sub02.order.before"/>}
    #end add-point:sub02.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub02.everyrow.before
            {<point name="sub02.everyrow.before"/>}              
            #end add-point:sub02.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub02.everyrow.after
            {<point name="sub02.everyrow.after"/>}
            #end add-point:sub02.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT ainr180_g01_subrep03(sr2)
DEFINE  sr2  sr2_r
#add-point:sub03.define
{<point name="sub03.define"/>}
#end add-point:sub03.define
 
    #add-point:sub03.order.before
    {<point name="sub03.order.before"/>}
    #end add-point:sub03.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub03.everyrow.before
            {<point name="sub03.everyrow.before"/>}              
            #end add-point:sub03.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub03.everyrow.after
            {<point name="sub03.everyrow.after"/>}
            #end add-point:sub03.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT ainr180_g01_subrep04(sr2)
DEFINE  sr2  sr2_r
#add-point:sub04.define
{<point name="sub04.define"/>}
#end add-point:sub04.define
 
    #add-point:sub04.order.before
    {<point name="sub04.order.before"/>}
    #end add-point:sub04.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub04.everyrow.before
            {<point name="sub04.everyrow.before"/>}              
            #end add-point:sub04.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub04.everyrow.after
            {<point name="sub04.everyrow.after"/>}
            #end add-point:sub04.everyrow.after
 
 
END REPORT
 
 
 
]]>
  </section>
</add_points>
