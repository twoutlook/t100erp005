<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="ainr831_g01" std_prog="ainr831_g01" erpver="1.0" module="AIN" ver="1" env="s" zone="t10prd" booking="N" type="G" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="G" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.ainr831_g01_inpd_order" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 獲取排序
# Memo...........:
# Usage..........: CALL ainr830_g01_inpd_order(p_order,p_flag,p_inpa031,sr_tmp)
#                  RETURNING 回传参数
# Input parameter: p_order        傳入欄位順序一~六
#                : p_flag         是否是第一個順序
#                : p_inpa031      分群碼選項
#                : sr_tmp         數組
# Return code....: l_field_order
################################################################################
PRIVATE FUNCTION ainr831_g01_inpd_order(p_order,p_flag,p_inpa031)
DEFINE p_order   LIKE type_t.chr1
DEFINE p_flag    LIKE type_t.num5
DEFINE p_inpa031 LIKE inpa_t.inpa031

   IF cl_null(p_order) OR p_order = '7' THEN
      RETURN 
   END IF    
   IF cl_null(l_field_order) THEN LET l_field_order = " 1=1 " END IF
   IF p_flag THEN
      LET l_field_order = l_field_order ," ORDER BY "
   END IF
   IF p_order = '1' THEN
      IF p_flag THEN 
         LET l_field_order = l_field_order," imaf052"
      ELSE
         LET l_field_order = l_field_order,",imaf052"  
      END IF         
   END IF
   IF p_order = '2' THEN
      IF p_flag THEN   
         LET l_field_order = l_field_order," inpd005"
      ELSE
         LET l_field_order = l_field_order,",inpd005"
      END IF   
   END IF  
   IF p_order = '3' THEN
      IF p_flag THEN   
         LET l_field_order = l_field_order," inpd006"
      ELSE
         LET l_field_order = l_field_order,",inpd006"
      END IF
   END IF    
   IF p_order = '4' THEN
      IF p_flag THEN   
         LET l_field_order = l_field_order," inpd007"
      ELSE
         LET l_field_order = l_field_order,",inpd007"
      END IF
   END IF
   IF p_order = '5' THEN
      IF p_flag THEN   
         LET l_field_order = l_field_order," inpd001"
      ELSE
         LET l_field_order = l_field_order,",inpd001"
      END IF
   END IF 
   IF p_order = '6' THEN
      IF p_inpa031 = '1' THEN    #產品分群
         IF p_flag THEN 
            LET l_field_order = l_field_order," imaf011"
         ELSE
            LET l_field_order = l_field_order,",imaf011"  
         END IF 
      END IF
      IF p_inpa031 = '2' THEN    #庫存分群
         IF p_flag THEN 
            LET l_field_order = l_field_order," imaf051"
         ELSE
            LET l_field_order = l_field_order,",imaf051"  
         END IF
      END IF
   END IF   
   IF p_order = '8' THEN
      IF p_flag THEN 
         LET l_field_order = l_field_order," imaf057"
      ELSE
         LET l_field_order = l_field_order,",imaf057"  
      END IF
   END IF
   LET l_field_order = l_field_order,",inpddocno,inpdseq"  
END FUNCTION]]>
  </point>
  <point name="report.ainr831_g01_subrep05" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE REPORT ainr831_g01_subrep05(sr3,l_show)
   DEFINE sr3 sr3_r
   DEFINE l_show LIKE type_t.chr2
   ORDER EXTERNAL BY sr3.inpedocno
   FORMAT  
      BEFORE GROUP OF sr3.inpedocno
         PRINTX l_show   
      ON EVERY ROW
         PRINTX g_grNumFmt.*
         PRINTX sr3.*
END REPORT]]>
  </point>
  <point name="function.ainr831_g01_desc" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#GET DESC
#BY zhujing 2015-4-29
PRIVATE FUNCTION ainr831_g01_desc(p_class,p_target,p_target2)
   DEFINE p_class  LIKE type_t.chr2
   DEFINE p_target LIKE type_t.chr10
   DEFINE p_target2 LIKE type_t.chr10
   DEFINE r_desc   LIKE type_t.chr500
   
   CASE p_class
   WHEN '1' #获取庫位說明
      SELECT inayl003 INTO r_desc
        FROM inayl_t
       WHERE inayl001 = p_target
         AND inayl002 = g_dlang
         AND inaylent = g_enterprise
         
   WHEN '2' #获取儲位說明
      SELECT inad003 INTO r_desc
        FROM inad_t
       WHERE inad001 = p_target
         AND inad002 = p_target2
         AND inadsite = g_site
         AND inadent = g_enterprise

   END CASE
   
   RETURN r_desc 
END FUNCTION]]>
  </point>
  <point name="component.arg.prep" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   SELECT dzebl003 INTO l_desc
     FROM dzebl_t
    WHERE dzebl001 = 'inpd008'
      AND dzebl002 = g_dlang]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[TYPE sr3_r RECORD
   inpedocno LIKE inpe_t.inpedocno,
   inpe008_1 LIKE inpe_t.inpe008,            #製造批號
   inpe009_1 LIKE inpe_t.inpe009,            #製造序號
   inpe008_2 LIKE inpe_t.inpe008,            #製造批號
   inpe009_2 LIKE inpe_t.inpe009,            #製造序號
   l_inpe008_1_inpe009_1 LIKE type_t.chr100, #批號/序號 1
   l_inpe008_2_inpe009_2 LIKE type_t.chr100  #批號/序號 2 
END RECORD

TYPE sr4_r RECORD
   inpedocno LIKE inpe_t.inpedocno,
   inpe008 LIKE inpe_t.inpe008,          #製造批號
   inpe009 LIKE inpe_t.inpe009           #製造序號
END RECORD

DEFINE sr3 DYNAMIC ARRAY OF sr3_r
DEFINE sr4 DYNAMIC ARRAY OF sr4_r
DEFINE l_field_order     STRING
DEFINE l_desc  LIKE type_t.chr100        #表頭title]]>
  </point>
  <point name="ins_data.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[    END FOREACH
    CALL sr.deleteElement(l_cnt)]]>
  </point>
  <point name="ins_data.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE l_success  LIKE type_t.chr2
DEFINE l_cnt2     LIKE type_t.num5     #存放按照列印排序順序後的序號
DEFINE l_tmp      LIKE type_t.chr100   #存放按照列印排序順序後的序號
DEFINE l_sql              STRING       #抓取正式信息
DEFINE l_imaf052 LIKE imaf_t.imaf052, 
   l_imaf011 LIKE imaf_t.imaf011, 
   l_imaf051 LIKE imaf_t.imaf051, 
   l_imaf057 LIKE imaf_t.imaf057]]>
  </point>
  <point name="ins_data.foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[       LET l_field_order = NULL
       #計算順序 l_field_order
       #第一位為排序順序欄位
       #第二位TRUE為排序第一個
       #第三位為分群碼
       CALL ainr831_g01_inpd_order(sr_s.inpa025,TRUE,sr_s.inpa031) 
       CALL ainr831_g01_inpd_order(sr_s.inpa026,FALSE,sr_s.inpa031) 
       CALL ainr831_g01_inpd_order(sr_s.inpa027,FALSE,sr_s.inpa031) 
       CALL ainr831_g01_inpd_order(sr_s.inpa028,FALSE,sr_s.inpa031) 
       CALL ainr831_g01_inpd_order(sr_s.inpa029,FALSE,sr_s.inpa031) 
       CALL ainr831_g01_inpd_order(sr_s.inpa030,FALSE,sr_s.inpa031) 
       LET l_cnt2 = 1
       #獲取所有資料
       LET l_sql = " SELECT DISTINCT inpd008,inpddocno,inpdseq,inpd001,imaal003,imaal004,inpd002,NULL,'N',inpd005,NULL,", 
                   " inpd006,NULL,inpd007,inpd003,'N',inpd009,inpd010,inpd011,inpd012,inpd013,inpdent,inpa024,inpa025, ",
                   " inpa026,inpa027,inpa028,inpa029,inpa030,inpa031,NULL,inpdsite,imaf052,imaf011,imaf051,imaf057",
                   " FROM inpd_t LEFT OUTER JOIN inpa_t ON inpadocno = inpd008 AND inpaent = inpdent AND inpasite = inpdsite ",
                   "             LEFT OUTER JOIN imaf_t ON imaf001 = inpd001 AND imafent = inpdent AND imafsite = inpdsite ",
                   "             LEFT OUTER JOIN imaal_t ON imaal001 = inpd001 AND imaalent = inpdent AND imaal002 = '",g_dlang,"' ",
                   " WHERE ",tm.wc CLIPPED, " AND inpd008 = '",sr_s.inpd008 CLIPPED,"' AND ",l_field_order CLIPPED
       PREPARE ainr831_g01_pre01 FROM l_sql
       DECLARE ainr831_g01_cur01 CURSOR FOR ainr831_g01_pre01
       FOREACH ainr831_g01_cur01 INTO sr_s.*,l_imaf052,l_imaf011,l_imaf051,l_imaf057
         IF STATUS THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = 'foreach:'
            LET g_errparam.code   = STATUS
            LET g_errparam.popup  = TRUE
            CALL cl_err()       
            LET g_rep_success = 'N'    
            EXIT FOREACH
         END IF
         
         #獲取說明
         #產品特征inpd002
         IF NOT cl_null(sr_s.inpd002) THEN
            CALL s_feature_description(sr_s.inpd001,sr_s.inpd002) RETURNING l_success,sr_s.l_inpd002_desc
            LET sr_s.l_inpd002_desc = sr_s.inpd002 CLIPPED,".",sr_s.l_inpd002_desc CLIPPED
         ELSE 
            LET sr_s.l_inpd002_desc = NULL
         END IF
         #庫位    inpd005
         IF NOT cl_null(sr_s.inpd005) THEN
            CALL ainr831_g01_desc('1',sr_s.inpd005,'') RETURNING sr_s.l_inpd005_desc
            LET sr_s.l_inpd005_desc = sr_s.inpd005,'.',sr_s.l_inpd005_desc
         END IF
         #儲位    inpd006
         IF NOT cl_null(sr_s.inpd006) THEN
            CALL ainr831_g01_desc('1',sr_s.inpd005,sr_s.inpd006) RETURNING sr_s.l_inpd006_desc
            LET sr_s.l_inpd006_desc = sr_s.inpd006,'.',sr_s.l_inpd006_desc
         END IF
       
         LET l_tmp = l_cnt2 USING '&&&&&&&&&&'
         IF sr_s.inpd009 = 'Y' THEN
            LET sr_s.l_order = sr_s.inpd008 CLIPPED,'-01-',l_cnt2 CLIPPED     #l_order=盤點計畫單號+同一單號下標籤排序序號，空白標籤排在最後
         ELSE
            LET sr_s.l_order = sr_s.inpd008 CLIPPED,'-00-',l_cnt2 CLIPPED     #l_order=盤點計畫單號+同一單號下標籤排序序號,空白標籤排在最後
         END IF
         LET l_cnt2 = l_cnt2 + 1]]>
  </point>
  <point name="rep.b_group.l_order.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           LET l_show1 = sr1.inpa024         #是否顯示現有庫存量
           PRINTX l_show1]]>
  </point>
  <point name="rep.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE sr3       sr3_r
DEFINE l_ac              INTEGER
DEFINE l_i               INTEGER
DEFINE l_count           INTEGER
DEFINE l_subrep05_show1  LIKE type_t.chr1
DEFINE l_subrep05_show2  LIKE type_t.chr1
DEFINE l_show1    LIKE type_t.chr2
DEFINE l_show2    LIKE type_t.chr2
DEFINE g_inpd008  LIKE inpd_t.inpd008]]>
  </point>
  <point name="rep.everyrow.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[          IF tm.pr1 = 'Y' THEN
             LET g_sql = "SELECT inpedocno,inpe008,inpe009",
                         "  FROM inpe_t ",
                         " WHERE inpeent     = '",sr1.inpdent      CLIPPED,"'",                                               
                         "   AND inpesite    = '",g_site     CLIPPED,"'",
                         "   AND inpedocno   = '",sr1.inpddocno        CLIPPED,"'",                    
                         "   AND inpeseq     = '",sr1.inpdseq      CLIPPED,"'",
                         "   AND inpe008 IS NOT NULL AND inpe008 <> ' ' ",
                         "   AND inpe009 IS NOT NULL AND inpe009 <> ' ' "
             LET l_subrep05_show1 = 'N'             
             LET l_subrep05_show2 = 'N' 
             LET l_show2 = NULL             
             LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
             PREPARE ainr831_g01_repcur05_cnt_pre FROM l_sub_sql
             EXECUTE ainr831_g01_repcur05_cnt_pre INTO l_cnt
           
             IF l_cnt > 0 THEN
                LET l_subrep05_show1 ="Y"
                LET l_show2 = '1'
             ELSE 
                LET g_sql = "SELECT inpedocno,inpe008,inpe009",
                            "  FROM inpe_t ",
                            " WHERE inpeent     = '",sr1.inpdent      CLIPPED,"'",                                               
                            "   AND inpesite    = '",g_site     CLIPPED,"'",
                            "   AND inpedocno   = '",sr1.inpddocno        CLIPPED,"'",                    
                            "   AND inpeseq     = '",sr1.inpdseq      CLIPPED,"'",
                            "   AND inpe008 IS NOT NULL AND inpe008 <> ' ' "
                LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
                PREPARE ainr831_g01_repcur05_cnt_pre1 FROM l_sub_sql
                EXECUTE ainr831_g01_repcur05_cnt_pre1 INTO l_cnt
                IF l_cnt > 0 THEN
                   LET l_subrep05_show2 = 'Y'
                   LET l_show2 = '2'
                END IF
             END IF
             PRINTX l_subrep05_show1 
             PRINTX l_subrep05_show2
             START REPORT ainr831_g01_subrep05           
                LET l_ac = 1                              
                CALL sr4.clear()                 
                DECLARE ainr831_g01_repcur05 CURSOR FROM g_sql
                FOREACH ainr831_g01_repcur05 INTO sr4[l_ac].*  
                  LET l_ac = l_ac+1                                
                END FOREACH   
                LET l_ac = l_ac-1               
                LET l_i = 1                       
                IF l_ac > 0 THEN      
                   WHILE TRUE                         
                      INITIALIZE sr3.* TO NULL
                      LET sr3.inpedocno = sr4[l_i].inpedocno
                      LET sr3.inpe008_1 = sr4[l_i].inpe008
                      LET sr3.inpe009_1 = sr4[l_i].inpe009
                      LET sr3.l_inpe008_1_inpe009_1  = sr3.inpe008_1  , "/" , sr3.inpe009_1                                                                                         
                      IF l_i+1 <= l_ac THEN    
                         LET sr3.inpedocno = sr4[l_i+1].inpedocno
                         LET sr3.inpe008_2 = sr4[l_i+1].inpe008
                         LET sr3.inpe009_2 = sr4[l_i+1].inpe009
                         LET sr3.l_inpe008_2_inpe009_2 =  sr3.inpe008_2 , "/" , sr3.inpe009_2
                      END IF
                      
                      OUTPUT TO REPORT ainr831_g01_subrep05(sr3.*,l_show2)              
                      LET l_i = l_i + 2
                      IF l_i > l_ac THEN  
                         EXIT WHILE
                      END IF                     
                   END  WHILE                                                
                END IF                    
             FINISH REPORT ainr831_g01_subrep05  
          END IF]]>
  </point>
  <point name="rep.header" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#            CALL cl_gr_init_pageheader() #表頭資訊
#            #LET l_desc = l_desc CLIPPED,': ',sr1.inpd008 CLIPPED
#            LET g_grPageHeader.title0403 = l_desc CLIPPED,': ',sr1.inpd008 CLIPPED
#            PRINTX g_grPageHeader.*
            LET g_inpd008 = sr1.inpd008
            PRINTX g_inpd008]]>
  </point>
  <point name="rep.order.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[    ]]>
  </point>
  <point name="rep.order.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[    ]]>
  </point>
  <point name="sel_prep.g_from" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="Y">
    <![CDATA[   LET g_from = " FROM inpd_t LEFT OUTER JOIN inpa_t ON inpadocno = inpd008 AND inpaent = inpdent AND inpasite = inpdsite "]]>
  </point>
  <point name="sel_prep.g_select" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="Y">
    <![CDATA[   #  僅抓取盤點計畫單號及列印順序:inpa024-inpa031;並按照盤點計畫單號進行排序
   LET g_select = " SELECT DISTINCT inpd008,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, 
       NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,inpdent,inpa024,inpa025, 
       inpa026,inpa027,inpa028,inpa029,inpa030,inpa031,NULL,inpdsite"
#   LET g_select = " SELECT inpd008,inpddocno,inpdseq,inpd001,NULL,NULL,inpd002,NULL,NULL,inpd005,NULL, 
#       inpd006,NULL,inpd007,inpd003,NULL,inpd009,inpd010,inpd011,inpd012,inpd013,inpdent,inpa024,inpa025, 
#       inpa026,inpa027,inpa028,inpa029,inpa030,inpa031,NULL"]]>
  </point>
  <section id="ainr831_g01.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000020
#+ 
#+ Filename...: ainr831_g01
#+ Description: 盤點清冊-現有庫存
#+ Creator....: 05423(2015-04-28 15:43:14)
#+ Modifier...: 05423(2015-06-15 11:44:42) -SD/PR-
]]>
  </section>
  <section id="ainr831_g01.global" ver="3" status="" src="s" readonly="">
    <![CDATA[#報表 g01 樣板自動產生(Version:1)
 
IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
PRIVATE TYPE sr1_r RECORD
   inpd008 LIKE inpd_t.inpd008, 
   inpddocno LIKE inpd_t.inpddocno, 
   inpdseq LIKE inpd_t.inpdseq, 
   inpd001 LIKE inpd_t.inpd001, 
   l_imaal003 LIKE imaal_t.imaal003, 
   l_imaal004 LIKE imaal_t.imaal004, 
   inpd002 LIKE inpd_t.inpd002, 
   l_inpd002_desc LIKE oocql_t.oocql004, 
   l_inpd002_show LIKE type_t.chr2, 
   inpd005 LIKE inpd_t.inpd005, 
   l_inpd005_desc LIKE inayl_t.inayl003, 
   inpd006 LIKE inpd_t.inpd006, 
   l_inpd006_desc LIKE inab_t.inab003, 
   inpd007 LIKE inpd_t.inpd007, 
   inpd003 LIKE inpd_t.inpd003, 
   l_inpd003_show LIKE type_t.chr2, 
   inpd009 LIKE inpd_t.inpd009, 
   inpd010 LIKE inpd_t.inpd010, 
   inpd011 LIKE inpd_t.inpd011, 
   inpd012 LIKE inpd_t.inpd012, 
   inpd013 LIKE inpd_t.inpd013, 
   inpdent LIKE inpd_t.inpdent, 
   inpa024 LIKE inpa_t.inpa024, 
   inpa025 LIKE inpa_t.inpa025, 
   inpa026 LIKE inpa_t.inpa026, 
   inpa027 LIKE inpa_t.inpa027, 
   inpa028 LIKE inpa_t.inpa028, 
   inpa029 LIKE inpa_t.inpa029, 
   inpa030 LIKE inpa_t.inpa030, 
   inpa031 LIKE inpa_t.inpa031, 
   l_order LIKE type_t.chr500, 
   inpdsite LIKE inpd_t.inpdsite
END RECORD
 
PRIVATE TYPE sr2_r RECORD
   ooff013 LIKE ooff_t.ooff013
END RECORD
 
 
DEFINE tm RECORD
       wc STRING,                  #where condition 
       pr1 LIKE type_t.chr2,         #l_pr1 
       pr2 LIKE type_t.chr2,         #l_pr2 
       pr3 LIKE type_t.chr2          #l_pr3
       END RECORD
DEFINE sr DYNAMIC ARRAY OF sr1_r                   #宣告sr為sr1_t資料結構的動態陣列
DEFINE g_select        STRING
DEFINE g_from          STRING
DEFINE g_where         STRING
DEFINE g_order         STRING
DEFINE g_sql           STRING                         #report_select_prep,REPORT段使用
 
#add-point:自定義環境變數(Global Variable)
{<point name="global.variable"/>}
#end add-point
]]>
  </section>
  <section id="ainr831_g01.ins_data" ver="2" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION ainr831_g01_ins_data()
#主報表record(用於select子句)
   DEFINE sr_s RECORD 
   inpd008 LIKE inpd_t.inpd008, 
   inpddocno LIKE inpd_t.inpddocno, 
   inpdseq LIKE inpd_t.inpdseq, 
   inpd001 LIKE inpd_t.inpd001, 
   l_imaal003 LIKE imaal_t.imaal003, 
   l_imaal004 LIKE imaal_t.imaal004, 
   inpd002 LIKE inpd_t.inpd002, 
   l_inpd002_desc LIKE oocql_t.oocql004, 
   l_inpd002_show LIKE type_t.chr2, 
   inpd005 LIKE inpd_t.inpd005, 
   l_inpd005_desc LIKE inayl_t.inayl003, 
   inpd006 LIKE inpd_t.inpd006, 
   l_inpd006_desc LIKE inab_t.inab003, 
   inpd007 LIKE inpd_t.inpd007, 
   inpd003 LIKE inpd_t.inpd003, 
   l_inpd003_show LIKE type_t.chr2, 
   inpd009 LIKE inpd_t.inpd009, 
   inpd010 LIKE inpd_t.inpd010, 
   inpd011 LIKE inpd_t.inpd011, 
   inpd012 LIKE inpd_t.inpd012, 
   inpd013 LIKE inpd_t.inpd013, 
   inpdent LIKE inpd_t.inpdent, 
   inpa024 LIKE inpa_t.inpa024, 
   inpa025 LIKE inpa_t.inpa025, 
   inpa026 LIKE inpa_t.inpa026, 
   inpa027 LIKE inpa_t.inpa027, 
   inpa028 LIKE inpa_t.inpa028, 
   inpa029 LIKE inpa_t.inpa029, 
   inpa030 LIKE inpa_t.inpa030, 
   inpa031 LIKE inpa_t.inpa031, 
   l_order LIKE type_t.chr500, 
   inpdsite LIKE inpd_t.inpdsite
 END RECORD
   DEFINE l_cnt           INTEGER
#add-point:ins_data段define
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before
    {<point name="ins_data.before"/>}
    #end add-point
 
    CALL sr.clear()                                  #rep sr
    LET l_cnt = 1
    FOREACH ainr831_g01_curs INTO sr_s.*
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()       
          LET g_rep_success = 'N'    
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before_arr
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #set rep array value
       LET sr[l_cnt].inpd008 = sr_s.inpd008
       LET sr[l_cnt].inpddocno = sr_s.inpddocno
       LET sr[l_cnt].inpdseq = sr_s.inpdseq
       LET sr[l_cnt].inpd001 = sr_s.inpd001
       LET sr[l_cnt].l_imaal003 = sr_s.l_imaal003
       LET sr[l_cnt].l_imaal004 = sr_s.l_imaal004
       LET sr[l_cnt].inpd002 = sr_s.inpd002
       LET sr[l_cnt].l_inpd002_desc = sr_s.l_inpd002_desc
       LET sr[l_cnt].l_inpd002_show = sr_s.l_inpd002_show
       LET sr[l_cnt].inpd005 = sr_s.inpd005
       LET sr[l_cnt].l_inpd005_desc = sr_s.l_inpd005_desc
       LET sr[l_cnt].inpd006 = sr_s.inpd006
       LET sr[l_cnt].l_inpd006_desc = sr_s.l_inpd006_desc
       LET sr[l_cnt].inpd007 = sr_s.inpd007
       LET sr[l_cnt].inpd003 = sr_s.inpd003
       LET sr[l_cnt].l_inpd003_show = sr_s.l_inpd003_show
       LET sr[l_cnt].inpd009 = sr_s.inpd009
       LET sr[l_cnt].inpd010 = sr_s.inpd010
       LET sr[l_cnt].inpd011 = sr_s.inpd011
       LET sr[l_cnt].inpd012 = sr_s.inpd012
       LET sr[l_cnt].inpd013 = sr_s.inpd013
       LET sr[l_cnt].inpdent = sr_s.inpdent
       LET sr[l_cnt].inpa024 = sr_s.inpa024
       LET sr[l_cnt].inpa025 = sr_s.inpa025
       LET sr[l_cnt].inpa026 = sr_s.inpa026
       LET sr[l_cnt].inpa027 = sr_s.inpa027
       LET sr[l_cnt].inpa028 = sr_s.inpa028
       LET sr[l_cnt].inpa029 = sr_s.inpa029
       LET sr[l_cnt].inpa030 = sr_s.inpa030
       LET sr[l_cnt].inpa031 = sr_s.inpa031
       LET sr[l_cnt].l_order = sr_s.l_order
       LET sr[l_cnt].inpdsite = sr_s.inpdsite
 
 
       #add-point:ins_data段after_arr
       {<point name="ins_data.after.save"/>}
       #end add-point
       LET l_cnt = l_cnt + 1
    END FOREACH
    CALL sr.deleteElement(l_cnt)
 
    #add-point:ins_data段after
    {<point name="ins_data.after"/>}
    #end add-point
END FUNCTION
]]>
  </section>
  <section id="ainr831_g01.main" ver="2" status="" src="s" readonly="">
    <![CDATA[PUBLIC FUNCTION ainr831_g01(p_arg1,p_arg2,p_arg3,p_arg4)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 LIKE type_t.chr2         #tm.pr1  l_pr1 
DEFINE  p_arg3 LIKE type_t.chr2         #tm.pr2  l_pr2 
DEFINE  p_arg4 LIKE type_t.chr2         #tm.pr3  l_pr3
#add-point:init段define
{<point name="component_name.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.pr1 = p_arg2
   LET tm.pr2 = p_arg3
   LET tm.pr3 = p_arg4
 
   #add-point:報表元件參數準備
   {<point name="component.arg.prep" />}
   #end add-point
   #報表元件代號
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'   
   
   LET g_rep_code = "ainr831_g01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #主報表select子句準備
   CALL ainr831_g01_sel_prep()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料存入array
   CALL ainr831_g01_ins_data()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料印出
   CALL ainr831_g01_rep_data()
 
END FUNCTION
]]>
  </section>
  <section id="ainr831_g01.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="ainr831_g01.other_report" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.report"/>}
]]>
  </section>
  <section id="ainr831_g01.rep" ver="4" status="" src="s" readonly="">
    <![CDATA[PRIVATE REPORT ainr831_g01_rep(sr1)
DEFINE sr1 sr1_r
DEFINE sr2 sr2_r
DEFINE l_subrep01_show  LIKE type_t.chr1,
       l_subrep02_show  LIKE type_t.chr1,
       l_subrep03_show  LIKE type_t.chr1,
       l_subrep04_show  LIKE type_t.chr1
DEFINE l_cnt           LIKE type_t.num5
DEFINE l_sub_sql       STRING
#add-point:rep段define
{<point name="rep.define"/>}
#end add-point
 
    #add-point:rep段ORDER_before
    {<point name="rep.order.before" mark="Y"/>}
    #end add-point
    ORDER EXTERNAL BY sr1.inpd008,sr1.l_order
    #add-point:rep段ORDER_after
    {<point name="rep.order.after"/>}
    #end add-point
    
    FORMAT
       FIRST PAGE HEADER          
          PRINTX g_user,g_pdate,g_rep_code,g_company,g_ptime,g_user_name,g_date_fmt
          PRINTX tm.*
          PRINTX g_grNumFmt.*
 
          #讀取beforeGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:1)
        BEFORE GROUP OF sr1.inpd008
            #報表 d05 樣板自動產生(Version:5)
            CALL cl_gr_title_clear()  #清除title變數值 
            #add-point:rep.header  #公司資訊(不在公用變數內)
            {<point name="rep.header"  mark="Y"/>}
            #end add-point:rep.header 
            LET g_rep_docno = sr1.inpd008
            CALL cl_gr_init_pageheader() #表頭資訊
            PRINTX g_grPageHeader.*
            PRINTX g_grPageFooter.*
            #add-point:rep.apr.signstr.before
            {<point name="rep.apr.signstr.before"  mark="Y"/>}              
            #end add-point:rep.apr.signstr.before   
            LET g_doc_key = 'inpdent=' ,sr1.inpdent,'{+}inpdsite=' ,sr1.inpdsite,'{+}inpddocno=' ,sr1.inpddocno,'{+}inpdseq=' ,sr1.inpdseq         
            CALL cl_gr_init_apr(sr1.inpd008)
            #add-point:rep.apr.signstr
            {<point name="rep.apr.signstr"/>}              
            #end add-point:rep.apr.signstr
            PRINTX g_grSign.*
 
 
 
           #add-point:rep.b_group.inpd008.before
           {<point name="rep.b_group.inpd008.before"/>}
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub01.before
           {<point name="rep.sub01.before"/>}
           #end add-point:rep.sub01.before
 
           #add-point:rep.sub01.sql
           {<point name="rep.sub01.sql" mark="Y"/>}
           #end add-point:rep.sub01.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='2' AND ooffent = '", 
                sr1.inpdent CLIPPED ,"'", " AND  ooff002 = '", sr1.inpd008 CLIPPED ,"'"
 
           #add-point:rep.sub01.afsql
           {<point name="rep.sub01.afsql"/>}
           #end add-point:rep.sub01.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep01_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE ainr831_g01_repcur01_cnt_pre FROM l_sub_sql
           EXECUTE ainr831_g01_repcur01_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep01_show ="Y"
           END IF
           PRINTX l_subrep01_show
           START REPORT ainr831_g01_subrep01
           DECLARE ainr831_g01_repcur01 CURSOR FROM g_sql
           FOREACH ainr831_g01_repcur01 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "ainr831_g01_repcur01:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub01.foreach
              {<point name="rep.sub01.foreach"/>}
              #end add-point:rep.sub01.foreach
              OUTPUT TO REPORT ainr831_g01_subrep01(sr2.*)
           END FOREACH
           FINISH REPORT ainr831_g01_subrep01
           #add-point:rep.sub01.after
           {<point name="rep.sub01.after"/>}
           #end add-point:rep.sub01.after
 
 
 
           #add-point:rep.b_group.inpd008.after
           {<point name="rep.b_group.inpd008.after"/>}
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:1)
        BEFORE GROUP OF sr1.l_order
 
           #add-point:rep.b_group.l_order.before
           {<point name="rep.b_group.l_order.before"/>}
           #end add-point:
 
 
           #add-point:rep.b_group.l_order.after
           {<point name="rep.b_group.l_order.after"/>}
           #end add-point:
 
 
 
 
       ON EVERY ROW
          #add-point:rep.everyrow.before
          {<point name="rep.everyrow.before"/>}
          #end add-point:rep.everyrow.before
 
          #單身前備註
             #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub02.before
           {<point name="rep.sub02.before"/>}
           #end add-point:rep.sub02.before
 
           #add-point:rep.sub02.sql
           {<point name="rep.sub02.sql" mark="Y"/>}
           #end add-point:rep.sub02.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='2' AND ooffent = '", 
                sr1.inpdent CLIPPED ,"'", " AND  ooff002 = '", sr1.inpd008 CLIPPED ,"'", " AND  ooff003 = '", 
                sr1.l_order CLIPPED ,"'"
 
           #add-point:rep.sub02.afsql
           {<point name="rep.sub02.afsql"/>}
           #end add-point:rep.sub02.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep02_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE ainr831_g01_repcur02_cnt_pre FROM l_sub_sql
           EXECUTE ainr831_g01_repcur02_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep02_show ="Y"
           END IF
           PRINTX l_subrep02_show
           START REPORT ainr831_g01_subrep02
           DECLARE ainr831_g01_repcur02 CURSOR FROM g_sql
           FOREACH ainr831_g01_repcur02 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "ainr831_g01_repcur02:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub02.foreach
              {<point name="rep.sub02.foreach"/>}
              #end add-point:rep.sub02.foreach
              OUTPUT TO REPORT ainr831_g01_subrep02(sr2.*)
           END FOREACH
           FINISH REPORT ainr831_g01_subrep02
           #add-point:rep.sub02.after
           {<point name="rep.sub02.after"/>}
           #end add-point:rep.sub02.after
 
 
 
          #add-point:rep.everyrow.beforerow
          {<point name="rep.everyrow.beforerow"/>}
          #end add-point:rep.everyrow.beforerow
            
          PRINTX sr1.*
 
          #add-point:rep.everyrow.afterrow
          {<point name="rep.everyrow.afterrow"/>}
          #end add-point:rep.everyrow.afterrow
 
          #單身後備註
             #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub03.before
           {<point name="rep.sub03.before"/>}
           #end add-point:rep.sub03.before
 
           #add-point:rep.sub03.sql
           {<point name="rep.sub03.sql" mark="Y"/>}
           #end add-point:rep.sub03.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='1' AND ooffent = '", 
                sr1.inpdent CLIPPED ,"'", " AND  ooff002 = '", sr1.inpd008 CLIPPED ,"'", " AND  ooff003 = '", 
                sr1.l_order CLIPPED ,"'"
 
           #add-point:rep.sub03.afsql
           {<point name="rep.sub03.afsql"/>}
           #end add-point:rep.sub03.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep03_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE ainr831_g01_repcur03_cnt_pre FROM l_sub_sql
           EXECUTE ainr831_g01_repcur03_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep03_show ="Y"
           END IF
           PRINTX l_subrep03_show
           START REPORT ainr831_g01_subrep03
           DECLARE ainr831_g01_repcur03 CURSOR FROM g_sql
           FOREACH ainr831_g01_repcur03 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "ainr831_g01_repcur03:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub03.foreach
              {<point name="rep.sub03.foreach"/>}
              #end add-point:rep.sub03.foreach
              OUTPUT TO REPORT ainr831_g01_subrep03(sr2.*)
           END FOREACH
           FINISH REPORT ainr831_g01_subrep03
           #add-point:rep.sub03.after
           {<point name="rep.sub03.after"/>}
           #end add-point:rep.sub03.after
 
 
 
          #add-point:rep.everyrow.after
          {<point name="rep.everyrow.after"/>}
          #end add-point:rep.everyrow.after        
 
          #讀取afterGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:1)
        AFTER GROUP OF sr1.inpd008
 
           #add-point:rep.a_group.inpd008.before
           {<point name="rep.a_group.inpd008.before"/>}
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub04.before
           {<point name="rep.sub04.before"/>}
           #end add-point:rep.sub04.before
 
           #add-point:rep.sub04.sql
           {<point name="rep.sub04.sql" mark="Y"/>}
           #end add-point:rep.sub04.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='1' AND ooffent = '", 
                sr1.inpdent CLIPPED ,"'", " AND  ooff002 = '", sr1.inpd008 CLIPPED ,"'"
 
           #add-point:rep.sub04.afsql
           {<point name="rep.sub04.afsql"/>}
           #end add-point:rep.sub04.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep04_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE ainr831_g01_repcur04_cnt_pre FROM l_sub_sql
           EXECUTE ainr831_g01_repcur04_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep04_show ="Y"
           END IF
           PRINTX l_subrep04_show
           START REPORT ainr831_g01_subrep04
           DECLARE ainr831_g01_repcur04 CURSOR FROM g_sql
           FOREACH ainr831_g01_repcur04 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "ainr831_g01_repcur04:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub04.foreach
              {<point name="rep.sub04.foreach"/>}
              #end add-point:rep.sub04.foreach
              OUTPUT TO REPORT ainr831_g01_subrep04(sr2.*)
           END FOREACH
           FINISH REPORT ainr831_g01_subrep04
           #add-point:rep.sub04.after
           {<point name="rep.sub04.after"/>}
           #end add-point:rep.sub04.after
 
 
 
           #add-point:rep.a_group.inpd008.after
           {<point name="rep.a_group.inpd008.after"/>}
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:1)
        AFTER GROUP OF sr1.l_order
 
           #add-point:rep.a_group.l_order.before
           {<point name="rep.a_group.l_order.before"/>}
           #end add-point:
 
 
           #add-point:rep.a_group.l_order.after
           {<point name="rep.a_group.l_order.after"/>}
           #end add-point:
 
 
 
       ON LAST ROW
            #add-point:rep.lastrow.before  
            {<point name="rep.lastrow.before"/>}        
            #edn add point :rep.lastrow.before
 
            #add-point:rep.lastrow.after
            {<point name="rep.lastrow.after"/>}
            #edn add point :rep.lastrow.after
END REPORT
]]>
  </section>
  <section id="ainr831_g01.rep_data" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION ainr831_g01_rep_data()
   DEFINE HANDLER         om.SaxDocumentHandler
   DEFINE l_i             INTEGER
 
    #判斷是否有報表資料，若回彈出訊息視窗
    IF sr.getLength() = 0 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = "adz-00285"
       LET g_errparam.extend = NULL
       LET g_errparam.popup  = FALSE
       LET g_errparam.replace[1] = ''
       CALL cl_err()  
       RETURN 
    END IF
    WHILE TRUE               
       LET handler = cl_gr_handler()
       IF handler IS NOT NULL THEN
          START REPORT ainr831_g01_rep TO XML HANDLER handler
          FOR l_i = 1 TO sr.getLength()
             OUTPUT TO REPORT ainr831_g01_rep(sr[l_i].*)
          END FOR
          FINISH REPORT ainr831_g01_rep
       END IF
       IF INT_FLAG = TRUE THEN
          LET INT_FLAG = FALSE
          EXIT WHILE
       END IF
    END WHILE
    CALL cl_gr_close_report()
END FUNCTION
]]>
  </section>
  <section id="ainr831_g01.sel_prep" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION ainr831_g01_sel_prep()
   #add-point:sel_prep段define
   {<point name="sel_prep.define"/>}
   #end add-point
 
   #add-point:sel_prep before
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
   
   #add-point:sel_prep g_select
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT inpd008,inpddocno,inpdseq,inpd001,NULL,NULL,inpd002,NULL,NULL,inpd005,NULL, 
       inpd006,NULL,inpd007,inpd003,NULL,inpd009,inpd010,inpd011,inpd012,inpd013,inpdent,inpa024,inpa025, 
       inpa026,inpa027,inpa028,inpa029,inpa030,inpa031,NULL,inpdsite"
 
   #add-point:sel_prep g_from
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM inpd_t,inpa_t"
 
   #add-point:sel_prep g_where
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED 
 
   #add-point:sel_prep g_order
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
    LET g_order = " ORDER BY inpd008"
 
   #add-point:sel_prep.sql.before
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("inpd_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED ," ",g_order CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段 
 
   #add-point:sel_prep.sql.after
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE ainr831_g01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()   
      LET g_rep_success = 'N'    
   END IF
   DECLARE ainr831_g01_curs CURSOR FOR ainr831_g01_prepare
 
END FUNCTION
]]>
  </section>
  <section id="ainr831_g01.subrep_str" ver="1" status="" src="s" readonly="">
    <![CDATA[#讀取子報表樣板
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT ainr831_g01_subrep01(sr2)
DEFINE  sr2  sr2_r
#add-point:sub01.define
{<point name="sub01.define"/>}
#end add-point:sub01.define
 
    #add-point:sub01.order.before
    {<point name="sub01.order.before"/>}
    #end add-point:sub01.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub01.everyrow.before
            {<point name="sub01.everyrow.before"/>}              
            #end add-point:sub01.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub01.everyrow.after
            {<point name="sub01.everyrow.after"/>}
            #end add-point:sub01.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT ainr831_g01_subrep02(sr2)
DEFINE  sr2  sr2_r
#add-point:sub02.define
{<point name="sub02.define"/>}
#end add-point:sub02.define
 
    #add-point:sub02.order.before
    {<point name="sub02.order.before"/>}
    #end add-point:sub02.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub02.everyrow.before
            {<point name="sub02.everyrow.before"/>}              
            #end add-point:sub02.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub02.everyrow.after
            {<point name="sub02.everyrow.after"/>}
            #end add-point:sub02.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT ainr831_g01_subrep03(sr2)
DEFINE  sr2  sr2_r
#add-point:sub03.define
{<point name="sub03.define"/>}
#end add-point:sub03.define
 
    #add-point:sub03.order.before
    {<point name="sub03.order.before"/>}
    #end add-point:sub03.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub03.everyrow.before
            {<point name="sub03.everyrow.before"/>}              
            #end add-point:sub03.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub03.everyrow.after
            {<point name="sub03.everyrow.after"/>}
            #end add-point:sub03.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT ainr831_g01_subrep04(sr2)
DEFINE  sr2  sr2_r
#add-point:sub04.define
{<point name="sub04.define"/>}
#end add-point:sub04.define
 
    #add-point:sub04.order.before
    {<point name="sub04.order.before"/>}
    #end add-point:sub04.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub04.everyrow.before
            {<point name="sub04.everyrow.before"/>}              
            #end add-point:sub04.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub04.everyrow.after
            {<point name="sub04.everyrow.after"/>}
            #end add-point:sub04.everyrow.after
 
 
END REPORT
 
 
 
]]>
  </section>
</add_points>
