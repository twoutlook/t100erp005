<add_points prog="aint600" std_prog="aint600" erpver="1.0" module="AIN" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="function.aint600_indh002_ref" cite_std="N" status="" ver="2" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 商品帶出條碼、品名、規格、庫存單位、換算率
# Memo...........:
# Usage..........: CALL aint600_indh002_ref()
#                  
# Input parameter: 
# Return code....: 
# Date & Author..: 20140422 By huangrh
# Modify.........:
################################################################################
PUBLIC FUNCTION aint600_indh002_ref()
   LET g_indh_d[l_ac].indh005=''
   LET g_indh_d[l_ac].indh005_desc=''
   LET g_indh_d[l_ac].indh002_desc=''
   LET g_indh_d[l_ac].indh002_desc_desc=''
   LET g_indh_d[l_ac].indh006=1

   SELECT imaa104 INTO g_indh_d[l_ac].indh005
     FROM imaa_t
    WHERE imaaent=g_enterprise
      AND imaa001=g_indh_d[l_ac].indh002 
   SELECT oocal003 INTO g_indh_d[l_ac].indh005_desc
     FROM oocal_t
    WHERE oocalent=g_enterprise
      AND oocal001=g_indh_d[l_ac].indh005
      AND oocal002=g_dlang
      
   DISPLAY g_indh_d[l_ac].indh005 TO indh005
   DISPLAY g_indh_d[l_ac].indh005_desc TO indh005_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_indh_d[l_ac].indh002
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_indh_d[l_ac].indh002_desc = '', g_rtn_fields[1] , ''
   LET g_indh_d[l_ac].indh002_desc_desc = '', g_rtn_fields[2] , ''
   DISPLAY g_indh_d[l_ac].indh002_desc TO indh002_desc 
   DISPLAY g_indh_d[l_ac].indh002_desc_desc TO indh002_desc_desc


END FUNCTION]]>
</point>
  <point name="function.aint600_ask_approvedinput" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 核准錄入核准數量
# Memo...........:
# Usage..........: CALL aint600_ask_approvedinput()
#                  
# Input parameter: 
# Return code....: 
# Date & Author..: 20140423 By huangrh
# Modify.........:
################################################################################
PUBLIC FUNCTION aint600_ask_approvedinput()
  CALL aint600_input("k")


END FUNCTION]]>
</point>
  <point name="function.aint600_approved_entry" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 核准錄入關閉單身欄位
# Memo...........:
# Usage..........: CALL aint600_approved_entry(p_cmd)
#     
# Input parameter: p_cmd      k:核准標識
# Return code....: 
# Date & Author..: 20140423 By huangrh
# Modify.........:
################################################################################
PUBLIC FUNCTION aint600_approved_entry(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1  

   IF aint600_indgsite() THEN
      CALL cl_set_comp_entry("indh001,indh002,indh003,indh007,indh008,indh010",FALSE) 
      CALL cl_set_comp_entry("indh008",TRUE)
   ELSE
      CALL cl_set_comp_entry("indh001,indh002,indh003,indh007,indh010",TRUE) 
      CALL cl_set_comp_entry("indh008",FALSE)
   END IF 

END FUNCTION]]>
</point>
  <point name="function.aint600_indgsite" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 登陸組織是否為g_indg_m.indgsite的上級
# Memo...........:
# Usage..........: CALL aint600_indgsite()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success   TRUE/FALSE
# Date & Author..: 20140515 By huangrh
# Modify.........:
################################################################################
PUBLIC FUNCTION aint600_indgsite()
DEFINE r_success    LIKE type_t.num5
DEFINE l_count      LIKE type_t.num5
DEFINE l_sql        STRING


      LET r_success=FALSE
      IF cl_null(g_indg_m.indgsite) THEN
         LET r_success=FALSE
         RETURN r_success
      END IF


#上層組織核准,1、g_indg_m.indgsite是否為g_site的下級
      LET l_count=0
      LET l_sql="SELECT COUNT(*) FROM ooed_t",
                " WHERE ooed004 = '",g_indg_m.indgsite,"'",
                "   AND ooed001='2' AND ((ooed006 <= '",g_today,"'  AND ooed007 >= '",g_today,"' ) OR ooed007 IS NULL)",
                "   AND ooed004  IN (SELECT DISTINCT ooed004 FROM ooed_t",
                "                                     WHERE ooed001='2'  AND ((ooed006 <= '",g_today,"'  AND ooed007 >= '",g_today,"') OR ooed007 IS NULL)",
                "                                           START WITH ooed005='",g_site,"' AND ooed001 = '2' ",
                "                                                          AND ((ooed006 <= '",g_today,"'  AND ooed007 >= '",g_today,"' ) OR ooed007 IS NULL)",
                "                                           CONNECT BY  NOCYCLE PRIOR ooed004=ooed005 AND ooed001='2' ",
                "                     ) "
      
      PREPARE aint600_select1_ooed004 FROM l_sql
      EXECUTE aint600_select1_ooed004 INTO l_count

      IF NOT cl_null(l_count) AND l_count>0 THEN
         LET r_success=TRUE
         RETURN r_success
      END IF 

#上層組織核准,2、g_indg_m.indgsite等於g_site，並且g_indg_m.indgsite沒有上級或上級等於g_indg_m.indgsite
      IF g_indg_m.indgsite=g_site THEN
         LET l_count=0
         SELECT count(*) INTO l_count
           FROM ooed_t
          WHERE ooedent=g_enterprise
            AND ooed001='2'
            AND ooed002=ooed004
            AND ooed004=ooed005
            AND ooed004=g_indg_m.indgsite
            AND (ooed006<=g_today AND ooed007>=g_today OR ooed007 IS NULL)

         IF NOT cl_null(l_count) AND l_count>0 THEN
            LET r_success=TRUE
            RETURN r_success
         END IF 
      END IF      

      RETURN r_success
      
END FUNCTION]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[    IF cl_null(g_wc) THEN
       LET g_wc=" 1=1"
    END IF   
   LET g_wc= g_wc CLIPPED," AND indgsite IN (SELECT ooed004 FROM ooed_t ",
                           "                    START WITH ooed005='",g_site,"' AND ooed001='2' ",             
                           "                    CONNECT BY  nocycle PRIOR ooed004=ooed005 AND ooed001='2' ",
                           "              UNION ",
                           "              SELECT ooed004 FROM ooed_t WHERE ooed004='",g_site,"' )"
   LET l_wc  = g_wc.trim()                         ]]>
</point>
  <point name="construct.c.indg001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indg001  #顯示到畫面上
            NEXT FIELD indg001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.indg002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indg002  #顯示到畫面上

            NEXT FIELD indg002                     #返回原欄位
]]>
</point>
  <point name="construct.c.indgcnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indgcnfid  #顯示到畫面上
            NEXT FIELD indgcnfid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.indgcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indgcrtdp  #顯示到畫面上
            NEXT FIELD indgcrtdp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.indgcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indgcrtid  #顯示到畫面上
            NEXT FIELD indgcrtid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.indgdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1=g_site
            LET g_qryparam.arg2='2'            
            CALL q_indgdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indgdocno  #顯示到畫面上
            NEXT FIELD indgdocno                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.indgmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indgmodid  #顯示到畫面上
            NEXT FIELD indgmodid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.indgowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indgowndp  #顯示到畫面上
            NEXT FIELD indgowndp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.indgownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indgownid  #顯示到畫面上
            NEXT FIELD indgownid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.indgpstid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indgpstid  #顯示到畫面上
            NEXT FIELD indgpstid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.indgsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1=g_site
            LET g_qryparam.arg2='2'
            CALL q_ooed004_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indgsite  #顯示到畫面上
            NEXT FIELD indgsite                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.indh001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = "2" 
            CALL q_inaa001_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indh001  #顯示到畫面上
            NEXT FIELD indh001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.indh002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtdx001_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indh002  #顯示到畫面上
            NEXT FIELD indh002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.indh003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtdx001_7()                           #呼叫開窗
            DISPLAY g_qryparam.return2 TO indh003  #顯示到畫面上
            NEXT FIELD indh003                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.indh005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indh005  #顯示到畫面上
            NEXT FIELD indh005                     #返回原欄位
    

]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[    IF cl_null(g_wc) THEN
       LET g_wc=" 1=1"
    END IF
    LET g_wc= g_wc CLIPPED," AND indgsite IN (SELECT ooed004 FROM ooed_t ",
                           "                    START WITH ooed005='",g_site,"'

AND ooed001='2' ",             
                           "                    CONNECT BY  nocycle PRIOR ooed004=ooed005 AND ooed001='2' ",
                           "              UNION ",
                           "              SELECT ooed004 FROM ooed_t WHERE ooed004='",g_site,"' )"]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_act_visible("modify,modify_detail,delete",FALSE)
   IF g_indg_m.indgstus = 'N' AND g_indg_m.indgsite = g_site THEN
      CALL cl_set_act_visible("modify,modify_detail,delete",TRUE)
   END IF
 
# 登陸營運中心是否g_indg_m.indgsite上級，或g_indg_m.indgsite等於登陸營運中心並且為最上級。
   IF aint600_indgsite() AND g_indg_m.indgstus = 'Y' THEN 
      CALL cl_set_act_visible("modify,modify_detail",TRUE)
   END IF
]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#bpm   CALL cl_set_combo_scc_part('indgstus','13','N,X,Y,A')
   CALL cl_set_combo_scc('indg003','6706')
   CALL cl_set_combo_scc('b_indg003','6706')]]>
</point>
  <point name="input.a.indg001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_indg_m.indg001) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND g_indg_m.indg001 != g_indg_m_t.indg001) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_indg_m.indg001
                  
                  IF NOT cl_chk_exist("v_ooag001") THEN
                     LET g_indg_m.indg001 = g_indg_m_t.indg001                  
                     NEXT FIELD CURRENT
                  END IF
                  
               END IF 
            END IF    

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indg_m.indg001
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_indg_m.indg001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indg_m.indg001_desc

]]>
</point>
  <point name="input.a.indg002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_indg_m.indg002) AND g_indg_m.indg002 <> 'ALL' THEN

               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               SELECT ooaa002 INTO l_ooaa002 FROM ooaa_t
                WHERE ooaaent = g_enterprise AND ooaa001 = 'E-CIR-0001'
               LET g_chkparam.arg1 = g_indg_m.indg002
               LET g_chkparam.arg2 = l_ooaa002

               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_rtax001_3") THEN
                  LET g_indg_m.indg002 = g_indg_m_t.indg002
                  NEXT FIELD CURRENT
               END IF
               
               IF p_cmd = 'u' THEN
                  LET l_n = 0
                  SELECT COUNT(*) INTO l_n FROM indh_t
                   WHERE indhent = g_enterprise
                     AND indhdocno = g_indg_m.indgdocno
                  IF l_n > 0 THEN
                     LET l_sql="SELECT COUNT(*)  FROM imaa_t,indh_t",
                               " WHERE imaaent = indhent",
                               "   AND imaa001 = indh002",
                               "   AND imaaent = '",g_enterprise,"'",
                               "   AND indhdocno = '",g_indg_m.indgdocno,"'",
                               "   AND imaa009 NOT IN (SELECT DISTINCT rtax001 FROM rtax_t",
                               "                         WHERE rtax005 = 0 START WITH rtax003 ='",g_indg_m.indg002,"'",
                               "                         CONNECT BY nocycle PRIOR rtax001 = rtax003",
                               "                       UNION SELECT rtax001 FROM rtax_t WHERE rtax001 = '",g_indg_m.indg002,"'",
                               "                       )"
                     PREPARE aint600_select_rtax001 FROM l_sql
                     EXECUTE aint600_select_rtax001 INTO l_n                               
                     IF l_n > 0 THEN
                        CALL cl_err('','apr-00062',1)
                        LET g_indg_m.indg002 = g_indg_m_t.indg002
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF

            END IF
 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indg_m.indg002
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indg_m.indg002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indg_m.indg002_desc

]]>
</point>
  <point name="input.a.indgdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_indg_m.indgdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_indg_m.indgdocno != g_indgdocno_t )) THEN 
                  IF NOT s_aooi200_chk_slip(g_site,'',g_indg_m.indgdocno,g_prog) THEN
                     LET g_indg_m.indgdocno =  g_indg_m_t.indgdocno                    
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.indgsite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indg_m.indgsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indg_m.indgsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indg_m.indgsite_desc

]]>
</point>
  <point name="input.a.page1.indh001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_indh_d[l_ac].indh001) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_indh_d[l_ac].indh001 != g_indh_d_t.indh001)) THEN 
                  INITIALIZE g_chkparam.* TO NULL

                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_indg_m.indgsite
                  LET g_chkparam.arg2 = g_indh_d[l_ac].indh001

                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_inaa001") THEN
                     LET g_indh_d[l_ac].indh001 = g_indh_d_t.indh001
                     NEXT FIELD CURRENT
                  END IF  
                  #檢查單身倉庫和商品重複
                  IF NOT cl_null(g_indh_d[l_ac].indh002) THEN
                     LET l_count=0
                     SELECT count(*) INTO l_count
                       FROM indh_t
                      WHERE indhent=g_enterprise
                        AND indhdocno=g_indg_m.indgdocno
                        AND indh001=g_indh_d[l_ac].indh001
                        AND indh002=g_indh_d[l_ac].indh002
                     IF NOT cl_null(l_count) AND l_count>0 THEN
                        CALL cl_err("","ain-00232",1)
                        LET g_indh_d[l_ac].indh001 = g_indh_d_t.indh001
                        NEXT FIELD CURRENT
                     END IF 
                  END IF                     
                   
               END IF
            END IF

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indg_m.indgsite
            LET g_ref_fields[2] = g_indh_d[l_ac].indh001
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_indh_d[l_ac].indh001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indh_d[l_ac].indh001_desc

]]>
</point>
  <point name="input.a.page1.indh002" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_indh_d[l_ac].indh002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_indh_d[l_ac].indh002 != g_indh_d_t.indh002)) THEN 
                  INITIALIZE g_chkparam.* TO NULL

                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_indh_d[l_ac].indh002
                  LET g_chkparam.arg2 = g_indg_m.indgsite
                  LET g_chkparam.arg3 = g_indg_m.indg002

                  #呼叫檢查存在並帶值的library
                  IF g_indg_m.indg002<>'ALL' THEN
                     IF NOT cl_chk_exist("v_rtdx001_8") THEN
                        LET g_indh_d[l_ac].indh002 = g_indh_d_t.indh002
                        NEXT FIELD CURRENT
                     END IF  
                  ELSE
                     IF NOT cl_chk_exist("v_rtdx001_6") THEN
                        LET g_indh_d[l_ac].indh002 = g_indh_d_t.indh002
                        NEXT FIELD CURRENT
                     END IF                  
                  END IF   
                  #檢查單身倉庫和商品重複
                  IF NOT cl_null(g_indh_d[l_ac].indh001) THEN
                     LET l_count=0
                     SELECT count(*) INTO l_count
                       FROM indh_t
                      WHERE indhent=g_enterprise
                        AND indhdocno=g_indg_m.indgdocno
                        AND indh001=g_indh_d[l_ac].indh001
                        AND indh002=g_indh_d[l_ac].indh002
                     IF NOT cl_null(l_count) AND l_count>0 THEN
                        CALL cl_err("","ain-00232",1)
                        LET g_indh_d[l_ac].indh002 = g_indh_d_t.indh002
                        NEXT FIELD CURRENT
                     END IF 
                  END IF                    
                  SELECT imay003 INTO g_indh_d[l_ac].indh003
                    FROM imay_t
                   WHERE imayent=g_enterprise
                     AND imay001=g_indh_d[l_ac].indh002
                     AND imay006='Y'
                     AND imaystus='Y'                  
                  CALL aint600_indh002_ref()
               END IF
            END IF
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indh_d[l_ac].indh002
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indh_d[l_ac].indh002_desc = '', g_rtn_fields[1] , ''
            LET g_indh_d[l_ac].indh002_desc_desc = '', g_rtn_fields[2] , ''
            DISPLAY g_indh_d[l_ac].indh002_desc TO indh002_desc 
            DISPLAY g_indh_d[l_ac].indh002_desc_desc TO indh002_desc_desc

]]>
</point>
  <point name="input.a.page1.indh003" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_indh_d[l_ac].indh003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_indh_d[l_ac].indh003 != g_indh_d_t.indh003)) THEN 
               
               
                  INITIALIZE g_chkparam.* TO NULL   
                  LET g_chkparam.arg1 = g_indh_d[l_ac].indh003

                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_imay003") THEN
                     LET g_indh_d[l_ac].indh003 = g_indh_d_t.indh003
                     NEXT FIELD CURRENT
                  END IF 
                  
                  SELECT imay001 INTO g_indh_d[l_ac].indh002
                    FROM imay_t
                   WHERE imayent=g_enterprise
                     AND imay003=g_indh_d[l_ac].indh003
                     AND imay006='Y'
                     AND imaystus='Y'
                     
                  INITIALIZE g_chkparam.* TO NULL

                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_indh_d[l_ac].indh002
                  LET g_chkparam.arg2 = g_indg_m.indgsite
                  LET g_chkparam.arg3 = g_indg_m.indg002

                  #呼叫檢查存在並帶值的library
                  IF g_indg_m.indg002<>'ALL' THEN
                     IF NOT cl_chk_exist("v_rtdx001_8") THEN
                        LET g_indh_d[l_ac].indh003 = g_indh_d_t.indh003
                        LET g_indh_d[l_ac].indh002 = g_indh_d_t.indh002
                        NEXT FIELD CURRENT
                     END IF  
                  ELSE
                     IF NOT cl_chk_exist("v_rtdx001_6") THEN
                        LET g_indh_d[l_ac].indh003 = g_indh_d_t.indh003
                        LET g_indh_d[l_ac].indh002 = g_indh_d_t.indh002
                        NEXT FIELD CURRENT
                     END IF                  
                  END IF                     
                  CALL aint600_indh002_ref()
               END IF
            END IF
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indh_d[l_ac].indh002
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indh_d[l_ac].indh002_desc = '', g_rtn_fields[1] , ''
            LET g_indh_d[l_ac].indh002_desc_desc = '', g_rtn_fields[2] , ''
            DISPLAY g_indh_d[l_ac].indh002_desc TO indh002_desc 
            DISPLAY g_indh_d[l_ac].indh002_desc_desc TO indh002_desc_desc]]>
</point>
  <point name="input.a.page1.indh005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indh_d[l_ac].indh005
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indh_d[l_ac].indh005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indh_d[l_ac].indh005_desc

]]>
</point>
  <point name="input.a.page1.indh007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_indh_d[l_ac].indh007) THEN 
               LET g_indh_d[l_ac].indh008=g_indh_d[l_ac].indh007
            END IF 

]]>
</point>
  <point name="input.a.page1.indh008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_indh_d[l_ac].indh008) THEN 
               IF g_indh_d[l_ac].indh008>g_indh_d[l_ac].indh007 THEN
                  CALL cl_err("","ain-00183",1)
                  NEXT FIELD indh008
               END IF
            END IF 

]]>
</point>
  <point name="input.a.page1.indhseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_indg_m.indgdocno IS NOT NULL AND g_indh_d[g_detail_idx].indhseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_indg_m.indgdocno != g_indgdocno_t OR g_indh_d[g_detail_idx].indhseq != g_indh_d_t.indhseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM indh_t WHERE "||"indhent = '" ||g_enterprise|| "' AND "||"indhdocno = '"||g_indg_m.indgdocno ||"' AND "|| "indhseq = '"||g_indh_d[g_detail_idx].indhseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF p_cmd='k' THEN
      LET l_allow_insert=FALSE
      LET l_allow_delete=FALSE
   END IF]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DISPLAY BY NAME g_indg_m.indgsite,g_indg_m.indgsite_desc,g_indg_m.indgdocno,g_indg_m.indgdocdt,g_indg_m.indg001, 
       g_indg_m.indg001_desc,g_indg_m.indg002,g_indg_m.indg003,g_indg_m.indg004,g_indg_m.indgunit,g_indg_m.indgstus, 
       g_indg_m.indgownid,g_indg_m.indgownid_desc,g_indg_m.indgowndp,g_indg_m.indgowndp_desc,g_indg_m.indgcrtid, 
       g_indg_m.indgcrtid_desc,g_indg_m.indgcrtdp,g_indg_m.indgcrtdp_desc,g_indg_m.indgcrtdt,g_indg_m.indgmodid, 
       g_indg_m.indgmodid_desc,g_indg_m.indgmoddt,g_indg_m.indgcnfid,g_indg_m.indgcnfid_desc,g_indg_m.indgcnfdt, 
       g_indg_m.indgpstid,g_indg_m.indgpstid_desc,g_indg_m.indgpstdt]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            SELECT MAX(indhseq) INTO g_indh_d[l_ac].indhseq
              FROM indh_t
             WHERE indhent= g_enterprise
               AND indhdocno= g_indg_m.indgdocno
            IF cl_null(g_indh_d[l_ac].indhseq) THEN
               LET g_indh_d[l_ac].indhseq=1
            ELSE
               LET  g_indh_d[l_ac].indhseq=g_indh_d[l_ac].indhseq+1
            END IF 
            LET g_indh_d[l_ac].indhsite=g_indg_m.indgsite
            DISPLAY g_indh_d[l_ac].indhseq TO indhseq            ]]>
</point>
  <point name="input.c.indg001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indg_m.indg001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_indg_m.indg001 = g_qryparam.return1              
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indg_m.indg001
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_indg_m.indg001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indg_m.indg001_desc

            DISPLAY g_indg_m.indg001 TO indg001              #

            NEXT FIELD indg001                          #返回原欄位

]]>
</point>
  <point name="input.c.indg002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indg_m.indg002             #給予default值
            LET g_qryparam.default2 = g_indg_m.indg002_desc        #給予default值

            #給予arg
            SELECT ooaa002 INTO l_ooaa002 FROM ooaa_t
             WHERE ooaaent = g_enterprise AND ooaa001 = 'E-CIR-0001'
            LET g_qryparam.arg1 = l_ooaa002   #系統設定層級

            CALL q_rtax001_4()                                #呼叫開窗

            LET g_indg_m.indg002 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_indg_m.indg002_desc = g_qryparam.return2         #將開窗取得的值回傳到變數

            DISPLAY g_indg_m.indg002 TO indg002              #顯示到畫面上
            DISPLAY g_indg_m.indg002_desc TO indg002_desc    #顯示到畫面上

            NEXT FIELD indg002                         #返回原欄位
]]>
</point>
  <point name="input.c.indgdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indg_m.indgdocno             #給予default值

            #給予arg
            LET l_ooef004 = ''            
            SELECT ooef004 INTO l_ooef004 FROM ooef_t WHERE ooef001 = g_site AND ooefent  = g_enterprise            
            LET g_qryparam.arg1 = l_ooef004 #
            LET g_qryparam.arg2 = g_prog #
            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_indg_m.indgdocno = g_qryparam.return1              

            DISPLAY g_indg_m.indgdocno TO indgdocno              #

            NEXT FIELD indgdocno                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.indh001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indh_d[l_ac].indh001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inaa001_12()                                #呼叫開窗

            LET g_indh_d[l_ac].indh001 = g_qryparam.return1              
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indg_m.indgsite
            LET g_ref_fields[2] = g_indh_d[l_ac].indh001
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_indh_d[l_ac].indh001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indh_d[l_ac].indh001_desc
            DISPLAY g_indh_d[l_ac].indh001 TO indh001              #

            NEXT FIELD indh001                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.indh002" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
                      
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 =  g_indh_d[l_ac].indh002             #給予default值
            LET g_qryparam.default2 =  g_indh_d[l_ac].indh003

            #給予arg
            LET g_qryparam.arg1 = g_indg_m.indgsite  #門店編號
            LET g_qryparam.arg2 = g_indg_m.indg002   #品類

            IF g_indg_m.indg002 <> 'ALL' THEN
               LET g_qryparam.where=" imaa009 IN (SELECT DISTINCT rtax001 FROM rtax_t WHERE rtax005 = 0 START WITH rtax003 = '",g_indg_m.indg002,"'", 
                                    "                          CONNECT BY nocycle PRIOR rtax001 = rtax003 ",
                                    "                          UNION SELECT rtax001 FROM rtax_t WHERE rtaxent ='",g_enterprise,"' AND rtax001 = '",g_indg_m.indg002,"') "
               CALL q_rtdx001_16()                                #呼叫開窗
            ELSE
               CALL q_rtdx001_9()
            END IF

            LET g_indh_d[l_ac].indh002 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_indh_d[l_ac].indh003 = g_qryparam.return2

            DISPLAY g_indh_d[l_ac].indh002 TO indh002              #顯示到畫面上
            DISPLAY g_indh_d[l_ac].indh003 TO indh003
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indh_d[l_ac].indh002
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indh_d[l_ac].indh002_desc = '', g_rtn_fields[1] , ''
            LET g_indh_d[l_ac].indh002_desc_desc = '', g_rtn_fields[2] , ''
            DISPLAY g_indh_d[l_ac].indh002_desc TO indh002_desc 
            DISPLAY g_indh_d[l_ac].indh002_desc_desc TO indh002_desc_desc
            NEXT FIELD indh002                          #返回原欄位
]]>
</point>
  <point name="input.c.page1.indh003" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 =  g_indh_d[l_ac].indh002             #給予default值
            LET g_qryparam.default2 =  g_indh_d[l_ac].indh003

            #給予arg
            LET g_qryparam.arg1 = g_indg_m.indgsite  #門店編號
            LET g_qryparam.arg2 = g_indg_m.indg002   #品類

            IF g_indg_m.indg002 <> 'ALL' THEN
               LET g_qryparam.where=" imaa009 IN (SELECT DISTINCT rtax001 FROM rtax_t WHERE rtax005 = 0 START WITH rtax003 = '",g_indg_m.indg002,"'", 
                                    "                          CONNECT BY nocycle PRIOR rtax001 = rtax003 ",
                                    "                          UNION SELECT rtax001 FROM rtax_t WHERE rtaxent ='",g_enterprise,"' AND rtax001 = '",g_indg_m.indg002,"') "            
               CALL q_rtdx001_16()                                #呼叫開窗
            ELSE
               CALL q_rtdx001_9()
            END IF

            LET g_indh_d[l_ac].indh002 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_indh_d[l_ac].indh003 = g_qryparam.return2

            DISPLAY g_indh_d[l_ac].indh002 TO indh002              #顯示到畫面上
            DISPLAY g_indh_d[l_ac].indh003 TO indh003
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indh_d[l_ac].indh002
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indh_d[l_ac].indh002_desc = '', g_rtn_fields[1] , ''
            LET g_indh_d[l_ac].indh002_desc_desc = '', g_rtn_fields[2] , ''
            DISPLAY g_indh_d[l_ac].indh002_desc TO indh002_desc 
            DISPLAY g_indh_d[l_ac].indh002_desc_desc TO indh002_desc_desc
            NEXT FIELD indh003                          #返回原欄位

]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aint600_approved_entry(p_cmd)]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_ooaa002             LIKE ooaa_t.ooaa002
   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_sql                 STRING]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL s_aooi200_gen_docno(g_site,g_indg_m.indgdocno,g_indg_m.indgdocdt,g_prog) RETURNING l_success,g_indg_m.indgdocno
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err(g_indg_m.indgdocno,'apm-00003',1)
                  CONTINUE DIALOG                  
               END IF ]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aint600_set_entry(p_cmd)
            CALL aint600_set_no_entry(p_cmd)]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      LET g_indg_m.indgsite  = g_site
      LET g_indg_m.indgdocdt = g_today
      LET g_indg_m.indg001   = g_user
      LET g_indg_m.indg003   = '1'
      LET g_indg_m.indgstus = 'N' 
      LET g_indg_m_t.* = g_indg_m.*

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = g_indg_m.indgsite
       CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET g_indg_m.indgsite_desc = '', g_rtn_fields[1] , ''
       DISPLAY BY NAME g_indg_m.indgsite_desc
       
       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = g_indg_m.indg001
       CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
       LET g_indg_m.indg001_desc = '', g_rtn_fields[1] , ''
       DISPLAY BY NAME g_indg_m.indg001_desc
       
       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = g_indg_m.indgownid
       CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
       LET g_indg_m.indgownid_desc = '', g_rtn_fields[1] , ''
       DISPLAY BY NAME g_indg_m.indgownid_desc

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = g_indg_m.indgowndp
       CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET g_indg_m.indgowndp_desc = '', g_rtn_fields[1] , ''
       DISPLAY BY NAME g_indg_m.indgowndp_desc

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = g_indg_m.indgcrtid
       CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
       LET g_indg_m.indgcrtid_desc = '', g_rtn_fields[1] , ''
       DISPLAY BY NAME g_indg_m.indgcrtid_desc

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = g_indg_m.indgcrtdp
       CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET g_indg_m.indgcrtdp_desc = '', g_rtn_fields[1] , ''
       DISPLAY BY NAME g_indg_m.indgcrtdp_desc

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = g_indg_m.indgmodid
       CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
       LET g_indg_m.indgmodid_desc = '', g_rtn_fields[1] , ''
       DISPLAY BY NAME g_indg_m.indgmodid_desc

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = g_indg_m.indgcnfid
       CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
       LET g_indg_m.indgcnfid_desc = '', g_rtn_fields[1] , ''
       DISPLAY BY NAME g_indg_m.indgcnfid_desc

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = g_indg_m.indgpstid
       CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
       LET g_indg_m.indgpstid_desc = '', g_rtn_fields[1] , ''
       DISPLAY BY NAME g_indg_m.indgpstid_desc
]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
  IF NOT aint600_indgsite() THEN
      CALL cl_set_comp_entry("indgdocno,indgdocdt,indg001,indg002,indg003,indg004",TRUE) 
   END IF ]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF aint600_indgsite() THEN
      CALL cl_set_comp_entry("indgdocno,indgdocdt,indg001,indg002,indg003,indg004",FALSE) 
   END IF
]]>
</point>
  <point name="show.body.reference" cite_std="N" status="u" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indg_m.indgsite
            LET g_ref_fields[2] = g_indh_d[l_ac].indh001
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_indh_d[l_ac].indh001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indh_d[l_ac].indh001_desc
]]>
</point>
  <point name="show.head.reference" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="statechange.approved" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_indg_m.indgstus='X' THEN
      RETURN
   END IF 
   IF g_indg_m.indgsite<>g_site AND (g_indg_m.indgstus='N') THEN
      RETURN
   END IF    ]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL cl_set_act_visible("unconfirmed,unapproved,invalid,confirmed,org_approved",TRUE)
      
# 登陸營運中心是否g_indg_m.indgsite上級，或g_indg_m.indgsite等於登陸營運中心並且為最上級。
      CALL cl_set_act_visible("org_approved,unapproved",FALSE)
      
      IF aint600_indgsite() AND g_indg_m.indgstus='Y' THEN 
         CALL cl_set_act_visible("org_approved",TRUE)
      END IF
      IF aint600_indgsite() AND g_indg_m.indgstus='T' THEN
         CALL cl_set_act_visible("unapproved",TRUE)
      END IF

      IF g_indg_m.indgsite <> g_site THEN
         CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
      END IF
         CASE g_indg_m.indgstus
            WHEN "N"
               #HIDE OPTION "open"
               CALL cl_set_act_visible("unconfirmed,org_approved,unapproved",FALSE)

            WHEN "T"
               #HIDE OPTION "posted"
               CALL cl_set_act_visible("unconfirmed,org_approved,invalid,confirmed",FALSE)

            WHEN "X"
               #HIDE OPTION "invalid"
               CALL cl_set_act_visible("unconfirmed,org_approved,unapproved,invalid,confirmed",FALSE)

            WHEN "Y"
               #HIDE OPTION "confirmed"
               CALL cl_set_act_visible("invalid,confirmed,unapproved",FALSE)

         END CASE
      LET l_success = TRUE
      LET g_indg_m.indgcnfdt=cl_get_current()
      LET g_indg_m.indgpstdt=cl_get_current()
      LET g_indg_m.indgmoddt=cl_get_current()]]>
</point>
  <point name="statechange.confirmed" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         CALL s_aint600_conf_chk(g_indg_m.indgdocno,lc_state) RETURNING l_success,l_errno
         
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               CALL s_transaction_begin()
               CALL s_aint600_conf_upd(g_indg_m.indgdocno,lc_state) RETURNING l_success,l_errno 
               UPDATE indg_t SET indgcnfid =g_user,indgcnfdt=g_indg_m.indgcnfdt
                    WHERE indgent = g_enterprise AND indgdocno = g_indg_m.indgdocno                 
               IF NOT l_success THEN
                  CALL cl_err(g_indg_m.indgdocno,l_errno,1)
                  CALL s_transaction_end('N','0')                 
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN            
            END IF
         ELSE
            CALL cl_err(g_indg_m.indgdocno,l_errno,1)
            RETURN            
         END IF  ]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_success      LIKE type_t.num5
   DEFINE l_errno        LIKE type_t.chr100
   DEFINE l_count        LIKE type_t.num5
   DEFINE l_sql          STRING
   DEFINE l_site_t       LIKE indg_t.indgsite]]>
</point>
  <point name="statechange.invalid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         CALL s_aint600_conf_chk(g_indg_m.indgdocno,lc_state) RETURNING l_success,l_errno
         
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_aint600_conf_upd(g_indg_m.indgdocno,lc_state) RETURNING l_success,l_errno 
               UPDATE indg_t SET indgmodid =g_user,indgmoddt=g_indg_m.indgmoddt
                    WHERE indgent = g_enterprise AND indgdocno = g_indg_m.indgdocno                 
               IF NOT l_success THEN
                  CALL cl_err(g_indg_m.indgdocno,l_errno,1)
                  CALL s_transaction_end('N','0')                 
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN            
            END IF
         ELSE
            CALL cl_err(g_indg_m.indgdocno,l_errno,1)
            RETURN            
         END IF  ]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ON ACTION unapproved
         LET lc_state = "Y"
         LET l_site_t=g_site
         LET g_site=g_indg_m.indgsite
         
         CALL s_aint600_conf_chk(g_indg_m.indgdocno,'1') RETURNING l_success,l_errno
         
         IF l_success THEN
            IF cl_ask_confirm('apj-00022') THEN
               CALL s_transaction_begin()
               CALL s_aint600_conf_upd(g_indg_m.indgdocno,'1') RETURNING l_success,l_errno 
               UPDATE indg_t SET indgpstid ='',indgpstdt=''
                    WHERE indgent = g_enterprise AND indgdocno = g_indg_m.indgdocno                 
               IF NOT l_success THEN
                  LET g_site=l_site_t
                  CALL cl_err(g_indg_m.indgdocno,l_errno,1)
                  CALL s_transaction_end('N','0')                 
                  RETURN
               ELSE
                  LET g_site=l_site_t
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               LET g_site=l_site_t
               RETURN            
            END IF
         ELSE
            LET g_site=l_site_t
            CALL cl_err(g_indg_m.indgdocno,l_errno,1)
            RETURN            
         END IF ]]>
</point>
  <point name="statechange.org_approved" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         LET l_site_t=g_site
         LET g_site=g_indg_m.indgsite
         CALL s_aint600_conf_chk(g_indg_m.indgdocno,lc_state) RETURNING l_success,l_errno
         
         IF l_success THEN
            IF cl_ask_confirm('apj-00025') THEN
               CALL s_transaction_begin()
               CALL s_aint600_conf_upd(g_indg_m.indgdocno,lc_state) RETURNING l_success,l_errno 
               UPDATE indg_t SET indgpstid =g_user,indgpstdt=g_indg_m.indgpstdt
                    WHERE indgent = g_enterprise AND indgdocno = g_indg_m.indgdocno                 
               IF NOT l_success THEN
                  LET g_site=l_site_t
                  CALL cl_err(g_indg_m.indgdocno,l_errno,1)
                  CALL s_transaction_end('N','0')                 
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
                  LET g_site=l_site_t
               END IF
            ELSE
               LET g_site=l_site_t
               RETURN            
            END IF
         ELSE
            LET g_site=l_site_t
            CALL cl_err(g_indg_m.indgdocno,l_errno,1)
            RETURN            
         END IF ]]>
</point>
  <point name="statechange.unconfirmed" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         CALL s_aint600_conf_chk(g_indg_m.indgdocno,lc_state) RETURNING l_success,l_errno
         
         IF l_success THEN
            IF cl_ask_confirm('lib-015') THEN
               CALL s_transaction_begin()
               CALL s_aint600_conf_upd(g_indg_m.indgdocno,lc_state) RETURNING l_success,l_errno 
               UPDATE indg_t SET indgcnfid ='',indgcnfdt='',indgmodid =g_user,indgmoddt=g_indg_m.indgmoddt
                    WHERE indgent = g_enterprise AND indgdocno = g_indg_m.indgdocno                 
               IF NOT l_success THEN
                  CALL cl_err(g_indg_m.indgdocno,l_errno,1)
                  CALL s_transaction_end('N','0')                 
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN            
            END IF
         ELSE
            CALL cl_err(g_indg_m.indgdocno,l_errno,1)
            RETURN            
         END IF ]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.bpm_status" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indgsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.indgsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indgdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.indgdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.indgdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indgdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.indgdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indg001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.indg001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indg002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.indg002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.indg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.indg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.indg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.indg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indgunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.indgunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.indgunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indgstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.indgstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.indgstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indgownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.indgownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indgowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.indgowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indgcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.indgcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indgcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.indgcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indgcrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indgmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.indgmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indgmoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indgcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.indgcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indgcnfdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indgpstid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.indgpstid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.indgpstdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.indgsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.indgsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.indgdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.indgdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.indgdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.indgdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.indgdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.indg001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.indg001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.indg002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.indg002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.indg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.indg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.indg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.indg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.indg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.indg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.indgunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.indgunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.indgunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.indgstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.indgstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.indgstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.indgsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.indgdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.indg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.indg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.indgunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.indgstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.indhseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.indhseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.indh001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.indh001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.indh002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.indh002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.indh003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.indh003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.indh005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.indh005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.indh006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.indh006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.indh006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.indh007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.indh007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.indh008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.indh008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.indh010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.indh010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.indh010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.indh004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.indh004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.indh004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.indh009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.indh009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.indh009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.indhsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.indhsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.indhsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.indhunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.indhunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.indhunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.indhseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.indh005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.indh006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.indh007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.indh008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.indh010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.indh004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.indh009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.indhsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.indhunit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.lang.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.withdraw" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.rejection" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.signing" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="send.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="send.before_send" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="send.after_send" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="draw.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="aint600.b_fill" ver="5" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aint600_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_indh_d.clear()    #g_indh_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aint600_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE indhseq,indh001,indh002,indh003,indh005,indh006,indh007,indh008,indh010, 
          indh004,indh009,indhsite,indhunit ,t1.imaal003 ,t2.imaal004 ,t3.oocal003 FROM indh_t",   
                  " INNER JOIN indg_t ON indgdocno = indhdocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=indh002 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=indh002 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent='"||g_enterprise||"' AND t3.oocal001=indh005 AND t3.oocal002='"||g_dlang||"' ",
 
                  " WHERE indhent=? AND indhdocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY indh_t.indhseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aint600_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aint600_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_indg_m.indgdocno
                                               
      FOREACH b_fill_cs INTO g_indh_d[l_ac].indhseq,g_indh_d[l_ac].indh001,g_indh_d[l_ac].indh002,g_indh_d[l_ac].indh003, 
          g_indh_d[l_ac].indh005,g_indh_d[l_ac].indh006,g_indh_d[l_ac].indh007,g_indh_d[l_ac].indh008, 
          g_indh_d[l_ac].indh010,g_indh_d[l_ac].indh004,g_indh_d[l_ac].indh009,g_indh_d[l_ac].indhsite, 
          g_indh_d[l_ac].indhunit,g_indh_d[l_ac].indh002_desc,g_indh_d[l_ac].indh002_desc_desc,g_indh_d[l_ac].indh005_desc 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_indh_d.deleteElement(g_indh_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aint600_pb
 
   
END FUNCTION
]]>
</section>
  <section id="aint600.b_fill2" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aint600_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aint600_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="aint600.browser_fill" ver="5" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aint600_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_indg_m.* TO NULL
   CALL g_indh_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "indgdocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE indgdocno ",
                      " FROM indg_t ",
                      " ",
                      " LEFT JOIN indh_t ON indhent = indgent AND indgdocno = indhdocno ",
 
 
                      " ", 
                      " ", 
                      " WHERE indgent = '" ||g_enterprise|| "' AND indhent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("indg_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE indgdocno ",
                      " FROM indg_t ", 
                      "  ",
                      "  ",
                      " WHERE indgent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("indg_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照indgsite,'',indgdocno,indgdocdt,indg003,indg001,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT indgstus,indgsite,'',indgdocno,indgdocdt,indg003,indg001,'',t1.ooefl003 , 
       t2.oofa011 ",
               " FROM indg_t ",
               "  ",
               "  LEFT JOIN indh_t ON indhent = indgent AND indgdocno = indhdocno ",
 
 
               "  ",
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=indgsite AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN oofa_t t2 ON t2.oofaent='"||g_enterprise||"' AND t2.oofa002='2' AND t2.oofa003=indg001  ",
 
               " WHERE indgent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("indg_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_indgsite,g_browser[g_cnt].b_indgsite_desc, 
       g_browser[g_cnt].b_indgdocno,g_browser[g_cnt].b_indgdocdt,g_browser[g_cnt].b_indg003,g_browser[g_cnt].b_indg001, 
       g_browser[g_cnt].b_indg001_desc,g_browser[g_cnt].b_indgsite_desc,g_browser[g_cnt].b_indg001_desc 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "T"
            LET g_browser[g_cnt].b_statepic = "stus/16/org_approved.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="aint600.browser_search" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aint600_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY indgdocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aint600_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aint600.construct" ver="7" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aint600_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_indg_m.* TO NULL
   CALL g_indh_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON indgsite,indgdocdt,indgdocno,indg001,indg002,indg003,indg004,indgunit, 
          indgstus,indgownid,indgowndp,indgcrtid,indgcrtdp,indgcrtdt,indgmodid,indgmoddt,indgcnfid,indgcnfdt, 
          indgpstid,indgpstdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<indgcrtdt>>----
         AFTER FIELD indgcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<indgmoddt>>----
         AFTER FIELD indgmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<indgcnfdt>>----
         AFTER FIELD indgcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<indgpstdt>>----
         AFTER FIELD indgpstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.indgsite
         ON ACTION controlp INFIELD indgsite
            #add-point:ON ACTION controlp INFIELD indgsite
            {<point name="construct.c.indgsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgsite
            #add-point:BEFORE FIELD indgsite
            {<point name="construct.b.indgsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indgsite
            
            #add-point:AFTER FIELD indgsite
            {<point name="construct.a.indgsite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgdocdt
            #add-point:BEFORE FIELD indgdocdt
            {<point name="construct.b.indgdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indgdocdt
            
            #add-point:AFTER FIELD indgdocdt
            {<point name="construct.a.indgdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indgdocdt
         ON ACTION controlp INFIELD indgdocdt
            #add-point:ON ACTION controlp INFIELD indgdocdt
            {<point name="construct.c.indgdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.indgdocno
         ON ACTION controlp INFIELD indgdocno
            #add-point:ON ACTION controlp INFIELD indgdocno
            {<point name="construct.c.indgdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgdocno
            #add-point:BEFORE FIELD indgdocno
            {<point name="construct.b.indgdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indgdocno
            
            #add-point:AFTER FIELD indgdocno
            {<point name="construct.a.indgdocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indg001
         ON ACTION controlp INFIELD indg001
            #add-point:ON ACTION controlp INFIELD indg001
            {<point name="construct.c.indg001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indg001
            #add-point:BEFORE FIELD indg001
            {<point name="construct.b.indg001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indg001
            
            #add-point:AFTER FIELD indg001
            {<point name="construct.a.indg001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indg002
         ON ACTION controlp INFIELD indg002
            #add-point:ON ACTION controlp INFIELD indg002
            {<point name="construct.c.indg002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indg002
            #add-point:BEFORE FIELD indg002
            {<point name="construct.b.indg002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indg002
            
            #add-point:AFTER FIELD indg002
            {<point name="construct.a.indg002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD indg003
            #add-point:BEFORE FIELD indg003
            {<point name="construct.b.indg003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indg003
            
            #add-point:AFTER FIELD indg003
            {<point name="construct.a.indg003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indg003
         ON ACTION controlp INFIELD indg003
            #add-point:ON ACTION controlp INFIELD indg003
            {<point name="construct.c.indg003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indg004
            #add-point:BEFORE FIELD indg004
            {<point name="construct.b.indg004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indg004
            
            #add-point:AFTER FIELD indg004
            {<point name="construct.a.indg004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indg004
         ON ACTION controlp INFIELD indg004
            #add-point:ON ACTION controlp INFIELD indg004
            {<point name="construct.c.indg004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgunit
            #add-point:BEFORE FIELD indgunit
            {<point name="construct.b.indgunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indgunit
            
            #add-point:AFTER FIELD indgunit
            {<point name="construct.a.indgunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indgunit
         ON ACTION controlp INFIELD indgunit
            #add-point:ON ACTION controlp INFIELD indgunit
            {<point name="construct.c.indgunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgstus
            #add-point:BEFORE FIELD indgstus
            {<point name="construct.b.indgstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indgstus
            
            #add-point:AFTER FIELD indgstus
            {<point name="construct.a.indgstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indgstus
         ON ACTION controlp INFIELD indgstus
            #add-point:ON ACTION controlp INFIELD indgstus
            {<point name="construct.c.indgstus" />}
            #END add-point
 
         #Ctrlp:construct.c.indgownid
         ON ACTION controlp INFIELD indgownid
            #add-point:ON ACTION controlp INFIELD indgownid
            {<point name="construct.c.indgownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgownid
            #add-point:BEFORE FIELD indgownid
            {<point name="construct.b.indgownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indgownid
            
            #add-point:AFTER FIELD indgownid
            {<point name="construct.a.indgownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indgowndp
         ON ACTION controlp INFIELD indgowndp
            #add-point:ON ACTION controlp INFIELD indgowndp
            {<point name="construct.c.indgowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgowndp
            #add-point:BEFORE FIELD indgowndp
            {<point name="construct.b.indgowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indgowndp
            
            #add-point:AFTER FIELD indgowndp
            {<point name="construct.a.indgowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indgcrtid
         ON ACTION controlp INFIELD indgcrtid
            #add-point:ON ACTION controlp INFIELD indgcrtid
            {<point name="construct.c.indgcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgcrtid
            #add-point:BEFORE FIELD indgcrtid
            {<point name="construct.b.indgcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indgcrtid
            
            #add-point:AFTER FIELD indgcrtid
            {<point name="construct.a.indgcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indgcrtdp
         ON ACTION controlp INFIELD indgcrtdp
            #add-point:ON ACTION controlp INFIELD indgcrtdp
            {<point name="construct.c.indgcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgcrtdp
            #add-point:BEFORE FIELD indgcrtdp
            {<point name="construct.b.indgcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indgcrtdp
            
            #add-point:AFTER FIELD indgcrtdp
            {<point name="construct.a.indgcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgcrtdt
            #add-point:BEFORE FIELD indgcrtdt
            {<point name="construct.b.indgcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.indgmodid
         ON ACTION controlp INFIELD indgmodid
            #add-point:ON ACTION controlp INFIELD indgmodid
            {<point name="construct.c.indgmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgmodid
            #add-point:BEFORE FIELD indgmodid
            {<point name="construct.b.indgmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indgmodid
            
            #add-point:AFTER FIELD indgmodid
            {<point name="construct.a.indgmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgmoddt
            #add-point:BEFORE FIELD indgmoddt
            {<point name="construct.b.indgmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.indgcnfid
         ON ACTION controlp INFIELD indgcnfid
            #add-point:ON ACTION controlp INFIELD indgcnfid
            {<point name="construct.c.indgcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgcnfid
            #add-point:BEFORE FIELD indgcnfid
            {<point name="construct.b.indgcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indgcnfid
            
            #add-point:AFTER FIELD indgcnfid
            {<point name="construct.a.indgcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgcnfdt
            #add-point:BEFORE FIELD indgcnfdt
            {<point name="construct.b.indgcnfdt" />}
            #END add-point
 
         #Ctrlp:construct.c.indgpstid
         ON ACTION controlp INFIELD indgpstid
            #add-point:ON ACTION controlp INFIELD indgpstid
            {<point name="construct.c.indgpstid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgpstid
            #add-point:BEFORE FIELD indgpstid
            {<point name="construct.b.indgpstid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indgpstid
            
            #add-point:AFTER FIELD indgpstid
            {<point name="construct.a.indgpstid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgpstdt
            #add-point:BEFORE FIELD indgpstdt
            {<point name="construct.b.indgpstdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON indhseq,indh001,indh002,indh003,indh005,indh006,indh007,indh008,indh010, 
          indh004,indh009,indhsite,indhunit
           FROM s_detail1[1].indhseq,s_detail1[1].indh001,s_detail1[1].indh002,s_detail1[1].indh003, 
               s_detail1[1].indh005,s_detail1[1].indh006,s_detail1[1].indh007,s_detail1[1].indh008,s_detail1[1].indh010, 
               s_detail1[1].indh004,s_detail1[1].indh009,s_detail1[1].indhsite,s_detail1[1].indhunit 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aint600.default_search" ver="2" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aint600_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " indgdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aint600.delete" ver="8" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION aint600_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_indg_m.indgdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE aint600_master_referesh USING g_indg_m.indgdocno INTO g_indg_m.indgsite,g_indg_m.indgdocdt, 
       g_indg_m.indgdocno,g_indg_m.indg001,g_indg_m.indg002,g_indg_m.indg003,g_indg_m.indg004,g_indg_m.indgunit, 
       g_indg_m.indgstus,g_indg_m.indgownid,g_indg_m.indgowndp,g_indg_m.indgcrtid,g_indg_m.indgcrtdp, 
       g_indg_m.indgcrtdt,g_indg_m.indgmodid,g_indg_m.indgmoddt,g_indg_m.indgcnfid,g_indg_m.indgcnfdt, 
       g_indg_m.indgpstid,g_indg_m.indgpstdt,g_indg_m.indgsite_desc,g_indg_m.indg001_desc,g_indg_m.indg002_desc, 
       g_indg_m.indgownid_desc,g_indg_m.indgowndp_desc,g_indg_m.indgcrtid_desc,g_indg_m.indgcrtdp_desc, 
       g_indg_m.indgmodid_desc,g_indg_m.indgcnfid_desc,g_indg_m.indgpstid_desc
   
   
 
   CALL aint600_show()
   
   CALL s_transaction_begin()
 
   OPEN aint600_cl USING g_enterprise,g_indg_m.indgdocno
   IF STATUS THEN
      CALL cl_err("OPEN aint600_cl:", STATUS, 1)
      CLOSE aint600_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint600_master_referesh USING g_indg_m.indgdocno INTO g_indg_m.indgsite,g_indg_m.indgdocdt, 
       g_indg_m.indgdocno,g_indg_m.indg001,g_indg_m.indg002,g_indg_m.indg003,g_indg_m.indg004,g_indg_m.indgunit, 
       g_indg_m.indgstus,g_indg_m.indgownid,g_indg_m.indgowndp,g_indg_m.indgcrtid,g_indg_m.indgcrtdp, 
       g_indg_m.indgcrtdt,g_indg_m.indgmodid,g_indg_m.indgmoddt,g_indg_m.indgcnfid,g_indg_m.indgcnfdt, 
       g_indg_m.indgpstid,g_indg_m.indgpstdt,g_indg_m.indgsite_desc,g_indg_m.indg001_desc,g_indg_m.indg002_desc, 
       g_indg_m.indgownid_desc,g_indg_m.indgowndp_desc,g_indg_m.indgcrtid_desc,g_indg_m.indgcrtdp_desc, 
       g_indg_m.indgmodid_desc,g_indg_m.indgcnfid_desc,g_indg_m.indgpstid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_indg_m.indgdocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aint600_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_indgdocno_t = g_indg_m.indgdocno
 
 
      DELETE FROM indg_t
       WHERE indgent = g_enterprise AND indgdocno = g_indg_m.indgdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_indg_m.indgdocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM indh_t
       WHERE indhent = g_enterprise AND indhdocno = g_indg_m.indgdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("indh_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_indh_d.clear() 
 
     
      #CALL aint600_ui_browser_refresh()  
      CALL aint600_ui_headershow()  
      CALL aint600_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aint600_browser_fill("")
         CALL aint600_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL aint600_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE aint600_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_indg_m.indgdocno,'D')
    
END FUNCTION
]]>
</section>
  <section id="aint600.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aint600_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM indh_t
       WHERE indhent = g_enterprise AND
         indhdocno = ps_keys_bak[1] AND indhseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aint600.description" ver="78" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000084
#+ 
#+ Filename...: aint600
#+ Description: 報損報溢單維護作業
#+ Creator....: 01251(2014/04/17)
#+ Modifier...: 01251(2014/06/27)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="aint600.detail_reproduce" ver="1" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aint600_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE indh_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aint600_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aint600_detail AS ",
                "SELECT * FROM indh_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aint600_detail SELECT * FROM indh_t 
                                         WHERE indhent = g_enterprise AND indhdocno = g_indgdocno_t
 
   
   #將key修正為調整後   
   UPDATE aint600_detail 
      #更新key欄位
      SET indhdocno = g_indg_m.indgdocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO indh_t SELECT * FROM aint600_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aint600_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_indgdocno_t = g_indg_m.indgdocno
 
   
   DROP TABLE aint600_detail
   
END FUNCTION
]]>
</section>
  <section id="aint600.detail_show" ver="2" status="" src="s">
<![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aint600_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aint600.fetch" ver="4" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aint600_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_indg_m.indgdocno = g_browser[g_current_idx].b_indgdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aint600_master_referesh USING g_indg_m.indgdocno INTO g_indg_m.indgsite,g_indg_m.indgdocdt, 
       g_indg_m.indgdocno,g_indg_m.indg001,g_indg_m.indg002,g_indg_m.indg003,g_indg_m.indg004,g_indg_m.indgunit, 
       g_indg_m.indgstus,g_indg_m.indgownid,g_indg_m.indgowndp,g_indg_m.indgcrtid,g_indg_m.indgcrtdp, 
       g_indg_m.indgcrtdt,g_indg_m.indgmodid,g_indg_m.indgmoddt,g_indg_m.indgcnfid,g_indg_m.indgcnfdt, 
       g_indg_m.indgpstid,g_indg_m.indgpstdt,g_indg_m.indgsite_desc,g_indg_m.indg001_desc,g_indg_m.indg002_desc, 
       g_indg_m.indgownid_desc,g_indg_m.indgowndp_desc,g_indg_m.indgcrtid_desc,g_indg_m.indgcrtdp_desc, 
       g_indg_m.indgmodid_desc,g_indg_m.indgcnfid_desc,g_indg_m.indgpstid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("indg_t",SQLCA.sqlcode,1)
      INITIALIZE g_indg_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aint600_show()
 
   #+ 此段落由子樣板a56產生
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
END FUNCTION
]]>
</section>
  <section id="aint600.fill_chk" ver="3" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aint600_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="aint600.filter" ver="2" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aint600_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON indgsite,indgdocno,indgdocdt,indg003,indg001
                          FROM s_browse[1].b_indgsite,s_browse[1].b_indgdocno,s_browse[1].b_indgdocdt, 
                              s_browse[1].b_indg003,s_browse[1].b_indg001
 
         BEFORE CONSTRUCT
               DISPLAY aint600_filter_parser('indgsite') TO s_browse[1].b_indgsite
            DISPLAY aint600_filter_parser('indgdocno') TO s_browse[1].b_indgdocno
            DISPLAY aint600_filter_parser('indgdocdt') TO s_browse[1].b_indgdocdt
            DISPLAY aint600_filter_parser('indg003') TO s_browse[1].b_indg003
            DISPLAY aint600_filter_parser('indg001') TO s_browse[1].b_indg001
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aint600_filter_show('indgsite')
   CALL aint600_filter_show('indgdocno')
   CALL aint600_filter_show('indgdocdt')
   CALL aint600_filter_show('indg003')
   CALL aint600_filter_show('indg001')
 
END FUNCTION
]]>
</section>
  <section id="aint600.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aint600_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="aint600.filter_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aint600_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aint600_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="aint600.global" ver="6" status="" src="s">
<![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_indg_m        RECORD
       indgsite LIKE indg_t.indgsite, 
   indgsite_desc LIKE type_t.chr80, 
   indgdocdt LIKE indg_t.indgdocdt, 
   indgdocno LIKE indg_t.indgdocno, 
   indg001 LIKE indg_t.indg001, 
   indg001_desc LIKE type_t.chr80, 
   indg002 LIKE indg_t.indg002, 
   indg002_desc LIKE type_t.chr80, 
   indg003 LIKE indg_t.indg003, 
   indg004 LIKE indg_t.indg004, 
   indgunit LIKE indg_t.indgunit, 
   indgstus LIKE indg_t.indgstus, 
   indgownid LIKE indg_t.indgownid, 
   indgownid_desc LIKE type_t.chr80, 
   indgowndp LIKE indg_t.indgowndp, 
   indgowndp_desc LIKE type_t.chr80, 
   indgcrtid LIKE indg_t.indgcrtid, 
   indgcrtid_desc LIKE type_t.chr80, 
   indgcrtdp LIKE indg_t.indgcrtdp, 
   indgcrtdp_desc LIKE type_t.chr80, 
   indgcrtdt DATETIME YEAR TO SECOND, 
   indgmodid LIKE indg_t.indgmodid, 
   indgmodid_desc LIKE type_t.chr80, 
   indgmoddt DATETIME YEAR TO SECOND, 
   indgcnfid LIKE indg_t.indgcnfid, 
   indgcnfid_desc LIKE type_t.chr80, 
   indgcnfdt DATETIME YEAR TO SECOND, 
   indgpstid LIKE indg_t.indgpstid, 
   indgpstid_desc LIKE type_t.chr80, 
   indgpstdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_indh_d        RECORD
       indhseq LIKE indh_t.indhseq, 
   indh001 LIKE indh_t.indh001, 
   indh001_desc LIKE type_t.chr80, 
   indh002 LIKE indh_t.indh002, 
   indh003 LIKE indh_t.indh003, 
   indh002_desc LIKE type_t.chr500, 
   indh002_desc_desc LIKE type_t.chr500, 
   indh005 LIKE indh_t.indh005, 
   indh005_desc LIKE type_t.chr500, 
   indh006 LIKE indh_t.indh006, 
   indh007 LIKE indh_t.indh007, 
   indh008 LIKE indh_t.indh008, 
   indh010 LIKE indh_t.indh010, 
   indh004 LIKE indh_t.indh004, 
   indh009 LIKE indh_t.indh009, 
   indhsite LIKE indh_t.indhsite, 
   indhunit LIKE indh_t.indhunit
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_indg_m          type_g_indg_m
DEFINE g_indg_m_t        type_g_indg_m
 
   DEFINE g_indgdocno_t LIKE indg_t.indgdocno
 
 
DEFINE g_indh_d          DYNAMIC ARRAY OF type_g_indh_d
DEFINE g_indh_d_t        type_g_indh_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_indgsite LIKE indg_t.indgsite,
   b_indgsite_desc LIKE type_t.chr80,
      b_indgdocno LIKE indg_t.indgdocno,
      b_indgdocdt LIKE indg_t.indgdocdt,
      b_indg003 LIKE indg_t.indg003,
      b_indg001 LIKE indg_t.indg001,
   b_indg001_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_indgsite LIKE indg_t.indgsite,
   b_indgsite_desc LIKE type_t.chr80,
      b_indgdocno LIKE indg_t.indgdocno,
      b_indgdocdt LIKE indg_t.indgdocdt,
      b_indg003 LIKE indg_t.indg003,
      b_indg001 LIKE indg_t.indg001,
   b_indg001_desc LIKE type_t.chr80
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="aint600.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aint600_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_indh_d.getLength() THEN
         LET g_detail_idx = g_indh_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_indh_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_indh_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aint600.init" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aint600_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('indgstus','13','N,X,Y,A,D,R,W,T')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aint600_default_search()
    
END FUNCTION
]]>
</section>
  <section id="aint600.input" ver="3" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION aint600_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT indhseq,indh001,indh002,indh003,indh005,indh006,indh007,indh008,indh010, 
       indh004,indh009,indhsite,indhunit FROM indh_t WHERE indhent=? AND indhdocno=? AND indhseq=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint600_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aint600_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aint600_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_indg_m.indgsite,g_indg_m.indgdocdt,g_indg_m.indgdocno,g_indg_m.indg001,g_indg_m.indg002, 
       g_indg_m.indg003,g_indg_m.indg004,g_indg_m.indgunit,g_indg_m.indgstus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="aint600.input.body" ver="4" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_indh_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_indh_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aint600_b_fill()
            LET g_rec_b = g_indh_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aint600_cl USING g_enterprise,g_indg_m.indgdocno
            IF STATUS THEN
               CALL cl_err("OPEN aint600_cl:", STATUS, 1)
               CLOSE aint600_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_indh_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_indh_d[l_ac].indhseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_indh_d_t.* = g_indh_d[l_ac].*  #BACKUP
               CALL aint600_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aint600_set_no_entry_b(l_cmd)
               IF NOT aint600_lock_b("indh_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aint600_bcl INTO g_indh_d[l_ac].indhseq,g_indh_d[l_ac].indh001,g_indh_d[l_ac].indh002, 
                      g_indh_d[l_ac].indh003,g_indh_d[l_ac].indh005,g_indh_d[l_ac].indh006,g_indh_d[l_ac].indh007, 
                      g_indh_d[l_ac].indh008,g_indh_d[l_ac].indh010,g_indh_d[l_ac].indh004,g_indh_d[l_ac].indh009, 
                      g_indh_d[l_ac].indhsite,g_indh_d[l_ac].indhunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_indh_d_t.indhseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aint600_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_indh_d[l_ac].* TO NULL 
            
            LET g_indh_d_t.* = g_indh_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aint600_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aint600_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_indh_d[li_reproduce_target].* = g_indh_d[li_reproduce].*
 
               LET g_indh_d[li_reproduce_target].indhseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM indh_t 
             WHERE indhent = g_enterprise AND indhdocno = g_indg_m.indgdocno
 
               AND indhseq = g_indh_d[l_ac].indhseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_indg_m.indgdocno
               LET gs_keys[2] = g_indh_d[g_detail_idx].indhseq
               CALL aint600_insert_b('indh_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_indh_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("indh_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aint600_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_indh_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_indh_d.deleteElement(l_ac)
               NEXT FIELD indhseq
            END IF
         
            IF g_indh_d[l_ac].indhseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM indh_t
                WHERE indhent = g_enterprise AND indhdocno = g_indg_m.indgdocno AND
 
                      indhseq = g_indh_d_t.indhseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("indh_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aint600_bcl
               LET l_count = g_indh_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_indg_m.indgdocno
               LET gs_keys[2] = g_indh_d[g_detail_idx].indhseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aint600_delete_b('indh_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD indhseq
            #add-point:BEFORE FIELD indhseq
            {<point name="input.b.page1.indhseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indhseq
            
            #add-point:AFTER FIELD indhseq
            {<point name="input.a.page1.indhseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE indhseq
            #add-point:ON CHANGE indhseq
            {<point name="input.g.page1.indhseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indh001
            
            #add-point:AFTER FIELD indh001
            {<point name="input.a.page1.indh001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD indh001
            #add-point:BEFORE FIELD indh001
            {<point name="input.b.page1.indh001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE indh001
            #add-point:ON CHANGE indh001
            {<point name="input.g.page1.indh001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indh002
            
            #add-point:AFTER FIELD indh002
            {<point name="input.a.page1.indh002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD indh002
            #add-point:BEFORE FIELD indh002
            {<point name="input.b.page1.indh002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE indh002
            #add-point:ON CHANGE indh002
            {<point name="input.g.page1.indh002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indh003
            #add-point:BEFORE FIELD indh003
            {<point name="input.b.page1.indh003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indh003
            
            #add-point:AFTER FIELD indh003
            {<point name="input.a.page1.indh003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE indh003
            #add-point:ON CHANGE indh003
            {<point name="input.g.page1.indh003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indh005
            
            #add-point:AFTER FIELD indh005
            {<point name="input.a.page1.indh005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD indh005
            #add-point:BEFORE FIELD indh005
            {<point name="input.b.page1.indh005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE indh005
            #add-point:ON CHANGE indh005
            {<point name="input.g.page1.indh005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indh006
            #add-point:BEFORE FIELD indh006
            {<point name="input.b.page1.indh006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indh006
            
            #add-point:AFTER FIELD indh006
            {<point name="input.a.page1.indh006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE indh006
            #add-point:ON CHANGE indh006
            {<point name="input.g.page1.indh006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indh007
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_indh_d[l_ac].indh007,"0","1","","","azz-00079",1) THEN
               NEXT FIELD indh007
            END IF
 
 
            #add-point:AFTER FIELD indh007
            {<point name="input.a.page1.indh007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD indh007
            #add-point:BEFORE FIELD indh007
            {<point name="input.b.page1.indh007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE indh007
            #add-point:ON CHANGE indh007
            {<point name="input.g.page1.indh007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indh008
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_indh_d[l_ac].indh008,"0","1","","","azz-00079",1) THEN
               NEXT FIELD indh008
            END IF
 
 
            #add-point:AFTER FIELD indh008
            {<point name="input.a.page1.indh008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD indh008
            #add-point:BEFORE FIELD indh008
            {<point name="input.b.page1.indh008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE indh008
            #add-point:ON CHANGE indh008
            {<point name="input.g.page1.indh008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indh010
            #add-point:BEFORE FIELD indh010
            {<point name="input.b.page1.indh010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indh010
            
            #add-point:AFTER FIELD indh010
            {<point name="input.a.page1.indh010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE indh010
            #add-point:ON CHANGE indh010
            {<point name="input.g.page1.indh010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indh004
            #add-point:BEFORE FIELD indh004
            {<point name="input.b.page1.indh004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indh004
            
            #add-point:AFTER FIELD indh004
            {<point name="input.a.page1.indh004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE indh004
            #add-point:ON CHANGE indh004
            {<point name="input.g.page1.indh004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indh009
            #add-point:BEFORE FIELD indh009
            {<point name="input.b.page1.indh009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indh009
            
            #add-point:AFTER FIELD indh009
            {<point name="input.a.page1.indh009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE indh009
            #add-point:ON CHANGE indh009
            {<point name="input.g.page1.indh009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indhsite
            #add-point:BEFORE FIELD indhsite
            {<point name="input.b.page1.indhsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indhsite
            
            #add-point:AFTER FIELD indhsite
            {<point name="input.a.page1.indhsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE indhsite
            #add-point:ON CHANGE indhsite
            {<point name="input.g.page1.indhsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indhunit
            #add-point:BEFORE FIELD indhunit
            {<point name="input.b.page1.indhunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indhunit
            
            #add-point:AFTER FIELD indhunit
            {<point name="input.a.page1.indhunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE indhunit
            #add-point:ON CHANGE indhunit
            {<point name="input.g.page1.indhunit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.indhseq
         ON ACTION controlp INFIELD indhseq
            #add-point:ON ACTION controlp INFIELD indhseq
            {<point name="input.c.page1.indhseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indh001
         ON ACTION controlp INFIELD indh001
            #add-point:ON ACTION controlp INFIELD indh001
            {<point name="input.c.page1.indh001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indh002
         ON ACTION controlp INFIELD indh002
            #add-point:ON ACTION controlp INFIELD indh002
            {<point name="input.c.page1.indh002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indh003
         ON ACTION controlp INFIELD indh003
            #add-point:ON ACTION controlp INFIELD indh003
            {<point name="input.c.page1.indh003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indh005
         ON ACTION controlp INFIELD indh005
            #add-point:ON ACTION controlp INFIELD indh005
            {<point name="input.c.page1.indh005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indh006
         ON ACTION controlp INFIELD indh006
            #add-point:ON ACTION controlp INFIELD indh006
            {<point name="input.c.page1.indh006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indh007
         ON ACTION controlp INFIELD indh007
            #add-point:ON ACTION controlp INFIELD indh007
            {<point name="input.c.page1.indh007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indh008
         ON ACTION controlp INFIELD indh008
            #add-point:ON ACTION controlp INFIELD indh008
            {<point name="input.c.page1.indh008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indh010
         ON ACTION controlp INFIELD indh010
            #add-point:ON ACTION controlp INFIELD indh010
            {<point name="input.c.page1.indh010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indh004
         ON ACTION controlp INFIELD indh004
            #add-point:ON ACTION controlp INFIELD indh004
            {<point name="input.c.page1.indh004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indh009
         ON ACTION controlp INFIELD indh009
            #add-point:ON ACTION controlp INFIELD indh009
            {<point name="input.c.page1.indh009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indhsite
         ON ACTION controlp INFIELD indhsite
            #add-point:ON ACTION controlp INFIELD indhsite
            {<point name="input.c.page1.indhsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indhunit
         ON ACTION controlp INFIELD indhunit
            #add-point:ON ACTION controlp INFIELD indhunit
            {<point name="input.c.page1.indhunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_indh_d[l_ac].* = g_indh_d_t.*
               CLOSE aint600_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_indh_d[l_ac].indhseq,-263,1)
               LET g_indh_d[l_ac].* = g_indh_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE indh_t SET (indhdocno,indhseq,indh001,indh002,indh003,indh005,indh006,indh007, 
                   indh008,indh010,indh004,indh009,indhsite,indhunit) = (g_indg_m.indgdocno,g_indh_d[l_ac].indhseq, 
                   g_indh_d[l_ac].indh001,g_indh_d[l_ac].indh002,g_indh_d[l_ac].indh003,g_indh_d[l_ac].indh005, 
                   g_indh_d[l_ac].indh006,g_indh_d[l_ac].indh007,g_indh_d[l_ac].indh008,g_indh_d[l_ac].indh010, 
                   g_indh_d[l_ac].indh004,g_indh_d[l_ac].indh009,g_indh_d[l_ac].indhsite,g_indh_d[l_ac].indhunit) 

                WHERE indhent = g_enterprise AND indhdocno = g_indg_m.indgdocno 
 
                  AND indhseq = g_indh_d_t.indhseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("indh_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_indh_d[l_ac].* = g_indh_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("indh_t",SQLCA.sqlcode,1)
                     LET g_indh_d[l_ac].* = g_indh_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_indg_m.indgdocno
               LET gs_keys_bak[1] = g_indgdocno_t
               LET gs_keys[2] = g_indh_d[g_detail_idx].indhseq
               LET gs_keys_bak[2] = g_indh_d_t.indhseq
               CALL aint600_update_b('indh_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_indg_m),util.JSON.stringify(g_indh_d_t)
               LET g_log2 = util.JSON.stringify(g_indg_m),util.JSON.stringify(g_indh_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aint600_unlock_b("indh_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_indh_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_indh_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="aint600.input.head" ver="5" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_indg_m.indgsite,g_indg_m.indgdocdt,g_indg_m.indgdocno,g_indg_m.indg001,g_indg_m.indg002, 
          g_indg_m.indg003,g_indg_m.indg004,g_indg_m.indgunit,g_indg_m.indgstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD indgsite
            
            #add-point:AFTER FIELD indgsite
            {<point name="input.a.indgsite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgsite
            #add-point:BEFORE FIELD indgsite
            {<point name="input.b.indgsite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE indgsite
            #add-point:ON CHANGE indgsite
            {<point name="input.g.indgsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgdocdt
            #add-point:BEFORE FIELD indgdocdt
            {<point name="input.b.indgdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indgdocdt
            
            #add-point:AFTER FIELD indgdocdt
            {<point name="input.a.indgdocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE indgdocdt
            #add-point:ON CHANGE indgdocdt
            {<point name="input.g.indgdocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgdocno
            #add-point:BEFORE FIELD indgdocno
            {<point name="input.b.indgdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indgdocno
            
            #add-point:AFTER FIELD indgdocno
            {<point name="input.a.indgdocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE indgdocno
            #add-point:ON CHANGE indgdocno
            {<point name="input.g.indgdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indg001
            
            #add-point:AFTER FIELD indg001
            {<point name="input.a.indg001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD indg001
            #add-point:BEFORE FIELD indg001
            {<point name="input.b.indg001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE indg001
            #add-point:ON CHANGE indg001
            {<point name="input.g.indg001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indg002
            
            #add-point:AFTER FIELD indg002
            {<point name="input.a.indg002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD indg002
            #add-point:BEFORE FIELD indg002
            {<point name="input.b.indg002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE indg002
            #add-point:ON CHANGE indg002
            {<point name="input.g.indg002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indg003
            #add-point:BEFORE FIELD indg003
            {<point name="input.b.indg003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indg003
            
            #add-point:AFTER FIELD indg003
            {<point name="input.a.indg003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE indg003
            #add-point:ON CHANGE indg003
            {<point name="input.g.indg003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indg004
            #add-point:BEFORE FIELD indg004
            {<point name="input.b.indg004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indg004
            
            #add-point:AFTER FIELD indg004
            {<point name="input.a.indg004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE indg004
            #add-point:ON CHANGE indg004
            {<point name="input.g.indg004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgunit
            #add-point:BEFORE FIELD indgunit
            {<point name="input.b.indgunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indgunit
            
            #add-point:AFTER FIELD indgunit
            {<point name="input.a.indgunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE indgunit
            #add-point:ON CHANGE indgunit
            {<point name="input.g.indgunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD indgstus
            #add-point:BEFORE FIELD indgstus
            {<point name="input.b.indgstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD indgstus
            
            #add-point:AFTER FIELD indgstus
            {<point name="input.a.indgstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE indgstus
            #add-point:ON CHANGE indgstus
            {<point name="input.g.indgstus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.indgsite
         ON ACTION controlp INFIELD indgsite
            #add-point:ON ACTION controlp INFIELD indgsite
            {<point name="input.c.indgsite" />}
            #END add-point
 
         #Ctrlp:input.c.indgdocdt
         ON ACTION controlp INFIELD indgdocdt
            #add-point:ON ACTION controlp INFIELD indgdocdt
            {<point name="input.c.indgdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.indgdocno
         ON ACTION controlp INFIELD indgdocno
            #add-point:ON ACTION controlp INFIELD indgdocno
            {<point name="input.c.indgdocno" />}
            #END add-point
 
         #Ctrlp:input.c.indg001
         ON ACTION controlp INFIELD indg001
            #add-point:ON ACTION controlp INFIELD indg001
            {<point name="input.c.indg001" />}
            #END add-point
 
         #Ctrlp:input.c.indg002
         ON ACTION controlp INFIELD indg002
            #add-point:ON ACTION controlp INFIELD indg002
            {<point name="input.c.indg002" />}
            #END add-point
 
         #Ctrlp:input.c.indg003
         ON ACTION controlp INFIELD indg003
            #add-point:ON ACTION controlp INFIELD indg003
            {<point name="input.c.indg003" />}
            #END add-point
 
         #Ctrlp:input.c.indg004
         ON ACTION controlp INFIELD indg004
            #add-point:ON ACTION controlp INFIELD indg004
            {<point name="input.c.indg004" />}
            #END add-point
 
         #Ctrlp:input.c.indgunit
         ON ACTION controlp INFIELD indgunit
            #add-point:ON ACTION controlp INFIELD indgunit
            {<point name="input.c.indgunit" />}
            #END add-point
 
         #Ctrlp:input.c.indgstus
         ON ACTION controlp INFIELD indgstus
            #add-point:ON ACTION controlp INFIELD indgstus
            {<point name="input.c.indgstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_indg_m.indgdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO indg_t (indgent,indgsite,indgdocdt,indgdocno,indg001,indg002,indg003,indg004, 
                   indgunit,indgstus,indgownid,indgowndp,indgcrtid,indgcrtdp,indgcrtdt,indgcnfid,indgcnfdt, 
                   indgpstid,indgpstdt)
               VALUES (g_enterprise,g_indg_m.indgsite,g_indg_m.indgdocdt,g_indg_m.indgdocno,g_indg_m.indg001, 
                   g_indg_m.indg002,g_indg_m.indg003,g_indg_m.indg004,g_indg_m.indgunit,g_indg_m.indgstus, 
                   g_indg_m.indgownid,g_indg_m.indgowndp,g_indg_m.indgcrtid,g_indg_m.indgcrtdp,g_indg_m.indgcrtdt, 
                   g_indg_m.indgcnfid,g_indg_m.indgcnfdt,g_indg_m.indgpstid,g_indg_m.indgpstdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_indg_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aint600_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE indg_t SET (indgsite,indgdocdt,indgdocno,indg001,indg002,indg003,indg004,indgunit, 
                   indgstus,indgownid,indgowndp,indgcrtid,indgcrtdp,indgcrtdt,indgcnfid,indgcnfdt,indgpstid, 
                   indgpstdt) = (g_indg_m.indgsite,g_indg_m.indgdocdt,g_indg_m.indgdocno,g_indg_m.indg001, 
                   g_indg_m.indg002,g_indg_m.indg003,g_indg_m.indg004,g_indg_m.indgunit,g_indg_m.indgstus, 
                   g_indg_m.indgownid,g_indg_m.indgowndp,g_indg_m.indgcrtid,g_indg_m.indgcrtdp,g_indg_m.indgcrtdt, 
                   g_indg_m.indgcnfid,g_indg_m.indgcnfdt,g_indg_m.indgpstid,g_indg_m.indgpstdt)
                WHERE indgent = g_enterprise AND indgdocno = g_indgdocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("indg_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_indg_m_t)
               LET g_log2 = util.JSON.stringify(g_indg_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_indgdocno_t = g_indg_m.indgdocno
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="aint600.input.other" ver="3" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD indgdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD indhseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="aint600.insert" ver="3" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION aint600_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_indh_d.clear()   
 
 
   INITIALIZE g_indg_m.* LIKE indg_t.*             #DEFAULT 設定
   
   LET g_indgdocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_indg_m.indgownid = g_user
      LET g_indg_m.indgowndp = g_dept
      LET g_indg_m.indgcrtid = g_user
      LET g_indg_m.indgcrtdp = g_dept 
      LET g_indg_m.indgcrtdt = cl_get_current()
      LET g_indg_m.indgmodid = ""
      LET g_indg_m.indgmoddt = ""
      LET g_indg_m.indgstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aint600_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_indg_m.* = g_indg_m_t.*
         CALL aint600_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_indh_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_indgdocno_t = g_indg_m.indgdocno
 
   
   LET g_wc = g_wc,  
              " OR ( indgent = '" ||g_enterprise|| "' AND",
              " indgdocno = '", g_indg_m.indgdocno CLIPPED, "' "
 
              , ") "
   
   CLOSE aint600_cl
   
END FUNCTION
]]>
</section>
  <section id="aint600.insert_b" ver="1" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aint600_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO indh_t
                  (indhent,
                   indhdocno,
                   indhseq
                   ,indh001,indh002,indh003,indh005,indh006,indh007,indh008,indh010,indh004,indh009,indhsite,indhunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_indh_d[g_detail_idx].indh001,g_indh_d[g_detail_idx].indh002,g_indh_d[g_detail_idx].indh003, 
                       g_indh_d[g_detail_idx].indh005,g_indh_d[g_detail_idx].indh006,g_indh_d[g_detail_idx].indh007, 
                       g_indh_d[g_detail_idx].indh008,g_indh_d[g_detail_idx].indh010,g_indh_d[g_detail_idx].indh004, 
                       g_indh_d[g_detail_idx].indh009,g_indh_d[g_detail_idx].indhsite,g_indh_d[g_detail_idx].indhunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("indh_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="aint600.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aint600_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aint600_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "indh_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aint600_bcl USING g_enterprise,
                                       g_indg_m.indgdocno,g_indh_d[g_detail_idx].indhseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("aint600_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aint600.main" ver="7" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT indgsite,'',indgdocdt,indgdocno,indg001,'',indg002,'',indg003,indg004, 
       indgunit,indgstus,indgownid,'',indgowndp,'',indgcrtid,'',indgcrtdp,'',indgcrtdt,indgmodid,'', 
       indgmoddt,indgcnfid,'',indgcnfdt,indgpstid,'',indgpstdt", 
                      " FROM indg_t",
                      " WHERE indgent= ? AND indgdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint600_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE indgsite,indgdocdt,indgdocno,indg001,indg002,indg003,indg004,indgunit, 
       indgstus,indgownid,indgowndp,indgcrtid,indgcrtdp,indgcrtdt,indgmodid,indgmoddt,indgcnfid,indgcnfdt, 
       indgpstid,indgpstdt,t1.ooefl003 ,t2.oofa011 ,t3.rtaxl003 ,t4.oofa011 ,t5.ooefl003 ,t6.oofa011 , 
       t7.ooefl003 ,t8.oofa011 ,t9.oofa011 ,t10.oofa011",
               " FROM indg_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=indgsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t2 ON t2.oofaent='"||g_enterprise||"' AND t2.oofa002='2' AND t2.oofa003=indg001  ",
               " LEFT JOIN rtaxl_t t3 ON t3.rtaxlent='"||g_enterprise||"' AND t3.rtaxl001=indg002 AND t3.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=indgownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=indgowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=indgcrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=indgcrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=indgmodid  ",
               " LEFT JOIN oofa_t t9 ON t9.oofaent='"||g_enterprise||"' AND t9.oofa002='2' AND t9.oofa003=indgcnfid  ",
               " LEFT JOIN oofa_t t10 ON t10.oofaent='"||g_enterprise||"' AND t10.oofa002='2' AND t10.oofa003=indgpstid  ",
 
               " WHERE indgent = '" ||g_enterprise|| "' AND indgdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aint600_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aint600 WITH FORM cl_ap_formpath("ain",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aint600_init()   
 
      #進入選單 Menu (="N")
      CALL aint600_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aint600
      
   END IF 
   
   CLOSE aint600_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="aint600.modify" ver="6" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION aint600_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_indg_m.indgdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE aint600_master_referesh USING g_indg_m.indgdocno INTO g_indg_m.indgsite,g_indg_m.indgdocdt, 
       g_indg_m.indgdocno,g_indg_m.indg001,g_indg_m.indg002,g_indg_m.indg003,g_indg_m.indg004,g_indg_m.indgunit, 
       g_indg_m.indgstus,g_indg_m.indgownid,g_indg_m.indgowndp,g_indg_m.indgcrtid,g_indg_m.indgcrtdp, 
       g_indg_m.indgcrtdt,g_indg_m.indgmodid,g_indg_m.indgmoddt,g_indg_m.indgcnfid,g_indg_m.indgcnfdt, 
       g_indg_m.indgpstid,g_indg_m.indgpstdt,g_indg_m.indgsite_desc,g_indg_m.indg001_desc,g_indg_m.indg002_desc, 
       g_indg_m.indgownid_desc,g_indg_m.indgowndp_desc,g_indg_m.indgcrtid_desc,g_indg_m.indgcrtdp_desc, 
       g_indg_m.indgmodid_desc,g_indg_m.indgcnfid_desc,g_indg_m.indgpstid_desc
 
   ERROR ""
  
   LET g_indgdocno_t = g_indg_m.indgdocno
 
   CALL s_transaction_begin()
   
   OPEN aint600_cl USING g_enterprise,g_indg_m.indgdocno
   IF STATUS THEN
      CALL cl_err("OPEN aint600_cl:", STATUS, 1)
      CLOSE aint600_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint600_master_referesh USING g_indg_m.indgdocno INTO g_indg_m.indgsite,g_indg_m.indgdocdt, 
       g_indg_m.indgdocno,g_indg_m.indg001,g_indg_m.indg002,g_indg_m.indg003,g_indg_m.indg004,g_indg_m.indgunit, 
       g_indg_m.indgstus,g_indg_m.indgownid,g_indg_m.indgowndp,g_indg_m.indgcrtid,g_indg_m.indgcrtdp, 
       g_indg_m.indgcrtdt,g_indg_m.indgmodid,g_indg_m.indgmoddt,g_indg_m.indgcnfid,g_indg_m.indgcnfdt, 
       g_indg_m.indgpstid,g_indg_m.indgpstdt,g_indg_m.indgsite_desc,g_indg_m.indg001_desc,g_indg_m.indg002_desc, 
       g_indg_m.indgownid_desc,g_indg_m.indgowndp_desc,g_indg_m.indgcrtid_desc,g_indg_m.indgcrtdp_desc, 
       g_indg_m.indgmodid_desc,g_indg_m.indgcnfid_desc,g_indg_m.indgpstid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_indg_m.indgdocno,SQLCA.sqlcode,0)
      CLOSE aint600_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL aint600_show()
   WHILE TRUE
      LET g_indgdocno_t = g_indg_m.indgdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_indg_m.indgmodid = g_user 
LET g_indg_m.indgmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL aint600_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_indg_m.* = g_indg_m_t.*
         CALL aint600_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE indg_t SET (indgmodid,indgmoddt) = (g_indg_m.indgmodid,g_indg_m.indgmoddt)
       WHERE indgent = g_enterprise AND indgdocno = g_indgdocno_t
 
                  
      #若單頭key欄位有變更
      IF g_indg_m.indgdocno != g_indgdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE indh_t SET indhdocno = g_indg_m.indgdocno
 
          WHERE indhent = g_enterprise AND indhdocno = g_indgdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("indh_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("indh_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_indg_m.indgdocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE aint600_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_indg_m.indgdocno,'U')
 
END FUNCTION   
]]>
</section>
  <section id="aint600.other_dialog" ver="2" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aint600.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="aint600.query" ver="2" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aint600_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_indh_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aint600_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aint600_browser_fill("")
      CALL aint600_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aint600_filter_show('indgsite')
   CALL aint600_filter_show('indgdocno')
   CALL aint600_filter_show('indgdocdt')
   CALL aint600_filter_show('indg003')
   CALL aint600_filter_show('indg001')
   CALL aint600_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aint600_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aint600.reproduce" ver="4" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION aint600_reproduce()
   DEFINE l_newno     LIKE indg_t.indgdocno 
   DEFINE l_oldno     LIKE indg_t.indgdocno 
 
   DEFINE l_master    RECORD LIKE indg_t.*
   DEFINE l_detail    RECORD LIKE indh_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_indg_m.indgdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_indgdocno_t = g_indg_m.indgdocno
 
    
   LET g_indg_m.indgdocno = ""
 
    
   CALL aint600_set_entry('a')
   CALL aint600_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_indg_m.indgownid = g_user
      LET g_indg_m.indgowndp = g_dept
      LET g_indg_m.indgcrtid = g_user
      LET g_indg_m.indgcrtdp = g_dept 
      LET g_indg_m.indgcrtdt = cl_get_current()
      LET g_indg_m.indgmodid = ""
      LET g_indg_m.indgmoddt = ""
      LET g_indg_m.indgstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aint600_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " indgdocno = '", g_indg_m.indgdocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aint600.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aint600_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("indgdocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aint600.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aint600_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="aint600.set_no_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aint600_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("indgdocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aint600.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aint600_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="aint600.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aint600_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_indg_m.indgdocno
   LET g_pk_array[1].column = 'indgdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="aint600.show" ver="7" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aint600_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_indg_m_t.* = g_indg_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL aint600_b_fill() #單身填充
      CALL aint600_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_indg_m.indgownid_desc = cl_get_username(g_indg_m.indgownid)
      #LET g_indg_m.indgowndp_desc = cl_get_deptname(g_indg_m.indgowndp)
      #LET g_indg_m.indgcrtid_desc = cl_get_username(g_indg_m.indgcrtid)
      #LET g_indg_m.indgcrtdp_desc = cl_get_deptname(g_indg_m.indgcrtdp)
      #LET g_indg_m.indgmodid_desc = cl_get_username(g_indg_m.indgmodid)
      #LET g_indg_m.indgcnfid_desc = cl_get_deptname(g_indg_m.indgcnfid)
      #LET g_indg_m.indgpstid_desc = cl_get_deptname(g_indg_m.indgpstid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aint600_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_indg_m.indgsite,g_indg_m.indgsite_desc,g_indg_m.indgdocdt,g_indg_m.indgdocno,g_indg_m.indg001, 
       g_indg_m.indg001_desc,g_indg_m.indg002,g_indg_m.indg002_desc,g_indg_m.indg003,g_indg_m.indg004, 
       g_indg_m.indgunit,g_indg_m.indgstus,g_indg_m.indgownid,g_indg_m.indgownid_desc,g_indg_m.indgowndp, 
       g_indg_m.indgowndp_desc,g_indg_m.indgcrtid,g_indg_m.indgcrtid_desc,g_indg_m.indgcrtdp,g_indg_m.indgcrtdp_desc, 
       g_indg_m.indgcrtdt,g_indg_m.indgmodid,g_indg_m.indgmodid_desc,g_indg_m.indgmoddt,g_indg_m.indgcnfid, 
       g_indg_m.indgcnfid_desc,g_indg_m.indgcnfdt,g_indg_m.indgpstid,g_indg_m.indgpstid_desc,g_indg_m.indgpstdt 

   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_indg_m.indgstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "T"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/org_approved.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_indh_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aint600_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aint600.signature" ver="9" status="" src="s">
<![CDATA[   #此段落由子樣板a39產生
#+ BPM提交
PRIVATE FUNCTION aint600_send()
 
   #add-point:send段define
   {<point name="send.define"/>}
   #end add-point 
 
   IF g_indg_m.indgdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #重新取得與顯示完整單據資料(最新單據資料)
   EXECUTE aint600_master_referesh USING g_indg_m.indgdocno INTO g_indg_m.indgsite,g_indg_m.indgdocdt, 
       g_indg_m.indgdocno,g_indg_m.indg001,g_indg_m.indg002,g_indg_m.indg003,g_indg_m.indg004,g_indg_m.indgunit, 
       g_indg_m.indgstus,g_indg_m.indgownid,g_indg_m.indgowndp,g_indg_m.indgcrtid,g_indg_m.indgcrtdp, 
       g_indg_m.indgcrtdt,g_indg_m.indgmodid,g_indg_m.indgmoddt,g_indg_m.indgcnfid,g_indg_m.indgcnfdt, 
       g_indg_m.indgpstid,g_indg_m.indgpstdt,g_indg_m.indgsite_desc,g_indg_m.indg001_desc,g_indg_m.indg002_desc, 
       g_indg_m.indgownid_desc,g_indg_m.indgowndp_desc,g_indg_m.indgcrtid_desc,g_indg_m.indgcrtdp_desc, 
       g_indg_m.indgmodid_desc,g_indg_m.indgcnfid_desc,g_indg_m.indgpstid_desc
 
   ERROR ""
   
   CALL s_transaction_begin()
 
   OPEN aint600_cl USING g_enterprise,g_indg_m.indgdocno
   IF STATUS THEN
      CALL cl_err("OPEN aint600_cl:", STATUS, 1)
      CLOSE aint600_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH aint600_cl INTO g_indg_m.indgsite,g_indg_m.indgsite_desc,g_indg_m.indgdocdt,g_indg_m.indgdocno, 
       g_indg_m.indg001,g_indg_m.indg001_desc,g_indg_m.indg002,g_indg_m.indg002_desc,g_indg_m.indg003, 
       g_indg_m.indg004,g_indg_m.indgunit,g_indg_m.indgstus,g_indg_m.indgownid,g_indg_m.indgownid_desc, 
       g_indg_m.indgowndp,g_indg_m.indgowndp_desc,g_indg_m.indgcrtid,g_indg_m.indgcrtid_desc,g_indg_m.indgcrtdp, 
       g_indg_m.indgcrtdp_desc,g_indg_m.indgcrtdt,g_indg_m.indgmodid,g_indg_m.indgmodid_desc,g_indg_m.indgmoddt, 
       g_indg_m.indgcnfid,g_indg_m.indgcnfid_desc,g_indg_m.indgcnfdt,g_indg_m.indgpstid,g_indg_m.indgpstid_desc, 
       g_indg_m.indgpstdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_indg_m.indgdocno,SQLCA.sqlcode,0)
      CLOSE aint600_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL aint600_show()
   CALL aint600_set_pk_array()
   
   #add-point: 提交前的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_indg_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_indh_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      CLOSE aint600_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
   
   #完成狀態更新
   CLOSE aint600_cl
   CALL s_transaction_end('Y','0')
             
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL aint600_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_row].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aint600_ui_headershow()
   CALL aint600_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#此段落由子樣板a40產生
#+ BPM抽單
PRIVATE FUNCTION aint600_draw_out()
 
   #add-point:draw段define
   {<point name="draw.define"/>}
   #end add-point
 
   #檢查資料是否存在
   IF g_indg_m.indgdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN FALSE
   END IF
 
   #LOCK主檔資料
   CALL s_transaction_begin()
 
   #進行BPM抽單功能
   OPEN aint600_cl USING g_enterprise,g_indg_m.indgdocno
   IF STATUS THEN
      CALL cl_err("OPEN aint600_cl:", STATUS, 1)
      CLOSE aint600_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #鎖住將被更改的資料
   FETCH aint600_cl INTO g_indg_m.indgsite,g_indg_m.indgsite_desc,g_indg_m.indgdocdt,g_indg_m.indgdocno, 
       g_indg_m.indg001,g_indg_m.indg001_desc,g_indg_m.indg002,g_indg_m.indg002_desc,g_indg_m.indg003, 
       g_indg_m.indg004,g_indg_m.indgunit,g_indg_m.indgstus,g_indg_m.indgownid,g_indg_m.indgownid_desc, 
       g_indg_m.indgowndp,g_indg_m.indgowndp_desc,g_indg_m.indgcrtid,g_indg_m.indgcrtid_desc,g_indg_m.indgcrtdp, 
       g_indg_m.indgcrtdp_desc,g_indg_m.indgcrtdt,g_indg_m.indgmodid,g_indg_m.indgmodid_desc,g_indg_m.indgmoddt, 
       g_indg_m.indgcnfid,g_indg_m.indgcnfid_desc,g_indg_m.indgcnfdt,g_indg_m.indgpstid,g_indg_m.indgpstid_desc, 
       g_indg_m.indgpstdt
   
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_indg_m.indgdocno,SQLCA.sqlcode,0)
      CLOSE aint600_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      CLOSE aint600_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF    
 
   #完成狀態更新
   CLOSE aint600_cl
   CALL s_transaction_end('Y','0')
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aint600_ui_headershow()  
   CALL aint600_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
</section>
  <section id="aint600.state_change" ver="6" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aint600_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_indg_m.indgdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_indg_m.indgstus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "T"
               HIDE OPTION "org_approved"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION approved
         LET lc_state = "A"
         #add-point:action控制
         {<point name="statechange.approved"/>}
         #end add-point
         EXIT MENU
      #ON ACTION withdraw
      #   LET lc_state = "D"
      #   #add-point:action控制
      #   {<point name="statechange.withdraw"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION rejection
         LET lc_state = "R"
         #add-point:action控制
         {<point name="statechange.rejection"/>}
         #end add-point
         EXIT MENU
      #ON ACTION signing
      #   LET lc_state = "W"
      #   #add-point:action控制
      #   {<point name="statechange.signing"/>}
      #   #end add-point
      #   EXIT MENU
      ON ACTION org_approved
         LET lc_state = "T"
         #add-point:action控制
         {<point name="statechange.org_approved"/>}
         #end add-point
         EXIT MENU
      
      #此段落由子樣板a36產生
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT aint600_send() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_send()已有執行update動作
 
         EXIT MENU
 
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT aint600_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_draw_out()已有執行update動作
         EXIT MENU
 
 
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "T"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE indg_t SET indgstus = lc_state 
    WHERE indgent = g_enterprise AND indgdocno = g_indg_m.indgdocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "T"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/org_approved.png")
         
      END CASE
      LET g_indg_m.indgstus = lc_state
      DISPLAY BY NAME g_indg_m.indgstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="aint600.ui_browser_refresh" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aint600_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_indgdocno = g_indg_m.indgdocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="aint600.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aint600_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="aint600.ui_dialog" ver="19" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION aint600_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aint600_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL aint600_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_indgdocno = g_indgdocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aint600_fetch('') # reload data
               LET l_ac = 1
               CALL aint600_ui_detailshow() #Setting the current row 
      
               CALL aint600_idx_chk()
               #NEXT FIELD indhseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_indh_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL aint600_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL aint600_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aint600_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aint600_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aint600_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aint600_statechange()
            EXIT DIALOG
      
         #此段落由子樣板a32產生
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
 
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aint600_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aint600_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aint600_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aint600_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL aint600_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint600_idx_chk()
            
         ON ACTION previous
            CALL aint600_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint600_idx_chk()
            
         ON ACTION jump
            CALL aint600_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint600_idx_chk()
            
         ON ACTION next
            CALL aint600_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint600_idx_chk()
            
         ON ACTION last
            CALL aint600_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint600_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD indhseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aint600_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aint600_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aint600_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aint600_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aint600_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aint600_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aint600_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aint600_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_indg_m.indgdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="aint600.ui_headershow" ver="4" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aint600_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_indg_m.indgdocno = g_browser[g_current_idx].b_indgdocno   
 
   EXECUTE aint600_master_referesh USING g_indg_m.indgdocno INTO g_indg_m.indgsite,g_indg_m.indgdocdt, 
       g_indg_m.indgdocno,g_indg_m.indg001,g_indg_m.indg002,g_indg_m.indg003,g_indg_m.indg004,g_indg_m.indgunit, 
       g_indg_m.indgstus,g_indg_m.indgownid,g_indg_m.indgowndp,g_indg_m.indgcrtid,g_indg_m.indgcrtdp, 
       g_indg_m.indgcrtdt,g_indg_m.indgmodid,g_indg_m.indgmoddt,g_indg_m.indgcnfid,g_indg_m.indgcnfdt, 
       g_indg_m.indgpstid,g_indg_m.indgpstdt,g_indg_m.indgsite_desc,g_indg_m.indg001_desc,g_indg_m.indg002_desc, 
       g_indg_m.indgownid_desc,g_indg_m.indgowndp_desc,g_indg_m.indgcrtid_desc,g_indg_m.indgcrtdp_desc, 
       g_indg_m.indgmodid_desc,g_indg_m.indgcnfid_desc,g_indg_m.indgpstid_desc
   CALL aint600_show()
   
END FUNCTION
]]>
</section>
  <section id="aint600.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aint600_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aint600_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aint600.update_b" ver="1" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aint600_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "indh_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE indh_t 
         SET (indhdocno,
              indhseq
              ,indh001,indh002,indh003,indh005,indh006,indh007,indh008,indh010,indh004,indh009,indhsite,indhunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_indh_d[g_detail_idx].indh001,g_indh_d[g_detail_idx].indh002,g_indh_d[g_detail_idx].indh003, 
                  g_indh_d[g_detail_idx].indh005,g_indh_d[g_detail_idx].indh006,g_indh_d[g_detail_idx].indh007, 
                  g_indh_d[g_detail_idx].indh008,g_indh_d[g_detail_idx].indh010,g_indh_d[g_detail_idx].indh004, 
                  g_indh_d[g_detail_idx].indh009,g_indh_d[g_detail_idx].indhsite,g_indh_d[g_detail_idx].indhunit)  

         WHERE indhent = g_enterprise AND indhdocno = ps_keys_bak[1] AND indhseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("indh_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("indh_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>