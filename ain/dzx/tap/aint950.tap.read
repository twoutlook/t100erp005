<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aint950" std_prog="aint950" erpver="1.0" module="AIN" ver="1" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="1" status="u"/>
  </other>
  <point name="function.aint950_inqa_default" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 單頭欄位預設值
# Memo...........:
# Usage..........: CALL aint950_inqa_default()
# Date & Author..: 2015/4/26 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION aint950_inqa_default()
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_insert    LIKE type_t.num5
   
   #單據性質
   CASE g_argv[1]
       WHEN '1'   #aint950
          LET g_inqa_m.inqa000 = '1'
       WHEN '2'   #aint951
          LET g_inqa_m.inqa000= '2'          
   END CASE
   
   #營運組織
   CALL s_aooi500_default(g_prog,'inqasite',g_inqa_m.inqasite)
      RETURNING l_insert,g_inqa_m.inqasite
   IF l_insert = FALSE THEN
      RETURN
   END IF

   #預設單別
   CALL s_arti200_get_def_doc_type(g_inqa_m.inqasite,g_prog,'1')
      RETURNING l_success,g_inqa_m.inqadocno 
      
   LET g_inqa_m.inqadocdt = g_today   #單據日期
   LET g_inqa_m.inqa001   = g_today   #扣帳日期
   LET g_inqa_m.inqa002   = g_user    #申請人員
   LET g_inqa_m.inqa003   = g_dept    #申請部門
   
   LET g_inqa_m.inqasite_desc = s_desc_get_department_desc(g_inqa_m.inqasite)  
   LET g_inqa_m.inqa002_desc  = s_desc_get_person_desc(g_inqa_m.inqa002)   
   LET g_inqa_m.inqa003_desc  = s_desc_get_department_desc(g_inqa_m.inqa003) 
   
   LET g_inqa_m.inqaunit = g_inqa_m.inqasite
END FUNCTION]]>
  </point>
  <point name="function.aint950_barcode_val" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 依主條碼帶值商品編號,包裝單位
# Memo...........:
# Usage..........: CALL aint950_barcode_val(p_barcode)
#                  RETURNING r_prod, r_pkg_unit
# Input parameter: p_barcode      商品主條碼
# Return code....: r_prod         商品編號
#                  r_pkg_unit   包裝單位
# Date & Author..: 2015/4/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION aint950_barcode_val(p_barcode)
   DEFINE p_barcode      LIKE imay_t.imay003
   DEFINE r_prod         LIKE imay_t.imay001
   DEFINE r_pkg_unit     LIKE imay_t.imay004
   
   LET r_prod = ''
   LET r_pkg_unit = ''
   
   SELECT imay001,imay004 
     INTO r_prod,r_pkg_unit
     FROM imay_t
    WHERE imayent = g_enterprise
      AND imay003 = p_barcode
      AND imaystus = 'Y'
      
   IF SQLCA.sqlcode THEN   
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "Select error: ",p_barcode
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.popup  = TRUE 
      CALL cl_err()   
   END IF   
   RETURN r_prod,r_pkg_unit
END FUNCTION]]>
  </point>
  <point name="function.aint950_prod_val" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 依商品編號帶值商品條碼,庫存單位
# Memo...........:
# Usage..........: CALL aint950_prod_val(p_product)
#                  RETURNING r_prod, r_store_unit
# Input parameter: p_product      商品編號
# Return code....: r_barcode      商品主條碼
#                  r_store_unit   庫存單位
# Date & Author..: 2015/4/30 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION aint950_prod_val(p_product)
   DEFINE p_product      LIKE imaa_t.imaa001
   DEFINE r_barcode      LIKE imaa_t.imaa014
   DEFINE r_store_unit   LIKE imaa_t.imaa104
   
   LET r_barcode = ''
   LET r_store_unit = ''
   
   SELECT imaa014,imaa104
     INTO r_barcode,r_store_unit
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = p_product
      AND imaastus = 'Y'
      
   IF SQLCA.sqlcode THEN   
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "Select error: ",p_product
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.popup  = TRUE 
      CALL cl_err()   
   END IF   
   RETURN r_barcode,r_store_unit
END FUNCTION]]>
  </point>
  <point name="function.aint950_comp_qty_default" order="4" ver="1" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取得明細商品預設數量
# Memo...........:
# Usage..........: CALL aint950_comp_qty_default()
# Date & Author..: 2015/05/05 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION aint950_comp_qty_default()
   DEFINE l_qty       LIKE inqc_t.inqc005
   DEFINE l_rtdn006   LIKE rtdn_t.rtdn006   #組成用量
   DEFINE l_rtdn007   LIKE rtdn_t.rtdn007   #主件底數
   
   LET l_qty = ''
   LET l_rtdn006 = ''
   LET l_rtdn007 = ''
   
   SELECT rtdn006,rtdn007
     INTO l_rtdn006,l_rtdn007
     FROM rtdn_t,rtdm_t
    WHERE rtdnent = rtdment
      AND rtdn001 = rtdm001
      AND rtdnent = g_enterprise
      AND rtdn001 = g_inqb_d[g_detail_idx].inqb002
      AND rtdn002 = g_inqb2_d[l_ac].inqc002  
      AND rtdn002 = g_inqb2_d[l_ac].inqc002  
      AND rtdn005 = g_inqb2_d[l_ac].inqc004                            #明細商品單位
      AND g_inqa_m.inqadocdt >= COALESCE(rtdn011,g_inqa_m.inqadocdt)   #生效日期
      AND g_inqa_m.inqadocdt <= COALESCE(rtdn012,g_inqa_m.inqadocdt)   #失效日期
      AND rtdm004 = g_inqb_d[g_detail_idx].inqb004                     #主商品單位      
      AND rtdmstus = 'Y'
   
   IF NOT cl_null(l_rtdn006) AND NOT cl_null(l_rtdn007) THEN
      #主商品數量(inqb005) * 組成用量/主件底數
      LET l_qty = g_inqb_d[g_detail_idx].inqb005 * (l_rtdn006/l_rtdn007)
   END IF
   
   IF cl_null(l_qty) THEN
      LET l_qty = 0
   END IF
   
   LET g_inqb2_d[l_ac].inqc005 = l_qty
END FUNCTION]]>
  </point>
  <point name="function.aint950_set_required_b" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 設定必填欄位
# Memo...........:
# Usage..........: CALL aint950_set_required_b()
# Date & Author..: 2015/05/10 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION aint950_set_required_b()
   DEFINE l_imaa005         LIKE imaa_t.imaa005
   DEFINE l_imaf055         LIKE imaf_t.imaf055
   DEFINE l_imaf061         LIKE imaf_t.imaf061
   DEFINE l_inaa007         LIKE inaa_t.inaa007
   DEFINE l_success         LIKE type_t.num5       #150427-00001#8 150527 by lori522612 add
   DEFINE l_set_required    LIKE type_t.num5       #150427-00001#8 150527 by lori522612 add
   
   IF g_aw = "s_detail1" THEN
      IF g_detail_idx > 0 THEN
         IF NOT cl_null(g_inqb_d[g_detail_idx].inqb002) THEN
            LET l_imaa005 = ''
            LET l_imaf055 = ''
            LET l_imaf061 = ''
            
            CALL aint950_get_prod_info(g_inqb_d[g_detail_idx].inqb002)
               RETURNING l_imaa005,l_imaf055,l_imaf061 
               
            #批號
            #150427-00001#8 150527 by lori522612 mark and add---(S)
            #IF l_imaf061 = '1' THEN
            #   CALL cl_set_comp_required("inqb008",TRUE)     
            #END IF
            LET l_success = ''     
            LET l_set_required = '' 
            
            CALL s_lot_out_required(g_inqb_d[g_detail_idx].inqb002) RETURNING l_success,l_set_required
            IF l_success THEN
               CALL cl_set_comp_required("inqb008",l_set_required)
            END IF             
            #150427-00001#8 150527 by lori522612 mark and add---(E)
            
            #庫存管理特徵
            IF l_imaf055 = '1' THEN
               CALL cl_set_comp_required("inqb009",TRUE)         
            END IF   
         END IF      
         
         IF NOT cl_null(g_inqb_d[g_detail_idx].inqb006) THEN
            LET l_inaa007 = ''
            CALL aint950_get_store_info(g_inqb_d[g_detail_idx].inqb006) RETURNING l_inaa007
            
            IF l_inaa007 <> '5' THEN
               CALL cl_set_comp_required("inqb007",TRUE)         
            END IF
         END IF
      END IF
   END IF
   
   IF g_aw = "s_detail2" THEN
      IF g_detail_idx2 > 0 THEN
         IF NOT cl_null(g_inqb2_d[g_detail_idx2].inqc002) THEN
            LET l_imaa005 = ''
            LET l_imaf055 = ''
            LET l_imaf061 = ''
            
            CALL aint950_get_prod_info(g_inqb2_d[g_detail_idx2].inqc002)
               RETURNING l_imaa005,l_imaf055,l_imaf061 
               
            #批號
            #150427-00001#8 150527 by lori522612 mark and add---(S)
            #IF l_imaf061 = '1' THEN
            #   CALL cl_set_comp_required("inqc008",TRUE)     
            #END IF
            LET l_success = ''     
            LET l_set_required = '' 
            
            CALL s_lot_out_required(g_inqb2_d[g_detail_idx2].inqc002) RETURNING l_success,l_set_required
            IF l_success THEN
               CALL cl_set_comp_required("inqc008",l_set_required)
            END IF             
            #150427-00001#8 150527 by lori522612 mark and add---(E)
            
            #庫存管理特徵
            IF l_imaf055 = '1' THEN
               CALL cl_set_comp_required("inqc009",TRUE)         
            END IF   
         END IF

         IF NOT cl_null(g_inqb2_d[g_detail_idx2].inqc006) THEN
            LET l_inaa007 = ''
            CALL aint950_get_store_info(g_inqb2_d[g_detail_idx2].inqc006) RETURNING l_inaa007
            
            IF l_inaa007 <> '5' THEN
               CALL cl_set_comp_required("inqc007",TRUE)         
            END IF
         END IF 
      END IF   
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.aint950_set_no_required_b" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 設定非必填欄位
# Memo...........:
# Usage..........: CALL aint950_set_no_required_b()
# Date & Author..: 2015/05/10 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION aint950_set_no_required_b()
   IF g_aw = "s_detail1" THEN
      IF g_detail_idx > 0 THEN            
         CALL cl_set_comp_required("inqb007,inqb008,inqb009",FALSE)    
      END IF
   END IF
   
   IF g_aw = "s_detail2" THEN
      IF g_detail_idx2 > 0 THEN
         CALL cl_set_comp_required("inqc007,inqc008,inqc009",FALSE)    
      END IF   
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.aint950_get_prod_info" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取得商品資訊
# Memo...........:
# Usage..........: CALL aint950_get_prod_info(p_imaa001)
#                  RETURNING r_imaa005,r_imaf055,r_imaf061
# Input parameter: p_imaa001     商品編號
# Return code....: r_imaa005     特徵組別
#                  r_imaf055     庫存管理特徵管控方式
#                  r_imaf061     批號管控方式
# Date & Author..: 2015/05/10 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION aint950_get_prod_info(p_imaa001)
   DEFINE p_imaa001 LIKE imaa_t.imaa001
   DEFINE r_imaa005 LIKE imaa_t.imaa005
   DEFINE r_imaf055 LIKE imaf_t.imaf055
   DEFINE r_imaf061 LIKE imaf_t.imaf061
   
   LET r_imaa005 = ''
   LET r_imaf055 = ''
   LET r_imaf061 = ''
   
   SELECT imaa005,imaf055,imaf061
     INTO r_imaa005,r_imaf055,r_imaf061         
     FROM imaa_t LEFT JOIN imaf_t ON imafent = imaaent AND imafsite = 'ALL' AND imaf001 = imaa001
    WHERE imaaent = g_enterprise
      AND imaa001 = p_imaa001
   
   RETURN r_imaa005,r_imaf055,r_imaf061
END FUNCTION]]>
  </point>
  <point name="function.aint950_get_store_info" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取庫位資訊
# Memo...........:
# Usage..........: CALL aint950_get_store_info(p_inaa001)
#                  RETURNING r_inaa007
# Input parameter: p_inaa001      庫位編號
# Return code....: r_inaa007      儲位管控方式
# Date & Author..: 2015/05/10 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION aint950_get_store_info(p_inaa001)
   DEFINE p_inaa001   LIKE inaa_t.inaa001
   DEFINE r_inaa007   LIKE inaa_t.inaa007
   
   LET r_inaa007 = ''
   
   SELECT inaa007 INTO r_inaa007
     FROM inaa_t
    WHERE inaaent = g_enterprise
      AND inaasite = g_inqa_m.inqasite
      AND inaa001 = p_inaa001
      
   RETURN r_inaa007
END FUNCTION]]>
  </point>
  <point name="function.aint950_post_input" order="8" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 出貨單過帳Input
# Memo...........:
# Usage..........: CALL aint950_post_input()
#                  RETURNING r_success
# Return code....: r_success   處理狀況
# Date & Author..: 2015/05/05 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION aint950_post_input()
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_para_data     LIKE type_t.chr80          #接參數用
   
   LET r_success = TRUE
   
   INPUT BY NAME g_inqa_m.inqa001 ATTRIBUTE(WITHOUT DEFAULTS)

      BEFORE INPUT
         IF cl_null(g_inqa_m.inqa001) THEN
            LET g_inqa_m.inqa001 = g_today
         END IF
         DISPLAY BY NAME g_inqa_m.inqa001
         LET g_inqa_m_t.inqa001 = g_inqa_m.inqa001

      AFTER FIELD inqa001
         IF NOT cl_null(g_inqa_m.inqa001) THEN
            IF g_inqa_m.inqa001 < g_inqa_m.inqadocdt THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00267'   #扣帳日期不可小於單據日期！
               LET g_errparam.extend = g_inqa_m.inqa001
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_inqa_m.inqa001 = g_inqa_m_t.inqa001
               DISPLAY BY NAME g_inqa_m.inqa001
               NEXT FIELD CURRENT
            END IF
         
            CALL cl_get_para(g_enterprise,g_inqa_m.inqasite,'S-MFG-0031') RETURNING l_para_data
            IF g_inqa_m.inqa001 <= l_para_data THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'axm-00077'   #扣帳日期小於關帳日期，請重新輸入！
               LET g_errparam.extend = g_inqa_m.inqa001
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_inqa_m.inqa001 = g_inqa_m_t.inqa001
               DISPLAY BY NAME g_inqa_m.inqa001
               NEXT FIELD CURRENT
            END IF
         END IF
            
     AFTER INPUT
         IF INT_FLAG THEN
            EXIT INPUT
         END IF

         ON ACTION accept
            ACCEPT INPUT

         ON ACTION cancel
            LET INT_FLAG = TRUE
            EXIT INPUT

         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT INPUT

         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT INPUT

   END INPUT

   IF INT_FLAG THEN
      LET INT_FLAG = FALSE
      LET r_success = FALSE
      RETURN r_success
   END IF

   UPDATE inqa_t
      SET inqa001 = g_inqa_m.inqa001
    WHERE inqaent = g_enterprise
      AND inqadocno = g_inqa_m.inqadocno    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE inqa_t ERROR:"
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET r_success = FALSE
      RETURN r_success
   END IF
  
   RETURN r_success  
END FUNCTION]]>
  </point>
  <point name="function.aint950_prod_bom_val" order="9" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取得商品組成用量資訊
# Memo...........:
# Usage..........: CALL aint950_prod_bom_val()
#                  RETURNING r_success
# Return code....: r_success   處理狀況
# Date & Author..: 2015/05/05 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION aint950_prod_bom_val()
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_sql       STRING   
   DEFINE l_err_cnt   LIKE type_t.num5
   DEFINE l_rtdm004   LIKE rtdm_t.rtdm004
   DEFINE l_rtdn001   LIKE rtdn_t.rtdn001
   DEFINE l_rtdn003   LIKE rtdn_t.rtdn003
   DEFINE l_rtdn002   LIKE rtdn_t.rtdn002
   DEFINE l_rtdn005   LIKE rtdn_t.rtdn005
   DEFINE l_rtdn006   LIKE rtdn_t.rtdn006
   DEFINE l_rtdn007   LIKE rtdn_t.rtdn007
   DEFINE l_imaa014   LIKE imaa_t.imaa014
   DEFINE l_prod_qty  LIKE inqc_t.inqc005
   DEFINE l_ass_qty   LIKE inqc_t.inqc005
   DEFINE l_comp_qty  LIKE inqc_t.inqc005
   DEFINE l_seq1      LIKE type_t.num5
   DEFINE l_idx2_t    LIKE type_t.num5
   DEFINE l_inqc004   LIKE inqc_t.inqc004
   DEFINE l_inqc005   LIKE inqc_t.inqc005  
   DEFINE l_single    LIKE type_t.chr1   
   
   LET r_success = TRUE
   LEt l_rtdm004 = ''
   LET l_rtdn001 = ''
   LET l_rtdn003 = ''
   LET l_rtdn002 = ''
   LET l_rtdn005 = ''
   LET l_rtdn006 = ''
   LET l_rtdn007 = ''
   LET l_imaa014 = ''
   LET l_single  = ''
   
   IF g_detail_idx2 > 0 THEN
      IF NOT cl_null(g_inqb2_d[g_detail_idx2].inqc002) AND NOT cl_null(g_inqb2_d[g_detail_idx2].inqc004) THEN
         LET l_single = 'Y'
      END IF
   END IF

   IF g_detail_idx <= 0 OR cl_null(g_detail_idx) THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   LET l_sql = "SELECT rtdm004 ", 
               "  FROM rtdm_t ",
               " WHERE rtdment = ",g_enterprise,
               "   AND rtdm001 = ? ",
               "   AND rtdmstus = 'Y'"      
   PREPARE aint950_get_ass_unit FROM l_sql

   LET l_sql = "SELECT inqc004,inqc005 ",
               "  FROM inqc_t ",
               " WHERE inqcent = ",g_enterprise,
               "  AND inqcdocno = '",g_inqa_m.inqadocno,"' ",
               "  AND inqcseq = ",g_inqb_d[g_detail_idx].inqbseq,
               "  AND inqc002 = ? "
   PREPARE aint950_get_inqc_info FROM l_sql            
               
   LET l_sql = "  SELECT rtdn001,rtdn003,rtdn002,rtdn005,rtdn006,rtdn007,imaa014 ",
               "    FROM rtdn_t,imaa_t ",
               "   WHERE rtdnent = imaaent ",
               "     AND rtdn003 = imaa001 ",
               "     AND rtdnent = ",g_enterprise,
               "     AND ? BETWEEN COALESCE(rtdn011,?) AND COALESCE(rtdn012,?) ",
               "   START WITH rtdn001 = '",g_inqb_d[g_detail_idx].inqb002,"' ",
               " CONNECT BY PRIOR rtdn003 = rtdn001 "
   PREPARE aint950_get_bom_pre FROM l_sql
   DECLARE aint950_get_bom_cur CURSOR FOR aint950_get_bom_pre
   DISPLAY "BOM SQL: ",l_sql 
   
   LET l_sql = "  SELECT rtdn001,rtdn003,rtdn002,rtdn005,rtdn006,rtdn007,imaa014 ",
               "    FROM rtdn_t,imaa_t ",
               "   WHERE rtdnent = imaaent ",
               "     AND rtdn003 = imaa001 ",
               "     AND rtdnent = ",g_enterprise,
               "     AND rtdn001 = '",g_inqb_d[g_detail_idx].inqb002,"' ",
               "     AND rtdn003 = ? ",
               "     AND rtdn005 = ? ",
               "     AND ? BETWEEN COALESCE(rtdn011,?) AND COALESCE(rtdn012,?) "
   PREPARE aint950_get_bom_single FROM l_sql

   #取得主商品組成用量表的單位
   EXECUTE aint950_get_ass_unit USING g_inqb_d[g_detail_idx].inqb002
                                INTO l_rtdm004
   IF cl_null(l_rtdm004) THEN    #查無產品組成用量表
      RETURN r_success
   ELSE
      LET l_prod_qty = 0
      #單位不同時,需先進行主商品的單位轉換
      IF l_rtdm004 = g_inqb_d[g_detail_idx].inqb004 THEN
         LET l_prod_qty = g_inqb_d[g_detail_idx].inqb005
      ELSE
         LET l_success = ''
         CALL s_aooi250_convert_qty(g_inqb_d[g_detail_idx].inqb002,
                                    g_inqb_d[g_detail_idx].inqb004,
                                    l_rtdm004,
                                    g_inqb_d[g_detail_idx].inqb005)
                        RETURNING l_success,l_prod_qty
         IF NOT l_success THEN
            LET r_success = FALSE
            RETURN r_success
         END IF         
      END IF
   END IF
   
   IF l_prod_qty = 0 THEN
      RETURN r_success
   END IF
   
   IF l_single = 'Y' THEN
      EXECUTE aint950_get_bom_single USING g_inqb2_d[l_ac].inqc002,g_inqb2_d[l_ac].inqc004,
                                           g_inqa_m.inqadocdt,g_inqa_m.inqadocdt,g_inqa_m.inqadocdt
                                     INTO l_rtdn001,l_rtdn003,l_rtdn002,l_rtdn005,l_rtdn006,   
                                          l_rtdn007,l_imaa014 
      IF NOT cl_null(l_rtdn006) AND NOT cl_null(l_rtdn007) THEN
         #主商品數量(inqb005) * 組成用量/主件底數
         LET g_inqb2_d[l_ac].inqc005 = l_prod_qty * (l_rtdn006/l_rtdn007)
         DISPLAY BY NAME g_inqb2_d[g_detail_idx2].inqc005
      END IF      
   ELSE
      IF cl_null(g_detail_idx2) OR g_detail_idx2 = 0 THEN
         LET g_detail_idx2 = 1
      END IF
      
      LET l_idx2_t = g_detail_idx2
      
      FOREACH aint950_get_bom_cur USING g_inqa_m.inqadocdt,g_inqa_m.inqadocdt,g_inqa_m.inqadocdt
                                  INTO l_rtdn001,l_rtdn003,l_rtdn002,l_rtdn005,l_rtdn006,   
                                       l_rtdn007,l_imaa014
         LET l_comp_qty = 0
         
         #主商品數量(inqb005) * 組成用量/主件底數
         DISPLAY "Assembly: ",l_rtdn001,"   Component: ",l_rtdn003   #背景顯示：主商品&子商品
         IF l_rtdn001 = g_inqb_d[g_detail_idx].inqb002 THEN
            LET l_comp_qty = l_prod_qty * (l_rtdn006/l_rtdn007)   
         ELSE
            LET l_rtdm004 = ''
            LET l_inqc004 = ''
            LET l_inqc005 = ''
            LET l_success = ''
            LET l_ass_qty = 0
            
            EXECUTE aint950_get_ass_unit USING l_rtdn001
                                         INTO l_rtdm004
            
            EXECUTE aint950_get_inqc_info USING l_rtdn001
                                          INTO l_inqc004,l_inqc005
            IF l_rtdm004 <> l_inqc004 THEN
               CALL s_aooi250_convert_qty(l_rtdn001,
                                          l_inqc004,
                                          l_rtdm004,
                                          l_inqc005)
                              RETURNING l_success,l_ass_qty
               IF NOT l_success THEN
                  LET r_success = FALSE
                  EXIT FOREACH
               END IF
      
               LET l_comp_qty = l_ass_qty * (l_rtdn006/l_rtdn007)   
            END IF         
         END IF 
      
         #項序
         LET l_seq1 = 0
         
         SELECT MAX(inqcseq1) INTO l_seq1
           FROM inqc_t
          WHERE inqcent = g_enterprise
            AND inqcdocno =  g_inqa_m.inqadocno
            AND inqcseq = g_inqb_d[g_detail_idx].inqbseq
         IF cl_null(l_seq1) THEN
            LET l_seq1 = 0
         END IF
         
         LET g_inqb2_d[g_detail_idx2].inqcseq1 = l_seq1 + 1
         
         LET g_inqb2_d[g_detail_idx2].inqc001  = l_imaa014
         LET g_inqb2_d[g_detail_idx2].inqc002  = l_rtdn003
         LET g_inqb2_d[g_detail_idx2].inqc003  = ' '
         LET g_inqb2_d[g_detail_idx2].inqc004  = l_rtdn005
         LET g_inqb2_d[g_detail_idx2].inqc005  = l_comp_qty
         LET g_inqb2_d[g_detail_idx2].inqc006  = ''
         LET g_inqb2_d[g_detail_idx2].inqc007  = ' '
         LET g_inqb2_d[g_detail_idx2].inqc008  = ' '
         IF g_argv[1] = '2' THEN
            LET g_inqb2_d[g_detail_idx2].inqc009  = g_inqb_d[g_detail_idx].inqb009
         ELSE
            LET g_inqb2_d[g_detail_idx2].inqc009  = ' '
         END IF
         LET g_inqb2_d[g_detail_idx2].inqc010  = ' '           
         LET g_inqb2_d[g_detail_idx2].inqcsite = g_inqa_m.inqasite
         LET g_inqb2_d[g_detail_idx2].inqcunit = g_inqa_m.inqasite
         
         #IF g_detail_idx2 = 1 THEN      
         #   CALL s_desc_get_item_desc(g_inqb2_d[g_detail_idx2].inqc002)
         #      RETURNING g_inqb2_d[g_detail_idx2].inqc002_desc,g_inqb2_d[g_detail_idx2].inqc002_desc_desc
         #   LET g_inqb2_d[g_detail_idx2].inqc004_desc = s_desc_get_unit_desc(g_inqb2_d[g_detail_idx2].inqc004) 
         #   
         #   DISPLAY BY NAME g_inqb2_d[g_detail_idx2].inqcseq1,g_inqb2_d[g_detail_idx2].inqc001,g_inqb2_d[g_detail_idx2].inqc002,
         #                   g_inqb2_d[g_detail_idx2].inqc003,g_inqb2_d[g_detail_idx2].inqc004,g_inqb2_d[g_detail_idx2].inqc005,
         #                   g_inqb2_d[g_detail_idx2].inqc006,g_inqb2_d[g_detail_idx2].inqc007,g_inqb2_d[g_detail_idx2].inqc008,
         #                   g_inqb2_d[g_detail_idx2].inqc009,g_inqb2_d[g_detail_idx2].inqc010,
         #                   g_inqb2_d[g_detail_idx2].inqc002_desc ,g_inqb2_d[g_detail_idx2].inqc002_desc_desc,
         #                   g_inqb2_d[g_detail_idx2].inqc004_desc
         #ELSE   
            INITIALIZE gs_keys TO NULL 
            LET gs_keys[1] = g_inqa_m.inqadocno
            LET gs_keys[2] = g_inqb_d[g_detail_idx].inqbseq
            LET gs_keys[3] = g_inqb2_d[g_detail_idx2].inqcseq1
            CALL aint950_insert_b('inqc_t',gs_keys,"'2'")
         #END IF
         
         LET g_detail_idx2 = g_detail_idx2 + 1
      END FOREACH
      
      LET g_detail_idx2 = l_idx2_t
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.aint950_b_fill3" order="10" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 顯示所有組合商品明細
# Memo...........:
# Usage..........: CALL aint950_b_fill3()
# Date & Author..: 2015/05/05 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION aint950_b_fill3()
   DEFINE li_ac           LIKE type_t.num10
   LET li_ac = l_ac 
   
   IF cl_null(g_inqa_m.inqadocno) THEN
      RETURN
   END IF
   
   CALL g_inqb3_d.clear()
   
   LET g_sql = "SELECT UNIQUE inqbseq,inqcseq1, ",
               "              inqb001,inqb002,      t1.imaal003,  t1.imaal004,  inqb003, ",
               "              inqb004,t2.oocal003,  inqb005,      inqb006,      t3.inayl003, ",
               "              inqb007,t4.inab003,   inqb008,      inqb009, ",
               "              inqc001,inqc002,      inqc002_desc, inqc002_desc1,inqc003, ",
               "              inqc004,inqc004_desc, inqc005,      inqc006,      inqc006_desc, ",
               "              inqc007,inqc007_desc, inqc008,      inqc009 ",
               "  FROM inqb_t ",
               "       LEFT JOIN imaal_t t1 ON t1.imaalent = ",g_enterprise," AND t1.imaal001 = inqb002  AND t1.imaal002 =' ",g_dlang,"' ",
               "       LEFT JOIN oocal_t t2 ON t2.oocalent = ",g_enterprise," AND t2.oocal001 = inqb004  AND t2.oocal002 =' ",g_dlang,"' ",
               "       LEFT JOIN inayl_t t3 ON t3.inaylent = ",g_enterprise," AND t3.inayl001 = inqb006  AND t3.inayl002 =' ",g_dlang,"' ",
               "       LEFT JOIN inab_t  t4 ON t4.inabent  = ",g_enterprise," AND t4.inabsite = inqbsite AND t4.inab001  = inqb006 AND t4.inab002 = inqb007 ",               
               "       LEFT JOIN (SELECT inqcent,inqcdocno,  inqcseq,                  inqcseq1, ",
               "                         inqc001,inqc002,    t5.imaal003 inqc002_desc ,t5.imaal004 inqc002_desc1,inqc003, ",
               "                         inqc004,t6.oocal003 inqc004_desc,             inqc005,    inqc006,      t7.inayl003 inqc006_desc, ",
               "                         inqc007,t8.inab003  inqc007_desc,             inqc008,    inqc009 ",
               "                    FROM inqc_t ",
               "                         LEFT JOIN imaal_t t5 ON t5.imaalent = ",g_enterprise," AND t5.imaal001 = inqc002  AND t5.imaal002 = '",g_dlang,"' ",
               "                         LEFT JOIN oocal_t t6 ON t6.oocalent = ",g_enterprise," AND t6.oocal001 = inqc004  AND t6.oocal002 = '",g_dlang,"' ",
               "                         LEFT JOIN inayl_t t7 ON t7.inaylent = ",g_enterprise," AND t7.inayl001 = inqc006  AND t7.inayl002 = '",g_dlang,"' ",
               "                         LEFT JOIN inab_t  t8 ON t8.inabent  = ",g_enterprise," AND t8.inabsite = inqcsite AND t8.inab001  = inqc006 AND t8.inab002  =  inqc007) ",
               "              ON inqbent = inqcent AND inqbdocno = inqcdocno AND inqbseq = inqcseq ", 
               " WHERE inqbent  = ? AND inqbdocno = ? ",
               " ORDER BY inqbseq,inqcseq1 " 
   LET g_sql = cl_sql_add_mask(g_sql)       
   PREPARE aint950_pb3 FROM g_sql
   DECLARE b_fill_curs3 CURSOR FOR aint950_pb3
   
   OPEN b_fill_curs3 USING g_enterprise,g_inqa_m.inqadocno
   LET l_ac = 1
   FOREACH b_fill_curs3 INTO g_inqb3_d[l_ac].inqbseq_1,     g_inqb3_d[l_ac].inqcseq1_1,
                             g_inqb3_d[l_ac].inqb001_1,     g_inqb3_d[l_ac].inqb002_1,
                             g_inqb3_d[l_ac].inqb002_1_desc,g_inqb3_d[l_ac].inqb002_1_desc_desc,   
                             g_inqb3_d[l_ac].inqb003_1,     g_inqb3_d[l_ac].inqb004_1,           g_inqb3_d[l_ac].inqb004_1_desc,
                             g_inqb3_d[l_ac].inqb005_1,     g_inqb3_d[l_ac].inqb006_1,           g_inqb3_d[l_ac].inqb006_1_desc,
                             g_inqb3_d[l_ac].inqb007_1,     g_inqb3_d[l_ac].inqb007_1_desc,      g_inqb3_d[l_ac].inqb008_1, 
                             g_inqb3_d[l_ac].inqb009_1,   
                             g_inqb3_d[l_ac].inqc001_1,     g_inqb3_d[l_ac].inqc002_1,
                             g_inqb3_d[l_ac].inqc002_1_desc,g_inqb3_d[l_ac].inqc002_1_desc_desc,   
                             g_inqb3_d[l_ac].inqc003_1,     g_inqb3_d[l_ac].inqc004_1,           g_inqb3_d[l_ac].inqc004_1_desc,
                             g_inqb3_d[l_ac].inqc005_1,     g_inqb3_d[l_ac].inqc006_1,           g_inqb3_d[l_ac].inqc006_1_desc,
                             g_inqb3_d[l_ac].inqc007_1,     g_inqb3_d[l_ac].inqc007_1_desc,      g_inqb3_d[l_ac].inqc008_1, 
                             g_inqb3_d[l_ac].inqc009_1 
                             
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
      
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = l_ac
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
      
      LET l_ac = l_ac + 1
      
   END FOREACH
   
   CALL g_inqb3_d.deleteElement(g_inqb3_d.getLength())
   
   LET g_inqb3_d_mask_o.* =  g_inqb3_d.*
   FOR l_ac = 1 TO g_inqb3_d.getLength()
      LET g_inqb3_d_mask_o[l_ac].* =  g_inqb3_d[l_ac].*
      LET g_inqb3_d_mask_n[l_ac].* =  g_inqb3_d[l_ac].*
   END FOR
    
   LET l_ac = li_ac   
END FUNCTION]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="b_fill2.fill2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CASE g_argv[1]
      WHEN '1'   #aint950 
         LET l_wc = l_wc, " AND inqa000 = '1' "      
      WHEN '2'   #aint951
         LET l_wc = l_wc, " AND inqa000 = '2' "           
   END CASE
   
   CALL s_aooi500_sql_where(g_prog,'inqasite') RETURNING l_where
   LET l_wc = l_wc, " AND ",l_where]]>
  </point>
  <point name="browser_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_where           STRING]]>
  </point>
  <point name="construct.c.inqa002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqa002  #顯示到畫面上
            NEXT FIELD inqa002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inqa003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_today
            
            CALL q_ooeg001()                      
            DISPLAY g_qryparam.return1 TO inqa003  
            NEXT FIELD inqa003                  ]]>
  </point>
  <point name="construct.c.inqa004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_inqa004_acc
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqa004  #顯示到畫面上
            NEXT FIELD inqa004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inqa005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inbadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqa005  #顯示到畫面上
            NEXT FIELD inqa005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inqa006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inbadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqa006  #顯示到畫面上
            NEXT FIELD inqa006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inqacnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqacnfid  #顯示到畫面上
            NEXT FIELD inqacnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inqacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqacrtdp  #顯示到畫面上
            NEXT FIELD inqacrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inqacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqacrtid  #顯示到畫面上
            NEXT FIELD inqacrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inqadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_argv[1]
            
            CALL q_inqadocno()                         
            
            DISPLAY g_qryparam.return1 TO inqadocno  
            NEXT FIELD inqadocno                   ]]>
  </point>
  <point name="construct.c.inqamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqamodid  #顯示到畫面上
            NEXT FIELD inqamodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inqaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqaowndp  #顯示到畫面上
            NEXT FIELD inqaowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inqaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqaownid  #顯示到畫面上
            NEXT FIELD inqaownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inqapstid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqapstid  #顯示到畫面上
            NEXT FIELD inqapstid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inqasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'inqasite',g_inqa_m.inqasite,'c')
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqasite  #顯示到畫面上
            NEXT FIELD inqasite                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.inqb001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            
            CALL q_imay001_1()        
            
            DISPLAY g_qryparam.return1 TO inqb001  
            NEXT FIELD inqb001                    ]]>
  </point>
  <point name="construct.c.page1.inqb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = 'ALL'
            
            CALL q_imaf001_18()        
            
            DISPLAY g_qryparam.return1 TO inqb002  
            NEXT FIELD inqb002            ]]>
  </point>
  <point name="construct.c.page1.inqb003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CASE g_argv[1] 
               WHEN '1'  #aint950
                  LET g_qryparam.arg1 = '1'
               WHEN '2'  #aint951
                  LET g_qryparam.arg1 = '2'
            END CASE
            
            CALL q_inqb003()        
            
            DISPLAY g_qryparam.return1 TO inqb002  
            NEXT FIELD inqb002  ]]>
  </point>
  <point name="construct.c.page1.inqb004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            
            CALL q_ooca001_1()    
            
            DISPLAY g_qryparam.return1 TO inqb004  
            NEXT FIELD inqb004        ]]>
  </point>
  <point name="construct.c.page1.inqb006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            
            CALL q_inaa001_1()            
            
            DISPLAY g_qryparam.return1 TO inqb006  
            NEXT FIELD inqb006                     ]]>
  </point>
  <point name="construct.c.page1.inqb007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            
            CALL q_inab002_3()   
            
            DISPLAY g_qryparam.return1 TO inqb007  
            NEXT FIELD inqb007              ]]>
  </point>
  <point name="construct.c.page2.inqc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            
            CALL q_imay001_1()            
            
            DISPLAY g_qryparam.return1 TO inqc001  
            NEXT FIELD inqc001                 ]]>
  </point>
  <point name="construct.c.page2.inqc002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = 'ALL'
            
            CALL q_imaf001_18()                          
            
            DISPLAY g_qryparam.return1 TO inqc002              
            NEXT FIELD inqc002                  ]]>
  </point>
  <point name="construct.c.page2.inqc004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            
            CALL q_ooca001_1()     
            
            DISPLAY g_qryparam.return1 TO inqc004  
            NEXT FIELD inqc004                    ]]>
  </point>
  <point name="construct.c.page2.inqc006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            
            CALL q_inaa001_1()            
            
            DISPLAY g_qryparam.return1 TO inqc006  
            NEXT FIELD inqc006 ]]>
  </point>
  <point name="construct.c.page2.inqc007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            
            CALL q_inab002_3()   
            
            DISPLAY g_qryparam.return1 TO inqc007 
            NEXT FIELD inqc007                  ]]>
  </point>
  <point name="construct.c.page3.inqb001_1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtdx002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqb001_1  #顯示到畫面上
            NEXT FIELD inqb001_1                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.inqb002_1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqb002_1  #顯示到畫面上
            NEXT FIELD inqb002_1                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.inqb004_1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqb004_1  #顯示到畫面上
            NEXT FIELD inqb004_1                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.inqb006_1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqb006_1  #顯示到畫面上
            NEXT FIELD inqb006_1                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.inqb007_1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inab002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqb007_1  #顯示到畫面上
            NEXT FIELD inqb007_1                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.inqc001_1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtdx002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqc001_1  #顯示到畫面上
            NEXT FIELD inqc001_1                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.inqc002_1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqc002_1  #顯示到畫面上
            NEXT FIELD inqc002_1                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.inqc006_1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqc006_1  #顯示到畫面上
            NEXT FIELD inqc006_1                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.inqc007_1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inab002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inqc007_1  #顯示到畫面上
            NEXT FIELD inqc007_1                     #返回原欄位
    

]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT s_aooi200_del_docno(g_inqa_m.inqadocno,g_inqa_m.inqadocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
  </point>
  <point name="global.argv" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#argv[1]   type_t.chr10   #作業類型:1.aint950 產品組合 2.aint951 產品拆解]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[ TYPE type_g_inqb3_d   RECORD
    inqbseq_1             LIKE inqb_t.inqbseq,     
    inqcseq1_1            LIKE inqc_t.inqcseq1,
    inqb001_1             LIKE inqb_t.inqb001,     
    inqb002_1             LIKE inqb_t.inqb002,
    inqb002_1_desc        LIKE imaal_t.imaal003,
    inqb002_1_desc_desc   LIKE imaal_t.imaal004,   
    inqb003_1             LIKE inqb_t.inqb003,     
    inqb004_1             LIKE inqb_t.inqb004,     
    inqb004_1_desc        LIKE oocal_t.oocal001,
    inqb005_1             LIKE inqb_t.inqb005,     
    inqb006_1             LIKE inqb_t.inqb006,     
    inqb006_1_desc        LIKE inayl_t.inayl003,
    inqb007_1             LIKE inqb_t.inqb007,     
    inqb007_1_desc        LIKE inab_t.inab003,
    inqb008_1             LIKE inqb_t.inqb008, 
    inqb009_1             LIKE inqb_t.inqb009,    
    inqc001_1             LIKE inqc_t.inqc001,     
    inqc002_1             LIKE inqc_t.inqc002,
    inqc002_1_desc        LIKE imaal_t.imaal003,
    inqc002_1_desc_desc   LIKE imaal_t.imaal004,   
    inqc003_1             LIKE inqc_t.inqc003,     
    inqc004_1             LIKE inqc_t.inqc004,     
    inqc004_1_desc        LIKE oocal_t.oocal001,
    inqc005_1             LIKE inqc_t.inqc005,     
    inqc006_1             LIKE inqc_t.inqc006,     
    inqc006_1_desc        LIKE inayl_t.inayl003,
    inqc007_1             LIKE inqc_t.inqc007,     
    inqc007_1_desc        LIKE inab_t.inab003,
    inqc008_1             LIKE inqc_t.inqc008, 
    inqc009_1             LIKE inqc_t.inqc009
                             END RECORD
DEFINE g_inqb3_d             DYNAMIC ARRAY OF type_g_inqb3_d
DEFINE g_inqb3_d_mask_o      DYNAMIC ARRAY OF type_g_inqb3_d #轉換遮罩前資料
DEFINE g_inqb3_d_mask_n      DYNAMIC ARRAY OF type_g_inqb3_d #轉換遮罩後資料
DEFINE g_ins_site_flag       LIKE type_t.chr1
DEFINE g_inqa004_acc         LIKE gzcb_t.gzcb004]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5 ]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_success = ''
   CALL s_aooi500_create_temp() RETURNING l_success
   
   LET l_success = ''                                               #150427-00001#6 150522 By pomelo add
   CALL s_lot_auto_create_tmp('aint911') RETURNING l_success        #150427-00001#6 150522 By pomelo add
   
   LET l_success = ''                                      #150601-00009#5 1500602 by lori522612 add
   CALL s_aooi390_cre_tmp_table() RETURNING l_success      #150601-00009#5 1500602 by lori522612 add
   
   LET g_errshow = 1   #讓校驗訊息彈窗顯示 ]]>
  </point>
  <point name="input.a.inqa002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inqa_m.inqa002_desc = ' '
            LET g_inqa_m.inqa003_desc = ' '
            DISPLAY BY NAME g_inqa_m.inqa002_desc,g_inqa_m.inqa003_desc
            
            IF NOT cl_null(g_inqa_m.inqa002) THEN
               IF g_inqa_m.inqa002 != g_inqa_m_o.inqa002 OR g_inqa_m_o.inqa002 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_inqa_m.inqa002
                  IF NOT cl_chk_exist("v_ooag001") THEN
                     LET g_inqa_m.inqa002 = g_inqa_m_o.inqa002
                     LET g_inqa_m.inqa003 = g_inqa_m_o.inqa003
                     DISPLAY BY NAME g_inqa_m.inqa002,g_inqa_m.inqa003
                     
                     LET g_inqa_m.inqa002_desc = s_desc_get_person_desc(g_inqa_m.inqa002)   
                     LET g_inqa_m.inqa003_desc = s_desc_get_department_desc(g_inqa_m.inqa003)
                     DISPLAY BY NAME g_inqa_m.inqa002_desc,g_inqa_m.inqa003_desc                     
                     NEXT FIELD CURRENT
                  END IF
                  
                  #帶值：所屬部門   
                  SELECT ooag003 INTO g_inqa_m.inqa003
                    FROM ooag_t
                   WHERE ooagent = g_enterprise
                     AND ooag001 = g_inqa_m.inqa002
                  DISPLAY BY NAME g_inqa_m.inqa003   
               END IF
            END IF
            
            LET g_inqa_m.inqa002_desc  = s_desc_get_person_desc(g_inqa_m.inqa002)   
            LET g_inqa_m.inqa003_desc  = s_desc_get_department_desc(g_inqa_m.inqa003) 
            DISPLAY BY NAME g_inqa_m.inqa002_desc,g_inqa_m.inqa003_desc
            
            LET g_inqa_m_o.inqa002 = g_inqa_m.inqa002
            LET g_inqa_m_o.inqa003 = g_inqa_m.inqa003]]>
  </point>
  <point name="input.a.inqa003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inqa_m.inqa003_desc = ' '
            DISPLAY BY NAME g_inqa_m.inqa003_desc
            
            IF NOT cl_null(g_inqa_m.inqa003) THEN
               IF g_inqa_m.inqa003 != g_inqa_m_o.inqa003 OR g_inqa_m_o.inqa003 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_inqa_m.inqa003
                  IF cl_null(g_inqa_m.inqadocdt) THEN
                     LET g_chkparam.arg2 = g_today
                  ELSE
                     LET g_chkparam.arg2 = g_inqa_m.inqadocdt
                  END IF                  
                  IF NOT cl_chk_exist("v_ooeg001") THEN
                     LET g_inqa_m.inqa003 = g_inqa_m_o.inqa003
                     LET g_inqa_m.inqa003_desc = s_desc_get_department_desc(g_inqa_m.inqa003)
                     DISPLAY BY NAME g_inqa_m.inqa003,g_inqa_m.inqa003_desc   
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            LET g_inqa_m.inqa003_desc  = s_desc_get_department_desc(g_inqa_m.inqa003) 
            DISPLAY BY NAME g_inqa_m.inqa003_desc
            
            LET g_inqa_m_o.inqa003 = g_inqa_m.inqa003]]>
  </point>
  <point name="input.a.inqa004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inqa_m.inqa004_desc = ' '
            DISPLAY BY NAME g_inqa_m.inqa004_desc
            IF NOT cl_null(g_inqa_m.inqa004) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_inqa_m.inqa004 != g_inqa_m_t.inqa004 OR g_inqa_m_t.inqa004 IS NULL )) THEN
                  IF NOT s_azzi650_chk_exist(g_inqa004_acc,g_inqa_m.inqa004) THEN
                     LET g_inqa_m.inqa004 = g_inqa_m_t.inqa004
                     LET g_inqa_m.inqa004_desc = s_desc_get_acc_desc(g_inqa004_acc,g_inqa_m.inqa004) 
                     DISPLAY BY NAME g_inqa_m.inqa004,g_inqa_m.inqa004_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_inqa_m.inqa004_desc = s_desc_get_acc_desc(g_inqa004_acc,g_inqa_m.inqa004) 
            DISPLAY BY NAME g_inqa_m.inqa004_desc]]>
  </point>
  <point name="input.a.inqadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_inqa_m.inqadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_inqa_m.inqadocno != g_inqadocno_t )) THEN 
                  #IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inqa_t WHERE "||"inqaent = '" ||g_enterprise|| "' AND "||"inqadocno = '"||g_inqa_m.inqadocno ||"'",'std-00004',0) THEN 
                  #   NEXT FIELD CURRENT
                  #END IF
                  
                  IF NOT s_aooi200_chk_slip(g_inqa_m.inqasite,'',g_inqa_m.inqadocno,g_prog) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.inqasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inqa_m.inqasite_desc = ' '
            DISPLAY BY NAME g_inqa_m.inqasite_desc
            IF NOT cl_null(g_inqa_m.inqasite) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_inqa_m.inqasite != g_inqa_m_t.inqasite OR g_inqa_m_t.inqasite IS NULL )) THEN
                  CALL s_aooi500_chk(g_prog,'inqasite',g_inqa_m.inqasite,g_inqa_m.inqasite)
                     RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     LET g_inqa_m.inqasite = g_inqa_m_t.inqasite 
                     LET g_inqa_m.inqasite_desc = s_desc_get_department_desc(g_inqa_m.inqasite)
                     DISPLAY BY NAME g_inqa_m.inqasite,g_inqa_m.inqasite_desc
                     
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = ""
                     LET g_errparam.code   = l_errno
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                  
                     NEXT FIELD CURRENT
                  ELSE
                     LET g_ins_site_flag = 'Y'
                  END IF
                  
                  CALL s_arti200_get_def_doc_type(g_inqa_m.inqasite,g_prog,'1')
                     RETURNING l_success,g_inqa_m.inqadocno
                  DISPLAY BY NAME g_inqa_m.inqadocno  
               END IF
            END IF

            LET g_inqa_m.inqasite_desc = s_desc_get_department_desc(g_inqa_m.inqasite)
            DISPLAY BY NAME g_inqa_m.inqasite_desc
                     
            CALL aint950_set_entry(p_cmd)
            CALL aint950_set_no_entry(p_cmd)]]>
  </point>
  <point name="input.a.page1.inqb001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inqb_d[l_ac].inqb002_desc = ''
            LET g_inqb_d[l_ac].inqb002_desc_desc = ''
            DISPLAY BY NAME g_inqb_d[l_ac].inqb002_desc,g_inqb_d[l_ac].inqb002_desc_desc
            
            IF NOT cl_null(g_inqb_d[l_ac].inqb001) THEN
               IF g_inqb_d[l_ac].inqb001 != g_inqb_d_o.inqb001 OR g_inqb_d_o.inqb001 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_inqb_d[l_ac].inqb001
                  IF NOT cl_chk_exist("v_imay003") THEN
                     LET g_inqb_d[l_ac].inqb001 = g_inqb_d_o.inqb001
                     NEXT FIELD CURRENT
                  ELSE
                     INITIALIZE g_chkparam.* TO NULL
                     LET g_chkparam.arg1 = g_inqb_d[l_ac].inqb001
                     LET g_chkparam.arg2 = g_inqa_m.inqasite
                     IF NOT cl_chk_exist("v_rtdx002") THEN
                        LET g_inqb_d[l_ac].inqb001 = g_inqb_d_o.inqb001
                        NEXT FIELD CURRENT
                     ELSE   
                        LET g_inqb_d[l_ac].inqb002 = ''
                        LET g_inqb_d[l_ac].inqb003 = ''
                        LET g_inqb_d[l_ac].inqb004 = ''
                        LET g_inqb_d[l_ac].inqb005 = ''
                        LET g_inqb_d[l_ac].inqb006 = ''
                        LET g_inqb_d[l_ac].inqb007 = ''
                        LET g_inqb_d[l_ac].inqb008 = ''
                        LET g_inqb_d[l_ac].inqb009 = ''                      
                        
                        #帶值：商品編號, 單位
                        CALL aint950_barcode_val(g_inqb_d[l_ac].inqb001) 
                           RETURNING g_inqb_d[l_ac].inqb002,g_inqb_d[l_ac].inqb004 
                     END IF   
                  END IF
               END IF
            END IF

            CALL s_desc_get_item_desc(g_inqb_d[l_ac].inqb002)
               RETURNING g_inqb_d[l_ac].inqb002_desc,g_inqb_d[l_ac].inqb002_desc_desc
            LET g_inqb_d[l_ac].inqb004_desc = s_desc_get_unit_desc(g_inqb_d[l_ac].inqb004)   

            CALL aint950_set_entry_b(l_cmd)
            CALL aint950_set_no_required_b()
            CALL aint950_set_required_b()
            CALL aint950_set_no_entry_b(l_cmd)
            
            LET g_inqb_d_o.inqb001 = g_inqb_d[l_ac].inqb001
            LET g_inqb_d_o.inqb002 = g_inqb_d[l_ac].inqb002
            LET g_inqb_d_o.inqb003 = g_inqb_d[l_ac].inqb003
            LET g_inqb_d_o.inqb004 = g_inqb_d[l_ac].inqb004
            LET g_inqb_d_o.inqb005 = g_inqb_d[l_ac].inqb005
            LET g_inqb_d_o.inqb006 = g_inqb_d[l_ac].inqb006
            LET g_inqb_d_o.inqb007 = g_inqb_d[l_ac].inqb007
            LET g_inqb_d_o.inqb008 = g_inqb_d[l_ac].inqb008
            LET g_inqb_d_o.inqb009 = g_inqb_d[l_ac].inqb009]]>
  </point>
  <point name="input.a.page1.inqb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inqb_d[l_ac].inqb002_desc = ''
            LET g_inqb_d[l_ac].inqb002_desc_desc = ''
            IF NOT cl_null(g_inqb_d[l_ac].inqb002) THEN
               IF g_inqb_d[l_ac].inqb002 != g_inqb_d_o.inqb002 OR g_inqb_d_o.inqb002 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_inqb_d[l_ac].inqb002
                  LET g_chkparam.arg2 = 'ALL'
                  IF NOT cl_chk_exist("v_imaf001_15") THEN
                     LET g_inqb_d[l_ac].inqb002 = g_inqb_d_o.inqb002
                     CALL s_desc_get_item_desc(g_inqb_d[l_ac].inqb002)
                        RETURNING g_inqb_d[l_ac].inqb002_desc,g_inqb_d[l_ac].inqb002_desc_desc
                     NEXT FIELD CURRENT
                  ELSE
                     LET g_inqb_d[l_ac].inqb001 = ''
                     LET g_inqb_d[l_ac].inqb003 = ''
                     LET g_inqb_d[l_ac].inqb004 = ''
                     LET g_inqb_d[l_ac].inqb005 = ''
                     LET g_inqb_d[l_ac].inqb006 = ''
                     LET g_inqb_d[l_ac].inqb007 = ''
                     LET g_inqb_d[l_ac].inqb008 = ''
                     LET g_inqb_d[l_ac].inqb009 = ''
            
                     #帶值：主條碼, 單位
                     CALL aint950_prod_val(g_inqb_d[l_ac].inqb002)
                        RETURNING g_inqb_d[l_ac].inqb001,g_inqb_d[l_ac].inqb004  
                  END IF
               END IF
            END IF
            
            CALL s_desc_get_item_desc(g_inqb_d[l_ac].inqb002)
               RETURNING g_inqb_d[l_ac].inqb002_desc,g_inqb_d[l_ac].inqb002_desc_desc
            LET g_inqb_d[l_ac].inqb004_desc = s_desc_get_unit_desc(g_inqb_d[l_ac].inqb004)     
            
            CALL aint950_set_entry_b(l_cmd)
            CALL aint950_set_no_required_b()
            CALL aint950_set_required_b()
            CALL aint950_set_no_entry_b(l_cmd)
            
            LET g_inqb_d_o.inqb001 = g_inqb_d[l_ac].inqb001
            LET g_inqb_d_o.inqb002 = g_inqb_d[l_ac].inqb002
            LET g_inqb_d_o.inqb003 = g_inqb_d[l_ac].inqb003
            LET g_inqb_d_o.inqb004 = g_inqb_d[l_ac].inqb004
            LET g_inqb_d_o.inqb005 = g_inqb_d[l_ac].inqb005
            LET g_inqb_d_o.inqb006 = g_inqb_d[l_ac].inqb006
            LET g_inqb_d_o.inqb007 = g_inqb_d[l_ac].inqb007
            LET g_inqb_d_o.inqb008 = g_inqb_d[l_ac].inqb008
            LET g_inqb_d_o.inqb009 = g_inqb_d[l_ac].inqb009]]>
  </point>
  <point name="input.a.page1.inqb003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inqb_d[l_ac].inqb003_desc = ''
            DISPLAY BY NAME g_inqb_d[l_ac].inqb003_desc
            
            IF NOT cl_null(g_inqb_d[l_ac].inqb003) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_inqb_d[l_ac].inqb003 != g_inqb_d_t.inqb003 OR g_inqb_d_t.inqb003 IS NULL )) THEN
                  IF NOT s_feature_check(g_inqb_d[l_ac].inqb002,g_inqb_d[l_ac].inqb003) THEN
                     LET g_inqb_d[l_ac].inqb003 = g_inqb_d_t.inqb003
                     CALL s_feature_description(g_inqb_d[l_ac].inqb002,g_inqb_d[l_ac].inqb003) 
                        RETURNING l_success,g_inqb_d[l_ac].inqb003_desc                      
                     NEXT FIELD CURRENT
                  END IF
               END IF
            ELSE
               LET g_inqb_d[l_ac].inqb003 = ' '
            END IF
            
            CALL s_feature_description(g_inqb_d[l_ac].inqb002,g_inqb_d[l_ac].inqb003) 
               RETURNING l_success,g_inqb_d[l_ac].inqb003_desc]]>
  </point>
  <point name="input.a.page1.inqb004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.page1.inqb005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inqb_d[l_ac].inqb005) THEN 
            END IF 

            LET g_inqb_d_o.inqb005 = g_inqb_d[l_ac].inqb005]]>
  </point>
  <point name="input.a.page1.inqb006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inqb_d[l_ac].inqb006_desc = ''
            DISPLAY BY NAME g_inqb_d[l_ac].inqb006_desc
            
            IF NOT cl_null(g_inqb_d[l_ac].inqb006) THEN
               IF g_inqb_d[l_ac].inqb006 != g_inqb_d_o.inqb006 OR g_inqb_d_o.inqb006 IS NULL THEN
                  LET l_success = TRUE
                  CASE g_argv[1]
                     WHEN '1'    #aint950-主商品入庫
                        INITIALIZE g_chkparam.* TO NULL
                        LET g_chkparam.arg1 = g_inqb_d[l_ac].inqb006
                        IF NOT cl_chk_exist("v_inaa001_9") THEN
                           LET l_success = FALSE
                        END IF                         
                     WHEN '2'    #aint951-主商品出庫
                        INITIALIZE g_chkparam.* TO NULL
                        LET g_chkparam.arg1 = g_inqa_m.inqasite
                        LET g_chkparam.arg2 = g_inqb_d[l_ac].inqb006
                        IF NOT cl_chk_exist("v_inaa001") THEN
                           LET l_success = FALSE
                        END IF                    
                  END CASE
                  
                  IF NOT l_success THEN
                     LET g_inqb_d[l_ac].inqb006 = g_inqb_d_o.inqb006
                     LET g_inqb_d[l_ac].inqb006_desc = s_desc_get_stock_desc(g_inqa_m.inqasite,g_inqb_d[l_ac].inqb006)
                     NEXT FIELD CURRENT
                  ELSE
                     LET g_inqb_d[l_ac].inqb007 = ''
                  END IF
               END IF
            END IF
            LET g_inqb_d[l_ac].inqb006_desc = s_desc_get_stock_desc(g_inqa_m.inqasite,g_inqb_d[l_ac].inqb006)
            
            CALL aint950_set_entry_b(l_cmd)
            CALL aint950_set_no_required_b()
            CALL aint950_set_required_b()
            CALL aint950_set_no_entry_b(l_cmd)
            
            LET g_inqb_d_o.inqb006 = g_inqb_d[l_ac].inqb006
            LET g_inqb_d_o.inqb007 = g_inqb_d[l_ac].inqb007
            LET g_inqb_d_o.inqb008 = g_inqb_d[l_ac].inqb008
            LET g_inqb_d_o.inqb009 = g_inqb_d[l_ac].inqb009]]>
  </point>
  <point name="input.a.page1.inqb007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inqb_d[l_ac].inqb007_desc = ''
            DISPLAY BY NAME g_inqb_d[l_ac].inqb007_desc
            
            IF NOT cl_null(g_inqb_d[l_ac].inqb007) THEN 
               IF g_inqb_d[l_ac].inqb007 != g_inqb_d_o.inqb007 OR g_inqb_d_o.inqb007 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_inqa_m.inqasite
                  LET g_chkparam.arg2 = g_inqb_d[l_ac].inqb006
                  LET g_chkparam.arg3 = g_inqb_d[l_ac].inqb007
                  IF NOT cl_chk_exist("v_inab002") THEN
                     LET g_inqb_d[l_ac].inqb007 = g_inqb_d_o.inqb007
                     LET g_inqb_d[l_ac].inqb007_desc = s_desc_get_locator_desc(g_inqa_m.inqasite,g_inqb_d[l_ac].inqb006,g_inqb_d[l_ac].inqb007)
                     NEXT FIELD CURRENT
                  END IF
               END IF
            ELSE
               LET g_inqb_d[l_ac].inqb007 = ' '
            END IF
            
            LET g_inqb_d[l_ac].inqb007_desc = s_desc_get_locator_desc(g_inqa_m.inqasite,g_inqb_d[l_ac].inqb006,g_inqb_d[l_ac].inqb007)

            LET g_inqb_d_o.inqb006 = g_inqb_d[l_ac].inqb006
            LET g_inqb_d_o.inqb007 = g_inqb_d[l_ac].inqb007
            LET g_inqb_d_o.inqb008 = g_inqb_d[l_ac].inqb008
            LET g_inqb_d_o.inqb009 = g_inqb_d[l_ac].inqb009]]>
  </point>
  <point name="input.a.page1.inqb008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inqb_d[l_ac].inqb008) THEN
               #150427-00001#8 150527 by lori522612 add---(S)   
               IF g_inqb_d[l_ac].inqb008 != g_inqb_d_o.inqb008 OR g_inqb_d_o.inqb008 IS NULL THEN
                  IF NOT s_lot_out_chk(g_inqa_m.inqasite,g_inqa_m.inqadocno,
                                       g_inqb_d[l_ac].inqb002,g_inqb_d[l_ac].inqb003,
                                       g_inqb_d[l_ac].inqb008) THEN
                     LET g_inqb_d[l_ac].inqb008 = g_inqb_d_o.inqb008
                     NEXT FIELD CURRENT
                  END IF
               END IF
               #150427-00001#8 150527 by lori522612 add---(E)  
            ELSE
               LET g_inqb_d[l_ac].inqb008 = ' '
            END IF
            
            LET g_inqb_d_o.inqb008 = g_inqb_d[l_ac].inqb008]]>
  </point>
  <point name="input.a.page1.inqb009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_inqb_d[l_ac].inqb009) THEN
               LET g_inqb_d[l_ac].inqb009 = ' '
            END IF
            
            LET g_inqb_d_o.inqb009 = g_inqb_d[l_ac].inqb009]]>
  </point>
  <point name="input.a.page1.inqbseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_inqa_m.inqadocno IS NOT NULL AND g_inqb_d[g_detail_idx].inqbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inqa_m.inqadocno != g_inqadocno_t OR g_inqb_d[g_detail_idx].inqbseq != g_inqb_d_t.inqbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inqb_t WHERE "||"inqbent = '" ||g_enterprise|| "' AND "||"inqbdocno = '"||g_inqa_m.inqadocno ||"' AND "|| "inqbseq = '"||g_inqb_d[g_detail_idx].inqbseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.inqc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inqb2_d[l_ac].inqc002_desc = ''
            LET g_inqb2_d[l_ac].inqc002_desc_desc = ''
            DISPLAY BY NAME g_inqb2_d[l_ac].inqc002_desc
            
            IF NOT cl_null(g_inqb2_d[l_ac].inqc001) THEN
               IF g_inqb2_d[l_ac].inqc001 != g_inqb2_d_o.inqc001 OR g_inqb2_d_o.inqc001 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_inqb2_d[l_ac].inqc001
                  IF NOT cl_chk_exist("v_imay003") THEN
                     LET g_inqb2_d[l_ac].inqc001 = g_inqb2_d_o.inqc001
                     NEXT FIELD CURRENT
                  ELSE
                     INITIALIZE g_chkparam.* TO NULL
                     LET g_chkparam.arg1 = g_inqb2_d[l_ac].inqc001
                     LET g_chkparam.arg2 = g_inqa_m.inqasite
                     IF NOT cl_chk_exist("v_rtdx002") THEN
                        LET g_inqb2_d[l_ac].inqc001 = g_inqb2_d_o.inqc001
                        NEXT FIELD CURRENT
                     ELSE   
                        LET g_inqb2_d[l_ac].inqc002 = ''
                        LET g_inqb2_d[l_ac].inqc004 = ''                    
                        
                        #帶值：商品編號, 單位
                        CALL aint950_barcode_val(g_inqb2_d[l_ac].inqc001) 
                           RETURNING g_inqb2_d[l_ac].inqc002,g_inqb2_d[l_ac].inqc004 
                           
                        IF g_inqb2_d[l_ac].inqc002 = g_inqb_d[g_detail_idx].inqb002 THEN
                           INITIALIZE g_errparam TO NULL 
                           LET g_errparam.extend = "" 
                           LET g_errparam.code   = "ain-00551" 
                           LET g_errparam.popup  = TRUE 
                           LET g_errparam.replace[1] = g_inqb_d[g_detail_idx].inqb002
                           CALL cl_err()
                           
                           LET g_inqb2_d[l_ac].inqc001 = g_inqb2_d_o.inqc001
                           LET g_inqb2_d[l_ac].inqc002 = g_inqb2_d_o.inqc002
                           LET g_inqb2_d[l_ac].inqc004 = g_inqb2_d_o.inqc004
                           CALL s_desc_get_item_desc(g_inqb2_d[l_ac].inqc002)
                              RETURNING g_inqb2_d[l_ac].inqc002_desc,g_inqb2_d[l_ac].inqc002_desc_desc
                           LET g_inqb2_d[l_ac].inqc004_desc = s_desc_get_unit_desc(g_inqb2_d[l_ac].inqc004)
                                                      
                           NEXT FIELD CURRENT                       
                        ELSE
                           LET g_inqb2_d[l_ac].inqc003 = ''
                           LET g_inqb2_d[l_ac].inqc005 = ''
                           LET g_inqb2_d[l_ac].inqc006 = ''
                           LET g_inqb2_d[l_ac].inqc007 = ''
                           LET g_inqb2_d[l_ac].inqc008 = ''
                           LET g_inqb2_d[l_ac].inqc009 = '' 
                        END IF

                        #計算數量
                        IF NOT cl_null(g_inqb2_d[l_ac].inqc002) THEN
                           IF NOT aint950_prod_bom_val() THEN
                              LET g_inqb2_d[l_ac].inqc005 = ''
                           END IF 
                        END IF   
                     END IF   
                  END IF
               END IF
            END IF

            CALL s_desc_get_item_desc(g_inqb2_d[l_ac].inqc002)
               RETURNING g_inqb2_d[l_ac].inqc002_desc,g_inqb2_d[l_ac].inqc002_desc_desc
            LET g_inqb2_d[l_ac].inqc004_desc = s_desc_get_unit_desc(g_inqb2_d[l_ac].inqc004)   

            CALL aint950_set_entry_b(l_cmd)
            CALL aint950_set_no_required_b()
            CALL aint950_set_required_b()
            CALL aint950_set_no_entry_b(l_cmd)
            
            LET g_inqb2_d_o.inqc001 = g_inqb2_d[l_ac].inqc001
            LET g_inqb2_d_o.inqc002 = g_inqb2_d[l_ac].inqc002
            LET g_inqb2_d_o.inqc003 = g_inqb2_d[l_ac].inqc003
            LET g_inqb2_d_o.inqc004 = g_inqb2_d[l_ac].inqc004
            LET g_inqb2_d_o.inqc005 = g_inqb2_d[l_ac].inqc005
            LET g_inqb2_d_o.inqc006 = g_inqb2_d[l_ac].inqc006
            LET g_inqb2_d_o.inqc007 = g_inqb2_d[l_ac].inqc007
            LET g_inqb2_d_o.inqc008 = g_inqb2_d[l_ac].inqc008
            LET g_inqb2_d_o.inqc009 = g_inqb2_d[l_ac].inqc009]]>
  </point>
  <point name="input.a.page2.inqc002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inqb2_d[l_ac].inqc002_desc = ''
            LET g_inqb2_d[l_ac].inqc002_desc_desc = ''
            DISPLAY BY NAME g_inqb2_d[l_ac].inqc002_desc,g_inqb2_d[l_ac].inqc002_desc_desc
            
            IF NOT cl_null(g_inqb2_d[l_ac].inqc002) THEN
               IF g_inqb2_d[l_ac].inqc002 != g_inqb2_d_o.inqc002 OR g_inqb2_d_o.inqc002 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_inqb2_d[l_ac].inqc002
                  LET g_chkparam.arg2 = 'ALL'
                  IF NOT cl_chk_exist("v_imaf001_15") THEN
                     LET g_inqb2_d[l_ac].inqc002 = g_inqb2_d_o.inqc002
                     CALL s_desc_get_item_desc(g_inqb2_d[l_ac].inqc002)
                        RETURNING g_inqb2_d[l_ac].inqc002_desc,g_inqb2_d[l_ac].inqc002_desc_desc
                     NEXT FIELD CURRENT
                  ELSE
                     IF g_inqb2_d[l_ac].inqc002 = g_inqb_d[g_detail_idx].inqb002 THEN
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "" 
                        LET g_errparam.code   = "ain-00551" 
                        LET g_errparam.popup  = TRUE 
                        LET g_errparam.replace[1] = g_inqb_d[g_detail_idx].inqb002
                        CALL cl_err()
                        
                        LET g_inqb2_d[l_ac].inqc002 = g_inqb2_d_o.inqc002
                        NEXT FIELD CURRENT
                     ELSE      
                        LET g_inqb2_d[l_ac].inqc001 = ''
                        LET g_inqb2_d[l_ac].inqc003 = ''
                        LET g_inqb2_d[l_ac].inqc004 = ''
                        LET g_inqb2_d[l_ac].inqc005 = ''
                        LET g_inqb2_d[l_ac].inqc006 = ''
                        LET g_inqb2_d[l_ac].inqc007 = ''
                        LET g_inqb2_d[l_ac].inqc008 = ''
                        LET g_inqb2_d[l_ac].inqc009 = ''
                    
                        #帶值：主條碼, 單位
                        CALL aint950_prod_val(g_inqb2_d[l_ac].inqc002)
                           RETURNING g_inqb2_d[l_ac].inqc001,g_inqb2_d[l_ac].inqc004  
                        #計算數量
                        IF NOT aint950_prod_bom_val() THEN
                           LET g_inqb2_d[l_ac].inqc005 = ''
                        END IF   
                     END IF      
                  END IF
               END IF
            END IF
            
            CALL s_desc_get_item_desc(g_inqb2_d[l_ac].inqc002)
               RETURNING g_inqb2_d[l_ac].inqc002_desc,g_inqb2_d[l_ac].inqc002_desc_desc
            LET g_inqb2_d[l_ac].inqc004_desc = s_desc_get_unit_desc(g_inqb2_d[l_ac].inqc004)     
            
            CALL aint950_set_entry_b(l_cmd)
            CALL aint950_set_no_required_b()
            CALL aint950_set_required_b()
            CALL aint950_set_no_entry_b(l_cmd)
            
            LET g_inqb2_d_o.inqc001 = g_inqb2_d[l_ac].inqc001
            LET g_inqb2_d_o.inqc002 = g_inqb2_d[l_ac].inqc002
            LET g_inqb2_d_o.inqc003 = g_inqb2_d[l_ac].inqc003
            LET g_inqb2_d_o.inqc004 = g_inqb2_d[l_ac].inqc004
            LET g_inqb2_d_o.inqc005 = g_inqb2_d[l_ac].inqc005
            LET g_inqb2_d_o.inqc006 = g_inqb2_d[l_ac].inqc006
            LET g_inqb2_d_o.inqc007 = g_inqb2_d[l_ac].inqc007
            LET g_inqb2_d_o.inqc008 = g_inqb2_d[l_ac].inqc008
            LET g_inqb2_d_o.inqc009 = g_inqb2_d[l_ac].inqc009]]>
  </point>
  <point name="input.a.page2.inqc003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inqb2_d[l_ac].inqc003_desc = ' '
            DISPLAY BY NAME g_inqb2_d[l_ac].inqc003_desc
            
            IF NOT cl_null(g_inqb2_d[l_ac].inqc003) THEN
               IF g_inqb2_d[l_ac].inqc003 != g_inqb2_d_o.inqc003 OR g_inqb2_d_o.inqc003 IS NULL THEN
                  IF s_feature_check(g_inqb2_d[l_ac].inqc002,g_inqb2_d[l_ac].inqc003) THEN
                     LET g_inqb2_d[l_ac].inqc003 = g_inqb2_d_o.inqc003
                     CALL s_feature_description(g_inqb2_d[l_ac].inqc002,g_inqb2_d[l_ac].inqc003) 
                        RETURNING l_success,g_inqb2_d[l_ac].inqc003_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            ELSE
               LET g_inqb2_d[l_ac].inqc003 = ' '
            END IF
            
            CALL s_feature_description(g_inqb_d[l_ac].inqb002,g_inqb_d[l_ac].inqb003) 
               RETURNING l_success,g_inqb_d[l_ac].inqb003_desc
               
            LET g_inqb2_d_o.inqc003 = g_inqb2_d[l_ac].inqc003   ]]>
  </point>
  <point name="input.a.page2.inqc004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.page2.inqc005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inqb2_d[l_ac].inqc005) THEN 
               IF g_inqb2_d[l_ac].inqc005 != g_inqb2_d_o.inqc005 OR g_inqb2_d_o.inqc005 IS NULL THEN
                  LET g_inqb2_d_o.inqc005 = g_inqb2_d[l_ac].inqc005
               END IF
            END IF
            
            LET g_inqb2_d_o.inqc005 = g_inqb2_d[l_ac].inqc005]]>
  </point>
  <point name="input.a.page2.inqc006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inqb2_d[l_ac].inqc006_desc = ''
            DISPLAY BY NAME g_inqb2_d[l_ac].inqc006_desc
            
            IF NOT cl_null(g_inqb2_d[l_ac].inqc006) THEN
               IF g_inqb2_d[l_ac].inqc006 != g_inqb2_d_o.inqc006 OR g_inqb2_d_o.inqc006 IS NULL THEN
                  LET l_success = TRUE
                  CASE g_argv[1]
                     WHEN '1'    #aint950-明細商品出庫
                        INITIALIZE g_chkparam.* TO NULL
                        LET g_chkparam.arg1 = g_inqa_m.inqasite
                        LET g_chkparam.arg2 = g_inqb2_d[l_ac].inqc006
                        IF NOT cl_chk_exist("v_inaa001") THEN
                           LET l_success = FALSE
                        END IF                           
                     WHEN '2'    #aint951-明細商品入庫
                        INITIALIZE g_chkparam.* TO NULL
                        LET g_chkparam.arg1 = g_inqb2_d[l_ac].inqc006
                        IF NOT cl_chk_exist("v_inaa001_9") THEN
                           LET l_success = FALSE
                        END IF                                         
                  END CASE
                  
                  IF NOT l_success THEN
                     LET g_inqb2_d[l_ac].inqc006 = g_inqb2_d_o.inqc006
                     LET g_inqb2_d[l_ac].inqc006_desc = s_desc_get_stock_desc(g_inqa_m.inqasite,g_inqb2_d[l_ac].inqc006)
                     NEXT FIELD CURRENT
                  ELSE
                     LET g_inqb2_d[l_ac].inqc007 = ''                  
                  END IF
               END IF
            END IF
            
            LET g_inqb2_d[l_ac].inqc006_desc = s_desc_get_stock_desc(g_inqa_m.inqasite,g_inqb2_d[l_ac].inqc006)
            
            CALL aint950_set_entry_b(l_cmd)
            CALL aint950_set_no_required_b()
            CALL aint950_set_required_b()
            CALL aint950_set_no_entry_b(l_cmd)
            
            LET g_inqb2_d_o.inqc006 = g_inqb2_d[l_ac].inqc006
            LET g_inqb2_d_o.inqc007 = g_inqb2_d[l_ac].inqc007
            LET g_inqb2_d_o.inqc008 = g_inqb2_d[l_ac].inqc008
            LET g_inqb2_d_o.inqc009 = g_inqb2_d[l_ac].inqc009]]>
  </point>
  <point name="input.a.page2.inqc007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inqb2_d[l_ac].inqc007_desc = ''
            DISPLAY BY NAME g_inqb2_d[l_ac].inqc007_desc
            
            IF NOT cl_null(g_inqb2_d[l_ac].inqc007) THEN 
               IF g_inqb2_d[l_ac].inqc007 != g_inqb2_d_o.inqc007 OR g_inqb2_d_o.inqc007 IS NULL THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_inqa_m.inqasite
                  LET g_chkparam.arg2 = g_inqb2_d[l_ac].inqc006
                  LET g_chkparam.arg3 = g_inqb2_d[l_ac].inqc007
                  IF NOT cl_chk_exist("v_inab002") THEN
                     LET g_inqb2_d[l_ac].inqc007 = g_inqb2_d_o.inqc007
                     LET g_inqb2_d[l_ac].inqc007_desc = s_desc_get_locator_desc(g_inqa_m.inqasite,g_inqb2_d[l_ac].inqc006,g_inqb2_d[l_ac].inqc007)
                     NEXT FIELD CURRENT
                  END IF
               END IF
            ELSE
               LET g_inqb2_d[l_ac].inqc007 = ' '
            END IF
            
            LET g_inqb2_d[l_ac].inqc007_desc = s_desc_get_locator_desc(g_inqa_m.inqasite,g_inqb2_d[l_ac].inqc006,g_inqb2_d[l_ac].inqc007)

            LET g_inqb2_d_o.inqc006 = g_inqb2_d[l_ac].inqc006
            LET g_inqb2_d_o.inqc007 = g_inqb2_d[l_ac].inqc007
            LET g_inqb2_d_o.inqc008 = g_inqb2_d[l_ac].inqc008
            LET g_inqb2_d_o.inqc009 = g_inqb2_d[l_ac].inqc009]]>
  </point>
  <point name="input.a.page2.inqc008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inqb2_d[l_ac].inqc008) THEN
               #150427-00001#8 150527 by lori522612 add---(S)   
               IF g_inqb2_d[l_ac].inqc008 != g_inqb2_d_o.inqc008 OR g_inqb2_d_o.inqc008 IS NULL THEN
                  IF NOT s_lot_out_chk(g_inqa_m.inqasite,g_inqa_m.inqadocno,
                                       g_inqb2_d[l_ac].inqc002,g_inqb2_d[l_ac].inqc003,
                                       g_inqb2_d[l_ac].inqc008) THEN
                     LET g_inqb2_d[l_ac].inqc008 = g_inqb2_d_o.inqc008
                     NEXT FIELD CURRENT
                  END IF
               END IF
               #150427-00001#8 150527 by lori522612 add---(E)             
            ELSE
               LET g_inqb2_d[l_ac].inqc008 = ' '
            END IF
            
            LET g_inqb2_d_o.inqc008 = g_inqb2_d[l_ac].inqc008]]>
  </point>
  <point name="input.a.page2.inqc009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_inqb2_d[l_ac].inqc009) THEN
               LET g_inqb2_d[l_ac].inqc009 = ' '
            END IF
            
            LET g_inqb2_d_o.inqc009 = g_inqb2_d[l_ac].inqc009 ]]>
  </point>
  <point name="input.a.page2.inqcseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_inqa_m.inqadocno IS NOT NULL AND g_inqb_d[g_detail_idx].inqbseq IS NOT NULL AND g_inqb2_d[g_detail_idx2].inqcseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inqa_m.inqadocno != g_inqadocno_t OR g_inqb_d[g_detail_idx].inqbseq != g_inqb_d[g_detail_idx].inqbseq OR g_inqb2_d[g_detail_idx2].inqcseq1 != g_inqb2_d_t.inqcseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inqc_t WHERE "||"inqcent = '" ||g_enterprise|| "' AND "||"inqcdocno = '"||g_inqa_m.inqadocno ||"' AND "|| "inqcseq = '"||g_inqb_d[g_detail_idx].inqbseq ||"' AND "|| "inqcseq1 = '"||g_inqb2_d[g_detail_idx2].inqcseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.inqcseq2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_inqa_m.inqadocno IS NOT NULL AND g_inqb_d[g_detail_idx].inqbseq IS NOT NULL AND g_inqb2_d[g_detail_idx2].inqcseq2 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inqa_m.inqadocno != g_inqadocno_t OR g_inqb_d[g_detail_idx].inqbseq != g_inqb_d[g_detail_idx].inqbseq OR g_inqb2_d[g_detail_idx2].inqcseq2 != g_inqb2_d_t.inqcseq2)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inqc_t WHERE "||"inqcent = '" ||g_enterprise|| "' AND "||"inqcdocno = '"||g_inqa_m.inqadocno ||"' AND "|| "inqcseq = '"||g_inqb_d[g_detail_idx].inqbseq ||"' AND "|| "inqcseq2 = '"||g_inqb2_d[g_detail_idx2].inqcseq2 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.inqbseq_3" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_inqa_m.inqadocno IS NOT NULL AND g_inqb3_d[g_detail_idx].inqbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inqa_m.inqadocno != g_inqadocno_t OR g_inqb3_d[g_detail_idx].inqbseq != g_inqb3_d_t.inqbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inqb_t WHERE "||"inqbent = '" ||g_enterprise|| "' AND "||"inqbdocno = '"||g_inqa_m.inqadocno ||"' AND "|| "inqbseq = '"||g_inqb3_d[g_detail_idx].inqbseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.body.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_transaction_end('Y','0')
               
               CALL s_transaction_begin()
               IF NOT aint950_prod_bom_val() THEN
                  CALL s_transaction_end('N','0')  
               ELSE
                  CALL aint950_b_fill2('2')
                  CALL aint950_b_fill3()
                  CALL s_transaction_end('Y','0')
                  NEXT FIELD inqc001
               END IF]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint950_b_fill3()]]>
  </point>
  <point name="input.body.after_row2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint950_b_fill3()]]>
  </point>
  <point name="input.body.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_inqb_d[g_detail_idx].inqbsite = g_inqa_m.inqasite
               LET g_inqb_d[g_detail_idx].inqbunit = g_inqa_m.inqasite]]>
  </point>
  <point name="input.body.before_row2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint950_b_fill3()]]>
  </point>
  <point name="input.body.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #項次
            LET l_seq = 0
            
            SELECT MAX(inqbseq) INTO l_seq
              FROM inqb_t
             WHERE inqbent = g_enterprise
               AND inqbdocno = g_inqa_m.inqadocno
               
            IF cl_null(l_seq) THEN
               LET l_seq = 0
            END IF
            
            LET g_inqb_d[l_ac].inqbseq = l_seq + 1
            ]]>
  </point>
  <point name="input.body2.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint950_b_fill3()]]>
  </point>
  <point name="input.body2.after_row2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint950_b_fill3() ]]>
  </point>
  <point name="input.body2.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_inqb2_d[g_detail_idx2].inqcsite = g_inqa_m.inqasite
               LET g_inqb2_d[g_detail_idx2].inqcunit = g_inqa_m.inqasite]]>
  </point>
  <point name="input.body2.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #項序
            LET l_seq1 = 0
            
            SELECT MAX(inqcseq1) INTO l_seq1
              FROM inqc_t
             WHERE inqcent = g_enterprise
               AND inqcdocno =  g_inqa_m.inqadocno
               AND inqcseq = g_inqb_d[g_detail_idx].inqbseq
               
            IF cl_null(l_seq1) THEN
               LET l_seq1 = 0
            END IF
            
            LET g_inqb2_d[l_ac].inqcseq1 = l_seq1 + 1]]>
  </point>
  <point name="input.c.inqa002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_inqa_m.inqa002   

            CALL q_ooag001()                  
            LET g_inqa_m.inqa002 = g_qryparam.return1              
            LET g_inqa_m.inqa002_desc  = s_desc_get_person_desc(g_inqa_m.inqa002)   
            DISPLAY BY NAME g_inqa_m.inqa002,g_inqa_m.inqa002_desc
            NEXT FIELD inqa002                     ]]>
  </point>
  <point name="input.c.inqa003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_inqa_m.inqa003 
            IF cl_null(g_inqa_m.inqadocdt) THEN
               LET g_qryparam.arg1 = g_today
            ELSE
               LET g_qryparam.arg1 = g_inqa_m.inqadocdt            
            END IF
            
            CALL q_ooeg001()                            

            LET g_inqa_m.inqa003 = g_qryparam.return1
            LET g_inqa_m.inqa003_desc  = s_desc_get_department_desc(g_inqa_m.inqa003) 
            DISPLAY BY NAME g_inqa_m.inqa003,g_inqa_m.inqa003_desc
            
            NEXT FIELD inqa003            ]]>
  </point>
  <point name="input.c.inqa004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inqa_m.inqa004          
            LET g_qryparam.arg1 = g_inqa004_acc
            
            CALL q_oocq002()                        

            LET g_inqa_m.inqa004 = g_qryparam.return1  
            LET g_inqa_m.inqa004_desc = s_desc_get_acc_desc(g_inqa004_acc,g_inqa_m.inqa004)            
            DISPLAY BY NAME g_inqa_m.inqa004,g_inqa_m.inqa004_desc
            
            NEXT FIELD inqa004                ]]>
  </point>
  <point name="input.c.inqadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            LET l_ooef004 = ''
            SELECT ooef004 
              INTO l_ooef004
              FROM ooef_t
             WHERE ooefent = g_enterprise 
               AND ooef001 = g_inqa_m.inqasite 
               AND ooefstus = 'Y'
               
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_inqa_m.inqadocno 
            LET g_qryparam.arg1 = l_ooef004
            LET g_qryparam.arg2 = g_prog
            
            CALL q_ooba002_1()           
            
            LET g_inqa_m.inqadocno = g_qryparam.return1   
            DISPLAY g_inqa_m.inqadocno TO inqadocno       
            
            NEXT FIELD inqadocno   ]]>
  </point>
  <point name="input.c.inqasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_inqa_m.inqasite  
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'inqasite',g_inqa_m.inqasite,'i')
            
            CALL q_ooef001_24() 
            
            LET g_inqa_m.inqasite_desc = s_desc_get_department_desc(g_inqa_m.inqasite)
            DISPLAY BY NAME g_inqa_m.inqasite,g_inqa_m.inqasite_desc
            NEXT FIELD inqasite  ]]>
  </point>
  <point name="input.c.page1.inqb001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_inqb_d[l_ac].inqb001      
            LET g_qryparam.arg1 = g_inqa_m.inqasite
            
            CALL q_imay001_1()                              
            
            LET g_inqb_d[l_ac].inqb001 = g_qryparam.return1 
            DISPLAY g_inqb_d[l_ac].inqb001 TO inqb001        
            NEXT FIELD inqb001                      ]]>
  </point>
  <point name="input.c.page1.inqb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_inqb_d[l_ac].inqb002
            LET g_qryparam.arg1 = 'ALL'
            LET g_qryparam.arg2 = g_inqa_m.inqasite  
                  
            CALL q_imaf001_18()                          
            LET g_inqb_d[l_ac].inqb002 = g_qryparam.return1             
            CALL s_desc_get_item_desc(g_inqb_d[l_ac].inqb002)
               RETURNING g_inqb_d[l_ac].inqb002_desc,g_inqb_d[l_ac].inqb002_desc_desc
               
            NEXT FIELD inqb002  ]]>
  </point>
  <point name="input.c.page1.inqb003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF l_cmd = 'a' THEN
               CALL l_inam.clear()
               CALL s_feature(l_cmd,g_inqb_d[l_ac].inqb002,'','',g_inqa_m.inqasite,g_inqa_m.inqadocno)  
                  RETURNING l_success,l_inam
               LET g_inqb_d[l_ac].inqb003 = l_inam[1].inam002
               LET g_inqb_d[l_ac].inqb005 = l_inam[1].inam004 
            END IF
            IF l_cmd = 'u' THEN
               CALL s_feature_single(g_inqb_d[l_ac].inqb002,g_inqb_d[l_ac].inqb003,g_inqa_m.inqasite,g_inqa_m.inqadocno)
                  RETURNING l_success,g_inqb_d[l_ac].inqb003
            END IF]]>
  </point>
  <point name="input.c.page1.inqb006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            CASE g_argv[1]
               WHEN '1'   #aint950-主商品入庫
                  LET g_qryparam.default1 = g_inqb_d[l_ac].inqb006 
                  LET g_qryparam.arg1 = g_inqa_m.inqasite
                  
                  CALL q_inaa001_1()
                   
                  LET g_inqb_d[l_ac].inqb006 = g_qryparam.return1   
                  LET g_inqb_d[l_ac].inqb006_desc = s_desc_get_stock_desc(g_inqa_m.inqasite,g_inqb_d[l_ac].inqb006)
               WHEN '2'   #aint951-主商品出庫
                  LET g_qryparam.default1 = g_inqb_d[l_ac].inqb006  #庫位編號
                  LET g_qryparam.default2 = g_inqb_d[l_ac].inqb007  #儲位編號
                  LET g_qryparam.default3 = g_inqb_d[l_ac].inqb008  #批號
                  LET g_qryparam.default4 = g_inqb_d[l_ac].inqb009  #庫存管理特徵 
                  LET g_qryparam.arg1 = g_inqa_m.inqasite
                  LET g_qryparam.arg2 = g_inqb_d[l_ac].inqb002
                  LET g_qryparam.arg3 = g_inqb_d[l_ac].inqb003
                  LET g_qryparam.arg4 = g_inqb_d[l_ac].inqb009
                  LET g_qryparam.arg5 = ''
                  LET g_qryparam.arg6 = g_inqb_d[l_ac].inqb007
                  LET g_qryparam.arg7 = g_inqb_d[l_ac].inqb008

                  CALL q_inag004_18() 
                  
                  LET g_inqb_d[l_ac].inqb006 = g_qryparam.return1  #庫位編號                  
                  LET g_inqb_d[l_ac].inqb007 = g_qryparam.return2  #儲位編號            
                  LET g_inqb_d[l_ac].inqb008 = g_qryparam.return3  #批號            
                  LET g_inqb_d[l_ac].inqb009 = g_qryparam.return4  #庫存管理特徵 
                  LET g_inqb_d[l_ac].inqb006_desc = s_desc_get_stock_desc(g_inqa_m.inqasite,g_inqb_d[l_ac].inqb006)
                  LET g_inqb_d[l_ac].inqb007_desc = s_desc_get_locator_desc(g_inqa_m.inqasite,g_inqb_d[l_ac].inqb006,g_inqb_d[l_ac].inqb007)
            END CASE 
            
            NEXT FIELD inqb006            ]]>
  </point>
  <point name="input.c.page1.inqb007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            CASE g_argv[1]
               WHEN '1'   #aint950-主商品入庫
                  LET g_qryparam.default2 = g_inqb_d[l_ac].inqb007 
                  LET g_qryparam.arg1 = g_inqb_d[l_ac].inqb006
                  
                  CALL q_inab002_3()
                  
                  LET g_inqb_d[l_ac].inqb007 = g_qryparam.return1
                  LET g_inqb_d[l_ac].inqb007_desc = s_desc_get_locator_desc(g_inqa_m.inqasite,g_inqb_d[l_ac].inqb006,g_inqb_d[l_ac].inqb007)               
               WHEN '2'   #aint951-主商品出庫
                  LET g_qryparam.default1 = g_inqb_d[l_ac].inqb006  #庫位編號
                  LET g_qryparam.default2 = g_inqb_d[l_ac].inqb007  #儲位編號
                  LET g_qryparam.default3 = g_inqb_d[l_ac].inqb008  #批號
                  LET g_qryparam.default4 = g_inqb_d[l_ac].inqb009  #庫存管理特徵 
                  LET g_qryparam.arg1 = g_inqa_m.inqasite
                  LET g_qryparam.arg2 = g_inqb_d[l_ac].inqb002
                  LET g_qryparam.arg3 = g_inqb_d[l_ac].inqb003
                  LET g_qryparam.arg4 = g_inqb_d[l_ac].inqb009
                  LET g_qryparam.arg5 = g_inqb_d[l_ac].inqb006
                  LET g_qryparam.arg6 = ''
                  LET g_qryparam.arg7 = g_inqb_d[l_ac].inqb008

                  CALL q_inag004_18() 
                  
                  LET g_inqb_d[l_ac].inqb006 = g_qryparam.return1  #庫位編號                  
                  LET g_inqb_d[l_ac].inqb007 = g_qryparam.return2  #儲位編號            
                  LET g_inqb_d[l_ac].inqb008 = g_qryparam.return3  #批號            
                  LET g_inqb_d[l_ac].inqb009 = g_qryparam.return4  #庫存管理特徵 
                  LET g_inqb_d[l_ac].inqb006_desc = s_desc_get_stock_desc(g_inqa_m.inqasite,g_inqb_d[l_ac].inqb006)
                  LET g_inqb_d[l_ac].inqb007_desc = s_desc_get_locator_desc(g_inqa_m.inqasite,g_inqb_d[l_ac].inqb006,g_inqb_d[l_ac].inqb007)               
            END CASE
            
            NEXT FIELD inqb007                         ]]>
  </point>
  <point name="input.c.page2.inqc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_inqb2_d[l_ac].inqc001     
            LET g_qryparam.arg1 = g_inqa_m.inqasite
            
            CALL q_imay001_1()      
            
            LET g_inqb2_d[l_ac].inqc001 = g_qryparam.return1      
            DISPLAY g_inqb2_d[l_ac].inqc001 TO inqc001    
            NEXT FIELD inqc001                       ]]>
  </point>
  <point name="input.c.page2.inqc002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_inqb2_d[l_ac].inqc002         
            LET g_qryparam.arg1 = 'ALL'
            LET g_qryparam.arg2 = g_inqa_m.inqasite  

            CALL q_imaf001_18()                          

            LET g_inqb2_d[l_ac].inqc002 = g_qryparam.return1             
            CALL s_desc_get_item_desc(g_inqb2_d[l_ac].inqc002)
               RETURNING g_inqb2_d[l_ac].inqc002_desc,g_inqb2_d[l_ac].inqc002_desc_desc
               
            NEXT FIELD inqc002                    ]]>
  </point>
  <point name="input.c.page2.inqc006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            CASE g_argv[1]
               WHEN '1'   #aint950-明細商品出庫
                  LET g_qryparam.default1 = g_inqb2_d[l_ac].inqc006  #庫位編號
                  LET g_qryparam.default2 = g_inqb2_d[l_ac].inqc007  #儲位編號
                  LET g_qryparam.default3 = g_inqb2_d[l_ac].inqc008  #批號
                  LET g_qryparam.default4 = g_inqb2_d[l_ac].inqc009  #庫存管理特徵 
                  LET g_qryparam.arg1 = g_inqa_m.inqasite
                  LET g_qryparam.arg2 = g_inqb2_d[l_ac].inqc002
                  LET g_qryparam.arg3 = g_inqb2_d[l_ac].inqc003
                  LET g_qryparam.arg4 = g_inqb2_d[l_ac].inqc009
                  LET g_qryparam.arg5 = ''
                  LET g_qryparam.arg6 = g_inqb2_d[l_ac].inqc007
                  LET g_qryparam.arg7 = g_inqb2_d[l_ac].inqc008

                  CALL q_inag004_18() 
                  
                  LET g_inqb2_d[l_ac].inqc006 = g_qryparam.return1  #庫位編號                  
                  LET g_inqb2_d[l_ac].inqc007 = g_qryparam.return2  #儲位編號            
                  LET g_inqb2_d[l_ac].inqc008 = g_qryparam.return3  #批號            
                  LET g_inqb2_d[l_ac].inqc009 = g_qryparam.return4  #庫存管理特徵 
                  LET g_inqb2_d[l_ac].inqc006_desc = s_desc_get_stock_desc(g_inqa_m.inqasite,g_inqb2_d[l_ac].inqc006)
                  LET g_inqb2_d[l_ac].inqc007_desc = s_desc_get_locator_desc(g_inqa_m.inqasite,g_inqb2_d[l_ac].inqc006,g_inqb2_d[l_ac].inqc007)
               WHEN '2'   #aint951-主商品出庫
                  LET g_qryparam.default1 = g_inqb2_d[l_ac].inqc006 
                  LET g_qryparam.arg1 = g_inqa_m.inqasite
                  
                  CALL q_inaa001_1()
                   
                  LET g_inqb2_d[l_ac].inqc006 = g_qryparam.return1   
                  LET g_inqb2_d[l_ac].inqc006_desc = s_desc_get_stock_desc(g_inqa_m.inqasite,g_inqb2_d[l_ac].inqc006)
            END CASE 
            
            NEXT FIELD inqc006            ]]>
  </point>
  <point name="input.c.page2.inqc007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            CASE g_argv[1]
               WHEN '1'   #aint950-明細商品出庫
                  LET g_qryparam.default1 = g_inqb2_d[l_ac].inqc006  #庫位編號
                  LET g_qryparam.default2 = g_inqb2_d[l_ac].inqc007  #儲位編號
                  LET g_qryparam.default3 = g_inqb2_d[l_ac].inqc008  #批號
                  LET g_qryparam.default4 = g_inqb2_d[l_ac].inqc009  #庫存管理特徵 
                  LET g_qryparam.arg1 = g_inqa_m.inqasite
                  LET g_qryparam.arg2 = g_inqb2_d[l_ac].inqc002
                  LET g_qryparam.arg3 = g_inqb2_d[l_ac].inqc003
                  LET g_qryparam.arg4 = g_inqb2_d[l_ac].inqc009
                  LET g_qryparam.arg5 = g_inqb2_d[l_ac].inqc006
                  LET g_qryparam.arg6 = ''
                  LET g_qryparam.arg7 = g_inqb2_d[l_ac].inqc008

                  CALL q_inag004_18() 
                  
                  LET g_inqb2_d[l_ac].inqc006 = g_qryparam.return1  #庫位編號                  
                  LET g_inqb2_d[l_ac].inqc007 = g_qryparam.return2  #儲位編號            
                  LET g_inqb2_d[l_ac].inqc008 = g_qryparam.return3  #批號            
                  LET g_inqb2_d[l_ac].inqc009 = g_qryparam.return4  #庫存管理特徵 
                  LET g_inqb2_d[l_ac].inqc006_desc = s_desc_get_stock_desc(g_inqa_m.inqasite,g_inqb2_d[l_ac].inqc006)
                  LET g_inqb2_d[l_ac].inqc007_desc = s_desc_get_locator_desc(g_inqa_m.inqasite,g_inqb2_d[l_ac].inqc006,g_inqb2_d[l_ac].inqc007)               
               WHEN '2'   #aint951-明細商品入庫
                  LET g_qryparam.default2 = g_inqb2_d[l_ac].inqc007 
                  LET g_qryparam.arg1 = g_inqb2_d[l_ac].inqc006
                  
                  CALL q_inab002_3()
                  
                  LET g_inqb2_d[l_ac].inqc007 = g_qryparam.return1
                  LET g_inqb2_d[l_ac].inqc007_desc = s_desc_get_locator_desc(g_inqa_m.inqasite,g_inqb2_d[l_ac].inqc006,g_inqb2_d[l_ac].inqc007)               
            END CASE
            
            NEXT FIELD inqc007  ]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_seq                 LIKE inqb_t.inqbseq
   DEFINE  l_seq1                LIKE inqc_t.inqcseq1
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_errno               STRING
   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_inam                DYNAMIC ARRAY OF RECORD   #記錄產品特徵
              inam001            LIKE inam_t.inam001,
              inam002            LIKE inam_t.inam002,
              inam004            LIKE inam_t.inam004
                                 END RECORD   ]]>
  </point>
  <point name="input.head.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aint950_b_fill2('2')
               END IF
               
               CALL aint950_b_fill3()]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_inqa_m.inqaunit = g_inqa_m.inqasite
               
               #產生單號
               CALL s_aooi200_gen_docno(g_inqa_m.inqasite,g_inqa_m.inqadocno,g_inqa_m.inqadocdt,g_prog) 
                    RETURNING l_success,g_inqa_m.inqadocno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'             #自動生成單據編號有誤，請重新確認
                  LET g_errparam.extend = g_inqa_m.inqadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
               
                  CALL s_transaction_end('N',0)
               
                  NEXT FIELD inqadocno
               END IF               ]]>
  </point>
  <point name="input.more_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #第三單身
      DISPLAY ARRAY g_inqb3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
       
         BEFORE ROW
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            LET g_detail_idx2 = l_ac
            
         BEFORE DISPLAY
            IF g_loc = 'd' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx2)
            END IF
            LET g_loc = 'd'
            LET l_ac = DIALOG.getCurrentRow("s_detail3")
            LET g_current_page = 3
      END DISPLAY]]>
  </point>
  <point name="input.next_field" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            NEXT FIELD inqasite]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL aint950_inqa_default()     ]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_insert        LIKE type_t.num5]]>
  </point>
  <point name="insert_b.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF cl_null(g_inqb_d[g_detail_idx].inqb003) THEN   LET g_inqb_d[g_detail_idx].inqb003 = ' '   END IF
     #IF cl_null(g_inqb_d[g_detail_idx].inqb006) THEN   LET g_inqb_d[g_detail_idx].inqb006 = ' '   END IF   #庫位不可為空/空白
      IF cl_null(g_inqb_d[g_detail_idx].inqb007) THEN   LET g_inqb_d[g_detail_idx].inqb007 = ' '   END IF
      IF cl_null(g_inqb_d[g_detail_idx].inqb008) THEN   LET g_inqb_d[g_detail_idx].inqb008 = ' '   END IF
      IF cl_null(g_inqb_d[g_detail_idx].inqb009) THEN   LET g_inqb_d[g_detail_idx].inqb009 = ' '   END IF]]>
  </point>
  <point name="insert_b.before_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF cl_null(g_inqb2_d[g_detail_idx2].inqc003) THEN   LET g_inqb2_d[g_detail_idx2].inqc003 = ' '   END IF
     #IF cl_null(g_inqb2_d[g_detail_idx2].inqc006) THEN   LET g_inqb2_d[g_detail_idx2].inqc006 = ' '   END IF   #庫位不可為空/空白
      IF cl_null(g_inqb2_d[g_detail_idx2].inqc007) THEN   LET g_inqb2_d[g_detail_idx2].inqc007 = ' '   END IF
      IF cl_null(g_inqb2_d[g_detail_idx2].inqc008) THEN   LET g_inqb2_d[g_detail_idx2].inqc008 = ' '   END IF
      IF cl_null(g_inqb2_d[g_detail_idx2].inqc009) THEN   LET g_inqb2_d[g_detail_idx2].inqc009 = ' '   END IF]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5 ]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_drop_temp() RETURNING l_success
   CALL s_lot_auto_drop_tmp('aint911')               #150427-00001#6 150522 By pomelo
   CALL s_aooi390_drop_tmp_table()                   #150601-00009#5 1500602 by lori522612 add]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_argv[1] = cl_replace_str(g_argv[1], '\"', '')
   #取理由碼ACC，來源:SCC=24, 單據性質 = g_prog, 應用欄位二
   LET g_inqa004_acc = ''
   SELECT gzcb004 INTO g_inqa004_acc FROM gzcb_t WHERE gzcb001 = '24' AND gzcb002 = g_prog]]>
  </point>
  <point name="menu.prog_inqa002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #應用 a45 樣板自動產生(Version:2)
               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",g_inqa_m.inqa002)]]>
  </point>
  <point name="menu.prog_inqa005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               INITIALIZE la_param.* TO NULL
               LET la_param.prog     = 'aint912'
               LET la_param.param[1] = g_inqa_m.inqa005

               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)]]>
  </point>
  <point name="menu.prog_inqa006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               INITIALIZE la_param.* TO NULL
               LET la_param.prog     = 'aint911'
               LET la_param.param[1] = g_inqa_m.inqa006

               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF g_inqa_m.inqastus MATCHES "[DR]" THEN 
         LET g_inqa_m.inqastus = "N"
      END IF]]>
  </point>
  <point name="reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_insert    LIKE type_t.num5]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL aint950_inqa_default()
   LET g_inqa_m.inqa005 = ''
   LET g_inqa_m.inqa006 = '']]>
  </point>
  <point name="send.before_send" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_success = ''
   CALL s_aint950_conf_chk(g_inqa_m.inqadocno) RETURNING l_success
   IF NOT l_success THEN
      RETURN l_success
   END IF]]>
  </point>
  <point name="send.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success    LIKE type_t.num5]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_inqa_m.inqastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

   CASE g_inqa_m.inqastus
      WHEN "N"
         CALL cl_set_act_visible("unconfirmed,posted,unposted",FALSE)
         IF cl_bpm_chk() THEN   #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            CALL cl_set_act_visible("confirmed,posted,unposted",FALSE)
         END IF
      WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
         CALL cl_set_act_visible("confirmed,unconfirmed,posted,unposted",FALSE) 
         IF cl_bpm_chk() THEN   #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            CALL cl_set_act_visible("confirmed,unconfirmed,posted,unposted",FALSE)
         END IF         
      WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
         CALL cl_set_act_visible("confirmed,unconfirmed,posted,unposted",FALSE)
         IF cl_bpm_chk() THEN   #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            CALL cl_set_act_visible("confirmed,unconfirmed,posted,unposted",FALSE)
         END IF         
      WHEN "S"
         CALL cl_set_act_visible("unconfirmed,posted,invalid,confirmed",FALSE)
         IF cl_bpm_chk() THEN   #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            CALL cl_set_act_visible("confirmed,unconfirmed,posted",FALSE)
         END IF
      WHEN "X"
         CALL cl_set_act_visible("unconfirmed,posted,invalid,confirmed,unposted",FALSE)
      WHEN "Y"
         CALL cl_set_act_visible("invalid,confirmed,unposted",FALSE)
      WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
         CALL cl_set_act_visible("unconfirmed,invalid,confirmed,posted,unposted",FALSE)      
      WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
          CALL cl_set_act_visible("unconfirmed,invalid,posted,unposted",FALSE)
   END CASE

   IF NOT cl_bpm_chk() THEN   #不需提交至BPM時
      CALL cl_set_act_visible("signing,withdraw",FALSE)
   END IF  ]]>
  </point>
  <point name="set_act_visible.set_act_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("unconfirmed,posted,unposted,invalid,confirmed",TRUE)]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("inqasite",TRUE)]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_aw = "s_detail1" THEN
      CALL cl_set_comp_entry("inqb003,inqb007,inqb008,inqb009",TRUE)
   END IF

   IF g_aw = "s_detail2" THEN
      CALL cl_set_comp_entry("inqc003,inqc007,inqc008,inqc009",TRUE)
   END IF   ]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF (NOT s_aooi500_comp_entry(g_prog,'inqasite') OR g_ins_site_flag = 'Y') THEN
      CALL cl_set_comp_entry("inqasite",FALSE)
   END IF]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_imaa005 LIKE imaa_t.imaa005
   DEFINE l_imaf055 LIKE imaf_t.imaf055
   DEFINE l_imaf061 LIKE imaf_t.imaf061
   DEFINE l_inaa007 LIKE inaa_t.inaa007
   DEFINE l_success         LIKE type_t.num5       #150427-00001#8 150527 by lori522612 add
   DEFINE l_set_entry       LIKE type_t.num5       #150427-00001#8 150527 by lori522612 add
   DEFINE l_type            LIKE type_t.num5       #150427-00001#8 150527 by lori522612 add]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_aw = "s_detail1" THEN
      IF g_detail_idx > 0 THEN
         IF NOT cl_null(g_inqb_d[g_detail_idx].inqb002) THEN
            LET l_imaa005 = ''
            LET l_imaf055 = ''
            LET l_imaf061 = ''
            
            CALL aint950_get_prod_info(g_inqb_d[g_detail_idx].inqb002) 
               RETURNING l_imaa005,l_imaf055,l_imaf061
            
            #產品特徵
            IF cl_null(l_imaa005) THEN
               CALL cl_set_comp_entry("inqb003",FALSE)
            END IF
            
            #批號
            #150427-00001#8 150527 by lori522612 mark and add---(S)   
            #IF l_imaf061 <> '2' THEN
            #   CALL cl_set_comp_entry("inqb008",FALSE)     
            #END IF
            LET l_success = ''  
            LET l_set_entry = ''
            
            IF g_argv[1] = '1' THEN
               LET l_type = 1 
            ELSE
               LET l_type = -1 
            END IF
            
            CALL s_lot_out_entry(l_type,g_inqa_m.inqadocno,g_inqa_m.inqasite,g_inqb_d[g_detail_idx].inqb002) 
               RETURNING l_success,l_set_entry
            IF l_success THEN
               CALL cl_set_comp_entry("inqb008",l_set_entry) 
            END IF            
            #150427-00001#8 150527 by lori522612 mark and add---(E)      
            
            #庫存管理特徵
            IF l_imaf055 = '2' THEN
               CALL cl_set_comp_entry("inqb009",FALSE)         
            END IF   
         END IF      
         
         IF NOT cl_null(g_inqb_d[g_detail_idx].inqb006) THEN
            LET l_inaa007 = ''
            CALL aint950_get_store_info(g_inqb_d[g_detail_idx].inqb006) RETURNING l_inaa007
            
            IF l_inaa007 = '5' THEN
               CALL cl_set_comp_entry("inqb007",FALSE)         
            END IF
         END IF
      END IF
   END IF
   
   IF g_aw = "s_detail2" THEN
      IF g_detail_idx2 > 0 THEN
         IF NOT cl_null(g_inqb2_d[g_detail_idx2].inqc002) THEN
            LET l_imaa005 = ''
            LET l_imaf055 = ''
            LET l_imaf061 = ''
            
            CALL aint950_get_prod_info(g_inqb2_d[g_detail_idx2].inqc002) 
               RETURNING l_imaa005,l_imaf055,l_imaf061         
            
            #產品特徵
            IF cl_null(l_imaa005) THEN
               CALL cl_set_comp_entry("inqc003",FALSE)
            END IF
            #批號
            #150427-00001#8 150527 by lori522612 mark and add---(S) 
            #IF l_imaf061 <> '2' THEN
            #   CALL cl_set_comp_entry("inqc008",FALSE)     
            #END IF
            LET l_success = ''  
            LET l_set_entry = ''
            
            IF g_argv[1] = '1' THEN
               LET l_type = -1 
            ELSE
               LET l_type = 1 
            END IF            
            
            CALL s_lot_out_entry(l_type,g_inqa_m.inqadocno,g_inqa_m.inqasite,g_inqb2_d[g_detail_idx2].inqc002) 
               RETURNING l_success,l_set_entry
            IF l_success THEN
               CALL cl_set_comp_entry("inqc008",l_set_entry) 
            END IF            
            #150427-00001#8 150527 by lori522612 mark and add---(E) 
            
            #庫存管理特徵
            IF l_imaf055 = '2' THEN
               CALL cl_set_comp_entry("inqc009",FALSE)         
            END IF   
         END IF       
         
         IF NOT cl_null(g_inqb2_d[g_detail_idx2].inqc006) THEN
            LET l_inaa007 = ''
            CALL aint950_get_store_info(g_inqb2_d[g_detail_idx2].inqc006) RETURNING l_inaa007
            
            IF l_inaa007 = '5' THEN
               CALL cl_set_comp_entry("inqc007",FALSE)         
            END IF
         END IF     
      END IF   
   END IF   ]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_bfill = "Y" THEN
      CALL aint950_b_fill3() 
   END IF]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT cl_null(g_inqb_d[l_ac].inqb007) THEN
         LET g_inqb_d[l_ac].inqb007_desc = s_desc_get_locator_desc(g_inqa_m.inqasite,g_inqb_d[l_ac].inqb006,g_inqb_d[l_ac].inqb007)
      END IF]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT cl_null(g_inqb2_d[l_ac].inqc007) THEN
         LET g_inqb2_d[l_ac].inqc007_desc = s_desc_get_locator_desc(g_inqa_m.inqasite,g_inqb2_d[l_ac].inqc006,g_inqb2_d[l_ac].inqc007)
      END IF   ]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_inqa_m.inqa004_desc = s_desc_get_acc_desc(g_inqa004_acc,g_inqa_m.inqa004)
   DISPLAY BY NAME g_inqa_m.inqa004_desc]]>
  </point>
  <point name="statechange.after_refresh" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL aint950_set_act_visible()
      CALL aint950_set_act_no_visible()]]>
  </point>
  <point name="statechange.confirmed" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_transaction_begin()
            IF NOT cl_ask_confirm('aim-00108') THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL cl_err_collect_init() 
               IF NOT s_aint950_conf(g_inqa_m.inqadocno) THEN
                  CALL cl_err_collect_show()
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               CALL cl_err_collect_show()
            END IF  ]]>
  </point>
  <point name="statechange.invalid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_transaction_begin()
            IF NOT cl_ask_confirm('aim-00109') THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL cl_err_collect_init() 
               IF NOT s_aint950_invalid(g_inqa_m.inqadocno) THEN
                  CALL cl_err_collect_show()
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               CALL cl_err_collect_show()
            END IF]]>
  </point>
  <point name="statechange.more_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="statechange.posted" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_transaction_begin()
            IF NOT cl_ask_confirm('sub-00232') THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               IF aint950_post_input() THEN
                  CALL cl_err_collect_init() 
                  IF NOT s_aint950_post(g_inqa_m.inqadocno) THEN
                     CALL cl_err_collect_show()
                     CALL s_transaction_end('N','0')
                     RETURN
                  ELSE
                     CALL s_transaction_end('Y','0')
                  END IF
                  CALL cl_err_collect_show()
               ELSE
                  RETURN
               END IF
            END IF]]>
  </point>
  <point name="statechange.unconfirmed" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_transaction_begin()
            IF NOT cl_ask_confirm('aim-00110') THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL cl_err_collect_init() 
               IF NOT s_aint950_unconf(g_inqa_m.inqadocno) THEN
                  CALL cl_err_collect_show()
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               CALL cl_err_collect_show()
            END IF]]>
  </point>
  <point name="statechange.unposted" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET lc_state = "Y"
            CALL s_transaction_begin()
            IF NOT cl_ask_confirm('sub-00233') THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL cl_err_collect_init() 
               IF NOT s_aint950_unpost(g_inqa_m.inqadocno) THEN
                  CALL cl_err_collect_show()
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
                  CALL cl_err_collect_show()
               END IF
            END IF]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         #第三單身
         DISPLAY ARRAY g_inqb3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx2 = l_ac
               
            BEFORE DISPLAY
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
         END DISPLAY]]>
  </point>
  <point name="ui_dialog.page1.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL aint950_b_fill3()]]>
  </point>
  <section id="aint950.action_chk" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION aint950_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint950.b_fill" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aint950_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_inqb_d.clear()    #g_inqb_d 單頭及單身 
   CALL g_inqb2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aint950_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE inqbseq,inqb001,inqb002,inqb003,inqb004,inqb005,inqb006,inqb007, 
             inqb008,inqb009,inqb010,inqbsite,inqbunit ,t1.imaal003 ,t2.imaal004 ,t3.oocal003 ,t4.inayl003 FROM inqb_t", 
                
                     " INNER JOIN inqa_t ON inqadocno = inqbdocno ",
 
                     #"",
                     " LEFT JOIN inqc_t ON inqbent = inqcent AND inqbdocno = inqcdocno AND inqbseq = inqcseq ",
                     "",
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=inqb002 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=inqb002 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent='"||g_enterprise||"' AND t3.oocal001=inqb004 AND t3.oocal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t4 ON t4.inaylent='"||g_enterprise||"' AND t4.inayl001=inqb006 AND t4.inayl002='"||g_dlang||"' ",
 
                     " WHERE inqbent=? AND inqbdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
            IF NOT cl_null(g_wc2_table2) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table2 CLIPPED
   END IF 
 
         
         LET g_sql = g_sql, " ORDER BY inqb_t.inqbseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aint950_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR aint950_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_inqa_m.inqadocno
                                               
      FOREACH b_fill_cs INTO g_inqb_d[l_ac].inqbseq,g_inqb_d[l_ac].inqb001,g_inqb_d[l_ac].inqb002,g_inqb_d[l_ac].inqb003, 
          g_inqb_d[l_ac].inqb004,g_inqb_d[l_ac].inqb005,g_inqb_d[l_ac].inqb006,g_inqb_d[l_ac].inqb007, 
          g_inqb_d[l_ac].inqb008,g_inqb_d[l_ac].inqb009,g_inqb_d[l_ac].inqb010,g_inqb_d[l_ac].inqbsite, 
          g_inqb_d[l_ac].inqbunit,g_inqb_d[l_ac].inqb002_desc,g_inqb_d[l_ac].inqb002_desc_desc,g_inqb_d[l_ac].inqb004_desc, 
          g_inqb_d[l_ac].inqb006_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_inqb_d.deleteElement(g_inqb_d.getLength())
   CALL g_inqb2_d.deleteElement(g_inqb2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aint950_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_inqb_d.getLength()
      LET g_inqb_d_mask_o[l_ac].* =  g_inqb_d[l_ac].*
      CALL aint950_inqb_t_mask()
      LET g_inqb_d_mask_n[l_ac].* =  g_inqb_d[l_ac].*
   END FOR
   
   LET g_inqb2_d_mask_o.* =  g_inqb2_d.*
   FOR l_ac = 1 TO g_inqb2_d.getLength()
      LET g_inqb2_d_mask_o[l_ac].* =  g_inqb2_d[l_ac].*
      CALL aint950_inqc_t_mask()
      LET g_inqb2_d_mask_n[l_ac].* =  g_inqb2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="aint950.b_fill2" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aint950_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   IF aint950_fill_chk(2) THEN
      IF (pi_idx = 2 OR pi_idx = 0 ) AND g_inqb_d.getLength() > 0 THEN
               CALL g_inqb2_d.clear()
 
         LET g_sql = "SELECT  UNIQUE inqcseq1,inqc001,inqc002,inqc003,inqc004,inqc005,inqc006,inqc007, 
             inqc008,inqc009,inqc010,inqcsite,inqcunit ,t6.imaal003 ,t8.oocal003 ,t9.inayl003 FROM inqc_t", 
                 
                     "",
                                    " LEFT JOIN imaal_t t6 ON t6.imaalent='"||g_enterprise||"' AND t6.imaal001=inqc002 AND t6.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t8 ON t8.oocalent='"||g_enterprise||"' AND t8.oocal001=inqc004 AND t8.oocal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t9 ON t9.inaylent='"||g_enterprise||"' AND t9.inayl001=inqc006 AND t9.inayl002='"||g_dlang||"' ",
 
                     " WHERE inqcent=? AND inqcdocno=? AND inqcseq=?"
         
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  inqc_t.inqcseq1" 
                            
         #add-point:單身填充前
         {<point name="b_fill2.before_fill2" />}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aint950_pb2 FROM g_sql
         DECLARE b_fill_curs2 CURSOR FOR aint950_pb2
         
         OPEN b_fill_curs2 USING g_enterprise,g_inqa_m.inqadocno,g_inqb_d[g_detail_idx].inqbseq
         LET l_ac = 1
         FOREACH b_fill_curs2 INTO g_inqb2_d[l_ac].inqcseq1,g_inqb2_d[l_ac].inqc001,g_inqb2_d[l_ac].inqc002, 
             g_inqb2_d[l_ac].inqc003,g_inqb2_d[l_ac].inqc004,g_inqb2_d[l_ac].inqc005,g_inqb2_d[l_ac].inqc006, 
             g_inqb2_d[l_ac].inqc007,g_inqb2_d[l_ac].inqc008,g_inqb2_d[l_ac].inqc009,g_inqb2_d[l_ac].inqc010, 
             g_inqb2_d[l_ac].inqcsite,g_inqb2_d[l_ac].inqcunit,g_inqb2_d[l_ac].inqc002_desc,g_inqb2_d[l_ac].inqc004_desc, 
             g_inqb2_d[l_ac].inqc006_desc 
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充
            {<point name="b_fill2.fill2"/>}
            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
               CALL g_inqb2_d.deleteElement(g_inqb2_d.getLength())
 
      END IF
   END IF
 
 
      
   LET g_inqb2_d_mask_o.* =  g_inqb2_d.*
   FOR l_ac = 1 TO g_inqb2_d.getLength()
      LET g_inqb2_d_mask_o[l_ac].* =  g_inqb2_d[l_ac].*
      CALL aint950_inqc_t_mask()
      LET g_inqb2_d_mask_n[l_ac].* =  g_inqb2_d[l_ac].*
   END FOR
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aint950_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="aint950.browser_fill" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aint950_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE inqadocno ",
                      " FROM inqa_t ",
                      " ",
                      " LEFT JOIN inqb_t ON inqbent = inqaent AND inqadocno = inqbdocno ", "  ",
                      #add-point:browser_fill段sql(inqb_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
                      " LEFT JOIN inqc_t ON inqcent = inqaent AND inqbdocno = inqcdocno AND inqbseq = inqcseq", "  ",
                      #add-point:browser_fill段sql(inqc_t1)
                      {<point name="browser_fill.cnt.join.inqc_t1"/>}
                      #end add-point
 
 
                      " ", 
                      " ", 
                      " WHERE inqaent = '" ||g_enterprise|| "' AND inqbent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("inqa_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE inqadocno ",
                      " FROM inqa_t ", 
                      "  ",
                      "  ",
                      " WHERE inqaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("inqa_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_inqa_m.* TO NULL
      CALL g_inqb_d.clear()        
      CALL g_inqb2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.inqasite,t0.inqadocno,t0.inqa002,t0.inqa003,t0.inqa005,t0.inqa006 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.inqastus,t0.inqasite,t0.inqadocno,t0.inqa002,t0.inqa003,t0.inqa005, 
       t0.inqa006,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ",
               " FROM inqa_t t0",
               "  ",
               "  LEFT JOIN inqb_t ON inqbent = inqaent AND inqadocno = inqbdocno ", "  ", 
               #add-point:browser_fill段sql(inqb_t1)
               {<point name="browser_fill.join.inqb_t1"/>}
               #end add-point
 
               "  LEFT JOIN inqc_t ON inqcent = inqaent AND inqbdocno = inqcdocno AND inqbseq = inqcseq", "  ", 
               #add-point:browser_fill段sql(inqc_t1)
               {<point name="browser_fill.join.inqc_t1"/>}
               #end add-point
 
 
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.inqasite AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.inqa002  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.inqa003 AND t3.ooefl002='"||g_lang||"' ",
 
               " WHERE t0.inqaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("inqa_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY inqadocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"inqa_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_inqasite,g_browser[g_cnt].b_inqadocno, 
       g_browser[g_cnt].b_inqa002,g_browser[g_cnt].b_inqa003,g_browser[g_cnt].b_inqa005,g_browser[g_cnt].b_inqa006, 
       g_browser[g_cnt].b_inqasite_desc,g_browser[g_cnt].b_inqa002_desc,g_browser[g_cnt].b_inqa003_desc 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL aint950_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "S"
            LET g_browser[g_cnt].b_statepic = "stus/16/posted.png"
         WHEN "Z"
            LET g_browser[g_cnt].b_statepic = "stus/16/unposted.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_inqadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="aint950.construct" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aint950_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_inqa_m.* TO NULL
   CALL g_inqb_d.clear()        
   CALL g_inqb2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON inqa000,inqasite,inqadocdt,inqa001,inqadocno,inqa002,inqa003,inqa004, 
          inqa004_desc,inqaunit,inqa005,inqa006,inqa007,inqastus,inqaownid,inqaowndp,inqacrtid,inqacrtdp, 
          inqacrtdt,inqamodid,inqamoddt,inqacnfid,inqacnfdt,inqapstid,inqapstdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<inqacrtdt>>----
         AFTER FIELD inqacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<inqamoddt>>----
         AFTER FIELD inqamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inqacnfdt>>----
         AFTER FIELD inqacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inqapstdt>>----
         AFTER FIELD inqapstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa000
            #add-point:BEFORE FIELD inqa000
            {<point name="construct.b.inqa000" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa000
            
            #add-point:AFTER FIELD inqa000
            {<point name="construct.a.inqa000" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inqa000
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa000
            #add-point:ON ACTION controlp INFIELD inqa000
            {<point name="construct.c.inqa000" />}
            #END add-point
 
         #Ctrlp:construct.c.inqasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqasite
            #add-point:ON ACTION controlp INFIELD inqasite
            {<point name="construct.c.inqasite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqasite
            #add-point:BEFORE FIELD inqasite
            {<point name="construct.b.inqasite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqasite
            
            #add-point:AFTER FIELD inqasite
            {<point name="construct.a.inqasite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqadocdt
            #add-point:BEFORE FIELD inqadocdt
            {<point name="construct.b.inqadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqadocdt
            
            #add-point:AFTER FIELD inqadocdt
            {<point name="construct.a.inqadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inqadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqadocdt
            #add-point:ON ACTION controlp INFIELD inqadocdt
            {<point name="construct.c.inqadocdt" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa001
            #add-point:BEFORE FIELD inqa001
            {<point name="construct.b.inqa001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa001
            
            #add-point:AFTER FIELD inqa001
            {<point name="construct.a.inqa001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inqa001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa001
            #add-point:ON ACTION controlp INFIELD inqa001
            {<point name="construct.c.inqa001" />}
            #END add-point
 
         #Ctrlp:construct.c.inqadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqadocno
            #add-point:ON ACTION controlp INFIELD inqadocno
            {<point name="construct.c.inqadocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqadocno
            #add-point:BEFORE FIELD inqadocno
            {<point name="construct.b.inqadocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqadocno
            
            #add-point:AFTER FIELD inqadocno
            {<point name="construct.a.inqadocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inqa002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa002
            #add-point:ON ACTION controlp INFIELD inqa002
            {<point name="construct.c.inqa002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa002
            #add-point:BEFORE FIELD inqa002
            {<point name="construct.b.inqa002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa002
            
            #add-point:AFTER FIELD inqa002
            {<point name="construct.a.inqa002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inqa003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa003
            #add-point:ON ACTION controlp INFIELD inqa003
            {<point name="construct.c.inqa003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa003
            #add-point:BEFORE FIELD inqa003
            {<point name="construct.b.inqa003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa003
            
            #add-point:AFTER FIELD inqa003
            {<point name="construct.a.inqa003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inqa004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa004
            #add-point:ON ACTION controlp INFIELD inqa004
            {<point name="construct.c.inqa004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa004
            #add-point:BEFORE FIELD inqa004
            {<point name="construct.b.inqa004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa004
            
            #add-point:AFTER FIELD inqa004
            {<point name="construct.a.inqa004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa004_desc
            #add-point:BEFORE FIELD inqa004_desc
            {<point name="construct.b.inqa004_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa004_desc
            
            #add-point:AFTER FIELD inqa004_desc
            {<point name="construct.a.inqa004_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inqa004_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa004_desc
            #add-point:ON ACTION controlp INFIELD inqa004_desc
            {<point name="construct.c.inqa004_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqaunit
            #add-point:BEFORE FIELD inqaunit
            {<point name="construct.b.inqaunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqaunit
            
            #add-point:AFTER FIELD inqaunit
            {<point name="construct.a.inqaunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inqaunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqaunit
            #add-point:ON ACTION controlp INFIELD inqaunit
            {<point name="construct.c.inqaunit" />}
            #END add-point
 
         #Ctrlp:construct.c.inqa005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa005
            #add-point:ON ACTION controlp INFIELD inqa005
            {<point name="construct.c.inqa005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa005
            #add-point:BEFORE FIELD inqa005
            {<point name="construct.b.inqa005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa005
            
            #add-point:AFTER FIELD inqa005
            {<point name="construct.a.inqa005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inqa006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa006
            #add-point:ON ACTION controlp INFIELD inqa006
            {<point name="construct.c.inqa006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa006
            #add-point:BEFORE FIELD inqa006
            {<point name="construct.b.inqa006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa006
            
            #add-point:AFTER FIELD inqa006
            {<point name="construct.a.inqa006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa007
            #add-point:BEFORE FIELD inqa007
            {<point name="construct.b.inqa007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa007
            
            #add-point:AFTER FIELD inqa007
            {<point name="construct.a.inqa007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inqa007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa007
            #add-point:ON ACTION controlp INFIELD inqa007
            {<point name="construct.c.inqa007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqastus
            #add-point:BEFORE FIELD inqastus
            {<point name="construct.b.inqastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqastus
            
            #add-point:AFTER FIELD inqastus
            {<point name="construct.a.inqastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inqastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqastus
            #add-point:ON ACTION controlp INFIELD inqastus
            {<point name="construct.c.inqastus" />}
            #END add-point
 
         #Ctrlp:construct.c.inqaownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqaownid
            #add-point:ON ACTION controlp INFIELD inqaownid
            {<point name="construct.c.inqaownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqaownid
            #add-point:BEFORE FIELD inqaownid
            {<point name="construct.b.inqaownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqaownid
            
            #add-point:AFTER FIELD inqaownid
            {<point name="construct.a.inqaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inqaowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqaowndp
            #add-point:ON ACTION controlp INFIELD inqaowndp
            {<point name="construct.c.inqaowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqaowndp
            #add-point:BEFORE FIELD inqaowndp
            {<point name="construct.b.inqaowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqaowndp
            
            #add-point:AFTER FIELD inqaowndp
            {<point name="construct.a.inqaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inqacrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqacrtid
            #add-point:ON ACTION controlp INFIELD inqacrtid
            {<point name="construct.c.inqacrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqacrtid
            #add-point:BEFORE FIELD inqacrtid
            {<point name="construct.b.inqacrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqacrtid
            
            #add-point:AFTER FIELD inqacrtid
            {<point name="construct.a.inqacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inqacrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqacrtdp
            #add-point:ON ACTION controlp INFIELD inqacrtdp
            {<point name="construct.c.inqacrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqacrtdp
            #add-point:BEFORE FIELD inqacrtdp
            {<point name="construct.b.inqacrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqacrtdp
            
            #add-point:AFTER FIELD inqacrtdp
            {<point name="construct.a.inqacrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqacrtdt
            #add-point:BEFORE FIELD inqacrtdt
            {<point name="construct.b.inqacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.inqamodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqamodid
            #add-point:ON ACTION controlp INFIELD inqamodid
            {<point name="construct.c.inqamodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqamodid
            #add-point:BEFORE FIELD inqamodid
            {<point name="construct.b.inqamodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqamodid
            
            #add-point:AFTER FIELD inqamodid
            {<point name="construct.a.inqamodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqamoddt
            #add-point:BEFORE FIELD inqamoddt
            {<point name="construct.b.inqamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.inqacnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqacnfid
            #add-point:ON ACTION controlp INFIELD inqacnfid
            {<point name="construct.c.inqacnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqacnfid
            #add-point:BEFORE FIELD inqacnfid
            {<point name="construct.b.inqacnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqacnfid
            
            #add-point:AFTER FIELD inqacnfid
            {<point name="construct.a.inqacnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqacnfdt
            #add-point:BEFORE FIELD inqacnfdt
            {<point name="construct.b.inqacnfdt" />}
            #END add-point
 
         #Ctrlp:construct.c.inqapstid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqapstid
            #add-point:ON ACTION controlp INFIELD inqapstid
            {<point name="construct.c.inqapstid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqapstid
            #add-point:BEFORE FIELD inqapstid
            {<point name="construct.b.inqapstid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqapstid
            
            #add-point:AFTER FIELD inqapstid
            {<point name="construct.a.inqapstid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqapstdt
            #add-point:BEFORE FIELD inqapstdt
            {<point name="construct.b.inqapstdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON inqbseq,inqb001,inqb002,inqb003,inqb003_desc,inqb004,inqb005,inqb006, 
          inqb007,inqb008,inqb009,inqb010,inqbsite,inqbunit
           FROM s_detail1[1].inqbseq,s_detail1[1].inqb001,s_detail1[1].inqb002,s_detail1[1].inqb003, 
               s_detail1[1].inqb003_desc,s_detail1[1].inqb004,s_detail1[1].inqb005,s_detail1[1].inqb006, 
               s_detail1[1].inqb007,s_detail1[1].inqb008,s_detail1[1].inqb009,s_detail1[1].inqb010,s_detail1[1].inqbsite, 
               s_detail1[1].inqbunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqbseq
            #add-point:BEFORE FIELD inqbseq
            {<point name="construct.b.page1.inqbseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqbseq
            
            #add-point:AFTER FIELD inqbseq
            {<point name="construct.a.page1.inqbseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inqbseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqbseq
            #add-point:ON ACTION controlp INFIELD inqbseq
            {<point name="construct.c.page1.inqbseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.inqb001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb001
            #add-point:ON ACTION controlp INFIELD inqb001
            {<point name="construct.c.page1.inqb001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb001
            #add-point:BEFORE FIELD inqb001
            {<point name="construct.b.page1.inqb001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb001
            
            #add-point:AFTER FIELD inqb001
            {<point name="construct.a.page1.inqb001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inqb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb002
            #add-point:ON ACTION controlp INFIELD inqb002
            {<point name="construct.c.page1.inqb002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb002
            #add-point:BEFORE FIELD inqb002
            {<point name="construct.b.page1.inqb002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb002
            
            #add-point:AFTER FIELD inqb002
            {<point name="construct.a.page1.inqb002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb003
            #add-point:BEFORE FIELD inqb003
            {<point name="construct.b.page1.inqb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb003
            
            #add-point:AFTER FIELD inqb003
            {<point name="construct.a.page1.inqb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inqb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb003
            #add-point:ON ACTION controlp INFIELD inqb003
            {<point name="construct.c.page1.inqb003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb003_desc
            #add-point:BEFORE FIELD inqb003_desc
            {<point name="construct.b.page1.inqb003_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb003_desc
            
            #add-point:AFTER FIELD inqb003_desc
            {<point name="construct.a.page1.inqb003_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inqb003_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb003_desc
            #add-point:ON ACTION controlp INFIELD inqb003_desc
            {<point name="construct.c.page1.inqb003_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.inqb004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb004
            #add-point:ON ACTION controlp INFIELD inqb004
            {<point name="construct.c.page1.inqb004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb004
            #add-point:BEFORE FIELD inqb004
            {<point name="construct.b.page1.inqb004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb004
            
            #add-point:AFTER FIELD inqb004
            {<point name="construct.a.page1.inqb004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb005
            #add-point:BEFORE FIELD inqb005
            {<point name="construct.b.page1.inqb005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb005
            
            #add-point:AFTER FIELD inqb005
            {<point name="construct.a.page1.inqb005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inqb005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb005
            #add-point:ON ACTION controlp INFIELD inqb005
            {<point name="construct.c.page1.inqb005" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.inqb006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb006
            #add-point:ON ACTION controlp INFIELD inqb006
            {<point name="construct.c.page1.inqb006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb006
            #add-point:BEFORE FIELD inqb006
            {<point name="construct.b.page1.inqb006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb006
            
            #add-point:AFTER FIELD inqb006
            {<point name="construct.a.page1.inqb006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inqb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb007
            #add-point:ON ACTION controlp INFIELD inqb007
            {<point name="construct.c.page1.inqb007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb007
            #add-point:BEFORE FIELD inqb007
            {<point name="construct.b.page1.inqb007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb007
            
            #add-point:AFTER FIELD inqb007
            {<point name="construct.a.page1.inqb007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb008
            #add-point:BEFORE FIELD inqb008
            {<point name="construct.b.page1.inqb008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb008
            
            #add-point:AFTER FIELD inqb008
            {<point name="construct.a.page1.inqb008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inqb008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb008
            #add-point:ON ACTION controlp INFIELD inqb008
            {<point name="construct.c.page1.inqb008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb009
            #add-point:BEFORE FIELD inqb009
            {<point name="construct.b.page1.inqb009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb009
            
            #add-point:AFTER FIELD inqb009
            {<point name="construct.a.page1.inqb009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inqb009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb009
            #add-point:ON ACTION controlp INFIELD inqb009
            {<point name="construct.c.page1.inqb009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb010
            #add-point:BEFORE FIELD inqb010
            {<point name="construct.b.page1.inqb010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb010
            
            #add-point:AFTER FIELD inqb010
            {<point name="construct.a.page1.inqb010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inqb010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb010
            #add-point:ON ACTION controlp INFIELD inqb010
            {<point name="construct.c.page1.inqb010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqbsite
            #add-point:BEFORE FIELD inqbsite
            {<point name="construct.b.page1.inqbsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqbsite
            
            #add-point:AFTER FIELD inqbsite
            {<point name="construct.a.page1.inqbsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inqbsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqbsite
            #add-point:ON ACTION controlp INFIELD inqbsite
            {<point name="construct.c.page1.inqbsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqbunit
            #add-point:BEFORE FIELD inqbunit
            {<point name="construct.b.page1.inqbunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqbunit
            
            #add-point:AFTER FIELD inqbunit
            {<point name="construct.a.page1.inqbunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inqbunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqbunit
            #add-point:ON ACTION controlp INFIELD inqbunit
            {<point name="construct.c.page1.inqbunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
      CONSTRUCT g_wc2_table2 ON inqcseq1,inqc001,inqc002,inqc003,inqc003_desc,inqc004,inqc005,inqc006, 
          inqc007,inqc008,inqc009,inqc010,inqcsite,inqcunit
           FROM s_detail2[1].inqcseq1,s_detail2[1].inqc001,s_detail2[1].inqc002,s_detail2[1].inqc003, 
               s_detail2[1].inqc003_desc,s_detail2[1].inqc004,s_detail2[1].inqc005,s_detail2[1].inqc006, 
               s_detail2[1].inqc007,s_detail2[1].inqc008,s_detail2[1].inqc009,s_detail2[1].inqc010,s_detail2[1].inqcsite, 
               s_detail2[1].inqcunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqcseq1
            #add-point:BEFORE FIELD inqcseq1
            {<point name="construct.b.page2.inqcseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqcseq1
            
            #add-point:AFTER FIELD inqcseq1
            {<point name="construct.a.page2.inqcseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inqcseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqcseq1
            #add-point:ON ACTION controlp INFIELD inqcseq1
            {<point name="construct.c.page2.inqcseq1" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.inqc001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc001
            #add-point:ON ACTION controlp INFIELD inqc001
            {<point name="construct.c.page2.inqc001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc001
            #add-point:BEFORE FIELD inqc001
            {<point name="construct.b.page2.inqc001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc001
            
            #add-point:AFTER FIELD inqc001
            {<point name="construct.a.page2.inqc001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inqc002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc002
            #add-point:ON ACTION controlp INFIELD inqc002
            {<point name="construct.c.page2.inqc002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc002
            #add-point:BEFORE FIELD inqc002
            {<point name="construct.b.page2.inqc002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc002
            
            #add-point:AFTER FIELD inqc002
            {<point name="construct.a.page2.inqc002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc003
            #add-point:BEFORE FIELD inqc003
            {<point name="construct.b.page2.inqc003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc003
            
            #add-point:AFTER FIELD inqc003
            {<point name="construct.a.page2.inqc003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inqc003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc003
            #add-point:ON ACTION controlp INFIELD inqc003
            {<point name="construct.c.page2.inqc003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc003_desc
            #add-point:BEFORE FIELD inqc003_desc
            {<point name="construct.b.page2.inqc003_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc003_desc
            
            #add-point:AFTER FIELD inqc003_desc
            {<point name="construct.a.page2.inqc003_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inqc003_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc003_desc
            #add-point:ON ACTION controlp INFIELD inqc003_desc
            {<point name="construct.c.page2.inqc003_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.inqc004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc004
            #add-point:ON ACTION controlp INFIELD inqc004
            {<point name="construct.c.page2.inqc004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc004
            #add-point:BEFORE FIELD inqc004
            {<point name="construct.b.page2.inqc004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc004
            
            #add-point:AFTER FIELD inqc004
            {<point name="construct.a.page2.inqc004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc005
            #add-point:BEFORE FIELD inqc005
            {<point name="construct.b.page2.inqc005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc005
            
            #add-point:AFTER FIELD inqc005
            {<point name="construct.a.page2.inqc005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inqc005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc005
            #add-point:ON ACTION controlp INFIELD inqc005
            {<point name="construct.c.page2.inqc005" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.inqc006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc006
            #add-point:ON ACTION controlp INFIELD inqc006
            {<point name="construct.c.page2.inqc006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc006
            #add-point:BEFORE FIELD inqc006
            {<point name="construct.b.page2.inqc006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc006
            
            #add-point:AFTER FIELD inqc006
            {<point name="construct.a.page2.inqc006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inqc007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc007
            #add-point:ON ACTION controlp INFIELD inqc007
            {<point name="construct.c.page2.inqc007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc007
            #add-point:BEFORE FIELD inqc007
            {<point name="construct.b.page2.inqc007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc007
            
            #add-point:AFTER FIELD inqc007
            {<point name="construct.a.page2.inqc007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc008
            #add-point:BEFORE FIELD inqc008
            {<point name="construct.b.page2.inqc008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc008
            
            #add-point:AFTER FIELD inqc008
            {<point name="construct.a.page2.inqc008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inqc008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc008
            #add-point:ON ACTION controlp INFIELD inqc008
            {<point name="construct.c.page2.inqc008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc009
            #add-point:BEFORE FIELD inqc009
            {<point name="construct.b.page2.inqc009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc009
            
            #add-point:AFTER FIELD inqc009
            {<point name="construct.a.page2.inqc009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inqc009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc009
            #add-point:ON ACTION controlp INFIELD inqc009
            {<point name="construct.c.page2.inqc009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc010
            #add-point:BEFORE FIELD inqc010
            {<point name="construct.b.page2.inqc010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc010
            
            #add-point:AFTER FIELD inqc010
            {<point name="construct.a.page2.inqc010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inqc010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc010
            #add-point:ON ACTION controlp INFIELD inqc010
            {<point name="construct.c.page2.inqc010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqcsite
            #add-point:BEFORE FIELD inqcsite
            {<point name="construct.b.page2.inqcsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqcsite
            
            #add-point:AFTER FIELD inqcsite
            {<point name="construct.a.page2.inqcsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inqcsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqcsite
            #add-point:ON ACTION controlp INFIELD inqcsite
            {<point name="construct.c.page2.inqcsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqcunit
            #add-point:BEFORE FIELD inqcunit
            {<point name="construct.b.page2.inqcunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqcunit
            
            #add-point:AFTER FIELD inqcunit
            {<point name="construct.a.page2.inqcunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inqcunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqcunit
            #add-point:ON ACTION controlp INFIELD inqcunit
            {<point name="construct.c.page2.inqcunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "inqa_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "inqb_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aint950.default_search" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aint950_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " inqadocno = '", g_argv[02], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "inqa_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "inqb_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="aint950.delete" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aint950_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_inqa_m.inqadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN aint950_cl USING g_enterprise,g_inqa_m.inqadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint950_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint950_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint950_master_referesh USING g_inqa_m.inqadocno INTO g_inqa_m.inqa000,g_inqa_m.inqasite, 
       g_inqa_m.inqadocdt,g_inqa_m.inqa001,g_inqa_m.inqadocno,g_inqa_m.inqa002,g_inqa_m.inqa003,g_inqa_m.inqa004, 
       g_inqa_m.inqaunit,g_inqa_m.inqa005,g_inqa_m.inqa006,g_inqa_m.inqa007,g_inqa_m.inqastus,g_inqa_m.inqaownid, 
       g_inqa_m.inqaowndp,g_inqa_m.inqacrtid,g_inqa_m.inqacrtdp,g_inqa_m.inqacrtdt,g_inqa_m.inqamodid, 
       g_inqa_m.inqamoddt,g_inqa_m.inqacnfid,g_inqa_m.inqacnfdt,g_inqa_m.inqapstid,g_inqa_m.inqapstdt, 
       g_inqa_m.inqasite_desc,g_inqa_m.inqa002_desc,g_inqa_m.inqa003_desc,g_inqa_m.inqaownid_desc,g_inqa_m.inqaowndp_desc, 
       g_inqa_m.inqacrtid_desc,g_inqa_m.inqacrtdp_desc,g_inqa_m.inqamodid_desc,g_inqa_m.inqacnfid_desc, 
       g_inqa_m.inqapstid_desc
   
   #檢查是否允許此動作
   IF NOT aint950_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_inqa_m_mask_o.* =  g_inqa_m.*
   CALL aint950_inqa_t_mask()
   LET g_inqa_m_mask_n.* =  g_inqa_m.*
   
   CALL aint950_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL aint950_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_inqadocno_t = g_inqa_m.inqadocno
 
 
      DELETE FROM inqa_t
       WHERE inqaent = g_enterprise AND inqadocno = g_inqa_m.inqadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_inqa_m.inqadocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM inqb_t
       WHERE inqbent = g_enterprise AND inqbdocno = g_inqa_m.inqadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "inqb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM inqc_t
       WHERE inqcent = g_enterprise AND
             inqcdocno = g_inqa_m.inqadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "inqc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE aint950_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_inqb_d.clear() 
      CALL g_inqb2_d.clear()       
 
     
      CALL aint950_ui_browser_refresh()  
      #CALL aint950_ui_headershow()  
      #CALL aint950_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL aint950_browser_fill("")
         CALL aint950_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE aint950_cl
 
   #功能已完成,通報訊息中心
   CALL aint950_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="aint950.delete_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aint950_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM inqb_t
       WHERE inqbent = g_enterprise AND
         inqbdocno = ps_keys_bak[1] AND inqbseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_inqb_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM inqc_t
       WHERE inqcent = g_enterprise AND
             inqcdocno = ps_keys_bak[1] AND inqcseq = ps_keys_bak[2] AND inqcseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "inqc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
    
      LET li_idx = g_detail_idx2
      IF ps_page <> "'2'" THEN 
         CALL g_inqb2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint950.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000013
#+ 
#+ Filename...: aint950
#+ Description: 商品組合維護作業
#+ Creator....: 02749(2015-04-27 02:45:03)
#+ Modifier...: 02749(2015-04-28 05:47:12) -SD/PR-
]]>
  </section>
  <section id="aint950.detail_reproduce" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aint950_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE inqb_t.*
 
   DEFINE l_detail2    RECORD LIKE inqc_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aint950_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aint950_detail AS ",
                "SELECT * FROM inqb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aint950_detail SELECT * FROM inqb_t 
                                         WHERE inqbent = g_enterprise AND inqbdocno = g_inqadocno_t
 
   
   #將key修正為調整後   
   UPDATE aint950_detail 
      #更新key欄位
      SET inqbdocno = g_inqa_m.inqadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO inqb_t SELECT * FROM aint950_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aint950_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE aint950_detail AS ",
      "SELECT * FROM inqc_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aint950_detail SELECT * FROM inqc_t
                                         WHERE inqcent = g_enterprise AND inqcdocno = g_inqadocno_t
 
 
   #將key修正為調整後   
   UPDATE aint950_detail SET inqcdocno = g_inqa_m.inqadocno
 
  
   #將資料塞回原table   
   INSERT INTO inqc_t SELECT * FROM aint950_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aint950_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_inqadocno_t = g_inqa_m.inqadocno
 
   
END FUNCTION
]]>
  </section>
  <section id="aint950.detail_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aint950_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aint950.fetch" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aint950_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_inqa_m.inqadocno = g_browser[g_current_idx].b_inqadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aint950_master_referesh USING g_inqa_m.inqadocno INTO g_inqa_m.inqa000,g_inqa_m.inqasite, 
       g_inqa_m.inqadocdt,g_inqa_m.inqa001,g_inqa_m.inqadocno,g_inqa_m.inqa002,g_inqa_m.inqa003,g_inqa_m.inqa004, 
       g_inqa_m.inqaunit,g_inqa_m.inqa005,g_inqa_m.inqa006,g_inqa_m.inqa007,g_inqa_m.inqastus,g_inqa_m.inqaownid, 
       g_inqa_m.inqaowndp,g_inqa_m.inqacrtid,g_inqa_m.inqacrtdp,g_inqa_m.inqacrtdt,g_inqa_m.inqamodid, 
       g_inqa_m.inqamoddt,g_inqa_m.inqacnfid,g_inqa_m.inqacnfdt,g_inqa_m.inqapstid,g_inqa_m.inqapstdt, 
       g_inqa_m.inqasite_desc,g_inqa_m.inqa002_desc,g_inqa_m.inqa003_desc,g_inqa_m.inqaownid_desc,g_inqa_m.inqaowndp_desc, 
       g_inqa_m.inqacrtid_desc,g_inqa_m.inqacrtdp_desc,g_inqa_m.inqamodid_desc,g_inqa_m.inqacnfid_desc, 
       g_inqa_m.inqapstid_desc
   
   #遮罩相關處理
   LET g_inqa_m_mask_o.* =  g_inqa_m.*
   CALL aint950_inqa_t_mask()
   LET g_inqa_m_mask_n.* =  g_inqa_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint950_set_act_visible()   
   CALL aint950_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_inqa_m_t.* = g_inqa_m.*
   LET g_inqa_m_o.* = g_inqa_m.*
   
   LET g_data_owner = g_inqa_m.inqaownid      
   LET g_data_dept  = g_inqa_m.inqaowndp
   
   #重新顯示   
   CALL aint950_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="aint950.fill_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aint950_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aint950.filter" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION aint950_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON inqasite,inqadocno,inqa002,inqa003,inqa005,inqa006
                          FROM s_browse[1].b_inqasite,s_browse[1].b_inqadocno,s_browse[1].b_inqa002, 
                              s_browse[1].b_inqa003,s_browse[1].b_inqa005,s_browse[1].b_inqa006
 
         BEFORE CONSTRUCT
               DISPLAY aint950_filter_parser('inqasite') TO s_browse[1].b_inqasite
            DISPLAY aint950_filter_parser('inqadocno') TO s_browse[1].b_inqadocno
            DISPLAY aint950_filter_parser('inqa002') TO s_browse[1].b_inqa002
            DISPLAY aint950_filter_parser('inqa003') TO s_browse[1].b_inqa003
            DISPLAY aint950_filter_parser('inqa005') TO s_browse[1].b_inqa005
            DISPLAY aint950_filter_parser('inqa006') TO s_browse[1].b_inqa006
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aint950_filter_show('inqasite')
   CALL aint950_filter_show('inqadocno')
   CALL aint950_filter_show('inqa002')
   CALL aint950_filter_show('inqa003')
   CALL aint950_filter_show('inqa005')
   CALL aint950_filter_show('inqa006')
 
END FUNCTION
]]>
  </section>
  <section id="aint950.filter_parser" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aint950_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="aint950.filter_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aint950_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aint950_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="aint950.global" ver="15" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:38)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_inqa_m        RECORD
       inqa000 LIKE inqa_t.inqa000, 
   inqasite LIKE inqa_t.inqasite, 
   inqasite_desc LIKE type_t.chr80, 
   inqadocdt LIKE inqa_t.inqadocdt, 
   inqa001 LIKE inqa_t.inqa001, 
   inqadocno LIKE inqa_t.inqadocno, 
   inqa002 LIKE inqa_t.inqa002, 
   inqa002_desc LIKE type_t.chr80, 
   inqa003 LIKE inqa_t.inqa003, 
   inqa003_desc LIKE type_t.chr80, 
   inqa004 LIKE inqa_t.inqa004, 
   inqa004_desc LIKE type_t.chr80, 
   inqaunit LIKE inqa_t.inqaunit, 
   inqa005 LIKE inqa_t.inqa005, 
   inqa006 LIKE inqa_t.inqa006, 
   inqa007 LIKE inqa_t.inqa007, 
   inqastus LIKE inqa_t.inqastus, 
   inqaownid LIKE inqa_t.inqaownid, 
   inqaownid_desc LIKE type_t.chr80, 
   inqaowndp LIKE inqa_t.inqaowndp, 
   inqaowndp_desc LIKE type_t.chr80, 
   inqacrtid LIKE inqa_t.inqacrtid, 
   inqacrtid_desc LIKE type_t.chr80, 
   inqacrtdp LIKE inqa_t.inqacrtdp, 
   inqacrtdp_desc LIKE type_t.chr80, 
   inqacrtdt LIKE inqa_t.inqacrtdt, 
   inqamodid LIKE inqa_t.inqamodid, 
   inqamodid_desc LIKE type_t.chr80, 
   inqamoddt LIKE inqa_t.inqamoddt, 
   inqacnfid LIKE inqa_t.inqacnfid, 
   inqacnfid_desc LIKE type_t.chr80, 
   inqacnfdt LIKE inqa_t.inqacnfdt, 
   inqapstid LIKE inqa_t.inqapstid, 
   inqapstid_desc LIKE type_t.chr80, 
   inqapstdt LIKE inqa_t.inqapstdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_inqb_d        RECORD
       inqbseq LIKE inqb_t.inqbseq, 
   inqb001 LIKE inqb_t.inqb001, 
   inqb002 LIKE inqb_t.inqb002, 
   inqb002_desc LIKE type_t.chr500, 
   inqb002_desc_desc LIKE type_t.chr500, 
   inqb003 LIKE inqb_t.inqb003, 
   inqb003_desc LIKE type_t.chr500, 
   inqb004 LIKE inqb_t.inqb004, 
   inqb004_desc LIKE type_t.chr500, 
   inqb005 LIKE inqb_t.inqb005, 
   inqb006 LIKE inqb_t.inqb006, 
   inqb006_desc LIKE type_t.chr500, 
   inqb007 LIKE inqb_t.inqb007, 
   inqb007_desc LIKE type_t.chr500, 
   inqb008 LIKE inqb_t.inqb008, 
   inqb009 LIKE inqb_t.inqb009, 
   inqb010 LIKE inqb_t.inqb010, 
   inqbsite LIKE inqb_t.inqbsite, 
   inqbunit LIKE inqb_t.inqbunit
       END RECORD
PRIVATE TYPE type_g_inqb2_d RECORD
       inqcseq1 LIKE inqc_t.inqcseq1, 
   inqc001 LIKE inqc_t.inqc001, 
   inqc002 LIKE inqc_t.inqc002, 
   inqc002_desc LIKE type_t.chr500, 
   inqc002_desc_desc LIKE type_t.chr500, 
   inqc003 LIKE inqc_t.inqc003, 
   inqc003_desc LIKE type_t.chr500, 
   inqc004 LIKE inqc_t.inqc004, 
   inqc004_desc LIKE type_t.chr500, 
   inqc005 LIKE inqc_t.inqc005, 
   inqc006 LIKE inqc_t.inqc006, 
   inqc006_desc LIKE type_t.chr500, 
   inqc007 LIKE inqc_t.inqc007, 
   inqc007_desc LIKE type_t.chr500, 
   inqc008 LIKE inqc_t.inqc008, 
   inqc009 LIKE inqc_t.inqc009, 
   inqc010 LIKE inqc_t.inqc010, 
   inqcsite LIKE inqc_t.inqcsite, 
   inqcunit LIKE inqc_t.inqcunit
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_inqasite LIKE inqa_t.inqasite,
   b_inqasite_desc LIKE type_t.chr80,
      b_inqadocno LIKE inqa_t.inqadocno,
      b_inqa002 LIKE inqa_t.inqa002,
   b_inqa002_desc LIKE type_t.chr80,
      b_inqa003 LIKE inqa_t.inqa003,
   b_inqa003_desc LIKE type_t.chr80,
      b_inqa005 LIKE inqa_t.inqa005,
      b_inqa006 LIKE inqa_t.inqa006
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_inqa_m          type_g_inqa_m
DEFINE g_inqa_m_t        type_g_inqa_m
DEFINE g_inqa_m_o        type_g_inqa_m
DEFINE g_inqa_m_mask_o   type_g_inqa_m #轉換遮罩前資料
DEFINE g_inqa_m_mask_n   type_g_inqa_m #轉換遮罩後資料
 
   DEFINE g_inqadocno_t LIKE inqa_t.inqadocno
 
 
DEFINE g_inqb_d          DYNAMIC ARRAY OF type_g_inqb_d
DEFINE g_inqb_d_t        type_g_inqb_d
DEFINE g_inqb_d_o        type_g_inqb_d
DEFINE g_inqb_d_mask_o   DYNAMIC ARRAY OF type_g_inqb_d #轉換遮罩前資料
DEFINE g_inqb_d_mask_n   DYNAMIC ARRAY OF type_g_inqb_d #轉換遮罩後資料
DEFINE g_inqb2_d          DYNAMIC ARRAY OF type_g_inqb2_d
DEFINE g_inqb2_d_t        type_g_inqb2_d
DEFINE g_inqb2_d_o        type_g_inqb2_d
DEFINE g_inqb2_d_mask_o   DYNAMIC ARRAY OF type_g_inqb2_d #轉換遮罩前資料
DEFINE g_inqb2_d_mask_n   DYNAMIC ARRAY OF type_g_inqb2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
DEFINE g_wc2_table2   STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aint950.idx_chk" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION aint950_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_inqb_d.getLength() THEN
         LET g_detail_idx = g_inqb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_inqb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_inqb_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx2 > g_inqb2_d.getLength() THEN
         LET g_detail_idx2 = g_inqb2_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_inqb2_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_inqb2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aint950.init" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aint950_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('inqastus','13','N,A,D,R,W,Y,S,Z,X')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL aint950_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="aint950.input" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aint950_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_inqa_m.inqa000,g_inqa_m.inqasite,g_inqa_m.inqasite_desc,g_inqa_m.inqadocdt,g_inqa_m.inqa001, 
       g_inqa_m.inqadocno,g_inqa_m.inqa002,g_inqa_m.inqa002_desc,g_inqa_m.inqa003,g_inqa_m.inqa003_desc, 
       g_inqa_m.inqa004,g_inqa_m.inqa004_desc,g_inqa_m.inqaunit,g_inqa_m.inqa005,g_inqa_m.inqa006,g_inqa_m.inqa007, 
       g_inqa_m.inqastus,g_inqa_m.inqaownid,g_inqa_m.inqaownid_desc,g_inqa_m.inqaowndp,g_inqa_m.inqaowndp_desc, 
       g_inqa_m.inqacrtid,g_inqa_m.inqacrtid_desc,g_inqa_m.inqacrtdp,g_inqa_m.inqacrtdp_desc,g_inqa_m.inqacrtdt, 
       g_inqa_m.inqamodid,g_inqa_m.inqamodid_desc,g_inqa_m.inqamoddt,g_inqa_m.inqacnfid,g_inqa_m.inqacnfid_desc, 
       g_inqa_m.inqacnfdt,g_inqa_m.inqapstid,g_inqa_m.inqapstid_desc,g_inqa_m.inqapstdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT inqbseq,inqb001,inqb002,inqb003,inqb004,inqb005,inqb006,inqb007,inqb008, 
       inqb009,inqb010,inqbsite,inqbunit FROM inqb_t WHERE inqbent=? AND inqbdocno=? AND inqbseq=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint950_bcl CURSOR FROM g_forupd_sql
   
 
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT inqcseq1,inqc001,inqc002,inqc003,inqc004,inqc005,inqc006,inqc007,inqc008, 
       inqc009,inqc010,inqcsite,inqcunit FROM inqc_t WHERE inqcent=? AND inqcdocno=? AND inqcseq=? AND  
       inqcseq1=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint950_bcl2 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aint950_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aint950_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_inqa_m.inqa000,g_inqa_m.inqasite,g_inqa_m.inqadocdt,g_inqa_m.inqa001,g_inqa_m.inqadocno, 
       g_inqa_m.inqa002,g_inqa_m.inqa003,g_inqa_m.inqa004,g_inqa_m.inqaunit,g_inqa_m.inqa005,g_inqa_m.inqa006, 
       g_inqa_m.inqa007,g_inqa_m.inqastus
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="aint950.input.body" ver="6" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_inqb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_inqb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aint950_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_inqb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            CALL aint950_b_fill2('2')
 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aint950_cl USING g_enterprise,g_inqa_m.inqadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aint950_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aint950_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_inqb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_inqb_d[l_ac].inqbseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_inqb_d_t.* = g_inqb_d[l_ac].*  #BACKUP
               LET g_inqb_d_o.* = g_inqb_d[l_ac].*  #BACKUP
               CALL aint950_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aint950_set_no_entry_b(l_cmd)
               IF NOT aint950_lock_b("inqb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aint950_bcl INTO g_inqb_d[l_ac].inqbseq,g_inqb_d[l_ac].inqb001,g_inqb_d[l_ac].inqb002, 
                      g_inqb_d[l_ac].inqb003,g_inqb_d[l_ac].inqb004,g_inqb_d[l_ac].inqb005,g_inqb_d[l_ac].inqb006, 
                      g_inqb_d[l_ac].inqb007,g_inqb_d[l_ac].inqb008,g_inqb_d[l_ac].inqb009,g_inqb_d[l_ac].inqb010, 
                      g_inqb_d[l_ac].inqbsite,g_inqb_d[l_ac].inqbunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_inqb_d_t.inqbseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_inqb_d_mask_o[l_ac].* =  g_inqb_d[l_ac].*
                  CALL aint950_inqb_t_mask()
                  LET g_inqb_d_mask_n[l_ac].* =  g_inqb_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL aint950_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_inqb_d[l_ac].* TO NULL 
            INITIALIZE g_inqb_d_t.* TO NULL 
            INITIALIZE g_inqb_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_inqb_d[l_ac].inqb005 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_inqb_d_t.* = g_inqb_d[l_ac].*     #新輸入資料
            LET g_inqb_d_o.* = g_inqb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aint950_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aint950_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_inqb_d[li_reproduce_target].* = g_inqb_d[li_reproduce].*
 
               LET g_inqb_d[li_reproduce_target].inqbseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM inqb_t 
             WHERE inqbent = g_enterprise AND inqbdocno = g_inqa_m.inqadocno
 
               AND inqbseq = g_inqb_d[l_ac].inqbseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inqa_m.inqadocno
               LET gs_keys[2] = g_inqb_d[g_detail_idx].inqbseq
               CALL aint950_insert_b('inqb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_inqb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inqb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aint950_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_inqa_m.inqadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_inqb_d_t.inqbseq
 
            
               #刪除同層單身
               IF NOT aint950_delete_b('inqb_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint950_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT aint950_key_delete_b(gs_keys,'inqb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint950_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE aint950_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_inqb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_inqb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqbseq
            #add-point:BEFORE FIELD inqbseq
            {<point name="input.b.page1.inqbseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqbseq
            
            #add-point:AFTER FIELD inqbseq
            {<point name="input.a.page1.inqbseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqbseq
            #add-point:ON CHANGE inqbseq
            {<point name="input.g.page1.inqbseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb001
            
            #add-point:AFTER FIELD inqb001
            {<point name="input.a.page1.inqb001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb001
            #add-point:BEFORE FIELD inqb001
            {<point name="input.b.page1.inqb001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqb001
            #add-point:ON CHANGE inqb001
            {<point name="input.g.page1.inqb001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb002
            
            #add-point:AFTER FIELD inqb002
            {<point name="input.a.page1.inqb002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb002
            #add-point:BEFORE FIELD inqb002
            {<point name="input.b.page1.inqb002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqb002
            #add-point:ON CHANGE inqb002
            {<point name="input.g.page1.inqb002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb003
            
            #add-point:AFTER FIELD inqb003
            {<point name="input.a.page1.inqb003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb003
            #add-point:BEFORE FIELD inqb003
            {<point name="input.b.page1.inqb003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqb003
            #add-point:ON CHANGE inqb003
            {<point name="input.g.page1.inqb003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb004
            
            #add-point:AFTER FIELD inqb004
            {<point name="input.a.page1.inqb004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb004
            #add-point:BEFORE FIELD inqb004
            {<point name="input.b.page1.inqb004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqb004
            #add-point:ON CHANGE inqb004
            {<point name="input.g.page1.inqb004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb005
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_inqb_d[l_ac].inqb005,"0","0","","","azz-00079",1) THEN
               NEXT FIELD inqb005
            END IF 
 
 
            #add-point:AFTER FIELD inqb005
            {<point name="input.a.page1.inqb005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb005
            #add-point:BEFORE FIELD inqb005
            {<point name="input.b.page1.inqb005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqb005
            #add-point:ON CHANGE inqb005
            {<point name="input.g.page1.inqb005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb006
            
            #add-point:AFTER FIELD inqb006
            {<point name="input.a.page1.inqb006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb006
            #add-point:BEFORE FIELD inqb006
            {<point name="input.b.page1.inqb006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqb006
            #add-point:ON CHANGE inqb006
            {<point name="input.g.page1.inqb006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb007
            
            #add-point:AFTER FIELD inqb007
            {<point name="input.a.page1.inqb007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb007
            #add-point:BEFORE FIELD inqb007
            {<point name="input.b.page1.inqb007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqb007
            #add-point:ON CHANGE inqb007
            {<point name="input.g.page1.inqb007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb008
            #add-point:BEFORE FIELD inqb008
            {<point name="input.b.page1.inqb008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb008
            
            #add-point:AFTER FIELD inqb008
            {<point name="input.a.page1.inqb008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqb008
            #add-point:ON CHANGE inqb008
            {<point name="input.g.page1.inqb008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb009
            #add-point:BEFORE FIELD inqb009
            {<point name="input.b.page1.inqb009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb009
            
            #add-point:AFTER FIELD inqb009
            {<point name="input.a.page1.inqb009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqb009
            #add-point:ON CHANGE inqb009
            {<point name="input.g.page1.inqb009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqb010
            #add-point:BEFORE FIELD inqb010
            {<point name="input.b.page1.inqb010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqb010
            
            #add-point:AFTER FIELD inqb010
            {<point name="input.a.page1.inqb010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqb010
            #add-point:ON CHANGE inqb010
            {<point name="input.g.page1.inqb010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqbsite
            #add-point:BEFORE FIELD inqbsite
            {<point name="input.b.page1.inqbsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqbsite
            
            #add-point:AFTER FIELD inqbsite
            {<point name="input.a.page1.inqbsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqbsite
            #add-point:ON CHANGE inqbsite
            {<point name="input.g.page1.inqbsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqbunit
            #add-point:BEFORE FIELD inqbunit
            {<point name="input.b.page1.inqbunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqbunit
            
            #add-point:AFTER FIELD inqbunit
            {<point name="input.a.page1.inqbunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqbunit
            #add-point:ON CHANGE inqbunit
            {<point name="input.g.page1.inqbunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.inqbseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqbseq
            #add-point:ON ACTION controlp INFIELD inqbseq
            {<point name="input.c.page1.inqbseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inqb001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb001
            #add-point:ON ACTION controlp INFIELD inqb001
            {<point name="input.c.page1.inqb001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inqb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb002
            #add-point:ON ACTION controlp INFIELD inqb002
            {<point name="input.c.page1.inqb002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inqb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb003
            #add-point:ON ACTION controlp INFIELD inqb003
            {<point name="input.c.page1.inqb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inqb004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb004
            #add-point:ON ACTION controlp INFIELD inqb004
            {<point name="input.c.page1.inqb004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inqb005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb005
            #add-point:ON ACTION controlp INFIELD inqb005
            {<point name="input.c.page1.inqb005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inqb006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb006
            #add-point:ON ACTION controlp INFIELD inqb006
            {<point name="input.c.page1.inqb006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inqb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb007
            #add-point:ON ACTION controlp INFIELD inqb007
            {<point name="input.c.page1.inqb007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inqb008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb008
            #add-point:ON ACTION controlp INFIELD inqb008
            {<point name="input.c.page1.inqb008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inqb009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb009
            #add-point:ON ACTION controlp INFIELD inqb009
            {<point name="input.c.page1.inqb009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inqb010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqb010
            #add-point:ON ACTION controlp INFIELD inqb010
            {<point name="input.c.page1.inqb010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inqbsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqbsite
            #add-point:ON ACTION controlp INFIELD inqbsite
            {<point name="input.c.page1.inqbsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inqbunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqbunit
            #add-point:ON ACTION controlp INFIELD inqbunit
            {<point name="input.c.page1.inqbunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_inqb_d[l_ac].* = g_inqb_d_t.*
               CLOSE aint950_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_inqb_d[l_ac].inqbseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_inqb_d[l_ac].* = g_inqb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL aint950_inqb_t_mask_restore('restore_mask_o')
      
               UPDATE inqb_t SET (inqbdocno,inqbseq,inqb001,inqb002,inqb003,inqb004,inqb005,inqb006, 
                   inqb007,inqb008,inqb009,inqb010,inqbsite,inqbunit) = (g_inqa_m.inqadocno,g_inqb_d[l_ac].inqbseq, 
                   g_inqb_d[l_ac].inqb001,g_inqb_d[l_ac].inqb002,g_inqb_d[l_ac].inqb003,g_inqb_d[l_ac].inqb004, 
                   g_inqb_d[l_ac].inqb005,g_inqb_d[l_ac].inqb006,g_inqb_d[l_ac].inqb007,g_inqb_d[l_ac].inqb008, 
                   g_inqb_d[l_ac].inqb009,g_inqb_d[l_ac].inqb010,g_inqb_d[l_ac].inqbsite,g_inqb_d[l_ac].inqbunit) 

                WHERE inqbent = g_enterprise AND inqbdocno = g_inqa_m.inqadocno 
 
                  AND inqbseq = g_inqb_d_t.inqbseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "inqb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_inqb_d[l_ac].* = g_inqb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "inqb_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_inqb_d[l_ac].* = g_inqb_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inqa_m.inqadocno
               LET gs_keys_bak[1] = g_inqadocno_t
               LET gs_keys[2] = g_inqb_d[g_detail_idx].inqbseq
               LET gs_keys_bak[2] = g_inqb_d_t.inqbseq
               CALL aint950_update_b('inqb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL aint950_inqb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_inqb_d[g_detail_idx].inqbseq = g_inqb_d_t.inqbseq 
 
                  ) THEN
                  LET gs_keys[01] = g_inqa_m.inqadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_inqb_d_t.inqbseq
 
                  CALL aint950_key_update_b(gs_keys,'inqb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_inqa_m),util.JSON.stringify(g_inqb_d_t)
               LET g_log2 = util.JSON.stringify(g_inqa_m),util.JSON.stringify(g_inqb_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aint950_unlock_b("inqb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_inqb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_inqb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
      INPUT ARRAY g_inqb2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #檢查上層單身是否有資料
            IF cl_null(g_inqb_d[g_detail_idx].inqbseq) THEN
               NEXT FIELD inqbseq
            END IF
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_inqb2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            #如果一直都在單身2則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx2)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_inqb2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_inqb2_d[l_ac].* TO NULL 
            INITIALIZE g_inqb2_d_t.* TO NULL 
            INITIALIZE g_inqb2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_inqb2_d[l_ac].inqcseq1 = "0"
      LET g_inqb2_d[l_ac].inqc005 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_inqb2_d_t.* = g_inqb2_d[l_ac].*     #新輸入資料
            LET g_inqb2_d_o.* = g_inqb2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aint950_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL aint950_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_inqb2_d[li_reproduce_target].* = g_inqb2_d[li_reproduce].*
 
               LET g_inqb2_d[li_reproduce_target].inqcseq1 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET g_current_page = 2
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aint950_cl USING g_enterprise,g_inqa_m.inqadocno
            OPEN aint950_bcl USING g_enterprise,g_inqa_m.inqadocno,g_inqb_d[g_detail_idx].inqbseq
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aint950_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aint950_cl
               CLOSE aint950_bcl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_inqb2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_inqb2_d[l_ac].inqcseq1 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_inqb2_d_t.* = g_inqb2_d[l_ac].*  #BACKUP
               LET g_inqb2_d_o.* = g_inqb2_d[l_ac].*  #BACKUP
               CALL aint950_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL aint950_set_no_entry_b(l_cmd)
               IF NOT aint950_lock_b("inqc_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aint950_bcl2 INTO g_inqb2_d[l_ac].inqcseq1,g_inqb2_d[l_ac].inqc001,g_inqb2_d[l_ac].inqc002, 
                      g_inqb2_d[l_ac].inqc003,g_inqb2_d[l_ac].inqc004,g_inqb2_d[l_ac].inqc005,g_inqb2_d[l_ac].inqc006, 
                      g_inqb2_d[l_ac].inqc007,g_inqb2_d[l_ac].inqc008,g_inqb2_d[l_ac].inqc009,g_inqb2_d[l_ac].inqc010, 
                      g_inqb2_d[l_ac].inqcsite,g_inqb2_d[l_ac].inqcunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_inqb2_d_mask_o[l_ac].* =  g_inqb2_d[l_ac].*
                  CALL aint950_inqc_t_mask()
                  LET g_inqb2_d_mask_n[l_ac].* =  g_inqb2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL aint950_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               #取得該筆資料key值
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inqa_m.inqadocno
               LET gs_keys[2] = g_inqb_d[g_detail_idx].inqbseq
               LET gs_keys[3] = g_inqb2_d_t.inqcseq1
 
               #刪除同層單身
               IF NOT aint950_delete_b('inqc_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint950_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point   
               
               CALL s_transaction_end('Y','0')
               CLOSE aint950_bcl
                  
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_inqb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_inqb2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
    
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM inqc_t 
             WHERE inqcent = g_enterprise AND inqcdocno = g_inqa_m.inqadocno AND inqcseq = g_inqb_d[g_detail_idx].inqbseq  
                 AND inqcseq1 = g_inqb2_d[g_detail_idx2].inqcseq1
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inqa_m.inqadocno
               LET gs_keys[2] = g_inqb_d[g_detail_idx].inqbseq
               LET gs_keys[3] = g_inqb2_d[g_detail_idx2].inqcseq1
               CALL aint950_insert_b('inqc_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_inqb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inqc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aint950_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_inqb2_d[l_ac].* = g_inqb2_d_t.*
               CLOSE aint950_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_inqb2_d[l_ac].* = g_inqb2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL aint950_inqc_t_mask_restore('restore_mask_o')
               
               UPDATE inqc_t SET (inqcdocno,inqcseq,inqcseq1,inqc001,inqc002,inqc003,inqc004,inqc005, 
                   inqc006,inqc007,inqc008,inqc009,inqc010,inqcsite,inqcunit) = (g_inqa_m.inqadocno, 
                   g_inqb_d[g_detail_idx].inqbseq,g_inqb2_d[l_ac].inqcseq1,g_inqb2_d[l_ac].inqc001,g_inqb2_d[l_ac].inqc002, 
                   g_inqb2_d[l_ac].inqc003,g_inqb2_d[l_ac].inqc004,g_inqb2_d[l_ac].inqc005,g_inqb2_d[l_ac].inqc006, 
                   g_inqb2_d[l_ac].inqc007,g_inqb2_d[l_ac].inqc008,g_inqb2_d[l_ac].inqc009,g_inqb2_d[l_ac].inqc010, 
                   g_inqb2_d[l_ac].inqcsite,g_inqb2_d[l_ac].inqcunit) #自訂欄位頁簽
                WHERE inqcent = g_enterprise AND inqcdocno = g_inqadocno_t AND inqcseq = g_inqb_d[g_detail_idx].inqbseq  
                    AND inqcseq1 = g_inqb2_d_t.inqcseq1
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "inqc_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_inqb2_d[l_ac].* = g_inqb2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "inqc_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_inqb2_d[l_ac].* = g_inqb2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inqa_m.inqadocno
               LET gs_keys_bak[1] = g_inqadocno_t
               LET gs_keys[2] = g_inqb_d[g_detail_idx].inqbseq
               LET gs_keys_bak[2] = g_inqb_d[g_detail_idx].inqbseq
               LET gs_keys[3] = g_inqb2_d[g_detail_idx2].inqcseq1
               LET gs_keys_bak[3] = g_inqb2_d_t.inqcseq1
               CALL aint950_update_b('inqc_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL aint950_inqc_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_inqa_m),util.JSON.stringify(g_inqb2_d_t)
               LET g_log2 = util.JSON.stringify(g_inqa_m),util.JSON.stringify(g_inqb2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqcseq1
            #add-point:BEFORE FIELD inqcseq1
            {<point name="input.b.page2.inqcseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqcseq1
            
            #add-point:AFTER FIELD inqcseq1
            {<point name="input.a.page2.inqcseq1" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqcseq1
            #add-point:ON CHANGE inqcseq1
            {<point name="input.g.page2.inqcseq1" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc001
            
            #add-point:AFTER FIELD inqc001
            {<point name="input.a.page2.inqc001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc001
            #add-point:BEFORE FIELD inqc001
            {<point name="input.b.page2.inqc001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqc001
            #add-point:ON CHANGE inqc001
            {<point name="input.g.page2.inqc001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc002
            
            #add-point:AFTER FIELD inqc002
            {<point name="input.a.page2.inqc002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc002
            #add-point:BEFORE FIELD inqc002
            {<point name="input.b.page2.inqc002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqc002
            #add-point:ON CHANGE inqc002
            {<point name="input.g.page2.inqc002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc003
            
            #add-point:AFTER FIELD inqc003
            {<point name="input.a.page2.inqc003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc003
            #add-point:BEFORE FIELD inqc003
            {<point name="input.b.page2.inqc003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqc003
            #add-point:ON CHANGE inqc003
            {<point name="input.g.page2.inqc003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc004
            
            #add-point:AFTER FIELD inqc004
            {<point name="input.a.page2.inqc004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc004
            #add-point:BEFORE FIELD inqc004
            {<point name="input.b.page2.inqc004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqc004
            #add-point:ON CHANGE inqc004
            {<point name="input.g.page2.inqc004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc005
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_inqb2_d[l_ac].inqc005,"0","0","","","azz-00079",1) THEN
               NEXT FIELD inqc005
            END IF 
 
 
            #add-point:AFTER FIELD inqc005
            {<point name="input.a.page2.inqc005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc005
            #add-point:BEFORE FIELD inqc005
            {<point name="input.b.page2.inqc005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqc005
            #add-point:ON CHANGE inqc005
            {<point name="input.g.page2.inqc005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc006
            
            #add-point:AFTER FIELD inqc006
            {<point name="input.a.page2.inqc006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc006
            #add-point:BEFORE FIELD inqc006
            {<point name="input.b.page2.inqc006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqc006
            #add-point:ON CHANGE inqc006
            {<point name="input.g.page2.inqc006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc007
            
            #add-point:AFTER FIELD inqc007
            {<point name="input.a.page2.inqc007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc007
            #add-point:BEFORE FIELD inqc007
            {<point name="input.b.page2.inqc007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqc007
            #add-point:ON CHANGE inqc007
            {<point name="input.g.page2.inqc007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc008
            #add-point:BEFORE FIELD inqc008
            {<point name="input.b.page2.inqc008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc008
            
            #add-point:AFTER FIELD inqc008
            {<point name="input.a.page2.inqc008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqc008
            #add-point:ON CHANGE inqc008
            {<point name="input.g.page2.inqc008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc009
            #add-point:BEFORE FIELD inqc009
            {<point name="input.b.page2.inqc009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc009
            
            #add-point:AFTER FIELD inqc009
            {<point name="input.a.page2.inqc009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqc009
            #add-point:ON CHANGE inqc009
            {<point name="input.g.page2.inqc009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqc010
            #add-point:BEFORE FIELD inqc010
            {<point name="input.b.page2.inqc010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqc010
            
            #add-point:AFTER FIELD inqc010
            {<point name="input.a.page2.inqc010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqc010
            #add-point:ON CHANGE inqc010
            {<point name="input.g.page2.inqc010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqcsite
            #add-point:BEFORE FIELD inqcsite
            {<point name="input.b.page2.inqcsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqcsite
            
            #add-point:AFTER FIELD inqcsite
            {<point name="input.a.page2.inqcsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqcsite
            #add-point:ON CHANGE inqcsite
            {<point name="input.g.page2.inqcsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqcunit
            #add-point:BEFORE FIELD inqcunit
            {<point name="input.b.page2.inqcunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqcunit
            
            #add-point:AFTER FIELD inqcunit
            {<point name="input.a.page2.inqcunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqcunit
            #add-point:ON CHANGE inqcunit
            {<point name="input.g.page2.inqcunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.inqcseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqcseq1
            #add-point:ON ACTION controlp INFIELD inqcseq1
            {<point name="input.c.page2.inqcseq1" />}
            #END add-point
 
         #Ctrlp:input.c.page2.inqc001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc001
            #add-point:ON ACTION controlp INFIELD inqc001
            {<point name="input.c.page2.inqc001" />}
            #END add-point
 
         #Ctrlp:input.c.page2.inqc002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc002
            #add-point:ON ACTION controlp INFIELD inqc002
            {<point name="input.c.page2.inqc002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.inqc003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc003
            #add-point:ON ACTION controlp INFIELD inqc003
            {<point name="input.c.page2.inqc003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.inqc004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc004
            #add-point:ON ACTION controlp INFIELD inqc004
            {<point name="input.c.page2.inqc004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.inqc005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc005
            #add-point:ON ACTION controlp INFIELD inqc005
            {<point name="input.c.page2.inqc005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.inqc006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc006
            #add-point:ON ACTION controlp INFIELD inqc006
            {<point name="input.c.page2.inqc006" />}
            #END add-point
 
         #Ctrlp:input.c.page2.inqc007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc007
            #add-point:ON ACTION controlp INFIELD inqc007
            {<point name="input.c.page2.inqc007" />}
            #END add-point
 
         #Ctrlp:input.c.page2.inqc008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc008
            #add-point:ON ACTION controlp INFIELD inqc008
            {<point name="input.c.page2.inqc008" />}
            #END add-point
 
         #Ctrlp:input.c.page2.inqc009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc009
            #add-point:ON ACTION controlp INFIELD inqc009
            {<point name="input.c.page2.inqc009" />}
            #END add-point
 
         #Ctrlp:input.c.page2.inqc010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqc010
            #add-point:ON ACTION controlp INFIELD inqc010
            {<point name="input.c.page2.inqc010" />}
            #END add-point
 
         #Ctrlp:input.c.page2.inqcsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqcsite
            #add-point:ON ACTION controlp INFIELD inqcsite
            {<point name="input.c.page2.inqcsite" />}
            #END add-point
 
         #Ctrlp:input.c.page2.inqcunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqcunit
            #add-point:ON ACTION controlp INFIELD inqcunit
            {<point name="input.c.page2.inqcunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2_after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_inqb2_d[l_ac].* = g_inqb2_d_t.*
               END IF
               CLOSE aint950_bcl2
               CLOSE aint950_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL aint950_unlock_b("inqc_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2_after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point  
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_inqb2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_inqb2_d.getLength()+1
 
      END INPUT
 
 
 
]]>
  </section>
  <section id="aint950.input.head" ver="4" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_inqa_m.inqa000,g_inqa_m.inqasite,g_inqa_m.inqadocdt,g_inqa_m.inqa001,g_inqa_m.inqadocno, 
          g_inqa_m.inqa002,g_inqa_m.inqa003,g_inqa_m.inqa004,g_inqa_m.inqaunit,g_inqa_m.inqa005,g_inqa_m.inqa006, 
          g_inqa_m.inqa007,g_inqa_m.inqastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN aint950_cl USING g_enterprise,g_inqa_m.inqadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aint950_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aint950_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL aint950_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL aint950_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa000
            #add-point:BEFORE FIELD inqa000
            {<point name="input.b.inqa000" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa000
            
            #add-point:AFTER FIELD inqa000
            {<point name="input.a.inqa000" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqa000
            #add-point:ON CHANGE inqa000
            {<point name="input.g.inqa000" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqasite
            
            #add-point:AFTER FIELD inqasite
            {<point name="input.a.inqasite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqasite
            #add-point:BEFORE FIELD inqasite
            {<point name="input.b.inqasite" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqasite
            #add-point:ON CHANGE inqasite
            {<point name="input.g.inqasite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqadocdt
            #add-point:BEFORE FIELD inqadocdt
            {<point name="input.b.inqadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqadocdt
            
            #add-point:AFTER FIELD inqadocdt
            {<point name="input.a.inqadocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqadocdt
            #add-point:ON CHANGE inqadocdt
            {<point name="input.g.inqadocdt" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa001
            #add-point:BEFORE FIELD inqa001
            {<point name="input.b.inqa001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa001
            
            #add-point:AFTER FIELD inqa001
            {<point name="input.a.inqa001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqa001
            #add-point:ON CHANGE inqa001
            {<point name="input.g.inqa001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqadocno
            #add-point:BEFORE FIELD inqadocno
            {<point name="input.b.inqadocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqadocno
            
            #add-point:AFTER FIELD inqadocno
            {<point name="input.a.inqadocno" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqadocno
            #add-point:ON CHANGE inqadocno
            {<point name="input.g.inqadocno" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa002
            
            #add-point:AFTER FIELD inqa002
            {<point name="input.a.inqa002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa002
            #add-point:BEFORE FIELD inqa002
            {<point name="input.b.inqa002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqa002
            #add-point:ON CHANGE inqa002
            {<point name="input.g.inqa002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa003
            
            #add-point:AFTER FIELD inqa003
            {<point name="input.a.inqa003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa003
            #add-point:BEFORE FIELD inqa003
            {<point name="input.b.inqa003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqa003
            #add-point:ON CHANGE inqa003
            {<point name="input.g.inqa003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa004
            
            #add-point:AFTER FIELD inqa004
            {<point name="input.a.inqa004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa004
            #add-point:BEFORE FIELD inqa004
            {<point name="input.b.inqa004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqa004
            #add-point:ON CHANGE inqa004
            {<point name="input.g.inqa004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqaunit
            #add-point:BEFORE FIELD inqaunit
            {<point name="input.b.inqaunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqaunit
            
            #add-point:AFTER FIELD inqaunit
            {<point name="input.a.inqaunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqaunit
            #add-point:ON CHANGE inqaunit
            {<point name="input.g.inqaunit" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa005
            #add-point:BEFORE FIELD inqa005
            {<point name="input.b.inqa005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa005
            
            #add-point:AFTER FIELD inqa005
            {<point name="input.a.inqa005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqa005
            #add-point:ON CHANGE inqa005
            {<point name="input.g.inqa005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa006
            #add-point:BEFORE FIELD inqa006
            {<point name="input.b.inqa006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa006
            
            #add-point:AFTER FIELD inqa006
            {<point name="input.a.inqa006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqa006
            #add-point:ON CHANGE inqa006
            {<point name="input.g.inqa006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqa007
            #add-point:BEFORE FIELD inqa007
            {<point name="input.b.inqa007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqa007
            
            #add-point:AFTER FIELD inqa007
            {<point name="input.a.inqa007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqa007
            #add-point:ON CHANGE inqa007
            {<point name="input.g.inqa007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inqastus
            #add-point:BEFORE FIELD inqastus
            {<point name="input.b.inqastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inqastus
            
            #add-point:AFTER FIELD inqastus
            {<point name="input.a.inqastus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inqastus
            #add-point:ON CHANGE inqastus
            {<point name="input.g.inqastus" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.inqa000
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa000
            #add-point:ON ACTION controlp INFIELD inqa000
            {<point name="input.c.inqa000" />}
            #END add-point
 
         #Ctrlp:input.c.inqasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqasite
            #add-point:ON ACTION controlp INFIELD inqasite
            {<point name="input.c.inqasite" />}
            #END add-point
 
         #Ctrlp:input.c.inqadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqadocdt
            #add-point:ON ACTION controlp INFIELD inqadocdt
            {<point name="input.c.inqadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.inqa001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa001
            #add-point:ON ACTION controlp INFIELD inqa001
            {<point name="input.c.inqa001" />}
            #END add-point
 
         #Ctrlp:input.c.inqadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqadocno
            #add-point:ON ACTION controlp INFIELD inqadocno
            {<point name="input.c.inqadocno" />}
            #END add-point
 
         #Ctrlp:input.c.inqa002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa002
            #add-point:ON ACTION controlp INFIELD inqa002
            {<point name="input.c.inqa002" />}
            #END add-point
 
         #Ctrlp:input.c.inqa003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa003
            #add-point:ON ACTION controlp INFIELD inqa003
            {<point name="input.c.inqa003" />}
            #END add-point
 
         #Ctrlp:input.c.inqa004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa004
            #add-point:ON ACTION controlp INFIELD inqa004
            {<point name="input.c.inqa004" />}
            #END add-point
 
         #Ctrlp:input.c.inqaunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqaunit
            #add-point:ON ACTION controlp INFIELD inqaunit
            {<point name="input.c.inqaunit" />}
            #END add-point
 
         #Ctrlp:input.c.inqa005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa005
            #add-point:ON ACTION controlp INFIELD inqa005
            {<point name="input.c.inqa005" />}
            #END add-point
 
         #Ctrlp:input.c.inqa006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa006
            #add-point:ON ACTION controlp INFIELD inqa006
            {<point name="input.c.inqa006" />}
            #END add-point
 
         #Ctrlp:input.c.inqa007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqa007
            #add-point:ON ACTION controlp INFIELD inqa007
            {<point name="input.c.inqa007" />}
            #END add-point
 
         #Ctrlp:input.c.inqastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inqastus
            #add-point:ON ACTION controlp INFIELD inqastus
            {<point name="input.c.inqastus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_inqa_m.inqadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO inqa_t (inqaent,inqa000,inqasite,inqadocdt,inqa001,inqadocno,inqa002,inqa003, 
                   inqa004,inqaunit,inqa005,inqa006,inqa007,inqastus,inqaownid,inqaowndp,inqacrtid,inqacrtdp, 
                   inqacrtdt,inqamodid,inqamoddt,inqacnfid,inqacnfdt,inqapstid,inqapstdt)
               VALUES (g_enterprise,g_inqa_m.inqa000,g_inqa_m.inqasite,g_inqa_m.inqadocdt,g_inqa_m.inqa001, 
                   g_inqa_m.inqadocno,g_inqa_m.inqa002,g_inqa_m.inqa003,g_inqa_m.inqa004,g_inqa_m.inqaunit, 
                   g_inqa_m.inqa005,g_inqa_m.inqa006,g_inqa_m.inqa007,g_inqa_m.inqastus,g_inqa_m.inqaownid, 
                   g_inqa_m.inqaowndp,g_inqa_m.inqacrtid,g_inqa_m.inqacrtdp,g_inqa_m.inqacrtdt,g_inqa_m.inqamodid, 
                   g_inqa_m.inqamoddt,g_inqa_m.inqacnfid,g_inqa_m.inqacnfdt,g_inqa_m.inqapstid,g_inqa_m.inqapstdt)  

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_inqa_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aint950_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL aint950_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL aint950_inqa_t_mask_restore('restore_mask_o')
               
               UPDATE inqa_t SET (inqa000,inqasite,inqadocdt,inqa001,inqadocno,inqa002,inqa003,inqa004, 
                   inqaunit,inqa005,inqa006,inqa007,inqastus,inqaownid,inqaowndp,inqacrtid,inqacrtdp, 
                   inqacrtdt,inqamodid,inqamoddt,inqacnfid,inqacnfdt,inqapstid,inqapstdt) = (g_inqa_m.inqa000, 
                   g_inqa_m.inqasite,g_inqa_m.inqadocdt,g_inqa_m.inqa001,g_inqa_m.inqadocno,g_inqa_m.inqa002, 
                   g_inqa_m.inqa003,g_inqa_m.inqa004,g_inqa_m.inqaunit,g_inqa_m.inqa005,g_inqa_m.inqa006, 
                   g_inqa_m.inqa007,g_inqa_m.inqastus,g_inqa_m.inqaownid,g_inqa_m.inqaowndp,g_inqa_m.inqacrtid, 
                   g_inqa_m.inqacrtdp,g_inqa_m.inqacrtdt,g_inqa_m.inqamodid,g_inqa_m.inqamoddt,g_inqa_m.inqacnfid, 
                   g_inqa_m.inqacnfdt,g_inqa_m.inqapstid,g_inqa_m.inqapstdt)
                WHERE inqaent = g_enterprise AND inqadocno = g_inqadocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "inqa_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL aint950_inqa_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_inqa_m_t)
               LET g_log2 = util.JSON.stringify(g_inqa_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_inqadocno_t = g_inqa_m.inqadocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="aint950.input.other" ver="4" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx2)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD inqadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD inqbseq
               WHEN "s_detail2"
                  NEXT FIELD inqcseq1
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="aint950.insert" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aint950_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_inqb_d.clear()   
   CALL g_inqb2_d.clear()  
 
 
   INITIALIZE g_inqa_m.* LIKE inqa_t.*             #DEFAULT 設定
   
   LET g_inqadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_inqa_m.inqaownid = g_user
      LET g_inqa_m.inqaowndp = g_dept
      LET g_inqa_m.inqacrtid = g_user
      LET g_inqa_m.inqacrtdp = g_dept 
      LET g_inqa_m.inqacrtdt = cl_get_current()
      LET g_inqa_m.inqamodid = g_user
      LET g_inqa_m.inqamoddt = cl_get_current()
      LET g_inqa_m.inqastus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_inqa_m_t.* = g_inqa_m.*
      LET g_inqa_m_o.* = g_inqa_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_inqa_m.inqastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL aint950_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_inqa_m.* TO NULL
         INITIALIZE g_inqb_d TO NULL
         INITIALIZE g_inqb2_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL aint950_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_inqb_d.clear()
      #CALL g_inqb2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint950_set_act_visible()   
   CALL aint950_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_inqadocno_t = g_inqa_m.inqadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " inqaent = '" ||g_enterprise|| "' AND",
                      " inqadocno = '", g_inqa_m.inqadocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aint950_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE aint950_cl
   
   CALL aint950_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE aint950_master_referesh USING g_inqa_m.inqadocno INTO g_inqa_m.inqa000,g_inqa_m.inqasite, 
       g_inqa_m.inqadocdt,g_inqa_m.inqa001,g_inqa_m.inqadocno,g_inqa_m.inqa002,g_inqa_m.inqa003,g_inqa_m.inqa004, 
       g_inqa_m.inqaunit,g_inqa_m.inqa005,g_inqa_m.inqa006,g_inqa_m.inqa007,g_inqa_m.inqastus,g_inqa_m.inqaownid, 
       g_inqa_m.inqaowndp,g_inqa_m.inqacrtid,g_inqa_m.inqacrtdp,g_inqa_m.inqacrtdt,g_inqa_m.inqamodid, 
       g_inqa_m.inqamoddt,g_inqa_m.inqacnfid,g_inqa_m.inqacnfdt,g_inqa_m.inqapstid,g_inqa_m.inqapstdt, 
       g_inqa_m.inqasite_desc,g_inqa_m.inqa002_desc,g_inqa_m.inqa003_desc,g_inqa_m.inqaownid_desc,g_inqa_m.inqaowndp_desc, 
       g_inqa_m.inqacrtid_desc,g_inqa_m.inqacrtdp_desc,g_inqa_m.inqamodid_desc,g_inqa_m.inqacnfid_desc, 
       g_inqa_m.inqapstid_desc
   
   #遮罩相關處理
   LET g_inqa_m_mask_o.* =  g_inqa_m.*
   CALL aint950_inqa_t_mask()
   LET g_inqa_m_mask_n.* =  g_inqa_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_inqa_m.inqa000,g_inqa_m.inqasite,g_inqa_m.inqasite_desc,g_inqa_m.inqadocdt,g_inqa_m.inqa001, 
       g_inqa_m.inqadocno,g_inqa_m.inqa002,g_inqa_m.inqa002_desc,g_inqa_m.inqa003,g_inqa_m.inqa003_desc, 
       g_inqa_m.inqa004,g_inqa_m.inqa004_desc,g_inqa_m.inqaunit,g_inqa_m.inqa005,g_inqa_m.inqa006,g_inqa_m.inqa007, 
       g_inqa_m.inqastus,g_inqa_m.inqaownid,g_inqa_m.inqaownid_desc,g_inqa_m.inqaowndp,g_inqa_m.inqaowndp_desc, 
       g_inqa_m.inqacrtid,g_inqa_m.inqacrtid_desc,g_inqa_m.inqacrtdp,g_inqa_m.inqacrtdp_desc,g_inqa_m.inqacrtdt, 
       g_inqa_m.inqamodid,g_inqa_m.inqamodid_desc,g_inqa_m.inqamoddt,g_inqa_m.inqacnfid,g_inqa_m.inqacnfid_desc, 
       g_inqa_m.inqacnfdt,g_inqa_m.inqapstid,g_inqa_m.inqapstid_desc,g_inqa_m.inqapstdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL aint950_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="aint950.insert_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aint950_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO inqb_t
                  (inqbent,
                   inqbdocno,
                   inqbseq
                   ,inqb001,inqb002,inqb003,inqb004,inqb005,inqb006,inqb007,inqb008,inqb009,inqb010,inqbsite,inqbunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_inqb_d[g_detail_idx].inqb001,g_inqb_d[g_detail_idx].inqb002,g_inqb_d[g_detail_idx].inqb003, 
                       g_inqb_d[g_detail_idx].inqb004,g_inqb_d[g_detail_idx].inqb005,g_inqb_d[g_detail_idx].inqb006, 
                       g_inqb_d[g_detail_idx].inqb007,g_inqb_d[g_detail_idx].inqb008,g_inqb_d[g_detail_idx].inqb009, 
                       g_inqb_d[g_detail_idx].inqb010,g_inqb_d[g_detail_idx].inqbsite,g_inqb_d[g_detail_idx].inqbunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "inqb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_inqb_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO inqc_t
                  (inqcent,
                   inqcdocno,inqcseq,
                   inqcseq1
                   ,inqc001,inqc002,inqc003,inqc004,inqc005,inqc006,inqc007,inqc008,inqc009,inqc010,inqcsite,inqcunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_inqb2_d[g_detail_idx2].inqc001,g_inqb2_d[g_detail_idx2].inqc002,g_inqb2_d[g_detail_idx2].inqc003, 
                       g_inqb2_d[g_detail_idx2].inqc004,g_inqb2_d[g_detail_idx2].inqc005,g_inqb2_d[g_detail_idx2].inqc006, 
                       g_inqb2_d[g_detail_idx2].inqc007,g_inqb2_d[g_detail_idx2].inqc008,g_inqb2_d[g_detail_idx2].inqc009, 
                       g_inqb2_d[g_detail_idx2].inqc010,g_inqb2_d[g_detail_idx2].inqcsite,g_inqb2_d[g_detail_idx2].inqcunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "inqc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx2
      IF ps_page <> "'2'" THEN 
         CALL g_inqb2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="aint950.key_delete_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION aint950_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
   #如果是上層單身則進行delete
   IF ps_table = 'inqb_t' THEN
      #add-point:delete_b段修改前
      {<point name="key_delete_b.before_delete2" mark="Y"/>}
      #end add-point
      
      DELETE FROM inqc_t 
            WHERE inqcent = g_enterprise AND
                  inqcdocno = ps_keys_bak[1] AND inqcseq = ps_keys_bak[2]
 
      #add-point:delete_b段修改中
      {<point name="key_delete_b.m_delete2"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "inqc_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN FALSE
         OTHERWISE
      END CASE
      
      #add-point:delete_b段修改後
      {<point name="key_delete_b.after_delete2"/>}
      #end add-point
   END IF
 
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint950.key_update_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION aint950_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
   #如果是上層單身則進行update
   IF ps_table = 'inqb_t' THEN
      #add-point:update_b段修改前
      {<point name="key_update_b.before_update2" mark="Y"/>}
      #end add-point
      
      UPDATE inqc_t 
         SET (inqcdocno,inqcseq) 
              = 
             (g_inqa_m.inqadocno,g_inqb_d[g_detail_idx].inqbseq) 
         WHERE inqcent = g_enterprise AND
               inqcdocno = ps_keys_bak[1] AND inqcseq = ps_keys_bak[2]
 
      #add-point:update_b段修改中
      {<point name="key_update_b.m_update2"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "inqc_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            #若有多語言table資料一同更新
            
      END CASE
      
      #add-point:update_b段修改後
      {<point name="key_update_b.after_update2"/>}
      #end add-point
   END IF
 
 
   
END FUNCTION
]]>
  </section>
  <section id="aint950.lock_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aint950_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL aint950_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "inqb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aint950_bcl USING g_enterprise,
                                       g_inqa_m.inqadocno,g_inqb_d[g_detail_idx].inqbseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aint950_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "inqc_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aint950_bcl2 USING g_enterprise,
                                             g_inqa_m.inqadocno,g_inqb_d[g_detail_idx].inqbseq,
                                             g_inqb2_d[g_detail_idx2].inqcseq1
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aint950_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aint950.main" ver="4" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT inqa000,inqasite,'',inqadocdt,inqa001,inqadocno,inqa002,'',inqa003,'', 
       inqa004,'',inqaunit,inqa005,inqa006,inqa007,inqastus,inqaownid,'',inqaowndp,'',inqacrtid,'',inqacrtdp, 
       '',inqacrtdt,inqamodid,'',inqamoddt,inqacnfid,'',inqacnfdt,inqapstid,'',inqapstdt", 
                      " FROM inqa_t",
                      " WHERE inqaent= ? AND inqadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint950_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.inqa000,t0.inqasite,t0.inqadocdt,t0.inqa001,t0.inqadocno,t0.inqa002, 
       t0.inqa003,t0.inqa004,t0.inqaunit,t0.inqa005,t0.inqa006,t0.inqa007,t0.inqastus,t0.inqaownid,t0.inqaowndp, 
       t0.inqacrtid,t0.inqacrtdp,t0.inqacrtdt,t0.inqamodid,t0.inqamoddt,t0.inqacnfid,t0.inqacnfdt,t0.inqapstid, 
       t0.inqapstdt,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011 ,t7.ooefl003 , 
       t8.ooag011 ,t9.ooag011 ,t10.ooag011",
               " FROM inqa_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.inqasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.inqa002  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.inqa003 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=t0.inqaownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=t0.inqaowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=t0.inqacrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=t0.inqacrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=t0.inqamodid  ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent='"||g_enterprise||"' AND t9.ooag001=t0.inqacnfid  ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent='"||g_enterprise||"' AND t10.ooag001=t0.inqapstid  ",
 
               " WHERE t0.inqaent = '" ||g_enterprise|| "' AND t0.inqadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aint950_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aint950 WITH FORM cl_ap_formpath("ain",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aint950_init()   
 
      #進入選單 Menu (="N")
      CALL aint950_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aint950
      
   END IF 
   
   CLOSE aint950_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="aint950.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/ain/aint950_mask.4gl"
]]>
  </section>
  <section id="aint950.modify" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aint950_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
   DEFINE l_wc2_table2   STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_inqa_m_t.* = g_inqa_m.*
   LET g_inqa_m_o.* = g_inqa_m.*
   
   IF g_inqa_m.inqadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_inqadocno_t = g_inqa_m.inqadocno
 
   CALL s_transaction_begin()
   
   OPEN aint950_cl USING g_enterprise,g_inqa_m.inqadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint950_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint950_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint950_master_referesh USING g_inqa_m.inqadocno INTO g_inqa_m.inqa000,g_inqa_m.inqasite, 
       g_inqa_m.inqadocdt,g_inqa_m.inqa001,g_inqa_m.inqadocno,g_inqa_m.inqa002,g_inqa_m.inqa003,g_inqa_m.inqa004, 
       g_inqa_m.inqaunit,g_inqa_m.inqa005,g_inqa_m.inqa006,g_inqa_m.inqa007,g_inqa_m.inqastus,g_inqa_m.inqaownid, 
       g_inqa_m.inqaowndp,g_inqa_m.inqacrtid,g_inqa_m.inqacrtdp,g_inqa_m.inqacrtdt,g_inqa_m.inqamodid, 
       g_inqa_m.inqamoddt,g_inqa_m.inqacnfid,g_inqa_m.inqacnfdt,g_inqa_m.inqapstid,g_inqa_m.inqapstdt, 
       g_inqa_m.inqasite_desc,g_inqa_m.inqa002_desc,g_inqa_m.inqa003_desc,g_inqa_m.inqaownid_desc,g_inqa_m.inqaowndp_desc, 
       g_inqa_m.inqacrtid_desc,g_inqa_m.inqacrtdp_desc,g_inqa_m.inqamodid_desc,g_inqa_m.inqacnfid_desc, 
       g_inqa_m.inqapstid_desc
   
   #檢查是否允許此動作
   IF NOT aint950_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_inqa_m_mask_o.* =  g_inqa_m.*
   CALL aint950_inqa_t_mask()
   LET g_inqa_m_mask_n.* =  g_inqa_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
   
   CALL aint950_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
    
   WHILE TRUE
      LET g_inqadocno_t = g_inqa_m.inqadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_inqa_m.inqamodid = g_user 
LET g_inqa_m.inqamoddt = cl_get_current()
LET g_inqa_m.inqamodid_desc = cl_get_username(g_inqa_m.inqamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL aint950_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE inqa_t SET (inqamodid,inqamoddt) = (g_inqa_m.inqamodid,g_inqa_m.inqamoddt)
          WHERE inqaent = g_enterprise AND inqadocno = g_inqadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_inqa_m.* = g_inqa_m_t.*
         CALL aint950_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_inqa_m.inqadocno != g_inqadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE inqb_t SET inqbdocno = g_inqa_m.inqadocno
 
          WHERE inqbent = g_enterprise AND inqbdocno = g_inqadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inqb_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inqb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE inqc_t
            SET inqcdocno = g_inqa_m.inqadocno
 
          WHERE inqcent = g_enterprise AND
                inqcdocno = g_inqadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inqc_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inqc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint950_set_act_visible()   
   CALL aint950_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " inqaent = '" ||g_enterprise|| "' AND",
                      " inqadocno = '", g_inqa_m.inqadocno, "' "
 
   #填到對應位置
   CALL aint950_browser_fill("")
 
   CLOSE aint950_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aint950_msgcentre_notify('modify')
 
END FUNCTION   
]]>
  </section>
  <section id="aint950.msgcentre_notify" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION aint950_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL aint950_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_inqa_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="aint950.other_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="aint950.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aint950.query" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aint950_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_inqb_d.clear()
   CALL g_inqb2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL aint950_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aint950_browser_fill("")
      CALL aint950_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aint950_filter_show('inqasite')
   CALL aint950_filter_show('inqadocno')
   CALL aint950_filter_show('inqa002')
   CALL aint950_filter_show('inqa003')
   CALL aint950_filter_show('inqa005')
   CALL aint950_filter_show('inqa006')
   CALL aint950_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL aint950_fetch("F") 
      #顯示單身筆數
      CALL aint950_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aint950.reproduce" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION aint950_reproduce()
   DEFINE l_newno     LIKE inqa_t.inqadocno 
   DEFINE l_oldno     LIKE inqa_t.inqadocno 
 
   DEFINE l_master    RECORD LIKE inqa_t.*
   DEFINE l_detail    RECORD LIKE inqb_t.*
 
   DEFINE l_detail2    RECORD LIKE inqc_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_inqa_m.inqadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_inqadocno_t = g_inqa_m.inqadocno
 
    
   LET g_inqa_m.inqadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_inqa_m.inqaownid = g_user
      LET g_inqa_m.inqaowndp = g_dept
      LET g_inqa_m.inqacrtid = g_user
      LET g_inqa_m.inqacrtdp = g_dept 
      LET g_inqa_m.inqacrtdt = cl_get_current()
      LET g_inqa_m.inqamodid = g_user
      LET g_inqa_m.inqamoddt = cl_get_current()
      LET g_inqa_m.inqastus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_inqa_m.inqastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL aint950_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_inqa_m.* TO NULL
      INITIALIZE g_inqb_d TO NULL
      INITIALIZE g_inqb2_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL aint950_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint950_set_act_visible()   
   CALL aint950_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_inqadocno_t = g_inqa_m.inqadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " inqaent = '" ||g_enterprise|| "' AND",
                      " inqadocno = '", g_inqa_m.inqadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aint950_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL aint950_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL aint950_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="aint950.set_act_no_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION aint950_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint950.set_act_no_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION aint950_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint950.set_act_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION aint950_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint950.set_act_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION aint950_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint950.set_entry" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aint950_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("inqadocno,inqadocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("inqadocno",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aint950.set_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aint950_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="aint950.set_no_entry" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aint950_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("inqadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("inqadocno,inqadocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aint950.set_no_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aint950_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="aint950.set_pk_array" ver="1" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION aint950_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_inqa_m.inqadocno
   LET g_pk_array[1].column = 'inqadocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aint950.show" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aint950_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL aint950_b_fill() #單身填充
      CALL aint950_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL aint950_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_inqa_m_mask_o.* =  g_inqa_m.*
   CALL aint950_inqa_t_mask()
   LET g_inqa_m_mask_n.* =  g_inqa_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_inqa_m.inqa000,g_inqa_m.inqasite,g_inqa_m.inqasite_desc,g_inqa_m.inqadocdt,g_inqa_m.inqa001, 
       g_inqa_m.inqadocno,g_inqa_m.inqa002,g_inqa_m.inqa002_desc,g_inqa_m.inqa003,g_inqa_m.inqa003_desc, 
       g_inqa_m.inqa004,g_inqa_m.inqa004_desc,g_inqa_m.inqaunit,g_inqa_m.inqa005,g_inqa_m.inqa006,g_inqa_m.inqa007, 
       g_inqa_m.inqastus,g_inqa_m.inqaownid,g_inqa_m.inqaownid_desc,g_inqa_m.inqaowndp,g_inqa_m.inqaowndp_desc, 
       g_inqa_m.inqacrtid,g_inqa_m.inqacrtid_desc,g_inqa_m.inqacrtdp,g_inqa_m.inqacrtdp_desc,g_inqa_m.inqacrtdt, 
       g_inqa_m.inqamodid,g_inqa_m.inqamodid_desc,g_inqa_m.inqamoddt,g_inqa_m.inqacnfid,g_inqa_m.inqacnfid_desc, 
       g_inqa_m.inqacnfdt,g_inqa_m.inqapstid,g_inqa_m.inqapstid_desc,g_inqa_m.inqapstdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_inqa_m.inqastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_inqb_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_inqb2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aint950_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aint950.signature" ver="4" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:7)
#+ BPM提交
PRIVATE FUNCTION aint950_send()
   #add-point:send段define
   {<point name="send.define" edit="s"/>}
   #end add-point 
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c"/>}
   #end add-point 
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL aint950_show()
   CALL aint950_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_inqa_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_inqb_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_inqb2_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL aint950_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aint950_ui_headershow()
   CALL aint950_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:4)
#+ BPM抽單
PRIVATE FUNCTION aint950_draw_out()
   #add-point:draw段define
   {<point name="draw.define" edit="s"/>}
   #end add-point
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c"/>}
   #end add-point
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aint950_ui_headershow()  
   CALL aint950_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="aint950.state_change" ver="13" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION aint950_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_inqa_m.inqadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN aint950_cl USING g_enterprise,g_inqa_m.inqadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint950_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint950_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE aint950_master_referesh USING g_inqa_m.inqadocno INTO g_inqa_m.inqa000,g_inqa_m.inqasite, 
       g_inqa_m.inqadocdt,g_inqa_m.inqa001,g_inqa_m.inqadocno,g_inqa_m.inqa002,g_inqa_m.inqa003,g_inqa_m.inqa004, 
       g_inqa_m.inqaunit,g_inqa_m.inqa005,g_inqa_m.inqa006,g_inqa_m.inqa007,g_inqa_m.inqastus,g_inqa_m.inqaownid, 
       g_inqa_m.inqaowndp,g_inqa_m.inqacrtid,g_inqa_m.inqacrtdp,g_inqa_m.inqacrtdt,g_inqa_m.inqamodid, 
       g_inqa_m.inqamoddt,g_inqa_m.inqacnfid,g_inqa_m.inqacnfdt,g_inqa_m.inqapstid,g_inqa_m.inqapstdt, 
       g_inqa_m.inqasite_desc,g_inqa_m.inqa002_desc,g_inqa_m.inqa003_desc,g_inqa_m.inqaownid_desc,g_inqa_m.inqaowndp_desc, 
       g_inqa_m.inqacrtid_desc,g_inqa_m.inqacrtdp_desc,g_inqa_m.inqamodid_desc,g_inqa_m.inqacnfid_desc, 
       g_inqa_m.inqapstid_desc
 
   #檢查是否允許此動作
   IF NOT aint950_action_chk() THEN
      CLOSE aint950_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_inqa_m.inqa000,g_inqa_m.inqasite,g_inqa_m.inqasite_desc,g_inqa_m.inqadocdt,g_inqa_m.inqa001, 
       g_inqa_m.inqadocno,g_inqa_m.inqa002,g_inqa_m.inqa002_desc,g_inqa_m.inqa003,g_inqa_m.inqa003_desc, 
       g_inqa_m.inqa004,g_inqa_m.inqa004_desc,g_inqa_m.inqaunit,g_inqa_m.inqa005,g_inqa_m.inqa006,g_inqa_m.inqa007, 
       g_inqa_m.inqastus,g_inqa_m.inqaownid,g_inqa_m.inqaownid_desc,g_inqa_m.inqaowndp,g_inqa_m.inqaowndp_desc, 
       g_inqa_m.inqacrtid,g_inqa_m.inqacrtid_desc,g_inqa_m.inqacrtdp,g_inqa_m.inqacrtdp_desc,g_inqa_m.inqacrtdt, 
       g_inqa_m.inqamodid,g_inqa_m.inqamodid_desc,g_inqa_m.inqamoddt,g_inqa_m.inqacnfid,g_inqa_m.inqacnfid_desc, 
       g_inqa_m.inqacnfdt,g_inqa_m.inqapstid,g_inqa_m.inqapstid_desc,g_inqa_m.inqapstdt
 
   CASE g_inqa_m.inqastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "S"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
      WHEN "Z"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_inqa_m.inqastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "S"
               HIDE OPTION "posted"
            WHEN "Z"
               HIDE OPTION "unposted"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT aint950_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE aint950_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT aint950_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE aint950_cl
            RETURN
         END IF
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION posted
         IF cl_auth_chk_act("posted") THEN
            LET lc_state = "S"
            #add-point:action控制
            {<point name="statechange.posted"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION unposted
         IF cl_auth_chk_act("unposted") THEN
            LET lc_state = "Z"
            #add-point:action控制
            {<point name="statechange.unposted"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "Y"
      AND lc_state <> "S"
      AND lc_state <> "Z"
      AND lc_state <> "X"
      ) OR 
      g_inqa_m.inqastus = lc_state OR cl_null(lc_state) THEN
      CLOSE aint950_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_inqa_m.inqamodid = g_user
   LET g_inqa_m.inqamoddt = cl_get_current()
   LET g_inqa_m.inqastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE inqa_t 
      SET (inqastus,inqamodid,inqamoddt) 
        = (g_inqa_m.inqastus,g_inqa_m.inqamodid,g_inqa_m.inqamoddt)     
    WHERE inqaent = g_enterprise AND inqadocno = g_inqa_m.inqadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE aint950_master_referesh USING g_inqa_m.inqadocno INTO g_inqa_m.inqa000,g_inqa_m.inqasite, 
          g_inqa_m.inqadocdt,g_inqa_m.inqa001,g_inqa_m.inqadocno,g_inqa_m.inqa002,g_inqa_m.inqa003,g_inqa_m.inqa004, 
          g_inqa_m.inqaunit,g_inqa_m.inqa005,g_inqa_m.inqa006,g_inqa_m.inqa007,g_inqa_m.inqastus,g_inqa_m.inqaownid, 
          g_inqa_m.inqaowndp,g_inqa_m.inqacrtid,g_inqa_m.inqacrtdp,g_inqa_m.inqacrtdt,g_inqa_m.inqamodid, 
          g_inqa_m.inqamoddt,g_inqa_m.inqacnfid,g_inqa_m.inqacnfdt,g_inqa_m.inqapstid,g_inqa_m.inqapstdt, 
          g_inqa_m.inqasite_desc,g_inqa_m.inqa002_desc,g_inqa_m.inqa003_desc,g_inqa_m.inqaownid_desc, 
          g_inqa_m.inqaowndp_desc,g_inqa_m.inqacrtid_desc,g_inqa_m.inqacrtdp_desc,g_inqa_m.inqamodid_desc, 
          g_inqa_m.inqacnfid_desc,g_inqa_m.inqapstid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_inqa_m.inqa000,g_inqa_m.inqasite,g_inqa_m.inqasite_desc,g_inqa_m.inqadocdt,g_inqa_m.inqa001, 
          g_inqa_m.inqadocno,g_inqa_m.inqa002,g_inqa_m.inqa002_desc,g_inqa_m.inqa003,g_inqa_m.inqa003_desc, 
          g_inqa_m.inqa004,g_inqa_m.inqa004_desc,g_inqa_m.inqaunit,g_inqa_m.inqa005,g_inqa_m.inqa006, 
          g_inqa_m.inqa007,g_inqa_m.inqastus,g_inqa_m.inqaownid,g_inqa_m.inqaownid_desc,g_inqa_m.inqaowndp, 
          g_inqa_m.inqaowndp_desc,g_inqa_m.inqacrtid,g_inqa_m.inqacrtid_desc,g_inqa_m.inqacrtdp,g_inqa_m.inqacrtdp_desc, 
          g_inqa_m.inqacrtdt,g_inqa_m.inqamodid,g_inqa_m.inqamodid_desc,g_inqa_m.inqamoddt,g_inqa_m.inqacnfid, 
          g_inqa_m.inqacnfid_desc,g_inqa_m.inqacnfdt,g_inqa_m.inqapstid,g_inqa_m.inqapstid_desc,g_inqa_m.inqapstdt 

   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE aint950_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aint950_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aint950.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aint950_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="aint950.ui_browser_refresh" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aint950_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_inqadocno = g_inqa_m.inqadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aint950.ui_detailshow" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aint950_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aint950.ui_dialog" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION aint950_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aint950_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_inqa_m.* TO NULL
         CALL g_inqb_d.clear()
         CALL g_inqb2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL aint950_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aint950_fetch('') # reload data
               LET l_ac = 1
               CALL aint950_ui_detailshow() #Setting the current row 
         
               CALL aint950_idx_chk()
               #NEXT FIELD inqbseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_inqb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aint950_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               CALL aint950_b_fill2('2')
 
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL aint950_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         #第二階單身段落
         DISPLAY ARRAY g_inqb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aint950_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx2 = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在下階單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL aint950_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL aint950_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aint950_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aint950_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aint950_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aint950_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL aint950_set_act_visible()   
            CALL aint950_set_act_no_visible()
            IF NOT (g_inqa_m.inqadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " inqaent = '" ||g_enterprise|| "' AND",
                                  " inqadocno = '", g_inqa_m.inqadocno, "' "
 
               #填到對應位置
               CALL aint950_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "inqa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "inqb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL aint950_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "inqa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "inqb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL aint950_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL aint950_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aint950_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL aint950_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint950_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL aint950_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint950_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL aint950_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint950_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL aint950_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint950_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL aint950_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint950_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_inqb_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_inqb2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD inqbseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aint950_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aint950_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aint950_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aint950_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/ain/aint950_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aint950_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aint950_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION prog_inqa002
            LET g_action_choice="prog_inqa002"
            IF cl_auth_chk_act("prog_inqa002") THEN
               
               #add-point:ON ACTION prog_inqa002
               {<point name="menu.prog_inqa002" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION prog_inqa005
            LET g_action_choice="prog_inqa005"
            IF cl_auth_chk_act("prog_inqa005") THEN
               
               #add-point:ON ACTION prog_inqa005
               {<point name="menu.prog_inqa005" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION prog_inqa006
            LET g_action_choice="prog_inqa006"
            IF cl_auth_chk_act("prog_inqa006") THEN
               
               #add-point:ON ACTION prog_inqa006
               {<point name="menu.prog_inqa006" />}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL aint950_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aint950_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aint950_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_inqa_m.inqadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="aint950.ui_headershow" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aint950_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_inqa_m.inqadocno = g_browser[g_current_idx].b_inqadocno   
 
   EXECUTE aint950_master_referesh USING g_inqa_m.inqadocno INTO g_inqa_m.inqa000,g_inqa_m.inqasite, 
       g_inqa_m.inqadocdt,g_inqa_m.inqa001,g_inqa_m.inqadocno,g_inqa_m.inqa002,g_inqa_m.inqa003,g_inqa_m.inqa004, 
       g_inqa_m.inqaunit,g_inqa_m.inqa005,g_inqa_m.inqa006,g_inqa_m.inqa007,g_inqa_m.inqastus,g_inqa_m.inqaownid, 
       g_inqa_m.inqaowndp,g_inqa_m.inqacrtid,g_inqa_m.inqacrtdp,g_inqa_m.inqacrtdt,g_inqa_m.inqamodid, 
       g_inqa_m.inqamoddt,g_inqa_m.inqacnfid,g_inqa_m.inqacnfdt,g_inqa_m.inqapstid,g_inqa_m.inqapstdt, 
       g_inqa_m.inqasite_desc,g_inqa_m.inqa002_desc,g_inqa_m.inqa003_desc,g_inqa_m.inqaownid_desc,g_inqa_m.inqaowndp_desc, 
       g_inqa_m.inqacrtid_desc,g_inqa_m.inqacrtdp_desc,g_inqa_m.inqamodid_desc,g_inqa_m.inqacnfid_desc, 
       g_inqa_m.inqapstid_desc
   CALL aint950_inqa_t_mask()
   CALL aint950_show()
      
END FUNCTION
]]>
  </section>
  <section id="aint950.unlock_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aint950_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aint950_bcl
   END IF
   
 
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aint950_bcl2
   END IF
 
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aint950.update_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aint950_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "inqb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL aint950_inqb_t_mask_restore('restore_mask_o')
               
      UPDATE inqb_t 
         SET (inqbdocno,
              inqbseq
              ,inqb001,inqb002,inqb003,inqb004,inqb005,inqb006,inqb007,inqb008,inqb009,inqb010,inqbsite,inqbunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_inqb_d[g_detail_idx].inqb001,g_inqb_d[g_detail_idx].inqb002,g_inqb_d[g_detail_idx].inqb003, 
                  g_inqb_d[g_detail_idx].inqb004,g_inqb_d[g_detail_idx].inqb005,g_inqb_d[g_detail_idx].inqb006, 
                  g_inqb_d[g_detail_idx].inqb007,g_inqb_d[g_detail_idx].inqb008,g_inqb_d[g_detail_idx].inqb009, 
                  g_inqb_d[g_detail_idx].inqb010,g_inqb_d[g_detail_idx].inqbsite,g_inqb_d[g_detail_idx].inqbunit)  

         WHERE inqbent = g_enterprise AND inqbdocno = ps_keys_bak[1] AND inqbseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "inqb_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "inqb_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL aint950_inqb_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "inqc_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point
      
      #將遮罩欄位還原
      CALL aint950_inqc_t_mask_restore('restore_mask_o')
               
      UPDATE inqc_t 
         SET (inqcdocno,inqcseq,
              inqcseq1
              ,inqc001,inqc002,inqc003,inqc004,inqc005,inqc006,inqc007,inqc008,inqc009,inqc010,inqcsite,inqcunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_inqb2_d[g_detail_idx2].inqc001,g_inqb2_d[g_detail_idx2].inqc002,g_inqb2_d[g_detail_idx2].inqc003, 
                  g_inqb2_d[g_detail_idx2].inqc004,g_inqb2_d[g_detail_idx2].inqc005,g_inqb2_d[g_detail_idx2].inqc006, 
                  g_inqb2_d[g_detail_idx2].inqc007,g_inqb2_d[g_detail_idx2].inqc008,g_inqb2_d[g_detail_idx2].inqc009, 
                  g_inqb2_d[g_detail_idx2].inqc010,g_inqb2_d[g_detail_idx2].inqcsite,g_inqb2_d[g_detail_idx2].inqcunit)  

         WHERE inqcent = g_enterprise AND inqcdocno = ps_keys_bak[1] AND inqcseq = ps_keys_bak[2] AND inqcseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "inqc_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "inqc_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL aint950_inqc_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
