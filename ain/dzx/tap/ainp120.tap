<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="ainp120" std_prog="ainp120" erpver="1.0" module="AIN" ver="2" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="P" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="construct.c.imaa001" order="" ver="0" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa001  #顯示到畫面上
            NEXT FIELD imaa001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.imaa009" order="" ver="0" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa009  #顯示到畫面上
            NEXT FIELD imaa009                     #返回原欄位
    

]]>
  </point>
  <point name="process.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_imaa001 LIKE imaa_t.imaa001,
          l_inaj001 LIKE inaj_t.inaj001,
          l_inaj022 LIKE inaj_t.inaj022,
          l_success LIKE type_t.num5,
          l_ooba002 LIKE ooba_t.ooba002,
          l_imai037 LIKE imai_t.imai037,
          l_inag001 LIKE inag_t.inag001,
          l_inag002 LIKE inag_t.inag002,
          l_inag003 LIKE inag_t.inag003,
          l_inag004 LIKE inag_t.inag004,
          l_inag005 LIKE inag_t.inag005,
          l_inag006 LIKE inag_t.inag006,
          l_inaj022_max LIKE inaj_t.inaj022
   DEFINE l_cnt LIKE type_t.num10,
          l_count1 LIKE type_t.num10,
          l_count2 LIKE type_t.num10,
          l_stage  LIKE type_t.num10,
          l_stagenow STRING         ]]>
  </point>
  <point name="process.process" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
   CALL cl_err_collect_init()
   LET g_sql = " SELECT COUNT(DISTINCT imaa001) FROM imaa_t,inaj_t ",
               "  WHERE imaaent = inajent AND imaa001 = inaj005 ",
               "    AND imaaent = '",g_enterprise,"'",
               "    AND inajsite = '",g_site,"' AND ",g_master.wc   
   PREPARE p120_count1 FROM g_sql
   EXECUTE p120_count1 INTO l_count1
   
   LET g_sql = " SELECT COUNT(*) ",
               "   FROM (SELECT DISTINCT inag001,inag004,inag005,inag006",
               "   FROM inag_t,imaa_t ",
               "  WHERE inagent = imaaent AND inag001 = imaa001",
               "    AND inagent = '",g_enterprise,"'",
               "    AND inagsite = '",g_site,"' AND ",g_master.wc,")"
   PREPARE p120_count2 FROM g_sql 
   EXECUTE p120_count2 INTO l_count2
   
   LET l_stage = 0
   LET l_stagenow = ''   
   DISPLAY l_stage TO FORMONLY.stagecomplete
   DISPLAY l_stagenow TO FORMONLY.stagenow

   LET g_sql = " SELECT inaj001,inaj022 ",
               "   FROM inaj_t",
               "  WHERE inajent = '",g_enterprise,"'",
               "    AND inajsite = '",g_site,"'",
               "    AND inaj005 = ? ",
               "  ORDER BY inaj022 DESC "
   PREPARE get_inaj022_pre1 FROM g_sql
   DECLARE get_inaj022_cur1 CURSOR FOR get_inaj022_pre1 

   LET g_sql = " SELECT inaj001,inaj022 ",
               "   FROM inaj_t",
               "  WHERE inajent = '",g_enterprise,"'",
               "    AND inajsite = '",g_site,"'",
               "    AND inaj005 = ? ",
               "    AND inaj006 = ? ",
               "    AND inaj007 = ? ",
               "    AND inaj008 = ? ",
               "    AND inaj009 = ? ",
               "    AND inaj010 = ? ",               
               "  ORDER BY inaj022 DESC "
   PREPARE get_inaj022_pre2 FROM g_sql
   DECLARE get_inaj022_cur2 CURSOR FOR get_inaj022_pre2
   
   LET l_cnt = 1
   LET g_sql = " SELECT DISTINCT imaa001 FROM imaa_t,inaj_t ",
               "  WHERE imaaent = inajent AND imaa001 = inaj005 ",
               "    AND imaaent = '",g_enterprise,"'",
               "    AND inajsite = '",g_site,"' AND ",g_master.wc
   PREPARE p120_pre1 FROM g_sql
   DECLARE p120_cur1 CURSOR FOR p120_pre1
   FOREACH p120_cur1 INTO l_imaa001
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
       
      LET l_stage = l_cnt/(l_count1+l_count2)*100
      LET l_stagenow = l_imaa001  
      DISPLAY l_stage TO FORMONLY.stagecomplete
      DISPLAY l_stagenow TO FORMONLY.stagenow      
      LET l_inaj022_max = ''
      FOREACH get_inaj022_cur1 USING l_imaa001 INTO l_inaj001,l_inaj022 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()
        
            EXIT FOREACH
         END IF  
         CALL s_aooi200_get_slip(l_inaj001) RETURNING l_success,l_ooba002
         IF cl_get_doc_para(g_enterprise,g_site,l_ooba002,'D-MFG-0010') = 'Y' THEN 
            LET l_inaj022_max = l_inaj022
            EXIT FOREACH
         ELSE
            CONTINUE FOREACH            
         END IF
      END FOREACH
      
      IF NOT cl_null(l_inaj022_max) THEN 
         SELECT imai037 INTO l_imai037
           FROM imai_t
          WHERE imaient = g_enterprise
            AND imaisite = g_site
            AND imai001 = l_imaa001
         IF cl_null(l_imai037) OR (NOT cl_null(l_imai037) AND l_imai037 <= l_inaj022_max) THEN 
            UPDATE imai_t
               SET imai037 = l_inaj022_max
             WHERE imaient = g_enterprise
               AND imaisite = g_site
               AND imai001 = l_imaa001
            IF SQLCA.sqlcode THEN   
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = l_imaa001
               LET g_errparam.popup = TRUE
               CALL cl_err()
               CALL cl_err_collect_show()
            END IF                    
         END IF
      END IF
      LET l_cnt = l_cnt + 1
   END FOREACH 
   
   LET g_sql = " SELECT DISTINCT inag001,inag002,inag003,inag004,inag005,inag006 ",
               "   FROM inag_t,imaa_t ",
               "  WHERE inagent = imaaent AND inag001 = imaa001",
               "    AND inagent = '",g_enterprise,"'",
               "    AND inagsite = '",g_site,"' AND ",g_master.wc
   PREPARE p120_pre2 FROM g_sql
   DECLARE p120_cur2 CURSOR FOR p120_pre2
   FOREACH p120_cur2 INTO l_inag001,l_inag002,l_inag003,l_inag004,l_inag005,l_inag006
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF
      
      LET l_stage = l_cnt/(l_count1+l_count2)*100
      LET l_stagenow = l_inag001  
      DISPLAY l_stage TO FORMONLY.stagecomplete
      DISPLAY l_stagenow TO FORMONLY.stagenow       
      LET l_inaj022_max = ''
      FOREACH get_inaj022_cur2 USING l_inag001,l_inag002,l_inag003,l_inag004,l_inag005,l_inag006 INTO l_inaj001,l_inaj022 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()
        
            EXIT FOREACH
         END IF  
         CALL s_aooi200_get_slip(l_inaj001) RETURNING l_success,l_ooba002
         IF cl_get_doc_para(g_enterprise,g_site,l_ooba002,'D-MFG-0010') = 'Y' THEN 
            LET l_inaj022_max = l_inaj022
            EXIT FOREACH
         ELSE
            CONTINUE FOREACH            
         END IF
      END FOREACH
      IF NOT cl_null(l_inaj022_max) THEN       
         UPDATE inag_t
            SET inag016 = l_inaj022_max
          WHERE inagent = g_enterprise
            AND inagsite = g_site
            AND inag001 = l_inag001
            AND inag002 = l_inag002
            AND inag003 = l_inag003
            AND inag004 = l_inag004 
            AND inag005 = l_inag005
            AND inag006 = l_inag006
         IF SQLCA.sqlcode THEN   
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = l_inag001
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL cl_err_collect_show()
         END IF 
      END IF         
   END FOREACH 
   LET l_stage = 100  
   DISPLAY l_stage TO FORMONLY.stagecomplete     
]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET l_stage = 0
      LET l_stagenow = '' 
      DISPLAY l_stage TO FORMONLY.stagecomplete
      DISPLAY l_stagenow TO FORMONLY.stagenow ]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_stage  LIKE type_t.num10,
          l_stagenow STRING ]]>
  </point>
  <section id="ainp120.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000020
#+ 
#+ Filename...: ainp120
#+ Description: 呆滯日重新計算作業
#+ Creator....: 02295(2014-10-27 15:30:09)
#+ Modifier...: 02295(2014-12-17 15:24:53) -SD/PR-
]]>
  </section>
  <section id="ainp120.get_buffer" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION ainp120_get_buffer(p_dialog)
   DEFINE p_dialog   ui.DIALOG
   
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   {<point name="get_buffer.others"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="ainp120.global" ver="4" status="" src="s" readonly="">
    <![CDATA[#應用 p01 樣板自動產生(Version:10)
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       imaa001 LIKE type_t.chr500, 
   imaa009 LIKE type_t.chr10, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="ainp120.init" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 初始化作業
PRIVATE FUNCTION ainp120_init()
   #add-point:init段define 
   {<point name="init.define" edit="s"/>}
   #end add-point
   #add-point:init段define (客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ainp120.main" ver="3" status="" src="s" readonly="">
    <![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   {<point name="main.define" edit="s"/>}
   #end add-point 
   #add-point:main段define (客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL ainp120_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ainp120 WITH FORM cl_ap_formpath("ain",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL ainp120_init()
 
      #進入選單 Menu (="N")
      CALL ainp120_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_ainp120
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
  </section>
  <section id="ainp120.msgcentre_notify" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION ainp120_msgcentre_notify()
 
   DEFINE lc_state LIKE type_t.chr5
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知
   {<point name="msg_centre.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
]]>
  </section>
  <section id="ainp120.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
  <section id="ainp120.process" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION ainp120_process(ls_js)
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define 
   {<point name="process.define" edit="s"/>}
   #end add-point
   #add-point:process段define (客製用)
   {<point name="process.define_customerization" edit="c"/>}
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE ainp120_process_cs CURSOR FROM ls_sql
#  FOREACH ainp120_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL ainp120_msgcentre_notify()
 
END FUNCTION
]]>
  </section>
  <section id="ainp120.transfer_argv" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION ainp120_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   {<point name="transfer_agrv.define" edit="s"/>}
   #end add-point
   #add-point:transfer_agrv段define (客製用)
   {<point name="transfer_agrv.define_customerization" edit="c"/>}
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
  </section>
  <section id="ainp120.ui_dialog" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION ainp120_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define (客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      {<point name="ui_dialog.before_dialog2"/>}
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         
         
         #應用 a58 樣板自動產生(Version:2)
         CONSTRUCT BY NAME g_master.wc ON imaa001,imaa009
            BEFORE CONSTRUCT
               #add-point:cs段before_construct
               {<point name="cs.head.before_construct"/>}
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.imaa001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaa001
            #add-point:ON ACTION controlp INFIELD imaa001
            {<point name="construct.c.imaa001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaa001
            #add-point:BEFORE FIELD imaa001
            {<point name="construct.b.imaa001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaa001
            
            #add-point:AFTER FIELD imaa001
            {<point name="construct.a.imaa001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaa009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaa009
            #add-point:ON ACTION controlp INFIELD imaa009
            {<point name="construct.c.imaa009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaa009
            #add-point:BEFORE FIELD imaa009
            {<point name="construct.b.imaa009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaa009
            
            #add-point:AFTER FIELD imaa009
            {<point name="construct.a.imaa009" />}
            #END add-point
            
 
 
            
            #add-point:其他管控
            {<point name="cs.other"/>}
            #end add-point
            
         END CONSTRUCT
 
 
      
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL ainp120_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog
            {<point name="ui_dialog.before_dialog3"/>}
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear
         {<point name="ui_dialog.before_qbeclear" mark="Y"/>}
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL ainp120_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL ainp120_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = ainp120_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         {<point name="process.after_schedule"/>}
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
  </section>
</add_points>
